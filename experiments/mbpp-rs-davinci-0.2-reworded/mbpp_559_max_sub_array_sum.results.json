{
  "name": "mbpp_559_max_sub_array_sum",
  "language": "rs",
  "prompt": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_559_max_sub_array_sum.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpr60uqm7y.rs:6:20\n  |\n6 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpr60uqm7y.rs:7:22\n  |\n7 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmpr60uqm7y.rs:6:24\n  |\n6 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmpr60uqm7y.rs:6:41\n  |\n6 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size as usize {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpcqkhxzuw.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpcqkhxzuw.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = 0;\n    let mut max_ending_here = 0;\n    for i in 0..size {\n        max_ending_here = max_ending_here + a[i as usize];\n        if max_ending_here < 0 {\n            max_ending_here = 0;\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = 0;\n    let mut max_ending_here = 0;\n\n    for i in 0..size {\n        max_ending_here = max_ending_here + a[i as usize];\n        if max_ending_here < 0 {\n            max_ending_here = 0;\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpr60uqm7y.rs:6:20\n  |\n6 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpr60uqm7y.rs:7:22\n  |\n7 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmpr60uqm7y.rs:6:24\n  |\n6 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmpr60uqm7y.rs:6:41\n  |\n6 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpr60uqm7y.rs:6:20\n  |\n6 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpr60uqm7y.rs:7:22\n  |\n7 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmpr60uqm7y.rs:6:24\n  |\n6 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmpr60uqm7y.rs:6:41\n  |\n6 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = 0;\n    let mut max_ending_here = 0;\n    for i in 0..size {\n        max_ending_here = max_ending_here + a[i as usize];\n        if max_ending_here < 0 {\n            max_ending_here = 0;\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = 0;\n    let mut max_ending_here = 0;\n\n    for i in 0..size {\n        max_ending_here = max_ending_here + a[i as usize];\n        if max_ending_here < 0 {\n            max_ending_here = 0;\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = 0;\n    let mut max_ending_here = 0;\n    for i in 0..size {\n        max_ending_here = max_ending_here + a[i as usize];\n        if max_ending_here < 0 {\n            max_ending_here = 0;\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = std::cmp::max(a[i], curr_max + a[i]);\n        max_so_far = std::cmp::max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1666123179,
      "stdout": "",
      "stderr": "error[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmpe4emi6jj.rs:7:34\n  |\n7 |         curr_max = std::cmp::max(a[i], curr_max + a[i]);\n  |                                  ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmpe4emi6jj.rs:7:51\n  |\n7 |         curr_max = std::cmp::max(a[i], curr_max + a[i]);\n  |                                                   ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = std::cmp::max(a[i], curr_max + a[i]);\n        max_so_far = std::cmp::max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1666123179,
      "stdout": "",
      "stderr": "error[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmpe4emi6jj.rs:7:34\n  |\n7 |         curr_max = std::cmp::max(a[i], curr_max + a[i]);\n  |                                  ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmpe4emi6jj.rs:7:51\n  |\n7 |         curr_max = std::cmp::max(a[i], curr_max + a[i]);\n  |                                                   ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = 0;\n    let mut max_ending_here = 0;\n    for i in 0..size {\n        max_ending_here = max_ending_here + a[i as usize];\n        if max_ending_here < 0 {\n            max_ending_here = 0;\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = 0;\n    let mut max_ending_here = 0;\n    for i in 0..size {\n        max_ending_here = max_ending_here + a[i as usize];\n        if max_ending_here < 0 {\n            max_ending_here = 0;\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = std::cmp::max(a[i], curr_max + a[i]);\n        max_so_far = std::cmp::max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1666123179,
      "stdout": "",
      "stderr": "error[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmpe4emi6jj.rs:7:34\n  |\n7 |         curr_max = std::cmp::max(a[i], curr_max + a[i]);\n  |                                  ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmpe4emi6jj.rs:7:51\n  |\n7 |         curr_max = std::cmp::max(a[i], curr_max + a[i]);\n  |                                                   ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = std::isize::MIN;\n    let mut max_ending_here = 0;\n\n    for i in 0..size {\n        max_ending_here = max_ending_here + a[i as usize];\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n        if max_ending_here < 0 {\n            max_ending_here = 0;\n        }\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1666123179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = 0;\n    let mut max_ending_here = 0;\n\n    for i in 0..size {\n        max_ending_here = max_ending_here + a[i as usize];\n        if max_ending_here < 0 {\n            max_ending_here = 0;\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = 0;\n    let mut max_ending_here = 0;\n    for i in 0..size {\n        max_ending_here = max_ending_here + a[i as usize];\n        if max_ending_here < 0 {\n            max_ending_here = 0;\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = std::cmp::max(a[i], curr_max + a[i]);\n        max_so_far = std::cmp::max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1666123179,
      "stdout": "",
      "stderr": "error[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmpe4emi6jj.rs:7:34\n  |\n7 |         curr_max = std::cmp::max(a[i], curr_max + a[i]);\n  |                                  ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmpe4emi6jj.rs:7:51\n  |\n7 |         curr_max = std::cmp::max(a[i], curr_max + a[i]);\n  |                                                   ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1666123179,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpud1ggizf.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpud1ggizf.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmpud1ggizf.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmpud1ggizf.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = 0;\n    let mut max_ending_here = 0;\n    for i in 0..size {\n        max_ending_here = max_ending_here + a[i as usize];\n        if max_ending_here < 0 {\n            max_ending_here = 0;\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = 0;\n    let mut max_ending_here = 0;\n    for i in 0..size {\n        max_ending_here = max_ending_here + a[i as usize];\n        if max_ending_here < 0 {\n            max_ending_here = 0;\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = 0;\n    let mut max_ending_here = 0;\n\n    for i in 0..size {\n        max_ending_here = max_ending_here + a[i as usize];\n        if max_ending_here < 0 {\n            max_ending_here = 0;\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = std::cmp::max(a[i], curr_max + a[i]);\n        max_so_far = std::cmp::max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1666123179,
      "stdout": "",
      "stderr": "error[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmpe4emi6jj.rs:7:34\n  |\n7 |         curr_max = std::cmp::max(a[i], curr_max + a[i]);\n  |                                  ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmpe4emi6jj.rs:7:51\n  |\n7 |         curr_max = std::cmp::max(a[i], curr_max + a[i]);\n  |                                                   ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = 0;\n    let mut max_ending_here = 0;\n    let mut start = 0;\n    let mut end = 0;\n    let mut s = 0;\n\n    for i in 0..size {\n        max_ending_here += a[i as usize];\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n\n        if max_ending_here < 0 {\n            max_ending_here = 0;\n            s = i + 1;\n        }\n    }\n    println!(\"Maximum contiguous sum is {}\", max_so_far);\n    println!(\"Starting index {}\", start);\n    println!(\"Ending index {}\", end);\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1666123179,
      "stdout": "Maximum contiguous sum is 7\nStarting index 2\nEnding index 6\nMaximum contiguous sum is 8\nStarting index 2\nEnding index 6\nMaximum contiguous sum is 10\nStarting index 5\nEnding index 6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size as usize {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpcqkhxzuw.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpcqkhxzuw.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size as usize {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpcqkhxzuw.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpcqkhxzuw.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = 0;\n    let mut max_ending_here = 0;\n    for i in 0..size {\n        max_ending_here = max_ending_here + a[i as usize];\n        if max_ending_here < 0 {\n            max_ending_here = 0;\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpr60uqm7y.rs:6:20\n  |\n6 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpr60uqm7y.rs:7:22\n  |\n7 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmpr60uqm7y.rs:6:24\n  |\n6 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmpr60uqm7y.rs:6:41\n  |\n6 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far: isize = 0;\n    let mut max_ending_here: isize = 0;\n    let mut start: isize = 0;\n    let mut end: isize = 0;\n    let mut s: isize = 0;\n\n    for i in 0..size {\n        max_ending_here += a[i as usize];\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n\n        if max_ending_here < 0 {\n            max_ending_here = 0;\n            s = i + 1;\n        }\n    }\n    println!(\"Maximum contiguous sum is {}\", max_so_far);\n    println!(\"Starting index {}\", start);\n    println!(\"Ending index {}\", end);\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1666123179,
      "stdout": "Maximum contiguous sum is 7\nStarting index 2\nEnding index 6\nMaximum contiguous sum is 8\nStarting index 2\nEnding index 6\nMaximum contiguous sum is 10\nStarting index 5\nEnding index 6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = 0;\n    let mut max_ending_here = 0;\n    for i in 0..size {\n        max_ending_here = max_ending_here + a[i as usize];\n        if max_ending_here < 0 {\n            max_ending_here = 0;\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = 0;\n    let mut max_ending_here = 0;\n    let mut start = 0;\n    let mut end = 0;\n    let mut s = 0;\n\n    for i in 0..size {\n        max_ending_here += a[i as usize];\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n\n        if max_ending_here < 0 {\n            max_ending_here = 0;\n            s = i + 1;\n        }\n    }\n\n    println!(\"Maximum contiguous sum is {}\", max_so_far);\n    println!(\"Starting index {}\", start);\n    println!(\"Ending index {}\", end);\n\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1666123179,
      "stdout": "Maximum contiguous sum is 7\nStarting index 2\nEnding index 6\nMaximum contiguous sum is 8\nStarting index 2\nEnding index 6\nMaximum contiguous sum is 10\nStarting index 5\nEnding index 6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = std::cmp::max(a[i], curr_max + a[i]);\n        max_so_far = std::cmp::max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1666123179,
      "stdout": "",
      "stderr": "error[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmpe4emi6jj.rs:7:34\n  |\n7 |         curr_max = std::cmp::max(a[i], curr_max + a[i]);\n  |                                  ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmpe4emi6jj.rs:7:51\n  |\n7 |         curr_max = std::cmp::max(a[i], curr_max + a[i]);\n  |                                                   ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = std::cmp::max(a[i as usize], curr_max + a[i as usize]);\n        max_so_far = std::cmp::max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1666123179,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = 0;\n    let mut max_ending_here = 0;\n    for i in 0..size {\n        max_ending_here = max_ending_here + a[i as usize];\n        if max_ending_here < 0 {\n            max_ending_here = 0;\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = 0;\n    let mut max_ending_here = 0;\n    for i in 0..size {\n        max_ending_here = max_ending_here + a[i as usize];\n        if max_ending_here < 0 {\n            max_ending_here = 0;\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = std::cmp::max(a[i], curr_max + a[i]);\n        max_so_far = std::cmp::max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1666123179,
      "stdout": "",
      "stderr": "error[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmpe4emi6jj.rs:7:34\n  |\n7 |         curr_max = std::cmp::max(a[i], curr_max + a[i]);\n  |                                  ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmpe4emi6jj.rs:7:51\n  |\n7 |         curr_max = std::cmp::max(a[i], curr_max + a[i]);\n  |                                                   ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpr60uqm7y.rs:6:20\n  |\n6 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmpr60uqm7y.rs:7:22\n  |\n7 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmpr60uqm7y.rs:6:24\n  |\n6 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmpr60uqm7y.rs:6:41\n  |\n6 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the sum of the largest contiguous subvector in the given vector.\nfn max_sub_array_sum(a: Vec<isize>, size: isize) -> isize {\n    let mut max_so_far = a[0];\n    let mut curr_max = a[0];\n\n    for i in 1..size {\n        curr_max = max(a[i], curr_max + a[i]);\n        max_so_far = max(max_so_far, curr_max);\n    }\n    max_so_far\n}\n\nfn main() {\n    let candidate = max_sub_array_sum;\n    assert_eq!(candidate(vec![-2, -3, 4, -1, -2, 1, 5, -3], 8), 7);\n    assert_eq!(candidate(vec![-3, -4, 5, -2, -3, 2, 6, -4], 8), 8);\n    assert_eq!(candidate(vec![-4, -5, 6, -3, -4, 3, 7, -5], 8), 10);\n}\n",
      "timestamp": 1665510425,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:7:20\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                    ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0425]: cannot find function `max` in this scope\n --> /tmp/tmp15zav_tp.rs:8:22\n  |\n8 |         max_so_far = max(max_so_far, curr_max);\n  |                      ^^^ not found in this scope\n  |\nhelp: consider importing this function\n  |\n1 | use std::cmp::max;\n  |\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:24\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                        ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp15zav_tp.rs:7:41\n  |\n7 |         curr_max = max(a[i], curr_max + a[i]);\n  |                                         ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
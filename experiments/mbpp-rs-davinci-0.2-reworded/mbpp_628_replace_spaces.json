{
  "name": "mbpp_628_replace_spaces",
  "language": "rs",
  "prompt": "/// Write a function to replace all spaces in the given string with '%20'.\nfn replace_spaces(string: String) -> String {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_628_replace_spaces.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = replace_spaces;\n    assert_eq!(candidate(String::from(\"My Name is Dawood\")), String::from(\"My%20Name%20is%20Dawood\"));\n    assert_eq!(candidate(String::from(\"I am a Programmer\")), String::from(\"I%20am%20a%20Programmer\"));\n    assert_eq!(candidate(String::from(\"I love Coding\")), String::from(\"I%20love%20Coding\"));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    string.replace(\" \", \"%20\")",
    "    let mut result = String::new();\n    for c in string.chars() {\n        if c == ' ' {\n            result.push_str(\"%20\");\n        } else {\n            result.push(c);\n        }\n    }\n    result",
    "    let mut result = String::new();\n    for c in string.chars() {\n        if c == ' ' {\n            result.push_str(\"%20\");\n        } else {\n            result.push(c);\n        }\n    }\n    result",
    "    string.replace(\" \", \"%20\")",
    "    string.replace(\" \", \"%20\")",
    "    let mut result = String::new();\n    for c in string.chars() {\n        if c == ' ' {\n            result.push_str(\"%20\");\n        } else {\n            result.push(c);\n        }\n    }\n    result",
    "    let mut result = String::new();\n    for c in string.chars() {\n        if c == ' ' {\n            result.push_str(\"%20\");\n        } else {\n            result.push(c);\n        }\n    }\n    result",
    "    string.replace(\" \", \"%20\")",
    "    let mut result = String::new();\n    for c in string.chars() {\n        if c == ' ' {\n            result.push_str(\"%20\");\n        } else {\n            result.push(c);\n        }\n    }\n    result",
    "    let mut result = String::new();\n    for c in string.chars() {\n        if c == ' ' {\n            result.push_str(\"%20\");\n        } else {\n            result.push(c);\n        }\n    }\n    result",
    "    let mut result = String::new();\n    for c in string.chars() {\n        if c == ' ' {\n            result.push_str(\"%20\");\n        } else {\n            result.push(c);\n        }\n    }\n    result",
    "    let mut result = String::new();\n    for c in string.chars() {\n        if c == ' ' {\n            result.push_str(\"%20\");\n        } else {\n            result.push(c);\n        }\n    }\n    result",
    "    let mut result = String::new();\n    for c in string.chars() {\n        if c == ' ' {\n            result.push_str(\"%20\");\n        } else {\n            result.push(c);\n        }\n    }\n    result",
    "    string.replace(\" \", \"%20\")",
    "    let mut result = String::new();\n    for c in string.chars() {\n        if c == ' ' {\n            result.push_str(\"%20\");\n        } else {\n            result.push(c);\n        }\n    }\n    result",
    "    let mut new_string = String::new();\n    for c in string.chars() {\n        if c == ' ' {\n            new_string.push_str(\"%20\");\n        } else {\n            new_string.push(c);\n        }\n    }\n    new_string",
    "    let mut chars = string.chars();\n    let mut result = String::new();\n    while let Some(c) = chars.next() {\n        if c == ' ' {\n            result.push_str(\"%20\");\n        } else {\n            result.push(c);\n        }\n    }\n    result",
    "    let mut result = String::new();\n    for c in string.chars() {\n        if c == ' ' {\n            result.push_str(\"%20\");\n        } else {\n            result.push(c);\n        }\n    }\n    result",
    "    string.replace(\" \", \"%20\")",
    "    let mut result = String::new();\n    for c in string.chars() {\n        if c == ' ' {\n            result.push_str(\"%20\");\n        } else {\n            result.push(c);\n        }\n    }\n    result"
  ]
}
{
  "name": "mbpp_138_is_Sum_Of_Powers_Of_Two",
  "language": "rs",
  "prompt": "/// Write a rsthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nfn is_Sum_Of_Powers_Of_Two(n: isize) -> bool {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_138_is_Sum_Of_Powers_Of_Two.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = is_Sum_Of_Powers_Of_Two;\n    assert_eq!(candidate(10), true);\n    assert_eq!(candidate(7), false);\n    assert_eq!(candidate(14), true);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut n = n;\n    while n > 0 {\n        if n & (n - 1) == 0 {\n            return true;\n        }\n        n -= 1;\n    }\n    false",
    "    let mut n = n;\n    while n > 0 {\n        if n & (n - 1) == 0 {\n            return true;\n        }\n        n -= 1;\n    }\n    false",
    "    let mut n = n;\n    let mut sum = 0;\n    while n > 0 {\n        if n & 1 == 1 {\n            sum += 1;\n        }\n        n >>= 1;\n    }\n    sum == 1",
    "    let mut n = n;\n    while n > 0 {\n        if n & (n - 1) == 0 {\n            return true;\n        }\n        n -= 1;\n    }\n    false",
    "    let mut n = n;\n    while n > 0 {\n        if n & (n - 1) == 0 {\n            return true;\n        }\n        n -= n & (-n);\n    }\n    false",
    "    let mut n = n;\n    while n > 0 {\n        if n & (n - 1) == 0 {\n            return true;\n        }\n        n -= 1;\n    }\n    false",
    "    let mut num = n;\n    while num > 0 {\n        if num & (num - 1) == 0 {\n            return true;\n        }\n        num -= 1;\n    }\n    return false;",
    "    let mut n = n;\n    let mut sum = 0;\n    while n > 0 {\n        let mut i = 1;\n        while i <= n {\n            i *= 2;\n        }\n        i /= 2;\n        n -= i;\n        sum += i;\n    }\n    sum == n",
    "    let mut n = n;\n    while n != 0 {\n        if n & (n - 1) == 0 {\n            return true;\n        }\n        n = n - (n & -n);\n    }\n    false",
    "    let mut n = n;\n    while n > 0 {\n        if n & (n - 1) == 0 {\n            return true;\n        }\n        n -= 1;\n    }\n    return false;",
    "    let mut n = n;\n    let mut sum = 0;\n    while n > 0 {\n        sum += n & 1;\n        n >>= 1;\n    }\n    sum == 1",
    "    let mut n = n;\n    while n > 0 {\n        if n & (n - 1) == 0 {\n            return true;\n        }\n        n -= 1;\n    }\n    false",
    "    let mut num = n;\n    while num > 0 {\n        if num & (num - 1) == 0 {\n            return true;\n        }\n        num -= 1;\n    }\n    false",
    "    let mut n = n;\n    let mut sum = 0;\n    while n > 0 {\n        let rem = n % 2;\n        n = n / 2;\n        sum += rem;\n    }\n    sum == 1",
    "    let mut n = n;\n    let mut sum = 0;\n    while n > 0 {\n        sum += n & 1;\n        n >>= 1;\n    }\n    sum == 1",
    "    let mut n = n;\n    while n > 0 {\n        if n & (n - 1) == 0 {\n            return true;\n        }\n        n -= 1;\n    }\n    false",
    "    let mut n = n;\n    while n > 0 {\n        if n & (n - 1) == 0 {\n            return true;\n        }\n        n -= 1;\n    }\n    false",
    "    let mut n = n;\n    while n > 0 {\n        if n & (n - 1) == 0 {\n            return true;\n        }\n        n = n - (n & (-n));\n    }\n    return false;",
    "    let mut n = n;\n    while n != 0 {\n        if n & (n - 1) == 0 {\n            return true;\n        }\n        n = n - (n & -n);\n    }\n    false",
    "    let mut num = n;\n    let mut sum = 0;\n    while num > 0 {\n        sum += num & 1;\n        num >>= 1;\n    }\n    sum == 1"
  ]
}
{
  "name": "mbpp_623_nth_nums",
  "language": "rs",
  "prompt": "/// Write a function to compute the n-th power of each number in a vector.\nfn nth_nums(nums: Vec<isize>, n: isize) -> Vec<isize> {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_623_nth_nums.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = nth_nums;\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 2), vec![1, 4, 9, 16, 25, 36, 49, 64, 81, 100]);\n    assert_eq!(candidate(vec![10, 20, 30], 3), vec![1000, 8000, 27000]);\n    assert_eq!(candidate(vec![12, 15], 5), vec![248832, 759375]);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    nums.iter().map(|x| x.pow(n as u32)).collect()",
    "    nums.iter().map(|x| x.pow(n as u32)).collect()",
    "    nums.iter().map(|x| x.pow(n as u32)).collect()",
    "    nums.iter().map(|x| x.pow(n as u32)).collect()",
    "    nums.iter().map(|x| x.pow(n)).collect()",
    "    nums.into_iter().map(|x| x.pow(n as u32)).collect()",
    "    nums.iter().map(|x| x.pow(n as u32)).collect()",
    "    nums.iter().map(|x| x.pow(n as u32)).collect()",
    "    nums.iter().map(|x| x.pow(n as u32)).collect()",
    "    nums.iter().map(|x| x.pow(n)).collect()",
    "    nums.iter().map(|x| x.pow(n)).collect()",
    "    nums.into_iter().map(|x| x.pow(n as u32)).collect()",
    "    nums.iter().map(|x| x.pow(n)).collect()",
    "    nums.iter().map(|x| x.pow(n as u32)).collect()",
    "    nums.iter().map(|x| x.pow(n as u32)).collect()",
    "    nums.into_iter().map(|x| x.pow(n as u32)).collect()",
    "    nums.iter().map(|x| x.pow(n)).collect()",
    "    nums.iter().map(|x| x.pow(n)).collect()",
    "    nums.iter().map(|x| x.pow(n)).collect()",
    "    nums.iter().map(|x| x.pow(n as u32)).collect()"
  ]
}
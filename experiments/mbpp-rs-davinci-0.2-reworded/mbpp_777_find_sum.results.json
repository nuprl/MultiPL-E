{
  "name": "mbpp_777_find_sum",
  "language": "rs",
  "prompt": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_777_find_sum.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    let mut j = 1;\n    while i < arr.len() {\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n        j = i + 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpm5k4t1p7.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        if map.contains_key(&i) {\n            let count = map.get(&i).unwrap();\n            map.insert(i, count + 1);\n        } else {\n            map.insert(i, 1);\n        }\n    }\n    for (key, value) in map {\n        if value == 1 {\n            sum += key;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpaqughes_.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        let mut found = false;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                found = true;\n                break;\n            }\n            j += 1;\n        }\n        if !found {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = false;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = true;\n                break;\n            }\n        }\n        if !flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpo4yom296.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        let mut flag = true;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n            j += 1;\n        }\n        if flag {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        if map.contains_key(&i) {\n            let count = map.get(&i).unwrap();\n            map.insert(i, count + 1);\n        } else {\n            map.insert(i, 1);\n        }\n    }\n    for (k, v) in map {\n        if v == 1 {\n            sum += k;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpt_k9l6jg.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp561ggfde.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.contains(&i) {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpt6pfm1ni.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.contains(&i) {\n    |            ^^^^^^^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp561ggfde.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    let mut j = 1;\n    while i < arr.len() {\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n        j = i + 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut count = 0;\n        for j in 0..arr.len() {\n            if arr[i] == arr[j] {\n                count += 1;\n            }\n        }\n        if count == 1 {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmp8qps0ry1.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    let mut j = 1;\n    while i < arr.len() {\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n        j = i + 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        if map.contains_key(&i) {\n            let count = map.get(&i).unwrap();\n            map.insert(i, count + 1);\n        } else {\n            map.insert(i, 1);\n        }\n    }\n    for (k, v) in map {\n        if v == 1 {\n            sum += k;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpt_k9l6jg.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        if map.contains_key(&i) {\n            let count = map.get_mut(&i).unwrap();\n            *count += 1;\n        } else {\n            map.insert(i, 1);\n        }\n    }\n    for (key, value) in map {\n        if value == 1 {\n            sum += key;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpgca5jfun.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpkoiqfdda.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if !arr.contains(&i) {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmp0i14n171.rs:5:13\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if !arr.contains(&i) {\n    |             ^^^^^^^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    let mut j = 1;\n    while i < arr.len() {\n        if j < arr.len() {\n            if arr[i] != arr[j] {\n                sum += arr[i];\n                i += 1;\n                j += 1;\n            } else {\n                i += 2;\n                j += 2;\n            }\n        } else {\n            sum += arr[i];\n            i += 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `75`,\n right: `71`', /tmp/tmpw_bata2l.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.contains(&i) {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpt6pfm1ni.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.contains(&i) {\n    |            ^^^^^^^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `23`,\n right: `21`', /tmp/tmpovlbh57_.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum: isize = 0;\n    let mut i: usize = 0;\n    while i < arr.len() {\n        let mut j: usize = 0;\n        let mut found: bool = false;\n        while j < arr.len() {\n            if i != j && arr[i] == arr[j] {\n                found = true;\n                break;\n            }\n            j += 1;\n        }\n        if !found {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpo6k2ijj4.rs:25:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp561ggfde.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut count = 0;\n        for j in 0..arr.len() {\n            if arr[i] == arr[j] {\n                count += 1;\n            }\n        }\n        if count == 1 {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmp8qps0ry1.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        let mut found = false;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                found = true;\n                break;\n            }\n            j += 1;\n        }\n        if !found {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut arr = arr;\n    arr.sort();\n    let mut i = 0;\n    while i < arr.len() {\n        if i == arr.len() - 1 {\n            sum += arr[i];\n            break;\n        }\n        if arr[i] != arr[i + 1] {\n            sum += arr[i];\n        } else {\n            i += 1;\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `67`,\n right: `71`', /tmp/tmpy_zzworw.rs:25:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp561ggfde.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = 0;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = 1;\n                break;\n            }\n        }\n        if flag == 0 {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmplfcq2odu.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut count = 0;\n        for j in 0..arr.len() {\n            if arr[i] == arr[j] {\n                count += 1;\n            }\n        }\n        if count == 1 {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmp8qps0ry1.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp561ggfde.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if !arr.contains(&i) {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmp0i14n171.rs:5:13\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if !arr.contains(&i) {\n    |             ^^^^^^^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        if map.contains_key(&i) {\n            let count = map.get(&i).unwrap();\n            map.insert(i, count + 1);\n        } else {\n            map.insert(i, 1);\n        }\n    }\n    for (key, value) in map {\n        if value == 1 {\n            sum += key;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpaqughes_.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp561ggfde.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    let mut j = 1;\n    while i < arr.len() {\n        if j < arr.len() {\n            if arr[i] != arr[j] {\n                sum += arr[i];\n                i += 1;\n                j += 1;\n            } else {\n                i += 2;\n                j += 2;\n            }\n        } else {\n            sum += arr[i];\n            i += 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `75`,\n right: `71`', /tmp/tmpw_bata2l.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp561ggfde.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut found = false;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                found = true;\n                break;\n            }\n        }\n        if !found {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmp54b6qklw.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        let mut is_repeated = false;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                is_repeated = true;\n                break;\n            }\n            j += 1;\n        }\n        if !is_repeated {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut is_repeated = false;\n        for j in 0..arr.len() {\n            if arr[i] == arr[j] && i != j {\n                is_repeated = true;\n                break;\n            }\n        }\n        if !is_repeated {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpof0339d3.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut count = 0;\n        for j in 0..arr.len() {\n            if arr[i] == arr[j] {\n                count += 1;\n            }\n        }\n        if count == 1 {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmp8qps0ry1.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `23`,\n right: `21`', /tmp/tmpovlbh57_.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if !arr.contains(&i) {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmp0i14n171.rs:5:13\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if !arr.contains(&i) {\n    |             ^^^^^^^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut found = false;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                found = true;\n                break;\n            }\n        }\n        if !found {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmp54b6qklw.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp561ggfde.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = false;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = true;\n                break;\n            }\n        }\n        if !flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpo4yom296.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = false;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = true;\n                break;\n            }\n        }\n        if !flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpo4yom296.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        if map.contains_key(&i) {\n            map.insert(i, map.get(&i).unwrap() + 1);\n        } else {\n            map.insert(i, 1);\n        }\n    }\n    for (key, value) in map {\n        if value == 1 {\n            sum += key;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp4p_nr534.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp561ggfde.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut found = false;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                found = true;\n                break;\n            }\n        }\n        if !found {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmp54b6qklw.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut count = 0;\n    let mut i = 0;\n    let mut j = 0;\n    let mut len = arr.len();\n\n    while i < len {\n        j = i + 1;\n        count = 1;\n        while j < len {\n            if arr[i] == arr[j] {\n                count += 1;\n                arr.remove(j);\n                len -= 1;\n            } else {\n                j += 1;\n            }\n        }\n        if count == 1 {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "warning: value assigned to `count` is never read\n --> /tmp/tmpywnbinzk.rs:4:13\n  |\n4 |     let mut count = 0;\n  |             ^^^^^\n  |\n  = note: `#[warn(unused_assignments)]` on by default\n  = help: maybe it is overwritten before being read?\n\nwarning: value assigned to `j` is never read\n --> /tmp/tmpywnbinzk.rs:6:13\n  |\n6 |     let mut j = 0;\n  |             ^\n  |\n  = help: maybe it is overwritten before being read?\n\nerror[E0596]: cannot borrow `arr` as mutable, as it is not declared as mutable\n  --> /tmp/tmpywnbinzk.rs:15:17\n   |\n2  | fn find_sum(arr: Vec<isize>) -> isize {\n   |             --- help: consider changing this to be mutable: `mut arr`\n...\n15 |                 arr.remove(j);\n   |                 ^^^^^^^^^^^^^ cannot borrow as mutable\n\nerror: aborting due to previous error; 2 warnings emitted\n\nFor more information about this error, try `rustc --explain E0596`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        if map.contains_key(&i) {\n            let count = map.get(&i).unwrap();\n            map.insert(i, count + 1);\n        } else {\n            map.insert(i, 1);\n        }\n    }\n    for (key, value) in map {\n        if value == 1 {\n            sum += key;\n        }\n    }\n    return sum;\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpoxqgxe1u.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    let mut j = 1;\n    while i < arr.len() {\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n        j = i + 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        if map.contains_key(&i) {\n            map.insert(i, map.get(&i).unwrap() + 1);\n        } else {\n            map.insert(i, 1);\n        }\n    }\n    for (k, v) in map {\n        if v == 1 {\n            sum += k;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8ots596.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    let mut j = 1;\n    while j < arr.len() {\n        if arr[i] != arr[j] {\n            sum += arr[i];\n        } else {\n            i = j;\n        }\n        j += 1;\n    }\n    sum += arr[i];\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `6`,\n right: `21`', /tmp/tmpgs1_9yon.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut is_repeated = false;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                is_repeated = true;\n                break;\n            }\n        }\n        if !is_repeated {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpvlgo6oqc.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpm5k4t1p7.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpirxwa_dr.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut is_repeated = false;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                is_repeated = true;\n                break;\n            }\n        }\n        if !is_repeated {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpvlgo6oqc.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        if map.contains_key(&i) {\n            let count = map.get(&i).unwrap();\n            map.insert(i, count + 1);\n        } else {\n            map.insert(i, 1);\n        }\n    }\n    for (key, value) in map {\n        if value == 1 {\n            sum += key;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpaqughes_.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        if map.contains_key(&i) {\n            let count = map.get(&i).unwrap();\n            map.insert(i, count + 1);\n        } else {\n            map.insert(i, 1);\n        }\n    }\n    for (k, v) in map {\n        if v == 1 {\n            sum += k;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpt_k9l6jg.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for i in arr {\n        if !seen.contains(&i) {\n            sum += i;\n            seen.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpt0k7aq7v.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `23`,\n right: `21`', /tmp/tmpovlbh57_.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpm5k4t1p7.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut seen = HashSet::new();\n    for x in arr {\n        if !seen.contains(&x) {\n            sum += x;\n            seen.insert(x);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpejp711mv.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut arr = arr;\n    arr.sort();\n    let mut i = 0;\n    while i < arr.len() {\n        sum += arr[i];\n        i += 2;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `21`', /tmp/tmpy1g6jw1c.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        let mut found = false;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                found = true;\n                break;\n            }\n            j += 1;\n        }\n        if !found {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp561ggfde.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j {\n                if arr[i] == arr[j] {\n                    flag = false;\n                    break;\n                }\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpk1kp_q0g.rs:23:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in arr {\n        if map.contains_key(&i) {\n            let count = map.get(&i).unwrap();\n            map.insert(i, count + 1);\n        } else {\n            map.insert(i, 1);\n        }\n    }\n    for (k, v) in map {\n        if v == 1 {\n            sum += k;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpyxzph514.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpyxzph514.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if !arr.contains(&i) {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmp0i14n171.rs:5:13\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if !arr.contains(&i) {\n    |             ^^^^^^^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    let mut j = 0;\n    let mut len = arr.len();\n    while i < len {\n        j = i + 1;\n        while j < len {\n            if arr[i] == arr[j] {\n                arr.remove(j);\n                len -= 1;\n            } else {\n                j += 1;\n            }\n        }\n        sum += arr[i];\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "warning: value assigned to `j` is never read\n --> /tmp/tmpc9qaxseb.rs:5:13\n  |\n5 |     let mut j = 0;\n  |             ^\n  |\n  = note: `#[warn(unused_assignments)]` on by default\n  = help: maybe it is overwritten before being read?\n\nerror[E0596]: cannot borrow `arr` as mutable, as it is not declared as mutable\n  --> /tmp/tmpc9qaxseb.rs:11:17\n   |\n2  | fn find_sum(arr: Vec<isize>) -> isize {\n   |             --- help: consider changing this to be mutable: `mut arr`\n...\n11 |                 arr.remove(j);\n   |                 ^^^^^^^^^^^^^ cannot borrow as mutable\n\nerror: aborting due to previous error; 1 warning emitted\n\nFor more information about this error, try `rustc --explain E0596`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        let mut found = false;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                found = true;\n                break;\n            }\n            j += 1;\n        }\n        if !found {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        let mut found = false;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                found = true;\n                break;\n            }\n            j += 1;\n        }\n        if !found {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp561ggfde.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        if map.contains_key(&i) {\n            let count = map.get_mut(&i).unwrap();\n            *count += 1;\n        } else {\n            map.insert(i, 1);\n        }\n    }\n    for (key, value) in map {\n        if value == 1 {\n            sum += key;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpgca5jfun.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = false;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = true;\n                break;\n            }\n        }\n        if !flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpo4yom296.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut xor = 0;\n    for i in arr {\n        sum += i;\n        xor ^= i;\n    }\n    sum - xor\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `16`,\n right: `21`', /tmp/tmpe2s9mi0z.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut count = 0;\n        for j in 0..arr.len() {\n            if arr[i] == arr[j] {\n                count += 1;\n            }\n        }\n        if count == 1 {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmp8qps0ry1.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j {\n                if arr[i] == arr[j] {\n                    flag = false;\n                    break;\n                }\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpk1kp_q0g.rs:23:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        if map.contains_key(&i) {\n            let count = map.get(&i).unwrap();\n            map.insert(i, count + 1);\n        } else {\n            map.insert(i, 1);\n        }\n    }\n    for (key, value) in map.iter() {\n        if value == &1 {\n            sum += key;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp1yr0m6r9.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut count = 0;\n        for j in 0..arr.len() {\n            if arr[i] == arr[j] {\n                count += 1;\n            }\n        }\n        if count == 1 {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmp8qps0ry1.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    let mut j = 1;\n    while i < arr.len() {\n        if j < arr.len() {\n            if arr[i] != arr[j] {\n                sum += arr[i];\n                i += 2;\n                j += 2;\n            } else {\n                i += 1;\n                j += 1;\n            }\n        } else {\n            sum += arr[i];\n            i += 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `21`', /tmp/tmp704twthu.rs:26:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    let mut j = 0;\n    while i < arr.len() {\n        j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if !arr.contains(&i) {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmp0i14n171.rs:5:13\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if !arr.contains(&i) {\n    |             ^^^^^^^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp561ggfde.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut found = false;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                found = true;\n            }\n        }\n        if !found {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpvzve85f4.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        let mut found = false;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                found = true;\n                break;\n            }\n            j += 1;\n        }\n        if !found {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut is_repeated = false;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                is_repeated = true;\n                break;\n            }\n        }\n        if !is_repeated {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpvlgo6oqc.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmp0xixemik.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `23`,\n right: `21`', /tmp/tmpovlbh57_.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut arr_set: HashSet<isize> = HashSet::new();\n    for i in arr {\n        if !arr_set.contains(&i) {\n            sum += i;\n            arr_set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpdxpetpbc.rs:4:22\n  |\n4 |     let mut arr_set: HashSet<isize> = HashSet::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpdxpetpbc.rs:4:39\n  |\n4 |     let mut arr_set: HashSet<isize> = HashSet::new();\n  |                                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp561ggfde.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `23`,\n right: `21`', /tmp/tmpovlbh57_.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in arr {\n        let count = map.entry(i).or_insert(0);\n        *count += 1;\n    }\n    for (k, v) in map.iter() {\n        if *v == 1 {\n            sum += *k;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpndg_ax2v.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpndg_ax2v.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = 0;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = 1;\n                break;\n            }\n        }\n        if flag == 0 {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmplfcq2odu.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    let mut j = 1;\n    while i < arr.len() {\n        if j < arr.len() {\n            if arr[i] != arr[j] {\n                sum += arr[i];\n                i += 2;\n                j += 2;\n            } else {\n                i += 1;\n                j += 1;\n            }\n        } else {\n            sum += arr[i];\n            i += 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `21`', /tmp/tmp704twthu.rs:26:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        let mut found = false;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                found = true;\n                break;\n            }\n            j += 1;\n        }\n        if !found {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        if map.contains_key(&i) {\n            map.insert(i, map.get(&i).unwrap() + 1);\n        } else {\n            map.insert(i, 1);\n        }\n    }\n    for (key, value) in map {\n        if value == 1 {\n            sum += key;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp4p_nr534.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `23`,\n right: `21`', /tmp/tmpovlbh57_.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp561ggfde.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        let mut found = false;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                found = true;\n                break;\n            }\n            j += 1;\n        }\n        if !found {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut arr_set = HashSet::new();\n\n    for i in arr {\n        if !arr_set.contains(&i) {\n            sum += i;\n        }\n        arr_set.insert(i);\n    }\n\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp6l2plo8a.rs:4:23\n  |\n4 |     let mut arr_set = HashSet::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = false;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = true;\n                break;\n            }\n        }\n        if !flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpo4yom296.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        if map.contains_key(&i) {\n            map.insert(i, map.get(&i).unwrap() + 1);\n        } else {\n            map.insert(i, 1);\n        }\n    }\n    for (k, v) in map {\n        if v == 1 {\n            sum += k;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpb8ots596.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp561ggfde.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `23`,\n right: `21`', /tmp/tmpovlbh57_.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = false;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = true;\n                break;\n            }\n        }\n        if !flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpo4yom296.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        if map.contains_key(&i) {\n            let count = map.get_mut(&i).unwrap();\n            *count += 1;\n        } else {\n            map.insert(i, 1);\n        }\n    }\n    for (key, value) in map {\n        if value == 1 {\n            sum += key;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpgca5jfun.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set: HashSet<isize> = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp29niwzg2.rs:4:18\n  |\n4 |     let mut set: HashSet<isize> = HashSet::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp29niwzg2.rs:4:35\n  |\n4 |     let mut set: HashSet<isize> = HashSet::new();\n  |                                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = 0;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = 1;\n                break;\n            }\n        }\n        if flag == 0 {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmplfcq2odu.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `23`,\n right: `21`', /tmp/tmpovlbh57_.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp561ggfde.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpm5k4t1p7.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp561ggfde.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp561ggfde.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    let mut j = 1;\n    while i < arr.len() {\n        if j < arr.len() {\n            if arr[i] != arr[j] {\n                sum += arr[i];\n                i += 2;\n                j += 2;\n            } else {\n                i += 1;\n                j += 1;\n            }\n        } else {\n            sum += arr[i];\n            i += 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `21`', /tmp/tmp704twthu.rs:26:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        let mut count = 0;\n        for j in arr.iter() {\n            if i == *j {\n                count += 1;\n            }\n        }\n        if count == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpmd4m1tax.rs:6:18\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         let mut count = 0;\n6   |         for j in arr.iter() {\n    |                  ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in arr {\n        if arr.iter().filter(|&x| *x == i).count() == 1 {\n            sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `arr`\n   --> /tmp/tmpm5k4t1p7.rs:5:12\n    |\n2   | fn find_sum(arr: Vec<isize>) -> isize {\n    |             --- move occurs because `arr` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut sum = 0;\n4   |     for i in arr {\n    |              --- `arr` moved due to this implicit call to `.into_iter()`\n5   |         if arr.iter().filter(|&x| *x == i).count() == 1 {\n    |            ^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `arr`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &arr {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp561ggfde.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp561ggfde.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = 0;\n        let mut is_repeated = false;\n        while j < arr.len() {\n            if i != j && arr[i] == arr[j] {\n                is_repeated = true;\n                break;\n            }\n            j += 1;\n        }\n        if !is_repeated {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmprz8i2mff.rs:25:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    let mut j = 1;\n    while i < arr.len() {\n        if j < arr.len() && arr[i] == arr[j] {\n            j += 1;\n        } else {\n            sum += arr[i];\n            i = j;\n            j += 1;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `22`,\n right: `21`', /tmp/tmpodoy20h2.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        let mut found = false;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                found = true;\n                break;\n            }\n            j += 1;\n        }\n        if !found {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut arr_set = HashSet::new();\n    for i in arr {\n        if !arr_set.contains(&i) {\n            sum += i;\n            arr_set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp67uhg2lj.rs:4:23\n  |\n4 |     let mut arr_set = HashSet::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j && arr[i] == arr[j] {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpdolr92l1.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        if map.contains_key(&i) {\n            let count = map.get(&i).unwrap();\n            map.insert(i, count + 1);\n        } else {\n            map.insert(i, 1);\n        }\n    }\n    for (k, v) in map {\n        if v == 1 {\n            sum += k;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpt_k9l6jg.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if !set.contains(&i) {\n            sum += i;\n            set.insert(i);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp561ggfde.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut count = 0;\n        for j in 0..arr.len() {\n            if arr[i] == arr[j] {\n                count += 1;\n            }\n        }\n        if count == 1 {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmp8qps0ry1.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        if map.contains_key(&i) {\n            let count = map.get(&i).unwrap();\n            map.insert(i, count + 1);\n        } else {\n            map.insert(i, 1);\n        }\n    }\n    for (k, v) in map {\n        if v == 1 {\n            sum += k;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpt_k9l6jg.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j = i + 1;\n        while j < arr.len() {\n            if arr[i] == arr[j] {\n                break;\n            }\n            j += 1;\n        }\n        if j == arr.len() {\n            sum += arr[i];\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1665509730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        if map.contains_key(&i) {\n            let count = map.get_mut(&i).unwrap();\n            *count += 1;\n        } else {\n            map.insert(i, 1);\n        }\n    }\n    for (key, value) in map {\n        if value == 1 {\n            sum += key;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpgca5jfun.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the sum of non-repeated elements in a given vector.\nfn find_sum(arr: Vec<isize>) -> isize {\n    let mut sum = 0;\n    for i in 0..arr.len() {\n        let mut flag = true;\n        for j in 0..arr.len() {\n            if i != j {\n                if arr[i] == arr[j] {\n                    flag = false;\n                    break;\n                }\n            }\n        }\n        if flag {\n            sum += arr[i];\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = find_sum;\n    assert_eq!(candidate(vec![1, 2, 3, 1, 1, 4, 5, 6]), 21);\n    assert_eq!(candidate(vec![1, 10, 9, 4, 2, 10, 10, 45, 4]), 71);\n    assert_eq!(candidate(vec![12, 10, 9, 45, 2, 10, 10, 45, 10]), 78);\n}\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `20`,\n right: `21`', /tmp/tmpk1kp_q0g.rs:23:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    }
  ]
}
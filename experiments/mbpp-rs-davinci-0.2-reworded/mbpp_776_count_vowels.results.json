{
  "name": "mbpp_776_count_vowels",
  "language": "rs",
  "prompt": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_776_count_vowels.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count: isize = 0;\n    let mut prev_char: char = ' ';\n    let mut next_char: char = ' ';\n    let mut index: usize = 0;\n    let mut test_str_chars: Vec<char> = test_str.chars().collect();\n    let mut test_str_chars_len: usize = test_str_chars.len();\n    while index < test_str_chars_len {\n        if index == 0 {\n            prev_char = ' ';\n        } else {\n            prev_char = test_str_chars[index - 1];\n        }\n        if index == test_str_chars_len - 1 {\n            next_char = ' ';\n        } else {\n            next_char = test_str_chars[index + 1];\n        }\n        if is_vowel(prev_char) || is_vowel(next_char) {\n            count += 1;\n        }\n        index += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpk_r4vanr.rs:20:12\n   |\n20 |         if is_vowel(prev_char) || is_vowel(next_char) {\n   |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpk_r4vanr.rs:20:35\n   |\n20 |         if is_vowel(prev_char) || is_vowel(next_char) {\n   |                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut iter = test_str.chars();\n    let mut prev = iter.next();\n    let mut curr = iter.next();\n\n    while let Some(c) = curr {\n        if is_vowel(c) && is_vowel(prev.unwrap()) {\n            count += 1;\n        }\n        prev = curr;\n        curr = iter.next();\n    }\n\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp__ee8we9.rs:9:12\n  |\n9 |         if is_vowel(c) && is_vowel(prev.unwrap()) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp__ee8we9.rs:9:27\n  |\n9 |         if is_vowel(c) && is_vowel(prev.unwrap()) {\n  |                           ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:56\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                        ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:99\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                                                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if prev.unwrap().is_vowel() || c.is_vowel() {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0599]: no method named `is_vowel` found for type `char` in the current scope\n --> /tmp/tmpfdb3e38v.rs:7:26\n  |\n7 |         if prev.unwrap().is_vowel() || c.is_vowel() {\n  |                          ^^^^^^^^ method not found in `char`\n\nerror[E0599]: no method named `is_vowel` found for type `char` in the current scope\n --> /tmp/tmpfdb3e38v.rs:7:42\n  |\n7 |         if prev.unwrap().is_vowel() || c.is_vowel() {\n  |                                          ^^^^^^^^ method not found in `char`\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0599`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut count = 0;\n    for (i, c) in test_str.chars().enumerate() {\n        if i == 0 {\n            if vowels.contains(&test_str.chars().nth(i + 1).unwrap()) {\n                count += 1;\n            }\n        } else if i == test_str.len() - 1 {\n            if vowels.contains(&test_str.chars().nth(i - 1).unwrap()) {\n                count += 1;\n            }\n        } else {\n            if vowels.contains(&test_str.chars().nth(i - 1).unwrap()) ||\n               vowels.contains(&test_str.chars().nth(i + 1).unwrap()) {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `7`', /tmp/tmpm5d1qr83.rs:26:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut iter = test_str.chars();\n    let mut prev_char = iter.next();\n    let mut curr_char = iter.next();\n    let mut next_char = iter.next();\n    while next_char != None {\n        if is_vowel(curr_char) && (is_vowel(prev_char) || is_vowel(next_char)) {\n            count += 1;\n        }\n        prev_char = curr_char;\n        curr_char = next_char;\n        next_char = iter.next();\n    }\n    return count;\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmprxnmdq9z.rs:9:12\n  |\n9 |         if is_vowel(curr_char) && (is_vowel(prev_char) || is_vowel(next_char)) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmprxnmdq9z.rs:9:36\n  |\n9 |         if is_vowel(curr_char) && (is_vowel(prev_char) || is_vowel(next_char)) {\n  |                                    ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmprxnmdq9z.rs:9:59\n  |\n9 |         if is_vowel(curr_char) && (is_vowel(prev_char) || is_vowel(next_char)) {\n  |                                                           ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if is_vowel(prev) || is_vowel(&c) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp7fz17syo.rs:7:12\n  |\n7 |         if is_vowel(prev) || is_vowel(&c) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp7fz17syo.rs:7:30\n  |\n7 |         if is_vowel(prev) || is_vowel(&c) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmppzocyjsa.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next != None {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5qf3ww6f.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5qf3ww6f.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let test_str = test_str.to_lowercase();\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if is_vowel(prev.unwrap()) && is_vowel(c) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpeopxq1tr.rs:8:12\n  |\n8 |         if is_vowel(prev.unwrap()) && is_vowel(c) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpeopxq1tr.rs:8:39\n  |\n8 |         if is_vowel(prev.unwrap()) && is_vowel(c) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpnxnml0zb.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut iter = test_str.chars();\n    let mut prev = iter.next();\n    let mut curr = iter.next();\n    let mut next = iter.next();\n    while curr != None {\n        if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = iter.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmplhqgdu2y.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmplhqgdu2y.rs:9:56\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                        ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmplhqgdu2y.rs:9:99\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                                                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    while let Some(c) = chars.next() {\n        if vowels.contains(&c) {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `7`', /tmp/tmpgjl9ectj.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let test_str = test_str.to_lowercase();\n    let mut count = 0;\n    let vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    for i in 0..test_str.len() {\n        if vowels.contains(&test_str.chars().nth(i).unwrap()) {\n            if i > 0 {\n                if vowels.contains(&test_str.chars().nth(i - 1).unwrap()) {\n                    count += 1;\n                }\n            }\n            if i < test_str.len() - 1 {\n                if vowels.contains(&test_str.chars().nth(i + 1).unwrap()) {\n                    count += 1;\n                }\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `7`', /tmp/tmppxa9dc8u.rs:25:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n\n    while next.is_some() {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpqqt2yjnx.rs:10:12\n   |\n10 |         if is_vowel(prev) || is_vowel(next) {\n   |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpqqt2yjnx.rs:10:30\n   |\n10 |         if is_vowel(prev) || is_vowel(next) {\n   |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:56\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                        ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:99\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                                                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev_char = chars.next();\n    let mut curr_char = chars.next();\n    let mut next_char = chars.next();\n    while curr_char != None {\n        if is_vowel(curr_char.unwrap()) && (is_vowel(prev_char.unwrap()) || is_vowel(next_char.unwrap())) {\n            count += 1;\n        }\n        prev_char = curr_char;\n        curr_char = next_char;\n        next_char = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmppynr64jr.rs:9:12\n  |\n9 |         if is_vowel(curr_char.unwrap()) && (is_vowel(prev_char.unwrap()) || is_vowel(next_char.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmppynr64jr.rs:9:45\n  |\n9 |         if is_vowel(curr_char.unwrap()) && (is_vowel(prev_char.unwrap()) || is_vowel(next_char.unwrap())) {\n  |                                             ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmppynr64jr.rs:9:77\n  |\n9 |         if is_vowel(curr_char.unwrap()) && (is_vowel(prev_char.unwrap()) || is_vowel(next_char.unwrap())) {\n  |                                                                             ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if is_vowel(prev) || is_vowel(&c) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp7fz17syo.rs:7:12\n  |\n7 |         if is_vowel(prev) || is_vowel(&c) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp7fz17syo.rs:7:30\n  |\n7 |         if is_vowel(prev) || is_vowel(&c) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut last_char = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&last_char.unwrap()) {\n            count += 1;\n        }\n        last_char = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmp_vyq6xmp.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count: isize = 0;\n    let mut i: usize = 0;\n    let mut j: usize = 1;\n    let mut k: usize = 2;\n    let mut l: usize = 3;\n    let mut m: usize = 4;\n    let mut n: usize = 5;\n    let mut o: usize = 6;\n    let mut p: usize = 7;\n    let mut q: usize = 8;\n    let mut r: usize = 9;\n    let mut s: usize = 10;\n    let mut t: usize = 11;\n    let mut u: usize = 12;\n    let mut v: usize = 13;\n    let mut w: usize = 14;\n    let mut x: usize = 15;\n    let mut y: usize = 16;\n    let mut z: usize = 17;\n    let mut a: usize = 18;\n    let mut e: usize = 19;\n    let mut i: usize = 20;\n    let mut o: usize = 21;\n    let mut u: usize = 22;\n    let mut test_str_vec: Vec<char> = test_str.chars().collect();\n    let test_str_len: usize = test_str_vec.len();\n    while i < test_str_len {\n        if test_str_vec[i] == 'a' {\n            if test_str_vec[j] == 'a' || test_str_vec[j] == 'e' || test_str_vec[j] == 'i' || test_str_vec[j] == 'o' || test_str_vec[j] == 'u' {\n                count += 1;\n            }\n            if test_str_vec[k] == 'a' || test_str_vec[k] == 'e' || test_str_vec[k] == 'i' || test_str_vec[k] == 'o' || test_str_vec[k] == 'u' {\n                count += 1;\n            }\n            if test_str_vec[l] == 'a' || test_str_vec[l\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error: this file contains an unclosed delimiter\n  --> /tmp/tmpsgiew5ok.rs:45:3\n   |\n2  | fn count_vowels(test_str: String) -> isize {\n   |                                            - unclosed delimiter\n...\n29 |     while i < test_str_len {\n   |                            - unclosed delimiter\n30 |         if test_str_vec[i] == 'a' {\n   |                                   - this delimiter might not be properly closed...\n...\n38 | }\n   | - ...as it matches this but it has different indentation\n...\n45 | }\n   |   ^\n\nerror: mismatched closing delimiter: `}`\n  --> /tmp/tmpsgiew5ok.rs:37:54\n   |\n2  | fn count_vowels(test_str: String) -> isize {\n   |                                            - closing delimiter possibly meant for this\n...\n37 |             if test_str_vec[l] == 'a' || test_str_vec[l\n   |                                                      ^ unclosed delimiter\n38 | }\n   | ^ mismatched closing delimiter\n\nerror: expected `{`, found `}`\n  --> /tmp/tmpsgiew5ok.rs:38:1\n   |\n37 |             if test_str_vec[l] == 'a' || test_str_vec[l\n   |             -- this `if` expression has a condition, but no block\n38 | }\n   | ^ expected `{`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpsgiew5ok.rs:29:5\n   |\n2  |   fn count_vowels(test_str: String) -> isize {\n   |                                        ----- expected `isize` because of return type\n...\n29 | /     while i < test_str_len {\n30 | |         if test_str_vec[i] == 'a' {\n31 | |             if test_str_vec[j] == 'a' || test_str_vec[j] == 'e' || test_str_vec[j] == 'i' || test_str_vec[j] == 'o' || test_str_vec[j] ==...\n32 | |                 count += 1;\n...  |\n44 | |     assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n45 | | }\n   | |__^ expected `isize`, found `()`\n\nerror: aborting due to 4 previous errors\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpnxnml0zb.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if is_vowel(c) && is_vowel(prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmplsybfbon.rs:7:12\n  |\n7 |         if is_vowel(c) && is_vowel(prev.unwrap()) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmplsybfbon.rs:7:27\n  |\n7 |         if is_vowel(c) && is_vowel(prev.unwrap()) {\n  |                           ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next != None {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5qf3ww6f.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5qf3ww6f.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123202,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpehqa1297.rs:9:12\n  |\n9 |         if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpehqa1297.rs:9:31\n  |\n9 |         if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n  |                               ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpehqa1297.rs:9:49\n  |\n9 |         if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n  |                                                 ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut iter = test_str.chars();\n    let mut prev = iter.next();\n    for c in iter {\n        if is_vowel(prev.unwrap()) || is_vowel(c) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp_ayke7bd.rs:7:12\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp_ayke7bd.rs:7:39\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    while let Some(c) = curr {\n        if is_vowel(c) && is_vowel(prev.unwrap()) {\n            count += 1;\n        }\n        prev = curr;\n        curr = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpet335jsi.rs:8:12\n  |\n8 |         if is_vowel(c) && is_vowel(prev.unwrap()) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpet335jsi.rs:8:27\n  |\n8 |         if is_vowel(c) && is_vowel(prev.unwrap()) {\n  |                           ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let chars: Vec<char> = test_str.chars().collect();\n    for i in 0..chars.len() {\n        if i == 0 {\n            if vowels.contains(&chars[i]) && vowels.contains(&chars[i + 1]) {\n                count += 1;\n            }\n        } else if i == chars.len() - 1 {\n            if vowels.contains(&chars[i]) && vowels.contains(&chars[i - 1]) {\n                count += 1;\n            }\n        } else {\n            if vowels.contains(&chars[i]) && vowels.contains(&chars[i + 1]) && vowels.contains(&chars[i - 1]) {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `7`', /tmp/tmpt13cvxwy.rs:26:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count: isize = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123202,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp1asvdxyj.rs:9:12\n  |\n9 |         if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp1asvdxyj.rs:9:31\n  |\n9 |         if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n  |                               ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp1asvdxyj.rs:9:49\n  |\n9 |         if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n  |                                                 ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev_char = chars.next();\n    for c in chars {\n        if is_vowel(prev_char) && is_vowel(Some(c)) {\n            count += 1;\n        }\n        prev_char = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpi_sext7s.rs:7:12\n  |\n7 |         if is_vowel(prev_char) && is_vowel(Some(c)) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpi_sext7s.rs:7:35\n  |\n7 |         if is_vowel(prev_char) && is_vowel(Some(c)) {\n  |                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut count = 0;\n    for (i, c) in test_str.chars().enumerate() {\n        if i == 0 {\n            if vowels.contains(&test_str.chars().nth(i + 1).unwrap()) {\n                count += 1;\n            }\n        } else if i == test_str.len() - 1 {\n            if vowels.contains(&test_str.chars().nth(i - 1).unwrap()) {\n                count += 1;\n            }\n        } else {\n            if vowels.contains(&test_str.chars().nth(i + 1).unwrap())\n                || vowels.contains(&test_str.chars().nth(i - 1).unwrap())\n            {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `7`', /tmp/tmptm30x54w.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpnxnml0zb.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count: isize = 0;\n    let mut i: usize = 0;\n    let mut j: usize = 1;\n    let mut k: usize = 2;\n    let mut l: usize = 3;\n    let mut m: usize = 4;\n    let mut n: usize = 5;\n    let mut o: usize = 6;\n    let mut p: usize = 7;\n    let mut q: usize = 8;\n    let mut r: usize = 9;\n    let mut s: usize = 10;\n    let mut t: usize = 11;\n    let mut u: usize = 12;\n    let mut v: usize = 13;\n    let mut w: usize = 14;\n    let mut x: usize = 15;\n    let mut y: usize = 16;\n    let mut z: usize = 17;\n    let mut a: usize = 18;\n    let mut e: usize = 19;\n    let mut i: usize = 20;\n    let mut o: usize = 21;\n    let mut u: usize = 22;\n    let mut vowels: Vec<usize> = vec![a, e, i, o, u];\n    let mut alphabet: Vec<usize> = vec![a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z];\n    let mut test_str: Vec<char> = test_str.chars().collect();\n    for _ in 0..test_str.len() {\n        if test_str[i] == 'a' {\n            if test_str[j] == 'a' || test_str[j] == 'e' || test_str[j] == 'i' || test_str[j] == 'o' || test_str[j] == 'u' {\n                count += 1;\n            }\n            if test_str[k] == 'a' || test_str[k] == 'e' || test_str[k] == 'i' || test_\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error: this file contains an unclosed delimiter\n  --> /tmp/tmppm1fjhdy.rs:43:3\n   |\n2  | fn count_vowels(test_str: String) -> isize {\n   |                                            - unclosed delimiter\n...\n30 |     for _ in 0..test_str.len() {\n   |                                - unclosed delimiter\n31 |         if test_str[i] == 'a' {\n   |                               - this delimiter might not be properly closed...\n...\n36 | }\n   | - ...as it matches this but it has different indentation\n...\n43 | }\n   |   ^\n\nerror: expected `{`, found `}`\n  --> /tmp/tmppm1fjhdy.rs:36:1\n   |\n35 |             if test_str[k] == 'a' || test_str[k] == 'e' || test_str[k] == 'i' || test_\n   |             -- this `if` expression has a condition, but no block\n36 | }\n   | ^ expected `{`\n\nerror[E0425]: cannot find value `b` in this scope\n  --> /tmp/tmppm1fjhdy.rs:28:44\n   |\n28 |     let mut alphabet: Vec<usize> = vec![a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z];\n   |                                            ^ help: a local variable with a similar name exists: `a`\n\nerror[E0425]: cannot find value `c` in this scope\n  --> /tmp/tmppm1fjhdy.rs:28:47\n   |\n28 |     let mut alphabet: Vec<usize> = vec![a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z];\n   |                                               ^ help: a local variable with a similar name exists: `a`\n\nerror[E0425]: cannot find value `d` in this scope\n  --> /tmp/tmppm1fjhdy.rs:28:50\n   |\n28 |     let mut alphabet: Vec<usize> = vec![a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z];\n   |                                                  ^ help: a local variable with a similar name exists: `a`\n\nerror[E0425]: cannot find value `f` in this scope\n  --> /tmp/tmppm1fjhdy.rs:28:56\n   |\n28 |     let mut alphabet: Vec<usize> = vec![a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z];\n   |                                                        ^ help: a local variable with a similar na",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpp79q1mk0.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut iter = test_str.chars();\n    let mut prev = iter.next();\n    let mut curr = iter.next();\n    let mut next = iter.next();\n    while let Some(c) = curr {\n        if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = iter.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpsazi9fd6.rs:9:12\n  |\n9 |         if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpsazi9fd6.rs:9:46\n  |\n9 |         if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                              ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpsazi9fd6.rs:9:91\n  |\n9 |         if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                           ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while let (Some(p), Some(c), Some(n)) = (prev, curr, next) {\n        if is_vowel(p) || is_vowel(n) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfq9rorgk.rs:9:12\n  |\n9 |         if is_vowel(p) || is_vowel(n) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfq9rorgk.rs:9:27\n  |\n9 |         if is_vowel(p) || is_vowel(n) {\n  |                           ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count: isize = 0;\n    let mut prev_char: char = ' ';\n    let mut next_char: char = ' ';\n    for (i, c) in test_str.chars().enumerate() {\n        if i == 0 {\n            next_char = test_str.chars().nth(i + 1).unwrap();\n        } else if i == test_str.len() - 1 {\n            prev_char = test_str.chars().nth(i - 1).unwrap();\n        } else {\n            prev_char = test_str.chars().nth(i - 1).unwrap();\n            next_char = test_str.chars().nth(i + 1).unwrap();\n        }\n        if is_vowel(c) && (is_vowel(prev_char) || is_vowel(next_char)) {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpwgre5dr3.rs:15:12\n   |\n15 |         if is_vowel(c) && (is_vowel(prev_char) || is_vowel(next_char)) {\n   |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpwgre5dr3.rs:15:28\n   |\n15 |         if is_vowel(c) && (is_vowel(prev_char) || is_vowel(next_char)) {\n   |                            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpwgre5dr3.rs:15:51\n   |\n15 |         if is_vowel(c) && (is_vowel(prev_char) || is_vowel(next_char)) {\n   |                                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:56\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                        ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:99\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                                                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if is_vowel(prev.unwrap()) || is_vowel(c) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpk7pg1kmi.rs:7:12\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpk7pg1kmi.rs:7:39\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpp79q1mk0.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    for (i, c) in test_str.chars().enumerate() {\n        if i == 0 {\n            if vowels.contains(&test_str.chars().nth(i + 1).unwrap()) {\n                count += 1;\n            }\n        } else if i == test_str.len() - 1 {\n            if vowels.contains(&test_str.chars().nth(i - 1).unwrap()) {\n                count += 1;\n            }\n        } else {\n            if vowels.contains(&test_str.chars().nth(i - 1).unwrap())\n                || vowels.contains(&test_str.chars().nth(i + 1).unwrap())\n            {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `7`', /tmp/tmpx7jt844_.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev_char = chars.next();\n    let mut curr_char = chars.next();\n    let mut next_char = chars.next();\n    while curr_char != None {\n        if is_vowel(curr_char.unwrap()) && (prev_char.is_some() && is_vowel(prev_char.unwrap()) || next_char.is_some() && is_vowel(next_char.unwrap())) {\n            count += 1;\n        }\n        prev_char = curr_char;\n        curr_char = next_char;\n        next_char = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpr9xyrws8.rs:9:12\n  |\n9 | ...   if is_vowel(curr_char.unwrap()) && (prev_char.is_some() && is_vowel(prev_char.unwrap()) || next_char.is_some() && is_vowel(next_cha...\n  |          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpr9xyrws8.rs:9:68\n  |\n9 | ...   if is_vowel(curr_char.unwrap()) && (prev_char.is_some() && is_vowel(prev_char.unwrap()) || next_char.is_some() && is_vowel(next_cha...\n  |                                                                  ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpr9xyrws8.rs:9:123\n  |\n9 | ...owel(prev_char.unwrap()) || next_char.is_some() && is_vowel(next_char.unwrap())) {\n  |                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpvasyqjz6.rs:10:12\n   |\n10 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n   |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpvasyqjz6.rs:10:58\n   |\n10 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n   |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpvasyqjz6.rs:10:103\n   |\n10 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n   |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpnxnml0zb.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if is_vowel(prev.unwrap()) || is_vowel(c) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpk7pg1kmi.rs:7:12\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpk7pg1kmi.rs:7:39\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next != None {\n        if is_vowel(prev.unwrap()) || is_vowel(next.unwrap()) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoplfuysr.rs:9:12\n  |\n9 |         if is_vowel(prev.unwrap()) || is_vowel(next.unwrap()) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoplfuysr.rs:9:39\n  |\n9 |         if is_vowel(prev.unwrap()) || is_vowel(next.unwrap()) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    for (i, c) in test_str.chars().enumerate() {\n        if i == 0 {\n            if vowels.contains(&test_str.chars().nth(i + 1).unwrap()) {\n                count += 1;\n            }\n        } else if i == test_str.len() - 1 {\n            if vowels.contains(&test_str.chars().nth(i - 1).unwrap()) {\n                count += 1;\n            }\n        } else {\n            if vowels.contains(&test_str.chars().nth(i - 1).unwrap())\n                || vowels.contains(&test_str.chars().nth(i + 1).unwrap())\n            {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `7`', /tmp/tmpx7jt844_.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    for (i, c) in test_str.chars().enumerate() {\n        if i == 0 {\n            if vowels.contains(&test_str.chars().nth(i + 1).unwrap()) {\n                count += 1;\n            }\n        } else if i == test_str.len() - 1 {\n            if vowels.contains(&test_str.chars().nth(i - 1).unwrap()) {\n                count += 1;\n            }\n        } else {\n            if vowels.contains(&test_str.chars().nth(i - 1).unwrap())\n                || vowels.contains(&test_str.chars().nth(i + 1).unwrap())\n            {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `7`', /tmp/tmpx7jt844_.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut prev_char = ' ';\n    let mut next_char = ' ';\n    let mut index = 0;\n    for c in test_str.chars() {\n        if index == 0 {\n            next_char = test_str.chars().nth(index + 1).unwrap();\n        } else if index == test_str.len() - 1 {\n            prev_char = test_str.chars().nth(index - 1).unwrap();\n        } else {\n            prev_char = test_str.chars().nth(index - 1).unwrap();\n            next_char = test_str.chars().nth(index + 1).unwrap();\n        }\n        if is_vowel(c) && (is_vowel(prev_char) || is_vowel(next_char)) {\n            count += 1;\n        }\n        index += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpdiw84n4c.rs:16:12\n   |\n16 |         if is_vowel(c) && (is_vowel(prev_char) || is_vowel(next_char)) {\n   |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpdiw84n4c.rs:16:28\n   |\n16 |         if is_vowel(c) && (is_vowel(prev_char) || is_vowel(next_char)) {\n   |                            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpdiw84n4c.rs:16:51\n   |\n16 |         if is_vowel(c) && (is_vowel(prev_char) || is_vowel(next_char)) {\n   |                                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next != None {\n        if is_vowel(prev) && is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpnm26czho.rs:9:12\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpnm26czho.rs:9:30\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpp79q1mk0.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next != None {\n        if is_vowel(prev.unwrap()) || is_vowel(next.unwrap()) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoplfuysr.rs:9:12\n  |\n9 |         if is_vowel(prev.unwrap()) || is_vowel(next.unwrap()) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoplfuysr.rs:9:39\n  |\n9 |         if is_vowel(prev.unwrap()) || is_vowel(next.unwrap()) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev_char = chars.next();\n    for c in chars {\n        if is_vowel(prev_char) || is_vowel(Some(c)) {\n            count += 1;\n        }\n        prev_char = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2nhol3yk.rs:7:12\n  |\n7 |         if is_vowel(prev_char) || is_vowel(Some(c)) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2nhol3yk.rs:7:35\n  |\n7 |         if is_vowel(prev_char) || is_vowel(Some(c)) {\n  |                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next.is_some() {\n        if is_vowel(prev) && is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpckf55mop.rs:9:12\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpckf55mop.rs:9:30\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if is_vowel(prev) || is_vowel(&c) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp7fz17syo.rs:7:12\n  |\n7 |         if is_vowel(prev) || is_vowel(&c) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp7fz17syo.rs:7:30\n  |\n7 |         if is_vowel(prev) || is_vowel(&c) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) || vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `7`', /tmp/tmpum8y3h49.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    while let Some(curr_char) = curr {\n        if is_vowel(curr_char) && (prev.is_some() && is_vowel(prev.unwrap()) || chars.clone().any(|c| is_vowel(c))) {\n            count += 1;\n        }\n        prev = curr;\n        curr = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpn_jt_qgn.rs:8:12\n  |\n8 |         if is_vowel(curr_char) && (prev.is_some() && is_vowel(prev.unwrap()) || chars.clone().any(|c| is_vowel(c))) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpn_jt_qgn.rs:8:54\n  |\n8 |         if is_vowel(curr_char) && (prev.is_some() && is_vowel(prev.unwrap()) || chars.clone().any(|c| is_vowel(c))) {\n  |                                                      ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpn_jt_qgn.rs:8:103\n  |\n8 |         if is_vowel(curr_char) && (prev.is_some() && is_vowel(prev.unwrap()) || chars.clone().any(|c| is_vowel(c))) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut prev = ' ';\n    let mut next = ' ';\n    for (i, c) in test_str.chars().enumerate() {\n        if i > 0 {\n            prev = test_str.chars().nth(i - 1).unwrap();\n        }\n        if i < test_str.len() - 1 {\n            next = test_str.chars().nth(i + 1).unwrap();\n        }\n        if is_vowel(c) && (is_vowel(prev) || is_vowel(next)) {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpta1kfj85.rs:13:12\n   |\n13 |         if is_vowel(c) && (is_vowel(prev) || is_vowel(next)) {\n   |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpta1kfj85.rs:13:28\n   |\n13 |         if is_vowel(c) && (is_vowel(prev) || is_vowel(next)) {\n   |                            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpta1kfj85.rs:13:46\n   |\n13 |         if is_vowel(c) && (is_vowel(prev) || is_vowel(next)) {\n   |                                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut count = 0;\n    let mut prev_char = ' ';\n    for c in test_str.chars() {\n        if vowels.contains(&c) {\n            if vowels.contains(&prev_char) {\n                count += 1;\n            }\n        }\n        prev_char = c;\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpnt9c4b7o.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    while let Some(c) = curr {\n        if vowels.contains(&c) && prev.map_or(false, |p| vowels.contains(&p)) {\n            count += 1;\n        }\n        prev = curr;\n        curr = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpgnfjvxb_.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut count = 0;\n    for (i, c) in test_str.chars().enumerate() {\n        if i == 0 {\n            if vowels.contains(&test_str.chars().nth(i + 1).unwrap()) {\n                count += 1;\n            }\n        } else if i == test_str.len() - 1 {\n            if vowels.contains(&test_str.chars().nth(i - 1).unwrap()) {\n                count += 1;\n            }\n        } else {\n            if vowels.contains(&test_str.chars().nth(i - 1).unwrap())\n                || vowels.contains(&test_str.chars().nth(i + 1).unwrap())\n            {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `7`', /tmp/tmp8jw_ksy6.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev_char = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev_char.unwrap()) {\n            count += 1;\n        }\n        prev_char = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmp0w30dc3u.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n\n    while let Some(c) = curr {\n        if is_vowel(c) && (prev.map_or(false, |p| is_vowel(p)) || next.map_or(false, |n| is_vowel(n))) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp3z6w3vzh.rs:10:12\n   |\n10 |         if is_vowel(c) && (prev.map_or(false, |p| is_vowel(p)) || next.map_or(false, |n| is_vowel(n))) {\n   |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp3z6w3vzh.rs:10:51\n   |\n10 |         if is_vowel(c) && (prev.map_or(false, |p| is_vowel(p)) || next.map_or(false, |n| is_vowel(n))) {\n   |                                                   ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp3z6w3vzh.rs:10:90\n   |\n10 |         if is_vowel(c) && (prev.map_or(false, |p| is_vowel(p)) || next.map_or(false, |n| is_vowel(n))) {\n   |                                                                                          ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpnxnml0zb.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut prev_char = ' ';\n    let mut next_char = ' ';\n    let mut chars = test_str.chars();\n    for c in chars.by_ref() {\n        next_char = chars.next().unwrap_or(' ');\n        if is_vowel(c) && (is_vowel(prev_char) || is_vowel(next_char)) {\n            count += 1;\n        }\n        prev_char = c;\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpi675rx03.rs:9:12\n  |\n9 |         if is_vowel(c) && (is_vowel(prev_char) || is_vowel(next_char)) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpi675rx03.rs:9:28\n  |\n9 |         if is_vowel(c) && (is_vowel(prev_char) || is_vowel(next_char)) {\n  |                            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpi675rx03.rs:9:51\n  |\n9 |         if is_vowel(c) && (is_vowel(prev_char) || is_vowel(next_char)) {\n  |                                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut iter = test_str.chars();\n    let mut prev = iter.next();\n    let mut curr = iter.next();\n    let mut next = iter.next();\n\n    while next != None {\n        if is_vowel(prev.unwrap()) && is_vowel(next.unwrap()) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = iter.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpuywu2yln.rs:10:12\n   |\n10 |         if is_vowel(prev.unwrap()) && is_vowel(next.unwrap()) {\n   |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpuywu2yln.rs:10:39\n   |\n10 |         if is_vowel(prev.unwrap()) && is_vowel(next.unwrap()) {\n   |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count: isize = 0;\n    let mut i: usize = 0;\n    let mut j: usize = 0;\n    let mut k: usize = 0;\n    let mut l: usize = 0;\n    let mut m: usize = 0;\n    let mut n: usize = 0;\n    let mut o: usize = 0;\n    let mut p: usize = 0;\n    let mut q: usize = 0;\n    let mut r: usize = 0;\n    let mut s: usize = 0;\n    let mut t: usize = 0;\n    let mut u: usize = 0;\n    let mut v: usize = 0;\n    let mut w: usize = 0;\n    let mut x: usize = 0;\n    let mut y: usize = 0;\n    let mut z: usize = 0;\n    let mut a: usize = 0;\n    let mut e: usize = 0;\n    let mut i: usize = 0;\n    let mut o: usize = 0;\n    let mut u: usize = 0;\n    let mut vowels: Vec<char> = vec!['a', 'e', 'i', 'o', 'u'];\n    let mut test_str_vec: Vec<char> = test_str.chars().collect();\n    let mut test_str_len: usize = test_str.len();\n    for i in 0..test_str_len {\n        if test_str_vec[i] == 'a' {\n            a += 1;\n        }\n        if test_str_vec[i] == 'e' {\n            e += 1;\n        }\n        if test_str_vec[i] == 'i' {\n            i += 1;\n        }\n        if test_str_vec[i] == 'o' {\n            o += 1;\n        }\n        if test_str_vec[i] == 'u' {\n            u += 1;\n        }\n    }\n    if a > 1 {\n        count += a - 1;\n    }\n    if e > 1 {\n        count += e - 1;\n\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error: this file contains an unclosed delimiter\n  --> /tmp/tmp1vqbm2v8.rs:60:3\n   |\n2  | fn count_vowels(test_str: String) -> isize {\n   |                                            - unclosed delimiter\n...\n50 |     if e > 1 {\n   |              - this delimiter might not be properly closed...\n...\n53 | }\n   | - ...as it matches this but it has different indentation\n...\n60 | }\n   |   ^\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp1vqbm2v8.rs:48:18\n   |\n48 |         count += a - 1;\n   |                  ^^^^^ expected `isize`, found `usize`\n\nerror[E0277]: cannot add-assign `usize` to `isize`\n  --> /tmp/tmp1vqbm2v8.rs:48:15\n   |\n48 |         count += a - 1;\n   |               ^^ no implementation for `isize += usize`\n   |\n   = help: the trait `AddAssign<usize>` is not implemented for `isize`\n   = help: the following other types implement trait `AddAssign<Rhs>`:\n             <f32 as AddAssign<&f32>>\n             <f32 as AddAssign>\n             <f64 as AddAssign<&f64>>\n             <f64 as AddAssign>\n             <i128 as AddAssign<&i128>>\n             <i128 as AddAssign>\n             <i16 as AddAssign<&i16>>\n             <i16 as AddAssign>\n           and 20 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp1vqbm2v8.rs:51:18\n   |\n51 |         count += e - 1;\n   |                  ^^^^^ expected `isize`, found `usize`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp1vqbm2v8.rs:2:38\n  |\n2 | fn count_vowels(test_str: String) -> isize {\n  |    ------------                      ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns `()` as its body has no tail or `return` expression\n\nerror[E0277]: cannot add-assign `usize` to `isize`\n  --> /tmp/tmp1vqbm2v8.rs:51:15\n   |\n51 |         count += e - 1;\n   |               ^^ no implementation for `isize += usize`\n   |\n   = help: the trait `AddAssign<usize>` is not implemented for `isize`\n   = help: the following other types implement trait `AddAssign<Rhs>`:\n             <f32 as AddAssign<&f32>>\n             <f32 as AddAssign>\n             <f64 as AddAssign<&f64>>",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpnxnml0zb.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if is_vowel(prev.unwrap()) || is_vowel(c) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpk7pg1kmi.rs:7:12\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpk7pg1kmi.rs:7:39\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    for (i, c) in test_str.chars().enumerate() {\n        if i == 0 {\n            if vowels.contains(&test_str.chars().nth(i + 1).unwrap()) {\n                count += 1;\n            }\n        } else if i == test_str.len() - 1 {\n            if vowels.contains(&test_str.chars().nth(i - 1).unwrap()) {\n                count += 1;\n            }\n        } else {\n            if vowels.contains(&test_str.chars().nth(i + 1).unwrap())\n                || vowels.contains(&test_str.chars().nth(i - 1).unwrap())\n            {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `7`', /tmp/tmpjiybsgtu.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpnxnml0zb.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    while let Some(c) = curr {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = curr;\n        curr = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmprpxx3lp5.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut next = chars.next();\n    while let Some(c) = next {\n        if let Some(p) = prev {\n            if is_vowel(c) && is_vowel(p) {\n                count += 1;\n            }\n        }\n        prev = Some(c);\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5zlqmesk.rs:9:16\n  |\n9 |             if is_vowel(c) && is_vowel(p) {\n  |                ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5zlqmesk.rs:9:31\n  |\n9 |             if is_vowel(c) && is_vowel(p) {\n  |                               ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpnxnml0zb.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if is_vowel(prev) && is_vowel(Some(c)) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmprx7q_dvd.rs:7:12\n  |\n7 |         if is_vowel(prev) && is_vowel(Some(c)) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmprx7q_dvd.rs:7:30\n  |\n7 |         if is_vowel(prev) && is_vowel(Some(c)) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut iter = test_str.chars();\n    let mut prev = iter.next();\n    let mut curr = iter.next();\n    let mut next = iter.next();\n    while let Some(c) = curr {\n        if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = iter.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpsazi9fd6.rs:9:12\n  |\n9 |         if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpsazi9fd6.rs:9:46\n  |\n9 |         if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                              ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpsazi9fd6.rs:9:91\n  |\n9 |         if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                           ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpnxnml0zb.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpl_6fij0v.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut iter = test_str.chars();\n    let mut prev = iter.next();\n    for c in iter {\n        if is_vowel(prev.unwrap()) || is_vowel(c) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp_ayke7bd.rs:7:12\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp_ayke7bd.rs:7:39\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while let (Some(p), Some(c), Some(n)) = (prev, curr, next) {\n        if is_vowel(p) && is_vowel(c) && is_vowel(n) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpiw1vuxet.rs:9:12\n  |\n9 |         if is_vowel(p) && is_vowel(c) && is_vowel(n) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpiw1vuxet.rs:9:27\n  |\n9 |         if is_vowel(p) && is_vowel(c) && is_vowel(n) {\n  |                           ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpiw1vuxet.rs:9:42\n  |\n9 |         if is_vowel(p) && is_vowel(c) && is_vowel(n) {\n  |                                          ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n\n    while next.is_some() {\n        if is_vowel(prev) || is_vowel(next) {\n            if is_vowel(curr) {\n                count += 1;\n            }\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp5q3dywor.rs:10:12\n   |\n10 |         if is_vowel(prev) || is_vowel(next) {\n   |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp5q3dywor.rs:10:30\n   |\n10 |         if is_vowel(prev) || is_vowel(next) {\n   |                              ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp5q3dywor.rs:11:16\n   |\n11 |             if is_vowel(curr) {\n   |                ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpnxnml0zb.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut count = 0;\n    for (i, c) in test_str.chars().enumerate() {\n        if i == 0 {\n            if vowels.contains(&test_str.chars().nth(i + 1).unwrap()) {\n                count += 1;\n            }\n        } else if i == test_str.len() - 1 {\n            if vowels.contains(&test_str.chars().nth(i - 1).unwrap()) {\n                count += 1;\n            }\n        } else {\n            if vowels.contains(&test_str.chars().nth(i - 1).unwrap()) || vowels.contains(&test_str.chars().nth(i + 1).unwrap()) {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `7`', /tmp/tmp14ksx_y1.rs:25:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut prev_char = ' ';\n    for c in test_str.chars() {\n        if is_vowel(c) || is_vowel(prev_char) {\n            count += 1;\n        }\n        prev_char = c;\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpic_epqrk.rs:6:12\n  |\n6 |         if is_vowel(c) || is_vowel(prev_char) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpic_epqrk.rs:6:27\n  |\n6 |         if is_vowel(c) || is_vowel(prev_char) {\n  |                           ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count: isize = 0;\n    let mut prev_char: char = ' ';\n    let mut next_char: char = ' ';\n    let mut i: usize = 0;\n    for c in test_str.chars() {\n        if i == 0 {\n            prev_char = ' ';\n            next_char = test_str.chars().nth(i + 1).unwrap();\n        } else if i == test_str.len() - 1 {\n            prev_char = test_str.chars().nth(i - 1).unwrap();\n            next_char = ' ';\n        } else {\n            prev_char = test_str.chars().nth(i - 1).unwrap();\n            next_char = test_str.chars().nth(i + 1).unwrap();\n        }\n        if is_vowel(c) && (is_vowel(prev_char) || is_vowel(next_char)) {\n            count += 1;\n        }\n        i += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpd6e77cyj.rs:18:12\n   |\n18 |         if is_vowel(c) && (is_vowel(prev_char) || is_vowel(next_char)) {\n   |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpd6e77cyj.rs:18:28\n   |\n18 |         if is_vowel(c) && (is_vowel(prev_char) || is_vowel(next_char)) {\n   |                            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpd6e77cyj.rs:18:51\n   |\n18 |         if is_vowel(c) && (is_vowel(prev_char) || is_vowel(next_char)) {\n   |                                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if is_vowel(prev.unwrap()) || is_vowel(c) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpk7pg1kmi.rs:7:12\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpk7pg1kmi.rs:7:39\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if vowels.contains(&curr.unwrap()) {\n            if prev.is_some() && vowels.contains(&prev.unwrap()) {\n                count += 1;\n            }\n            if next.is_some() && vowels.contains(&next.unwrap()) {\n                count += 1;\n            }\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `7`', /tmp/tmphm14iz1k.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut count = 0;\n    for (i, c) in test_str.chars().enumerate() {\n        if i == 0 {\n            if vowels.contains(&test_str.chars().nth(i + 1).unwrap()) {\n                count += 1;\n            }\n        } else if i == test_str.len() - 1 {\n            if vowels.contains(&test_str.chars().nth(i - 1).unwrap()) {\n                count += 1;\n            }\n        } else {\n            if vowels.contains(&test_str.chars().nth(i + 1).unwrap())\n                || vowels.contains(&test_str.chars().nth(i - 1).unwrap())\n            {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `7`', /tmp/tmptm30x54w.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpp79q1mk0.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    for (i, c) in test_str.chars().enumerate() {\n        if i == 0 {\n            if vowels.contains(&test_str.chars().nth(i + 1).unwrap()) {\n                count += 1;\n            }\n        } else if i == test_str.len() - 1 {\n            if vowels.contains(&test_str.chars().nth(i - 1).unwrap()) {\n                count += 1;\n            }\n        } else {\n            if vowels.contains(&test_str.chars().nth(i - 1).unwrap())\n                || vowels.contains(&test_str.chars().nth(i + 1).unwrap())\n            {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `7`', /tmp/tmpx7jt844_.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpnxnml0zb.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpnxnml0zb.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if is_vowel(c) && is_vowel(*prev) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpo5p4uh18.rs:7:12\n  |\n7 |         if is_vowel(c) && is_vowel(*prev) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpo5p4uh18.rs:7:27\n  |\n7 |         if is_vowel(c) && is_vowel(*prev) {\n  |                           ^^^^^^^^ not found in this scope\n\nerror[E0614]: type `Option<char>` cannot be dereferenced\n --> /tmp/tmpo5p4uh18.rs:7:36\n  |\n7 |         if is_vowel(c) && is_vowel(*prev) {\n  |                                    ^^^^^\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0425, E0614.\nFor more information about an error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp73lsj6dx.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp73lsj6dx.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    return count;\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmphghex989.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmphghex989.rs:9:56\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                        ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmphghex989.rs:9:99\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                                                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if vowels.contains(&curr.unwrap()) {\n            if prev.is_some() && vowels.contains(&prev.unwrap()) {\n                count += 1;\n            }\n            if next.is_some() && vowels.contains(&next.unwrap()) {\n                count += 1;\n            }\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `7`', /tmp/tmps2tf2gvl.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count: isize = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpqpw_wbpc.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if is_vowel(prev) || is_vowel(&c) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp7fz17syo.rs:7:12\n  |\n7 |         if is_vowel(prev) || is_vowel(&c) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp7fz17syo.rs:7:30\n  |\n7 |         if is_vowel(prev) || is_vowel(&c) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpnxnml0zb.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    while curr != None {\n        if vowels.contains(&curr.unwrap()) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = curr;\n        curr = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmptagb_wj1.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev_char = chars.next();\n    let mut curr_char = chars.next();\n    let mut next_char = chars.next();\n    while curr_char.is_some() {\n        if is_vowel(curr_char.unwrap()) && (prev_char.is_some() && is_vowel(prev_char.unwrap()) || next_char.is_some() && is_vowel(next_char.unwrap())) {\n            count += 1;\n        }\n        prev_char = curr_char;\n        curr_char = next_char;\n        next_char = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpgckm6bgy.rs:9:12\n  |\n9 | ...   if is_vowel(curr_char.unwrap()) && (prev_char.is_some() && is_vowel(prev_char.unwrap()) || next_char.is_some() && is_vowel(next_cha...\n  |          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpgckm6bgy.rs:9:68\n  |\n9 | ...   if is_vowel(curr_char.unwrap()) && (prev_char.is_some() && is_vowel(prev_char.unwrap()) || next_char.is_some() && is_vowel(next_cha...\n  |                                                                  ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpgckm6bgy.rs:9:123\n  |\n9 | ...owel(prev_char.unwrap()) || next_char.is_some() && is_vowel(next_char.unwrap())) {\n  |                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while let (Some(p), Some(c), Some(n)) = (prev, curr, next) {\n        if is_vowel(p) && is_vowel(c) && is_vowel(n) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpiw1vuxet.rs:9:12\n  |\n9 |         if is_vowel(p) && is_vowel(c) && is_vowel(n) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpiw1vuxet.rs:9:27\n  |\n9 |         if is_vowel(p) && is_vowel(c) && is_vowel(n) {\n  |                           ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpiw1vuxet.rs:9:42\n  |\n9 |         if is_vowel(p) && is_vowel(c) && is_vowel(n) {\n  |                                          ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if is_vowel(prev.unwrap()) || is_vowel(c) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpk7pg1kmi.rs:7:12\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpk7pg1kmi.rs:7:39\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpp79q1mk0.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n\n    while next != None {\n        if is_vowel(prev) && is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpdgavrss1.rs:10:12\n   |\n10 |         if is_vowel(prev) && is_vowel(next) {\n   |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpdgavrss1.rs:10:30\n   |\n10 |         if is_vowel(prev) && is_vowel(next) {\n   |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut next = chars.next();\n    while next != None {\n        if is_vowel(prev.unwrap()) || is_vowel(next.unwrap()) {\n            count += 1;\n        }\n        prev = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfspgb4ef.rs:8:12\n  |\n8 |         if is_vowel(prev.unwrap()) || is_vowel(next.unwrap()) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfspgb4ef.rs:8:39\n  |\n8 |         if is_vowel(prev.unwrap()) || is_vowel(next.unwrap()) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next != None {\n        if is_vowel(prev) && is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpnm26czho.rs:9:12\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpnm26czho.rs:9:30\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut last_char = chars.next();\n    for c in chars {\n        if is_vowel(last_char) && is_vowel(Some(c)) {\n            count += 1;\n        }\n        last_char = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5svhayey.rs:7:12\n  |\n7 |         if is_vowel(last_char) && is_vowel(Some(c)) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5svhayey.rs:7:35\n  |\n7 |         if is_vowel(last_char) && is_vowel(Some(c)) {\n  |                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp73lsj6dx.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp73lsj6dx.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut count = 0;\n\n    for (i, c) in test_str.chars().enumerate() {\n        if i > 0 && vowels.contains(&test_str.chars().nth(i - 1).unwrap()) {\n            count += 1;\n        }\n        if i < test_str.len() - 1 && vowels.contains(&test_str.chars().nth(i + 1).unwrap()) {\n            count += 1;\n        }\n    }\n\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `7`', /tmp/tmp996krygj.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:56\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                        ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:99\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                                                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    while let Some(c) = curr {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = curr;\n        curr = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpxfxo2l4r.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123202,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpehqa1297.rs:9:12\n  |\n9 |         if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpehqa1297.rs:9:31\n  |\n9 |         if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n  |                               ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpehqa1297.rs:9:49\n  |\n9 |         if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n  |                                                 ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next != None {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5qf3ww6f.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5qf3ww6f.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:56\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                        ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:99\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                                                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut iter = test_str.chars();\n    let mut prev = iter.next();\n    let mut curr = iter.next();\n    while curr != None {\n        if is_vowel(prev.unwrap()) && is_vowel(curr.unwrap()) {\n            count += 1;\n        }\n        prev = curr;\n        curr = iter.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp1f1w2t9r.rs:8:12\n  |\n8 |         if is_vowel(prev.unwrap()) && is_vowel(curr.unwrap()) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp1f1w2t9r.rs:8:39\n  |\n8 |         if is_vowel(prev.unwrap()) && is_vowel(curr.unwrap()) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next != None {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5qf3ww6f.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5qf3ww6f.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut prev = ' ';\n    for c in test_str.chars() {\n        if is_vowel(c) && is_vowel(prev) {\n            count += 1;\n        }\n        prev = c;\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpgmekefu7.rs:6:12\n  |\n6 |         if is_vowel(c) && is_vowel(prev) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpgmekefu7.rs:6:27\n  |\n6 |         if is_vowel(c) && is_vowel(prev) {\n  |                           ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpp79q1mk0.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next != None {\n        if is_vowel(prev) && is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpnm26czho.rs:9:12\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpnm26czho.rs:9:30\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut iter = test_str.chars();\n    let mut prev = iter.next();\n    let mut curr = iter.next();\n    let mut next = iter.next();\n    while curr != None {\n        if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = iter.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmplhqgdu2y.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmplhqgdu2y.rs:9:56\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                        ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmplhqgdu2y.rs:9:99\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                                                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut iter = test_str.chars();\n    let mut prev = iter.next();\n    let mut curr = iter.next();\n    let mut next = iter.next();\n    while curr != None {\n        if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = iter.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmplhqgdu2y.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmplhqgdu2y.rs:9:56\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                        ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmplhqgdu2y.rs:9:99\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                                                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:56\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                        ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:99\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                                                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut count = 0;\n    for (i, c) in test_str.chars().enumerate() {\n        if i == 0 {\n            if vowels.contains(&test_str.chars().nth(i + 1).unwrap()) {\n                count += 1;\n            }\n        } else if i == test_str.len() - 1 {\n            if vowels.contains(&test_str.chars().nth(i - 1).unwrap()) {\n                count += 1;\n            }\n        } else {\n            if vowels.contains(&test_str.chars().nth(i - 1).unwrap()) || vowels.contains(&test_str.chars().nth(i + 1).unwrap()) {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `7`', /tmp/tmp14ksx_y1.rs:25:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:56\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                        ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:99\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                                                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev_char = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev_char.unwrap()) {\n            count += 1;\n        }\n        prev_char = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmppssvucur.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    for (i, c) in test_str.chars().enumerate() {\n        if vowels.contains(&c) {\n            if i > 0 && vowels.contains(&test_str.chars().nth(i - 1).unwrap()) {\n                count += 1;\n            }\n            if i < test_str.len() - 1 && vowels.contains(&test_str.chars().nth(i + 1).unwrap()) {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `7`', /tmp/tmpyfopqdm9.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpl_6fij0v.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    while let Some(c) = curr {\n        if is_vowel(c) && is_vowel(prev.unwrap_or(' ')) {\n            count += 1;\n        }\n        prev = curr;\n        curr = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpqgfsft2z.rs:8:12\n  |\n8 |         if is_vowel(c) && is_vowel(prev.unwrap_or(' ')) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpqgfsft2z.rs:8:27\n  |\n8 |         if is_vowel(c) && is_vowel(prev.unwrap_or(' ')) {\n  |                           ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut prev = ' ';\n    let mut curr = ' ';\n    let mut next = ' ';\n    let mut i = 0;\n    for c in test_str.chars() {\n        if i == 0 {\n            prev = ' ';\n        } else {\n            prev = test_str.chars().nth(i - 1).unwrap();\n        }\n        curr = c;\n        if i == test_str.len() - 1 {\n            next = ' ';\n        } else {\n            next = test_str.chars().nth(i + 1).unwrap();\n        }\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        i += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp6gvcz7o8.rs:20:12\n   |\n20 |         if is_vowel(prev) || is_vowel(next) {\n   |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp6gvcz7o8.rs:20:30\n   |\n20 |         if is_vowel(prev) || is_vowel(next) {\n   |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count: isize = 0;\n    let mut chars = test_str.chars();\n    let mut prev_char = chars.next();\n    let mut curr_char = chars.next();\n    let mut next_char = chars.next();\n\n    while curr_char != None {\n        if is_vowel(curr_char.unwrap()) &&\n            (prev_char == None || is_vowel(prev_char.unwrap())) &&\n            (next_char == None || is_vowel(next_char.unwrap())) {\n            count += 1;\n        }\n        prev_char = curr_char;\n        curr_char = next_char;\n        next_char = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmptpb_prxb.rs:10:12\n   |\n10 |         if is_vowel(curr_char.unwrap()) &&\n   |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmptpb_prxb.rs:11:35\n   |\n11 |             (prev_char == None || is_vowel(prev_char.unwrap())) &&\n   |                                   ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmptpb_prxb.rs:12:35\n   |\n12 |             (next_char == None || is_vowel(next_char.unwrap())) {\n   |                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if is_vowel(prev.unwrap()) || is_vowel(c) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpk7pg1kmi.rs:7:12\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpk7pg1kmi.rs:7:39\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count: isize = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for ch in chars {\n        if is_vowel(prev.unwrap()) && is_vowel(ch) {\n            count += 1;\n        }\n        prev = Some(ch);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp_n78c64f.rs:7:12\n  |\n7 |         if is_vowel(prev.unwrap()) && is_vowel(ch) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp_n78c64f.rs:7:39\n  |\n7 |         if is_vowel(prev.unwrap()) && is_vowel(ch) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut i = 0;\n    let mut j = 1;\n    let mut k = 2;\n    let mut l = 3;\n    let mut m = 4;\n    let mut n = 5;\n    let mut o = 6;\n    let mut p = 7;\n    let mut q = 8;\n    let mut r = 9;\n    let mut s = 10;\n    let mut t = 11;\n    let mut u = 12;\n    let mut v = 13;\n    let mut w = 14;\n    let mut x = 15;\n    let mut y = 16;\n    let mut z = 17;\n    let mut a = 18;\n    let mut e = 19;\n    let mut i = 20;\n    let mut o = 21;\n    let mut u = 22;\n    let mut y = 23;\n    let mut vowels = [a, e, i, o, u, y];\n    let mut alphabet = [a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z];\n    let mut str_vec: Vec<char> = test_str.chars().collect();\n    for i in 0..str_vec.len() {\n        if str_vec[i] == alphabet[i] {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find value `b` in this scope\n  --> /tmp/tmpiryx8i6r.rs:29:28\n   |\n29 |     let mut alphabet = [a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z];\n   |                            ^ help: a local variable with a similar name exists: `a`\n\nerror[E0425]: cannot find value `c` in this scope\n  --> /tmp/tmpiryx8i6r.rs:29:31\n   |\n29 |     let mut alphabet = [a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z];\n   |                               ^ help: a local variable with a similar name exists: `a`\n\nerror[E0425]: cannot find value `d` in this scope\n  --> /tmp/tmpiryx8i6r.rs:29:34\n   |\n29 |     let mut alphabet = [a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z];\n   |                                  ^ help: a local variable with a similar name exists: `a`\n\nerror[E0425]: cannot find value `f` in this scope\n  --> /tmp/tmpiryx8i6r.rs:29:40\n   |\n29 |     let mut alphabet = [a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z];\n   |                                        ^ help: a local variable with a similar name exists: `a`\n\nerror[E0425]: cannot find value `g` in this scope\n  --> /tmp/tmpiryx8i6r.rs:29:43\n   |\n29 |     let mut alphabet = [a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z];\n   |                                           ^ help: a local variable with a similar name exists: `a`\n\nerror[E0425]: cannot find value `h` in this scope\n  --> /tmp/tmpiryx8i6r.rs:29:46\n   |\n29 |     let mut alphabet = [a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z];\n   |                                              ^ help: a local variable with a similar name exists: `a`\n\nerror: aborting due to 6 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpnxnml0zb.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next.is_some() {\n        if is_vowel(prev) && is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpckf55mop.rs:9:12\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpckf55mop.rs:9:30\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:56\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                        ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpoiam63v_.rs:9:99\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev != None && is_vowel(prev.unwrap()) || next != None && is_vowel(next.unwrap())) {\n  |                                                                                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    while curr != None {\n        if vowels.contains(&curr.unwrap()) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = curr;\n        curr = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmp5j9gn_xm.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp73lsj6dx.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp73lsj6dx.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n\n    while next.is_some() {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp7uykzfsl.rs:10:12\n   |\n10 |         if is_vowel(prev) || is_vowel(next) {\n   |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp7uykzfsl.rs:10:30\n   |\n10 |         if is_vowel(prev) || is_vowel(next) {\n   |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next != None {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5qf3ww6f.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5qf3ww6f.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut iter = test_str.chars();\n    let mut prev = iter.next();\n    let mut curr = iter.next();\n    let mut next = iter.next();\n    while let Some(c) = curr {\n        if is_vowel(c) && (prev.map_or(false, is_vowel) || next.map_or(false, is_vowel)) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = iter.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpgyaqki31.rs:9:12\n  |\n9 |         if is_vowel(c) && (prev.map_or(false, is_vowel) || next.map_or(false, is_vowel)) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `is_vowel` in this scope\n --> /tmp/tmpgyaqki31.rs:9:47\n  |\n9 |         if is_vowel(c) && (prev.map_or(false, is_vowel) || next.map_or(false, is_vowel)) {\n  |                                               ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `is_vowel` in this scope\n --> /tmp/tmpgyaqki31.rs:9:79\n  |\n9 |         if is_vowel(c) && (prev.map_or(false, is_vowel) || next.map_or(false, is_vowel)) {\n  |                                                                               ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut count = 0;\n    for (i, c) in test_str.chars().enumerate() {\n        if i > 0 && vowels.contains(&test_str.chars().nth(i - 1).unwrap()) {\n            count += 1;\n        }\n        if i < test_str.len() - 1 && vowels.contains(&test_str.chars().nth(i + 1).unwrap()) {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `7`', /tmp/tmp9c6dycx8.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let chars: Vec<char> = test_str.chars().collect();\n    for i in 0..chars.len() {\n        if i > 0 && vowels.contains(&chars[i - 1]) {\n            count += 1;\n        }\n        if i < chars.len() - 1 && vowels.contains(&chars[i + 1]) {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `7`', /tmp/tmpj2th5ck0.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123202,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpehqa1297.rs:9:12\n  |\n9 |         if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpehqa1297.rs:9:31\n  |\n9 |         if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n  |                               ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpehqa1297.rs:9:49\n  |\n9 |         if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n  |                                                 ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next != None {\n        if is_vowel(prev) && is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpnm26czho.rs:9:12\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpnm26czho.rs:9:30\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut i = 0;\n    let mut j = 1;\n    let mut k = 2;\n    let mut l = 3;\n\n    let mut chars: Vec<char> = test_str.chars().collect();\n\n    while j < chars.len() {\n        if chars[i] == 'a' || chars[i] == 'e' || chars[i] == 'i' || chars[i] == 'o' || chars[i] == 'u' {\n            if chars[j] == 'a' || chars[j] == 'e' || chars[j] == 'i' || chars[j] == 'o' || chars[j] == 'u' {\n                count += 1;\n            }\n        }\n        i += 1;\n        j += 1;\n    }\n\n    while k < chars.len() {\n        if chars[j] == 'a' || chars[j] == 'e' || chars[j] == 'i' || chars[j] == 'o' || chars[j] == 'u' {\n            if chars[k] == 'a' || chars[k] == 'e' || chars[k] == 'i' || chars[k] == 'o' || chars[k] == 'u' {\n                count += 1;\n            }\n        }\n        j += 1;\n        k += 1;\n    }\n\n    while l < chars.len() {\n        if chars[k] == 'a' || chars[k] == 'e' || chars[k] == 'i' || chars[k] == 'o' || chars[k] == 'u' {\n            if chars[l] == 'a' || chars[l] == 'e' || chars[l] == 'i' || chars[l] == 'o' || chars[l] == 'u' {\n                count += 1;\n            }\n        }\n        k += 1;\n        l += 1;\n    }\n\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'index out of bounds: the len is 14 but the index is 14', /tmp/tmpxnu5_3al.rs:22:12\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if is_vowel(prev.unwrap()) || is_vowel(c) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpk7pg1kmi.rs:7:12\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpk7pg1kmi.rs:7:39\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next != None {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5qf3ww6f.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5qf3ww6f.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next != None {\n        if is_vowel(prev.unwrap()) && is_vowel(next.unwrap()) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpc01whzi4.rs:9:12\n  |\n9 |         if is_vowel(prev.unwrap()) && is_vowel(next.unwrap()) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpc01whzi4.rs:9:39\n  |\n9 |         if is_vowel(prev.unwrap()) && is_vowel(next.unwrap()) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp73lsj6dx.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp73lsj6dx.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if prev.is_some() && vowels.contains(&prev.unwrap()) && vowels.contains(&c) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmp6ykjwl4z.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while let (Some(prev_char), Some(curr_char), Some(next_char)) = (prev, curr, next) {\n        if is_vowel(prev_char) || is_vowel(next_char) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpt11slecu.rs:9:12\n  |\n9 |         if is_vowel(prev_char) || is_vowel(next_char) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpt11slecu.rs:9:35\n  |\n9 |         if is_vowel(prev_char) || is_vowel(next_char) {\n  |                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if is_vowel(prev.unwrap()) || is_vowel(c) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpk7pg1kmi.rs:7:12\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpk7pg1kmi.rs:7:39\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut iter = test_str.chars();\n    let mut prev = iter.next();\n    for c in iter {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmp5rpllmd7.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpnxnml0zb.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n\n    while let Some(c) = curr {\n        if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpjyp1ga3u.rs:10:12\n   |\n10 |         if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n   |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpjyp1ga3u.rs:10:46\n   |\n10 |         if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n   |                                              ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpjyp1ga3u.rs:10:91\n   |\n10 |         if is_vowel(c) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n   |                                                                                           ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut prev_char = ' ';\n    let mut next_char = ' ';\n    let mut is_vowel = false;\n\n    for (i, c) in test_str.chars().enumerate() {\n        if i == 0 {\n            prev_char = ' ';\n        } else {\n            prev_char = test_str.chars().nth(i - 1).unwrap();\n        }\n\n        if i == test_str.len() - 1 {\n            next_char = ' ';\n        } else {\n            next_char = test_str.chars().nth(i + 1).unwrap();\n        }\n\n        is_vowel = is_vowel(c);\n\n        if is_vowel && (is_vowel(prev_char) || is_vowel(next_char)) {\n            count += 1;\n        }\n    }\n\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0618]: expected function, found `bool`\n  --> /tmp/tmpdihnx7vc.rs:21:20\n   |\n6  |     let mut is_vowel = false;\n   |         ------------ `is_vowel` has type `bool`\n...\n21 |         is_vowel = is_vowel(c);\n   |                    ^^^^^^^^---\n   |                    |\n   |                    call expression requires function\n\nerror[E0618]: expected function, found `bool`\n  --> /tmp/tmpdihnx7vc.rs:23:25\n   |\n6  |     let mut is_vowel = false;\n   |         ------------ `is_vowel` has type `bool`\n...\n23 |         if is_vowel && (is_vowel(prev_char) || is_vowel(next_char)) {\n   |                         ^^^^^^^^-----------\n   |                         |\n   |                         call expression requires function\n\nerror[E0618]: expected function, found `bool`\n  --> /tmp/tmpdihnx7vc.rs:23:48\n   |\n6  |     let mut is_vowel = false;\n   |         ------------ `is_vowel` has type `bool`\n...\n23 |         if is_vowel && (is_vowel(prev_char) || is_vowel(next_char)) {\n   |                                                ^^^^^^^^-----------\n   |                                                |\n   |                                                call expression requires function\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0618`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    for (i, c) in test_str.chars().enumerate() {\n        if i == 0 {\n            if vowels.contains(&test_str.chars().nth(i + 1).unwrap()) {\n                count += 1;\n            }\n        } else if i == test_str.len() - 1 {\n            if vowels.contains(&test_str.chars().nth(i - 1).unwrap()) {\n                count += 1;\n            }\n        } else {\n            if vowels.contains(&test_str.chars().nth(i - 1).unwrap())\n                || vowels.contains(&test_str.chars().nth(i + 1).unwrap())\n            {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `7`', /tmp/tmpx7jt844_.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    for (i, c) in test_str.chars().enumerate() {\n        if i > 0 && vowels.contains(&test_str.chars().nth(i - 1).unwrap()) {\n            count += 1;\n        }\n        if i < test_str.len() - 1 && vowels.contains(&test_str.chars().nth(i + 1).unwrap()) {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `7`', /tmp/tmp8p_t9f0e.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut iter = test_str.chars();\n    let mut prev = iter.next();\n    for c in iter {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmp5rpllmd7.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp73lsj6dx.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp73lsj6dx.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if is_vowel(prev.unwrap()) || is_vowel(c) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpk7pg1kmi.rs:7:12\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpk7pg1kmi.rs:7:39\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = vec!['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpp79q1mk0.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if is_vowel(c) || is_vowel(prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpq8fiddu0.rs:7:12\n  |\n7 |         if is_vowel(c) || is_vowel(prev.unwrap()) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpq8fiddu0.rs:7:27\n  |\n7 |         if is_vowel(c) || is_vowel(prev.unwrap()) {\n  |                           ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev_char = chars.next();\n    for c in chars {\n        if is_vowel(prev_char) && is_vowel(Some(c)) {\n            count += 1;\n        }\n        prev_char = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpi_sext7s.rs:7:12\n  |\n7 |         if is_vowel(prev_char) && is_vowel(Some(c)) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpi_sext7s.rs:7:35\n  |\n7 |         if is_vowel(prev_char) && is_vowel(Some(c)) {\n  |                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev_char = chars.next();\n    for c in chars {\n        if is_vowel(prev_char) && is_vowel(Some(c)) {\n            count += 1;\n        }\n        prev_char = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpi_sext7s.rs:7:12\n  |\n7 |         if is_vowel(prev_char) && is_vowel(Some(c)) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpi_sext7s.rs:7:35\n  |\n7 |         if is_vowel(prev_char) && is_vowel(Some(c)) {\n  |                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev_char: char = ' ';\n    let mut curr_char: char = ' ';\n    let mut next_char: char = ' ';\n    while let Some(c) = chars.next() {\n        prev_char = curr_char;\n        curr_char = next_char;\n        next_char = c;\n        if is_vowel(curr_char) && (is_vowel(prev_char) || is_vowel(next_char)) {\n            count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp0yjjp1ra.rs:12:12\n   |\n12 |         if is_vowel(curr_char) && (is_vowel(prev_char) || is_vowel(next_char)) {\n   |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp0yjjp1ra.rs:12:36\n   |\n12 |         if is_vowel(curr_char) && (is_vowel(prev_char) || is_vowel(next_char)) {\n   |                                    ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmp0yjjp1ra.rs:12:59\n   |\n12 |         if is_vowel(curr_char) && (is_vowel(prev_char) || is_vowel(next_char)) {\n   |                                                           ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfbng9qlt.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut iter = test_str.chars();\n    let mut prev = iter.next();\n    let mut curr = iter.next();\n    let mut next = iter.next();\n    while let (Some(p), Some(c), Some(n)) = (prev, curr, next) {\n        if is_vowel(p) && is_vowel(c) && is_vowel(n) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = iter.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp56vk2mzk.rs:9:12\n  |\n9 |         if is_vowel(p) && is_vowel(c) && is_vowel(n) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp56vk2mzk.rs:9:27\n  |\n9 |         if is_vowel(p) && is_vowel(c) && is_vowel(n) {\n  |                           ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp56vk2mzk.rs:9:42\n  |\n9 |         if is_vowel(p) && is_vowel(c) && is_vowel(n) {\n  |                                          ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut iter = test_str.chars();\n    let mut prev = iter.next();\n    let mut curr = iter.next();\n    let mut next = iter.next();\n    while let Some(c) = curr {\n        if is_vowel(c) && (is_vowel(prev.unwrap_or(' ')) || is_vowel(next.unwrap_or(' '))) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = iter.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp3lmddbna.rs:9:12\n  |\n9 |         if is_vowel(c) && (is_vowel(prev.unwrap_or(' ')) || is_vowel(next.unwrap_or(' '))) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp3lmddbna.rs:9:28\n  |\n9 |         if is_vowel(c) && (is_vowel(prev.unwrap_or(' ')) || is_vowel(next.unwrap_or(' '))) {\n  |                            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp3lmddbna.rs:9:61\n  |\n9 |         if is_vowel(c) && (is_vowel(prev.unwrap_or(' ')) || is_vowel(next.unwrap_or(' '))) {\n  |                                                             ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next != None {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5qf3ww6f.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5qf3ww6f.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if is_vowel(prev.unwrap()) || is_vowel(c) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpk7pg1kmi.rs:7:12\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpk7pg1kmi.rs:7:39\n  |\n7 |         if is_vowel(prev.unwrap()) || is_vowel(c) {\n  |                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next.is_some() {\n        if is_vowel(prev) || is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpjbf8z1rg.rs:9:12\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpjbf8z1rg.rs:9:30\n  |\n9 |         if is_vowel(prev) || is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev_char = chars.next();\n    for c in chars {\n        if is_vowel(prev_char) && is_vowel(Some(c)) {\n            count += 1;\n        }\n        prev_char = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpi_sext7s.rs:7:12\n  |\n7 |         if is_vowel(prev_char) && is_vowel(Some(c)) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpi_sext7s.rs:7:35\n  |\n7 |         if is_vowel(prev_char) && is_vowel(Some(c)) {\n  |                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev_char = chars.next();\n    let mut curr_char = chars.next();\n    let mut next_char = chars.next();\n    while curr_char != None {\n        if is_vowel(curr_char) && (is_vowel(prev_char) || is_vowel(next_char)) {\n            count += 1;\n        }\n        prev_char = curr_char;\n        curr_char = next_char;\n        next_char = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmppi8cbmwf.rs:9:12\n  |\n9 |         if is_vowel(curr_char) && (is_vowel(prev_char) || is_vowel(next_char)) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmppi8cbmwf.rs:9:36\n  |\n9 |         if is_vowel(curr_char) && (is_vowel(prev_char) || is_vowel(next_char)) {\n  |                                    ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmppi8cbmwf.rs:9:59\n  |\n9 |         if is_vowel(curr_char) && (is_vowel(prev_char) || is_vowel(next_char)) {\n  |                                                           ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    for c in chars {\n        if vowels.contains(&c) && vowels.contains(&prev.unwrap()) {\n            count += 1;\n        }\n        prev = Some(c);\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `7`', /tmp/tmpnxnml0zb.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut iter = test_str.chars();\n    let mut prev = iter.next();\n    let mut curr = iter.next();\n    let mut next = iter.next();\n    while next != None {\n        if is_vowel(prev) && is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = iter.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp16ba2itf.rs:9:12\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp16ba2itf.rs:9:30\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123202,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpehqa1297.rs:9:12\n  |\n9 |         if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpehqa1297.rs:9:31\n  |\n9 |         if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n  |                               ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpehqa1297.rs:9:49\n  |\n9 |         if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n  |                                                 ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut prev_char = ' ';\n    let mut next_char = ' ';\n    let mut i = 0;\n    let mut j = 1;\n    let mut k = 2;\n    let test_str_len = test_str.len();\n    let mut test_str_chars = test_str.chars();\n    while i < test_str_len {\n        if j < test_str_len {\n            next_char = test_str_chars.nth(j).unwrap();\n        }\n        if k < test_str_len {\n            next_char = test_str_chars.nth(k).unwrap();\n        }\n        if is_vowel(prev_char) || is_vowel(next_char) {\n            count += 1;\n        }\n        prev_char = test_str_chars.nth(i).unwrap();\n        i += 1;\n        j += 1;\n        k += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpc8o5w14o.rs:18:12\n   |\n18 |         if is_vowel(prev_char) || is_vowel(next_char) {\n   |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n  --> /tmp/tmpc8o5w14o.rs:18:35\n   |\n18 |         if is_vowel(prev_char) || is_vowel(next_char) {\n   |                                   ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while next.is_some() {\n        if is_vowel(prev) && is_vowel(next) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123203,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpckf55mop.rs:9:12\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpckf55mop.rs:9:30\n  |\n9 |         if is_vowel(prev) && is_vowel(next) {\n  |                              ^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr != None {\n        if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1666123202,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpehqa1297.rs:9:12\n  |\n9 |         if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpehqa1297.rs:9:31\n  |\n9 |         if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n  |                               ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpehqa1297.rs:9:49\n  |\n9 |         if is_vowel(curr) && (is_vowel(prev) || is_vowel(next)) {\n  |                                                 ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to count those characters which have vowels as their neighbors in the given string.\nfn count_vowels(test_str: String) -> isize {\n    let mut count = 0;\n    let mut chars = test_str.chars();\n    let mut prev = chars.next();\n    let mut curr = chars.next();\n    let mut next = chars.next();\n    while curr.is_some() {\n        if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n            count += 1;\n        }\n        prev = curr;\n        curr = next;\n        next = chars.next();\n    }\n    count\n}\n\nfn main() {\n    let candidate = count_vowels;\n    assert_eq!(candidate(String::from(\"bestinstareels\")), 7);\n    assert_eq!(candidate(String::from(\"partofthejourneyistheend\")), 12);\n    assert_eq!(candidate(String::from(\"amazonprime\")), 5);\n}\n",
      "timestamp": 1665510194,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:12\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |            ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:58\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                          ^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpwhmgxbg1.rs:9:103\n  |\n9 |         if is_vowel(curr.unwrap()) && (prev.is_some() && is_vowel(prev.unwrap()) || next.is_some() && is_vowel(next.unwrap())) {\n  |                                                                                                       ^^^^^^^^ not found in this scope\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
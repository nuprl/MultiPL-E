{
  "name": "mbpp_388_highest_Power_of_2",
  "language": "rs",
  "prompt": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_388_highest_Power_of_2.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut x = n;\n    x |= x >> 1;\n    x |= x >> 2;\n    x |= x >> 4;\n    x |= x >> 8;\n    x |= x >> 16;\n    x |= x >> 32;\n    x = x - (x >> 1);\n    x\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510387,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i <= n {\n        i = i << 1;\n    }\n    i >> 1\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510387,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p <= n {\n        p *= 2;\n    }\n    p / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut i = 0;\n    let mut result = 1;\n    while result <= n {\n        result = result << 1;\n        i += 1;\n    }\n    return result >> 1;\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res <<= 1;\n    }\n    res >> 1\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510387,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i = i << 1;\n    }\n    i >> 1\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510387,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `16`,\n right: `32`', /tmp/tmpcyg5krus.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    let mut p = 2;\n    while p <= n {\n        res = p;\n        p = p << 1;\n    }\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510387,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i <= n {\n        i = i << 1;\n    }\n    i >> 1\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510387,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p <= n {\n        p <<= 1;\n    }\n    p >> 1\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i = i << 1;\n    }\n    i >> 1\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510387,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `16`,\n right: `32`', /tmp/tmpcyg5krus.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res = res << 1;\n    }\n    res = res >> 1;\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut i = 0;\n    let mut result = 1;\n    while result <= n {\n        result = result << 1;\n        i += 1;\n    }\n    return result >> 1;\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res = res << 1;\n    }\n    res = res >> 1;\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i <= n {\n        i *= 2;\n    }\n    i / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res = res << 1;\n    }\n    res = res >> 1;\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i <= n {\n        i *= 2;\n    }\n    i / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut ans = 1;\n    while ans <= n {\n        ans = ans << 1;\n    }\n    ans = ans >> 1;\n    ans\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p <= n {\n        p <<= 1;\n    }\n    p >> 1\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p <= n {\n        p = p << 1;\n    }\n    p = p >> 1;\n    p\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p <= n {\n        p *= 2;\n    }\n    p / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut result = 1;\n    while result <= n {\n        result *= 2;\n    }\n    result / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut x = n;\n    x |= x >> 1;\n    x |= x >> 2;\n    x |= x >> 4;\n    x |= x >> 8;\n    x |= x >> 16;\n    x = x - (x >> 1);\n    x\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res < n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `16`,\n right: `32`', /tmp/tmpgnzmeruz.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res = res << 1;\n    }\n    res = res >> 1;\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut i = 0;\n    let mut num = 1;\n    while num <= n {\n        num = num << 1;\n        i += 1;\n    }\n    return num >> 1;\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i <= n {\n        i *= 2;\n    }\n    i / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res <<= 1;\n    }\n    res >> 1\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510387,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut i = 0;\n    let mut result = 1;\n    while result <= n {\n        result = result << 1;\n        i += 1;\n    }\n    return result >> 1;\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut result = 1;\n    while result <= n {\n        result = result << 1;\n    }\n    result = result >> 1;\n    result\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res = res << 1;\n    }\n    res = res >> 1;\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res <<= 1;\n    }\n    res >>= 1\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123422,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n --> /tmp/tmpd5p05nby.rs:7:5\n  |\n2 | fn highest_Power_of_2(n: isize) -> isize {\n  |                                    ----- expected `isize` because of return type\n...\n7 |     res >>= 1\n  |     ^^^^^^^^^ expected `isize`, found `()`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res = res << 1;\n    }\n    res = res >> 1;\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res <<= 1;\n    }\n    res >>= 1\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123422,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n --> /tmp/tmpd5p05nby.rs:7:5\n  |\n2 | fn highest_Power_of_2(n: isize) -> isize {\n  |                                    ----- expected `isize` because of return type\n...\n7 |     res >>= 1\n  |     ^^^^^^^^^ expected `isize`, found `()`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res <<= 1;\n    }\n    res >> 1\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510387,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p <= n {\n        p <<= 1;\n    }\n    p >> 1\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p <= n {\n        p *= 2;\n    }\n    p / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p <= n {\n        p <<= 1;\n    }\n    p >> 1\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p <= n {\n        p = p << 1;\n    }\n    p = p >> 1;\n    p\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p <= n {\n        p <<= 1;\n    }\n    p >> 1\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i <= n {\n        i *= 2;\n    }\n    i / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res = res << 1;\n    }\n    res = res >> 1;\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut x = n;\n    x |= x >> 1;\n    x |= x >> 2;\n    x |= x >> 4;\n    x |= x >> 8;\n    x |= x >> 16;\n    x |= x >> 32;\n    x - (x >> 1)\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    let mut p = 1;\n    while p <= n {\n        res = p;\n        p = p << 1;\n    }\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p <= n {\n        p *= 2;\n    }\n    p / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut i = 0;\n    let mut num = 1;\n    while num <= n {\n        num = num << 1;\n        i += 1;\n    }\n    return num >> 1;\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p <= n {\n        p = p << 1;\n    }\n    return p >> 1;\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p <= n {\n        p *= 2;\n    }\n    p / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res = res << 1;\n    }\n    res = res >> 1;\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p <= n {\n        p = p << 1;\n    }\n    p = p >> 1;\n    p\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i <= n {\n        i = i << 1;\n    }\n    return i >> 1;\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `16`,\n right: `32`', /tmp/tmpf6zuagt5.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p <= n {\n        p *= 2;\n    }\n    p / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p <= n {\n        p = p << 1;\n    }\n    p = p >> 1;\n    p\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res = res << 1;\n    }\n    res = res >> 1;\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res = res << 1;\n    }\n    res = res >> 1;\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    let mut p = 2;\n    while p <= n {\n        p = p << 1;\n        res = res << 1;\n    }\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut i = 0;\n    let mut result = 1;\n    while result <= n {\n        result = result << 1;\n        i += 1;\n    }\n    return result >> 1;\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    let mut p = 2;\n    while p <= n {\n        res = p;\n        p *= 2;\n    }\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut x = n;\n    x |= x >> 1;\n    x |= x >> 2;\n    x |= x >> 4;\n    x |= x >> 8;\n    x |= x >> 16;\n    x |= x >> 32;\n    x -= x >> 1;\n    x\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut i = 0;\n    let mut result = 1;\n    while result <= n {\n        result = result << 1;\n        i += 1;\n    }\n    return result >> 1;\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res = res << 1;\n    }\n    res = res >> 1;\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res = res << 1;\n    }\n    res = res >> 1;\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut i = n;\n    let mut res = 1;\n    while i > 0 {\n        i = i >> 1;\n        res = res << 1;\n    }\n    res >> 1\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res = res << 1;\n    }\n    res = res >> 1;\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res = res << 1;\n    }\n    res = res >> 1;\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `16`,\n right: `32`', /tmp/tmpf6zuagt5.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i <= n {\n        i = i << 1;\n    }\n    i = i >> 1;\n    return i;\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res < n {\n        res = res << 1;\n    }\n    res >> 1\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `16`,\n right: `32`', /tmp/tmpryrvuyu5.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p <= n {\n        p <<= 1;\n    }\n    p >> 1\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res = res << 1;\n    }\n    res = res >> 1;\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut x = n;\n    x |= x >> 1;\n    x |= x >> 2;\n    x |= x >> 4;\n    x |= x >> 8;\n    x |= x >> 16;\n    x |= x >> 32;\n    x - (x >> 1)\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res < n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `16`,\n right: `32`', /tmp/tmpgnzmeruz.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res = res << 1;\n    }\n    res = res >> 1;\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n |= n >> 32;\n    n - (n >> 1)\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res = res << 1;\n    }\n    res = res >> 1;\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res = res << 1;\n    }\n    res = res >> 1;\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p = p << 1;\n    }\n    p >> 1\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `16`,\n right: `32`', /tmp/tmp4vyeyhxd.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i <= n {\n        i *= 2;\n    }\n    i / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res <<= 1;\n    }\n    res >>= 1\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123422,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n --> /tmp/tmpd5p05nby.rs:7:5\n  |\n2 | fn highest_Power_of_2(n: isize) -> isize {\n  |                                    ----- expected `isize` because of return type\n...\n7 |     res >>= 1\n  |     ^^^^^^^^^ expected `isize`, found `()`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p <= n {\n        p = p << 1;\n    }\n    p = p >> 1;\n    p\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut i = n;\n    let mut count = 0;\n    while i > 1 {\n        i = i / 2;\n        count += 1;\n    }\n    return 2_isize.pow(count);\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res = res << 1;\n    }\n    res = res >> 1;\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res = res << 1;\n    }\n    res = res >> 1;\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res = res << 1;\n    }\n    res >> 1\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res = res << 1;\n    }\n    res = res >> 1;\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut result = 1;\n    while result <= n {\n        result = result << 1;\n    }\n    result = result >> 1;\n    result\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p = p << 1;\n    }\n    p >> 1\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `16`,\n right: `32`', /tmp/tmp4vyeyhxd.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut result = 1;\n    while result <= n {\n        result *= 2;\n    }\n    result / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i <= n {\n        i = i << 1;\n    }\n    i = i >> 1;\n    i\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res = res << 1;\n    }\n    res = res >> 1;\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut i = 0;\n    let mut num = 1;\n    while num <= n {\n        num = num << 1;\n        i += 1;\n    }\n    return num >> 1;\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut x = n;\n    x |= x >> 1;\n    x |= x >> 2;\n    x |= x >> 4;\n    x |= x >> 8;\n    x |= x >> 16;\n    x |= x >> 32;\n    x = x - (x >> 1);\n    x\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510387,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut i = n;\n    while i & (i - 1) != 0 {\n        i = i & (i - 1);\n    }\n    i\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 0;\n    let mut p = 1;\n    while p <= n {\n        res = p;\n        p *= 2;\n    }\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 0;\n    let mut p = 1;\n    while p <= n {\n        res = p;\n        p <<= 1;\n    }\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res = res << 1;\n    }\n    res = res >> 1;\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res <<= 1;\n    }\n    res >>= 1\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123422,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n --> /tmp/tmpd5p05nby.rs:7:5\n  |\n2 | fn highest_Power_of_2(n: isize) -> isize {\n  |                                    ----- expected `isize` because of return type\n...\n7 |     res >>= 1\n  |     ^^^^^^^^^ expected `isize`, found `()`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut ans = 1;\n    while ans <= n {\n        ans = ans << 1;\n    }\n    ans = ans >> 1;\n    ans\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res = res << 1;\n    }\n    res = res >> 1;\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut i = 0;\n    let mut result = 1;\n    while result <= n {\n        result = result << 1;\n        i += 1;\n    }\n    return result >> 1;\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p <= n {\n        p *= 2;\n    }\n    p / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res <<= 1;\n    }\n    res >>= 1\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123422,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n --> /tmp/tmpd5p05nby.rs:7:5\n  |\n2 | fn highest_Power_of_2(n: isize) -> isize {\n  |                                    ----- expected `isize` because of return type\n...\n7 |     res >>= 1\n  |     ^^^^^^^^^ expected `isize`, found `()`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    let mut x = n;\n    while x > 1 {\n        x = x >> 1;\n        res = res << 1;\n    }\n    return res;\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p <= n {\n        p *= 2;\n    }\n    p / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut i = 0;\n    let mut result = 1;\n    while result <= n {\n        result = result << 1;\n        i += 1;\n    }\n    return result >> 1;\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut i = 0;\n    let mut res = 1;\n    while res <= n {\n        res = res << 1;\n        i += 1;\n    }\n    res >> 1\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut result = 1;\n    while result < n {\n        result *= 2;\n    }\n    result / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `16`,\n right: `32`', /tmp/tmpdy3xvd5q.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res = res << 1;\n    }\n    res = res >> 1;\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i <= n {\n        i *= 2;\n    }\n    i / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p <= n {\n        p *= 2;\n    }\n    p / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res = res << 1;\n    }\n    res = res >> 1;\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut ans = 1;\n    while ans <= n {\n        ans = ans << 1;\n    }\n    ans = ans >> 1;\n    ans\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p <= n {\n        p *= 2;\n    }\n    p / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res = res << 1;\n    }\n    res = res >> 1;\n    return res;\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `16`,\n right: `32`', /tmp/tmpf6zuagt5.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res = res << 1;\n    }\n    res = res >> 1;\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i <= n {\n        i *= 2;\n    }\n    i / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut ans = 1;\n    while ans <= n {\n        ans *= 2;\n    }\n    ans / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut ans = 1;\n    while ans <= n {\n        ans = ans << 1;\n    }\n    ans = ans >> 1;\n    ans\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res <<= 1;\n    }\n    res >>= 1\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123422,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n --> /tmp/tmpd5p05nby.rs:7:5\n  |\n2 | fn highest_Power_of_2(n: isize) -> isize {\n  |                                    ----- expected `isize` because of return type\n...\n7 |     res >>= 1\n  |     ^^^^^^^^^ expected `isize`, found `()`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i <= n {\n        i *= 2;\n    }\n    i / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p <= n {\n        p *= 2;\n    }\n    p / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    let mut p = 2;\n    while p <= n {\n        res = p;\n        p *= 2;\n    }\n    res\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut result = 1;\n    while result <= n {\n        result *= 2;\n    }\n    result / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut res = 1;\n    while res <= n {\n        res *= 2;\n    }\n    res / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i <= n {\n        i = i << 1;\n    }\n    i = i >> 1;\n    return i;\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1666123423,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p <= n {\n        p *= 2;\n    }\n    p / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the highest power of 2 that is less than or equal to n.\nfn highest_Power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p <= n {\n        p *= 2;\n    }\n    p / 2\n}\n\nfn main() {\n    let candidate = highest_Power_of_2;\n    assert_eq!(candidate(10), 8);\n    assert_eq!(candidate(19), 16);\n    assert_eq!(candidate(32), 32);\n}\n",
      "timestamp": 1665510386,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
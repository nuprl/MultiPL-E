{
  "name": "mbpp_770_odd_num_sum",
  "language": "rs",
  "prompt": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_770_odd_num_sum.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmpfw7m7ca3.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpe9sc4r29.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp1y3cgonk.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpe9sc4r29.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpe9sc4r29.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmpfw7m7ca3.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp1y3cgonk.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += (2 * i - 1).pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i * i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp35z0qcyb.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpe9sc4r29.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    return sum;\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpng_pxbml.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpe9sc4r29.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += (2 * i - 1).pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmpfw7m7ca3.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp1y3cgonk.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp1y3cgonk.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp1y3cgonk.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpe9sc4r29.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += (2 * i - 1).pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpe9sc4r29.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp1y3cgonk.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpe9sc4r29.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp1y3cgonk.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp1y3cgonk.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp1y3cgonk.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += (2 * i - 1).pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        let num = 2 * i - 1;\n        sum += num.pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp1y3cgonk.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += (2 * i - 1).pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmpfw7m7ca3.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp1y3cgonk.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmpfw7m7ca3.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpe9sc4r29.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += (2*i - 1).pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpe9sc4r29.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp1y3cgonk.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmpfw7m7ca3.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp1y3cgonk.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp1y3cgonk.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmpfw7m7ca3.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmpfw7m7ca3.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 == 1 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpw3wce8i5.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += (2 * i - 1).pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp1y3cgonk.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += (2 * i - 1).pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpe9sc4r29.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpe9sc4r29.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += (2*i - 1).pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmpcx74tb4b.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpe9sc4r29.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp1y3cgonk.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp1y3cgonk.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += (2 * i - 1).pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    return sum;\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp2t02d177.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpe9sc4r29.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp1y3cgonk.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpe9sc4r29.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp1y3cgonk.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut i = 1;\n    while i <= n {\n        sum += i * i * i * i;\n        i += 2;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpafqc3nl_.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp1y3cgonk.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp1y3cgonk.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp1y3cgonk.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum = sum + i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpfa32f122.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmpfw7m7ca3.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..=n {\n        sum += (2 * i - 1).pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += (2 * i - 1).pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 == 1 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpw3wce8i5.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += (2 * i - 1).pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    return sum;\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp2t02d177.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp1y3cgonk.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp1y3cgonk.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpe9sc4r29.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 == 1 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpyl4d1mkg.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpe9sc4r29.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp1y3cgonk.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmpfw7m7ca3.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += (2 * i - 1).pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp1y3cgonk.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpe9sc4r29.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpe9sc4r29.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpe9sc4r29.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp1y3cgonk.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += (2 * i - 1).pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += (2 * i - 1).pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp1y3cgonk.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp1y3cgonk.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += (2 * i - 1).pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmpfw7m7ca3.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum = sum + i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpwoeti9ge.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpe9sc4r29.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp1y3cgonk.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmpfw7m7ca3.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmpfw7m7ca3.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmpfw7m7ca3.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmpfw7m7ca3.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmpfw7m7ca3.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpe9sc4r29.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmpfw7m7ca3.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpe9sc4r29.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpe9sc4r29.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += (2 * i - 1).pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        let odd_num = 2 * i - 1;\n        sum += odd_num * odd_num * odd_num * odd_num;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpe9sc4r29.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i.pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmp29_3pe5_.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum = sum + i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpgwwdu_rj.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmpfw7m7ca3.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmpfw7m7ca3.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i * i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmpfw7m7ca3.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..=n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpeb4w8aei.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpe9sc4r29.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpe9sc4r29.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i.pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `82`', /tmp/tmp9jxabmxy.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpe9sc4r29.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpe9sc4r29.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmp1y3cgonk.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += (2 * i - 1).pow(4);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1666122459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the sum of fourth power of first n odd natural numbers.\nfn odd_num_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i.pow(4);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = odd_num_sum;\n    assert_eq!(candidate(2), 82);\n    assert_eq!(candidate(3), 707);\n    assert_eq!(candidate(4), 3108);\n}\n",
      "timestamp": 1665509955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `82`', /tmp/tmpu_450pgt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    }
  ]
}
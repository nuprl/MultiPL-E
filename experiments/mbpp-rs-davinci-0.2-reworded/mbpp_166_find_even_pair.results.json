{
  "name": "mbpp_166_find_even_pair",
  "language": "rs",
  "prompt": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_166_find_even_pair.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in (i + 1)..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `4`', /tmp/tmp1biptp7x.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in (i + 1)..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut even_count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                even_count += 1;\n            }\n        }\n    }\n    even_count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in (i + 1)..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `4`', /tmp/tmp1biptp7x.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut even_count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                even_count += 1;\n            }\n        }\n    }\n    even_count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut even_count = 0;\n    for i in 0..A.len() {\n        for j in i..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                even_count += 1;\n            }\n        }\n    }\n    even_count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `4`', /tmp/tmp0pmcvt1e.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut even_count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                even_count += 1;\n            }\n        }\n    }\n    even_count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut even_count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                even_count += 1;\n            }\n        }\n    }\n    even_count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut even_count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                even_count += 1;\n            }\n        }\n    }\n    even_count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n\n    for i in 0..A.len() {\n        for j in i..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `4`', /tmp/tmpwy61ex0k.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `4`', /tmp/tmp1biptp7x.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count: isize = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut even_count = 0;\n    let mut odd_count = 0;\n    for i in A {\n        if i % 2 == 0 {\n            even_count += 1;\n        } else {\n            odd_count += 1;\n        }\n    }\n    even_count * (even_count - 1) / 2 + odd_count * (odd_count - 1) / 2\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut even_count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                even_count += 1;\n            }\n        }\n    }\n    even_count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `4`', /tmp/tmp1biptp7x.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in (i + 1)..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n    for a in A {\n        if a % 2 == 0 {\n            even += 1;\n        } else {\n            odd += 1;\n        }\n    }\n    even * odd\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `6`,\n right: `4`', /tmp/tmp6bdevlf7.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `4`', /tmp/tmp1biptp7x.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut even_count = 0;\n    let mut odd_count = 0;\n    for a in A {\n        if a % 2 == 0 {\n            even_count += 1;\n        } else {\n            odd_count += 1;\n        }\n    }\n    even_count * (even_count - 1) / 2 + odd_count * (odd_count - 1) / 2\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in (i + 1)..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `4`', /tmp/tmp1biptp7x.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in (i + 1)..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in 0..A.len() {\n            if i != j && (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `4`', /tmp/tmph9db8lvf.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in (i + 1)..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in (i + 1)..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `4`', /tmp/tmp1biptp7x.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in 0..A.len() {\n            if i != j {\n                let xor = A[i] ^ A[j];\n                if xor % 2 == 0 {\n                    count += 1;\n                }\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `4`', /tmp/tmp4gvy0sfq.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `4`', /tmp/tmp1biptp7x.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut even_count = 0;\n    let mut odd_count = 0;\n    for a in A {\n        if a % 2 == 0 {\n            even_count += 1;\n        } else {\n            odd_count += 1;\n        }\n    }\n    even_count * (even_count - 1) / 2 + odd_count * (odd_count - 1) / 2\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut even_count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                even_count += 1;\n            }\n        }\n    }\n    even_count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in (i + 1)..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in (i + 1)..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut even_count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                even_count += 1;\n            }\n        }\n    }\n    even_count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if A[i] ^ A[j] % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `4`', /tmp/tmptojo_mmq.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in (i + 1)..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut even_count = 0;\n    let mut odd_count = 0;\n    for i in A {\n        if i % 2 == 0 {\n            even_count += 1;\n        } else {\n            odd_count += 1;\n        }\n    }\n    even_count * (even_count - 1) / 2 + odd_count * (odd_count - 1) / 2\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in (i + 1)..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `4`', /tmp/tmp1biptp7x.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `4`', /tmp/tmp1biptp7x.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut even_count = 0;\n    let mut odd_count = 0;\n    for i in A {\n        if i % 2 == 0 {\n            even_count += 1;\n        } else {\n            odd_count += 1;\n        }\n    }\n    even_count * (even_count - 1) / 2 + odd_count * (odd_count - 1) / 2\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if A[i] ^ A[j] % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `4`', /tmp/tmp0sdrk8s2.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut even = 0;\n    let mut odd = 0;\n    for a in A {\n        if a % 2 == 0 {\n            even += 1;\n        } else {\n            odd += 1;\n        }\n    }\n    even * odd\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `6`,\n right: `4`', /tmp/tmp6bdevlf7.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut even_count = 0;\n    let mut odd_count = 0;\n    for a in A {\n        if a % 2 == 0 {\n            even_count += 1;\n        } else {\n            odd_count += 1;\n        }\n    }\n    even_count * (even_count - 1) / 2 + odd_count * (odd_count - 1) / 2\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut even_count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                even_count += 1;\n            }\n        }\n    }\n    even_count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in (i + 1)..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `4`', /tmp/tmp1biptp7x.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut even_count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                even_count += 1;\n            }\n        }\n    }\n    even_count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `4`', /tmp/tmp1biptp7x.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if A[i] ^ A[j] % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `4`', /tmp/tmptojo_mmq.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `4`', /tmp/tmp1biptp7x.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut even_count = 0;\n    let mut odd_count = 0;\n\n    for i in A {\n        if i % 2 == 0 {\n            even_count += 1;\n        } else {\n            odd_count += 1;\n        }\n    }\n\n    even_count * (even_count - 1) / 2 + odd_count * (odd_count - 1) / 2\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1666122758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i+1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i + 1..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in (i + 1)..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510209,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function that counts the number of pairs of integers in a vector that xor to an even number.\nfn find_even_pair(A: Vec<isize>) -> isize {\n    let mut count = 0;\n    for i in 0..A.len() {\n        for j in i..A.len() {\n            if (A[i] ^ A[j]) % 2 == 0 {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = find_even_pair;\n    assert_eq!(candidate(vec![5, 4, 7, 2, 1]), 4);\n    assert_eq!(candidate(vec![7, 2, 8, 1, 0, 5, 11]), 9);\n    assert_eq!(candidate(vec![1, 2, 3]), 1);\n}\n",
      "timestamp": 1665510208,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `9`,\n right: `4`', /tmp/tmp1biptp7x.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    }
  ]
}
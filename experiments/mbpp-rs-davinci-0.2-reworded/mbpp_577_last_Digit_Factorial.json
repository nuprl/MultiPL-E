{
  "name": "mbpp_577_last_Digit_Factorial",
  "language": "rs",
  "prompt": "/// Write a rsthon function to find the last digit in factorial of a given number.\nfn last_Digit_Factorial(n: isize) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_577_last_Digit_Factorial.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = last_Digit_Factorial;\n    assert_eq!(candidate(4), 4);\n    assert_eq!(candidate(21), 0);\n    assert_eq!(candidate(30), 0);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut factorial = 1;\n    for i in 1..n + 1 {\n        factorial = (factorial * i) % 10;\n    }\n    factorial",
    "    let mut factorial = 1;\n    for i in 1..n + 1 {\n        factorial = factorial * i;\n    }\n    factorial % 10",
    "    let mut fact = 1;\n    for i in 1..n+1 {\n        fact = (fact * i) % 10;\n    }\n    fact",
    "    let mut factorial = 1;\n    for i in 1..=n {\n        factorial *= i;\n    }\n    factorial % 10",
    "    let mut factorial = 1;\n    for i in 1..n + 1 {\n        factorial *= i;\n    }\n    factorial % 10",
    "    let mut fact = 1;\n    for i in 1..n+1 {\n        fact = (fact * i) % 10;\n    }\n    fact",
    "    let mut factorial: isize = 1;\n    for i in 1..n + 1 {\n        factorial = (factorial * i) % 10;\n    }\n    factorial",
    "    let mut factorial = 1;\n    for i in 1..n+1 {\n        factorial *= i;\n    }\n    let mut last_digit = factorial % 10;\n    last_digit",
    "    let mut fact = 1;\n    for i in 1..n + 1 {\n        fact = (fact * i) % 10;\n    }\n    fact",
    "    let mut fact = 1;\n    for i in 1..n + 1 {\n        fact *= i;\n    }\n    fact % 10",
    "    let mut res = 1;\n    for i in 1..n + 1 {\n        res = (res * i) % 10;\n    }\n    res",
    "    let mut factorial = 1;\n    for i in 1..n + 1 {\n        factorial *= i;\n    }\n    factorial % 10",
    "    let mut fact = 1;\n    for i in 1..n + 1 {\n        fact = (fact * i) % 10;\n    }\n    return fact;",
    "    let mut fact = 1;\n    for i in 1..n + 1 {\n        fact = (fact * i) % 10;\n    }\n    fact",
    "    let mut fact = 1;\n    for i in 1..n + 1 {\n        fact = (fact * i) % 10;\n    }\n    fact",
    "    let mut fact = 1;\n    for i in 1..n+1 {\n        fact = fact * i;\n    }\n    let mut last_digit = fact % 10;\n    last_digit",
    "    let mut factorial: isize = 1;\n    let mut i: isize = 1;\n    while i <= n {\n        factorial *= i;\n        i += 1;\n    }\n    factorial % 10",
    "    let mut factorial = 1;\n    for i in 1..n + 1 {\n        factorial *= i;\n    }\n    factorial % 10",
    "    let mut fact = 1;\n    for i in 1..n + 1 {\n        fact = (fact * i) % 10;\n    }\n    fact",
    "    let mut fact = 1;\n    for i in 1..n + 1 {\n        fact = fact * i;\n    }\n    fact % 10"
  ]
}
{
  "name": "mbpp_468_max_product",
  "language": "rs",
  "prompt": "/// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that vector.\nfn max_product(arr: Vec<isize>) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_468_max_product.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = max_product;\n    assert_eq!(candidate(vec![3, 100, 4, 5, 150, 6]), 3000);\n    assert_eq!(candidate(vec![4, 42, 55, 68, 80]), 50265600);\n    assert_eq!(candidate(vec![10, 22, 9, 33, 21, 50, 41, 60]), 2460);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut max_prod = 1;\n    let mut curr_prod = 1;\n    let mut prev = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > prev {\n            curr_prod *= arr[i];\n            if curr_prod > max_prod {\n                max_prod = curr_prod;\n            }\n        } else {\n            curr_prod = 1;\n        }\n        prev = arr[i];\n    }\n    max_prod",
    "    let mut max_product = 1;\n    let mut current_product = 1;\n    let mut current_max = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > current_max {\n            current_max = arr[i];\n            current_product *= arr[i];\n        } else {\n            current_product = 1;\n        }\n        max_product = max(max_product, current_product);\n    }\n    max_product",
    "    let mut max_product = 1;\n    let mut current_product = 1;\n    for i in 0..arr.len() {\n        current_product *= arr[i];\n        if current_product > max_product {\n            max_product = current_product;\n        }\n        if current_product == 0 {\n            current_product = 1;\n        }\n    }\n    max_product",
    "    let mut max_product = 0;\n    let mut product = 1;\n    let mut last_max = 0;\n    for i in 0..arr.len() {\n        if arr[i] > last_max {\n            product *= arr[i];\n            last_max = arr[i];\n        } else {\n            max_product = max(max_product, product);\n            product = 1;\n            last_max = 0;\n        }\n    }\n    max(max_product, product)",
    "    let mut max_product = 1;\n    let mut product = 1;\n    let mut last = arr[0];\n    for i in arr {\n        if i > last {\n            product *= i;\n        } else {\n            max_product = max(max_product, product);\n            product = i;\n        }\n        last = i;\n    }\n    max(max_product, product)",
    "    let mut max_product = 0;\n    let mut max_so_far = 0;\n    let mut min_so_far = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 0;\n            min_so_far = 0;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n    max_product",
    "    let mut max = isize::min_value();\n    let mut product = 1;\n    let mut i = 0;\n    let mut j = 0;\n    while j < arr.len() {\n        product *= arr[j];\n        if product > max {\n            max = product;\n        }\n        if product < 0 {\n            product = 1;\n            i = j + 1;\n        }\n        j += 1;\n    }\n    max",
    "    let mut max_product = 1;\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n    for i in arr {\n        if i > 0 {\n            max_product_so_far = max_product_so_far * i;\n            min_product_so_far = min(min_product_so_far * i, 1);\n        } else if i == 0 {\n            max_product_so_far = 1;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(min_product_so_far * i, 1);\n            min_product_so_far = temp * i;\n        }\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n    max_product",
    "    let mut max_product = 0;\n    let mut max_product_so_far = 0;\n    let mut min_product_so_far = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far = max_product_so_far * arr[i];\n            min_product_so_far = min(1, min_product_so_far * arr[i]);\n        } else if arr[i] == 0 {\n            max_product_so_far = 0;\n            min_product_so_far = 0;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(1, min_product_so_far * arr[i]);\n            min_product_so_far = temp * arr[i];\n        }\n\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n\n    max_product",
    "    let mut max_product = 1;\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n\n        if max_product < max_so_far {\n            max_product = max_so_far;\n        }\n    }\n\n    max_product",
    "    let mut max_product = 1;\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_so_far = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n\n        if max_product < max_so_far {\n            max_product = max_so_far;\n        }\n    }\n\n    max_product",
    "    let mut max_product = 0;\n    let mut min_product = 0;\n    let mut max_so_far = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product = max_product * arr[i];\n            min_product = min(min_product * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product = 0;\n            min_product = 0;\n        } else {\n            let temp = max_product;\n            max_product = max(min_product * arr[i], 1);\n            min_product = temp * arr[i];\n        }\n        if max_product > max_so_far {\n            max_so_far = max_product;\n        }\n    }\n    max_so_far",
    "    let mut max_product = 1;\n    let mut curr_product = 1;\n    let mut prev = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > prev {\n            curr_product *= arr[i];\n            max_product = max(max_product, curr_product);\n        } else {\n            curr_product = 1;\n        }\n        prev = arr[i];\n    }\n    max_product",
    "    let mut max_product = 1;\n    let mut product = 1;\n    let mut prev = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > prev {\n            product *= arr[i];\n            if product > max_product {\n                max_product = product;\n            }\n        } else {\n            product = 1;\n        }\n        prev = arr[i];\n    }\n    max_product",
    "    let mut max_product = 1;\n    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n    for i in arr {\n        if i > 0 {\n            max_so_far = max_so_far * i;\n            min_so_far = min(min_so_far * i, 1);\n        } else if i == 0 {\n            max_so_far = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_so_far;\n            max_so_far = max(min_so_far * i, 1);\n            min_so_far = temp * i;\n        }\n        if max_so_far > max_product {\n            max_product = max_so_far;\n        }\n    }\n    max_product",
    "    let mut max_product = 1;\n    let mut current_product = 1;\n    let mut last_number = 0;\n    for &number in arr.iter() {\n        if number > last_number {\n            current_product *= number;\n        } else {\n            max_product = max(max_product, current_product);\n            current_product = 1;\n        }\n        last_number = number;\n    }\n    max_product = max(max_product, current_product);\n    max_product",
    "    let mut max_product = 1;\n    let mut current_product = 1;\n    let mut current_min = 1;\n    let mut current_max = 1;\n\n    for i in arr {\n        if i > 0 {\n            current_max = current_max * i;\n            current_min = current_min.min(current_min * i);\n        } else if i == 0 {\n            current_max = 1;\n            current_min = 1;\n        } else {\n            let temp = current_max;\n            current_max = current_min.max(current_min * i);\n            current_min = temp * i;\n        }\n        if current_max > max_product {\n            max_product = current_max;\n        }\n    }\n    max_product",
    "    let mut max_product = 0;\n    let mut max_product_so_far = 1;\n    let mut min_product_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_product_so_far *= arr[i];\n            min_product_so_far = min(min_product_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_product_so_far = 1;\n            min_product_so_far = 1;\n        } else {\n            let temp = max_product_so_far;\n            max_product_so_far = max(min_product_so_far * arr[i], 1);\n            min_product_so_far = temp * arr[i];\n        }\n\n        if max_product_so_far > max_product {\n            max_product = max_product_so_far;\n        }\n    }\n\n    max_product",
    "    let mut max = 0;\n    let mut product = 1;\n    let mut start = 0;\n    let mut end = 0;\n    let mut i = 0;\n    while i < arr.len() {\n        if arr[i] > arr[i + 1] {\n            product *= arr[i];\n            if product > max {\n                max = product;\n                end = i;\n            }\n            product = 1;\n            start = i + 1;\n        } else {\n            product *= arr[i];\n        }\n        i += 1;\n    }\n    max",
    "    let mut max_product = 1;\n    let mut current_product = 1;\n    let mut current_max = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > current_max {\n            current_max = arr[i];\n            current_product = current_product * arr[i];\n            if current_product > max_product {\n                max_product = current_product;\n            }\n        } else {\n            current_product = 1;\n        }\n    }\n    max_product"
  ]
}
{
  "name": "mbpp_777_find_sum",
  "language": "pl",
  "prompt": "# Write a python function to find the sum of non-repeated elements in a given list.\nsub find_sum {\n    my($arr) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_777_find_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&find_sum;\n        if(eq_deeply($candidate->([1, 2, 3, 1, 1, 4, 5, 6]),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 10, 9, 4, 2, 10, 10, 45, 4]),71)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([12, 10, 9, 45, 2, 10, 10, 45, 10]),78)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my %hash;\n    my $sum = 0;\n    foreach my $i (@$arr) {\n        if(!exists($hash{$i})) {\n            $hash{$i} = 1;\n            $sum += $i;\n        }\n    }\n    return $sum;\n}",
    "    my %hash;\n    my $sum = 0;\n    foreach my $i (@$arr) {\n        if(exists $hash{$i}) {\n            $hash{$i}++;\n        } else {\n            $hash{$i} = 1;\n        }\n    }\n    foreach my $j (keys %hash) {\n        if($hash{$j} == 1) {\n            $sum += $j;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my %hash;\n    foreach my $element (@$arr) {\n        if(exists $hash{$element}) {\n            $hash{$element}++;\n        } else {\n            $hash{$element} = 1;\n        }\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} == 1) {\n            $sum += $key;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my %hash;\n    foreach my $i (@$arr) {\n        if(!exists $hash{$i}) {\n            $hash{$i} = 1;\n            $sum += $i;\n        }\n    }\n    return $sum;\n}",
    "    my %hash;\n    my $sum = 0;\n    foreach my $i (@$arr) {\n        if(!exists($hash{$i})) {\n            $sum += $i;\n            $hash{$i} = 1;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my %hash;\n    foreach my $i (@$arr) {\n        if(!exists $hash{$i}) {\n            $hash{$i} = 1;\n            $sum += $i;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my %hash;\n    foreach my $i (@$arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (@$arr) {\n        if($hash{$i} == 1) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}",
    "    my %count;\n    my $sum = 0;\n    foreach my $elem (@$arr) {\n        $count{$elem}++;\n    }\n    foreach my $elem (@$arr) {\n        if ($count{$elem} == 1) {\n            $sum += $elem;\n        }\n    }\n    return $sum;\n}",
    "    my %hash = map { $_ => 1 } @$arr;\n    my @unique = keys %hash;\n    my $sum = 0;\n    foreach my $i (@unique) {\n        $sum += $i;\n    }\n    return $sum;\n}",
    "    my %hash = map { $_ => 1 } @$arr;\n    my @uniq = keys %hash;\n    my $sum = 0;\n    foreach my $ele (@uniq) {\n        $sum += $ele;\n    }\n    return $sum;\n}",
    "    my %hash;\n    my $sum = 0;\n    foreach my $i (@$arr) {\n        if (exists $hash{$i}) {\n            $hash{$i}++;\n        } else {\n            $hash{$i} = 1;\n        }\n    }\n    foreach my $i (keys %hash) {\n        if ($hash{$i} == 1) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}",
    "    my %hash = map {$_ => 1} @$arr;\n    my $sum = 0;\n    foreach my $key (keys %hash) {\n        $sum += $key;\n    }\n    return $sum;\n}",
    "    my %hash = map { $_ => 1 } @$arr;\n    my $sum = 0;\n    foreach my $key (keys %hash) {\n        $sum += $key;\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my %hash;\n    foreach my $i (@$arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (keys %hash) {\n        if ($hash{$i} == 1) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}",
    "    my %hash = map {$_ => 1} @$arr;\n    my $sum = 0;\n    foreach my $key (keys %hash) {\n        $sum += $key;\n    }\n    return $sum;\n}",
    "    my %count;\n    my $sum = 0;\n    foreach my $i (@$arr) {\n        $count{$i}++;\n    }\n    foreach my $i (keys %count) {\n        if ($count{$i} == 1) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my %hash;\n    foreach my $i (@$arr) {\n        if(!$hash{$i}) {\n            $sum += $i;\n            $hash{$i} = 1;\n        }\n    }\n    return $sum;\n}",
    "    my %hash;\n    my $sum = 0;\n    foreach my $i (@$arr) {\n        if(exists $hash{$i}) {\n            $hash{$i}++;\n        }\n        else {\n            $hash{$i} = 1;\n        }\n    }\n    foreach my $i (keys %hash) {\n        if($hash{$i} == 1) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}",
    "    my %hash = map { $_ => 1 } @$arr;\n    my $sum = 0;\n    foreach my $key (keys %hash) {\n        $sum += $key;\n    }\n    return $sum;\n}",
    "    my %hash;\n    my $sum = 0;\n    foreach my $i (@$arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (keys %hash) {\n        if ($hash{$i} == 1) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}"
  ]
}
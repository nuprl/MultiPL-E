{
  "name": "mbpp_86_centered_hexagonal_number",
  "language": "pl",
  "prompt": "# Write a function to find nth centered hexagonal number.\nsub centered_hexagonal_number {\n    my($n) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_86_centered_hexagonal_number.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&centered_hexagonal_number;\n        if(eq_deeply($candidate->(10),271)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(2),7)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(9),217)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2*$n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2*$n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    my $result = 0;\n    if ($n == 1) {\n        $result = 1;\n    }\n    else {\n        $result = 6 * ($n - 1) + centered_hexagonal_number($n - 1);\n    }\n    return $result;\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return (3*$n*$n - 3*$n + 2);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}"
  ]
}
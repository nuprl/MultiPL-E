{
  "name": "mbpp_602_first_repeated_char",
  "language": "pl",
  "prompt": "# Write a python function to find the first repeated character in a given string.\nsub first_repeated_char {\n    my($str1) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_602_first_repeated_char.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&first_repeated_char;\n        if(eq_deeply($candidate->(\"abcabc\"),\"a\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abc\"),undef)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"123123\"),\"1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my %hash = ();\n    my $char;\n    foreach $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    my $c;\n    foreach $c (split //, $str1) {\n        $count{$c}++;\n        if($count{$c} > 1) {\n            return $c;\n        }\n    }\n}",
    "    my %count;\n    my $c;\n    foreach $c (split //, $str1) {\n        $count{$c}++;\n    }\n    foreach $c (split //, $str1) {\n        if($count{$c} > 1){\n            return $c;\n        }\n    }\n    return -1;\n}",
    "    my %hash;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    my $char;\n    foreach $char (split //, $str1) {\n        $count{$char}++;\n        if($count{$char} > 1) {\n            return $char;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %char_hash = ();\n    foreach my $char (split //, $str1) {\n        if (exists $char_hash{$char}) {\n            return $char;\n        } else {\n            $char_hash{$char} = 1;\n        }\n    }\n    return \"No repeated character found\";\n}",
    "    my %count;\n    my $c;\n    foreach $c (split //, $str1) {\n        $count{$c}++;\n    }\n    foreach $c (split //, $str1) {\n        if($count{$c} > 1){\n            return $c;\n        }\n    }\n    return -1;\n}",
    "    my %hash;\n    my $first_repeated_char;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            $first_repeated_char = $char;\n            last;\n        }\n        $hash{$char} = 1;\n    }\n    return $first_repeated_char;\n}",
    "    my %hash;\n    my $char;\n    foreach $char (split //,$str1) {\n        if(exists($hash{$char})) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %count;\n    my $c;\n    foreach $c (split //, $str1) {\n        $count{$c}++;\n    }\n    foreach $c (split //, $str1) {\n        if($count{$c} > 1){\n            return $c;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return -1;\n}",
    "    my %hash;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    my @str = split(//,$str1);\n    foreach my $i (@str) {\n        if(exists $hash{$i}) {\n            return $i;\n        }\n        else {\n            $hash{$i} = 1;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %hash = ();\n    for(my $i = 0; $i < length($str1); $i++) {\n        my $char = substr($str1, $i, 1);\n        if(exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} > 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}"
  ]
}
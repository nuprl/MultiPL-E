{
  "name": "mbpp_602_first_repeated_char",
  "language": "pl",
  "prompt": "# Write a python function to find the first repeated character in a given string.\nsub first_repeated_char {\n    my($str1) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_602_first_repeated_char.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&first_repeated_char;\n        if(eq_deeply($candidate->(\"abcabc\"),\"a\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abc\"),undef)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"123123\"),\"1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my %hash = ();\n    my $char;\n    foreach $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    my $c;\n    foreach $c (split //, $str1) {\n        $count{$c}++;\n        if($count{$c} > 1) {\n            return $c;\n        }\n    }\n}",
    "    my %count;\n    my $c;\n    foreach $c (split //, $str1) {\n        $count{$c}++;\n    }\n    foreach $c (split //, $str1) {\n        if($count{$c} > 1){\n            return $c;\n        }\n    }\n    return -1;\n}",
    "    my %hash;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    my $char;\n    foreach $char (split //, $str1) {\n        $count{$char}++;\n        if($count{$char} > 1) {\n            return $char;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %char_hash = ();\n    foreach my $char (split //, $str1) {\n        if (exists $char_hash{$char}) {\n            return $char;\n        } else {\n            $char_hash{$char} = 1;\n        }\n    }\n    return \"No repeated character found\";\n}",
    "    my %count;\n    my $c;\n    foreach $c (split //, $str1) {\n        $count{$c}++;\n    }\n    foreach $c (split //, $str1) {\n        if($count{$c} > 1){\n            return $c;\n        }\n    }\n    return -1;\n}",
    "    my %hash;\n    my $first_repeated_char;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            $first_repeated_char = $char;\n            last;\n        }\n        $hash{$char} = 1;\n    }\n    return $first_repeated_char;\n}",
    "    my %hash;\n    my $char;\n    foreach $char (split //,$str1) {\n        if(exists($hash{$char})) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %count;\n    my $c;\n    foreach $c (split //, $str1) {\n        $count{$c}++;\n    }\n    foreach $c (split //, $str1) {\n        if($count{$c} > 1){\n            return $c;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return -1;\n}",
    "    my %hash;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    my @str = split(//,$str1);\n    foreach my $i (@str) {\n        if(exists $hash{$i}) {\n            return $i;\n        }\n        else {\n            $hash{$i} = 1;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %hash = ();\n    for(my $i = 0; $i < length($str1); $i++) {\n        my $char = substr($str1, $i, 1);\n        if(exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} > 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %hash = ();\n    my $first_repeated_char = \"\";\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            $first_repeated_char = $char;\n            last;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return $first_repeated_char;\n}",
    "    my $char;\n    my %count;\n    foreach $char (split //, $str1) {\n        $count{$char}++;\n        if($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %hash;\n    my $i;\n    my $j;\n    my $flag = 0;\n    for($i = 0; $i < length($str1); $i++) {\n        $j = substr($str1, $i, 1);\n        if(exists($hash{$j})) {\n            $flag = 1;\n            last;\n        }\n        else {\n            $hash{$j} = 1;\n        }\n    }\n    if($flag == 1) {\n        return $j;\n    }\n    else {\n        return -1;\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists($char{$char})) {\n            return $char;\n        } else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    my $i;\n    for($i=0; $i<length($str1); $i++) {\n        if(exists $hash{substr($str1,$i,1)}) {\n            return substr($str1,$i,1);\n        }\n        else {\n            $hash{substr($str1,$i,1)} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %hash = ();\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n}",
    "    my %char;\n    foreach my $char (split //, lc $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        }\n        else {\n            $char{$char} = 1;\n        }\n    }\n    return;\n}",
    "    my %hash;\n    my $i;\n    my $j;\n    my $flag = 0;\n    for($i = 0; $i < length($str1); $i++) {\n        $hash{substr($str1, $i, 1)}++;\n    }\n    for($j = 0; $j < length($str1); $j++) {\n        if($hash{substr($str1, $j, 1)} > 1) {\n            $flag = 1;\n            print substr($str1, $j, 1);\n            last;\n        }\n    }\n    if($flag == 0) {\n        print \"No repeated character\";\n    }\n}",
    "    my %hash = ();\n    my $char;\n    foreach $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %char;\n    my $i;\n    my @str = split('', $str1);\n    for($i=0; $i<=$#str; $i++) {\n        if(exists($char{$str[$i]})) {\n            return $str[$i];\n        }\n        else {\n            $char{$str[$i]} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    my $c;\n    foreach $c (split //, $str1) {\n        $count{$c}++;\n    }\n    foreach $c (split //, $str1) {\n        if($count{$c} > 1){\n            return $c;\n        }\n    }\n    return -1;\n}",
    "    my %hash = ();\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    my $i;\n    my $char;\n    for($i=0;$i<length($str1);$i++) {\n        $char = substr($str1, $i, 1);\n        if(exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %hash = ();\n    my $i;\n    my $first_repeated_char;\n    for($i = 0; $i < length($str1); $i++) {\n        my $char = substr($str1, $i, 1);\n        if(exists $hash{$char}) {\n            $first_repeated_char = $char;\n            last;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return $first_repeated_char;\n}",
    "    my %hash = ();\n    my @array = split(//,$str1);\n    foreach my $char (@array) {\n        if(exists $hash{$char}) {\n            return $char;\n        }\n        $hash{$char} = 1;\n    }\n    return -1;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if($count{$char} > 1) {\n            return $char;\n        }\n    }\n}",
    "    my %hash;\n    my $i;\n    for($i=0;$i<length($str1);$i++) {\n        if(exists($hash{substr($str1,$i,1)})) {\n            return substr($str1,$i,1);\n        }\n        else {\n            $hash{substr($str1,$i,1)} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        }\n        else {\n            $char{$char} = 1;\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    my $i;\n    my @char = split //, $str1;\n    for($i=0; $i<=$#char; $i++) {\n        $count{$char[$i]}++;\n    }\n    foreach my $key (keys %count) {\n        if($count{$key} > 1) {\n            return $key;\n        }\n    }\n}",
    "    my %hash;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        } else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    my $char;\n    foreach $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return 0;\n}",
    "    my %hash;\n    my $i;\n    my $j;\n    my $flag = 0;\n    for($i = 0; $i < length($str1); $i++) {\n        for($j = $i+1; $j < length($str1); $j++) {\n            if(substr($str1, $i, 1) eq substr($str1, $j, 1)) {\n                $hash{substr($str1, $i, 1)} = 1;\n                $flag = 1;\n                last;\n            }\n        }\n        if($flag == 1) {\n            last;\n        }\n    }\n    if($flag == 1) {\n        return %hash;\n    }\n    else {\n        return \"No repeated character\";\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return \"No repeated character found\";\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %hash;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    my $i;\n    my $char;\n    my $len = length($str1);\n    for($i=0; $i<$len; $i++) {\n        $char = substr($str1, $i, 1);\n        if(exists($hash{$char})) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return 0;\n}",
    "    my %hash;\n    my $char;\n    my @char_array = split(\"\", $str1);\n    foreach $char (@char_array) {\n        if (exists($hash{$char})) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %hash;\n    my $first_repeated_char;\n    foreach my $char (split //, $str1) {\n        if(exists $hash{$char}) {\n            $first_repeated_char = $char;\n            last;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return $first_repeated_char;\n}",
    "    my %char_count;\n    my $first_repeated_char;\n    foreach my $char (split //, $str1) {\n        if (exists $char_count{$char}) {\n            $first_repeated_char = $char;\n            last;\n        }\n        else {\n            $char_count{$char} = 1;\n        }\n    }\n    return $first_repeated_char;\n}",
    "    my %hash;\n    my $i;\n    my $j;\n    my $len = length($str1);\n    for($i=0;$i<$len;$i++) {\n        $hash{substr($str1,$i,1)}++;\n    }\n    for($j=0;$j<$len;$j++) {\n        if($hash{substr($str1,$j,1)} > 1) {\n            return substr($str1,$j,1);\n        }\n    }\n    return 0;\n}",
    "    my(%hash) = ();\n    my($i) = 0;\n    my($char) = '';\n    my($len) = length($str1);\n    for($i = 0; $i < $len; $i++) {\n        $char = substr($str1, $i, 1);\n        if(exists($hash{$char})) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return '';\n}",
    "    my $count = 0;\n    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $len = length($str1);\n    for ($i = 0; $i < $len; $i++) {\n        for ($j = $i + 1; $j < $len; $j++) {\n            if (substr($str1, $i, 1) eq substr($str1, $j, 1)) {\n                $flag = 1;\n                last;\n            }\n        }\n        if ($flag == 1) {\n            last;\n        }\n    }\n    if ($flag == 1) {\n        print \"First repeated character is: \", substr($str1, $i, 1);\n    }\n    else {\n        print \"No repeated character found\";\n    }\n}",
    "    my %hash;\n    my $char;\n    foreach $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return 0;\n}",
    "    my %hash;\n    my $i;\n    my $char;\n    my $len = length($str1);\n    for($i=0; $i<$len; $i++) {\n        $char = substr($str1, $i, 1);\n        if(exists($hash{$char})) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %hash;\n    my $char;\n    foreach $char (split //, $str1) {\n        if (exists($hash{$char})) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return 0;\n}",
    "    my @str = split(//, $str1);\n    my %hash;\n    foreach my $char (@str) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"no repeated character\";\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %hash;\n    my $char;\n    foreach $char (split //, $str1) {\n        if (exists($hash{$char})) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return 0;\n}",
    "    my %hash;\n    my $i;\n    my $char;\n    my $len = length($str1);\n    for($i=0;$i<$len;$i++) {\n        $char = substr($str1,$i,1);\n        if(exists($hash{$char})) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return 0;\n}",
    "    my %hash;\n    my $i;\n    my $char;\n    my $first_repeated_char;\n    for($i=0; $i<length($str1); $i++) {\n        $char = substr($str1, $i, 1);\n        if(exists($hash{$char})) {\n            $first_repeated_char = $char;\n            last;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return $first_repeated_char;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n}",
    "    my %hash;\n    my $first_repeated_char;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            $first_repeated_char = $char;\n            last;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return $first_repeated_char;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    my $first_repeated_char;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            $first_repeated_char = $char;\n            last;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return $first_repeated_char;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %hash = ();\n    my $char;\n    foreach $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        $hash{$char} = 1;\n    }\n    return 0;\n}",
    "    my %hash;\n    my $first_repeated_char;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            $first_repeated_char = $char;\n            last;\n        }\n        $hash{$char} = 1;\n    }\n    return $first_repeated_char;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} > 1) {\n            return $char;\n        }\n    }\n    return \"No repeated character found\";\n}",
    "    my(@str1) = split(//, $str1);\n    my(%hash) = ();\n    foreach my $char (@str1) {\n        if(exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"No repeated characters\";\n}",
    "    my %hash = ();\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %char_count;\n    my $first_repeated_char;\n    foreach my $char (split //, $str1) {\n        if (exists $char_count{$char}) {\n            $first_repeated_char = $char;\n            last;\n        }\n        $char_count{$char}++;\n    }\n    return $first_repeated_char;\n}",
    "    my(%hash) = ();\n    my($char);\n    foreach $char (split //, $str1) {\n        if(exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %hash = ();\n    my $char;\n    foreach $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my @str_arr = split(//, $str1);\n    my %hash;\n    foreach my $char (@str_arr) {\n        if(exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"No repeated character found\";\n}",
    "    my %hash;\n    my @arr = split(//,$str1);\n    foreach my $char(@arr){\n        if(exists $hash{$char}){\n            return $char;\n        }\n        else{\n            $hash{$char} = 1;\n        }\n    }\n}",
    "    my %hash;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return 0;\n}",
    "    my %hash;\n    my $char;\n    foreach $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %hash;\n    my @arr = split(\"\",$str1);\n    foreach my $char(@arr) {\n        if(exists($hash{$char})) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if($count{$char} > 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return 0;\n}",
    "    my %hash = ();\n    my $char;\n    foreach $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %hash;\n    my $i;\n    my $char;\n    my $len = length($str1);\n    for($i = 0; $i < $len; $i++) {\n        $char = substr($str1, $i, 1);\n        if(exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return \"No repeated characters\";\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %char;\n    my $i;\n    my $len = length($str1);\n    for($i=0; $i<$len; $i++) {\n        my $char = substr($str1, $i, 1);\n        if(exists $char{$char}) {\n            return $char;\n        } else {\n            $char{$char} = 1;\n        }\n    }\n    return \"\";\n}",
    "    my %hash;\n    my $char;\n    foreach $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"No repeated characters\";\n}",
    "    my %hash = ();\n    my $char;\n    foreach $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return 0;\n}",
    "    my %hash = ();\n    my $char;\n    foreach $char (split //, $str1) {\n        if (exists($hash{$char})) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %hash;\n    my $i;\n    my $j;\n    my $k;\n    my $flag = 0;\n    my $len = length($str1);\n    for($i = 0; $i < $len; $i++) {\n        $j = substr($str1, $i, 1);\n        if(exists($hash{$j})) {\n            $k = $hash{$j};\n            $flag = 1;\n            last;\n        }\n        else {\n            $hash{$j} = $i;\n        }\n    }\n    if($flag == 1) {\n        return $k;\n    }\n    else {\n        return -1;\n    }\n}",
    "    my @str1 = split(//, $str1);\n    my %count;\n    foreach my $char (@str1) {\n        $count{$char}++;\n    }\n    foreach my $char (keys %count) {\n        if ($count{$char} > 1) {\n            return $char;\n        }\n    }\n}",
    "    my %hash;\n    my $i;\n    my $char;\n    for($i=0; $i<length($str1); $i++) {\n        $char = substr($str1, $i, 1);\n        if(exists($hash{$char})) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"\";\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if($count{$char} > 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} > 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    my $first_repeated_char;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            $first_repeated_char = $char;\n            last;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return $first_repeated_char;\n}",
    "    my %hash;\n    my $first_repeated_char;\n    foreach my $char (split //, $str1) {\n        if (exists($hash{$char})) {\n            $first_repeated_char = $char;\n            last;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return $first_repeated_char;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    my $i;\n    for($i=0; $i<length($str1); $i++) {\n        my $char = substr($str1, $i, 1);\n        if(exists($hash{$char})) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"\";\n}",
    "    my %count;\n    my $c;\n    foreach $c (split //, $str1) {\n        $count{$c}++;\n    }\n    foreach $c (split //, $str1) {\n        if($count{$c} > 1){\n            return $c;\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return 'No repeated character found';\n}",
    "    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        for (my $j = $i + 1; $j < $len; $j++) {\n            if (substr($str1, $i, 1) eq substr($str1, $j, 1)) {\n                return substr($str1, $i, 1);\n            }\n        }\n    }\n    return \"\";\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if(exists($char{$char})) {\n            return $char;\n        }\n        else {\n            $char{$char} = 1;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return 0;\n}",
    "    my %hash;\n    my $first_repeated_char;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            $first_repeated_char = $char;\n            last;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return $first_repeated_char;\n}",
    "    my %hash;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, lc $str1) {\n        $char{$char}++;\n        return $char if $char{$char} == 2;\n    }\n    return;\n}",
    "    my %hash;\n    my $i;\n    my $len = length($str1);\n    for($i = 0; $i < $len; $i++) {\n        my $ch = substr($str1, $i, 1);\n        if(exists($hash{$ch})) {\n            return $ch;\n        } else {\n            $hash{$ch} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, lc $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        }\n        else {\n            $char{$char} = 1;\n        }\n    }\n    return;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} > 1) {\n            return $char;\n        }\n    }\n    return 0;\n}",
    "    my %hash;\n    my $first_repeated_char;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            $first_repeated_char = $char;\n            last;\n        }\n        $hash{$char} = 1;\n    }\n    return $first_repeated_char;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %hash = ();\n    my $char;\n    foreach $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return 0;\n}\nprint first_repeated_char(\"abcdabcd\");\nprint \"\\n\";",
    "    my %hash;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists($char{$char})) {\n            return $char;\n        } else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    my $first_repeated_char;\n    foreach my $char (split //, $str1) {\n        if(exists $hash{$char}) {\n            $first_repeated_char = $char;\n            last;\n        }\n        $hash{$char} = 1;\n    }\n    return $first_repeated_char;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return 0;\n}",
    "    my %hash;\n    my $first_repeated_char;\n    foreach my $char (split //, $str1) {\n        if(exists $hash{$char}) {\n            $first_repeated_char = $char;\n            last;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return $first_repeated_char;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        }\n        else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, lc $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        } else {\n            $char{$char} = 1;\n        }\n    }\n    return;\n}",
    "    my %hash;\n    my @str = split(//,$str1);\n    foreach my $char (@str) {\n        if(exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    my $c;\n    foreach $c (split //, $str1) {\n        $count{$c}++;\n    }\n    foreach $c (split //, $str1) {\n        if($count{$c} > 1){\n            return $c;\n        }\n    }\n    return -1;\n}",
    "    my %hash;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    my $first_repeated_char;\n    foreach my $char (split //, $str1) {\n        if(exists $hash{$char}) {\n            $first_repeated_char = $char;\n            last;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return $first_repeated_char;\n}",
    "    my %hash;\n    my $i;\n    my $len = length($str1);\n    for($i=0; $i<$len; $i++) {\n        my $char = substr($str1, $i, 1);\n        if(exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %hash = ();\n    my $char;\n    foreach $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"No repeated character found\";\n}",
    "    my %char;\n    foreach my $char (split //, lc $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        }\n        else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return \"No repeated character found\";\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} > 1) {\n            return $char;\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    my $c;\n    foreach $c (split //, $str1) {\n        $count{$c}++;\n        if($count{$c} > 1) {\n            return $c;\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my $c;\n    foreach $c (split //, $str1) {\n        $count{$c}++;\n    }\n    foreach $c (split //, $str1) {\n        if($count{$c} > 1){\n            return $c;\n        }\n    }\n}",
    "    my %hash;\n    my $char;\n    foreach $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    my $c;\n    foreach $c (split //, $str1) {\n        $count{$c}++;\n    }\n    foreach $c (split //, $str1) {\n        if ($count{$c} > 1) {\n            return $c;\n        }\n    }\n    return \"No repeated characters\";\n}",
    "    my %hash;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    my $first_repeated_char;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            $first_repeated_char = $char;\n            last;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return $first_repeated_char;\n}",
    "    my %hash;\n    my $i;\n    my @str = split(\"\",$str1);\n    for($i=0;$i<=$#str;$i++) {\n        if(exists $hash{$str[$i]}) {\n            return $str[$i];\n        }\n        else {\n            $hash{$str[$i]} = 1;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %count;\n    my $c;\n    foreach $c (split //, $str1) {\n        $count{$c}++;\n    }\n    foreach $c (split //, $str1) {\n        if($count{$c} > 1){\n            return $c;\n        }\n    }\n    return -1;\n}",
    "    my %hash = ();\n    my $char;\n    foreach $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return 'No repeated character';\n}",
    "    my %count;\n    my $c;\n    foreach $c (split //, $str1) {\n        $count{$c}++;\n        if($count{$c} > 1) {\n            return $c;\n        }\n    }\n    return \"No repeated character found!\";\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    my $c;\n    foreach $c (split //, $str1) {\n        $count{$c}++;\n    }\n    foreach $c (split //, $str1) {\n        if($count{$c} > 1){\n            return $c;\n        }\n    }\n}",
    "    my(%hash,$i,$j);\n    for($i=0;$i<length($str1);$i++) {\n        $j = substr($str1,$i,1);\n        if(exists $hash{$j}) {\n            return $j;\n        }\n        else {\n            $hash{$j} = 1;\n        }\n    }\n}",
    "    my %count;\n    my $c;\n    foreach $c (split //, $str1) {\n        $count{$c}++;\n    }\n    foreach $c (split //, $str1) {\n        if($count{$c} > 1){\n            return $c;\n        }\n    }\n    return \"No repeated characters\";\n}",
    "    my @str = split(\"\",$str1);\n    my %hash;\n    for(my $i=0;$i<=$#str;$i++){\n        if(exists $hash{$str[$i]}){\n            return $str[$i];\n        }\n        else{\n            $hash{$str[$i]} = 1;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %char;\n    foreach my $char (split //, lc $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        }\n        else {\n            $char{$char} = 1;\n        }\n    }\n    return;\n}",
    "    my %hash = ();\n    my $i = 0;\n    my $j = 0;\n    my $len = length($str1);\n    for($i = 0; $i < $len; $i++) {\n        $j = substr($str1, $i, 1);\n        if(exists $hash{$j}) {\n            return $j;\n        }\n        else {\n            $hash{$j} = 1;\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    my $first_repeated_char;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            $first_repeated_char = $char;\n            last;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return $first_repeated_char;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} > 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %count;\n    my $char;\n    foreach $char (split //, $str1) {\n        $count{$char}++;\n        if($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return \"No repeated character found!\";\n}",
    "    my %count;\n    my $c;\n    foreach $c (split //, $str1) {\n        $count{$c}++;\n    }\n    foreach $c (split //, $str1) {\n        if($count{$c} > 1){\n            return $c;\n        }\n    }\n    return \"No repeated characters\";\n}",
    "    my %hash = ();\n    my @arr = split(\"\", $str1);\n    foreach my $char (@arr) {\n        if(exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %hash;\n    my @char = split('',$str1);\n    foreach my $char(@char) {\n        if(exists($hash{$char})) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %hash = ();\n    my @arr = split(//,$str1);\n    foreach my $char(@arr) {\n        if(exists($hash{$char})) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    my $c;\n    foreach $c (split //, $str1) {\n        $count{$c}++;\n    }\n    foreach $c (split //, $str1) {\n        if($count{$c} > 1) {\n            return $c;\n        }\n    }\n    return \"No repeated characters\";\n}",
    "    my %hash;\n    my $first_repeated_char;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            $first_repeated_char = $char;\n            last;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return $first_repeated_char;\n}",
    "    my %hash;\n    my @arr = split('',$str1);\n    foreach my $char (@arr) {\n        if(exists($hash{$char})) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return 0;\n}",
    "    my %hash;\n    my $first_repeated_char;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            $first_repeated_char = $char;\n            last;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return $first_repeated_char;\n}",
    "    my %hash;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %hash;\n    my $i;\n    for($i=0;$i<length($str1);$i++) {\n        my $char = substr($str1,$i,1);\n        if(exists($hash{$char})) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"\";\n}",
    "    my %count;\n    my $c;\n    foreach $c (split //, $str1) {\n        $count{$c}++;\n    }\n    foreach $c (split //, $str1) {\n        if($count{$c} > 1){\n            return $c;\n        }\n    }\n    return -1;\n}",
    "    my %count = ();\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if($count{$char} > 1) {\n            return $char;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my $i;\n    my $j;\n    my $count = 0;\n    my $len = length($str1);\n    for($i = 0; $i < $len; $i++) {\n        for($j = $i + 1; $j < $len; $j++) {\n            if(substr($str1, $i, 1) eq substr($str1, $j, 1)) {\n                $count = 1;\n                last;\n            }\n        }\n        if($count == 1) {\n            last;\n        }\n    }\n    if($count == 1) {\n        return substr($str1, $i, 1);\n    }\n    else {\n        return -1;\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if($count{$char} > 1) {\n            return $char;\n        }\n    }\n    return \"No repeated character found\";\n}",
    "    my %hash;\n    my $i;\n    my $j;\n    my $k;\n    my $flag = 0;\n    my $len = length($str1);\n    for($i = 0; $i < $len; $i++) {\n        $j = substr($str1, $i, 1);\n        if(exists $hash{$j}) {\n            $hash{$j}++;\n        } else {\n            $hash{$j} = 1;\n        }\n    }\n    for($k = 0; $k < $len; $k++) {\n        $j = substr($str1, $k, 1);\n        if($hash{$j} > 1) {\n            $flag = 1;\n            last;\n        }\n    }\n    if($flag == 1) {\n        print \"First repeated character is $j\\n\";\n    } else {\n        print \"No repeated character\\n\";\n    }\n}",
    "    my %hash1;\n    my $result;\n    foreach my $char (split //, $str1) {\n        if (exists $hash1{$char}) {\n            $result = $char;\n            last;\n        } else {\n            $hash1{$char} = 1;\n        }\n    }\n    return $result;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        }\n        $char{$char} = 1;\n    }\n    return undef;\n}",
    "    my %count;\n    my $result;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            $result = $char;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my %hash;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %hash;\n    my $first_repeated_char;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            $first_repeated_char = $char;\n            last;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return $first_repeated_char;\n}",
    "    my %hash;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i1;\n    my $j1;\n    my $k1;\n    my $l1;\n    my $m1;\n    my $n1;\n    my $o1;\n    my $p1;\n    my $q1;\n    my $r1;\n    my $s1;\n    my $t1;\n    my $u1;\n    my $v1;\n    my $w1;\n    my $x1;\n    my $y1;\n    my $z1;\n    my $a1;\n    my $b1;\n    my $c1;\n    my $d1;\n    my $e1;\n    my $f1;\n    my $g1;\n    my $h1;\n    my $i2;\n    my $j2;\n    my $k2;\n    my $l2;\n    my $m2;\n    my $n2;\n    my $o2;\n    my $p2;\n    my $q2;\n    my $r2;\n    my $s2;\n    my $t2;\n    my $u2;\n    my $v2;\n    my $w2;\n    my $x2;\n    my $y2;\n    my $z2;\n    my $a2;\n    my $b2;\n    my $c2;\n    my $d2;\n    my $e2;\n    my $f2;",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists($char{$char})) {\n            return $char;\n        }\n        $char{$char} = 1;\n    }\n    return undef;\n}",
    "    my %hash;\n    my $i;\n    my $char;\n    my $length = length($str1);\n    for($i=0;$i<$length;$i++) {\n        $char = substr($str1,$i,1);\n        if(exists($hash{$char})) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"\";\n}",
    "    my $i;\n    my $j;\n    my $count = 0;\n    my $len = length($str1);\n    for($i = 0; $i < $len; $i++) {\n        for($j = $i + 1; $j < $len; $j++) {\n            if(substr($str1, $i, 1) eq substr($str1, $j, 1)) {\n                $count = 1;\n                last;\n            }\n        }\n        if($count == 1) {\n            last;\n        }\n    }\n    if($count == 1) {\n        return substr($str1, $i, 1);\n    }\n    else {\n        return -1;\n    }\n}",
    "    my %hash;\n    my $char;\n    foreach $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return 0;\n}",
    "    my %hash = ();\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    my $i;\n    my $len = length($str1);\n    for($i=0; $i<$len; $i++) {\n        my $ch = substr($str1, $i, 1);\n        if(exists($hash{$ch})) {\n            return $ch;\n        } else {\n            $hash{$ch} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    my $c;\n    foreach $c (split //, $str1) {\n        $count{$c}++;\n    }\n    foreach $c (split //, $str1) {\n        if($count{$c} > 1){\n            return $c;\n        }\n    }\n    return -1;\n}",
    "    my %hash;\n    my @str = split('', $str1);\n    foreach my $char (@str) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %hash;\n    my $i;\n    my $char;\n    my $len = length($str1);\n    for($i=0;$i<$len;$i++) {\n        $char = substr($str1,$i,1);\n        if(exists $hash{$char}) {\n            return $char;\n        }\n        $hash{$char} = 1;\n    }\n    return 0;\n}",
    "    my %hash;\n    my $char;\n    foreach $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return -1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $count = 0;\n    my $len = length($str1);\n    my $flag = 0;\n    for($i = 0; $i < $len; $i++) {\n        for($j = $i + 1; $j < $len; $j++) {\n            if(substr($str1, $i, 1) eq substr($str1, $j, 1)) {\n                $flag = 1;\n                $count = $i;\n                last;\n            }\n        }\n        if($flag == 1) {\n            last;\n        }\n    }\n    if($flag == 1) {\n        return substr($str1, $count, 1);\n    } else {\n        return \"No repeated character\";\n    }\n}"
  ]
}
{
  "name": "mbpp_268_find_star_num",
  "language": "pl",
  "prompt": "# Write a function to find the n'th star number.\nsub find_star_num {\n    my($n) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_268_find_star_num.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&find_star_num;\n        if(eq_deeply($candidate->(3),37)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(4),73)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5),121)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $i = 0;\n    my $star_num = 0;\n    while ($i < $n) {\n        $star_num++;\n        if (is_star_num($star_num)) {\n            $i++;\n        }\n    }\n    return $star_num;\n}",
    "    my $i = 1;\n    my $star_num = 1;\n    while ($i < $n) {\n        $star_num += 6 * $i;\n        $i++;\n    }\n    return $star_num;\n}",
    "\n    my $i = 1;\n    my $star_num = 1;\n    while ($i < $n) {\n        $star_num += 6 * $i;\n        $i++;\n    }",
    "    my $i = 1;\n    my $star_num = 1;\n    while ($i < $n) {\n        $star_num += 6 * $i;\n        $i++;\n    }\n    return $star_num;\n}",
    "    my $i = 1;\n    my $star_num = 1;\n    while ($i < $n) {\n        $star_num = next_star_num($star_num);\n        $i++;\n    }\n    return $star_num;\n}",
    "    my $i = 0;\n    my $num = 0;\n    while ($i < $n) {\n        $num++;\n        if (is_star_number($num)) {\n            $i++;\n        }\n    }\n    return $num;\n}",
    "    return $n if $n <= 3;\n    return find_star_num($n-1) + find_star_num($n-2);\n}",
    "    my $i = 1;\n    my $num = 1;\n    while ($i < $n) {\n        $num += 4;\n        $i++;\n    }\n    return $num;\n}",
    "    my $i = 1;\n    my $star_num = 1;\n    while ($i < $n) {\n        $star_num += 4;\n        $i++;\n    }\n    return $star_num;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $aa = 0;\n    my $bb = 0;\n    my $cc = 0;\n    my $dd = 0;\n    my $ee = 0;\n    my $ff = 0;\n    my $gg = 0;\n    my $hh = 0;\n    my $ii = 0;\n    my $jj = 0;\n    my $kk = 0;\n    my $ll = 0;\n    my $mm = 0;\n    my $nn = 0;\n    my $oo = 0;\n    my $pp = 0;\n    my $qq = 0;\n    my $rr = 0;\n    my $ss = 0;\n    my $tt = 0;\n    my $uu = 0;\n    my $vv = 0;\n    my $ww = 0;\n    my $xx = 0;\n    my $yy = 0;\n    my $zz = 0;\n    my $aaa = 0;\n    my $bbb = 0;\n    my $ccc = 0;\n    my $ddd = 0;\n    my $eee = 0;\n    my $fff = 0;\n    my $ggg = 0;\n    my $hhh = 0;\n    my $iii = 0;\n    my $jjj = 0;\n    my $kkk = 0;\n    my $lll = 0;\n    my $mmm = 0;\n    my $nnn = 0;\n    my $ooo = 0;\n    my $ppp = 0;\n    my $qqq = 0;\n    my $rrr = 0;\n    my $",
    "    my $i = 0;\n    my $star_num = 0;\n    while ($i < $n) {\n        $star_num += $i;\n        $i++;\n    }\n    return $star_num;\n}",
    "    my $i = 0;\n    my $num = 0;\n    while ($i < $n) {\n        $num++;\n        if (is_star_num($num)) {\n            $i++;\n        }\n    }\n    return $num;\n}",
    "    my $i = 1;\n    my $star_num = 1;\n    while ($i < $n) {\n        $star_num += 4;\n        $i++;\n    }\n    return $star_num;\n}",
    "    my $i = 1;\n    my $star_num = 1;\n    while ($i < $n) {\n        $star_num = next_star_num($star_num);\n        $i++;\n    }\n    return $star_num;\n}",
    "    my $num = 0;\n    my $i = 0;\n    while ($i < $n) {\n        $num++;\n        $i++ if is_star_num($num);\n    }\n    return $num;\n}",
    "    my $i = 1;\n    my $star_num = 1;\n    while ($i < $n) {\n        $star_num += 6 * $i;\n        $i++;\n    }\n    return $star_num;\n}",
    "    my $i = 1;\n    my $star_num = 1;\n    while ($i < $n) {\n        $star_num += 6 * $i;\n        $i++;\n    }\n    return $star_num;\n}",
    "    my $i = 1;\n    my $num = 1;\n    while ($i < $n) {\n        $num += 2;\n        $i++;\n    }\n    return $num;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $num = 0;\n    while ($i < $n) {\n        $j = $k;\n        while ($j > 0) {\n            $num = $num + $k;\n            $j = $j - 1;\n        }\n        $k = $k + 1;\n        $i = $i + 1;\n    }\n    return $num;\n}",
    "    my $num = 1;\n    my $count = 1;\n    while ($count < $n) {\n        $num += 2;\n        $count += $num;\n    }\n    return $num;\n}"
  ]
}
{
  "name": "mbpp_391_convert_list_dictionary",
  "language": "pl",
  "prompt": "# Write a function to convert more than one list to nested dictionary.\nsub convert_list_dictionary {\n    my($l1, $l2, $l3) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_391_convert_list_dictionary.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&convert_list_dictionary;\n        if(eq_deeply($candidate->([\"S001\", \"S002\", \"S003\", \"S004\"], [\"Adina Park\", \"Leyton Marsh\", \"Duncan Boyle\", \"Saim Richards\"], [85, 98, 89, 92]),[{\"S001\" => {\"Adina Park\" => 85}}, {\"S002\" => {\"Leyton Marsh\" => 98}}, {\"S003\" => {\"Duncan Boyle\" => 89}}, {\"S004\" => {\"Saim Richards\" => 92}}])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"abc\", \"def\", \"ghi\", \"jkl\"], [\"python\", \"program\", \"language\", \"programs\"], [100, 200, 300, 400]),[{\"abc\" => {\"python\" => 100}}, {\"def\" => {\"program\" => 200}}, {\"ghi\" => {\"language\" => 300}}, {\"jkl\" => {\"programs\" => 400}}])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"A1\", \"A2\", \"A3\", \"A4\"], [\"java\", \"C\", \"C++\", \"DBMS\"], [10, 20, 30, 40]),[{\"A1\" => {\"java\" => 10}}, {\"A2\" => {\"C\" => 20}}, {\"A3\" => {\"C++\" => 30}}, {\"A4\" => {\"DBMS\" => 40}}])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return \\%hash;\n}",
    "    my %dictionary;\n    my $i = 0;\n    while ($i < @$l1) {\n        $dictionary{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n        $i++;\n    }\n    return %dictionary;\n}",
    "    my $nested_dict = {};\n    for my $i (0..$#{$l1}) {\n        $nested_dict->{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return $nested_dict;\n}",
    "    my %hash;\n    for my $i (0..$#$l1) {\n        $hash{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return %hash;\n}",
    "    my $d = {};\n    for my $i (0..$#$l1) {\n        $d->{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return $d;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return \\%hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return %hash;\n}",
    "    my %hash;\n    for (my $i = 0; $i < scalar(@$l1); $i++) {\n        $hash{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return %hash;\n}",
    "    my %hash;\n    for (my $i = 0; $i < @$l1; $i++) {\n        $hash{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return %hash;\n}",
    "    my %hash;\n    for (my $i = 0; $i < @$l1; $i++) {\n        $hash{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return %hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return \\%hash;\n}",
    "    my %hash;\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        $hash{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return %hash;\n}",
    "    my %hash = ();\n    my $i = 0;\n    foreach my $val (@$l1) {\n        $hash{$val} = {$l2->[$i] => $l3->[$i]};\n        $i++;\n    }\n    return %hash;\n}",
    "    my %hash;\n    for my $i (0..$#{$l1}) {\n        $hash{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return \\%hash;\n}",
    "    my %dictionary;\n    my $i = 0;\n    for my $item (@$l1) {\n        $dictionary{$item} = {\n            $l2->[$i] => $l3->[$i]\n        };\n        $i++;\n    }\n    return %dictionary;\n}",
    "    my %hash;\n    my $i = 0;\n    foreach my $value (@$l1) {\n        $hash{$value} = {\n            $l2->[$i] => $l3->[$i]\n        };\n        $i++;\n    }\n    return \\%hash;\n}",
    "    my $d = {};\n    for(my $i=0; $i<@$l1; $i++) {\n        $d->{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return $d;\n}",
    "    my $nested_dict = {};\n    my $i = 0;\n    for my $key (@$l1) {\n        $nested_dict->{$key} = { $l2->[$i] => $l3->[$i] };\n        $i++;\n    }\n    return $nested_dict;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return %hash;\n}",
    "    my %hash;\n    for my $i (0 .. $#{$l1}) {\n        $hash{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        }\n    }\n    return \\%hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return %hash;\n}",
    "    my $d = {};\n    my $i = 0;\n    for my $e (@$l1) {\n        $d->{$e} = {};\n        $d->{$e}->{$l2->[$i]} = $l3->[$i];\n        $i++;\n    }\n    return $d;\n}",
    "    my %hash;\n    for my $i (0 .. $#$l1) {\n        $hash{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return \\%hash;\n}",
    "    my %hash;\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        $hash{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return %hash;\n}",
    "    my %hash;\n    my $i = 0;\n    while ($i < scalar @$l1) {\n        $hash{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n        $i++;\n    }\n    return %hash;\n}",
    "    my %hash;\n    my $i = 0;\n    foreach my $key (@$l1) {\n        $hash{$key} = {\n            $l2->[$i] => $l3->[$i]\n        };\n        $i++;\n    }\n    return \\%hash;\n}",
    "    my $d = {};\n    for my $i (0..$#$l1) {\n        $d->{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return $d;\n}",
    "    my %hash;\n    for my $i (0 .. $#{$l1}) {\n        $hash{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return %hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return \\%hash;\n}",
    "    my $d = {};\n    for my $i (0 .. $#$l1) {\n        $d->{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return $d;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l1} = @$l3;\n    return %hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return \\%hash;\n}",
    "    my %dictionary = ();\n    for my $i (0..$#{$l1}) {\n        $dictionary{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return %dictionary;\n}",
    "    my %hash = ();\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        $hash{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return %hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return %hash;\n}",
    "    my %dictionary = ();\n    for (my $i = 0; $i < @$l1; $i++) {\n        $dictionary{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return %dictionary;\n}",
    "    my $d = {};\n    for my $i (0..$#$l1) {\n        $d->{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return $d;\n}",
    "    my %hash;\n    my $i = 0;\n    for my $key (@$l1) {\n        $hash{$key} = {\n            $l2->[$i] => $l3->[$i]\n        };\n        $i++;\n    }\n    return %hash;\n}",
    "    my $nested_dict = {};\n    for my $i (0 .. $#$l1) {\n        $nested_dict->{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return $nested_dict;\n}",
    "    my %hash;\n    for (my $i = 0; $i < @$l1; $i++) {\n        $hash{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return %hash;\n}",
    "    my $d = {};\n    for my $i (0 .. $#$l1) {\n        $d->{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return $d;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return \\%hash;\n}",
    "    my $d = {};\n    for my $i (0..$#$l1) {\n        $d->{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return $d;\n}",
    "    my %hash;\n    for my $i (0..$#$l1) {\n        $hash{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return \\%hash;\n}",
    "    my %hash;\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        $hash{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return %hash;\n}",
    "    my $d = {};\n    for my $i (0 .. $#$l1) {\n        $d->{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return $d;\n}",
    "    my $nested_dictionary = {};\n    my $i = 0;\n    foreach my $key (@$l1) {\n        $nested_dictionary->{$key} = {\n            $l2->[$i] => $l3->[$i]\n        };\n        $i++;\n    }\n    return $nested_dictionary;\n}",
    "    my %hash;\n    for my $i (0 .. $#$l1) {\n        $hash{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return \\%hash;\n}",
    "    my %hash;\n    for my $i (0 .. $#{$l1}) {\n        $hash{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return \\%hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return %hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return %hash;\n}",
    "    my %hash = ();\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        $hash{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return %hash;\n}",
    "    my $d = {};\n    for (my $i = 0; $i < @$l1; $i++) {\n        $d->{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return $d;\n}",
    "    my %hash;\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        $hash{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return \\%hash;\n}",
    "    my %h;\n    @h{@$l1} = @$l2;\n    @h{@$l3} = @$l3;\n    return \\%h;\n}",
    "    my %dictionary;\n    my $i = 0;\n    foreach my $item (@$l1) {\n        $dictionary{$item} = { $l2->[$i] => $l3->[$i] };\n        $i++;\n    }\n    return %dictionary;\n}",
    "    my $nested_dict = {};\n    my $i = 0;\n    while ($i < scalar(@$l1)) {\n        $nested_dict->{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n        $i++;\n    }\n    return $nested_dict;\n}",
    "    my %hash;\n    for (my $i = 0; $i < scalar(@$l1); $i++) {\n        $hash{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return %hash;\n}",
    "    my $d = {};\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        $d->{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return $d;\n}",
    "    my $d = {};\n    for my $i (0..$#$l1) {\n        $d->{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return $d;\n}",
    "    my %hash;\n    for my $i (0..$#{$l1}) {\n        $hash{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return \\%hash;\n}",
    "    my %hash;\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        $hash{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return %hash;\n}",
    "    my $d = {};\n    for my $i (0 .. $#$l1) {\n        $d->{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return $d;\n}",
    "    my $nested_dict = {};\n    my $i = 0;\n    while ($i < scalar(@$l1)) {\n        $nested_dict->{$l1->[$i]} = {};\n        $nested_dict->{$l1->[$i]}->{$l2->[$i]} = $l3->[$i];\n        $i++;\n    }\n    return $nested_dict;\n}",
    "    my %hash = ();\n    for my $i (0..$#{$l1}) {\n        $hash{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return %hash;\n}",
    "    my $d = {};\n    for (my $i = 0; $i < scalar(@$l1); $i++) {\n        $d->{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return $d;\n}",
    "    my %hash;\n    my $i = 0;\n    foreach my $key (@$l1) {\n        $hash{$key} = {\n            $l2->[$i] => $l3->[$i]\n        };\n        $i++;\n    }\n    return %hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return \\%hash;\n}",
    "    my %hash;\n    for my $i (0 .. $#$l1) {\n        $hash{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return \\%hash;\n}",
    "    my %hash;\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        $hash{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return %hash;\n}",
    "    my $d = {};\n    my $i = 0;\n    for my $l (@_) {\n        for my $e (@$l) {\n            $d->{$e} = $i;\n        }\n        $i++;\n    }\n    return $d;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return %hash;\n}",
    "    my $d = {};\n    for (my $i = 0; $i < @$l1; $i++) {\n        $d->{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return $d;\n}",
    "    my $nested_dict = {};\n    my $i = 0;\n    for my $key (@$l1) {\n        $nested_dict->{$key} = {};\n        $nested_dict->{$key}->{$l2->[$i]} = $l3->[$i];\n        $i++;\n    }\n    return $nested_dict;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l1} = @$l3;\n    return %hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l1} = @$l3;\n    return %hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l1} = @$l3;\n    return %hash;\n}",
    "    my $d = {};\n    for my $i (0..$#$l1) {\n        $d->{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return $d;\n}",
    "    my %h = ();\n    for (my $i = 0; $i < @$l1; $i++) {\n        $h{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return %h;\n}",
    "    my $d = {};\n    for my $i (0 .. $#$l1) {\n        $d->{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return $d;\n}",
    "    my %hash;\n    my $i = 0;\n    for my $k (@$l1) {\n        $hash{$k} = { $l2->[$i] => $l3->[$i] };\n        $i++;\n    }\n    return \\%hash;\n}",
    "    my $d = {};\n    for my $i (0 .. $#$l1) {\n        $d->{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return $d;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return \\%hash;\n}\nmy $list_dictionary = convert_list_dictionary(\\@list1, \\@list2, \\@list3);\nprint Dumper($list_dictionary);",
    "    my $d = {};\n    for my $i (0 .. $#$l1) {\n        $d->{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return $d;\n}",
    "    my %hash;\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        $hash{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return %hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return %hash;\n}",
    "    my $d = {};\n    for (my $i = 0; $i < @$l1; $i++) {\n        $d->{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i],\n        };\n    }\n    return $d;\n}",
    "    my %hash;\n    for my $i (0..$#{$l1}) {\n        $hash{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return \\%hash;\n}",
    "    my $d = {};\n    for my $i (0..$#$l1) {\n        $d->{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return $d;\n}",
    "    my $d = {};\n    for my $i (0..$#$l1) {\n        $d->{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return $d;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return \\%hash;\n}",
    "    my %hash;\n    for my $i (0 .. $#{$l1}) {\n        $hash{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return \\%hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return %hash;\n}",
    "    my %hash;\n    for (my $i = 0; $i < @$l1; $i++) {\n        $hash{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return %hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return %hash;\n}",
    "    my %hash;\n    for my $i (0 .. $#$l1) {\n        $hash{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return \\%hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return %hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return %hash;\n}",
    "    my $d = {};\n    for my $i (0..$#$l1) {\n        $d->{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return $d;\n}",
    "    my $d = {};\n    for (my $i = 0; $i < @$l1; $i++) {\n        $d->{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return $d;\n}",
    "    my %dictionary;\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        $dictionary{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return %dictionary;\n}",
    "    my %h;\n    for my $i (0 .. $#$l1) {\n        $h{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return \\%h;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l1} = @$l3;\n    return %hash;\n}",
    "    my %hash;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $aa = 0;\n    my $ab = 0;\n    my $ac = 0;\n    my $ad = 0;\n    my $ae = 0;\n    my $af = 0;\n    my $ag = 0;\n    my $ah = 0;\n    my $ai = 0;\n    my $aj = 0;\n    my $ak = 0;\n    my $al = 0;\n    my $am = 0;\n    my $an = 0;\n    my $ao = 0;\n    my $ap = 0;\n    my $aq = 0;\n    my $ar = 0;\n    my $as = 0;\n    my $at = 0;\n    my $au = 0;\n    my $av = 0;\n    my $aw = 0;\n    my $ax = 0;\n    my $ay = 0;\n    my $az = 0;\n    my $ba = 0;\n    my $bb = 0;\n    my $bc = 0;\n    my $bd = 0;\n    my $be = 0;\n    my $bf = 0;\n    my $bg = 0;\n    my $bh = 0;\n    my $bi = 0;\n    my $bj = 0;\n    my $bk = 0;\n    my $bl = 0;\n    my $bm = 0;\n    my $bn = 0;\n    my $bo = 0;\n    my $bp = 0;\n    my $bq = 0;\n    my $br = 0;\n    my $bs = 0;",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return %hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return %hash;\n}",
    "    my $d = {};\n    for my $i (0..$#{$l1}) {\n        $d->{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return $d;\n}",
    "    my $d = {};\n    for (my $i = 0; $i < @$l1; $i++) {\n        $d->{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return $d;\n}",
    "    my $d = {};\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        $d->{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return $d;\n}",
    "    my $d = {};\n    for my $i (0 .. $#$l1) {\n        $d->{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return $d;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return \\%hash;\n}",
    "    my %hash;\n    for my $i (0 .. $#{$l1}) {\n        $hash{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return \\%hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return %hash;\n}",
    "    my $d = {};\n    for my $i (0..$#$l1) {\n        $d->{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return $d;\n}",
    "    my %hash;\n    for my $i (0 .. $#{$l1}) {\n        $hash{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return \\%hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return %hash;\n}",
    "    my %hash;\n    for my $i (0..$#{$l1}) {\n        $hash{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return \\%hash;\n}",
    "    my %hash;\n    for my $i (0..$#{$l1}) {\n        $hash{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return \\%hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l1} = @$l3;\n    return %hash;\n}",
    "    my $d = {};\n    for my $i (0..$#$l1) {\n        $d->{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return $d;\n}",
    "    my %hash;\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        $hash{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return %hash;\n}",
    "    my %hash = ();\n    for my $i (0 .. $#{$l1}) {\n        $hash{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return \\%hash;\n}",
    "    my $d = {};\n    for my $i (0..$#$l1) {\n        $d->{$l1->[$i]} = {};\n        $d->{$l1->[$i]}->{$l2->[$i]} = $l3->[$i];\n    }\n    return $d;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return \\%hash;\n}",
    "    my %hash;\n    for (my $i = 0; $i < @$l1; $i++) {\n        $hash{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return %hash;\n}",
    "    my @list = ($l1, $l2, $l3);\n    my %hash;\n    for my $i (0..$#list) {\n        for my $j (0..$#{$list[$i]}) {\n            $hash{$list[$i][$j]} = $list[$i+1][$j];\n        }\n    }\n    return %hash;\n}",
    "    my %hash;\n    for my $i (0..$#{$l1}) {\n        $hash{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return \\%hash;\n}",
    "    my %hash;\n    for my $i (0..$#{$l1}) {\n        $hash{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return \\%hash;\n}",
    "    my $d1 = {};\n    my $d2 = {};\n    my $d3 = {};\n    my $d4 = {};\n    my $d5 = {};\n    my $d6 = {};\n    my $d7 = {};\n    my $d8 = {};\n    my $d9 = {};\n    my $d10 = {};\n    my $d11 = {};\n    my $d12 = {};\n    my $d13 = {};\n    my $d14 = {};\n    my $d15 = {};\n    my $d16 = {};\n    my $d17 = {};\n    my $d18 = {};\n    my $d19 = {};\n    my $d20 = {};\n    my $d21 = {};\n    my $d22 = {};\n    my $d23 = {};\n    my $d24 = {};\n    my $d25 = {};\n    my $d26 = {};\n    my $d27 = {};\n    my $d28 = {};\n    my $d29 = {};\n    my $d30 = {};\n    my $d31 = {};\n    my $d32 = {};\n    my $d33 = {};\n    my $d34 = {};\n    my $d35 = {};\n    my $d36 = {};\n    my $d37 = {};\n    my $d38 = {};\n    my $d39 = {};\n    my $d40 = {};\n    my $d41 = {};\n    my $d42 = {};\n    my $d43 = {};\n    my $d44 = {};\n    my $d45 = {};\n    my $d46 = {};\n    my $d47 = {};\n    my $d48 = {};\n    my $d49 = {};\n    my $d50 = {};\n    my $d51 = {};\n    my $d52 = {};\n    my $d53 = {};\n    my $d54 = {};\n    my $d55 = {};\n    my $d56 = {};\n    my $d57 = {",
    "    my %hash;\n    for my $i (0 .. $#{$l1}) {\n        $hash{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return %hash;\n}",
    "    my %hash;\n    for(my $i = 0; $i < scalar(@$l1); $i++) {\n        $hash{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return %hash;\n}",
    "    my %hash;\n    for my $i (0..$#{$l1}) {\n        $hash{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return \\%hash;\n}",
    "    my %hash;\n    for my $i (0..$#{$l1}) {\n        $hash{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return \\%hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return %hash;\n}",
    "    my $d = {};\n    for (my $i = 0; $i < @$l1; $i++) {\n        $d->{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return $d;\n}",
    "    my $d = {};\n    for my $i (0 .. $#$l1) {\n        $d->{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return $d;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return %hash;\n}",
    "    my %hash = ();\n    my $i = 0;\n    for my $key (@$l1) {\n        $hash{$key} = {\n            $l2->[$i] => $l3->[$i]\n        };\n        $i++;\n    }\n    return %hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return \\%hash;\n}",
    "    my %hash;\n    for (my $i = 0; $i < scalar(@$l1); $i++) {\n        $hash{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return %hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return \\%hash;\n}",
    "    my %hash;\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        $hash{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return \\%hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return %hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return %hash;\n}",
    "    my %hash = ();\n    for (my $i = 0; $i < scalar(@$l1); $i++) {\n        $hash{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return %hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return \\%hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return \\%hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l1} = @$l3;\n    return %hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return %hash;\n}",
    "    my %hash = ();\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        $hash{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return %hash;\n}",
    "    my %dictionary;\n    for (my $i = 0; $i < @$l1; $i++) {\n        $dictionary{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return %dictionary;\n}",
    "    my %hash;\n    for my $i (0 .. $#{$l1}) {\n        $hash{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return %hash;\n}",
    "    my $d = {};\n    for my $i (0 .. $#$l1) {\n        $d->{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i],\n        };\n    }\n    return $d;\n}",
    "    my %hash;\n    for my $i (0..$#$l1) {\n        $hash{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return \\%hash;\n}",
    "    my $nested_dict = {};\n    for my $i (0 .. $#$l1) {\n        $nested_dict->{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return $nested_dict;\n}",
    "    my $d = {};\n    my $i = 0;\n    foreach my $v (@$l1) {\n        $d->{$v} = { $l2->[$i] => $l3->[$i] };\n        $i++;\n    }\n    return $d;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return \\%hash;\n}",
    "    my $d = {};\n    for my $i (0 .. $#$l1) {\n        $d->{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return $d;\n}",
    "    my %dictionary = ();\n    for my $i (0 .. $#{$l1}) {\n        $dictionary{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return %dictionary;\n}",
    "    my $nested_dict = {};\n    for my $i (0..$#{$l1}) {\n        $nested_dict->{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return $nested_dict;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return %hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return \\%hash;\n}",
    "    my %hash = ();\n    my $i = 0;\n    for my $val (@$l1) {\n        $hash{$val} = { $l2->[$i] => $l3->[$i] };\n        $i++;\n    }\n    return \\%hash;\n}",
    "    my $d = {};\n    for (my $i = 0; $i < scalar(@$l1); $i++) {\n        $d->{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return $d;\n}",
    "    my $d = {};\n    for my $i (0..$#$l1) {\n        $d->{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return $d;\n}",
    "    my %hash;\n    for my $i (0..$#{$l1}) {\n        $hash{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return \\%hash;\n}",
    "    my %hash = ();\n    my $i = 0;\n    foreach my $key (@$l1) {\n        $hash{$key} = {$l2->[$i] => $l3->[$i]};\n        $i++;\n    }\n    return %hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return \\%hash;\n}",
    "    my %hash = ();\n    my $i = 0;\n    for my $item (@$l1) {\n        $hash{$item} = { $l2->[$i] => $l3->[$i] };\n        $i++;\n    }\n    return \\%hash;\n}",
    "    my %hash = ();\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        $hash{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return %hash;\n}",
    "    my %hash;\n    for my $i (0 .. $#{$l1}) {\n        $hash{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i],\n        };\n    }\n    return \\%hash;\n}",
    "    my %hash = ();\n    for(my $i = 0; $i < scalar(@$l1); $i++) {\n        $hash{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return %hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return \\%hash;\n}",
    "    my %dictionary;\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        $dictionary{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return %dictionary;\n}",
    "    my %hash;\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        $hash{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return \\%hash;\n}",
    "    my $d = {};\n    for (my $i = 0; $i < @$l1; $i++) {\n        $d->{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return $d;\n}",
    "    my %h;\n    for (my $i = 0; $i < scalar(@$l1); $i++) {\n        $h{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return %h;\n}",
    "    my %hash;\n    my $i = 0;\n    foreach my $key (@$l1) {\n        $hash{$key} = {\n            @$l2[$i] => @$l3[$i]\n        };\n        $i++;\n    }\n    return %hash;\n}",
    "    my %hash;\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        $hash{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return %hash;\n}",
    "    my %hash;\n    for my $i (0 .. $#$l1) {\n        $hash{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return \\%hash;\n}",
    "    my %dictionary = ();\n    for (my $i = 0; $i < scalar(@$l1); $i++) {\n        $dictionary{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return %dictionary;\n}",
    "    my %d;\n    for (0..$#{$l1}) {\n        $d{$l1->[$_]} = { $l2->[$_] => $l3->[$_] };\n    }\n    return %d;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l1} = @$l3;\n    return \\%hash;\n}",
    "    my %hash;\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        $hash{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return %hash;\n}",
    "    my %hash;\n    for my $i (0..$#{$l1}) {\n        $hash{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return \\%hash;\n}",
    "    my %dictionary;\n    for (my $i = 0; $i < @$l1; $i++) {\n        $dictionary{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return %dictionary;\n}",
    "    my $d = {};\n    for my $i (0..$#$l1) {\n        $d->{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return $d;\n}",
    "    my %hash;\n    for (my $i = 0; $i < scalar @{$l1}; $i++) {\n        $hash{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return %hash;\n}",
    "    my $d = {};\n    for my $i (0..$#$l1) {\n        $d->{$l1->[$i]} = {\n            $l2->[$i] => $l3->[$i]\n        };\n    }\n    return $d;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return \\%hash;\n}",
    "    my %hash;\n    for my $i (0..$#{$l1}) {\n        $hash{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return \\%hash;\n}",
    "    my %hash;\n    for my $i (0..$#{$l1}) {\n        $hash{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return %hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return \\%hash;\n}",
    "    my $d = {};\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        $d->{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return $d;\n}",
    "    my %hash;\n    for (0..$#{$l1}) {\n        $hash{$l1->[$_]} = {$l2->[$_] => $l3->[$_]};\n    }\n    return %hash;\n}",
    "    my %hash = ();\n    for (my $i = 0; $i < scalar(@$l1); $i++) {\n        $hash{$$l1[$i]} = {$$l2[$i] => $$l3[$i]};\n    }\n    return %hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return \\%hash;\n}",
    "    my %hash;\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        $hash{$l1->[$i]} = { $l2->[$i] => $l3->[$i] };\n    }\n    return %hash;\n}",
    "    my %hash;\n    @hash{@$l1} = @$l2;\n    @hash{@$l3} = @$l3;\n    return \\%hash;\n}",
    "    my $d = {};\n    for my $i (0..$#$l1) {\n        $d->{$l1->[$i]} = {$l2->[$i] => $l3->[$i]};\n    }\n    return $d;\n}"
  ]
}
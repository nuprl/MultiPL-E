{
  "name": "mbpp_626_triangle_area",
  "language": "pl",
  "prompt": "# Write a python function to find the area of the largest triangle that can be inscribed in a semicircle with a given radius.\nsub triangle_area {\n    my($r) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_626_triangle_area.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&triangle_area;\n        if(eq_deeply($candidate->(-1),undef)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(0),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(2),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $s = $r/2;\n    my $area = sqrt(3) * $s * $s / 4;\n    return $area;\n}",
    "    my $s = $r*2;\n    my $area = (sqrt(3)/4)*($s**2);\n    return $area;\n}",
    "    my $s = $r/2;\n    my $area = sqrt(3)*$s*$s;\n    return $area;\n}",
    "    my $s = $r/2;\n    my $area = sqrt($s*($s-$r)*($s-$r)*($s-$r));\n    return $area;\n}",
    "    my $s = $r/2;\n    return sqrt($s*($s-$r)*($s-$r)*($s-$r));\n}",
    "    my $s = $r / 2;\n    my $area = sqrt($s * ($s - $r) * ($s - $r) * ($s - $r));\n    return $area;\n}",
    "    my $s = $r * 2;\n    my $area = (sqrt(3) / 4) * ($s * $s);\n    return $area;\n}",
    "    my $s = $r / 2;\n    my $area = sqrt(3) * $s * $s / 4;\n    return $area;\n}",
    "    my $s = $r * 2;\n    my $area = (sqrt(3) / 4) * ($s ** 2);\n    return $area;\n}",
    "    my $s = $r/2;\n    my $area = sqrt($s*($s-$r)*($s-$r)*($s-$r));\n    return $area;\n}",
    "    my $s = $r * 2;\n    my $area = sqrt(3) * $s * $s / 4;\n    return $area;\n}",
    "    my $s = $r / 2;\n    my $area = sqrt(3) * $s * $s / 4;\n    return $area;\n}",
    "    my $s = $r / 2;\n    my $area = sqrt($s * ($s - $r) * ($s - $r) * ($s - $r));\n    return $area;\n}",
    "    my $s = $r/2;\n    return sqrt(3)*$s*$s;\n}",
    "    my $s = $r * 2;\n    my $area = (sqrt(3) / 4) * $s * $s;\n    return $area;\n}",
    "    my $area = (sqrt(3) * $r * $r) / 4;\n    return $area;\n}",
    "    my $s = $r * 2;\n    my $area = sqrt(3) * ($s * $s) / 4;\n    return $area;\n}",
    "    my $s = $r / 2;\n    my $area = (sqrt(3) / 4) * $s * $s;\n    return $area;\n}",
    "    my $s = $r / 2;\n    my $area = sqrt($s * ($s - $r) * ($s - $r) * ($s - $r));\n    return $area;\n}",
    "    my $area = (sqrt(3)/4)*($r**2);\n    return $area;\n}"
  ]
}
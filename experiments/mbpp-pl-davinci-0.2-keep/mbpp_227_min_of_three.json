{
  "name": "mbpp_227_min_of_three",
  "language": "pl",
  "prompt": "# Write a function to find minimum of three numbers.\nsub min_of_three {\n    my($a, $b, $c) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_227_min_of_three.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_of_three;\n        if(eq_deeply($candidate->(10, 20, 0),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(19, 15, 18),15)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(-10, -20, -30),-30)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $min = $a;\n    if ($b < $min) {\n        $min = $b;\n    }\n    if ($c < $min) {\n        $min = $c;\n    }\n    return $min;\n}",
    "    my $min = $a;\n    if ($b < $min) {\n        $min = $b;\n    }\n    if ($c < $min) {\n        $min = $c;\n    }\n    return $min;\n}",
    "    my $min = $a;\n    $min = $b if $b < $min;\n    $min = $c if $c < $min;\n    return $min;\n}",
    "    return $a if $a <= $b && $a <= $c;\n    return $b if $b <= $a && $b <= $c;\n    return $c;\n}",
    "    my $min = $a;\n    if ($b < $min) {\n        $min = $b;\n    }\n    if ($c < $min) {\n        $min = $c;\n    }\n    return $min;\n}",
    "    if ($a <= $b && $a <= $c) {\n        return $a;\n    }\n    elsif ($b <= $a && $b <= $c) {\n        return $b;\n    }\n    else {\n        return $c;\n    }\n}",
    "    my $min = $a;\n    if ($b < $min) {\n        $min = $b;\n    }\n    if ($c < $min) {\n        $min = $c;\n    }\n    return $min;\n}",
    "    return $a if $a < $b && $a < $c;\n    return $b if $b < $a && $b < $c;\n    return $c;\n}",
    "    return $a if $a < $b && $a < $c;\n    return $b if $b < $a && $b < $c;\n    return $c;\n}",
    "    return $a if $a < $b && $a < $c;\n    return $b if $b < $a && $b < $c;\n    return $c;\n}",
    "    return $a if $a < $b && $a < $c;\n    return $b if $b < $a && $b < $c;\n    return $c;\n}",
    "    return $a if $a < $b && $a < $c;\n    return $b if $b < $a && $b < $c;\n    return $c;\n}",
    "    my $min = $a;\n    if ($b < $min) {\n        $min = $b;\n    }\n    if ($c < $min) {\n        $min = $c;\n    }\n    return $min;\n}",
    "    return $a if $a < $b && $a < $c;\n    return $b if $b < $a && $b < $c;\n    return $c;\n}",
    "    my $min = $a;\n    if ($b < $min) {\n        $min = $b;\n    }\n    if ($c < $min) {\n        $min = $c;\n    }\n    return $min;\n}",
    "    my $min = $a;\n    if ($b < $min) {\n        $min = $b;\n    }\n    if ($c < $min) {\n        $min = $c;\n    }\n    return $min;\n}",
    "    my $min = $a;\n    if ($b < $min) {\n        $min = $b;\n    }\n    if ($c < $min) {\n        $min = $c;\n    }\n    return $min;\n}",
    "    return $a if $a < $b && $a < $c;\n    return $b if $b < $a && $b < $c;\n    return $c;\n}",
    "    return $a if $a < $b && $a < $c;\n    return $b if $b < $a && $b < $c;\n    return $c;\n}",
    "    my $min = $a;\n    $min = $b if $b < $min;\n    $min = $c if $c < $min;\n    return $min;\n}"
  ]
}
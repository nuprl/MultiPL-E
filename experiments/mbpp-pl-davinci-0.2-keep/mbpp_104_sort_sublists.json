{
  "name": "mbpp_104_sort_sublists",
  "language": "pl",
  "prompt": "# Write a function to sort each sublist of strings in a given list of lists.\nsub sort_sublists {\n    my($input_list) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_104_sort_sublists.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_sublists;\n        if(eq_deeply($candidate->([[\"green\", \"orange\"], [\"black\", \"white\"], [\"white\", \"black\", \"orange\"]]),[[\"green\", \"orange\"], [\"black\", \"white\"], [\"black\", \"orange\", \"white\"]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\" red \", \"green\"], [\"blue \", \" black\"], [\" orange\", \"brown\"]]),[[\" red \", \"green\"], [\" black\", \"blue \"], [\" orange\", \"brown\"]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"zilver\", \"gold\"], [\"magnesium\", \"aluminium\"], [\"steel\", \"bronze\"]]),[[\"gold\", \"zilver\"], [\"aluminium\", \"magnesium\"], [\"bronze\", \"steel\"]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my @output_list;\n    foreach my $sublist (@$input_list) {\n        my @sorted_sublist = sort @$sublist;\n        push @output_list, \\@sorted_sublist;\n    }\n    return \\@output_list;\n}",
    "    my @output_list = ();\n    foreach my $sublist (@$input_list) {\n        my @sorted_sublist = sort @$sublist;\n        push @output_list, \\@sorted_sublist;\n    }\n    return \\@output_list;\n}",
    "    my @output_list;\n    foreach my $sublist (@$input_list) {\n        my @sorted_sublist = sort @$sublist;\n        push @output_list, \\@sorted_sublist;\n    }\n    return @output_list;\n}",
    "    my @output_list = ();\n    foreach my $sublist (@$input_list) {\n        my @sorted_sublist = sort @$sublist;\n        push @output_list, \\@sorted_sublist;\n    }\n    return \\@output_list;\n}",
    "    my @output_list = ();\n    foreach my $sublist (@$input_list) {\n        my @sorted_sublist = sort @$sublist;\n        push @output_list, \\@sorted_sublist;\n    }\n    return @output_list;\n}",
    "    my @output_list = ();\n    foreach my $sublist (@$input_list) {\n        my @sorted_sublist = sort @$sublist;\n        push @output_list, \\@sorted_sublist;\n    }\n    return \\@output_list;\n}",
    "    my @output_list = ();\n    foreach my $sublist (@$input_list) {\n        my @sorted_sublist = sort @$sublist;\n        push @output_list, \\@sorted_sublist;\n    }\n    return \\@output_list;\n}",
    "    my @output_list;\n    foreach my $sublist (@$input_list) {\n        my @sorted_sublist = sort @$sublist;\n        push @output_list, \\@sorted_sublist;\n    }\n    return \\@output_list;\n}",
    "    my @output_list;\n    foreach my $sublist (@$input_list) {\n        my @sorted_sublist = sort @$sublist;\n        push @output_list, \\@sorted_sublist;\n    }\n    return \\@output_list;\n}",
    "    my @output_list = ();\n    foreach my $sublist (@$input_list) {\n        my @sorted_sublist = sort @$sublist;\n        push @output_list, \\@sorted_sublist;\n    }\n    return @output_list;\n}",
    "    my @output_list = ();\n    foreach my $sublist (@$input_list) {\n        my @sorted_sublist = sort @$sublist;\n        push @output_list, \\@sorted_sublist;\n    }\n    return \\@output_list;\n}",
    "    my @output_list = ();\n    foreach my $sublist (@$input_list) {\n        my @sorted_sublist = sort @$sublist;\n        push @output_list, \\@sorted_sublist;\n    }\n    return \\@output_list;\n}",
    "    my @output_list = ();\n    foreach my $sublist (@$input_list) {\n        my @sorted_sublist = sort @$sublist;\n        push @output_list, \\@sorted_sublist;\n    }\n    return \\@output_list;\n}",
    "    my @output_list;\n    foreach my $sublist (@$input_list) {\n        my @sorted_sublist = sort @$sublist;\n        push @output_list, \\@sorted_sublist;\n    }\n    return \\@output_list;\n}",
    "    my @sorted_list;\n    foreach my $sublist (@$input_list) {\n        my @sorted_sublist = sort @$sublist;\n        push @sorted_list, \\@sorted_sublist;\n    }\n    return \\@sorted_list;\n}",
    "    my @output_list = ();\n    foreach my $sublist (@$input_list) {\n        my @sorted_sublist = sort @$sublist;\n        push @output_list, \\@sorted_sublist;\n    }\n    return \\@output_list;\n}",
    "    my @output_list = ();\n    foreach my $sublist (@$input_list) {\n        my @sorted_sublist = sort @$sublist;\n        push @output_list, \\@sorted_sublist;\n    }\n    return \\@output_list;\n}",
    "    my @output_list = ();\n    foreach my $sublist (@$input_list) {\n        my @sorted_sublist = sort @$sublist;\n        push @output_list, \\@sorted_sublist;\n    }\n    return \\@output_list;\n}",
    "    my @output_list = ();\n    foreach my $sublist (@$input_list) {\n        my @sorted_sublist = sort @$sublist;\n        push @output_list, \\@sorted_sublist;\n    }\n    return \\@output_list;\n}",
    "    my @output_list = ();\n    foreach my $sublist (@$input_list) {\n        my @sorted_sublist = sort @$sublist;\n        push @output_list, \\@sorted_sublist;\n    }\n    return \\@output_list;\n}"
  ]
}
{
  "name": "mbpp_612_merge",
  "language": "pl",
  "prompt": "# Write a python function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\nsub merge {\n    my($lst) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_612_merge.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&merge;\n        if(eq_deeply($candidate->([[\"x\", \"y\"], [\"a\", \"b\"], [\"m\", \"n\"]]),[[\"x\", \"a\", \"m\"], [\"y\", \"b\", \"n\"]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[1, 2], [3, 4], [5, 6], [7, 8]]),[[1, 3, 5, 7], [2, 4, 6, 8]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"x\", \"y\", \"z\"], [\"a\", \"b\", \"c\"], [\"m\", \"n\", \"o\"]]),[[\"x\", \"a\", \"m\"], [\"y\", \"b\", \"n\"], [\"z\", \"c\", \"o\"]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my @lst1;\n    my @lst2;\n    foreach my $sublst (@$lst) {\n        push @lst1, $sublst->[0];\n        push @lst2, $sublst->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @lst1;\n    my @lst2;\n    foreach my $sublst (@$lst) {\n        push @lst1, $sublst->[0];\n        push @lst2, $sublst->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @res = ([], []);\n    for my $sublst (@$lst) {\n        push @{$res[0]}, $sublst->[0];\n        push @{$res[1]}, $sublst->[1];\n    }\n    return @res;\n}",
    "    my @lst1;\n    my @lst2;\n    for(my $i = 0; $i < scalar(@$lst); $i++) {\n        push(@lst1, $lst->[$i][0]);\n        push(@lst2, $lst->[$i][1]);\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @lst1 = ();\n    my @lst2 = ();\n    foreach my $sublst (@$lst) {\n        push @lst1, $sublst->[0];\n        push @lst2, $sublst->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my($first, $second);\n    for my $sublst (@$lst) {\n        push @$first, $sublst->[0];\n        push @$second, $sublst->[1];\n    }\n    return [$first, $second];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @lst1;\n    my @lst2;\n    foreach my $sublst (@$lst) {\n        push @lst1, $sublst->[0];\n        push @lst2, $sublst->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @lst1 = ();\n    my @lst2 = ();\n    for my $i (@$lst) {\n        push @lst1, $i->[0];\n        push @lst2, $i->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @lst1 = ();\n    my @lst2 = ();\n    for my $sublst (@$lst) {\n        push @lst1, $sublst->[0];\n        push @lst2, $sublst->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @l1 = map { $_->[0] } @$lst;\n    my @l2 = map { $_->[1] } @$lst;\n    return [\\@l1, \\@l2];\n}",
    "    my($first, $second);\n    foreach my $sublst (@$lst) {\n        push(@$first, $sublst->[0]);\n        push(@$second, $sublst->[1]);\n    }\n    return [$first, $second];\n}",
    "    my @l1 = map { $_->[0] } @$lst;\n    my @l2 = map { $_->[1] } @$lst;\n    return [\\@l1, \\@l2];\n}",
    "    my @lst1 = ();\n    my @lst2 = ();\n    foreach my $sublst (@$lst) {\n        push @lst1, $sublst->[0];\n        push @lst2, $sublst->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @res = ([], []);\n    for my $sub (@$lst) {\n        push @{$res[0]}, $sub->[0];\n        push @{$res[1]}, $sub->[1];\n    }\n    return @res;\n}",
    "    my @lst1 = ();\n    my @lst2 = ();\n    foreach my $sublst (@$lst) {\n        push @lst1, $sublst->[0];\n        push @lst2, $sublst->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @l1 = ();\n    my @l2 = ();\n    foreach my $sublst (@$lst) {\n        push @l1, $sublst->[0];\n        push @l2, $sublst->[1];\n    }\n    return [\\@l1, \\@l2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    return [map {$_->[0]} @$lst], [map {$_->[1]} @$lst];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @lst1;\n    my @lst2;\n    foreach my $sublist (@$lst) {\n        push @lst1, $sublist->[0];\n        push @lst2, $sublist->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my($first, $second) = ([], []);\n    for my $sublst (@$lst) {\n        push @$first, $sublst->[0];\n        push @$second, $sublst->[1];\n    }\n    return [$first, $second];\n}",
    "    my @l1 = map { $_->[0] } @$lst;\n    my @l2 = map { $_->[1] } @$lst;\n    return [\\@l1, \\@l2];\n}",
    "    my($first, $second);\n    foreach my $sublst (@$lst) {\n        push(@$first, $sublst->[0]);\n        push(@$second, $sublst->[1]);\n    }\n    return [$first, $second];\n}",
    "    my @l1 = map { $_->[0] } @$lst;\n    my @l2 = map { $_->[1] } @$lst;\n    return [\\@l1, \\@l2];\n}",
    "    my @lst1;\n    my @lst2;\n    foreach my $i (@$lst) {\n        push @lst1, $i->[0];\n        push @lst2, $i->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @a = map { $_->[0] } @$lst;\n    my @b = map { $_->[1] } @$lst;\n    return [\\@a, \\@b];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @lst1;\n    my @lst2;\n    foreach my $i (@$lst) {\n        push @lst1, $i->[0];\n        push @lst2, $i->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @lst1;\n    my @lst2;\n    for my $sublst (@$lst) {\n        push @lst1, $sublst->[0];\n        push @lst2, $sublst->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my($first, $second);\n    foreach my $sublst (@$lst) {\n        my($f, $s) = @$sublst;\n        push(@$first, $f);\n        push(@$second, $s);\n    }\n    return [$first, $second];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @lst1;\n    my @lst2;\n    for my $sublst (@$lst) {\n        push @lst1, $sublst->[0];\n        push @lst2, $sublst->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @lst1 = ();\n    my @lst2 = ();\n    foreach my $sublst (@$lst) {\n        push @lst1, $sublst->[0];\n        push @lst2, $sublst->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @lst1;\n    my @lst2;\n    foreach my $sublst (@$lst) {\n        push @lst1, $sublst->[0];\n        push @lst2, $sublst->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @lst1 = ();\n    my @lst2 = ();\n    foreach my $sublst (@$lst) {\n        push @lst1, $sublst->[0];\n        push @lst2, $sublst->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my($lst1, $lst2);\n    foreach my $sublst (@$lst) {\n        push(@$lst1, $sublst->[0]);\n        push(@$lst2, $sublst->[1]);\n    }\n    return [$lst1, $lst2];\n}",
    "    my @lst1;\n    my @lst2;\n    for my $i (@$lst) {\n        push @lst1, $i->[0];\n        push @lst2, $i->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my(@first, @second);\n    for my $sublst (@$lst) {\n        push @first, $sublst->[0];\n        push @second, $sublst->[1];\n    }\n    return [\\@first, \\@second];\n}",
    "    my @lst1;\n    my @lst2;\n    for my $sublst (@$lst) {\n        push @lst1, $sublst->[0];\n        push @lst2, $sublst->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @res = ([], []);\n    for my $sub (@$lst) {\n        push @{$res[0]}, $sub->[0];\n        push @{$res[1]}, $sub->[1];\n    }\n    return @res;\n}",
    "    my($first, $second);\n    foreach my $sublst (@$lst) {\n        push @$first, $sublst->[0];\n        push @$second, $sublst->[1];\n    }\n    return [$first, $second];\n}",
    "    my @lst1;\n    my @lst2;\n    foreach my $sublist (@$lst) {\n        push @lst1, $sublist->[0];\n        push @lst2, $sublist->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @lst1;\n    my @lst2;\n    foreach my $sublst (@$lst) {\n        push @lst1, $sublst->[0];\n        push @lst2, $sublst->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @lst1 = map { $_->[0] } @$lst;\n    my @lst2 = map { $_->[1] } @$lst;\n    return [\\@lst1, \\@lst2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @lst1;\n    my @lst2;\n    foreach my $sublst (@$lst) {\n        push @lst1, $sublst->[0];\n        push @lst2, $sublst->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @first;\n    my @second;\n    for my $sublist (@$lst) {\n        push @first, $sublist->[0];\n        push @second, $sublist->[1];\n    }\n    return [\\@first, \\@second];\n}",
    "    my($first, $second);\n    foreach my $sublst (@$lst) {\n        push @$first, $sublst->[0];\n        push @$second, $sublst->[1];\n    }\n    return [$first, $second];\n}",
    "    my @lst1 = map { $_->[0] } @$lst;\n    my @lst2 = map { $_->[1] } @$lst;\n    return [\\@lst1, \\@lst2];\n}",
    "    my($first, $second);\n    foreach my $sublist (@$lst) {\n        push @$first, $sublist->[0];\n        push @$second, $sublist->[1];\n    }\n    return [$first, $second];\n}",
    "    my @lst1 = ();\n    my @lst2 = ();\n    for my $sublst (@$lst) {\n        push @lst1, $sublst->[0];\n        push @lst2, $sublst->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @lst1;\n    my @lst2;\n    for my $sublst (@$lst) {\n        push @lst1, $sublst->[0];\n        push @lst2, $sublst->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @lst1;\n    my @lst2;\n    foreach my $sublst (@$lst) {\n        push @lst1, $sublst->[0];\n        push @lst2, $sublst->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my($l1, $l2) = ([], []);\n    foreach my $sub (@$lst) {\n        push @$l1, $sub->[0];\n        push @$l2, $sub->[1];\n    }\n    return [$l1, $l2];\n}",
    "    my(@l1, @l2);\n    for my $i (@$lst) {\n        push @l1, $i->[0];\n        push @l2, $i->[1];\n    }\n    return [\\@l1, \\@l2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my($lst1, $lst2) = ([], []);\n    for my $sublst (@$lst) {\n        push @$lst1, $sublst->[0];\n        push @$lst2, $sublst->[1];\n    }\n    return [$lst1, $lst2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @lst1 = ();\n    my @lst2 = ();\n    for my $sublist (@$lst) {\n        push @lst1, $sublist->[0];\n        push @lst2, $sublist->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @first;\n    my @second;\n    for my $sublist (@$lst) {\n        push @first, $sublist->[0];\n        push @second, $sublist->[1];\n    }\n    return [\\@first, \\@second];\n}",
    "    my @lst1;\n    my @lst2;\n    foreach my $sublist (@$lst) {\n        push @lst1, $sublist->[0];\n        push @lst2, $sublist->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @first;\n    my @second;\n    for my $sublist (@$lst) {\n        push @first, $sublist->[0];\n        push @second, $sublist->[1];\n    }\n    return [\\@first, \\@second];\n}",
    "    my @first;\n    my @second;\n    for my $sublist (@$lst) {\n        push @first, $sublist->[0];\n        push @second, $sublist->[1];\n    }\n    return [\\@first, \\@second];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @l1;\n    my @l2;\n    foreach my $sublst (@$lst) {\n        push @l1, $sublst->[0];\n        push @l2, $sublst->[1];\n    }\n    return [\\@l1, \\@l2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @lst1 = ();\n    my @lst2 = ();\n    for my $sublst (@$lst) {\n        my($a, $b) = @$sublst;\n        push @lst1, $a;\n        push @lst2, $b;\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @lst1 = map {$_->[0]} @$lst;\n    my @lst2 = map {$_->[1]} @$lst;\n    return [\\@lst1, \\@lst2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @lst1;\n    my @lst2;\n    foreach my $sublst (@$lst) {\n        push @lst1, $sublst->[0];\n        push @lst2, $sublst->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @l1 = map { $_->[0] } @$lst;\n    my @l2 = map { $_->[1] } @$lst;\n    return [\\@l1, \\@l2];\n}",
    "    my @lst1 = map { $_->[0] } @$lst;\n    my @lst2 = map { $_->[1] } @$lst;\n    return [\\@lst1, \\@lst2];\n}",
    "    my @l1 = map { $_->[0] } @$lst;\n    my @l2 = map { $_->[1] } @$lst;\n    return [\\@l1, \\@l2];\n}",
    "    my @lst1 = ();\n    my @lst2 = ();\n    foreach my $sublist (@$lst) {\n        push @lst1, $sublist->[0];\n        push @lst2, $sublist->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @lst1 = map { $_->[0] } @$lst;\n    my @lst2 = map { $_->[1] } @$lst;\n    return [\\@lst1, \\@lst2];\n}",
    "    my @first;\n    my @second;\n    foreach my $sublist (@$lst) {\n        push @first, $sublist->[0];\n        push @second, $sublist->[1];\n    }\n    return [\\@first, \\@second];\n}",
    "    my @res = ([], []);\n    for my $sub (@$lst) {\n        push @{$res[0]}, $sub->[0];\n        push @{$res[1]}, $sub->[1];\n    }\n    return @res;\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @lst1;\n    my @lst2;\n    for my $i (@$lst) {\n        push @lst1, $i->[0];\n        push @lst2, $i->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @lst1 = ();\n    my @lst2 = ();\n    foreach my $sublst (@$lst) {\n        push(@lst1, $sublst->[0]);\n        push(@lst2, $sublst->[1]);\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @lst1 = map { $_->[0] } @$lst;\n    my @lst2 = map { $_->[1] } @$lst;\n    return [\\@lst1, \\@lst2];\n}",
    "    my @a = map { $_->[0] } @$lst;\n    my @b = map { $_->[1] } @$lst;\n    return [\\@a, \\@b];\n}",
    "    my($first, $second);\n    foreach my $elem (@$lst) {\n        push @$first, $elem->[0];\n        push @$second, $elem->[1];\n    }\n    return [$first, $second];\n}",
    "    my @res = ([], []);\n    for my $sub (@$lst) {\n        push @{$res[0]}, $sub->[0];\n        push @{$res[1]}, $sub->[1];\n    }\n    return @res;\n}",
    "    my($first, $second) = ([], []);\n    for my $pair (@$lst) {\n        push @$first, $pair->[0];\n        push @$second, $pair->[1];\n    }\n    return [$first, $second];\n}",
    "    my @l1 = map { $_->[0] } @$lst;\n    my @l2 = map { $_->[1] } @$lst;\n    return [\\@l1, \\@l2];\n}",
    "    my @lst1 = map {$_->[0]} @$lst;\n    my @lst2 = map {$_->[1]} @$lst;\n    return [\\@lst1, \\@lst2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @l1 = map { $_->[0] } @$lst;\n    my @l2 = map { $_->[1] } @$lst;\n    return [\\@l1, \\@l2];\n}",
    "    my @lst1 = ();\n    my @lst2 = ();\n    for my $i (@$lst) {\n        push @lst1, $i->[0];\n        push @lst2, $i->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @res = ([], []);\n    for my $sub (@$lst) {\n        push @{$res[0]}, $sub->[0];\n        push @{$res[1]}, $sub->[1];\n    }\n    return @res;\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my($first, $second);\n    foreach my $sublst (@$lst) {\n        push @$first, $sublst->[0];\n        push @$second, $sublst->[1];\n    }\n    return [$first, $second];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @first = ();\n    my @second = ();\n    for my $sublist (@$lst) {\n        push @first, $sublist->[0];\n        push @second, $sublist->[1];\n    }\n    return [\\@first, \\@second];\n}",
    "    my($first, $second) = ([], []);\n    for my $sublst (@$lst) {\n        push @$first, $sublst->[0];\n        push @$second, $sublst->[1];\n    }\n    return [$first, $second];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @lst1;\n    my @lst2;\n    foreach my $sublst (@$lst) {\n        push @lst1, $sublst->[0];\n        push @lst2, $sublst->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @lst1 = ();\n    my @lst2 = ();\n    foreach my $sublst (@$lst) {\n        push @lst1, $sublst->[0];\n        push @lst2, $sublst->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @lst1 = ();\n    my @lst2 = ();\n    for my $sublst (@$lst) {\n        push @lst1, $sublst->[0];\n        push @lst2, $sublst->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @first;\n    my @second;\n    for my $i (@$lst) {\n        push @first, $i->[0];\n        push @second, $i->[1];\n    }\n    return [\\@first, \\@second];\n}",
    "    my @lst1;\n    my @lst2;\n    for my $i (@$lst) {\n        push @lst1, $i->[0];\n        push @lst2, $i->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @lst1 = ();\n    my @lst2 = ();\n    for my $sublst (@$lst) {\n        push @lst1, $sublst->[0];\n        push @lst2, $sublst->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @lst1;\n    my @lst2;\n    for my $i (0 .. $#{$lst}) {\n        push @lst1, $lst->[$i][0];\n        push @lst2, $lst->[$i][1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @l1 = ();\n    my @l2 = ();\n    for my $sublst (@$lst) {\n        push @l1, $sublst->[0];\n        push @l2, $sublst->[1];\n    }\n    return [\\@l1, \\@l2];\n}",
    "    my(@lst1, @lst2);\n    for my $sublst (@$lst) {\n        push(@lst1, $sublst->[0]);\n        push(@lst2, $sublst->[1]);\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @lst1;\n    my @lst2;\n    foreach my $sublst (@$lst) {\n        push(@lst1, $sublst->[0]);\n        push(@lst2, $sublst->[1]);\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my $first = [];\n    my $second = [];\n    for my $sublist (@$lst) {\n        push @$first, $sublist->[0];\n        push @$second, $sublist->[1];\n    }\n    return [$first, $second];\n}",
    "    my @res = ([], []);\n    for my $sublst (@$lst) {\n        push @{$res[0]}, $sublst->[0];\n        push @{$res[1]}, $sublst->[1];\n    }\n    return \\@res;\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @lst1;\n    my @lst2;\n    foreach my $sublst (@$lst) {\n        push @lst1, $sublst->[0];\n        push @lst2, $sublst->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @lst1;\n    my @lst2;\n    for my $sublst (@$lst) {\n        push @lst1, $sublst->[0];\n        push @lst2, $sublst->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @lst1 = ();\n    my @lst2 = ();\n    for my $i (@$lst) {\n        push @lst1, $i->[0];\n        push @lst2, $i->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my($first, $second);\n    foreach my $sublist (@$lst) {\n        push @$first, $sublist->[0];\n        push @$second, $sublist->[1];\n    }\n    return [$first, $second];\n}",
    "    my @l1 = ();\n    my @l2 = ();\n    for my $sublist (@$lst) {\n        push @l1, $sublist->[0];\n        push @l2, $sublist->[1];\n    }\n    return [\\@l1, \\@l2];\n}",
    "    my($first, $second);\n    foreach my $sub (@$lst) {\n        push @$first, $sub->[0];\n        push @$second, $sub->[1];\n    }\n    return [$first, $second];\n}",
    "    my @lst1 = map { $_->[0] } @$lst;\n    my @lst2 = map { $_->[1] } @$lst;\n    return [\\@lst1, \\@lst2];\n}",
    "    my @lst1;\n    my @lst2;\n    foreach my $sublist (@$lst) {\n        push @lst1, $sublist->[0];\n        push @lst2, $sublist->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @lst1 = map { $_->[0] } @$lst;\n    my @lst2 = map { $_->[1] } @$lst;\n    return [\\@lst1, \\@lst2];\n}",
    "    my($first, $second);\n    foreach my $sub (@$lst) {\n        push @$first, $sub->[0];\n        push @$second, $sub->[1];\n    }\n    return [$first, $second];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @lst1 = map { $_->[0] } @$lst;\n    my @lst2 = map { $_->[1] } @$lst;\n    return [\\@lst1, \\@lst2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @lst1;\n    my @lst2;\n    for my $i (@$lst) {\n        push @lst1, $i->[0];\n        push @lst2, $i->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @lst1 = map { $_->[0] } @$lst;\n    my @lst2 = map { $_->[1] } @$lst;\n    return [\\@lst1, \\@lst2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @l1 = ();\n    my @l2 = ();\n    foreach my $sublst (@$lst) {\n        push @l1, $sublst->[0];\n        push @l2, $sublst->[1];\n    }\n    return [\\@l1, \\@l2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @lst1 = map { $_->[0] } @$lst;\n    my @lst2 = map { $_->[1] } @$lst;\n    return [\\@lst1, \\@lst2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @lst1;\n    my @lst2;\n    for my $sublst (@$lst) {\n        push @lst1, $sublst->[0];\n        push @lst2, $sublst->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @first = map {$_->[0]} @$lst;\n    my @second = map {$_->[1]} @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @lst1 = ();\n    my @lst2 = ();\n    for my $i (@$lst) {\n        push @lst1, $i->[0];\n        push @lst2, $i->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @lst1;\n    my @lst2;\n    for my $sublst (@$lst) {\n        push @lst1, $sublst->[0];\n        push @lst2, $sublst->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @lst1 = map { $_->[0] } @$lst;\n    my @lst2 = map { $_->[1] } @$lst;\n    return [\\@lst1, \\@lst2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @lst1;\n    my @lst2;\n    foreach my $sublist (@$lst) {\n        push @lst1, $sublist->[0];\n        push @lst2, $sublist->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @lst1 = map { $_->[0] } @$lst;\n    my @lst2 = map { $_->[1] } @$lst;\n    return [\\@lst1, \\@lst2];\n}",
    "    my @lst1 = ();\n    my @lst2 = ();\n    foreach my $sublst (@$lst) {\n        push(@lst1, $sublst->[0]);\n        push(@lst2, $sublst->[1]);\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @lst1 = ();\n    my @lst2 = ();\n    foreach my $sublst (@$lst) {\n        push(@lst1, $sublst->[0]);\n        push(@lst2, $sublst->[1]);\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @l1 = map { $_->[0] } @$lst;\n    my @l2 = map { $_->[1] } @$lst;\n    return [\\@l1, \\@l2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my @l1;\n    my @l2;\n    foreach my $sublist (@$lst) {\n        push @l1, $sublist->[0];\n        push @l2, $sublist->[1];\n    }\n    return [\\@l1, \\@l2];\n}",
    "    my @l1;\n    my @l2;\n    for my $i (@$lst) {\n        push @l1, $i->[0];\n        push @l2, $i->[1];\n    }\n    return [\\@l1, \\@l2];\n}",
    "    my @lst1;\n    my @lst2;\n    foreach my $sublst (@$lst) {\n        push @lst1, $sublst->[0];\n        push @lst2, $sublst->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @lst1 = map { $_->[0] } @$lst;\n    my @lst2 = map { $_->[1] } @$lst;\n    return [\\@lst1, \\@lst2];\n}",
    "    my @first = map { $_->[0] } @$lst;\n    my @second = map { $_->[1] } @$lst;\n    return [\\@first, \\@second];\n}",
    "    my($first, $second);\n    foreach my $sub (@$lst) {\n        push @$first, $sub->[0];\n        push @$second, $sub->[1];\n    }\n    return [$first, $second];\n}",
    "    my @lst1;\n    my @lst2;\n    for my $i (@$lst) {\n        push @lst1, $i->[0];\n        push @lst2, $i->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @l1 = map { $_->[0] } @$lst;\n    my @l2 = map { $_->[1] } @$lst;\n    return [\\@l1, \\@l2];\n}",
    "    my @lst1;\n    my @lst2;\n    for my $i (@$lst) {\n        push @lst1, $i->[0];\n        push @lst2, $i->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}",
    "    my @lst1 = ();\n    my @lst2 = ();\n    foreach my $sublst (@$lst) {\n        push @lst1, $sublst->[0];\n        push @lst2, $sublst->[1];\n    }\n    return [\\@lst1, \\@lst2];\n}"
  ]
}
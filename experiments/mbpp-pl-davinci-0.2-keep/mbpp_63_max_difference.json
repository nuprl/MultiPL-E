{
  "name": "mbpp_63_max_difference",
  "language": "pl",
  "prompt": "# Write a function to find the maximum difference between available pairs in the given tuple list.\nsub max_difference {\n    my($test_list) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_63_max_difference.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&max_difference;\n        if(eq_deeply($candidate->([[3, 5], [1, 7], [10, 3], [1, 2]]),7)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[4, 6], [2, 17], [9, 13], [11, 12]]),15)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[12, 35], [21, 27], [13, 23], [41, 22]]),23)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my @sorted_list = sort {$a <=> $b} @$test_list;\n    my $max_diff = $sorted_list[-1] - $sorted_list[0];\n    return $max_diff;\n}",
    "    my @sorted_list = sort {$a <=> $b} @$test_list;\n    my $max_diff = 0;\n    for (my $i = 0; $i < @sorted_list - 1; $i++) {\n        my $diff = $sorted_list[$i + 1] - $sorted_list[$i];\n        $max_diff = $diff if $diff > $max_diff;\n    }\n    return $max_diff;\n}",
    "    my $max_diff = 0;\n    my $diff;\n    for my $i (0 .. $#{$test_list}) {\n        for my $j ($i+1 .. $#{$test_list}) {\n            $diff = abs($test_list->[$i] - $test_list->[$j]);\n            if ($diff > $max_diff) {\n                $max_diff = $diff;\n            }\n        }\n    }\n    return $max_diff;\n}",
    "    my $max_diff = 0;\n    my $max_num = 0;\n    my $min_num = 0;\n    foreach my $num (@$test_list) {\n        if ($num > $max_num) {\n            $max_num = $num;\n        }\n        if ($num < $min_num) {\n            $min_num = $num;\n        }\n        if ($max_num - $min_num > $max_diff) {\n            $max_diff = $max_num - $min_num;\n        }\n    }\n    return $max_diff;\n}",
    "    my $max_diff = 0;\n    my $i = 0;\n    my $j = 0;\n    my $len = scalar @$test_list;\n    for ($i = 0; $i < $len; $i++) {\n        for ($j = $i + 1; $j < $len; $j++) {\n            if (abs($test_list->[$i] - $test_list->[$j]) > $max_diff) {\n                $max_diff = abs($test_list->[$i] - $test_list->[$j]);\n            }\n        }\n    }\n    return $max_diff;\n}",
    "    my $max_diff = 0;\n    my $max_num = 0;\n    my $min_num = 0;\n    foreach my $num (@$test_list) {\n        if ($num > $max_num) {\n            $max_num = $num;\n        }\n        if ($num < $min_num) {\n            $min_num = $num;\n        }\n    }\n    $max_diff = $max_num - $min_num;\n    return $max_diff;\n}",
    "    my $max_diff = 0;\n    my $size = scalar(@$test_list);\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            my $diff = abs($test_list->[$i] - $test_list->[$j]);\n            if ($diff > $max_diff) {\n                $max_diff = $diff;\n            }\n        }\n    }\n    return $max_diff;\n}",
    "    my $max_diff = 0;\n    my $max_diff_pair = [];\n    for my $i (0..$#{$test_list}) {\n        for my $j ($i+1..$#{$test_list}) {\n            my $diff = abs($test_list->[$i] - $test_list->[$j]);\n            if ($diff > $max_diff) {\n                $max_diff = $diff;\n                $max_diff_pair = [$test_list->[$i], $test_list->[$j]];\n            }\n        }\n    }\n    return $max_diff_pair;\n}",
    "    my $max_diff = 0;\n    my $max_num = 0;\n    my $min_num = 0;\n    my $diff = 0;\n    foreach my $num (@$test_list) {\n        if ($num > $max_num) {\n            $max_num = $num;\n        }\n        if ($num < $min_num) {\n            $min_num = $num;\n        }\n        $diff = $max_num - $min_num;\n        if ($diff > $max_diff) {\n            $max_diff = $diff;\n        }\n    }\n    return $max_diff;\n}",
    "    my $max_diff = 0;\n    my $max_diff_pair = \"\";\n    for my $i (0..$#{$test_list}) {\n        for my $j ($i+1..$#{$test_list}) {\n            my $diff = abs($test_list->[$i] - $test_list->[$j]);\n            if ($diff > $max_diff) {\n                $max_diff = $diff;\n                $max_diff_pair = \"($test_list->[$i], $test_list->[$j])\";\n            }\n        }\n    }\n    return $max_diff_pair;\n}",
    "    my @sorted_list = sort {$a <=> $b} @$test_list;\n    my $max_diff = $sorted_list[-1] - $sorted_list[0];\n    return $max_diff;\n}",
    "    my @test_list = @$test_list;\n    my $max_diff = 0;\n    for my $i (0 .. $#test_list - 1) {\n        for my $j ($i + 1 .. $#test_list) {\n            my $diff = abs($test_list[$i] - $test_list[$j]);\n            $max_diff = $diff if $diff > $max_diff;\n        }\n    }\n    return $max_diff;\n}",
    "    my $max_difference = 0;\n    my $difference = 0;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    for (my $i = 0; $i < scalar(@sorted_list) - 1; $i++) {\n        $difference = $sorted_list[$i + 1] - $sorted_list[$i];\n        if ($difference > $max_difference) {\n            $max_difference = $difference;\n        }\n    }\n    return $max_difference;\n}",
    "    my $max_diff = 0;\n    my $size = scalar(@$test_list);\n    for(my $i = 0; $i < $size; $i++) {\n        for(my $j = $i + 1; $j < $size; $j++) {\n            my $diff = abs($test_list->[$i] - $test_list->[$j]);\n            if($diff > $max_diff) {\n                $max_diff = $diff;\n            }\n        }\n    }\n    return $max_diff;\n}",
    "    my $max_diff = 0;\n    my $max_num = 0;\n    my $min_num = 0;\n    my $diff = 0;\n    my $i = 0;\n    my $j = 0;\n    my $len = @$test_list;\n    for ($i = 0; $i < $len; $i++) {\n        if ($i == 0) {\n            $max_num = $test_list->[$i];\n            $min_num = $test_list->[$i];\n        }\n        if ($test_list->[$i] > $max_num) {\n            $max_num = $test_list->[$i];\n        }\n        if ($test_list->[$i] < $min_num) {\n            $min_num = $test_list->[$i];\n        }\n    }\n    $diff = $max_num - $min_num;\n    return $diff;\n}",
    "    my $max_diff = 0;\n    for my $i (0 .. $#{$test_list}) {\n        for my $j ($i+1 .. $#{$test_list}) {\n            my $diff = abs($test_list->[$i] - $test_list->[$j]);\n            $max_diff = $diff if $diff > $max_diff;\n        }\n    }\n    return $max_diff;\n}",
    "    my @sorted_list = sort {$a <=> $b} @$test_list;\n    my $max_diff = $sorted_list[-1] - $sorted_list[0];\n    return $max_diff;\n}",
    "    my $max_diff = 0;\n    my $i = 0;\n    my $j = 0;\n    my $diff = 0;\n    my $size = scalar @$test_list;\n    for($i = 0; $i < $size; $i++) {\n        for($j = $i+1; $j < $size; $j++) {\n            $diff = abs($test_list->[$i] - $test_list->[$j]);\n            if($diff > $max_diff) {\n                $max_diff = $diff;\n            }\n        }\n    }\n    return $max_diff;\n}",
    "    my $max_diff = 0;\n    my $min_value = $test_list->[0];\n    for my $i (1 .. $#$test_list) {\n        $min_value = $test_list->[$i] if $test_list->[$i] < $min_value;\n        $max_diff = $test_list->[$i] - $min_value if $test_list->[$i] - $min_value > $max_diff;\n    }\n    return $max_diff;\n}",
    "    my @sorted_list = sort { $a <=> $b } @$test_list;\n    my $max_diff = 0;\n    for (my $i = 0; $i < @sorted_list - 1; $i++) {\n        my $diff = $sorted_list[$i + 1] - $sorted_list[$i];\n        if ($diff > $max_diff) {\n            $max_diff = $diff;\n        }\n    }\n    return $max_diff;\n}"
  ]
}
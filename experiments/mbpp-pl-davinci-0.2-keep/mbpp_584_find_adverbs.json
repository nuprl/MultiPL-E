{
  "name": "mbpp_584_find_adverbs",
  "language": "pl",
  "prompt": "# Write a function to find the first adverb ending with ly and its positions in a given string.\nsub find_adverbs {\n    my($text) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_584_find_adverbs.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&find_adverbs;\n        if(eq_deeply($candidate->(\"Clearly, he has no excuse for such behavior.\"),\"0-7: Clearly\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"Please handle the situation carefuly\"),\"28-36: carefuly\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"Complete the task quickly\"),\"18-25: quickly\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $-[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $position = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $position + $-[0];\n        $position += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    while ($text =~ /(\\w+ly)/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $position = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $position + $-[0];\n        $position += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos $text];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/ig) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    my $i = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, {\n            word => $1,\n            start => $i + $-[1],\n            end => $i + $+[1]\n        };\n        $i += $+[0];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, {\n            word => $1,\n            start => $-[1],\n            end => $+[1],\n        };\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $pos + $-[0];\n        $pos += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $position = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $position + $-[0];\n        $position += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, $-[0], $+[0]];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my $pos = 0;\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @adverbs, $pos + $-[0];\n        push @adverbs, $pos + $+[0];\n        $pos += $+[0];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, $pos + $-[0]];\n        $pos += $+[0];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, {\n            word => $1,\n            start => $-[1],\n            end => $+[1]\n        };\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while($text =~ /(\\w+ly)/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, $pos + $-[0]];\n        $pos += $+[0];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $pos + $-[0];\n        $pos += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $pos = 0;\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $pos + $-[0];\n        $pos += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, {\n            word => $1,\n            start => $-[1],\n            end => $+[1]\n        };\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @adverbs, $-[1];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    my @positions;\n    while ($text =~ /(\\w+ly)/g) {\n        push @adverbs, $1;\n        push @positions, $-[1];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, $-[0], $+[0]];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    my $pos = 0;\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @adverbs, $pos + $-[1];\n        $pos = $+[1];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $pos + $-[1];\n        $pos = $+[1];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, {\n            word => $1,\n            start => $-[1],\n            end => $+[1]\n        };\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos $text];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, $pos + $-[0], $pos + $+[0]];\n        $pos += $+[0];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my $adverbs = [];\n    while ($text =~ /(\\w+ly)/g) {\n        push @$adverbs, {\n            word => $1,\n            start => $-[1],\n            end => $+[1],\n        };\n    }\n    return $adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $position = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $position + $-[0];\n        $position += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs = ();\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @adverbs, $-[1];\n    }\n    return @adverbs;\n}",
    "    my $regex = qr/\\b\\w+ly\\b/;\n    my @adverbs = $text =~ /$regex/g;\n    my $positions = join(', ', $text =~ /$regex/g);\n    return @adverbs, $positions;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $position = 0;\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $position + $-[0];\n        $position += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, {\n            word => $1,\n            start => $-[0],\n            end => $+[0]\n        };\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while($text =~ /\\b\\w+ly\\b/g) {\n        push @adverbs, [$&, pos($text) - length($&)];\n    }\n    return @adverbs;\n}",
    "    my $regex = qr/\\b\\w+ly\\b/;\n    my @adverbs = $text =~ /$regex/g;\n    my $positions = [ $text =~ /$regex/g ];\n    return (\\@adverbs, $positions);\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $position = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $position + $-[0];\n        $position += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @adverbs, $-[1];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, $pos + $-[0], $pos + $+[0]];\n        $pos += $+[0];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $position = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $position + $-[0];\n        $position += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $position = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $position + $-[0];\n        $position += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, {\n            word => $1,\n            start => $pos + $-[0],\n            end => $pos + $+[0]\n        };\n        $pos += $+[0];\n    }\n    return @adverbs;\n}",
    "    my $pos = 0;\n    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, $pos + $-[0]];\n        $pos += $+[0];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my @words = split /\\s+/, $text;\n    for (my $i = 0; $i < @words; $i++) {\n        if ($words[$i] =~ /ly$/) {\n            push @adverbs, $words[$i];\n            push @positions, $i;\n        }\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, $pos + $-[0], $pos + $+[0]];\n        $pos += $+[0];\n    }\n    return @adverbs;\n}",
    "    my $adverb_regex = qr/\\w+ly/;\n    my @adverbs = $text =~ /$adverb_regex/g;\n    my @positions = $text =~ /$adverb_regex/g;\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    my @positions;\n    my $position = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $position + $-[0];\n        $position += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    my @positions;\n    my $position = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $position + $-[0];\n        $position += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @adverbs, $-[1];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $pos = 0;\n    while ($text =~ m/\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $pos + $-[0];\n        $pos += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs = ();\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    my $i = 0;\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, $i + $-[0], $i + $+[0] - 1];\n        $i += $+[0];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, $-[0], $+[0]];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/gi) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        $pos = pos($text);\n    }\n    return (\\@adverbs, $pos);\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $position = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $position + $-[0];\n        $position += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b\\w+ly\\b/g) {\n        push @adverbs, {\n            word => $&,\n            start => $-[0],\n            end => $+[0]\n        };\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        $pos = pos($text);\n    }\n    return ($pos, @adverbs);\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, $pos + $-[1], $pos + $+[1]];\n        $pos += $+[0];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $pos + $-[0];\n        $pos += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $position = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $position + $-[0];\n        $position += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, $-[0], $+[0]];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @adverbs, $-[1];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    my @positions;\n    my $pos = 0;\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $pos + $-[0];\n        $pos += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $-[1];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, $-[0], $+[0]];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my $pos = 0;\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        $pos = pos($text);\n    }\n    return ($pos, @adverbs);\n}",
    "    my @adverbs;\n    my @positions;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, pos($text);\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my $adverb_regex = qr/\\b\\w+ly\\b/;\n    my @adverbs = $text =~ /$adverb_regex/g;\n    my @positions = $text =~ /$adverb_regex/g;\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, $-[0], $+[0]];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, {\n            word => $1,\n            start => $-[1],\n            end => $+[1]\n        };\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $pos + $-[1];\n        $pos = $+[1];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    my @positions;\n    my $position = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $position + $-[0];\n        $position += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    while ($text =~ /(\\w+ly)/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /(\\w+ly)/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, $pos + $-[0]];\n        $pos += $+[0];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my @words = split(/\\s+/, $text);\n    for (my $i = 0; $i < @words; $i++) {\n        if ($words[$i] =~ /ly$/) {\n            push @adverbs, $words[$i];\n            push @positions, $i;\n        }\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my $result = \"\";\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        $result = $1;\n        $pos = pos($text);\n        last;\n    }\n    return ($result, $pos);\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $position = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $position + $-[0];\n        $position += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $position = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $position + $-[0];\n        $position += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    my @positions;\n    my @words = split(/\\s+/, $text);\n    for (my $i = 0; $i < @words; $i++) {\n        if ($words[$i] =~ /ly$/) {\n            push @adverbs, $words[$i];\n            push @positions, $i;\n        }\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /(\\w+ly)/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my $pos = 0;\n    my $adverb;\n    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        $adverb = $1;\n        $pos = pos($text);\n        push @adverbs, [$adverb, $pos];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/gi) {\n        push @adverbs, $1;\n        push @adverbs, $pos + $-[0];\n        $pos += $+[0];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, $pos + $-[0]];\n        $pos += $+[0];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @adverbs, $pos + $-[1];\n        $pos = $+[0];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my $adverb_regex = qr/\\b\\w+ly\\b/;\n    while ($text =~ /$adverb_regex/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $position = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $position + $-[0];\n        $position += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    my $position = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, $position + $-[0]];\n        $position += $+[0];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while($text =~ /(\\w+ly)/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, {\n            word => $1,\n            start => $-[1],\n            end => $+[1],\n        };\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $position = 0;\n    while($text =~ /\\b(\\w+ly)\\b/g){\n        push @adverbs, $1;\n        push @positions, $position + $-[0];\n        $position += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}"
  ]
}
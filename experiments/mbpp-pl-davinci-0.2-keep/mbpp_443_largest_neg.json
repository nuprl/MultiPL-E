{
  "name": "mbpp_443_largest_neg",
  "language": "pl",
  "prompt": "# Write a python function to find the largest negative number from the given list.\nsub largest_neg {\n    my($list1) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_443_largest_neg.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&largest_neg;\n        if(eq_deeply($candidate->([1, 2, 3, -4, -6]),-6)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3, -8, -9]),-9)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3, 4, -1]),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $max = $list1->[0];\n    foreach my $i (@$list1) {\n        if ($i < 0) {\n            if ($i > $max) {\n                $max = $i;\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max = $list1->[0];\n    foreach my $i (@$list1) {\n        if($i < 0) {\n            if($i > $max) {\n                $max = $i;\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max = $list1->[0];\n    foreach my $i (@$list1) {\n        if ($i < $max) {\n            $max = $i;\n        }\n    }\n    return $max;\n}",
    "    my $largest_neg = 0;\n    foreach my $num (@$list1) {\n        if ($num < 0 && $num > $largest_neg) {\n            $largest_neg = $num;\n        }\n    }\n    return $largest_neg;\n}",
    "    my $max = $list1->[0];\n    foreach my $i (@$list1) {\n        if($i < 0) {\n            if($i > $max) {\n                $max = $i;\n            }\n        }\n    }\n    return $max;\n}",
    "    my @list = @$list1;\n    my $max = $list[0];\n    foreach my $i (@list) {\n        if ($i < 0) {\n            if ($i > $max) {\n                $max = $i;\n            }\n        }\n    }\n    return $max;\n}",
    "    my $largest_neg = $list1->[0];\n    for(my $i = 1; $i <= $#{$list1}; $i++) {\n        if($list1->[$i] < 0 && $list1->[$i] > $largest_neg) {\n            $largest_neg = $list1->[$i];\n        }\n    }\n    return $largest_neg;\n}",
    "    my $max = 0;\n    foreach my $i (@$list1) {\n        if ($i < 0) {\n            if ($i > $max) {\n                $max = $i;\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max = $list1->[0];\n    foreach my $i (@$list1) {\n        if ($i < 0) {\n            if ($i > $max) {\n                $max = $i;\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max = $list1->[0];\n    foreach my $i (@$list1) {\n        if ($i < 0) {\n            if ($i > $max) {\n                $max = $i;\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max = $list1->[0];\n    foreach my $i (@$list1) {\n        if ($i < 0) {\n            if ($i > $max) {\n                $max = $i;\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max = $list1->[0];\n    foreach my $i (@$list1) {\n        if ($i < $max) {\n            $max = $i;\n        }\n    }\n    return $max;\n}",
    "    my $largest_neg = 0;\n    foreach my $num (@$list1) {\n        if ($num < 0 && $num > $largest_neg) {\n            $largest_neg = $num;\n        }\n    }\n    return $largest_neg;\n}",
    "    my $max = $list1->[0];\n    foreach my $i (@$list1) {\n        if ($i < 0 && $i > $max) {\n            $max = $i;\n        }\n    }\n    return $max;\n}",
    "    my $max = $list1->[0];\n    foreach my $i (@$list1) {\n        if ($i < $max) {\n            $max = $i;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $i (@$list1) {\n        if ($i < 0) {\n            if ($i > $max) {\n                $max = $i;\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max = $list1->[0];\n    foreach my $i (@$list1) {\n        if ($i < $max) {\n            $max = $i;\n        }\n    }\n    return $max;\n}",
    "    my @list = @$list1;\n    my $max = $list[0];\n    foreach my $i (@list) {\n        if ($i < 0 && $i > $max) {\n            $max = $i;\n        }\n    }\n    return $max;\n}",
    "    my $max = $list1->[0];\n    foreach my $i (@$list1) {\n        if ($i < $max) {\n            $max = $i;\n        }\n    }\n    return $max;\n}",
    "    my $max = -9999;\n    foreach my $i (@$list1) {\n        if($i < 0 && $i > $max) {\n            $max = $i;\n        }\n    }\n    return $max;\n}"
  ]
}
{
  "name": "mbpp_57_find_Max_Num",
  "language": "pl",
  "prompt": "# Write a python function to find the largest number that can be formed with the given list of digits.\nsub find_Max_Num {\n    my($arr) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_57_find_Max_Num.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&find_Max_Num;\n        if(eq_deeply($candidate->([1, 2, 3]),321)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4, 5, 6, 1]),6541)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3, 9]),9321)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my @arr = @$arr;\n    my $max = 0;\n    my $num = 0;\n    for(my $i=0;$i<=$#arr;$i++) {\n        for(my $j=$i+1;$j<=$#arr;$j++) {\n            if($arr[$i] < $arr[$j]) {\n                $num = $arr[$i];\n                $arr[$i] = $arr[$j];\n                $arr[$j] = $num;\n            }\n        }\n    }\n    for(my $i=0;$i<=$#arr;$i++) {\n        $max = $max.$arr[$i];\n    }\n    return $max;\n}",
    "    my @arr = @$arr;\n    my @sorted_arr = sort {$b <=> $a} @arr;\n    my $max_num = join('',@sorted_arr);\n    return $max_num;\n}",
    "    my @arr = @$arr;\n    my @sorted_arr = sort {$b <=> $a} @arr;\n    my $max_num = join(\"\", @sorted_arr);\n    return $max_num;\n}",
    "    my @arr = @$arr;\n    my @sorted_arr = sort {$b <=> $a} @arr;\n    my $max_num = join(\"\",@sorted_arr);\n    return $max_num;\n}",
    "    my @arr = @$arr;\n    my $max_num = 0;\n    my $len = scalar @arr;\n    for(my $i=0; $i<$len; $i++) {\n        for(my $j=$i+1; $j<$len; $j++) {\n            if($arr[$i] < $arr[$j]) {\n                my $temp = $arr[$i];\n                $arr[$i] = $arr[$j];\n                $arr[$j] = $temp;\n            }\n        }\n    }\n    foreach my $num (@arr) {\n        $max_num = $max_num.$num;\n    }\n    return $max_num;\n}",
    "    my @arr = sort {$b <=> $a} @$arr;\n    my $max_num = join(\"\", @arr);\n    return $max_num;\n}",
    "    my @arr = @$arr;\n    my $max = 0;\n    for(my $i = 0; $i < scalar @arr; $i++) {\n        for(my $j = $i + 1; $j < scalar @arr; $j++) {\n            if($arr[$i] < $arr[$j]) {\n                my $temp = $arr[$i];\n                $arr[$i] = $arr[$j];\n                $arr[$j] = $temp;\n            }\n        }\n    }\n    for(my $i = 0; $i < scalar @arr; $i++) {\n        $max = $max * 10 + $arr[$i];\n    }\n    return $max;\n}",
    "    my @arr = @$arr;\n    my @sorted_arr = sort {$b <=> $a} @arr;\n    my $max_num = join(\"\",@sorted_arr);\n    return $max_num;\n}",
    "    my @arr = @$arr;\n    my @sorted_arr = sort { $b <=> $a } @arr;\n    my $max_num = join(\"\",@sorted_arr);\n    return $max_num;\n}",
    "    my @arr = @$arr;\n    my @arr1 = sort {$b <=> $a} @arr;\n    my $num = join(\"\",@arr1);\n    return $num;\n}",
    "    my @array = @$arr;\n    my $max = 0;\n    my $num = 0;\n    my $len = scalar(@array);\n    for(my $i = 0; $i < $len; $i++) {\n        for(my $j = $i + 1; $j < $len; $j++) {\n            if($array[$i] < $array[$j]) {\n                $num = $array[$i];\n                $array[$i] = $array[$j];\n                $array[$j] = $num;\n            }\n        }\n    }\n    for(my $i = 0; $i < $len; $i++) {\n        $max = $max . $array[$i];\n    }\n    return $max;\n}",
    "    my @arr = @$arr;\n    my @sorted_arr = sort {$b <=> $a} @arr;\n    my $max_num = join(\"\",@sorted_arr);\n    return $max_num;\n}",
    "    my @arr = @$arr;\n    my @sorted = sort {$b <=> $a} @arr;\n    my $max = join(\"\", @sorted);\n    return $max;\n}",
    "    my @arr = @$arr;\n    my @sorted_arr = sort {$b <=> $a} @arr;\n    my $max_num = join(\"\", @sorted_arr);\n    return $max_num;\n}",
    "    my @arr = @$arr;\n    my $max = 0;\n    my $num = 0;\n    for(my $i = 0; $i < scalar(@arr); $i++) {\n        for(my $j = 0; $j < scalar(@arr); $j++) {\n            if($arr[$i] > $arr[$j]) {\n                $num = $arr[$i];\n                $arr[$i] = $arr[$j];\n                $arr[$j] = $num;\n            }\n        }\n    }\n    for(my $i = 0; $i < scalar(@arr); $i++) {\n        $max = $max * 10 + $arr[$i];\n    }\n    return $max;\n}",
    "    my @sorted_arr = sort {$b <=> $a} @$arr;\n    my $max_num = join('',@sorted_arr);\n    return $max_num;\n}",
    "    my @arr = @$arr;\n    my @sorted = sort {$b <=> $a} @arr;\n    my $max = join('', @sorted);\n    return $max;\n}",
    "    my @arr = @$arr;\n    my $max = 0;\n    my $len = scalar @arr;\n    for(my $i = 0; $i < $len; $i++) {\n        for(my $j = $i + 1; $j < $len; $j++) {\n            if($arr[$i] < $arr[$j]) {\n                my $temp = $arr[$i];\n                $arr[$i] = $arr[$j];\n                $arr[$j] = $temp;\n            }\n        }\n    }\n    for(my $i = 0; $i < $len; $i++) {\n        $max = $max * 10 + $arr[$i];\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $num = 0;\n    my $len = scalar(@$arr);\n    for(my $i = 0; $i < $len; $i++) {\n        for(my $j = $i + 1; $j < $len; $j++) {\n            if($arr->[$i] < $arr->[$j]) {\n                $num = $arr->[$i];\n                $arr->[$i] = $arr->[$j];\n                $arr->[$j] = $num;\n            }\n        }\n    }\n    foreach(@$arr) {\n        $max = $max * 10 + $_;\n    }\n    return $max;\n}",
    "    my @arr = @$arr;\n    my @sorted_arr = sort {$b <=> $a} @arr;\n    my $max_num = join(\"\",@sorted_arr);\n    return $max_num;\n}"
  ]
}
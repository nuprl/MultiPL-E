{
  "name": "mbpp_436_neg_nos",
  "language": "pl",
  "prompt": "# Write a python function to return the negative numbers in a list.\nsub neg_nos {\n    my($list1) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_436_neg_nos.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&neg_nos;\n        if(eq_deeply($candidate->([-1, 4, 5, -6]),[-1, -6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-1, -2, 3, 4]),[-1, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-7, -6, 8, 9]),[-7, -6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my @neg_nos = ();\n    foreach my $num (@$list1) {\n        if ($num < 0) {\n            push @neg_nos, $num;\n        }\n    }\n    return @neg_nos;\n}",
    "    my @neg_nos;\n    foreach my $i (@$list1) {\n        if ($i < 0) {\n            push @neg_nos, $i;\n        }\n    }\n    return @neg_nos;\n}",
    "    my @neg_nos;\n    foreach my $num (@$list1) {\n        if($num < 0) {\n            push @neg_nos, $num;\n        }\n    }\n    return @neg_nos;\n}",
    "    my @neg_nos;\n    foreach my $num (@$list1) {\n        if ($num < 0) {\n            push @neg_nos, $num;\n        }\n    }\n    return @neg_nos;\n}",
    "    my @neg_nos = ();\n    foreach my $num(@$list1) {\n        if ($num < 0) {\n            push @neg_nos, $num;\n        }\n    }\n    return @neg_nos;\n}",
    "    my @neg_nos = ();\n    foreach my $num (@$list1) {\n        if($num < 0) {\n            push @neg_nos, $num;\n        }\n    }\n    return @neg_nos;\n}",
    "    my @neg_nos = ();\n    foreach my $i (@$list1) {\n        if ($i < 0) {\n            push @neg_nos, $i;\n        }\n    }\n    return @neg_nos;\n}",
    "    my @neg_nos = grep {$_ < 0} @$list1;\n    return @neg_nos;\n}",
    "    my @neg_nos = ();\n    foreach my $num (@$list1) {\n        if ($num < 0) {\n            push @neg_nos, $num;\n        }\n    }\n    return @neg_nos;\n}",
    "    my @neg_nos = ();\n    foreach my $num (@$list1) {\n        if ($num < 0) {\n            push @neg_nos, $num;\n        }\n    }\n    return @neg_nos;\n}",
    "    my @neg_nos = grep {$_ < 0} @$list1;\n    return @neg_nos;\n}",
    "    my @neg_nos = ();\n    foreach my $num (@$list1) {\n        if ($num < 0) {\n            push @neg_nos, $num;\n        }\n    }\n    return @neg_nos;\n}",
    "    my @neg_nos = grep {$_ < 0} @$list1;\n    return @neg_nos;\n}",
    "    my @neg_nos = grep {$_ < 0} @$list1;\n    return @neg_nos;\n}",
    "    my @neg_nos = grep {$_ < 0} @$list1;\n    return @neg_nos;\n}",
    "    my @neg_nos = ();\n    foreach my $num (@$list1) {\n        if ($num < 0) {\n            push @neg_nos, $num;\n        }\n    }\n    return @neg_nos;\n}",
    "    my @neg_nos = ();\n    foreach my $num (@$list1) {\n        if ($num < 0) {\n            push @neg_nos, $num;\n        }\n    }\n    return @neg_nos;\n}",
    "    my @neg_nos = grep {$_ < 0} @$list1;\n    return @neg_nos;\n}",
    "    my @neg_nos = ();\n    foreach my $ele (@$list1) {\n        if($ele < 0) {\n            push @neg_nos, $ele;\n        }\n    }\n    return @neg_nos;\n}",
    "    my @neg_nos;\n    foreach my $i (@$list1) {\n        if ($i < 0) {\n            push @neg_nos, $i;\n        }\n    }\n    return @neg_nos;\n}"
  ]
}
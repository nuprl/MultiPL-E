{
  "name": "mbpp_160_find_solution",
  "language": "pl",
  "prompt": "# Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nsub find_solution {\n    my($a, $b, $n) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_160_find_solution.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&find_solution;\n        if(eq_deeply($candidate->(2, 3, 7),[2, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(4, 2, 7),undef)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1, 13, 17),[4, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (0, 1);\n    ($x, $y) = ($y, $x - int($a / $b) * $y) while $b;\n    return ($x * ($n / gcd($a, $b)), $y * ($n / gcd($a, $b)));\n}",
    "    for my $x (0 .. $n) {\n        for my $y (0 .. $n) {\n            return ($x, $y) if $a * $x + $b * $y == $n;\n        }\n    }\n    return;\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        if (($n - $x * $a) % $b == 0) {\n            $y = ($n - $x * $a) / $b;\n            return ($x, $y);\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    if ($n % gcd($a, $b) != 0) {\n        return;\n    }\n    my $x = mult_inv($a, $b);\n    my $y = mult_inv($b, $a);\n    return ($b * $x * ($n / gcd($a, $b)) , $a * $y * ($n / gcd($a, $b)));\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($a * $x <= $n) {\n        my $r = $n - $a * $x;\n        if ($r % $b == 0) {\n            $y = $r / $b;\n            return ($x, $y);\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    while (1) {\n        my $nx = $b * $y;\n        my $ny = $a * $x + $n;\n        return ($x, $y) if $nx == $ny;\n        if ($nx > $ny) {\n            $y++;\n        } else {\n            $x++;\n        }\n    }\n}",
    "    return unless $a and $b and $n;\n    return unless $a > 0 and $b > 0;\n    return unless $n % gcd($a, $b) == 0;",
    "    for my $x (0 .. $n) {\n        for my $y (0 .. $n) {\n            return ($x, $y) if $a * $x + $b * $y == $n;\n        }\n    }\n    return;\n}",
    "    for my $x (0..$n) {\n        for my $y (0..$n) {\n            return ($x, $y) if $a * $x + $b * $y == $n;\n        }\n    }\n    return undef;\n}",
    "\n    for my $x (0 .. $n) {\n        for my $y (0 .. $n) {\n            if ($a * $x + $b * $y == $n) {\n                return ($x, $y);\n            }\n        }\n    }",
    "    if ($a < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    if ($n % gcd($a, $b) != 0) {\n        return undef;\n    }\n    my $x = 0;\n    my $y = $n / $b;\n    while ($a * $x + $b * $y != $n) {\n        if ($a * $x + $b * $y < $n) {\n            $x++;\n        } else {\n            $y--;\n        }\n    }\n    return ($x, $y);\n}",
    "    if ($a < $b) {\n        return find_solution($b, $a, $n);\n    }\n    if ($b == 0) {\n        return ($n / $a, 0);\n    }\n    my($x, $y) = find_solution($b, $a % $b, $n);\n    return ($y, $x - int($a / $b) * $y);\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (0, 1);\n    ($x, $y) = (1, -int($a / $b)) if $b > $a;\n    my $d = gcd($b, $a % $b);\n    return ($d * $x, $d * $y);\n}",
    "    if ($n % gcd($a, $b) == 0) {\n        my $x = $n / $a;\n        my $y = 0;\n        while ($x >= 0) {\n            if (($n - $a * $x) % $b == 0) {\n                $y = ($n - $a * $x) / $b;\n                return ($x, $y);\n            }\n            $x--;\n        }\n    }\n    return undef;\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (0, 1);\n    while ($a > 0) {\n        my $q = int($b / $a);\n        ($a, $b, $x, $y) = ($b % $a, $a, $y - $q * $x, $x);\n    }\n    return ($x * $n / $b, $y * $n / $b);\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my $x = $n * inverse($a, $b) % $b;\n    return ($x, ($n - $a * $x) / $b);\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        my $remainder = $n - $x * $a;\n        if ($remainder % $b == 0) {\n            $y = $remainder / $b;\n            return ($x, $y);\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    return unless $a and $b and $n;\n    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    return unless $n % $d == 0;\n    ($x, $y) = ext_gcd($a, $b);\n    $x *= $n / $d;\n    $y *= $n / $d;\n    return ($x, $y);\n}",
    "    for my $x (0..$n) {\n        for my $y (0..$n) {\n            return ($x, $y) if $a * $x + $b * $y == $n;\n        }\n    }\n    return;\n}",
    "    for my $x (0 .. $n) {\n        for my $y (0 .. $n) {\n            return ($x, $y) if $a * $x + $b * $y == $n;\n        }\n    }\n    return;\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($a * $x <= $n) {\n        my $r = $n - $a * $x;\n        if ($r % $b == 0) {\n            $y = $r / $b;\n            return ($x, $y);\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    if ($a < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    if ($n % gcd($a, $b) != 0) {\n        return;\n    }\n    my $x = 0;\n    my $y = $n / $b;\n    while ($a * $x + $b * $y != $n) {\n        $x++;\n        $y = ($n - $a * $x) / $b;\n    }\n    return ($x, $y);\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        if (($n - $x * $a) % $b == 0) {\n            $y = ($n - $x * $a) / $b;\n            return ($x, $y);\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    if ($a == 0) {\n        return ($n == 0) ? (0, 0) : undef;\n    }\n    my $x = $n / $a;\n    my $y = $n % $a;\n    if ($y == 0) {\n        return ($x, 0);\n    }\n    my $solution = find_solution($b, $a % $b, $y);\n    return undef unless defined $solution;\n    return ($solution->[1], $x - $a / $b * $solution->[1]);\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my $x = $n / $a;\n    my $y = $n / $b;\n    return ($x, $y);\n}",
    "    if ($a == 0) {\n        return (0, $n/$b) if $n % $b == 0;\n        return;\n    }\n    my($x, $y) = find_solution($b % $a, $a, $n);\n    return unless defined $x;\n    return ($y - ($b/$a)*$x, $x);\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 1;\n    my $y1 = 0;\n    my $x2 = 0;\n    my $y2 = 1;\n    my $q = int($a / $b);\n    my $r = $a % $b;\n    while ($r > 0) {\n        my $temp = $x2;\n        $x2 = $x1 - $q * $x2;\n        $x1 = $temp;\n        $temp = $y2;\n        $y2 = $y1 - $q * $y2;\n        $y1 = $temp;\n        $a = $b;\n        $b = $r;\n        $q = int($a / $b);\n        $r = $a % $b;\n    }\n    $x = $n / $d * $x2;\n    $y = $n / $d * $y2;\n    return ($x, $y);\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (0, 1);\n    ($x, $y) = (1, -int($a / $b)) if $b > $a;\n    my $d = gcd($b, $a % $b);\n    return ($d * $x, $d * $y);\n}",
    "    my($x, $y, $d);\n    $d = gcd($a, $b);\n    return unless $n % $d == 0;\n    ($x, $y) = extended_gcd($a, $b);\n    ($x, $y) = ( $x * $n / $d, $y * $n / $d );\n    return ($x, $y);\n}",
    "    if ($a < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    if ($n % gcd($a, $b) != 0) {\n        return;\n    }\n    my $x = 0;\n    my $y = $n / $b;\n    while ($a * $x + $b * $y != $n) {\n        $x += 1;\n        $y = ($n - $a * $x) / $b;\n    }\n    return ($x, $y);\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (0, 1);\n    ($x, $y) = ($y, $x - int($a / $b) * $y) while $b;\n    return ($x * $n / abs($a), $y * $n / abs($a));\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (0, 1);\n    ($x, $y) = ($y, $x - int($a / $b) * $y) while $b;\n    return ($x * $n / abs($a), $y * $n / abs($a));\n}",
    "    # your code here\n    my $x = 0;\n    my $y = 0;\n    while($x * $a <= $n) {\n        if(($n - $x * $a) % $b == 0) {\n            $y = ($n - $x * $a) / $b;\n            return ($x, $y);\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (1, 0);\n    while ($b) {\n        my $q = int($a / $b);\n        ($a, $b) = ($b, $a % $b);\n        ($x, $y) = ($y, $x - $q * $y);\n    }\n    return ($x * $n / $a, $y * $n / $a);\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    $a /= $d;\n    $b /= $d;\n    $n /= $d;\n    my $x1 = 0;\n    my $y1 = 1;\n    my $x2 = 1;\n    my $y2 = 0;\n    while ($b > 0) {\n        my $q = int($a / $b);\n        my $r = $a % $b;\n        $x = $x2 - $q * $x1;\n        $y = $y2 - $q * $y1;\n        $a = $b;\n        $b = $r;\n        $x2 = $x1;\n        $y2 = $y1;\n        $x1 = $x;\n        $y1 = $y;\n    }\n    return ($x2, $y2);\n}",
    "    for my $x (0 .. $n) {\n        for my $y (0 .. $n) {\n            return ($x, $y) if $a * $x + $b * $y == $n;\n        }\n    }\n    return;\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($a * $x <= $n) {\n        my $r = $n - $a * $x;\n        if ($r % $b == 0) {\n            $y = $r / $b;\n            return ($x, $y);\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    if ($a < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    if ($b == 0) {\n        return ($n / $a, 0);\n    }\n    my($x, $y) = find_solution($b, $a % $b, $n);\n    return ($y, $x - int($a / $b) * $y);\n}",
    "    return unless $a and $b and $n;\n    return unless $a > 0 and $b > 0;\n    return unless $n % gcd($a, $b) == 0;",
    "    for my $x (0 .. $n) {\n        for my $y (0 .. $n) {\n            if ($a * $x + $b * $y == $n) {\n                return ($x, $y);\n            }\n        }\n    }\n    return;\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($a * $x <= $n) {\n        my $r = $n - $a * $x;\n        if ($r % $b == 0) {\n            $y = $r / $b;\n            return ($x, $y);\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    my($x, $y) = (0, 0);\n    while ($a * $x <= $n) {\n        $y = ($n - $a * $x) / $b;\n        return ($x, $y) if $a * $x + $b * $y == $n;\n        $x++;\n    }\n    return;\n}",
    "    my($x, $y, $d);\n    $d = gcd($a, $b);\n    return unless $n % $d == 0;\n    ($x, $y) = extended_gcd($a, $b);\n    ($x, $y) = ( $x * $n / $d, $y * $n / $d );\n    return ($x, $y);\n}",
    "    for my $x (0 .. $n) {\n        for my $y (0 .. $n) {\n            return ($x, $y) if $a * $x + $b * $y == $n;\n        }\n    }\n    return;\n}",
    "    if ($a == 0) {\n        return (0, $n / $b) if $n % $b == 0;\n        return;\n    }\n    my $x = find_solution($b % $a, $a, $n);\n    return unless $x;\n    return ($x->[1] - int($b / $a) * $x->[0], $x->[0]);\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (0, 1);\n    ($x, $y) = (1, -$a / $b) if $b > $a;\n    my $d = gcd($b, $a % $b);\n    return ($d * $x, $d * $y);\n}",
    "    if ($a == 0) {\n        return (0, $n/$b) if $n % $b == 0;\n        return;\n    }\n    my $x = find_solution($b % $a, $a, $n);\n    return unless $x;\n    ($x->[0] - $b / $a * $x->[1], $x->[1]);\n}",
    "    return unless $a && $b;\n    my $x = 0;\n    my $y = $n / $b;\n    while ($a * $x + $b * $y != $n) {\n        $x++;\n        $y = ($n - $a * $x) / $b;\n        return if $y < 0;\n    }\n    return ($x, $y);\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        my $remainder = $n - $x * $a;\n        if ($remainder % $b == 0) {\n            $y = $remainder / $b;\n            return ($x, $y);\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    for my $x (0..$n) {\n        for my $y (0..$n) {\n            if ($a * $x + $b * $y == $n) {\n                return ($x, $y);\n            }\n        }\n    }\n    return undef;\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (0, 1);\n    ($x, $y) = (1, -int($a / $b)) if $b > $a;\n    my $d = gcd($b, $a % $b);\n    return ($d * $x, $d * $y);\n}",
    "    return unless $a and $b and $n;\n    my $x = 0;\n    my $y = 0;\n    while (1) {\n        my $x_new = $b * $y;\n        my $y_new = $a * $x + $n;\n        if ($x_new == $x and $y_new == $y) {\n            return;\n        }\n        $x = $x_new;\n        $y = $y_new;\n    }\n}",
    "    return unless $a and $b and $n;\n    my $x = 0;\n    my $y = 0;\n    while (1) {\n        my $x_candidate = $x + $b;\n        my $y_candidate = $y - $a;\n        if ($x_candidate * $a + $y_candidate * $b == $n) {\n            return ($x_candidate, $y_candidate);\n        }\n        $x = $x_candidate;\n        $y = $y_candidate;\n    }\n}",
    "    my($x, $y) = (0, 0);\n    my($u, $v) = (1, 0);\n    my($u1, $v1) = (0, 1);\n    my($q, $r);\n    while ($b != 0) {\n        ($q, $r) = ($a / $b, $a % $b);\n        ($x, $y) = ($u - $q * $x, $v - $q * $y);\n        ($a, $b) = ($b, $r);\n        ($u, $v) = ($u1, $v1);\n        ($u1, $v1) = ($x, $y);\n    }\n    if ($a == 0) {\n        return;\n    }\n    if ($n % $a != 0) {\n        return;\n    }\n    return ($u * ($n / $a), $v * ($n / $a));\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (0, 1);\n    ($x, $y) = (1, -int($a / $b)) if $b > $a;\n    my $d = gcd($b, $a % $b);\n    return ($d, $n / $d * $x, $n / $d * $y);\n}",
    "\n    for my $x (0..$n) {\n        for my $y (0..$n) {\n            return ($x, $y) if $a * $x + $b * $y == $n;\n        }\n    }",
    "    if ($a == 0) {\n        return (0, $n / $b) if $n % $b == 0;\n        return;\n    }",
    "    return unless $a and $b and $n;\n    return unless $a > 0 and $b > 0;\n    return unless $n % gcd($a, $b) == 0;",
    "    my($x, $y, $d);\n    $d = gcd($a, $b);\n    return unless $n % $d == 0;\n    ($x, $y) = extended_gcd($a, $b);\n    ($x, $y) = ( $x * $n / $d, $y * $n / $d );\n    return ($x, $y);\n}",
    "    if ($a < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    if ($n % gcd($a, $b) != 0) {\n        return undef;\n    }\n    my $x = 0;\n    my $y = $n / $b;\n    while ($a * $x + $b * $y != $n) {\n        if ($a * $x + $b * $y < $n) {\n            $x += 1;\n        } else {\n            $y -= 1;\n        }\n    }\n    return ($x, $y);\n}",
    "    if ($n % gcd($a, $b) != 0) {\n        return;\n    }",
    "    if ($a < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    if ($a % $b == 0) {\n        if ($n % $b == 0) {\n            return (0, $n / $b);\n        }\n        else {\n            return;\n        }\n    }\n    my $x = find_solution($b, $a % $b, $n);\n    if (defined $x) {\n        return ($x->[1], $x->[0] - int($a / $b) * $x->[1]);\n    }\n    else {\n        return;\n    }\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (0, 1);\n    ($x, $y) = ($y, $x - int($a / $b) * $y) while $b;\n    return ($x * $n / abs($a), $y * $n / abs($a));\n}",
    "    if ($n % gcd($a, $b) != 0) {\n        return;\n    }\n    my($x, $y) = (0, 1);\n    my($u, $v) = ($b, $a);\n    while ($v != 0) {\n        my $q = $u / $v;\n        ($u, $v) = ($v, $u - $q * $v);\n        ($x, $y) = ($y - $q * $x, $x);\n    }\n    return ($x * ($n / $u), $y * ($n / $u));\n}",
    "    return unless $a && $b;\n    return unless $n % gcd($a, $b) == 0;\n    my $x = $n / $a;\n    my $y = $n / $b;\n    my $d = gcd($x, $y);\n    return ($x / $d, $y / $d);\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (1, 0);\n    while ($b) {\n        my $q = int($a / $b);\n        ($a, $b, $x, $y) = ($b, $a % $b, $y, $x - $q * $y);\n    }\n    return ($x * $n / $a, $n / $a);\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my $x = $n / $a;\n    my $y = $n / $b;\n    return ($x, $y);\n}",
    "    return unless $a * $b > 0;\n    my $x = $n / $a;\n    my $y = ($n - $a * $x) / $b;\n    return ($x, $y) if $a * $x + $b * $y == $n;\n    return;\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($a * $x <= $n) {\n        my $r = $n - $a * $x;\n        if ($r % $b == 0) {\n            $y = $r / $b;\n            return ($x, $y);\n        }\n        $x++;\n    }\n    return;\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (0, $n / $b);\n    while($y >= 0) {\n        if($a * $x + $b * $y == $n) {\n            return ($x, $y);\n        }\n        $x++;\n        $y--;\n    }\n    return;\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        if (($n - $x * $a) % $b == 0) {\n            $y = ($n - $x * $a) / $b;\n            return ($x, $y);\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    if ($a < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    if ($n % gcd($a, $b) != 0) {\n        return;\n    }\n    my $x = 0;\n    my $y = $n / $b;\n    while ($a * $x + $b * $y != $n) {\n        if ($a * $x + $b * $y < $n) {\n            $x++;\n        } else {\n            $y--;\n        }\n    }\n    return ($x, $y);\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (0, 0);\n    my($u, $v) = (1, 0);\n    my($A, $B) = ($a, $b);\n    while ($A != 0) {\n        my $q = int($B / $A);\n        ($x, $u) = ($u, $x - $q * $u);\n        ($y, $v) = ($v, $y - $q * $v);\n        ($A, $B) = ($B % $A, $A);\n    }\n    return ($x * $n / $b, $y * $n / $b);\n}",
    "    for my $x (0..$n) {\n        for my $y (0..$n) {\n            if ($a * $x + $b * $y == $n) {\n                return ($x, $y);\n            }\n        }\n    }\n    return;\n}",
    "    my $x = 0;\n    my $y = 0;\n    while (1) {\n        if ($a * $x + $b * $y == $n) {\n            return ($x, $y);\n        }\n        $x++;\n        if ($a * $x + $b * $y > $n) {\n            $x = 0;\n            $y++;\n        }\n    }\n}",
    "    if ($n % gcd($a, $b)) {\n        return;\n    }\n    my $x = $n / $a;\n    my $y = $n / $b;\n    my $d = gcd($a, $b);\n    my $k = $n / $d;\n    my $u = $x % $d;\n    my $v = $y % $d;\n    my $r = $k - $u;\n    my $s = $k - $v;\n    return ($r, $s);\n}",
    "    my $x = 0;\n    my $y = 0;\n    while (1) {\n        my $r = $n - $a * $x;\n        if ($r % $b == 0) {\n            $y = $r / $b;\n            return ($x, $y);\n        }\n        $x++;\n    }\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (0, 1);\n    ($x, $y) = (1, -int($a / $b)) if $b > $a;\n    my $d = gcd($b, $a % $b);\n    return ($d, $n / $d * $x, $n / $d * $y);\n}",
    "    my($x, $y, $d);\n    $d = gcd($a, $b);\n    return undef unless $n % $d == 0;\n    ($x, $y) = extended_gcd($a, $b);\n    ($x, $y) = (int($x * $n / $d), int($y * $n / $d));\n    return ($x, $y);\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        if (($n - $x * $a) % $b == 0) {\n            $y = ($n - $x * $a) / $b;\n            return ($x, $y);\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (0, 1);\n    ($x, $y) = ($y, $x - int($a / $b) * $y) while $b;\n    return ($x * $n / abs($a), $y * $n / abs($a));\n}",
    "    if ($n % gcd($a, $b) != 0) {\n        return undef;\n    }\n    my($x, $y) = (0, 0);\n    my($u, $v) = (1, 0);\n    my($A, $B) = ($a, $b);\n    while ($A != 0) {\n        my($q, $r) = (int($B / $A), $B % $A);\n        my($m) = $x - $u * $q;\n        my($n) = $y - $v * $q;\n        ($x, $y, $u, $v, $A, $B) = ($u, $v, $m, $n, $r, $A);\n    }\n    my($k) = $n / $B;\n    return ($x * $k, $y * $k);\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my $x = $n / $a;\n    my $y = $n / $b;\n    my $d = gcd($a, $b);\n    my $k = $n / $d;\n    my $x0 = $x * $d / $a;\n    my $y0 = $y * $d / $b;\n    my $x1 = $x0 + $k / $a;\n    my $y1 = $y0 - $k / $b;\n    return ($x1, $y1);\n}",
    "    my($x, $y) = (0, 0);\n    while ($a * $x <= $n) {\n        $y = ($n - $a * $x) / $b;\n        return ($x, $y) if $y == int($y);\n        $x++;\n    }\n    return;\n}",
    "    my($x, $y) = (0, 0);\n    while ($a * $x <= $n) {\n        my $r = $n - $a * $x;\n        if ($r % $b == 0) {\n            $y = $r / $b;\n            return ($x, $y);\n        }\n        $x++;\n    }\n    return;\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my $x = mult_inv($a, $b);\n    my $y = mult_inv($b, $a);\n    return ($n * $x * $b, $n * $y * $a);\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (0, 1);\n    ($x, $y) = (1, -int($a / $b)) if $b > $a;\n    my $d = gcd($b, $a % $b);\n    return ($d * $x, $d * $y);\n}",
    "    if ($n % gcd($a, $b) != 0) {\n        return;\n    }\n    my $x = mult_inv($a, $b);\n    my $y = mult_inv($b, $a);\n    my $d = gcd($a, $b);\n    return ($x * $n / $d, $y * $n / $d);\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (0, 1);\n    ($x, $y) = ($y, $x - int($a / $b) * $y) while $b;\n    return ($x * $n / abs($a), $y * $n / abs($a));\n}",
    "    if ($a < $b) {\n        return find_solution($b, $a, $n);\n    }\n    if ($b == 0) {\n        return ($n / $a, 0);\n    }\n    my($x, $y) = find_solution($b, $a % $b, $n);\n    return ($y, $x - int($a / $b) * $y);\n}",
    "    for my $x (0 .. $n) {\n        for my $y (0 .. $n) {\n            return ($x, $y) if $a * $x + $b * $y == $n;\n        }\n    }\n    return;\n}",
    "    return unless $a and $b and $n;\n    return unless $a > 0 and $b > 0 and $n > 0;\n    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d) {\n        return;\n    }\n    ($a, $b, $n) = ($a/$d, $b/$d, $n/$d);\n    my $x1 = 0;\n    my $y1 = 1;\n    while ($a % $b) {\n        my $m = int($a / $b);\n        my $x2 = $x1;\n        my $y2 = $y1;\n        $x1 = $x - $m * $x2;\n        $y1 = $y - $m * $y2;\n        $x = $x2;\n        $y = $y2;\n        ($a, $b) = ($b, $a % $b);\n    }\n    $x = $x * $n;\n    $y = $y * $n;\n    return ($x, $y);\n}",
    "    for my $x (0 .. $n) {\n        for my $y (0 .. $n) {\n            return ($x, $y) if $a * $x + $b * $y == $n;\n        }\n    }\n    return;\n}",
    "    my($x, $y) = (0, 0);\n    while ($a * $x <= $n) {\n        $y = ($n - $a * $x) / $b;\n        return ($x, $y) if $a * $x + $b * $y == $n;\n        $x++;\n    }\n    return undef;\n}",
    "    my($x, $y);\n    for($x = 0; $x <= $n; $x++) {\n        $y = ($n - $a * $x) / $b;\n        return ($x, $y) if $y == int($y);\n    }\n    return;\n}",
    "    if ($a < $b) {\n        return find_solution($b, $a, $n);\n    }\n    if ($b == 0) {\n        return ($n / $a, 0);\n    }\n    my($x, $y) = find_solution($b, $a % $b, $n);\n    return ($y, $x - int($a / $b) * $y);\n}",
    "    for my $x (0 .. $n) {\n        for my $y (0 .. $n) {\n            if ($a * $x + $b * $y == $n) {\n                return ($x, $y);\n            }\n        }\n    }\n    return;\n}",
    "    my($x, $y) = (0, 0);\n    while ($a * $x <= $n) {\n        $y = ($n - $a * $x) / $b;\n        return ($x, $y) if $a * $x + $b * $y == $n;\n        $x++;\n    }\n    return;\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $x2 = 1;\n    my $y2 = 0;\n    my $q = int($a / $b);\n    my $r = $a % $b;\n    while ($r > 0) {\n        my $temp = $x2;\n        $x2 = $x1 - $q * $x2;\n        $x1 = $temp;\n        $temp = $y2;\n        $y2 = $y1 - $q * $y2;\n        $y1 = $temp;\n        $a = $b;\n        $b = $r;\n        $q = int($a / $b);\n        $r = $a % $b;\n    }\n    $x = $x2 * ($n / $d);\n    $y = $y2 * ($n / $d);\n    return ($x, $y);\n}",
    "    for my $x (0 .. $n) {\n        for my $y (0 .. $n) {\n            return ($x, $y) if $a * $x + $b * $y == $n;\n        }\n    }\n    return;\n}",
    "    my($x, $y);\n    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return ($x, $y);\n            }\n        }\n    }\n    return undef;\n}",
    "    my($x, $y, $d);",
    "    if ($a < $b) {\n        return find_solution($b, $a, $n);\n    }\n    if ($n == 0) {\n        return (0, 0);\n    }\n    if ($a == 0) {\n        return undef;\n    }\n    my($x, $y) = find_solution($b, $a % $b, $n % $b);\n    if (!defined($x)) {\n        return undef;\n    }\n    return ($y, $x - int($a / $b) * $y);\n}",
    "    if ($a < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    if ($n % gcd($a, $b) != 0) {\n        return;\n    }\n    my $x = 0;\n    my $y = $n / $b;\n    while ($a * $x + $b * $y != $n) {\n        if ($a * $x + $b * $y < $n) {\n            $x++;\n        } else {\n            $y--;\n        }\n    }\n    return ($x, $y);\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (0, 1);\n    ($x, $y) = ($y, $x - int($a / $b) * $y) while $b;\n    return ($x * $n / abs($a), $y * $n / abs($a));\n}",
    "    my($x, $y) = (0, 0);\n    while ($a * $x <= $n) {\n        $y = ($n - $a * $x) / $b;\n        return ($x, $y) if $a * $x + $b * $y == $n;\n        $x++;\n    }\n    return;\n}",
    "    return if $a < 0 or $b < 0;\n    return if $n < 0;\n    return if $n > $a * $b;\n    return if $n % gcd($a, $b) != 0;\n    my $x = 0;\n    my $y = $n / $a;\n    while ($x * $a + $y * $b != $n) {\n        $x++;\n        $y = ($n - $x * $a) / $b;\n    }\n    return ($x, $y);\n}",
    "    return unless $a && $b;\n    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (0, 1);\n    while ($a > 0) {\n        my $q = int($b / $a);\n        ($a, $b, $x, $y) = ($b % $a, $a, $y - $q * $x, $x);\n    }\n    return ($x * ($n / $b), $y * ($n / $b));\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $x2 = 1;\n    my $y2 = 0;\n    my $q = $a / $b;\n    my $r = $a % $b;\n    while ($r > 0) {\n        my $temp = $x2;\n        $x2 = $x1 - $q * $x2;\n        $x1 = $temp;\n        $temp = $y2;\n        $y2 = $y1 - $q * $y2;\n        $y1 = $temp;\n        $a = $b;\n        $b = $r;\n        $q = $a / $b;\n        $r = $a % $b;\n    }\n    $x = $n / $b * $x1;\n    $y = $n / $b * $y1;\n    return ($x, $y);\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return;\n    }\n    my $x1 = 1;\n    my $y1 = 0;\n    my $x2 = 0;\n    my $y2 = 1;\n    while ($b > 0) {\n        my $q = int($a / $b);\n        my $r = $a % $b;\n        $x = $x2 - $q * $x1;\n        $y = $y2 - $q * $y1;\n        $a = $b;\n        $b = $r;\n        $x2 = $x1;\n        $y2 = $y1;\n        $x1 = $x;\n        $y1 = $y;\n    }\n    return ($x2, $y2);\n}",
    "    return unless $a && $b;\n    return (0, $n/$b) if $a == 0;\n    return (1, $n/$a) if $b == 0;\n    my($x, $y) = find_solution($b, $a % $b, $n);\n    return unless $x;\n    return ($y, $x - int($a/$b) * $y);\n}",
    "    for my $x (0 .. $n) {\n        for my $y (0 .. $n) {\n            return ($x, $y) if $a * $x + $b * $y == $n;\n        }\n    }\n    return;\n}",
    "    return if $n % gcd($a, $b);\n    my $x = $n / $a;\n    my $y = $n / $b;\n    my $d = gcd($a, $b);\n    my $s = $a * $y + $b * $x;\n    my $t = $a * $y - $b * $x;\n    my $u = $a * $y + $b * $x;\n    my $v = $a * $y - $b * $x;\n    my $m = $s / $d;\n    my $n = $t / $d;\n    my $p = $u / $d;\n    my $q = $v / $d;\n    return ($m, $n), ($p, $q);\n}",
    "    if ($a < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    if ($n % gcd($a, $b) != 0) {\n        return undef;\n    }\n    my $x = 0;\n    my $y = $n / $b;\n    while ($a * $x + $b * $y != $n) {\n        if ($a * $x + $b * $y < $n) {\n            $x++;\n        } else {\n            $y--;\n        }\n    }\n    return ($x, $y);\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (1, 0);\n    while ($b) {\n        my $q = int($a / $b);\n        ($a, $b, $x, $y) = ($b, $a % $b, $y, $x - $q * $y);\n    }\n    return ($x * $n / $a, 0);\n}",
    "    my($x, $y) = (0, 0);\n    while ($a * $x <= $n) {\n        my $y = ($n - $a * $x) / $b;\n        return ($x, $y) if $y == int($y);\n        $x++;\n    }\n    return;\n}",
    "    if ($a < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    if ($n % gcd($a, $b) != 0) {\n        return;\n    }\n    my $x = 0;\n    my $y = $n / $b;\n    while ($a * $x + $b * $y != $n) {\n        if ($a * $x + $b * $y < $n) {\n            $x++;\n        } else {\n            $y--;\n        }\n    }\n    return ($x, $y);\n}",
    "    return unless $a && $b;\n    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (0, 1);\n    while ($a > 0) {\n        my $q = int($b / $a);\n        ($a, $b, $x, $y) = ($b % $a, $a, $y - $q * $x, $x);\n    }\n    return ($x * ($n / $b), $y * ($n / $b));\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    ($x, $y) = find_solution($b % $a, $a, $n);\n    $x -= int($b / $a) * $y;\n    return ($x, $y);\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (0, 1);\n    ($x, $y) = ($y, $x - int($a / $b) * $y) while $b;\n    return ($x * $n / abs($a), $y * $n / abs($a));\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    ($x, $y) = find_solution($b % $a, $a, $n);\n    $x = $y - int($b / $a) * $x;\n    $y = $x;\n    return ($x, $y);\n}",
    "    for my $x (0 .. $n) {\n        for my $y (0 .. $n) {\n            return ($x, $y) if $a * $x + $b * $y == $n;\n        }\n    }\n    return;\n}",
    "    return unless $a and $b and $n;\n    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    return unless $n % $d == 0;\n    my $x1 = 1;\n    my $y1 = 0;\n    my $x2 = 0;\n    my $y2 = 1;\n    my $q = $a / $b;\n    my $r = $a % $b;\n    while ($r > 0) {\n        my $temp = $x2;\n        $x2 = $x1 - $q * $x2;\n        $x1 = $temp;\n        $temp = $y2;\n        $y2 = $y1 - $q * $y2;\n        $y1 = $temp;\n        $a = $b;\n        $b = $r;\n        $q = $a / $b;\n        $r = $a % $b;\n    }\n    $x = $x2 * ($n / $d);\n    $y = $y2 * ($n / $d);\n    return ($x, $y);\n}",
    "    for my $x (0..$n) {\n        for my $y (0..$n) {\n            return ($x, $y) if $a * $x + $b * $y == $n;\n        }\n    }\n    return;\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d) {\n        return undef;\n    }\n    ($x, $y) = find_solution($b % $a, $a, $n);\n    return ($y - int($b / $a) * $x, $x);\n}",
    "    my($x, $y);\n    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            if ($a * $x + $b * $y == $n) {\n                return ($x, $y);\n            }\n        }\n    }\n    return undef;\n}",
    "    if ($a < $b) {\n        return find_solution($b, $a, $n);\n    }\n    if ($n == 0) {\n        return (0, 0);\n    }\n    if ($n < 0) {\n        return undef;\n    }\n    my($x, $y) = find_solution($a, $b, $n - $a);\n    if (!defined($x)) {\n        return undef;\n    }\n    return ($x + 1, $y);\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (1, 0);\n    while ($b) {\n        my $q = int($a / $b);\n        ($a, $b, $x, $y) = ($b, $a % $b, $y, $x - $q * $y);\n    }\n    return ($x * $n / $a, $y * $n / $a);\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (0, 1);\n    ($x, $y) = ($y, $x - int($a / $b) * $y) while $b;\n    return ($x * $n / abs($a), $y * $n / abs($a));\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d) {\n        return;\n    }\n    ($x, $y) = find_solution($b/$d, $a/$d, $n/$d);\n    return ($y, $x - $y * $a/$b);\n}",
    "    if ($a < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    if ($n % gcd($a, $b) != 0) {\n        return;\n    }\n    my($x, $y) = (0, 0);\n    while ($a * $x + $b * $y != $n) {\n        if ($a * $x + $b * $y < $n) {\n            $x++;\n        } else {\n            $y--;\n        }\n    }\n    return ($x, $y);\n}",
    "    for my $x (0 .. $n) {\n        for my $y (0 .. $n) {\n            return ($x, $y) if $a * $x + $b * $y == $n;\n        }\n    }\n    return;\n}",
    "    if ($a < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    if ($n % gcd($a, $b) != 0) {\n        return;\n    }\n    my $x = 0;\n    my $y = $n / $b;\n    while ($a * $x + $b * $y != $n) {\n        if ($a * $x + $b * $y < $n) {\n            $x++;\n        } else {\n            $y--;\n        }\n    }\n    return ($x, $y);\n}",
    "    if ($a < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    if ($n % gcd($a, $b) != 0) {\n        return;\n    }\n    my $x = 0;\n    my $y = $n / $b;\n    while ($a * $x + $b * $y != $n) {\n        if ($a * $x + $b * $y < $n) {\n            $x++;\n        } else {\n            $y--;\n        }\n    }\n    return ($x, $y);\n}",
    "    return unless $a and $b and $n;\n    my $x = 0;\n    my $y = 0;\n    while (1) {\n        my $r = $n - $a * $x;\n        return if $r < 0;\n        if ($r % $b == 0) {\n            $y = $r / $b;\n            return ($x, $y);\n        }\n        $x++;\n    }\n}",
    "    my $x = 0;\n    my $y = 0;\n    while($x * $a <= $n) {\n        my $rem = $n - $x * $a;\n        if($rem % $b == 0) {\n            $y = $rem / $b;\n            return ($x, $y);\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        my $remainder = $n - $x * $a;\n        if ($remainder % $b == 0) {\n            $y = $remainder / $b;\n            return ($x, $y);\n        }\n        $x++;\n    }\n    return;\n}",
    "    return unless $a and $b and $n;\n    return unless $a > 0 and $b > 0;\n    my $x = 0;\n    my $y = $n / $b;\n    while ($a * $x + $b * $y != $n) {\n        $x++;\n        $y = ($n - $a * $x) / $b;\n    }\n    return ($x, $y);\n}",
    "    for my $x (0..$n) {\n        for my $y (0..$n) {\n            if ($a * $x + $b * $y == $n) {\n                return ($x, $y);\n            }\n        }\n    }\n    return;\n}",
    "    return unless $a and $b and $n;\n    my $x = 0;\n    my $y = 0;\n    while ($a * $x <= $n) {\n        my $r = $n - $a * $x;\n        if ($r % $b == 0) {\n            $y = $r / $b;\n            return ($x, $y);\n        }\n        $x++;\n    }\n    return;\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (0, $n / $b);\n    ($x, $y) = (1, ($n - $a) / $b) while $a * $x + $b * $y != $n;\n    return ($x, $y);\n}",
    "    return unless $a and $b and $n;\n    my $x = 0;\n    my $y = 0;\n    while (1) {\n        my $x_new = $x + $b;\n        my $y_new = $y - $a;\n        if ($x_new >= 0 and $x_new % $a == 0 and $y_new >= 0 and $y_new % $b == 0) {\n            return ($x_new, $y_new);\n        }\n        $x = $x_new;\n        $y = $y_new;\n    }\n}",
    "    if ($a == 0) {\n        return (0, $n/$b) if $n % $b == 0;\n        return;\n    }\n    my($x, $y) = find_solution($b % $a, $a, $n);\n    return unless defined $x;\n    return ($y - ($b/$a)*$x, $x);\n}",
    "    if ($a < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    if ($n % gcd($a, $b) != 0) {\n        return;\n    }\n    my $x = 0;\n    my $y = $n / $b;\n    while ($a * $x + $b * $y != $n) {\n        if ($a * $x + $b * $y < $n) {\n            $x++;\n        } else {\n            $y--;\n        }\n    }\n    return ($x, $y);\n}",
    "    return unless $a && $b;\n    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (0, 1);\n    while ($a % $b) {\n        my $q = int($a / $b);\n        my $r = $a % $b;\n        $x -= $q * $y;\n        ($a, $b, $x, $y) = ($b, $r, $y, $x);\n    }\n    return ($n / $b) * $x, ($n / $b) * $y;\n}",
    "    for my $x (0 .. $n) {\n        for my $y (0 .. $n) {\n            return ($x, $y) if $a * $x + $b * $y == $n;\n        }\n    }\n    return;\n}",
    "\n    # Find the greatest common divisor of a and b.\n    my $x = gcd($a, $b);",
    "    if ($a < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    if ($b == 0) {\n        return $n == 0 ? (0, 0) : undef;\n    }\n    my $x = $n / $a;\n    my $y = ($n - $x * $a) / $b;\n    if ($n == $a * $x + $b * $y) {\n        return ($x, $y);\n    }\n    return undef;\n}",
    "    if ($a < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    if ($n % $b == 0) {\n        return ($n / $b, 0);\n    }\n    my $x = 0;\n    my $y = 1;\n    my $r = $b;\n    my $s = $a;\n    my $t = $b;\n    while ($r != 0) {\n        my $q = int($s / $r);\n        ($x, $y, $r, $s, $t) = ($y, $x - $q * $y, $s - $q * $r, $r, $t - $q * ($s - $r));\n    }\n    if ($n % $t != 0) {\n        return undef;\n    }\n    return ($x * $n / $t, $y * $n / $t);\n}",
    "    for my $x (0..$n) {\n        for my $y (0..$n) {\n            if ($a * $x + $b * $y == $n) {\n                return ($x, $y);\n            }\n        }\n    }\n    return;\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (0, $n / $b);\n    ($x, $y) = (1, ($n - $a) / $b) while $a * $x + $b * $y != $n;\n    return ($x, $y);\n}",
    "    if ($a < $b) {\n        return find_solution($b, $a, $n);\n    }\n    if ($b == 0) {\n        return ($n / $a, 0);\n    }\n    my($x, $y) = find_solution($b, $a % $b, $n);\n    return ($y, $x - int($a / $b) * $y);\n}",
    "    for my $x (0 .. $n) {\n        for my $y (0 .. $n) {\n            return ($x, $y) if $a * $x + $b * $y == $n;\n        }\n    }\n    return;\n}",
    "    if ($a == 0) {\n        return ($n == 0) ? (0, 0) : undef;\n    }\n    my $x = $n / $a;\n    my $y = ($n - $a * $x) / $b;\n    return ($x, $y);\n}",
    "    return unless $a && $b;\n    return unless $n % gcd($a, $b) == 0;\n    my $x = $n / $a;\n    my $y = $n / $b;\n    return ($x, $y);\n}",
    "    if ($a < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    if ($n % gcd($a, $b) != 0) {\n        return undef;\n    }\n    my $x = 0;\n    my $y = $n / $b;\n    while ($a * $x + $b * $y != $n) {\n        if ($a * $x + $b * $y < $n) {\n            $x += 1;\n        } else {\n            $y -= 1;\n        }\n    }\n    return ($x, $y);\n}",
    "    for my $x (0 .. $n) {\n        for my $y (0 .. $n) {\n            if ($a * $x + $b * $y == $n) {\n                return ($x, $y);\n            }\n        }\n    }\n    return undef;\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (0, $n / $b);\n    ($x, $y) = (1, ($n - $a) / $b) while $a * $x + $b * $y != $n;\n    return ($x, $y);\n}",
    "    if ($a < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    if ($b == 0) {\n        return ($n / $a, 0);\n    }\n    my($x, $y) = find_solution($b, $a % $b, $n);\n    return ($y, $x - int($a / $b) * $y);\n}",
    "    return unless $a and $b and $n;\n    my $x = 0;\n    my $y = 0;\n    while ($a * $x <= $n) {\n        my $r = $n - $a * $x;\n        if ($r % $b == 0) {\n            $y = $r / $b;\n            return ($x, $y);\n        }\n        $x++;\n    }\n    return;\n}",
    "    for my $x (0 .. $n) {\n        for my $y (0 .. $n) {\n            if ($a * $x + $b * $y == $n) {\n                return ($x, $y);\n            }\n        }\n    }\n    return;\n}",
    "    my($x, $y) = (0, 0);\n    while($a * $x <= $n) {\n        $y = ($n - $a * $x) / $b;\n        return ($x, $y) if $b * $y == $n - $a * $x;\n        $x++;\n    }\n    return;\n}",
    "    return unless $a and $b and $n;\n    if ($a < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    my $x = $n / $a;\n    my $y = ($n - $x * $a) / $b;\n    return unless $y == int($y);\n    return ($x, $y);\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (0, 1);\n    ($x, $y) = ($y, $x - int($a / $b) * $y) while $b;\n    return ($x * $n / abs($a), $y * $n / abs($a));\n}",
    "    my($x, $y);\n    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - $a * $x) / $b;\n        return ($x, $y) if $y >= 0 && $y == int($y);\n    }\n    return;\n}",
    "    return unless $a and $b and $n;\n    for my $x (0 .. $n) {\n        return ($x, ($n - $a * $x) / $b) if $a * $x + $b * (($n - $a * $x) / $b) == $n;\n    }\n    return;\n}",
    "    if ($a < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    if ($n % $b == 0) {\n        return (0, $n / $b);\n    }\n    my $x = 1;\n    while ($a * $x < $n) {\n        $x++;\n    }\n    $x--;\n    my $y = ($n - $a * $x) / $b;\n    if ($a * $x + $b * $y == $n) {\n        return ($x, $y);\n    }\n    return;\n}",
    "    return unless $a && $b;\n    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (0, 0);\n    while(1) {\n        last if $a * $x + $b * $y == $n;\n        if($a * $x + $b * $y < $n) {\n            $x++;\n        } else {\n            $y++;\n        }\n    }\n    return ($x, $y);\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d) {\n        return;\n    }\n    ($x, $y) = find_solution($b % $a, $a, $n);\n    return ($y - ($b / $a) * $x, $x);\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($a * $x <= $n) {\n        my $r = $n - $a * $x;\n        if ($r % $b == 0) {\n            $y = $r / $b;\n            return ($x, $y);\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    while (1) {\n        my $x_candidate = $x + $b;\n        my $y_candidate = $y - $a;\n        if ($x_candidate * $a + $y_candidate * $b == $n) {\n            return ($x_candidate, $y_candidate);\n        }\n        $x = $x_candidate;\n        $y = $y_candidate;\n    }\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        if (($n - $x * $a) % $b == 0) {\n            $y = ($n - $x * $a) / $b;\n            return ($x, $y);\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (0, 1);\n    ($x, $y) = (1, -int($a / $b)) if $b > $a;\n    my $d = gcd($b, $a % $b);\n    return ($d, $n / $d * $x, $n / $d * $y);\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my $x = $n / $a;\n    my $y = $n / $b;\n    my $d = gcd($a, $b);\n    my $x0 = $x * $a / $d;\n    my $y0 = $y * $b / $d;\n    my $k = int(($n - $x0) / $b);\n    return ($x0 + $k * $b / $d, $y0 - $k * $a / $d);\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($a * $x <= $n) {\n        my $remainder = $n - $a * $x;\n        if ($remainder % $b == 0) {\n            $y = $remainder / $b;\n            return ($x, $y);\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    my($x, $y);\n    for ($x = 0; $x <= $n; $x++) {\n        $y = ($n - $a * $x) / $b;\n        return ($x, $y) if $y == int($y);\n    }\n    return;\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my $x = $n / $a;\n    my $y = $n / $b;\n    my $d = gcd($a, $b);\n    my $u = $a / $d;\n    my $v = $b / $d;\n    my $k = $x / $v;\n    my $l = $y / $u;\n    my $m = $k > $l ? $l : $k;\n    return ($x - $m * $v, $y - $m * $u);\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my $x = $n / $a;\n    my $y = $n / $b;\n    return ($x, $y);\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d) {\n        return undef;\n    }\n    ($a, $b, $x, $y) = extended_gcd($a, $b);\n    $x *= $n / $d;\n    $y *= $n / $d;\n    return ($x, $y);\n}",
    "    if ($a < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    if ($n % gcd($a, $b) != 0) {\n        return;\n    }\n    my $x = 0;\n    my $y = $n / $b;\n    while ($a * $x + $b * $y != $n) {\n        if ($a * $x + $b * $y < $n) {\n            $x++;\n        } else {\n            $y--;\n        }\n    }\n    return ($x, $y);\n}",
    "    for my $x (0 .. $n) {\n        for my $y (0 .. $n) {\n            if ($a * $x + $b * $y == $n) {\n                return ($x, $y);\n            }\n        }\n    }\n    return;\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 1;\n    my $y1 = 0;\n    my $x2 = 0;\n    my $y2 = 1;\n    my $q = int($a / $b);\n    my $r = $a % $b;\n    while ($r > 0) {\n        my $temp = $x2;\n        $x2 = $x1 - $q * $x2;\n        $x1 = $temp;\n        $temp = $y2;\n        $y2 = $y1 - $q * $y2;\n        $y1 = $temp;\n        $a = $b;\n        $b = $r;\n        $q = int($a / $b);\n        $r = $a % $b;\n    }\n    $x = $x2 * ($n / $d);\n    $y = $y2 * ($n / $d);\n    return ($x, $y);\n}",
    "    return unless $a and $b and $n;\n    return unless $a > 0 and $b > 0;\n    return unless $n % gcd($a, $b) == 0;",
    "    my($x, $y) = (0, 0);\n    while ($a * $x <= $n) {\n        my $r = $n - $a * $x;\n        if ($r % $b == 0) {\n            $y = $r / $b;\n            return ($x, $y);\n        }\n        $x++;\n    }\n    return;\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($a * $x <= $n) {\n        my $remainder = $n - $a * $x;\n        if ($remainder % $b == 0) {\n            $y = $remainder / $b;\n            return ($x, $y);\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    for my $x (0..$n) {\n        for my $y (0..$n) {\n            return ($x, $y) if $a * $x + $b * $y == $n;\n        }\n    }\n    return;\n}",
    "    if ($a == 0) {\n        return (0, $n / $b) if $n % $b == 0;\n        return;\n    }\n    my $x = find_solution($b % $a, $a, $n % $a);\n    return unless $x;\n    ($x->[0] - $b / $a * $x->[1], $x->[1]);\n}",
    "    my($x, $y) = (0, 0);\n    while ($a * $x <= $n) {\n        my $remainder = $n - $a * $x;\n        if ($remainder % $b == 0) {\n            $y = $remainder / $b;\n            return ($x, $y);\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    for my $x (0..$n) {\n        for my $y (0..$n) {\n            return ($x, $y) if $a * $x + $b * $y == $n;\n        }\n    }\n    return;\n}",
    "    if ($a < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    if ($n % gcd($a, $b) != 0) {\n        return;\n    }\n    my $x = $n / $a;\n    my $y = 0;\n    while ($a * $x + $b * $y != $n) {\n        $x--;\n        $y++;\n    }\n    return ($x, $y);\n}",
    "    if ($a < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    if ($n % gcd($a, $b) != 0) {\n        return undef;\n    }\n    my $x = 0;\n    my $y = $n / $b;\n    while ($a * $x + $b * $y != $n) {\n        if ($a * $x + $b * $y < $n) {\n            $x += 1;\n        } else {\n            $y -= 1;\n        }\n    }\n    return ($x, $y);\n}",
    "    for my $x (0..$n) {\n        for my $y (0..$n) {\n            return ($x, $y) if $a * $x + $b * $y == $n;\n        }\n    }\n    return;\n}",
    "    my($x, $y) = (0, 0);\n    while ($x * $a <= $n) {\n        if (($n - $x * $a) % $b == 0) {\n            $y = ($n - $x * $a) / $b;\n            return ($x, $y);\n        }\n        $x++;\n    }\n    return;\n}",
    "    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (1, 0);\n    while ($b) {\n        my $q = int($a / $b);\n        ($a, $b, $x, $y) = ($b, $a % $b, $y, $x - $q * $y);\n    }\n    return ($x * $n / $a, $y * $n / $a);\n}",
    "    if ($a == 0) {\n        return $n == $b ? (0, $n) : undef;\n    }\n    my $x = $n % $a;\n    my $y = ($n - $a * $x) / $b;\n    return ($x, $y);\n}",
    "    if ($n % gcd($a, $b) != 0) {\n        return undef;\n    }\n    my $x = $n / $a;\n    my $y = 0;\n    while ($x >= 0) {\n        if ($n - $a * $x == $b * $y) {\n            return ($x, $y);\n        }\n        $x--;\n        $y++;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        if (($n - $x * $a) % $b == 0) {\n            $y = ($n - $x * $a) / $b;\n            return ($x, $y);\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    return unless $a && $b;\n    my $x = 0;\n    my $y = 0;\n    while ($a * $x <= $n) {\n        my $r = $n - $a * $x;\n        if ($r % $b == 0) {\n            $y = $r / $b;\n            return ($x, $y);\n        }\n        $x++;\n    }\n    return;\n}",
    "    for my $x (0 .. $n) {\n        for my $y (0 .. $n) {\n            return ($x, $y) if $a * $x + $b * $y == $n;\n        }\n    }\n    return;\n}",
    "    return unless $a and $b;\n    return unless $n % gcd($a, $b) == 0;\n    my($x, $y) = (0, 1);\n    my($u, $v) = ($b, $a);\n    my $q;\n    while ($v) {\n        $q = int($u / $v);\n        ($x, $y) = ($y - $q * $x, $x);\n        ($u, $v) = ($v, $u - $q * $v);\n    }\n    return ($n * $x / $u, $n * $y / $u);\n}"
  ]
}
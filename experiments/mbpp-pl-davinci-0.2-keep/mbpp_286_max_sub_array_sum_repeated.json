{
  "name": "mbpp_286_max_sub_array_sum_repeated",
  "language": "pl",
  "prompt": "# Write a function to find the largest sum of a contiguous array in the modified array which is formed by repeating the given array k times.\nsub max_sub_array_sum_repeated {\n    my($a, $n, $k) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_286_max_sub_array_sum_repeated.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&max_sub_array_sum_repeated;\n        if(eq_deeply($candidate->([10, 20, -30, -1], 4, 3),30)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-1, 10, 20], 3, 2),59)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-1, -2, -3], 3, 3),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $max_sum = 0;\n    my $curr_sum = 0;\n    my $max_val = 0;\n    my $min_val = 0;\n    my $i = 0;\n    my $j = 0;\n    my $size = scalar @$a;\n    for (my $i = 0; $i < $size; $i++) {\n        $curr_sum += $a->[$i];\n        if ($curr_sum > $max_sum) {\n            $max_sum = $curr_sum;\n        }\n        if ($curr_sum < 0) {\n            $curr_sum = 0;\n        }\n        if ($a->[$i] > $max_val) {\n            $max_val = $a->[$i];\n        }\n        if ($a->[$i] < $min_val) {\n            $min_val = $a->[$i];\n        }\n    }\n    if ($max_val < 0) {\n        return $max_val;\n    }\n    if ($max_sum == 0) {\n        return $max_val;\n    }\n    my $sum = 0;\n    for (my $i = 0; $i < $size; $i++) {\n        $sum += $a->[$i];\n    }\n    my $suffix_sum = 0;\n    my $prefix_sum = 0;\n    for (my $i = 0; $i < $size; $i++) {\n        $suffix_sum += $a->[$i];\n        $prefix_sum += $a->[$size - $i - 1];\n        $curr_sum = $suffix_sum + ($prefix_sum - $a->[$size - $i - 1]) * ($k - 2);\n        if ($curr_sum > $max_sum) {\n            $max_sum = $curr_sum;\n        }\n    }\n    return $max_sum;\n}",
    "    my $max_sum = 0;\n    my $curr_sum = 0;\n    my $max_ending_here = 0;\n    my $max_so_far = 0;\n    my $start = 0;\n    my $end = 0;\n    my $s = 0;\n    for (my $i = 0; $i < $n * $k; $i++) {\n        $max_ending_here = $max_ending_here + $a->[$i % $n];\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n            $start = $s;\n            $end = $i;\n        }\n        if ($max_ending_here < 0) {\n            $max_ending_here = 0;\n            $s = $i + 1;\n        }\n    }\n    for (my $i = $start; $i <= $end; $i++) {\n        $curr_sum = $curr_sum + $a->[$i % $n];\n    }\n    $max_sum = $curr_sum;\n    return $max_sum;\n}",
    "    my $max_sum = 0;\n    my $curr_sum = 0;\n    my $max_val = 0;\n    my $curr_val = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        $curr_sum += $a->[$i];\n        $max_sum += $a->[$i];\n        $curr_val += $a->[$i];\n        $max_val = $curr_val if $curr_val > $max_val;\n        if ($curr_sum < 0) {\n            $curr_sum = 0;\n        }\n    }\n    if ($k == 1) {\n        return $max_val;\n    }\n    my $suffix_sum = 0;\n    my $prefix_sum = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        $suffix_sum += $a->[$i];\n        $prefix_sum += $a->[$n - $i - 1];\n        $max_sum = max($max_sum, $suffix_sum);\n        $max_sum = max($max_sum, $prefix_sum);\n        $max_sum = max($max_sum, $suffix_sum + $prefix_sum);\n    }\n    return max($max_sum, $max_val * $k);\n}",
    "    my $max_sum = 0;\n    my $curr_sum = 0;\n    my $max_ending_here = 0;\n    my $max_so_far = 0;\n    my $i = 0;\n    my $j = 0;\n    my $start = 0;\n    my $end = 0;\n    my $s = 0;\n    my $max_start = 0;\n    my $max_end = 0;\n    my $max_start_index = 0;\n    my $max_end_index = 0;\n    my $max_start_index_so_far = 0;\n    my $max_end_index_so_far = 0;\n    my $max_start_so_far = 0;\n    my $max_end_so_far = 0;\n    my $max_start_index_ending_here = 0;\n    my $max_end_index_ending_here = 0;\n    my $max_start_ending_here = 0;\n    my $max_end_ending_here = 0;\n    my $max_start_index_ending_here_temp = 0;\n    my $max_end_index_ending_here_temp = 0;\n    my $max_start_ending_here_temp = 0;\n    my $max_end_ending_here_temp = 0;\n    my $max_start_index_so_far_temp = 0;\n    my $max_end_index_so_far_temp = 0;\n    my $max_start_so_far_temp = 0;\n    my $max_end_so_far_temp = 0;\n    my $max_start_index_temp = 0;\n    my $max_end_index_temp = 0;\n    my $max_start_temp = 0;\n    my $max_end_temp = 0;\n    my $max_start_index_ending_here_temp_temp = 0;\n    my $max_end_index_ending_here_temp_temp = 0;\n    my $max_start_ending_here_temp_temp = 0;\n    my $max_end_ending_here_temp_temp = 0",
    "    my $max_sum = 0;\n    my $curr_sum = 0;\n    my $max_ending_here = 0;\n    my $max_so_far = 0;\n    my $i = 0;\n    my $j = 0;\n    my $m = 0;\n    my $len = 0;\n    my $sum = 0;\n    my $max_sum_k = 0;\n    my $max_sum_k_index = 0;\n    my $max_sum_k_len = 0;\n    my $max_sum_k_start = 0;\n    my $max_sum_k_end = 0;\n    my $max_sum_k_start_index = 0;\n    my $max_sum_k_end_index = 0;\n    my $max_sum_k_start_index_temp = 0;\n    my $max_sum_k_end_index_temp = 0;\n    my $max_sum_k_start_index_temp_2 = 0;\n    my $max_sum_k_end_index_temp_2 = 0;\n    my $max_sum_k_start_index_temp_3 = 0;\n    my $max_sum_k_end_index_temp_3 = 0;\n    my $max_sum_k_start_index_temp_4 = 0;\n    my $max_sum_k_end_index_temp_4 = 0;\n    my $max_sum_k_start_index_temp_5 = 0;\n    my $max_sum_k_end_index_temp_5 = 0;\n    my $max_sum_k_start_index_temp_6 = 0;\n    my $max_sum_k_end_index_temp_6 = 0;\n    my $max_sum_k_start_index_temp_7 = 0;\n    my $max_sum_k_end_index_temp_7 = 0;\n    my $max_sum_k_start_index_temp_8 = 0;\n    my $max_sum_k_end_index_temp_8 = 0;\n    my $max_sum_k_start",
    "\n    my $max_sum = 0;\n    my $curr_sum = 0;\n    my $max_sum_so_far = 0;",
    "    my $max_sum = 0;\n    my $curr_sum = 0;\n    my $max_so_far = 0;\n    my $i = 0;\n    my $j = 0;\n    my $start = 0;\n    my $end = 0;\n    my $s = 0;\n    my $e = 0;\n    while ($i < $n * $k) {\n        $curr_sum += $a->[$j];\n        if ($curr_sum > $max_sum) {\n            $max_sum = $curr_sum;\n            $start = $s;\n            $end = $e;\n        }\n        if ($curr_sum < 0) {\n            $curr_sum = 0;\n            $s = $i;\n        }\n        $j++;\n        $e = $j;\n        if ($j == $n) {\n            $j = 0;\n        }\n        $i++;\n    }\n    return ($max_sum, $start, $end);\n}",
    "    my $max_sum = 0;\n    my $curr_sum = 0;\n    my $max_val = 0;\n    my $curr_val = 0;\n    for my $i (0..$n-1) {\n        $curr_sum += $a->[$i];\n        $max_sum += $a->[$i];\n        $curr_val += $a->[$i];\n        $max_val = $curr_val if $curr_val > $max_val;\n        if ($curr_sum < 0) {\n            $curr_sum = 0;\n        }\n    }\n    if ($k == 1) {\n        return $max_sum;\n    }\n    my $suffix_sum = 0;\n    my $prefix_sum = 0;\n    for my $i (0..$n-1) {\n        $suffix_sum += $a->[$i];\n        $prefix_sum += $a->[$n-1-$i];\n        $max_sum = max($max_sum, $suffix_sum);\n        $max_sum = max($max_sum, $prefix_sum);\n    }\n    my $total_sum = 0;\n    for my $i (0..$n-1) {\n        $total_sum += $a->[$i];\n    }\n    if ($total_sum > 0) {\n        return max($max_sum, $total_sum * ($k-2) + $max_val);\n    } else {\n        return $max_sum;\n    }\n}",
    "    my $max_so_far = 0;\n    my $max_ending_here = 0;\n    my $max_element = max(@$a);\n    my $sum = sum(@$a);\n    my $max_sum = $max_element * $k;\n    my $i;\n    for ($i = 0; $i < $n; $i++) {\n        $max_ending_here += $a->[$i];\n        if ($max_ending_here < 0) {\n            $max_ending_here = 0;\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    if ($max_so_far == 0) {\n        return $max_element;\n    }\n    my $circular_sum = $max_so_far;\n    $max_so_far = 0;\n    $max_ending_here = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $max_ending_here += $a->[$i];\n        if ($max_ending_here < 0) {\n            $max_ending_here = 0;\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return max($max_sum, $circular_sum + ($k - 2) * $sum + $max_so_far);\n}",
    "    my $max_sum = 0;\n    my $curr_sum = 0;\n    my $i = 0;\n    my $j = 0;\n    my $max_sum_so_far = 0;\n    my $max_sum_ending_here = 0;\n    my $max_sum_ending_here_prev = 0;\n    my $max_sum_ending_here_prev_prev = 0;\n    my $max_sum_ending_here_prev_prev_prev = 0;\n    my $max_sum_ending_here_prev_prev_prev_prev = 0;\n    my $max_sum_ending_here_prev_prev_prev_prev_prev = 0;\n    my $max_sum_ending_here_prev_prev_prev_prev_prev_prev = 0;\n    my $max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev = 0;\n    my $max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    my $max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    my $max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    my $max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    my $max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    my $max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    my $max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    my $max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev",
    "    my $max_sum = 0;\n    my $curr_sum = 0;\n    my $curr_start = 0;\n    my $max_start = 0;\n    my $max_end = 0;\n    my $curr_end = 0;\n    my $i = 0;\n    while ($i < $k) {\n        $curr_sum = 0;\n        $curr_start = 0;\n        $curr_end = 0;\n        for (my $j = 0; $j < $n; $j++) {\n            $curr_sum += $a->[$j];\n            if ($curr_sum < 0) {\n                $curr_sum = 0;\n                $curr_start = $j + 1;\n            }\n            elsif ($curr_sum > $max_sum) {\n                $max_sum = $curr_sum;\n                $max_start = $curr_start;\n                $max_end = $j;\n            }\n        }\n        $i++;\n    }\n    return $max_sum;\n}",
    "    my $max_sum = 0;\n    my $curr_sum = 0;\n    my $i = 0;\n    my $j = 0;\n    my $max_sum_so_far = 0;\n    my $max_sum_ending_here = 0;\n    my $max_sum_ending_here_prev = 0;\n    my $max_sum_ending_here_prev_prev = 0;\n    my $max_sum_ending_here_prev_prev_prev = 0;\n    my $max_sum_ending_here_prev_prev_prev_prev = 0;\n    my $max_sum_ending_here_prev_prev_prev_prev_prev = 0;\n    my $max_sum_ending_here_prev_prev_prev_prev_prev_prev = 0;\n    my $max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev = 0;\n    my $max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    my $max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    my $max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    my $max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    my $max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    my $max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    my $max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    my $max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev",
    "    my $max_sum = -1e9;\n    my $curr_sum = 0;\n    my $prefix_sum = 0;\n    my $suffix_sum = 0;\n    my $max_prefix_sum = -1e9;\n    my $max_suffix_sum = -1e9;\n    my $min_prefix_sum = 1e9;\n    my $min_suffix_sum = 1e9;\n    for (my $i = 0; $i < $n; $i++) {\n        $curr_sum += $a->[$i];\n        $max_sum = max($max_sum, $curr_sum);\n        $max_sum = max($max_sum, $curr_sum - $min_prefix_sum);\n        $min_prefix_sum = min($min_prefix_sum, $curr_sum);\n        $prefix_sum += $a->[$i];\n    }\n    $curr_sum = 0;\n    for (my $i = $n - 1; $i >= 0; $i--) {\n        $curr_sum += $a->[$i];\n        $max_sum = max($max_sum, $curr_sum);\n        $max_sum = max($max_sum, $curr_sum - $min_suffix_sum);\n        $min_suffix_sum = min($min_suffix_sum, $curr_sum);\n        $suffix_sum += $a->[$i];\n    }\n    if ($k > 2) {\n        $max_sum = max($max_sum, $prefix_sum + ($k - 2) * $suffix_sum);\n    }\n    return $max_sum;\n}",
    "    my $max_sum = 0;\n    my $curr_sum = 0;\n    my $i = 0;\n    while ($i < $k) {\n        $curr_sum = 0;\n        for my $j (0 .. $n - 1) {\n            $curr_sum += $a->[$j];\n            if ($curr_sum > $max_sum) {\n                $max_sum = $curr_sum;\n            }\n        }\n        $i++;\n    }\n    return $max_sum;\n}",
    "    my $max_sum = 0;\n    my $curr_sum = 0;\n    my $max_ending_here = 0;\n    my $max_so_far = 0;\n    my $start = 0;\n    my $end = 0;\n    my $s = 0;\n    my $i = 0;\n    my $j = 0;\n    my $sum = 0;\n    my $max_sum_index = 0;\n    my $max_sum_index_start = 0;\n    my $max_sum_index_end = 0;\n    my $max_sum_index_start_temp = 0;\n    my $max_sum_index_end_temp = 0;\n    my $max_sum_index_temp = 0;\n    my $max_sum_index_start_temp_2 = 0;\n    my $max_sum_index_end_temp_2 = 0;\n    my $max_sum_index_temp_2 = 0;\n    my $max_sum_index_start_temp_3 = 0;\n    my $max_sum_index_end_temp_3 = 0;\n    my $max_sum_index_temp_3 = 0;\n    my $max_sum_index_start_temp_4 = 0;\n    my $max_sum_index_end_temp_4 = 0;\n    my $max_sum_index_temp_4 = 0;\n    my $max_sum_index_start_temp_5 = 0;\n    my $max_sum_index_end_temp_5 = 0;\n    my $max_sum_index_temp_5 = 0;\n    my $max_sum_index_start_temp_6 = 0;\n    my $max_sum_index_end_temp_6 = 0;\n    my $max_sum_index_temp_6 = 0;\n    my $max_sum_index_start_temp_7 = 0;\n    my $max_sum_index_end_temp_7 = 0;\n    my $max_sum_index_temp_7 = 0;\n    my $max_sum_index_start_temp_8 = 0;\n    my",
    "    my $max_sum = 0;\n    my $curr_sum = 0;\n    my $max_val = 0;\n    my $curr_val = 0;\n    my $i = 0;\n    my $j = 0;\n    my $size = scalar(@$a);\n    my $sum = 0;\n    for (my $i = 0; $i < $size; $i++) {\n        $sum += $a->[$i];\n        $max_val = max($max_val, $a->[$i]);\n    }\n    if ($max_val < 0) {\n        return $max_val * $k;\n    }\n    for (my $i = 0; $i < $size; $i++) {\n        $curr_sum += $a->[$i];\n        $curr_val = max($curr_val, $curr_sum);\n        if ($curr_sum < 0) {\n            $curr_sum = 0;\n        }\n    }\n    $max_sum = $curr_val;\n    $max_sum += ($sum * ($k - 2));\n    return $max_sum;\n}",
    "    my $max_sum = 0;\n    my $curr_sum = 0;\n    my $max_val = 0;\n    my $min_val = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        $max_val = max($max_val, $a->[$i]);\n        $min_val = min($min_val, $a->[$i]);\n        $curr_sum += $a->[$i];\n        if ($curr_sum > $max_sum) {\n            $max_sum = $curr_sum;\n        }\n        if ($curr_sum < 0) {\n            $curr_sum = 0;\n        }\n    }\n    if ($k == 1) {\n        return $max_sum;\n    }\n    my $array_sum = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        $array_sum += $a->[$i];\n    }\n    if ($array_sum > 0) {\n        return max($max_sum, $array_sum * ($k - 2) + $max_sum);\n    }\n    if ($array_sum == 0) {\n        return max($max_sum, $max_val);\n    }\n    return max($max_sum, $array_sum * ($k - 2) + $max_sum);\n}",
    "    my $max_sum = 0;\n    my $curr_sum = 0;\n    my $i = 0;\n    my $j = 0;\n    my $max_i = 0;\n    my $max_j = 0;\n    my $max_len = 0;\n    my $curr_len = 0;\n    my $max_ele = 0;\n    my $max_ele_index = 0;\n    my $curr_ele = 0;\n    my $curr_ele_index = 0;\n    my $max_ele_sum = 0;\n    my $curr_ele_sum = 0;\n    my $max_ele_sum_index = 0;\n    my $curr_ele_sum_index = 0;\n    my $max_ele_sum_len = 0;\n    my $curr_ele_sum_len = 0;\n    my $max_ele_sum_i = 0;\n    my $max_ele_sum_j = 0;\n    my $curr_ele_sum_i = 0;\n    my $curr_ele_sum_j = 0;\n    my $max_ele_sum_k = 0;\n    my $curr_ele_sum_k = 0;\n    my $max_ele_sum_k_index = 0;\n    my $curr_ele_sum_k_index = 0;\n    my $max_ele_sum_k_len = 0;\n    my $curr_ele_sum_k_len = 0;\n    my $max_ele_sum_k_i = 0;\n    my $max_ele_sum_k_j = 0;\n    my $curr_ele_sum_k_i = 0;\n    my $curr_ele_sum_k_j = 0;\n    my $max_ele_sum_k_k = 0;\n    my $curr_ele_sum_k_k = 0;\n    my $max_ele_sum_k_k_index = 0;\n    my $curr_ele_sum_k_k_index = 0;\n    my $max_ele_sum_k_k_len =",
    "    my $max_sum = 0;\n    my $curr_sum = 0;\n    my $i = 0;\n    my $j = 0;\n    my $max_i = 0;\n    my $max_j = 0;\n    my $max_len = 0;\n    my $curr_len = 0;\n    my $max_sum_i = 0;\n    my $max_sum_j = 0;\n    my $max_sum_len = 0;\n    while ($i < $n) {\n        $curr_sum += $a->[$i];\n        $curr_len++;\n        if ($curr_sum > $max_sum) {\n            $max_sum = $curr_sum;\n            $max_sum_i = $i - $curr_len + 1;\n            $max_sum_j = $i;\n            $max_sum_len = $curr_len;\n        }\n        if ($curr_sum < 0) {\n            $curr_sum = 0;\n            $curr_len = 0;\n        }\n        $i++;\n    }\n    $max_sum *= $k;\n    $max_sum_len *= $k;\n    $i = 0;\n    $j = 0;\n    $curr_sum = 0;\n    $curr_len = 0;\n    while ($i < $n) {\n        $curr_sum += $a->[$i];\n        $curr_len++;\n        if ($curr_sum > $max_sum) {\n            $max_sum = $curr_sum;\n            $max_i = $i - $curr_len + 1;\n            $max_j = $i;\n            $max_len = $curr_len;\n        }\n        if ($curr_sum < 0) {\n            $curr_sum = 0;\n            $curr_len = 0;\n        }\n        $i++;\n    }\n    if ($max_sum_i <= $max_i && $max_sum_j >= $max_j) {\n        $max_sum_len = $",
    "    my $max_sum = 0;\n    my $curr_sum = 0;\n    my $max_so_far = 0;\n    my $i = 0;\n    my $j = 0;\n    my $start = 0;\n    my $end = 0;\n    my $s = 0;\n    my $e = 0;\n    my $max_start = 0;\n    my $max_end = 0;\n    my $max_so_far_start = 0;\n    my $max_so_far_end = 0;\n    my $max_so_far_sum = 0;\n    my $max_sum_start = 0;\n    my $max_sum_end = 0;\n    my $max_sum_sum = 0;\n    my $max_sum_curr_sum = 0;\n    my $max_sum_curr_start = 0;\n    my $max_sum_curr_end = 0;\n    my $max_sum_curr_sum = 0;\n    my $max_sum_curr_sum = 0;\n    my $max_sum_curr_sum = 0;\n    my $max_sum_curr_sum = 0;\n    my $max_sum_curr_sum = 0;\n    my $max_sum_curr_sum = 0;\n    my $max_sum_curr_sum = 0;\n    my $max_sum_curr_sum = 0;\n    my $max_sum_curr_sum = 0;\n    my $max_sum_curr_sum = 0;\n    my $max_sum_curr_sum = 0;\n    my $max_sum_curr_sum = 0;\n    my $max_sum_curr_sum = 0;\n    my $max_sum_curr_sum = 0;\n    my $max_sum_curr_sum = 0;\n    my $max_sum_curr_sum = 0;\n    my $max_sum_curr_sum = 0;\n    my $max_sum_curr_sum = 0;\n    my $max_sum_curr_sum = 0;\n    my"
  ]
}
{
  "name": "mbpp_767_get_pairs_count",
  "language": "pl",
  "prompt": "# Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nsub get_pairs_count {\n    my($arr, $sum) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_767_get_pairs_count.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&get_pairs_count;\n        if(eq_deeply($candidate->([1, 1, 1, 1], 2),6)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 5, 7, -1, 5], 6),3)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, -2, 3], 1),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-1, -2, 3], -3),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $count = 0;\n    my %hash = ();\n    foreach my $i (@$arr) {\n        my $tmp = $sum - $i;\n        if (exists $hash{$tmp}) {\n            $count++;\n        }\n        $hash{$i} = 1;\n    }\n    return $count;\n}",
    "    my %hash;\n    my $count = 0;\n    foreach my $i (@$arr) {\n        if (exists $hash{$i}) {\n            $count++;\n        }\n        $hash{$sum - $i} = 1;\n    }\n    return $count;\n}",
    "    my %hash = ();\n    my $count = 0;\n    foreach my $i (@$arr) {\n        $hash{$i} = 1;\n    }\n    foreach my $i (@$arr) {\n        if (exists $hash{$sum - $i}) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my %hash;\n    foreach my $i (@$arr) {\n        $hash{$i} = 1;\n    }\n    foreach my $i (@$arr) {\n        if (exists $hash{$sum - $i}) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my %hash = ();\n    my $count = 0;\n    foreach my $num (@$arr) {\n        if(exists $hash{$sum - $num}) {\n            $count++;\n        }\n        $hash{$num} = 1;\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my %hash = ();\n    for my $i (0 .. $#$arr) {\n        $hash{$arr->[$i]} = $i;\n    }\n    for my $i (0 .. $#$arr) {\n        if (exists $hash{$sum - $arr->[$i]}) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $i = 0;\n    my $j = 0;\n    my $len = scalar @$arr;\n    for ($i = 0; $i < $len; $i++) {\n        for ($j = $i + 1; $j < $len; $j++) {\n            if ($arr->[$i] + $arr->[$j] == $sum) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my %hash;\n    foreach my $num (@$arr) {\n        if (exists $hash{$sum - $num}) {\n            $count++;\n        }\n        $hash{$num} = 1;\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my %hash = ();\n    foreach my $num (@$arr) {\n        $hash{$num} = 1;\n    }\n    foreach my $num (@$arr) {\n        if (exists $hash{$sum - $num}) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my %hash;\n    my $count = 0;\n    for my $i (@$arr) {\n        $hash{$i} = 1;\n    }\n    for my $i (@$arr) {\n        if (exists $hash{$sum - $i}) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my %hash;\n    foreach my $num (@$arr) {\n        if (exists $hash{$num}) {\n            $count++;\n        }\n        else {\n            $hash{$sum - $num} = 1;\n        }\n    }\n    return $count;\n}",
    "    my %hash = ();\n    my $count = 0;\n    foreach my $i (@$arr) {\n        if(exists $hash{$sum - $i}) {\n            $count++;\n        }\n        $hash{$i} = 1;\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my %hash = ();\n    for my $i (0 .. $#{$arr}) {\n        my $tmp = $sum - $arr->[$i];\n        if (exists $hash{$tmp}) {\n            $count++;\n        }\n        $hash{$arr->[$i]} = $i;\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my %hash = ();\n    for my $i (0..$#{$arr}) {\n        my $temp = $sum - $arr->[$i];\n        if (exists $hash{$temp}) {\n            $count++;\n        }\n        $hash{$arr->[$i]} = $i;\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my %hash;\n    foreach my $i (@$arr) {\n        $hash{$i} = 1;\n    }\n    foreach my $i (@$arr) {\n        if (exists $hash{$sum - $i}) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my %hash = ();\n    foreach my $num (@$arr) {\n        my $diff = $sum - $num;\n        if (exists $hash{$diff}) {\n            $count++;\n        }\n        $hash{$num} = 1;\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my %hash;\n    foreach my $num (@$arr) {\n        if (exists $hash{$sum - $num}) {\n            $count++;\n        }\n        $hash{$num} = 1;\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my %hash = ();\n    foreach my $num (@$arr) {\n        if (exists $hash{$sum - $num}) {\n            $count++;\n        }\n        $hash{$num} = 1;\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my %hash;\n    foreach my $num (@$arr) {\n        $hash{$num} = 1;\n    }\n    foreach my $num (@$arr) {\n        if (exists $hash{$sum - $num}) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my %hash;\n    foreach my $num (@$arr) {\n        $hash{$num}++;\n    }\n    foreach my $num (@$arr) {\n        $count++ if $hash{$sum - $num};\n    }\n    return $count;\n}"
  ]
}
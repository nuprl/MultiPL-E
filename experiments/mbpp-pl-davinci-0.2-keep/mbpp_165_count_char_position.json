{
  "name": "mbpp_165_count_char_position",
  "language": "pl",
  "prompt": "# Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\nsub count_char_position {\n    my($str1) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_165_count_char_position.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&count_char_position;\n        if(eq_deeply($candidate->(\"xbcefg\"),2)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"ABcED\"),3)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"AbgdeF\"),5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $count = 0;\n    my $str2 = \"abcdefghijklmnopqrstuvwxyz\";\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for (my $i = 0; $i < scalar(@str1); $i++) {\n        if ($str1[$i] eq $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $str2 = lc($str1);\n    my @arr = split('', $str2);\n    for(my $i = 0; $i < length($str2); $i++) {\n        if($arr[$i] eq chr(ord('a') + $i)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $str2 = \"abcdefghijklmnopqrstuvwxyz\";\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < length($str1); $i++) {\n        if($str1[$i] eq $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $str2 = lc($str1);\n    my @str_arr = split(\"\", $str2);\n    foreach my $char (@str_arr) {\n        if ($char eq chr(ord($char) - 32)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, \"abcdefghijklmnopqrstuvwxyz\");\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] eq $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $str2 = lc($str1);\n    my $len = length($str2);\n    for(my $i=0; $i<$len; $i++) {\n        my $char = substr($str2, $i, 1);\n        my $pos = ord($char) - ord('a');\n        if($pos == $i) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $str2 = \"abcdefghijklmnopqrstuvwxyz\";\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] eq $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $str2 = lc($str1);\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < length($str1); $i++) {\n        if($str1[$i] eq $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $str2 = \"abcdefghijklmnopqrstuvwxyz\";\n    for(my $i = 0; $i < length($str1); $i++) {\n        if(substr($str1, $i, 1) eq substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $str2 = \"abcdefghijklmnopqrstuvwxyz\";\n    my @str1 = split(\"\", $str1);\n    my @str2 = split(\"\", $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] eq $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $str1_len = length($str1);\n    my $str2 = \"abcdefghijklmnopqrstuvwxyz\";\n    my $str2_len = length($str2);\n    for(my $i=0; $i<$str1_len; $i++) {\n        for(my $j=0; $j<$str2_len; $j++) {\n            if(lc(substr($str1, $i, 1)) eq substr($str2, $j, 1)) {\n                if($i == $j) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $str2 = lc $str1;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < length($str1); $i++) {\n        if($str2[$i] eq chr(97 + $i)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $str2 = lc($str1);\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for (my $i = 0; $i < length($str1); $i++) {\n        if ($str1[$i] eq $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, \"abcdefghijklmnopqrstuvwxyz\");\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] =~ m/[a-zA-Z]/ && $str1[$i] eq lc($str2[$i])) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $str2 = lc($str1);\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < length($str1); $i++) {\n        if($str1[$i] eq $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $str = lc($str1);\n    my @str = split(\"\", $str);\n    my @alphabet = ('a'..'z');\n    for (my $i = 0; $i < scalar(@str); $i++) {\n        if ($str[$i] eq $alphabet[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $len = length($str1);\n    my $i = 0;\n    while($i < $len) {\n        my $char = substr($str1, $i, 1);\n        my $pos = index($alphabet, $char);\n        if($pos == $i) {\n            $count++;\n        }\n        $i++;\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $str2 = lc($str1);\n    my @str2 = split(//, $str2);\n    my @str3 = split(//, \"abcdefghijklmnopqrstuvwxyz\");\n    for (my $i = 0; $i < length($str2); $i++) {\n        if ($str2[$i] eq $str3[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $str2 = lc($str1);\n    my @str2 = split //, $str2;\n    for (my $i=0; $i<length($str2); $i++) {\n        if ($str2[$i] eq chr(97+$i)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $str1_len = length($str1);\n    my $str2 = \"abcdefghijklmnopqrstuvwxyz\";\n    my $str2_len = length($str2);\n    for (my $i = 0; $i < $str1_len; $i++) {\n        for (my $j = 0; $j < $str2_len; $j++) {\n            if (lc(substr($str1, $i, 1)) eq substr($str2, $j, 1)) {\n                if ($i == $j) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}"
  ]
}
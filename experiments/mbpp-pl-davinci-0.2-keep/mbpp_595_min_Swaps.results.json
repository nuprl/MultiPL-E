{
  "name": "mbpp_595_min_Swaps",
  "language": "pl",
  "prompt": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_595_min_Swaps.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "results": [
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for (my $i = 0; $i < scalar(@str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $l = length($str1);\n    my $count = 0;\n    for(my $i = 0; $i < $l; $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) ne substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i=0; $i<scalar(@str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for my $i (0..$#str1) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar(@str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(\"\", $str1);\n    my @str2 = split(\"\", $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) ne substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < length($str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpm5op7iw_.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpm5op7iw_.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(\"\", $str1);\n    my @str2 = split(\"\", $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmphlshym3i.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmphlshym3i.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpgei2awa5.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpgei2awa5.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) ne substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpd139w6nd.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpd139w6nd.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpas3jq7p6.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpas3jq7p6.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpd139w6nd.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpd139w6nd.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i=0; $i<length($str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp8kbuk092.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmp8kbuk092.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpm5op7iw_.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpm5op7iw_.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpas3jq7p6.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpas3jq7p6.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp0sfw__zz.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmp0sfw__zz.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $len = length($str1);\n    my $count = 0;\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpcrckdk5r.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmpcrckdk5r.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @arr1 = split(\"\", $str1);\n    my @arr2 = split(\"\", $str2);\n    for(my $i = 0; $i < scalar(@arr1); $i++) {\n        if($arr1[$i] != $arr2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpmwen22w5.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpmwen22w5.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(\"\", $str1);\n    my @str2 = split(\"\", $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpu0y3fqsm.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpu0y3fqsm.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp2q_podc5.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmp2q_podc5.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for (my $i = 0; $i < scalar(@str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) ne substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) ne substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < length($str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmprz893fvc.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmprz893fvc.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    for (my $i = 0; $i < length($str1); $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpv49pzegp.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmpv49pzegp.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @arr1 = split(//, $str1);\n    my @arr2 = split(//, $str2);\n    for(my $i=0; $i<@arr1; $i++) {\n        if($arr1[$i] != $arr2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp2ayypzvr.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmp2ayypzvr.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp0sfw__zz.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmp0sfw__zz.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) ne substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpd139w6nd.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpd139w6nd.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) ne substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @arr1 = split('', $str1);\n    my @arr2 = split('', $str2);\n    for(my $i = 0; $i < scalar @arr1; $i++) {\n        if($arr1[$i] != $arr2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp915d8ell.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmp915d8ell.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i=0; $i<@str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpov2g6b05.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpov2g6b05.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < length($str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpd139w6nd.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpd139w6nd.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    for (my $i = 0; $i < length($str1); $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpv49pzegp.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmpv49pzegp.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < length($str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpr0_ds1sx.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpr0_ds1sx.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) ne substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmphn_8bnv7.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmphn_8bnv7.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp0b4fztmv.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmp0b4fztmv.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpnt3ynthe.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpnt3ynthe.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) ne substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i=0; $i<@str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp9i5002om.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmp9i5002om.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpm5op7iw_.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpm5op7iw_.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i=0; $i<@str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpswp0euin.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpswp0euin.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i=0; $i<=$#str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmppkiazz8i.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmppkiazz8i.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpgei2awa5.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpgei2awa5.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < length($str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i <= $#str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpi2srn6yf.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpi2srn6yf.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpklg7uakx.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpklg7uakx.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) ne substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < length($str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nprint(\"Minimum number of swaps required to convert one binary number represented as a string to another: \", min_Swaps(\"100100\", \"110101\"), \"\\n\");\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp1jmj_817.pl line 15.\nBEGIN failed--compilation aborted at /tmp/tmp1jmj_817.pl line 15.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < length($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpf24qfd56.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpf24qfd56.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(\"\", $str1);\n    my @str2 = split(\"\", $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(\"\", $str1);\n    my @str2 = split(\"\", $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpu0y3fqsm.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpu0y3fqsm.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpd139w6nd.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpd139w6nd.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpd139w6nd.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpd139w6nd.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i=0; $i<scalar @str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpjvsmummf.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpjvsmummf.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) ne substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmphn_8bnv7.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmphn_8bnv7.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < length($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpf24qfd56.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpf24qfd56.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpbbvxkqx_.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpbbvxkqx_.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpnt3ynthe.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpnt3ynthe.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpwbi4sgqd.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpwbi4sgqd.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpwbi4sgqd.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpwbi4sgqd.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i=0; $i<length($str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp26a2oul_.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmp26a2oul_.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) ne substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmphn_8bnv7.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmphn_8bnv7.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my @str1 = split(\"\", $str1);\n    my @str2 = split(\"\", $str2);\n    my $count = 0;\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpd343qoen.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpd343qoen.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpwbi4sgqd.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpwbi4sgqd.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    my $count = 0;\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp9kd4a6lf.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmp9kd4a6lf.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < length($str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmprz893fvc.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmprz893fvc.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp995t9h8g.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmp995t9h8g.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i <= $#str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpzbjkk5if.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpzbjkk5if.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $i = 0;\n    while($i < length($str1)) {\n        if(substr($str1, $i, 1) ne substr($str2, $i, 1)) {\n            $count++;\n        }\n        $i++;\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpfdzb2riy.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpfdzb2riy.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmptchqxoy4.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmptchqxoy4.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp0sfw__zz.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmp0sfw__zz.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for (my $i = 0; $i < scalar(@str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpfeahn8zn.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpfeahn8zn.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    for(my $i = 0; $i < length($str1); $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpp1_nkkdm.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmpp1_nkkdm.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    for(my $i = 0; $i < length($str1); $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpp1_nkkdm.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmpp1_nkkdm.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpd139w6nd.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpd139w6nd.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for (my $i = 0; $i < @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpucooci2k.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpucooci2k.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for (my $i = 0; $i < scalar(@str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpfeahn8zn.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpfeahn8zn.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for (my $i = 0; $i < scalar(@str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpfeahn8zn.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpfeahn8zn.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for (my $i = 0; $i < length($str1); $i++) {\n        if ($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nprint(min_Swaps(\"10011\", \"11100\").\"\\n\");\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp4sslvtml.pl line 15.\nBEGIN failed--compilation aborted at /tmp/tmp4sslvtml.pl line 15.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpbbvxkqx_.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpbbvxkqx_.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp0sfw__zz.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmp0sfw__zz.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpklg7uakx.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpklg7uakx.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    my $count = 0;\n    for (my $i = 0; $i < scalar(@str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp8rmy_pfm.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmp8rmy_pfm.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    for (my $i = 0; $i < length($str1); $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpv49pzegp.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmpv49pzegp.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < length($str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp0sfw__zz.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmp0sfw__zz.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for (my $i = 0; $i < scalar(@str1); $i++) {\n        if ($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpla1_b8ue.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpla1_b8ue.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpbbvxkqx_.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpbbvxkqx_.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) ne substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(\"\", $str1);\n    my @str2 = split(\"\", $str2);\n    for(my $i = 0; $i < @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp1c3mq2wg.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmp1c3mq2wg.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(\"\", $str1);\n    my @str2 = split(\"\", $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpfl6z3lsn.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpfl6z3lsn.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpgei2awa5.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpgei2awa5.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp0sfw__zz.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmp0sfw__zz.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) ne substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for my $i (0 .. $#str1) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpzcc51l7h.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpzcc51l7h.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpas3jq7p6.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpas3jq7p6.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpas3jq7p6.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpas3jq7p6.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) ne substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    for(my $i = 0; $i < length($str1); $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpp1_nkkdm.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmpp1_nkkdm.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpbbvxkqx_.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpbbvxkqx_.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) ne substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmphn_8bnv7.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmphn_8bnv7.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i=0; $i<scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpbs2_8tqk.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpbs2_8tqk.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmptchqxoy4.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmptchqxoy4.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpklg7uakx.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpklg7uakx.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my($i, $count) = (0, 0);\n    my($len) = length($str1);\n    for($i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) ne substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpb5fk_h44.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmpb5fk_h44.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(\"\", $str1);\n    my @str2 = split(\"\", $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmphlshym3i.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmphlshym3i.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(\"\", $str1);\n    my @str2 = split(\"\", $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpfl6z3lsn.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpfl6z3lsn.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpklg7uakx.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpklg7uakx.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) ne substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509799,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpas3jq7p6.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpas3jq7p6.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpwbi4sgqd.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpwbi4sgqd.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122470,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpwbi4sgqd.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpwbi4sgqd.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    }
  ]
}
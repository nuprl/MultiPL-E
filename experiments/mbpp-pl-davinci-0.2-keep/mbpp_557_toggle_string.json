{
  "name": "mbpp_557_toggle_string",
  "language": "pl",
  "prompt": "# Write a function to toggle the case of all characters in a string.\nsub toggle_string {\n    my($string) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_557_toggle_string.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&toggle_string;\n        if(eq_deeply($candidate->(\"Python\"),\"pYTHON\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"Pangram\"),\"pANGRAM\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"LIttLE\"),\"liTTle\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my($result);\n    my($i);\n    for ($i = 0; $i < length($string); $i++) {\n        $result .= toggle_char(substr($string, $i, 1));\n    }\n    return $result;\n}",
    "    my($result);\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $result .= lc($char);\n        }\n        else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my($result) = \"\";\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } else {\n            $result .= lc($char);\n        }\n    }\n    return $result;\n}",
    "    my @chars = split //, $string;\n    for (@chars) {\n        if (/[a-z]/) {\n            $_ = uc $_;\n        }\n        elsif (/[A-Z]/) {\n            $_ = lc $_;\n        }\n    }\n    return join '', @chars;\n}",
    "    my($result);\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n            $result .= lc($char);\n        } else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    my($char);\n    foreach $char (split(//, $string)) {\n        $result .= ($char =~ /[a-z]/i) ? uc $char : lc $char;\n    }\n    return $result;\n}",
    "    my($result) = \"\";\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n            $result .= lc($char);\n        } else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $result .= lc $char;\n        }\n        else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my($i, $result);\n    $result = \"\";\n    for($i = 0; $i < length($string); $i++) {\n        $result .= toggle_char(substr($string, $i, 1));\n    }\n    return $result;\n}",
    "    my($result) = '';\n    foreach my $c (split(//, $string)) {\n        if ($c =~ /[a-z]/) {\n            $result .= uc($c);\n        } else {\n            $result .= lc($c);\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $result .= lc($char);\n        }\n        else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    foreach my $char (split //, $string) {\n        $result .= ($char =~ /[a-z]/) ? uc $char : lc $char;\n    }\n    return $result;\n}",
    "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}",
    "    my($result) = \"\";\n    foreach my $c (split //, $string) {\n        $result .= uc $c;\n    }\n    return $result;\n}",
    "    my($result) = '';\n    for my $c (split //, $string) {\n        if ($c =~ /[a-z]/) {\n            $result .= uc $c;\n        }\n        else {\n            $result .= lc $c;\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $result .= lc $char;\n        }\n        else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my($result);",
    "    $string =~ s/([a-z])/uc($1)/eg;\n    $string =~ s/([A-Z])/lc($1)/eg;\n    return $string;\n}",
    "    my($result);\n    for my $char (split //, $string) {\n        $result .= uc $char if $char =~ /[a-z]/;\n        $result .= lc $char if $char =~ /[A-Z]/;\n        $result .= $char if $char =~ /[^a-zA-Z]/;\n    }\n    return $result;\n}",
    "    my($result) = '';\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } else {\n            $result .= lc($char);\n        }\n    }\n    return $result;\n}",
    "    my @chars = split //, $string;\n    for (@chars) {\n        if (/[a-z]/) {\n            $_ = uc $_;\n        } elsif (/[A-Z]/) {\n            $_ = lc $_;\n        }\n    }\n    return join '', @chars;\n}",
    "    my($result);\n    my($i);\n    for ($i = 0; $i < length($string); $i++) {\n        my($c) = substr($string, $i, 1);\n        if ($c =~ /[a-z]/) {\n            $c =~ tr/a-z/A-Z/;\n        } elsif ($c =~ /[A-Z]/) {\n            $c =~ tr/A-Z/a-z/;\n        }\n        $result .= $c;\n    }\n    return $result;\n}",
    "    my($result) = \"\";\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n            $result .= lc $char;\n        } else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my($result);",
    "    my($result) = '';\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        }\n        else {\n            $result .= lc($char);\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $result .= lc $char;\n        }\n        else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}",
    "    my $result = \"\";\n    foreach my $c (split //, $string) {\n        if ($c =~ /[A-Z]/) {\n            $result .= lc($c);\n        } else {\n            $result .= uc($c);\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[A-Z]/) {\n            $result .= lc($char);\n        } else {\n            $result .= uc($char);\n        }\n    }\n    return $result;\n}",
    "    my($result) = '';\n    for my $c (split //, $string) {\n        $result .= $c =~ /[a-z]/ ? uc $c : lc $c;\n    }\n    return $result;\n}",
    "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}",
    "    my($result) = \"\";\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $result .= lc $char;\n        }\n        else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}",
    "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}",
    "    my($result);",
    "    my($result) = \"\";\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } else {\n            $result .= lc($char);\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    my($char);",
    "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}",
    "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}",
    "    my($result) = '';\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        }\n        else {\n            $result .= lc($char);\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    for (my $i = 0; $i < length($string); $i++) {\n        my $char = substr($string, $i, 1);\n        if (is_upper($char)) {\n            $result .= lc($char);\n        } else {\n            $result .= uc($char);\n        }\n    }\n    return $result;\n}",
    "    my @chars = split //, $string;\n    for (@chars) {\n        if (/[a-z]/) {\n            $_ = uc $_;\n        }\n        else {\n            $_ = lc $_;\n        }\n    }\n    return join '', @chars;\n}",
    "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}",
    "    my($result) = '';\n    foreach my $char (split //, $string) {\n        $result .= uc($char) eq $char ? lc($char) : uc($char);\n    }\n    return $result;\n}",
    "    my($result) = \"\";\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } else {\n            $result .= lc($char);\n        }\n    }\n    return $result;\n}",
    "    my $toggled = \"\";\n    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $toggled .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $toggled .= lc $char;\n        }\n        else {\n            $toggled .= $char;\n        }\n    }\n    return $toggled;\n}",
    "    my $result = '';\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        }\n        else {\n            $result .= lc $char;\n        }\n    }\n    return $result;\n}",
    "    my($i, $char, $result);\n    $result = '';\n    for ($i = 0; $i < length($string); $i++) {\n        $char = substr($string, $i, 1);\n        if ($char =~ /[a-z]/) {\n            $char =~ tr/a-z/A-Z/;\n        } elsif ($char =~ /[A-Z]/) {\n            $char =~ tr/A-Z/a-z/;\n        }\n        $result .= $char;\n    }\n    return $result;\n}",
    "    my($result);\n    my($c);",
    "    my($result);\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } else {\n            $result .= lc($char);\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    for my $char (split //, $string) {\n        if ($char =~ /[A-Z]/) {\n            $result .= lc $char;\n        } else {\n            $result .= uc $char;\n        }\n    }\n    return $result;\n}",
    "    my($result) = \"\";\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        } else {\n            $result .= lc $char;\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    my($char);",
    "    my($result);\n    $result = join('', map { $_ =~ /[a-z]/ ? uc($_) : lc($_) } split(//, $string));\n    return $result;\n}",
    "    my($result) = \"\";\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n            $result .= lc($char);\n        } else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my($result) = '';\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } else {\n            $result .= lc($char);\n        }\n    }\n    return $result;\n}",
    "    my($result) = \"\";\n    foreach my $c (split(//, $string)) {\n        if ($c =~ /[a-z]/) {\n            $result .= uc($c);\n        } else {\n            $result .= lc($c);\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    my($char);\n    foreach $char (split(//, $string)) {\n        $result .= ($char =~ /[a-z]/i) ? uc $char : lc $char;\n    }\n    return $result;\n}",
    "    my($result);\n    my($i);",
    "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}",
    "    my($result);\n    my($char);\n    foreach $char (split(//, $string)) {\n        $result .= ($char =~ /[a-z]/i) ? uc $char : lc $char;\n    }\n    return $result;\n}",
    "    my($result) = '';\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } else {\n            $result .= lc($char);\n        }\n    }\n    return $result;\n}",
    "    my($result) = '';\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        }\n        else {\n            $result .= lc($char);\n        }\n    }\n    return $result;\n}",
    "    my($result) = \"\";\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } else {\n            $result .= lc($char);\n        }\n    }\n    return $result;\n}",
    "    my($result) = \"\";\n    foreach my $c (split(//, $string)) {\n        if ($c =~ /[a-z]/) {\n            $result .= uc($c);\n        } else {\n            $result .= lc($c);\n        }\n    }\n    return $result;\n}",
    "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}",
    "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}",
    "    my($result) = '';\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n            $result .= lc($char);\n        } else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}",
    "    my($result);\n    my($char);",
    "    my($result) = '';\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $result .= lc($char);\n        }\n        else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } else {\n            $result .= lc($char);\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    my($character);",
    "    my($result);\n    $result = '';\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $result .= lc($char);\n        }\n        else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my $result = '';\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $result .= lc $char;\n        }\n        else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my $new_string = \"\";\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $new_string .= uc($char);\n        } else {\n            $new_string .= lc($char);\n        }\n    }\n    return $new_string;\n}",
    "    my($result) = '';\n    for my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n            $result .= lc($char);\n        } else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    for my $c (split //, $string) {\n        if ($c =~ /[a-z]/) {\n            $result .= uc $c;\n        }\n        else {\n            $result .= lc $c;\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    $result = join('', map { $_ =~ /[a-z]/ ? uc($_) : lc($_) } split(//, $string));\n    return $result;\n}",
    "    my $new_string = \"\";\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $new_string .= uc $char;\n        } else {\n            $new_string .= lc $char;\n        }\n    }\n    return $new_string;\n}",
    "    my($result);\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $result .= lc($char);\n        }\n        else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my($result) = '';\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n            $result .= lc($char);\n        } else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my $new_string = \"\";\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $new_string .= uc $char;\n        } else {\n            $new_string .= lc $char;\n        }\n    }\n    return $new_string;\n}",
    "    my($result) = \"\";\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n            $result .= lc $char;\n        } else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my $new_string = '';\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $new_string .= uc $char;\n        }\n        else {\n            $new_string .= lc $char;\n        }\n    }\n    return $new_string;\n}",
    "    my($result);\n    my($i);\n    for($i = 0; $i < length($string); $i++) {\n\tmy($c) = substr($string, $i, 1);\n\tif($c =~ /[a-z]/) {\n\t    $c =~ tr/a-z/A-Z/;\n\t}\n\telsif($c =~ /[A-Z]/) {\n\t    $c =~ tr/A-Z/a-z/;\n\t}\n\t$result .= $c;\n    }\n    return $result;\n}",
    "    my($result);\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $result .= lc $char;\n        }\n        else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my($result) = \"\";\n    foreach my $c (split //, $string) {\n        $result .= ($c =~ /[a-z]/) ? uc $c : lc $c;\n    }\n    return $result;\n}",
    "    my($result);\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } else {\n            $result .= lc($char);\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    my($char);",
    "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}",
    "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}",
    "    my($result) = '';\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } else {\n            $result .= lc($char);\n        }\n    }\n    return $result;\n}",
    "    my $new_string = \"\";\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $new_string .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n            $new_string .= lc $char;\n        } else {\n            $new_string .= $char;\n        }\n    }\n    return $new_string;\n}",
    "    my($result) = \"\";\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } else {\n            $result .= lc($char);\n        }\n    }\n    return $result;\n}",
    "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}",
    "    my($result) = \"\";\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        } else {\n            $result .= lc $char;\n        }\n    }\n    return $result;\n}",
    "    my($result) = \"\";\n    foreach my $char (split //, $string) {\n        if (is_upper($char)) {\n            $result .= lc($char);\n        } else {\n            $result .= uc($char);\n        }\n    }\n    return $result;\n}",
    "    my($result) = \"\";\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        } else {\n            $result .= lc $char;\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    my($char);\n    foreach $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } else {\n            $result .= lc($char);\n        }\n    }\n    return $result;\n}",
    "    my($result) = \"\";\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n            $result .= lc $char;\n        } else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $result .= lc $char;\n        }\n        else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my($result) = '';\n    foreach my $c (split(//, $string)) {\n        if ($c =~ /[a-z]/) {\n            $result .= uc($c);\n        } else {\n            $result .= lc($c);\n        }\n    }\n    return $result;\n}",
    "    my $new_string = \"\";\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $new_string .= uc $char;\n        } else {\n            $new_string .= lc $char;\n        }\n    }\n    return $new_string;\n}",
    "    my($result);\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $result .= lc($char);\n        }\n        else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my $toggled_string = '';\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $toggled_string .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $toggled_string .= lc $char;\n        }\n        else {\n            $toggled_string .= $char;\n        }\n    }\n    return $toggled_string;\n}",
    "    my($result);\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        } else {\n            $result .= lc $char;\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    my($c);\n    foreach $c (split(//, $string)) {\n        if ($c =~ /[a-z]/) {\n            $result .= uc($c);\n        } elsif ($c =~ /[A-Z]/) {\n            $result .= lc($c);\n        } else {\n            $result .= $c;\n        }\n    }\n    return $result;\n}",
    "    my $toggled = '';\n    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $toggled .= uc $char;\n        }\n        else {\n            $toggled .= lc $char;\n        }\n    }\n    return $toggled;\n}",
    "    my($result);\n    foreach my $c (split(//, $string)) {\n        if ($c =~ /[a-z]/) {\n            $result .= uc($c);\n        }\n        elsif ($c =~ /[A-Z]/) {\n            $result .= lc($c);\n        }\n        else {\n            $result .= $c;\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n            $result .= lc($char);\n        } else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my @chars = split(//, $string);\n    my @toggled_chars = map {\n        if ($_ =~ /[a-z]/) {\n            uc($_);\n        } elsif ($_ =~ /[A-Z]/) {\n            lc($_);\n        } else {\n            $_;\n        }\n    } @chars;\n    return join('', @toggled_chars);\n}",
    "    my($result);\n    $result = $string;\n    $result =~ tr/a-zA-Z/A-Za-z/;\n    return $result;\n}",
    "    my $toggle_string = \"\";\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $toggle_string .= uc $char;\n        }\n        else {\n            $toggle_string .= lc $char;\n        }\n    }\n    return $toggle_string;\n}",
    "    my($result);\n    foreach my $c (split //, $string) {\n        if ($c =~ /[a-z]/) {\n            $result .= uc $c;\n        }\n        else {\n            $result .= lc $c;\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    foreach my $char (split //, $string) {\n        if ($char =~ /[A-Z]/) {\n            $result .= lc($char);\n        }\n        elsif ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        }\n        else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    foreach my $char (split //, $string) {\n        if ($char =~ /[A-Z]/) {\n            $result .= lc($char);\n        }\n        else {\n            $result .= uc($char);\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    foreach my $char (split //, $string) {\n        if ($char =~ /[A-Z]/) {\n            $result .= lc $char;\n        }\n        else {\n            $result .= uc $char;\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    foreach my $char (split //, $string) {\n        $result .= $char =~ /[a-z]/ ? uc $char : lc $char;\n    }\n    return $result;\n}",
    "    my($result);\n    $result = join('', map { $_ =~ /[a-z]/ ? uc($_) : lc($_) } split(//, $string));\n    return $result;\n}",
    "    my($result);\n    my($c);",
    "    my @chars = split(//, $string);\n    for (my $i = 0; $i < @chars; $i++) {\n        if ($chars[$i] =~ /[a-z]/) {\n            $chars[$i] = uc($chars[$i]);\n        } else {\n            $chars[$i] = lc($chars[$i]);\n        }\n    }\n    return join('', @chars);\n}",
    "    my($result);\n    $result = join('', map { $_ =~ /[a-z]/i ? $_ =~ /[a-z]/ ? uc($_) : lc($_) : $_ } split(//, $string));\n    return $result;\n}",
    "    my($result);",
    "    my $toggled_string = '';\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $toggled_string .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $toggled_string .= lc $char;\n        }\n        else {\n            $toggled_string .= $char;\n        }\n    }\n    return $toggled_string;\n}",
    "    my($result) = '';\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n            $result .= lc($char);\n        } else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my $result = '';\n    for my $c (split //, $string) {\n        $result .= uc($c) eq $c ? lc($c) : uc($c);\n    }\n    return $result;\n}",
    "    my($result);\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } else {\n            $result .= lc($char);\n        }\n    }\n    return $result;\n}",
    "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}",
    "    my($result) = \"\";\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        }\n        else {\n            $result .= lc $char;\n        }\n    }\n    return $result;\n}",
    "    my($result);",
    "    my($i, $char, $new_string);\n    $new_string = \"\";\n    for($i = 0; $i < length($string); $i++) {\n        $char = substr($string, $i, 1);\n        if($char =~ /[a-z]/) {\n            $new_string .= uc($char);\n        } elsif($char =~ /[A-Z]/) {\n            $new_string .= lc($char);\n        } else {\n            $new_string .= $char;\n        }\n    }\n    return $new_string;\n}",
    "    my $result = \"\";\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $result .= lc $char;\n        }\n        else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my $toggle_string = \"\";\n    foreach my $char (split //, $string) {\n        if (is_upper($char)) {\n            $toggle_string .= lc($char);\n        } else {\n            $toggle_string .= uc($char);\n        }\n    }\n    return $toggle_string;\n}",
    "    my @chars = split //, $string;\n    my $new_string = \"\";\n    foreach my $char (@chars) {\n        if ($char =~ /[A-Z]/) {\n            $new_string .= lc($char);\n        } else {\n            $new_string .= uc($char);\n        }\n    }\n    return $new_string;\n}",
    "    my($result);\n    my($c);",
    "    my($result) = \"\";\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $result .= lc $char;\n        }\n        else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    foreach my $char (split //, $string) {\n        $result .= $char =~ /[a-z]/ ? uc $char : lc $char;\n    }\n    return $result;\n}",
    "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}",
    "    my($result);\n    foreach my $c (split(//, $string)) {\n        if ($c =~ /[a-z]/) {\n            $result .= uc($c);\n        } elsif ($c =~ /[A-Z]/) {\n            $result .= lc($c);\n        } else {\n            $result .= $c;\n        }\n    }\n    return $result;\n}",
    "    my @chars = split //, $string;\n    my @toggled;\n    foreach my $char (@chars) {\n        if ($char =~ /[a-z]/) {\n            push @toggled, uc $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n            push @toggled, lc $char;\n        }\n        else {\n            push @toggled, $char;\n        }\n    }\n    return join '', @toggled;\n}",
    "    my($result);\n    $result = join('', map { $_ =~ /[a-z]/ ? uc($_) : lc($_) } split(//, $string));\n    return $result;\n}",
    "    my($result) = '';\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $result .= lc($char);\n        }\n        else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}",
    "    my($result) = '';\n    for (my $i = 0; $i < length($string); $i++) {\n        my($c) = substr($string, $i, 1);\n        if ($c =~ /[a-z]/) {\n            $result .= uc($c);\n        } elsif ($c =~ /[A-Z]/) {\n            $result .= lc($c);\n        } else {\n            $result .= $c;\n        }\n    }\n    return $result;\n}",
    "    my $result = '';\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $result .= lc $char;\n        }\n        else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my $result = \"\";\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } else {\n            $result .= lc($char);\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    foreach my $c (split(//, $string)) {\n        if ($c =~ /[a-z]/) {\n            $result .= uc($c);\n        }\n        elsif ($c =~ /[A-Z]/) {\n            $result .= lc($c);\n        }\n        else {\n            $result .= $c;\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        }\n        else {\n            $result .= lc $char;\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    my($character);\n    foreach $character (split //, $string) {\n        $result .= uc $character;\n    }\n    return $result;\n}",
    "    my($result);\n    $result = join('', map { $_ =~ /[a-z]/ ? uc : lc } split(//, $string));\n    return $result;\n}",
    "    my $result = \"\";\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $result .= lc $char;\n        }\n        else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n            $result .= lc($char);\n        } else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    $result = join('', map { $_ =~ /[a-z]/ ? uc($_) : lc($_) } split(//, $string));\n    return $result;\n}",
    "    my($result) = '';\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n            $result .= lc $char;\n        } else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    $result = join '', map { $_ =~ /[a-z]/ ? uc $_ : lc $_ } split //, $string;\n    return $result;\n}",
    "    my($i);\n    my($result) = \"\";\n    for($i = 0; $i < length($string); $i++) {\n        my($c) = substr($string, $i, 1);\n        if($c =~ /[a-z]/) {\n            $c =~ tr/a-z/A-Z/;\n        }\n        elsif($c =~ /[A-Z]/) {\n            $c =~ tr/A-Z/a-z/;\n        }\n        $result .= $c;\n    }\n    return $result;\n}",
    "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}",
    "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}",
    "    my $new_string = \"\";\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $new_string .= uc($char);\n        } else {\n            $new_string .= lc($char);\n        }\n    }\n    return $new_string;\n}",
    "    my($result);\n    my($c);\n    foreach $c (split(//, $string)) {\n        if ($c =~ /[a-z]/) {\n            $result .= uc($c);\n        } elsif ($c =~ /[A-Z]/) {\n            $result .= lc($c);\n        } else {\n            $result .= $c;\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } else {\n            $result .= lc($char);\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } else {\n            $result .= lc($char);\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $result .= lc $char;\n        }\n        else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        } else {\n            $result .= lc $char;\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } else {\n            $result .= lc($char);\n        }\n    }\n    return $result;\n}",
    "    my($result) = '';\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $result .= lc($char);\n        }\n        else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    foreach my $c (split //, $string) {\n        if ($c =~ /[a-z]/) {\n            $result .= uc $c;\n        } else {\n            $result .= lc $c;\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n            $result .= lc $char;\n        } else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my $result = \"\";\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n            $result .= lc $char;\n        } else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my($result) = \"\";\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        } else {\n            $result .= lc $char;\n        }\n    }\n    return $result;\n}",
    "    my($result) = \"\";\n    foreach my $char (split //, $string) {\n        $result .= is_upper($char) ? lc($char) : uc($char);\n    }\n    return $result;\n}",
    "    my($result) = \"\";\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $result .= lc $char;\n        }\n        else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    my($char);\n    foreach $char (split(//, $string)) {\n        $result .= isupper($char) ? lc($char) : uc($char);\n    }\n    return $result;\n}",
    "    my @chars = split(//, $string);\n    my @new_chars = map {\n        if ($_ =~ /[a-z]/) {\n            uc($_);\n        } elsif ($_ =~ /[A-Z]/) {\n            lc($_);\n        } else {\n            $_;\n        }\n    } @chars;\n    return join('', @new_chars);\n}",
    "    my($result) = '';\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n            $result .= lc($char);\n        } else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my($result) = \"\";\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        } else {\n            $result .= lc $char;\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    my($character);",
    "    my($result);\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $result .= lc($char);\n        }\n        else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my($result) = \"\";\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n            $result .= lc $char;\n        } else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my($result) = '';\n    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $result .= lc $char;\n        }\n        else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my $new_string = \"\";\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $new_string .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n            $new_string .= lc($char);\n        } else {\n            $new_string .= $char;\n        }\n    }\n    return $new_string;\n}",
    "    my($result);\n    my($c);\n    foreach $c (split(//, $string)) {\n        $result .= ($c =~ /[a-z]/) ? uc($c) : lc($c);\n    }\n    return $result;\n}",
    "    my @chars = split //, $string;\n    my @toggled;\n    foreach my $char (@chars) {\n        if ($char =~ /[a-z]/) {\n            push @toggled, uc $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n            push @toggled, lc $char;\n        }\n        else {\n            push @toggled, $char;\n        }\n    }\n    return join '', @toggled;\n}",
    "    my $new_string = '';\n    for (my $i = 0; $i < length($string); $i++) {\n        my $char = substr($string, $i, 1);\n        if ($char =~ /[a-z]/) {\n            $new_string .= uc($char);\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $new_string .= lc($char);\n        }\n        else {\n            $new_string .= $char;\n        }\n    }\n    return $new_string;\n}",
    "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}",
    "    my($result) = '';\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } else {\n            $result .= lc($char);\n        }\n    }\n    return $result;\n}",
    "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}",
    "    my $result = \"\";\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        } else {\n            $result .= lc $char;\n        }\n    }\n    return $result;\n}",
    "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}",
    "    my($result) = \"\";\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } else {\n            $result .= lc($char);\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $result .= lc $char;\n        }\n        else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $result .= lc $char;\n        }\n        else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}",
    "\n    my $result = \"\";\n    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $result .= lc($char);\n        }\n        else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my($i);\n    my($result) = \"\";\n    for($i = 0; $i < length($string); $i++) {\n        $result .= toggle_char(substr($string, $i, 1));\n    }\n    return $result;\n}",
    "    my($result) = '';\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n            $result .= lc($char);\n        } else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my($result);\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $result .= lc $char;\n        }\n        else {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
    "    my($result) = \"\";\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } else {\n            $result .= lc($char);\n        }\n    }\n    return $result;\n}",
    "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
  ]
}
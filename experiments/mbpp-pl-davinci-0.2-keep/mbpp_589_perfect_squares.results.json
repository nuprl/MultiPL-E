{
  "name": "mbpp_589_perfect_squares",
  "language": "pl",
  "prompt": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_589_perfect_squares.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "results": [
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a .. $b) {\n        my $sqrt = sqrt($i);\n        push @squares, $i if $sqrt == int($sqrt);\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        push @result, $i if $sqrt == int($sqrt);\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        if ($i == int(sqrt($i)) ** 2) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my $s = int(sqrt($a));\n    $s++ while $s * $s < $a;\n    my @result;\n    while ($s * $s <= $b) {\n        push @result, $s * $s;\n        $s++;\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @result, $i;\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my $count = 0;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        my $sqrt = int(sqrt($i));\n        push @squares, $i if $sqrt * $sqrt == $i;\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        push @squares, $i if $sqrt == int($sqrt);\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        push @result, $i if $sqrt == int $sqrt;\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @result, $i;\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for (my $i = $a; $i <= $b; $i++) {\n        push @result, $i if is_perfect_square($i);\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "Undefined subroutine &main::is_perfect_square called at /tmp/tmp6506dza0.pl line 5.\n",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        push @squares, $i if is_perfect_square($i);\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "Undefined subroutine &main::is_perfect_square called at /tmp/tmpww_ld5g2.pl line 6.\n",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @result, $i;\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @perfect_squares;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt $i;\n        push @perfect_squares, $i if $sqrt == int $sqrt;\n    }\n    return @perfect_squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @result, $i;\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $n ($a..$b) {\n        my $sqrt = sqrt($n);\n        push @squares, $n if $sqrt == int($sqrt);\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    my $i = $a;\n    while ($i <= $b) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @result, $i;\n        }\n        $i++;\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        push @squares, $i if $sqrt == int($sqrt);\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a .. $b) {\n        my $sqrt = sqrt($i);\n        push @result, $i if $sqrt == int($sqrt);\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp2yz59j04.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmp2yz59j04.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @result, $i;\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        push @squares, $i if $sqrt == int($sqrt);\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @result, $i;\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my $count = 0;\n    for (my $i = $a; $i <= $b; $i++) {\n        $count++ if $i == sqrt($i) ** 2;\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpy97vn_j6.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpy97vn_j6.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @perfect_squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @perfect_squares, $i;\n        }\n    }\n    return @perfect_squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpl6qv4_y7.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmpl6qv4_y7.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my $min = int(sqrt($a));\n    my $max = int(sqrt($b));\n    return [ map { $_ * $_ } $min .. $max ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp46oofgl7.pl line 8.\nBEGIN failed--compilation aborted at /tmp/tmp46oofgl7.pl line 8.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @result, $i;\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my $c = 0;\n    for (my $i = $a; $i <= $b; $i++) {\n        if (is_perfect_square($i)) {\n            $c++;\n        }\n    }\n    return $c;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmplydy1jqb.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmplydy1jqb.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my $count = 0;\n    for my $i ($a..$b) {\n        $count++ if $i == sqrt($i) ** 2;\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpi09sc071.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpi09sc071.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @result, $i;\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @result, $i;\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        push @squares, $i if $sqrt == int($sqrt);\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a .. $b) {\n        push @squares, $i if $i == sqrt($i) ** 2;\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpzdfqjk2u.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpzdfqjk2u.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my $s = int(sqrt($a));\n    my $e = int(sqrt($b));\n    my @result;\n    for (my $i = $s; $i <= $e; $i++) {\n        push @result, $i * $i;\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpnocs174s.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmpnocs174s.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @result, $i;\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my $x = int(sqrt($a));\n    my $y = int(sqrt($b));\n    my @result;\n    for ($x .. $y) {\n        push @result, $_ * $_;\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpj3x5oaqt.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmpj3x5oaqt.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        push @squares, $i if $i == sqrt($i)**2;\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        push @squares, $i if $i == sqrt($i) ** 2;\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpdxz3ft0p.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpdxz3ft0p.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        push @squares, $i if $sqrt == int($sqrt);\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        push @result, $i if $sqrt == int($sqrt);\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        push @squares, $i if $sqrt == int($sqrt);\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my $i = int(sqrt($a));\n    my $j = int(sqrt($b));\n    return $j - $i + 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpnpa9d6xg.pl line 8.\nBEGIN failed--compilation aborted at /tmp/tmpnpa9d6xg.pl line 8.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        push @result, $i if $sqrt == int($sqrt);\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my $c = 0;\n    for(my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if($sqrt == int($sqrt)) {\n            $c++;\n        }\n    }\n    return $c;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpurnamari.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmpurnamari.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @perfect_squares;\n    for my $i ($a..$b) {\n        push @perfect_squares, $i if $i == sqrt($i)**2;\n    }\n    return @perfect_squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123682,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpsj7wbvps.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpsj7wbvps.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a..$b) {\n        if (is_perfect_square($i)) {\n            push @result, $i;\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpescg4nza.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmpescg4nza.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        push @result, $i if $sqrt == int($sqrt);\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        push @squares, $i if $i == sqrt($i)**2;\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a .. $b) {\n        my $sqrt = sqrt($i);\n        push @result, $i if $sqrt == int($sqrt);\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp2yz59j04.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmp2yz59j04.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my $i = int(sqrt($a));\n    my $j = int(sqrt($b));\n    my @squares;\n    while ($i <= $j) {\n        push @squares, $i * $i;\n        $i++;\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp6djxx4z5.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmp6djxx4z5.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        push @squares, $i if $i == sqrt($i)**2;\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123682,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpwget09yj.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpwget09yj.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @result, $i;\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        push @squares, $i if $sqrt == int($sqrt);\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        push @squares, $i if $i == sqrt($i) ** 2;\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpdxz3ft0p.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpdxz3ft0p.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        push @squares, $i if $i == sqrt($i)**2;\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my $n = int(sqrt($b));\n    my $m = int(sqrt($a));\n    my $count = 0;\n    for (my $i = $m; $i <= $n; $i++) {\n        $count++ if ($i * $i >= $a && $i * $i <= $b);\n    }\n    return $count;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmps8589ajr.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmps8589ajr.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a .. $b) {\n        push @result, $i if $i == int(sqrt($i))**2;\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp2c8b8ap7.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmp2c8b8ap7.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my $n = int(sqrt($a));\n    my $m = int(sqrt($b));\n    return $m - $n + 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpub4egvq7.pl line 8.\nBEGIN failed--compilation aborted at /tmp/tmpub4egvq7.pl line 8.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @perfect_squares;\n    my $i = $a;\n    while ($i <= $b) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @perfect_squares, $i;\n        }\n        $i++;\n    }\n    return @perfect_squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp2081rof7.pl line 15.\nBEGIN failed--compilation aborted at /tmp/tmp2081rof7.pl line 15.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my $s = int(sqrt($a));\n    my $e = int(sqrt($b));\n    return $s == sqrt($a) ? $s : $s + 1, $e;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpwuj9xbvw.pl line 8.\nBEGIN failed--compilation aborted at /tmp/tmpwuj9xbvw.pl line 8.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @result, $i;\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a..$b) {\n        push @result, $i if $i == sqrt($i)**2;\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp2yp5qxzg.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmp2yp5qxzg.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares = ();\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpf5pjllmk.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmpf5pjllmk.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my $n = int(sqrt($b));\n    my @squares = map { $_ * $_ } 1 .. $n;\n    my $i = 0;\n    while ($squares[$i] < $a) {\n        $i++;\n    }\n    return @squares[$i .. $#squares];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        push @squares, $i if $i == sqrt($i)**2;\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @result, $i;\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @result, $i;\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        push @result, $i if $sqrt == int($sqrt);\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a..$b) {\n        push @result, $i if $i == sqrt($i)**2;\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp2yp5qxzg.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmp2yp5qxzg.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        push @squares, $i if $sqrt == int($sqrt);\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        if ($i == int(sqrt($i)) ** 2) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @perfect_squares;\n    for my $i ($a..$b) {\n        push @perfect_squares, $i if is_perfect_square($i);\n    }\n    return @perfect_squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmphtl87tpz.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmphtl87tpz.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result = ();\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @result, $i;\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpvsov7vos.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmpvsov7vos.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a..$b) {\n        push @result, $i if $i == sqrt($i)**2;\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp2yp5qxzg.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmp2yp5qxzg.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        push @result, $i if $sqrt == int($sqrt);\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        push @result, $i if $sqrt == int($sqrt);\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my $result = 0;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            $result++;\n        }\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp3dh3xsa4.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmp3dh3xsa4.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a .. $b) {\n        my $sqrt = sqrt($i);\n        push @squares, $i if $sqrt == int($sqrt);\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result = ();\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @result, $i;\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpvsov7vos.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmpvsov7vos.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a .. $b) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        push @squares, $i if $i == sqrt($i)**2;\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        push @squares, $i if $i == sqrt($i) ** 2;\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @perfect_squares;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @perfect_squares, $i;\n        }\n    }\n    return @perfect_squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmprk29362j.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmprk29362j.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @result, $i;\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        push @squares, $i if $sqrt == int($sqrt);\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        push @squares, $i if $i == sqrt($i)**2;\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        push @squares, $i if $i == sqrt($i) ** 2;\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        push @squares, $i if $i == sqrt($i) ** 2;\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpdxz3ft0p.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpdxz3ft0p.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a .. $b) {\n        my $sqrt = sqrt $i;\n        push @result, $i if $sqrt == int $sqrt;\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpja70gdr1.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmpja70gdr1.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        push @squares, $i if $i == sqrt($i)**2;\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123682,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpwget09yj.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpwget09yj.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        if (is_perfect_square($i)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp3mw06p93.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmp3mw06p93.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        push @result, $i if $sqrt == int($sqrt);\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a .. $b) {\n        push @squares, $i if is_perfect_square($i);\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpw0qm5_a1.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpw0qm5_a1.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result = ();\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @result, $i;\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpvsov7vos.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmpvsov7vos.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @result, $i;\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares = ();\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpf5pjllmk.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmpf5pjllmk.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        push @squares, $i if ($sqrt == int($sqrt));\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123682,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpndnoz6a4.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmpndnoz6a4.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my $n = int(sqrt($b));\n    my @squares;\n    for my $i (1..$n) {\n        my $square = $i * $i;\n        push @squares, $square if $square >= $a && $square <= $b;\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp5z7270yh.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmp5z7270yh.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @result, $i;\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @result, $i;\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my $start = int(sqrt($a));\n    my $end = int(sqrt($b));\n    my @result;\n    for (my $i = $start; $i <= $end; $i++) {\n        my $square = $i * $i;\n        if ($square >= $a && $square <= $b) {\n            push @result, $square;\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp4u9thd1q.pl line 15.\nBEGIN failed--compilation aborted at /tmp/tmp4u9thd1q.pl line 15.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        push @squares, $i if $i == sqrt($i) ** 2;\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        push @result, $i if $sqrt == int($sqrt);\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp20o6c9fi.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmp20o6c9fi.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        if ($i == sqrt($i) ** 2) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp8fr0zwvh.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmp8fr0zwvh.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a .. $b) {\n        my $sqrt = int(sqrt($i));\n        if ($sqrt * $sqrt == $i) {\n            push @result, $i;\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpp61w6xmn.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmpp61w6xmn.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @result, $i;\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @result, $i;\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my $min = int(sqrt($a));\n    my $max = int(sqrt($b));\n    my @squares;\n    for my $i ($min..$max) {\n        push @squares, $i**2;\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp4q6ys7fk.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmp4q6ys7fk.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        push @result, $i if $sqrt == int($sqrt);\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @result, $i;\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt $i;\n        push @squares, $i if $sqrt == int $sqrt;\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpufntqiwm.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmpufntqiwm.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a .. $b) {\n        my $sqrt = sqrt($i);\n        push @squares, $i if $sqrt == int($sqrt);\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        push @squares, $i if $i == sqrt($i) ** 2;\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @result, $i;\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @result, $i;\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a .. $b) {\n        my $sqrt = int(sqrt($i));\n        push @result, $i if $sqrt * $sqrt == $i;\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpkm_kejlx.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmpkm_kejlx.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        push @squares, $i if $sqrt == int($sqrt);\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        push @squares, $i if $sqrt == int($sqrt);\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        push @result, $i if $sqrt == int($sqrt);\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        push @squares, $i if $i == sqrt($i)**2;\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        push @squares, $i if $i == sqrt($i) ** 2;\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @perfect_squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        if ($i == sqrt($i) ** 2) {\n            push @perfect_squares, $i;\n        }\n    }\n    return @perfect_squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp9qfy15sv.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmp9qfy15sv.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        push @result, $i if $sqrt == int($sqrt);\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @perfect_squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @perfect_squares, $i;\n        }\n    }\n    return @perfect_squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpl6qv4_y7.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmpl6qv4_y7.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a .. $b) {\n        my $sqrt = int(sqrt($i));\n        push @result, $i if $sqrt * $sqrt == $i;\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpkm_kejlx.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmpkm_kejlx.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my $start = int(sqrt($a));\n    my $end = int(sqrt($b));\n    my @squares;\n    for my $i ($start .. $end) {\n        push @squares, $i * $i;\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpn895jniw.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmpn895jniw.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        push @result, $i if $sqrt == int($sqrt);\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        push @result, $i if $sqrt == int($sqrt);\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        push @squares, $i if $sqrt == int($sqrt);\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        push @result, $i if $sqrt == int($sqrt);\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a .. $b) {\n        push @squares, $i if is_perfect_square($i);\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpw0qm5_a1.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpw0qm5_a1.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares = ();\n    for (my $i = $a; $i <= $b; $i++) {\n        if (is_perfect_square($i)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpcqt6gm2p.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmpcqt6gm2p.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        push @squares, $i if $sqrt == int($sqrt);\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my $min = int(sqrt($a));\n    my $max = int(sqrt($b));\n    my @squares;\n    for (my $i = $min; $i <= $max; $i++) {\n        push @squares, $i * $i;\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpvcmbwi0i.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmpvcmbwi0i.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for ($a..$b) {\n        push @result, $_ if $_ == sqrt($_)**2;\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpx33q32a1.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpx33q32a1.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a .. $b) {\n        push @result, $i if $i == sqrt($i)**2;\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpftpfzmrm.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpftpfzmrm.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        push @squares, $i if $i == sqrt($i)**2;\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a .. $b) {\n        my $sqrt = sqrt($i);\n        push @squares, $i if $sqrt == int($sqrt);\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a .. $b) {\n        my $sqrt = sqrt($i);\n        push @result, $i if $sqrt == int($sqrt);\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp2yz59j04.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmp2yz59j04.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a .. $b) {\n        my $sqrt = sqrt($i);\n        push @squares, $i if $sqrt == int($sqrt);\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        push @squares, $i if $i == sqrt($i) ** 2;\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my $i = int(sqrt($a));\n    my $j = int(sqrt($b));\n    return $j - $i + 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpnpa9d6xg.pl line 8.\nBEGIN failed--compilation aborted at /tmp/tmpnpa9d6xg.pl line 8.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        push @squares, $i if $i == sqrt($i)**2;\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a .. $b) {\n        my $sqrt = sqrt $i;\n        push @squares, $i if $sqrt == int $sqrt;\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123682,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp4ulniv7l.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmp4ulniv7l.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @result, $i;\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        push @squares, $i if $sqrt == int($sqrt);\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        push @result, $i if ($sqrt == int($sqrt));\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp7swu085y.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmp7swu085y.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp6c6iy3v0.pl line 5.\nBEGIN failed--compilation aborted at /tmp/tmp6c6iy3v0.pl line 5.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @result, $i;\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        push @squares, $i if $sqrt == int($sqrt);\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my $result = [];\n    for(my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if($sqrt == int($sqrt)) {\n            push @$result, $i;\n        }\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpq5nxbp14.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmpq5nxbp14.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my $x = int(sqrt($a));\n    my $y = int(sqrt($b));\n    return $y - $x + ($a == $x * $x);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpc4r0br95.pl line 8.\nBEGIN failed--compilation aborted at /tmp/tmpc4r0br95.pl line 8.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @result, $i;\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a .. $b) {\n        my $sqrt = sqrt($i);\n        push @result, $i if $sqrt == int($sqrt);\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp2yz59j04.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmp2yz59j04.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my $c = int(sqrt($a));\n    my $d = int(sqrt($b));\n    my @result;\n    for (my $i = $c; $i <= $d; $i++) {\n        push @result, $i * $i;\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmptbntislr.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmptbntislr.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my $n = int(sqrt($b));\n    my @squares;\n    for (my $i = int(sqrt($a)); $i <= $n; $i++) {\n        push @squares, $i * $i;\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpnrh9_3kp.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmpnrh9_3kp.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @perfect_squares;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        push @perfect_squares, $i if $sqrt == int($sqrt);\n    }\n    return @perfect_squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp7czzl_ox.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmp7czzl_ox.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        push @result, $i if $sqrt == int($sqrt);\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @result, $i;\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result;\n    for my $i ($a .. $b) {\n        my $sqrt = sqrt($i);\n        push @result, $i if $sqrt == int($sqrt);\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp2yz59j04.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmp2yz59j04.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @result = ();\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        push @result, $i if ($sqrt == int($sqrt));\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpb6s8sk2m.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmpb6s8sk2m.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares = ();\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpxhpcpxyt.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmpxhpcpxyt.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int $sqrt) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpzsn12822.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmpzsn12822.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        push @squares, $i if $sqrt == int($sqrt);\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my $n = int(sqrt($b));\n    my $i = int(sqrt($a));\n    my @squares;\n    while ($i <= $n) {\n        push @squares, $i * $i;\n        $i++;\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp93bpzhds.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmp93bpzhds.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for my $i ($a..$b) {\n        my $sqrt = sqrt($i);\n        push @squares, $i if $sqrt == int($sqrt);\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my @squares;\n    for (my $i = $a; $i <= $b; $i++) {\n        my $sqrt = sqrt($i);\n        if ($sqrt == int($sqrt)) {\n            push @squares, $i;\n        }\n    }\n    return @squares;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find perfect squares between two given numbers.\nsub perfect_squares {\n    my($a, $b) = @_;\n    my $n = int(sqrt($b));\n    my @squares = map { $_ * $_ } (1..$n);\n    my @result;\n    for my $s (@squares) {\n        push @result, $s if $s >= $a;\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&perfect_squares;\n        if(eq_deeply($candidate->(1, 30),[1, 4, 9, 16, 25])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(50, 100),[64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),[100, 121, 144, 169, 196])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp2561r1um.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmp2561r1um.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    }
  ]
}
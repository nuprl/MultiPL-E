{
  "name": "mbpp_283_validate",
  "language": "pl",
  "prompt": "# Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nsub validate {\n    my($n) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_283_validate.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&validate;\n        if(eq_deeply($candidate->(1234),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(51241),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(321),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my %count;\n    my @digits = split(//,$n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $flag = 1;\n    my %hash;\n    my @arr = split(//,$n);\n    foreach my $i(@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i(keys %hash) {\n        if($hash{$i} > $i) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $flag = 1;\n    my @arr = split('',$n);\n    my %hash;\n    foreach my $i (@arr) {\n        if(exists($hash{$i})) {\n            $hash{$i}++;\n        } else {\n            $hash{$i} = 1;\n        }\n    }\n    foreach my $i (@arr) {\n        if($hash{$i} > $i) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        return 0 if $count{$digit} > $digit;\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (keys %count) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my $flag = 1;\n    while($n > 0) {\n        my $rem = $n % 10;\n        $count{$rem}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %count) {\n        if($count{$key} > $key) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my @digits = split(//,$n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash;\n    my @arr = split(\"\", $n);\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (@arr) {\n        if($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split(//, $n);\n    foreach my $d (@digits) {\n        $count{$d}++;\n    }\n    foreach my $d (@digits) {\n        if ($count{$d} > $d) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my %count;\n    $count{$_}++ for @digits;\n    for my $digit (@digits) {\n        return 0 if $count{$digit} > $digit;\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//,$n);\n    my %count;\n    ++$count{$_} for @digits;\n    foreach my $digit (keys %count) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//,$n);\n    my $flag = 1;\n    foreach my $d (@digits) {\n        my $freq = grep(/$d/,@digits);\n        if ($freq > $d) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my %count;\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %freq;\n    my $temp = $n;\n    while($temp > 0) {\n        my $digit = $temp % 10;\n        $freq{$digit}++;\n        $temp = int($temp / 10);\n    }\n    foreach my $key (keys %freq) {\n        if($freq{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $flag = 1;\n    my $temp = $n;\n    my %hash;\n    while($temp > 0) {\n        my $rem = $temp % 10;\n        $hash{$rem}++;\n        $temp = int($temp / 10);\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my %count;\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @arr = split(\"\", $n);\n    my %hash;\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (@arr) {\n        if($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my $flag = 1;\n    while($n > 0) {\n        my $rem = $n % 10;\n        $count{$rem}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %count) {\n        if($count{$key} > $key) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my %count;\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash;\n    my @arr = split(//,$n);\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (@arr) {\n        if($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash = ();\n    my $flag = 1;\n    while($n > 0) {\n        my $r = $n % 10;\n        $hash{$r}++;\n        $n = $n / 10;\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $count = 0;\n    my $flag = 0;\n    my $num = $n;\n    while($num != 0){\n        $count++;\n        $num = $num / 10;\n    }\n    my @arr = split(\"\",$n);\n    for(my $i = 0; $i < $count; $i++){\n        my $count1 = 0;\n        for(my $j = 0; $j < $count; $j++){\n            if($arr[$i] == $arr[$j]){\n                $count1++;\n            }\n        }\n        if($count1 > $arr[$i]){\n            $flag = 1;\n            last;\n        }\n    }\n    if($flag == 0){\n        return 1;\n    }\n    else{\n        return 0;\n    }\n}",
    "    my %count;\n    my @digits = split(//,$n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $count = 0;\n    my $flag = 0;\n    my $rem = 0;\n    my $temp = $n;\n    my $i = 0;\n    my @arr;\n    while($temp != 0) {\n        $rem = $temp % 10;\n        $arr[$i] = $rem;\n        $i++;\n        $temp = int($temp / 10);\n    }\n    for($i = 0; $i < scalar(@arr); $i++) {\n        for($j = 0; $j < scalar(@arr); $j++) {\n            if($arr[$i] == $arr[$j]) {\n                $count++;\n            }\n        }\n        if($count > $arr[$i]) {\n            $flag = 1;\n            last;\n        }\n        $count = 0;\n    }\n    if($flag == 1) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}",
    "    my $str = $n;\n    my @arr = split('', $str);\n    my %hash;\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (@arr) {\n        if ($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @arr = split(//, $n);\n    my %count;\n    foreach my $i (@arr) {\n        $count{$i}++;\n    }\n    foreach my $i (@arr) {\n        if ($count{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split(//,$n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $str = \"$n\";\n    my %hash;\n    foreach my $char (split //, $str) {\n        $hash{$char}++;\n    }\n    foreach my $key (keys %hash) {\n        if ($hash{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//,$n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split(//,$n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//,$n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash = ();\n    my $flag = 1;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $hash{$digit}++;\n        $n = int($n/10);\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my @digits = split(//,$n);\n    my $flag = 1;\n    foreach my $digit (@digits) {\n        my $count = grep(/$digit/,@digits);\n        if($count > $digit) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $flag = 0;\n    my @a = split(\"\", $n);\n    my %count;\n    foreach my $i (@a) {\n        $count{$i}++;\n    }\n    foreach my $i (@a) {\n        if ($count{$i} > $i) {\n            $flag = 1;\n            last;\n        }\n    }\n    if ($flag == 1) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}",
    "    my $str = $n;\n    my @arr = split(\"\",$str);\n    my %hash;\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (@arr) {\n        if($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $flag = 1;\n    my @digits = split(//,$n);\n    my %count;\n    foreach my $digit(@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit(@digits) {\n        if($count{$digit} > $digit) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n) {\n        $count{$n%10}++;\n        $n = int($n/10);\n    }\n    foreach my $key (keys %count) {\n        if($count{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $str = $n;\n    my %hash;\n    my $flag = 1;\n    while($n > 0) {\n        my $rem = $n % 10;\n        $hash{$rem}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            $flag = 0;\n            last;\n        }\n    }\n    if($flag == 1) {\n        print \"True\\n\";\n    }\n    else {\n        print \"False\\n\";\n    }\n}",
    "    my $flag = 1;\n    my $temp = $n;\n    while($temp > 0) {\n        my $rem = $temp % 10;\n        my $count = 0;\n        my $temp2 = $n;\n        while($temp2 > 0) {\n            if($temp2 % 10 == $rem) {\n                $count++;\n            }\n            $temp2 /= 10;\n        }\n        if($count > $rem) {\n            $flag = 0;\n            last;\n        }\n        $temp /= 10;\n    }\n    return $flag;\n}",
    "    my $count = 0;\n    my $flag = 1;\n    my $temp = $n;\n    my $rem = 0;\n    my $i = 0;\n    my @arr = (0,0,0,0,0,0,0,0,0,0);\n    while($temp != 0) {\n        $rem = $temp % 10;\n        $arr[$rem]++;\n        $temp = int($temp / 10);\n    }\n    while($i < 10) {\n        if($arr[$i] > $i) {\n            $flag = 0;\n            last;\n        }\n        $i++;\n    }\n    return $flag;\n}",
    "    my $flag = 1;\n    my @arr = split(\"\",$n);\n    my %hash;\n    foreach my $i (@arr) {\n        if(exists $hash{$i}) {\n            $hash{$i}++;\n        }\n        else {\n            $hash{$i} = 1;\n        }\n    }\n    foreach my $i (@arr) {\n        if($hash{$i} > $i) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    @count{@digits} = ();\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash;\n    my @arr = split(//,$n);\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (keys %hash) {\n        if($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %freq;\n    foreach my $digit (@digits) {\n        $freq{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($freq{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash = ();\n    my $flag = 0;\n    while($n > 0) {\n        my $digit = $n % 10;\n        if(exists $hash{$digit}) {\n            $hash{$digit}++;\n        } else {\n            $hash{$digit} = 1;\n        }\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            $flag = 1;\n            last;\n        }\n    }\n    if($flag == 1) {\n        return 0;\n    } else {\n        return 1;\n    }\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    $count{$_}++ for @digits;\n    my $result = 1;\n    foreach my $digit (keys %count) {\n        if ($count{$digit} > $digit) {\n            $result = 0;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $flag = 1;\n    my $temp = $n;\n    while($temp) {\n        my $digit = $temp % 10;\n        my $count = 0;\n        my $temp1 = $n;\n        while($temp1) {\n            my $digit1 = $temp1 % 10;\n            if($digit == $digit1) {\n                $count++;\n            }\n            $temp1 = int($temp1 / 10);\n        }\n        if($count > $digit) {\n            $flag = 0;\n            last;\n        }\n        $temp = int($temp / 10);\n    }\n    return $flag;\n}",
    "    my %hash;\n    my @arr = split(\"\",$n);\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (keys %hash) {\n        if($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my %count;\n    $count{$_}++ for @digits;\n    return all { $count{$_} <= $_ } @digits;\n}",
    "    my @digits = split(//,$n);\n    my %hash = ();\n    foreach my $digit (@digits) {\n        $hash{$digit}++;\n    }\n    foreach my $key (keys %hash) {\n        if ($hash{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash;\n    my @arr = split(//,$n);\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (keys %hash) {\n        if($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split //, $n;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @arr = split(//,$n);\n    my %hash;\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (keys %hash) {\n        if($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $str = $n;\n    my $len = length($str);\n    my $i = 0;\n    my $flag = 1;\n    while($i < $len) {\n        my $digit = substr($str,$i,1);\n        my $freq = () = $str =~ /$digit/g;\n        if($freq > $digit) {\n            $flag = 0;\n            last;\n        }\n        $i++;\n    }\n    return $flag;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    $count{$_}++ for @digits;\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    $count{$_}++ for @digits;\n    for my $digit (@digits) {\n        return 0 if $count{$digit} > $digit;\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %freq;\n    foreach my $d (@digits) {\n        $freq{$d}++;\n    }\n    foreach my $d (@digits) {\n        if ($freq{$d} > $d) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $flag = 0;\n    my @digits = split(//,$n);\n    my %count;\n    foreach my $digit (@digits){\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits){\n        if($count{$digit} > $digit){\n            $flag = 1;\n            last;\n        }\n    }\n    if($flag == 1){\n        return 0;\n    }\n    else{\n        return 1;\n    }\n}",
    "    my %hash = ();\n    my $temp = $n;\n    while($temp > 0) {\n        my $digit = $temp % 10;\n        if(exists $hash{$digit}) {\n            $hash{$digit}++;\n        } else {\n            $hash{$digit} = 1;\n        }\n        $temp = int($temp / 10);\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash;\n    my @arr = split(\"\",$n);\n    foreach my $i(@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i(@arr) {\n        if($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//,$n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $flag = 1;\n    my @digits = split(\"\",$n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $key (keys %count) {\n        if($count{$key} > $key) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my %count;\n    my @arr = split(//,$n);\n    foreach my $i (@arr) {\n        $count{$i}++;\n    }\n    foreach my $i (@arr) {\n        if($count{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $count = 0;\n    my $flag = 0;\n    my @digits = split(//,$n);\n    my %freq = ();\n    foreach my $digit (@digits) {\n        $freq{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if($freq{$digit} <= $digit) {\n            $flag = 1;\n        }\n        else {\n            $flag = 0;\n            last;\n        }\n    }\n    if($flag == 1) {\n        print \"True\";\n    }\n    else {\n        print \"False\";\n    }\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $flag = 1;\n    my @arr = split(//,$n);\n    my %hash;\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (@arr) {\n        if($hash{$i} > $i) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my %hash;\n    my @arr = split(//,$n);\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (@arr) {\n        if($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my $count = 0;\n    my %hash;\n    foreach my $digit (@digits) {\n        if (exists $hash{$digit}) {\n            $hash{$digit}++;\n        } else {\n            $hash{$digit} = 1;\n        }\n    }\n    foreach my $digit (@digits) {\n        if ($hash{$digit} <= $digit) {\n            $count++;\n        }\n    }\n    if ($count == scalar @digits) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    my %count;\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %h = ();\n    my $flag = 1;\n    while($n > 0) {\n        my $rem = $n % 10;\n        $n = int($n / 10);\n        if(exists $h{$rem}) {\n            $h{$rem}++;\n        } else {\n            $h{$rem} = 1;\n        }\n    }\n    foreach my $key (keys %h) {\n        if($h{$key} > $key) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my %hash;\n    my $flag = 1;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $hash{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $flag = 1;\n    my $temp = $n;\n    while($temp > 0) {\n        my $digit = $temp % 10;\n        my $count = 0;\n        my $temp1 = $n;\n        while($temp1 > 0) {\n            if($temp1 % 10 == $digit) {\n                $count++;\n            }\n            $temp1 /= 10;\n        }\n        if($count > $digit) {\n            $flag = 0;\n            last;\n        }\n        $temp /= 10;\n    }\n    return $flag;\n}",
    "    my @digits = split(//,$n);\n    my %hash;\n    foreach my $digit (@digits) {\n        $hash{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if($hash{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $d (@digits) {\n        $count{$d}++;\n    }\n    foreach my $d (@digits) {\n        if ($count{$d} > $d) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @arr = split(//,$n);\n    my %hash = ();\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (keys %hash) {\n        if($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split(//,$n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    $count{$_}++ for @digits;\n    foreach my $digit (keys %count) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(\"\", $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $flag = 1;\n    my %hash = ();\n    while($n > 0) {\n        my $digit = $n % 10;\n        $hash{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my %freq;\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $freq{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($freq{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $flag = 1;\n    my %hash;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $hash{$digit}++;\n        $n = $n / 10;\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my %hash;\n    my $flag = 1;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $hash{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my %hash = ();\n    my @arr = split(\"\",$n);\n    foreach my $i(@arr){\n        $hash{$i}++;\n    }\n    foreach my $i(@arr){\n        if($hash{$i} > $i){\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $flag = 1;\n    my $temp = $n;\n    while($temp > 0) {\n        my $rem = $temp % 10;\n        my $count = 0;\n        my $temp1 = $n;\n        while($temp1 > 0) {\n            my $rem1 = $temp1 % 10;\n            if($rem == $rem1) {\n                $count++;\n            }\n            $temp1 /= 10;\n        }\n        if($count > $rem) {\n            $flag = 0;\n            last;\n        }\n        $temp /= 10;\n    }\n    return $flag;\n}",
    "    my %hash = ();\n    my @arr = split(\"\",$n);\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (@arr) {\n        if($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $temp = $n;\n    my $count = 0;\n    my $flag = 1;\n    my $rem;\n    my @arr;\n    while($temp != 0) {\n        $rem = $temp % 10;\n        $arr[$rem]++;\n        $temp = int($temp / 10);\n    }\n    for(my $i = 0; $i < 10; $i++) {\n        if($arr[$i] > $i) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my %freq;\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $freq{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($freq{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split(//,$n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @arr = split(//, $n);\n    my %hash;\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (@arr) {\n        if($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $flag = 1;\n    my @arr = split(//,$n);\n    my %hash;\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (keys %hash) {\n        if($hash{$i} > $i) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my %count;\n    my @digits = split(//,$n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash;\n    my @arr = split(//,$n);\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (@arr) {\n        if($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @arr = split(\"\", $n);\n    my %hash;\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (keys %hash) {\n        if ($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash = ();\n    my @arr = split(//,$n);\n    foreach my $i (@arr) {\n        if(exists $hash{$i}) {\n            $hash{$i}++;\n        } else {\n            $hash{$i} = 1;\n        }\n    }\n    foreach my $i (@arr) {\n        if($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $str = $n;\n    my @arr = split(\"\", $str);\n    my %hash = ();\n    foreach my $i (@arr) {\n        if (exists $hash{$i}) {\n            $hash{$i} = $hash{$i} + 1;\n        } else {\n            $hash{$i} = 1;\n        }\n    }\n    foreach my $i (@arr) {\n        if ($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $flag = 1;\n    my %hash;\n    while($n > 0) {\n        my $rem = $n % 10;\n        $hash{$rem}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my %hash = ();\n    my @arr = split(//,$n);\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (@arr) {\n        if($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash;\n    my @arr = split(//,$n);\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (keys %hash) {\n        if($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash;\n    my @arr = split('',$n);\n    foreach my $i(@arr) {\n        $hash{$i}++;\n    }\n    foreach my $j(keys %hash) {\n        if($hash{$j} > $j) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    $count{$_}++ for split //, $n;\n    for my $digit (split //, $n) {\n        return 0 if $count{$digit} > $digit;\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %frequency;\n    foreach my $digit (@digits) {\n        $frequency{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($frequency{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//,$n);\n    my %count;\n    foreach my $d (@digits) {\n        $count{$d}++;\n    }\n    foreach my $d (@digits) {\n        if($count{$d} > $d) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @a = split(\"\", $n);\n    my $count = 0;\n    my $flag = 0;\n    for(my $i = 0; $i < scalar(@a); $i++) {\n        $count = 0;\n        for(my $j = 0; $j < scalar(@a); $j++) {\n            if($a[$i] == $a[$j]) {\n                $count++;\n            }\n        }\n        if($count > $a[$i]) {\n            $flag = 1;\n            last;\n        }\n    }\n    if($flag == 1) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}",
    "    my %hash;\n    my $flag = 0;\n    my $temp = $n;\n    while($temp > 0) {\n        my $rem = $temp % 10;\n        $hash{$rem}++;\n        $temp = int($temp / 10);\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            $flag = 1;\n            last;\n        }\n    }\n    if($flag == 1) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split('', $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash;\n    my @arr = split(//,$n);\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (@arr) {\n        if($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//,$n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @a = split(//,$n);\n    my %h;\n    foreach my $i (@a) {\n        $h{$i}++;\n    }\n    foreach my $i (keys %h) {\n        if($h{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $str = $n;\n    my %hash;\n    while ($str > 0) {\n        my $rem = $str % 10;\n        $hash{$rem}++;\n        $str = int($str / 10);\n    }\n    foreach my $key (keys %hash) {\n        if ($hash{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my $flag = 1;\n    while($n != 0) {\n        my $rem = $n % 10;\n        $count{$rem}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %count) {\n        if($count{$key} > $key) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        $hash{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %hash) {\n        if ($hash{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split('', $n);\n    my %count;\n    $count{$_}++ for @digits;\n    return all { $count{$_} <= $_ } @digits;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n) {\n        $count{$n%10}++;\n        $n /= 10;\n    }\n    foreach my $key (keys %count) {\n        return 0 if $count{$key} > $key;\n    }\n    return 1;\n}",
    "    my $flag = 1;\n    my @arr = split(\"\",$n);\n    my %hash;\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (@arr) {\n        if($hash{$i} > $i) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my %count;\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $count = 0;\n    my @arr = split('',$n);\n    my %hash;\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (@arr) {\n        if ($hash{$i} <= $i) {\n            $count++;\n        }\n    }\n    if ($count == scalar @arr) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//,$n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash;\n    my @arr = split(//,$n);\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (keys %hash) {\n        if($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//,$n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $flag = 1;\n    my @a = split(\"\",$n);\n    my %count;\n    $count{$_}++ for @a;\n    foreach my $key (keys %count) {\n        if($count{$key} > $key) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//,$n);\n    my %count;\n    $count{$_}++ for @digits;\n    foreach my $key (keys %count) {\n        if ($count{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $flag = 0;\n    my @arr = split(\"\",$n);\n    my %hash;\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (@arr) {\n        if($hash{$i} > $i) {\n            $flag = 1;\n            last;\n        }\n    }\n    if($flag == 1) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}",
    "    my %count;\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my %count;\n    $count{$_}++ for @digits;\n    for my $digit (@digits) {\n        return 0 if $count{$digit} > $digit;\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %counts = ();\n    foreach my $digit (@digits) {\n        $counts{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($counts{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $flag = 0;\n    my @arr = split(//,$n);\n    my %hash;\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (keys %hash) {\n        if($hash{$i} > $i) {\n            $flag = 1;\n            last;\n        }\n    }\n    if($flag == 1) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %hash = ();\n    foreach my $digit (@digits) {\n        if (exists $hash{$digit}) {\n            $hash{$digit}++;\n        } else {\n            $hash{$digit} = 1;\n        }\n    }\n    foreach my $key (keys %hash) {\n        if ($hash{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $flag = 0;\n    my @a = split(\"\", $n);\n    my %hash;\n    foreach my $i (@a) {\n        $hash{$i}++;\n    }\n    foreach my $i (keys %hash) {\n        if($hash{$i} > $i) {\n            $flag = 1;\n            last;\n        }\n    }\n    if($flag == 1) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}",
    "    my @digits = split(//, $n);\n    my %freq;\n    foreach my $d (@digits) {\n        $freq{$d}++;\n    }\n    foreach my $d (@digits) {\n        if ($freq{$d} > $d) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $flag = 1;\n    my %count;\n    while($n != 0) {\n        my $rem = $n % 10;\n        $count{$rem}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %count) {\n        if($count{$key} > $key) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash = ();\n    while($n > 0) {\n        my $digit = $n % 10;\n        $hash{$digit}++;\n        $n = int($n / 10);\n    }\n    my $flag = 1;\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $str = $n;\n    my $len = length($str);\n    my $i = 0;\n    my $j = 0;\n    my $count = 0;\n    my $flag = 0;\n    for($i = 0; $i < $len; $i++) {\n        $count = 0;\n        for($j = 0; $j < $len; $j++) {\n            if($str % 10 == $str % 10) {\n                $count++;\n            }\n            $str = int($str / 10);\n        }\n        if($count > $str % 10) {\n            $flag = 1;\n            last;\n        }\n    }\n    if($flag == 1) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}",
    "    my %count;\n    my @digits = split(//,$n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $flag = 1;\n    my @a = split(\"\",$n);\n    my %hash;\n    foreach my $i (@a) {\n        $hash{$i}++;\n    }\n    foreach my $i (keys %hash) {\n        if($hash{$i} > $i) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//,$n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash;\n    my $temp = $n;\n    while($temp > 0) {\n        my $rem = $temp % 10;\n        $hash{$rem}++;\n        $temp = int($temp / 10);\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}\nmy $n = <STDIN>;\nchomp($n);\nmy $result = validate($n);\nif($result == 1) {\n    print \"TRUE\";\n}\nelse {\n    print \"FALSE\";\n}",
    "    my %hash = ();\n    my @arr = split(\"\",$n);\n    foreach my $i(@arr){\n        $hash{$i}++;\n    }\n    foreach my $i(@arr){\n        if($hash{$i} > $i){\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split //, $n;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my %count;\n    $count{$_}++ for @digits;\n    foreach my $digit (@digits) {\n        return 0 if $count{$digit} > $digit;\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %freq = ();\n    foreach my $d (@digits) {\n        $freq{$d}++;\n    }\n    foreach my $d (@digits) {\n        if ($freq{$d} > $d) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split(\"\", $n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash;\n    my $flag = 1;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $hash{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my @digits = split(\"\",$n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $flag = 1;\n    my @digits = split(//,$n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if($count{$digit} > $digit) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $count = 0;\n    my $flag = 0;\n    my @arr = split(\"\",$n);\n    my %hash = map{$_,0} @arr;\n    foreach my $i(@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i(@arr) {\n        if($hash{$i} <= $i) {\n            $count++;\n        }\n    }\n    if($count == scalar(@arr)) {\n        $flag = 1;\n    }\n    return $flag;\n}",
    "    my $str = $n;\n    my $len = length($str);\n    my $i = 0;\n    my $count = 0;\n    my $flag = 0;\n    for($i = 0; $i < $len; $i++) {\n        $count = 0;\n        for($j = 0; $j < $len; $j++) {\n            if(substr($str,$i,1) eq substr($str,$j,1)) {\n                $count++;\n            }\n        }\n        if($count > int(substr($str,$i,1))) {\n            $flag = 1;\n            last;\n        }\n    }\n    if($flag == 1) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}",
    "    my $count = 0;\n    my $temp = $n;\n    my $rem = 0;\n    my $flag = 0;\n    while($n != 0) {\n        $rem = $n % 10;\n        $n = int($n / 10);\n        $count = 0;\n        $temp = $n;\n        while($temp != 0) {\n            if($rem == $temp % 10) {\n                $count++;\n            }\n            $temp = int($temp / 10);\n        }\n        if($count > $rem) {\n            $flag = 1;\n            last;\n        }\n    }\n    if($flag == 1) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}",
    "    my @digits = split //, $n;\n    my %count;\n    $count{$_}++ for @digits;\n    for my $digit (@digits) {\n        return 0 if $count{$digit} > $digit;\n    }\n    return 1;\n}",
    "    my @arr = split(\"\", $n);\n    my %hash;\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (@arr) {\n        if($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my %freq;\n    foreach my $digit (@digits) {\n        $freq{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($freq{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $str = $n;\n    my %hash;\n    my $flag = 1;\n    while($n > 0) {\n        my $rem = $n % 10;\n        $hash{$rem}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            $flag = 0;\n            last;\n        }\n    }\n    if($flag == 1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my %count;\n    my @digits = split //, $n;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my $flag = 0;\n    while($n > 0) {\n        my $rem = $n % 10;\n        $count{$rem}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %count) {\n        if($count{$key} > $key) {\n            $flag = 1;\n            last;\n        }\n    }\n    if($flag == 1) {\n        return 0;\n    } else {\n        return 1;\n    }\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}"
  ]
}
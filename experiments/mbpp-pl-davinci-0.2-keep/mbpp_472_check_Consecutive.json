{
  "name": "mbpp_472_check_Consecutive",
  "language": "pl",
  "prompt": "# Write a python function to check whether the given list contains consecutive numbers or not.\nsub check_Consecutive {\n    my($l) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_472_check_Consecutive.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&check_Consecutive;\n        if(eq_deeply($candidate->([1, 2, 3, 4, 5]),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3, 5, 6]),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 1]),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my @list = @$l;\n    my $flag = 0;\n    my $len = scalar @list;\n    for(my $i = 0; $i < $len; $i++) {\n        if($list[$i] != $list[$i+1] - 1) {\n            $flag = 1;\n            last;\n        }\n    }\n    if($flag == 1) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}",
    "    my @list = @$l;\n    my $count = 0;\n    for(my $i = 0; $i < scalar(@list) - 1; $i++) {\n        if($list[$i] + 1 == $list[$i + 1]) {\n            $count++;\n        }\n    }\n    if($count == scalar(@list) - 1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my @list = @$l;\n    my $flag = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $n = scalar(@list);\n    for($i = 0; $i < $n; $i++) {\n        for($j = $i + 1; $j < $n; $j++) {\n            if($list[$i] > $list[$j]) {\n                $k = $list[$i];\n                $list[$i] = $list[$j];\n                $list[$j] = $k;\n            }\n        }\n    }\n    for($i = 0; $i < $n - 1; $i++) {\n        if($list[$i] + 1 != $list[$i + 1]) {\n            $flag = 1;\n            last;\n        }\n    }\n    if($flag == 1) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}",
    "    my @list = @$l;\n    my $flag = 0;\n    my $i = 0;\n    my $j = 1;\n    my $n = scalar @list;\n    while($j < $n) {\n        if($list[$i] + 1 == $list[$j]) {\n            $flag = 1;\n        }\n        else {\n            $flag = 0;\n            last;\n        }\n        $i++;\n        $j++;\n    }\n    return $flag;\n}",
    "    my @list = @$l;\n    my $flag = 0;\n    my $n = scalar(@list);\n    my $min = min(@list);\n    my $max = max(@list);\n    if($n == ($max - $min + 1)){\n        $flag = 1;\n    }\n    return $flag;\n}",
    "    my @list = @$l;\n    my $flag = 0;\n    my $size = scalar(@list);\n    for(my $i = 0; $i < $size - 1; $i++) {\n        if(abs($list[$i] - $list[$i+1]) == 1) {\n            $flag = 1;\n        }\n        else {\n            $flag = 0;\n            last;\n        }\n    }\n    if($flag == 1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my @list = @$l;\n    my $flag = 0;\n    my $i;\n    for($i = 0; $i < $#list; $i++) {\n        if($list[$i] + 1 == $list[$i + 1]) {\n            $flag = 1;\n        }\n        else {\n            $flag = 0;\n            last;\n        }\n    }\n    if($flag == 1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my @list = @$l;\n    my $flag = 0;\n    my $size = scalar @list;\n    my @sorted_list = sort { $a <=> $b } @list;\n    for (my $i = 0; $i < $size - 1; $i++) {\n        if ($sorted_list[$i] + 1 != $sorted_list[$i + 1]) {\n            $flag = 1;\n            last;\n        }\n    }\n    if ($flag == 1) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}",
    "    my @list = @$l;\n    my $flag = 0;\n    my $size = scalar(@list);\n    my $i;\n    for($i = 0; $i < $size - 1; $i++) {\n        if(abs($list[$i] - $list[$i + 1]) == 1) {\n            $flag = 1;\n        }\n        else {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my @list = @{$l};\n    my $flag = 0;\n    my $size = scalar @list;\n    for(my $i = 0; $i < $size - 1; $i++) {\n        if(($list[$i + 1] - $list[$i]) == 1) {\n            $flag = 1;\n        }\n        else {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my @list = @$l;\n    my $flag = 1;\n    my $i;\n    for($i=0;$i<$#list;$i++) {\n        if($list[$i+1] - $list[$i] != 1) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my @list = @$l;\n    my $flag = 1;\n    my $i;\n    for($i = 0; $i < $#list; $i++) {\n        if($list[$i+1] - $list[$i] != 1) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my @list = @$l;\n    my $flag = 0;\n    my $i;\n    my $j;\n    for($i = 0; $i < scalar(@list) - 1; $i++) {\n        if($list[$i] + 1 == $list[$i + 1]) {\n            $flag = 1;\n        }\n        else {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my @list = @$l;\n    my $i;\n    my $j;\n    my $flag = 0;\n    for($i = 0; $i < $#list; $i++) {\n        for($j = $i + 1; $j < $#list; $j++) {\n            if($list[$i] == $list[$j]) {\n                $flag = 1;\n                last;\n            }\n        }\n    }\n    if($flag == 1) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}",
    "    my @list = @$l;\n    my $flag = 0;\n    for(my $i = 0; $i < scalar(@list)-1; $i++) {\n        if(abs($list[$i]-$list[$i+1]) == 1) {\n            $flag = 1;\n        }\n        else {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my @list = @$l;\n    my $flag = 0;\n    my $size = @list;\n    my $i;\n    for($i = 0; $i < $size - 1; $i++) {\n        if(abs($list[$i] - $list[$i + 1]) == 1) {\n            $flag = 1;\n        }\n        else {\n            $flag = 0;\n            last;\n        }\n    }\n    if($flag == 1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my @list = @$l;\n    my $flag = 0;\n    my $size = scalar @list;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $count = 0;\n    my $count1 = 0;\n    my $count2 = 0;\n    my $count3 = 0;\n    my $count4 = 0;\n    my $count5 = 0;\n    my $count6 = 0;\n    my $count7 = 0;\n    my $count8 = 0;\n    my $count9 = 0;\n    my $count10 = 0;\n    my $count11 = 0;\n    my $count12 = 0;\n    my $count13 = 0;\n    my $count14 = 0;\n    my $count15 = 0;\n    my $count16 = 0;\n    my $count17 = 0;\n    my $count18 = 0;\n    my $count19 = 0;\n    my $count20 = 0;\n    my $count21 = 0;\n    my $count22 = 0;\n    my $count23 = 0;\n    my $count24 = 0;\n    my $count25 = 0;\n    my $count26 = 0;\n    my $count27 = 0;\n    my $count28 = 0;\n    my $count29 = 0;\n    my $count30 = 0;\n    my $count31 = 0;\n    my $count32 = 0;\n    my $count33 = 0;\n    my $count34 = 0;\n    my $count35 = 0;\n    my $count36 = 0;\n    my $count37 = 0;\n    my $count38 = 0;\n    my $count39 = 0;\n    my $count40 = 0;\n    my $count41 = 0;\n    my $count42 = 0;\n    my $count43 = 0;\n    my $count44 = 0;\n    my $count45 = 0;\n    my $count46 = 0;\n    my $count47 = 0;\n    my $count48 = 0;\n    my $count49 = 0;\n    my $count50 = 0;\n",
    "    my @list = @$l;\n    my $flag = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $count = 0;\n    my $count1 = 0;\n    my $count2 = 0;\n    my $count3 = 0;\n    my $count4 = 0;\n    my $count5 = 0;\n    my $count6 = 0;\n    my $count7 = 0;\n    my $count8 = 0;\n    my $count9 = 0;\n    my $count10 = 0;\n    my $count11 = 0;\n    my $count12 = 0;\n    my $count13 = 0;\n    my $count14 = 0;\n    my $count15 = 0;\n    my $count16 = 0;\n    my $count17 = 0;\n    my $count18 = 0;\n    my $count19 = 0;\n    my $count20 = 0;\n    my $count21 = 0;\n    my $count22 = 0;\n    my $count23 = 0;\n    my $count24 = 0;\n    my $count25 = 0;\n    my $count26 = 0;\n    my $count27 = 0;\n    my $count28 = 0;\n    my $count29 = 0;\n    my $count30 = 0;\n    my $count31 = 0;\n    my $count32 = 0;\n    my $count33 = 0;\n    my $count34 = 0;\n    my $count35 = 0;\n    my $count36 = 0;\n    my $count37 = 0;\n    my $count38 = 0;\n    my $count39 = 0;\n    my $count40 = 0;\n    my $count41 = 0;\n    my $count42 = 0;\n    my $count43 = 0;\n    my $count44 = 0;\n    my $count45 = 0;\n    my $count46 = 0;\n    my $count47 = 0;\n    my $count48 = 0;\n    my $count49 = 0;\n    my $count50 = 0;\n    my $count51 = 0;\n    my",
    "    my @list = @$l;\n    my $count = 0;\n    my $flag = 0;\n    my $size = scalar @list;\n    for(my $i = 0; $i < $size; $i++) {\n        for(my $j = $i + 1; $j < $size; $j++) {\n            if($list[$i] > $list[$j]) {\n                $flag = 1;\n                $count++;\n            }\n        }\n    }\n    if($count == $size - 1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my @list = @$l;\n    my $flag = 0;\n    my $i = 0;\n    my $j = 0;\n    my $n = scalar @list;\n    for($i = 0; $i < $n; $i++) {\n        for($j = $i + 1; $j < $n; $j++) {\n            if($list[$i] > $list[$j]) {\n                $temp = $list[$i];\n                $list[$i] = $list[$j];\n                $list[$j] = $temp;\n            }\n        }\n    }\n    for($i = 0; $i < $n - 1; $i++) {\n        if($list[$i] + 1 == $list[$i + 1]) {\n            $flag = 1;\n        }\n        else {\n            $flag = 0;\n            last;\n        }\n    }\n    if($flag == 1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}"
  ]
}
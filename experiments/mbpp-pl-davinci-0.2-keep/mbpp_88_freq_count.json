{
  "name": "mbpp_88_freq_count",
  "language": "pl",
  "prompt": "# Write a function to get the frequency of all the elements in a list, returned as a dictionary.\nsub freq_count {\n    my($list1) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_88_freq_count.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&freq_count;\n        if(eq_deeply($candidate->([10, 10, 10, 10, 20, 20, 20, 20, 40, 40, 50, 50, 30]),{10 => 4, 20 => 4, 40 => 2, 50 => 2, 30 => 1})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3, 4, 3, 2, 4, 1, 3, 1, 4]),{1 => 3, 2 => 2, 3 => 3, 4 => 3})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([5, 6, 7, 4, 9, 10, 4, 5, 6, 7, 9, 5]),{10 => 1, 5 => 3, 6 => 2, 7 => 2, 4 => 2, 9 => 2})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my %hash1 = ();\n    foreach my $element (@$list1) {\n        $hash1{$element}++;\n    }\n    return %hash1;\n}",
    "    my %hash = ();\n    foreach my $item (@$list1) {\n        $hash{$item}++;\n    }\n    return \\%hash;\n}",
    "    my %freq;\n    foreach my $element (@$list1) {\n        $freq{$element}++;\n    }\n    return %freq;\n}",
    "    my %freq_count;\n    foreach my $element (@$list1) {\n        $freq_count{$element}++;\n    }\n    return %freq_count;\n}",
    "    my %freq;\n    foreach my $element (@$list1) {\n        $freq{$element}++;\n    }\n    return %freq;\n}",
    "    my %freq;\n    foreach my $item (@$list1) {\n        $freq{$item}++;\n    }\n    return \\%freq;\n}",
    "    my %count;\n    foreach my $element (@$list1) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %freq;\n    foreach my $item (@$list1) {\n        $freq{$item}++;\n    }\n    return %freq;\n}",
    "    my %count;\n    foreach my $element (@$list1) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %freq;\n    foreach my $item (@$list1) {\n        $freq{$item}++;\n    }\n    return \\%freq;\n}",
    "    my %freq;\n    foreach my $item (@$list1) {\n        $freq{$item}++;\n    }\n    return \\%freq;\n}",
    "    my %freq;\n    foreach my $element (@$list1) {\n        $freq{$element}++;\n    }\n    return %freq;\n}",
    "    my %freq;\n    foreach my $item (@$list1) {\n        $freq{$item}++;\n    }\n    return \\%freq;\n}",
    "    my %count;\n    foreach my $element (@$list1) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %freq;\n    foreach my $item (@$list1) {\n        $freq{$item}++;\n    }\n    return \\%freq;\n}",
    "    my %freq;\n    foreach my $item (@$list1) {\n        $freq{$item}++;\n    }\n    return \\%freq;\n}",
    "    my %freq_count;\n    foreach my $element (@$list1) {\n        $freq_count{$element}++;\n    }\n    return %freq_count;\n}",
    "    my %freq;\n    foreach my $elem (@$list1) {\n        $freq{$elem}++;\n    }\n    return %freq;\n}",
    "    my %freq;\n    foreach my $item (@$list1) {\n        $freq{$item}++;\n    }\n    return \\%freq;\n}",
    "    my %count;\n    foreach my $element (@$list1) {\n        $count{$element}++;\n    }\n    return %count;\n}"
  ]
}
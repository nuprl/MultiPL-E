{
  "name": "mbpp_8_square_nums",
  "language": "pl",
  "prompt": "# Write a function to find squares of individual elements in a list.\nsub square_nums {\n    my($nums) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_8_square_nums.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&square_nums;\n        if(eq_deeply($candidate->([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 4, 9, 16, 25, 36, 49, 64, 81, 100])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([10, 20, 30]),[100, 400, 900])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([12, 15]),[144, 225])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my @squares = map { $_ * $_ } @$nums;\n    return \\@squares;\n}",
    "    my @squares = map { $_ * $_ } @$nums;\n    return \\@squares;\n}",
    "    my @squares = map { $_ ** 2 } @$nums;\n    return \\@squares;\n}",
    "    my @squares = map { $_ * $_ } @$nums;\n    return \\@squares;\n}",
    "    my @squares;\n    foreach my $num (@$nums) {\n        push @squares, $num * $num;\n    }\n    return \\@squares;\n}",
    "    my @squares = ();\n    foreach my $num (@$nums) {\n        push @squares, $num * $num;\n    }\n    return \\@squares;\n}",
    "    my @squares = map { $_ * $_ } @$nums;\n    return \\@squares;\n}",
    "    my @squares = map { $_ ** 2 } @$nums;\n    return \\@squares;\n}",
    "    my @squares = map { $_ ** 2 } @$nums;\n    return \\@squares;\n}",
    "    my @squares = map { $_ * $_ } @$nums;\n    return \\@squares;\n}",
    "    my @squares = map { $_ * $_ } @$nums;\n    return \\@squares;\n}",
    "    my @squares = map { $_ * $_ } @$nums;\n    return \\@squares;\n}",
    "    my @squares = map { $_ ** 2 } @$nums;\n    return \\@squares;\n}",
    "    my @squares = map { $_ * $_ } @$nums;\n    return \\@squares;\n}",
    "    my @squares;\n    foreach my $num (@$nums) {\n        push @squares, $num ** 2;\n    }\n    return \\@squares;\n}",
    "    my @squares = map { $_ * $_ } @$nums;\n    return \\@squares;\n}",
    "    my @squares = map { $_ * $_ } @$nums;\n    return \\@squares;\n}",
    "    my @squares;\n    foreach my $num (@$nums) {\n        push @squares, $num * $num;\n    }\n    return \\@squares;\n}",
    "    my @squares;\n    foreach my $num (@$nums) {\n        push @squares, $num * $num;\n    }\n    return \\@squares;\n}",
    "    my @squares = map { $_ * $_ } @$nums;\n    return \\@squares;\n}"
  ]
}
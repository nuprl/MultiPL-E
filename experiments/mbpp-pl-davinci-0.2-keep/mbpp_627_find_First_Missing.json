{
  "name": "mbpp_627_find_First_Missing",
  "language": "pl",
  "prompt": "# Write a python function to find the smallest missing number from a sorted list of natural numbers.\nsub find_First_Missing {\n    my($array) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_627_find_First_Missing.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&find_First_Missing;\n        if(eq_deeply($candidate->([0, 1, 2, 3]),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([0, 1, 2, 6, 9]),3)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 3, 5, 8, 9]),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $i = 0;\n    my $j = $#{$array};\n    while($i <= $j) {\n        my $mid = int(($i + $j) / 2);\n        if($array->[$mid] != $mid + 1) {\n            if($mid == 0 || $array->[$mid - 1] == $mid) {\n                return $mid + 1;\n            }\n            $j = $mid - 1;\n        } else {\n            $i = $mid + 1;\n        }\n    }\n    return $i + 1;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low == $size) {\n        return $size + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        if ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if($array->[$mid] != $mid + 1 && $mid == $low) {\n            return $mid + 1;\n        }\n        if($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        if($array->[$mid] == $mid + 1) {\n            $low = $mid + 1;\n        }\n        else {\n            $high = $mid - 1;\n        }\n    }\n    return $size + 1;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        } elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low == $size) {\n        return $size + 1;\n    }\n}",
    "    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n   ",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if($array->[$mid] != $mid + 1 && $mid == $low) {\n            return $mid + 1;\n        }\n        if($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        if($array->[$mid] == $mid + 1) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    if($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $i = 0;\n    my $len = scalar @$array;\n    for($i = 0; $i < $len; $i++) {\n        if($array->[$i] != $i+1) {\n            return $i+1;\n        }\n    }\n    return $i+1;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $i = 0;\n    my $j = @$array;\n    my $mid = 0;\n    while($i < $j) {\n        $mid = int(($i + $j) / 2);\n        if($array->[$mid] > $mid) {\n            $j = $mid;\n        } else {\n            $i = $mid + 1;\n        }\n    }\n    return $i;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while($low <= $high) {\n        my $mid = int(($low + $high)/2);\n        if($array->[$mid] != $mid + 1 && $mid == $low) {\n            return $mid + 1;\n        } elsif($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        } elsif($array->[$mid] == $mid + 1) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    if($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $array_size = scalar @$array;\n    my $i = 0;\n    for ($i = 0; $i < $array_size; $i++) {\n        if ($array->[$i] != $i) {\n            return $i;\n        }\n    }\n    return $array_size;\n}",
    "    my $n = @$array;\n    my $i = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($array->[$i] != $i) {\n            return $i;\n        }\n    }\n    return $n;\n}",
    "    my $i = 0;\n    my $j = scalar(@$array);\n    my $mid = 0;\n    while($i < $j) {\n        $mid = int(($i + $j) / 2);\n        if($array->[$mid] > $mid) {\n            $j = $mid;\n        }\n        else {\n            $i = $mid + 1;\n        }\n    }\n    return $i;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low == $size) {\n        return $size + 1;\n    }\n}\nmy @array = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nmy $result = find_First_Missing(\\@array);\nprint \"First Missing Number is $result\\n\";",
    "    my $size = scalar(@$array);\n    my $i = 0;\n    for ($i = 0; $i < $size; $i++) {\n        if ($array->[$i] != $i) {\n            return $i;\n        }\n    }\n    return $i;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low == $size) {\n        return $size + 1;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $min = 0;\n    my $max = 0;\n    my $flag = 0;\n    my $len = scalar(@$array);\n    for($i = 0; $i < $len; $i++) {\n        if($array->[$i] < 0) {\n            $flag = 1;\n            last;\n        }\n    }\n    if($flag == 1) {\n        return -1;\n    }\n    else {\n        $min = $array->[0];\n        $max = $array->[$len - 1];\n        for($i = $min; $i < $max; $i++) {\n            if($array->[$i] != $i) {\n                return $i;\n            }\n        }\n    }\n}",
    "    my $size = scalar @$array;\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $mid == $low) {\n            return $mid + 1;\n        }\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        if ($array->[$mid] == $mid + 1) {\n            $low = $mid + 1;\n        }\n        else {\n            $high = $mid - 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low == $size) {\n        return $size + 1;\n    }\n}",
    "    my $i = 0;\n    my $j = @$array;\n    while($i < $j){\n        if($array->[$i] != $i){\n            return $i;\n        }\n        $i++;\n    }\n    return $i;\n}",
    "    my $size = scalar @$array;\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $mid == $low) {\n            return $mid + 1;\n        }\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        if ($array->[$mid] == $mid + 1) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $count = 0;\n    my $missing_number = 0;\n    my $array_length = scalar(@$array);\n    for ($i = 0; $i < $array_length; $i++) {\n        if ($array->[$i] == $i + 1) {\n            $count++;\n        }\n    }\n    if ($count == $array_length) {\n        $missing_number = $array_length + 1;\n    }\n    else {\n        for ($j = 0; $j < $array_length; $j++) {\n            if ($array->[$j] != $j + 1) {\n                $missing_number = $j + 1;\n                last;\n            }\n        }\n    }\n    return $missing_number;\n}",
    "    my $size = @$array;\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = @$array;\n    my $low = 0;\n    my $high = $size - 1;\n    while($low <= $high) {\n        my $mid = int(($low + $high)/2);\n        if($array->[$mid] != $mid + 1 && $mid == $low) {\n            return $mid + 1;\n        }\n        if($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        if($array->[$mid] == $mid + 1) {\n            $low = $mid + 1;\n        }\n        else {\n            $high = $mid - 1;\n        }\n    }\n    return -1;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $i = 0;\n    my $j = scalar(@$array);\n    while($i < $j){\n        if($array->[$i] != $i){\n            return $i;\n        }\n        $i++;\n    }\n    return $i;\n}",
    "    my $size = @$array;\n    my $i = 0;\n    for($i = 0; $i < $size; $i++) {\n        if($array->[$i] != $i) {\n            return $i;\n        }\n    }\n    return $i;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low == $size) {\n        return $size + 1;\n    }\n}\nmy @array = (1, 2, 3, 4, 5, 6, 7, 10);\nmy $result = find_First_Missing(\\@array);\nprint \"The smallest missing number is $result\\n\";",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while($low <= $high) {\n        my $mid = int(($low + $high)/2);\n        if($array->[$mid] != $mid + 1 and $mid == $low) {\n            return $mid + 1;\n        } elsif($array->[$mid] != $mid + 1 and $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        } elsif($array->[$mid] == $mid + 1) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    if($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while($low <= $high) {\n        my $mid = int(($low + $high)/2);\n        if($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $min = 0;\n    my $max = 0;\n    my $size = @$array;\n    my $mid = 0;\n    my $flag = 0;\n    my $first_missing = 0;\n    $min = $array->[0];\n    $max = $array->[$size-1];\n    if($min != 1) {\n        return 1;\n    }\n    for($i=0;$i<$size;$i++) {\n        if($array->[$i] != $i+1) {\n            $first_missing = $i+1;\n            last;\n        }\n    }\n    return $first_missing;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $mid == $low) {\n            return $mid + 1;\n        } elsif ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        } elsif ($array->[$mid] == $mid + 1) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low == $size) {\n        return $size + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        } elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low == $size) {\n        return $size + 1;\n    }\n}",
    "    my $i = 0;\n    my $j = @$array;\n    my $mid;\n    while ($i < $j) {\n        $mid = int(($i + $j) / 2);\n        if ($array->[$mid] > $mid) {\n            $j = $mid;\n        } else {\n            $i = $mid + 1;\n        }\n    }\n    return $i;\n}",
    "    my $array_size = scalar(@$array);\n    my $low = 0;\n    my $high = $array_size - 1;\n    while($low <= $high) {\n        my $mid = int(($low + $high)/2);\n        if($array->[$mid] != $mid + 1 && $mid == $low) {\n            return $mid + 1;\n        }\n        if($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        if($array->[$mid] == $mid + 1) {\n            $low = $mid + 1;\n        }\n        else {\n            $high = $mid - 1;\n        }\n    }\n    return -1;\n}",
    "    my $size = scalar @$array;\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $i = 0;\n    my $j = scalar(@$array) - 1;\n    while ($i <= $j) {\n        my $mid = int(($i + $j) / 2);\n        if ($array->[$mid] != $mid + 1) {\n            if ($mid == 0 || $array->[$mid - 1] == $mid) {\n                return $mid + 1;\n            }\n            $j = $mid - 1;\n        } else {\n            $i = $mid + 1;\n        }\n    }\n    return $i + 1;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low == $size) {\n        return $size + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        } elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}",
    "    my $i = 0;\n    my $n = scalar @$array;\n    for($i = 0; $i < $n; $i++) {\n        if($array->[$i] != $i) {\n            return $i;\n        }\n    }\n    return $n;\n}",
    "    my $n = scalar(@$array);\n    my $i = 0;\n    while ($i < $n) {\n        if ($array->[$i] != $i) {\n            return $i;\n        }\n        $i++;\n    }\n    return $n;\n}",
    "    my $i = 0;\n    my $j = $#$array;\n    my $mid = 0;\n    while($i <= $j) {\n        $mid = int(($i+$j)/2);\n        if($array->[$mid] == $mid+1) {\n            $i = $mid+1;\n        } else {\n            $j = $mid-1;\n        }\n    }\n    return $i+1;\n}",
    "    my $min = $array->[0];\n    my $max = $array->[-1];\n    my $size = scalar @$array;\n    my $i = 0;\n    my $j = $size - 1;\n    while($i <= $j) {\n        my $mid = int(($i + $j) / 2);\n        if($array->[$mid] == $mid + $min) {\n            $i = $mid + 1;\n        }\n        else {\n            $j = $mid - 1;\n        }\n    }\n    return $i + $min;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $mid == $low) {\n            return $mid + 1;\n        }\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        if ($array->[$mid] == $mid + 1) {\n            $low = $mid + 1;\n        }\n        else {\n            $high = $mid - 1;\n        }\n    }\n    return -1;\n}",
    "    my $i = 0;\n    my $j = $#$array;\n    while($i <= $j) {\n        my $mid = int(($i+$j)/2);\n        if($array->[$mid] != $mid+1) {\n            if($mid == 0 || $array->[$mid-1] == $mid) {\n                return $mid+1;\n            }\n            else {\n                $j = $mid-1;\n            }\n        }\n        else {\n            $i = $mid+1;\n        }\n    }\n    return $i+1;\n}",
    "    my $size = scalar(@$array);\n    my $i = 0;\n    for($i = 0; $i < $size; $i++) {\n        if($array->[$i] != $i) {\n            return $i;\n        }\n    }\n    return $i;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size-1;\n    while($low <= $high) {\n        my $mid = int(($low + $high)/2);\n        if($array->[$mid] != $mid+1 && $array->[$mid-1] == $mid) {\n            return $mid+1;\n        }\n        elsif($array->[$mid] != $mid+1) {\n            $high = $mid-1;\n        }\n        else {\n            $low = $mid+1;\n        }\n    }\n    if($low > $high) {\n        return $low+1;\n    }\n}",
    "    my $i = 0;\n    my $j = 1;\n    my $len = scalar(@$array);\n    while($i < $len) {\n        if($array->[$i] != $j) {\n            return $j;\n        }\n        $i++;\n        $j++;\n    }\n    return $j;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n   ",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $first = $array->[0];\n    my $last = $array->[-1];\n    my $mid = int(($first+$last)/2);\n    my $count = @$array;\n    my $i = 0;\n    while($first <= $last) {\n        if($array->[$i] != $i) {\n            return $i;\n        }\n        $i++;\n    }\n    return $count;\n}",
    "    my $size = scalar @$array;\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $mid == $low || $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}\nmy @array = (1, 2, 3, 4, 6, 7, 8, 9, 10);\nmy $result = find_First_Missing(\\@array);\nprint $result;",
    "    my $size = scalar @$array;\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $mid == $low) {\n            return $mid + 1;\n        }\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        if ($array->[$mid] == $mid + 1) {\n            $low = $mid + 1;\n        }\n        else {\n            $high = $mid - 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$array);\n    for($i = 0; $i < $n; $i++) {\n        if($array->[$i] != $i) {\n            return $i;\n        }\n    }\n    return $n;\n}",
    "    my $i = 0;\n    my $j = $#$array;\n    my $mid;\n    while($i <= $j) {\n        $mid = int(($i+$j)/2);\n        if($array->[$mid] != $mid+1 && $array->[$mid-1] == $mid) {\n            return $mid+1;\n        } elsif($array->[$mid] != $mid+1) {\n            $j = $mid-1;\n        } else {\n            $i = $mid+1;\n        }\n    }\n    return -1;\n}",
    "    my $i = 0;\n    my $j = @$array;\n    while($i < $j) {\n        if($array->[$i] != $i) {\n            return $i;\n        }\n        $i++;\n    }\n    return $i;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if($array->[$mid] != $mid + 1 && $mid == $low) {\n            return $mid + 1;\n        }\n        if($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        if($array->[$mid] == $mid + 1) {\n            $low = $mid + 1;\n        }\n        else {\n            $high = $mid - 1;\n        }\n    }\n    return $low + 1;\n}\nmy @array = (1, 2, 3, 4, 5, 6, 7, 10);\nmy $missing = find_First_Missing(\\@array);\nprint \"Missing number is $missing\\n\";",
    "    my $size = @$array;\n    my $i = 0;\n    while($i < $size) {\n        if($array->[$i] != $i) {\n            return $i;\n        }\n        $i++;\n    }\n    return $i;\n}",
    "    my $i = 0;\n    my $j = scalar @$array;\n    while($i < $j) {\n        my $mid = int(($i + $j) / 2);\n        if($array->[$mid] > $mid) {\n            $j = $mid;\n        } else {\n            $i = $mid + 1;\n        }\n    }\n    return $i;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high)/2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $n = scalar(@$array);\n    my $low = 0;\n    my $high = $n-1;\n    while($low <= $high) {\n        my $mid = int(($low + $high)/2);\n        if($array->[$mid] != $mid+1 && $array->[$mid-1] == $mid) {\n            return $mid+1;\n        }\n        elsif($array->[$mid] != $mid+1) {\n            $high = $mid-1;\n        }\n        else {\n            $low = $mid+1;\n        }\n    }\n    return $n+1;\n}",
    "    my $len = scalar(@$array);\n    my $i = 0;\n    for($i = 0; $i < $len; $i++) {\n        if($array->[$i] != $i + 1) {\n            return $i + 1;\n        }\n    }\n    return $i + 1;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $i = 0;\n    my $j = scalar(@$array);\n    while($i < $j) {\n        if($array->[$i] != $i) {\n            return $i;\n        }\n        $i++;\n    }\n    return $i;\n}",
    "    my $i = 0;\n    my $size = scalar(@$array);\n    for($i = 0; $i < $size; $i++) {\n        if($array->[$i] != $i) {\n            return $i;\n        }\n    }\n    return $i;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $mid == $low) {\n            return $mid + 1;\n        }\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        if ($array->[$mid] == $mid + 1) {\n            $low = $mid + 1;\n        }\n        else {\n            $high = $mid - 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $len = scalar(@$array);\n    my $i = 0;\n    for($i = 0; $i < $len; $i++) {\n        if($array->[$i] != $i) {\n            return $i;\n        }\n    }\n    return $i;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $mid == $low) {\n            return $mid + 1;\n        }\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        if ($array->[$mid] == $mid + 1) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $aa = 0;\n    my $bb = 0;\n    my $cc = 0;\n    my $dd = 0;\n    my $ee = 0;\n    my $ff = 0;\n    my $gg = 0;\n    my $hh = 0;\n    my $ii = 0;\n    my $jj = 0;\n    my $kk = 0;\n    my $ll = 0;\n    my $mm = 0;\n    my $nn = 0;\n    my $oo = 0;\n    my $pp = 0;\n    my $qq = 0;\n    my $rr = 0;\n    my $ss = 0;\n    my $tt = 0;\n    my $uu = 0;\n    my $vv = 0;\n    my $ww = 0;\n    my $xx = 0;\n    my $yy = 0;\n    my $zz = 0;\n    my $aaa = 0;\n    my $bbb = 0;\n    my $ccc = 0;\n    my $ddd = 0;\n    my $eee = 0;\n    my $fff = 0;\n    my $ggg = 0;\n    my $hhh = 0;\n    my $iii = 0;\n    my $jjj = 0;\n    my $kkk = 0;\n    my $lll = 0;\n    my $mmm = 0;\n    my $nnn = 0;\n    my $ooo = 0;\n    my $ppp = 0;\n    my $qqq = 0;\n    my $rrr = 0;\n    my $",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while($low <= $high) {\n        my $mid = int(($low + $high)/2);\n        if($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}",
    "    my $i;\n    my $j;\n    my $k;\n    my $min = $array->[0];\n    my $max = $array->[0];\n    my $len = scalar @$array;\n    for($i = 0; $i < $len; $i++) {\n        if($array->[$i] < $min) {\n            $min = $array->[$i];\n        }\n        if($array->[$i] > $max) {\n            $max = $array->[$i];\n        }\n    }\n    if($min != 1) {\n        return 1;\n    }\n    for($i = 0; $i < $len; $i++) {\n        $j = $array->[$i];\n        $k = $array->[$i + 1];\n        if($k - $j > 1) {\n            return $j + 1;\n        }\n    }\n    return $max + 1;\n}",
    "    my $i = 0;\n    my $j = scalar(@$array);\n    my $mid = 0;\n    while($i < $j) {\n        $mid = int(($i + $j)/2);\n        if($array->[$mid] > $mid) {\n            $j = $mid;\n        }\n        else {\n            $i = $mid + 1;\n        }\n    }\n    return $i;\n}",
    "    my $len = scalar(@$array);\n    my $i = 0;\n    while($i < $len) {\n        if($array->[$i] != $i) {\n            return $i;\n        }\n        $i++;\n    }\n    return $i;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if($array->[$mid] != $mid + 1 && $mid == $low) {\n            return $mid + 1;\n        }\n        if($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        if($array->[$mid] == $mid + 1) {\n            $low = $mid + 1;\n        }\n        else {\n            $high = $mid - 1;\n        }\n    }\n    return $size + 1;\n}",
    "    my $i = 0;\n    my $j = $#$array;\n    while($i <= $j) {\n        my $mid = int(($i + $j) / 2);\n        if($array->[$mid] != $mid + 1) {\n            if($mid == 0 || $array->[$mid - 1] == $mid) {\n                return $mid + 1;\n            }\n            $j = $mid - 1;\n        } else {\n            $i = $mid + 1;\n        }\n    }\n    return $i + 1;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        } elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    return $size + 1;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low == $size) {\n        return $size + 1;\n    }\n}",
    "    my $n = scalar(@$array);\n    my $i = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($array->[$i] != $i) {\n            return $i;\n        }\n    }\n    return $i;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}\nmy @array = (1, 2, 3, 4, 6, 7, 8, 9, 10);\nmy $result = find_First_Missing(\\@array);\nprint \"First Missing Number is $result\\n\";",
    "    my $n = scalar(@$array);\n    my $i = 0;\n    my $j = $n-1;\n    my $mid = 0;\n    while($i <= $j) {\n        $mid = ($i+$j)/2;\n        if($array->[$mid] != $mid+1 && $array->[$mid-1] == $mid) {\n            return $mid+1;\n        }\n        elsif($array->[$mid] != $mid+1) {\n            $j = $mid-1;\n        }\n        else {\n            $i = $mid+1;\n        }\n    }\n    return $n+1;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low == $size) {\n        return $size + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if($array->[$mid] != $mid + 1) {\n            if($mid == 0 || $array->[$mid - 1] == $mid) {\n                return $mid + 1;\n            }\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    if($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $smallest = 1;\n    for(my $i = 0; $i < $size; $i++) {\n        if($array->[$i] == $smallest) {\n            $smallest++;\n        }\n    }\n    return $smallest;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $mid == $low) {\n            return $mid + 1;\n        }\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        if ($array->[$mid] == $mid + 1) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $size + 1;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $mid == $low) {\n            return $mid + 1;\n        } elsif ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        } elsif ($array->[$mid] == $mid + 1) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $min = $array->[0];\n    my $max = $array->[-1];\n    my $n = scalar @$array;\n    my $sum = 0;\n    my $sum_of_n = ($n+1)*($min+$max)/2;\n    foreach my $i (@$array) {\n        $sum += $i;\n    }\n    return $sum_of_n - $sum;\n}",
    "    my $n = scalar(@$array);\n    my $i = 0;\n    while($i < $n) {\n        if($array->[$i] != $i) {\n            return $i;\n        }\n        $i++;\n    }\n    return $n;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low == $size) {\n        return $size + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low == $size) {\n        return $size + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if($array->[$mid] != $mid + 1 && $mid == $low) {\n            return $mid + 1;\n        }\n        if($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        if($array->[$mid] == $mid + 1) {\n            $low = $mid + 1;\n        }\n        else {\n            $high = $mid - 1;\n        }\n    }\n    return $low + 1;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        } elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low == $size) {\n        return $size + 1;\n    }\n}",
    "    my $first = $array->[0];\n    my $last = $array->[-1];\n    my $mid = int(($first+$last)/2);\n    my $i = 0;\n    while($first <= $last){\n        $mid = int(($first+$last)/2);\n        if($array->[$mid] == $mid+1){\n            $first = $mid+1;\n        }\n        else{\n            $last = $mid-1;\n        }\n    }\n    return $first;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $n = scalar(@$array);\n    my $min = $array->[0];\n    my $max = $array->[$n-1];\n    my $mid = 0;\n    my $flag = 0;\n    if($min != 1) {\n        return 1;\n    }\n    else {\n        for($i = 0; $i < $n; $i++) {\n            if($array->[$i] != $i+1) {\n                $flag = 1;\n                last;\n            }\n        }\n        if($flag == 0) {\n            return $array->[$n-1] + 1;\n        }\n        else {\n            $i = 0;\n            $j = $n-1;\n            while($i <= $j) {\n                $mid = int(($i+$j)/2);\n                if($array->[$mid] == $mid+1) {\n                    $i = $mid + 1;\n                }\n                else {\n                    $j = $mid - 1;\n                }\n            }\n            return $array->[$mid] + 1;\n        }\n    }\n}",
    "    my $i = 0;\n    my $len = scalar(@$array);\n    for($i = 0; $i < $len; $i++) {\n        if($array->[$i] != $i) {\n            return $i;\n        }\n    }\n    return $i;\n}",
    "    my $size = scalar @$array;\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}\nmy @array = (1, 2, 3, 4, 5, 6, 7, 10);\nmy $result = find_First_Missing(\\@array);\nprint $result;",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low == $size) {\n        return $size + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $mid == $low) {\n            return $mid + 1;\n        }\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        if ($array->[$mid] == $mid + 1) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low == $size) {\n        return $size + 1;\n    }\n}",
    "    my $n = scalar(@$array);\n    my $i = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($array->[$i] != $i) {\n            return $i;\n        }\n    }\n    return $n;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high)/2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar @$array;\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high)/2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\nmy @array = (1, 2, 3, 4, 5, 6, 7, 8, 10);\nmy $result = find_First_Missing(\\@array);\nprint \"First Missing number is $result\\n\";",
    "    my $size = scalar @$array;\n    my $i = 0;\n    for($i = 0; $i < $size; $i++) {\n        if($array->[$i] != $i) {\n            return $i;\n        }\n    }\n    return $i;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if($array->[$mid] != $mid + 1 && $mid == $low) {\n            return $mid + 1;\n        }\n        if($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        if($array->[$mid] == $mid + 1) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $size + 1;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $i = 0;\n    while ($i < $size) {\n        if ($array->[$i] != $i) {\n            return $i;\n        }\n        $i++;\n    }\n    return $i;\n}",
    "    my $n = scalar @$array;\n    my $i = 0;\n    while($i < $n) {\n        if($array->[$i] != $i) {\n            return $i;\n        }\n        $i++;\n    }\n    return $i;\n}",
    "    my $i = 0;\n    my $n = scalar(@$array);\n    for($i = 0; $i < $n; $i++) {\n        if($array->[$i] != $i) {\n            return $i;\n        }\n    }\n    return $n;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        } elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low == $size) {\n        return $size + 1;\n    }\n}",
    "    my $size = scalar @$array;\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $n = scalar(@$array);\n    my $i = 0;\n    while ($i < $n) {\n        if ($array->[$i] != $i) {\n            return $i;\n        }\n        $i++;\n    }\n    return $n;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $mid == $low) {\n            return $mid + 1;\n        }\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        if ($array->[$mid] == $mid + 1) {\n            $low = $mid + 1;\n        }\n        else {\n            $high = $mid - 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}\nmy @array = (1, 2, 3, 4, 5, 6, 7, 10);\nmy $result = find_First_Missing(\\@array);\nprint \"$result\\n\";",
    "    my $size = @$array;\n    my $low = 0;\n    my $high = $size - 1;\n    while($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}",
    "    my $size = scalar(@$array);\n    my $i = 0;\n    for($i = 0; $i < $size; $i++) {\n        if($array->[$i] != $i) {\n            return $i;\n        }\n    }\n    return $i;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    return $low + 1;\n}",
    "    my $n = scalar(@$array);\n    my $i = 0;\n    while($i < $n) {\n        if($array->[$i] != $i) {\n            return $i;\n        }\n        $i++;\n    }\n    return $n;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}",
    "    my $i = 0;\n    my $j = scalar(@$array);\n    while ($i < $j) {\n        if ($array->[$i] != $i) {\n            return $i;\n        }\n        $i++;\n    }\n    return $i;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    if ($array->[$low] != 1) {\n        return 1;\n    }\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] == $mid + 1) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $low + 1;\n}",
    "    my $i = 0;\n    my $n = scalar(@$array);\n    for($i = 0; $i < $n; $i++) {\n        if($array->[$i] != $i) {\n            return $i;\n        }\n    }\n    return $n;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low == $size) {\n        return $size + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if($array->[$mid] != $mid + 1 && $mid == $low) {\n            return $mid + 1;\n        }\n        if($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        if($array->[$mid] == $mid + 1) {\n            $low = $mid + 1;\n        }\n        else {\n            $high = $mid - 1;\n        }\n    }\n    return $size + 1;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $len = scalar(@$array);\n    my $min = $array->[0];\n    my $max = $array->[$len-1];\n    my $mid = 0;\n    while($min <= $max) {\n        $mid = int(($min + $max) / 2);\n        if($array->[$mid] == $mid) {\n            $min = $mid + 1;\n        } else {\n            $max = $mid - 1;\n        }\n    }\n    return $min;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while($low <= $high) {\n        my $mid = int(($low + $high)/2);\n        if($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $i = 0;\n    my $len = scalar @$array;\n    for($i = 0; $i < $len; $i++) {\n        if($array->[$i] != $i) {\n            return $i;\n        }\n    }\n    return $len;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $min = 0;\n    my $max = 0;\n    my $mid = 0;\n    my $size = scalar(@$array);\n    $min = $array->[0];\n    $max = $array->[$size - 1];\n    if ($min != 1) {\n        return 1;\n    }\n    while ($min <= $max) {\n        $mid = int(($min + $max) / 2);\n        if ($array->[$mid] == $mid + 1) {\n            $min = $mid + 1;\n        }\n        else {\n            $max = $mid - 1;\n        }\n    }\n    return $min;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while($low <= $high) {\n        my $mid = int(($low + $high)/2);\n        if($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar @$array;\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $mid == $low) {\n            return $mid + 1;\n        }\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        if ($array->[$mid] == $mid + 1) {\n            $low = $mid + 1;\n        }\n        else {\n            $high = $mid - 1;\n        }\n    }\n    return $size + 1;\n}",
    "    my $size = scalar @$array;\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        } elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low == $size) {\n        return $size + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low == $size) {\n        return $size + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $mid == $low) {\n            return $mid + 1;\n        }\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        if ($array->[$mid] == $mid + 1) {\n            $low = $mid + 1;\n        }\n        else {\n            $high = $mid - 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}\nmy @array = (1, 2, 3, 4, 5, 6, 7, 10);\nmy $result = find_First_Missing(\\@array);\nprint \"The smallest missing number is $result\\n\";",
    "    my $i = 0;\n    my $j = @$array;\n    my $mid = 0;\n    while($i < $j) {\n        $mid = int(($i + $j)/2);\n        if($array->[$mid] > $mid) {\n            $j = $mid;\n        } else {\n            $i = $mid + 1;\n        }\n    }\n    return $i;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $mid == $low) {\n            return $mid + 1;\n        }\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        if ($array->[$mid] == $mid + 1) {\n            $low = $mid + 1;\n        }\n        else {\n            $high = $mid - 1;\n        }\n    }\n    return $size + 1;\n}",
    "    my $i = 0;\n    while($i < scalar(@$array)) {\n        if($array->[$i] != $i) {\n            return $i;\n        }\n        $i++;\n    }\n    return $i;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $i = 0;\n    my $n = scalar @$array;\n    for($i = 0; $i < $n; $i++) {\n        if($array->[$i] != $i) {\n            return $i;\n        }\n    }\n    return $n;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low == $size) {\n        return $size + 1;\n    }\n}",
    "    my $length = scalar @$array;\n    my $low = 0;\n    my $high = $length - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low == $size) {\n        return $size + 1;\n    }\n}",
    "    my $len = scalar @$array;\n    my $i = 0;\n    for($i = 0; $i < $len; $i++) {\n        if($array->[$i] != $i) {\n            return $i;\n        }\n    }\n    return $i;\n}",
    "    my $n = scalar @$array;\n    my $i = 0;\n    while ($i < $n) {\n        if ($array->[$i] != $i) {\n            return $i;\n        }\n        $i++;\n    }\n    return $n;\n}",
    "    my $size = scalar(@$array);\n    my $i = 0;\n    while($i < $size) {\n        if($array->[$i] != $i) {\n            return $i;\n        }\n        $i++;\n    }\n    return $i;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $mid == $low) {\n            return $mid + 1;\n        }\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        if ($array->[$mid] == $mid + 1) {\n            $low = $mid + 1;\n        }\n        else {\n            $high = $mid - 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $len = scalar(@$array);\n    my $min = $array->[0];\n    my $max = $array->[$len-1];\n    my $mid = 0;\n    my $flag = 0;\n    my $result = 0;\n    if($min == 1) {\n        $i = 1;\n        while($i < $len) {\n            if($array->[$i] != $array->[$i-1] + 1) {\n                $result = $array->[$i-1] + 1;\n                $flag = 1;\n                last;\n            }\n            $i++;\n        }\n        if($flag == 0) {\n            $result = $array->[$len-1] + 1;\n        }\n    }\n    else {\n        $i = 0;\n        while($i < $len) {\n            if($array->[$i] != $min) {\n                $result = $min;\n                $flag = 1;\n                last;\n            }\n            $i++;\n            $min++;\n        }\n        if($flag == 0) {\n            $result = $array->[$len-1] + 1;\n        }\n    }\n    return $result;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low == $size) {\n        return $size + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $i = 0;\n    my $j = $#$array;\n    my $mid;\n    while ($i <= $j) {\n        $mid = int(($i + $j) / 2);\n        if ($array->[$mid] == $mid + 1) {\n            $i = $mid + 1;\n        } else {\n            $j = $mid - 1;\n        }\n    }\n    return $i + 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $n = @$array;\n    my $min = $array->[0];\n    my $max = $array->[$n-1];\n    my $flag = 0;\n    for($i = $min; $i <= $max; $i++) {\n        for($j = 0; $j < $n; $j++) {\n            if($i == $array->[$j]) {\n                $flag = 1;\n                last;\n            }\n        }\n        if($flag == 0) {\n            return $i;\n        }\n        $flag = 0;\n    }\n    return $max+1;\n}",
    "    my $i = 0;\n    my $j = $#$array;\n    while($i <= $j) {\n        my $mid = int(($i+$j)/2);\n        if($array->[$mid] != $mid+1) {\n            if($mid == 0 || $array->[$mid-1] == $mid) {\n                return $mid+1;\n            }\n            $j = $mid-1;\n        }\n        else {\n            $i = $mid+1;\n        }\n    }\n    return $i+1;\n}",
    "    my $size = scalar @$array;\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}\nmy @array = (1, 2, 3, 4, 5, 6, 7, 8, 10);\nmy $result = find_First_Missing(\\@array);\nprint $result;",
    "    my $len = scalar(@$array);\n    my $i = 0;\n    while($i < $len) {\n        if($array->[$i] != $i) {\n            return $i;\n        }\n        $i++;\n    }\n    return $i;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $n = scalar(@$array);\n    my $i = 0;\n    while ($i < $n) {\n        if ($array->[$i] != $i) {\n            return $i;\n        }\n        $i++;\n    }\n    return $n;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while($low <= $high) {\n        my $mid = int(($low + $high)/2);\n        if($array->[$mid] != $mid + 1 && $mid == $low) {\n            return $mid + 1;\n        }\n        if($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        if($array->[$mid] == $mid + 1) {\n            $low = $mid + 1;\n        }\n        else {\n            $high = $mid - 1;\n        }\n    }\n    return $size + 1;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}",
    "    my $i;\n    my $n = scalar(@$array);\n    for ($i = 0; $i < $n; $i++) {\n        if ($array->[$i] != $i) {\n            return $i;\n        }\n    }\n    return $n;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar @$array;\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}\nmy @array = (1, 2, 3, 4, 6, 7, 8, 9, 10);\nprint find_First_Missing(\\@array);",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low == $size) {\n        return $size + 1;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $min = $array->[0];\n    my $max = $array->[0];\n    my $size = scalar(@$array);\n    my $missing = 0;\n    for($i = 0; $i < $size; $i++) {\n        if($array->[$i] < $min) {\n            $min = $array->[$i];\n        }\n        if($array->[$i] > $max) {\n            $max = $array->[$i];\n        }\n    }\n    if($min != 1) {\n        return 1;\n    }\n    for($i = $min; $i < $max; $i++) {\n        $missing = 0;\n        for($j = 0; $j < $size; $j++) {\n            if($array->[$j] == $i) {\n                $missing = 1;\n                last;\n            }\n        }\n        if($missing == 0) {\n            return $i;\n        }\n    }\n    return $max + 1;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $i = 0;\n    while ($i < $size) {\n        if ($array->[$i] != $i) {\n            return $i;\n        }\n        $i++;\n    }\n    return $i;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size-1;\n    while($low <= $high) {\n        my $mid = int(($low+$high)/2);\n        if($array->[$mid] != $mid+1 && $array->[$mid-1] == $mid) {\n            return $mid+1;\n        }\n        elsif($array->[$mid] != $mid+1) {\n            $high = $mid-1;\n        }\n        else {\n            $low = $mid+1;\n        }\n    }\n    if($low > $high) {\n        return $low+1;\n    }\n}",
    "    my $size = @$array;\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}\nmy @array = (1, 2, 3, 4, 5, 6, 7, 8, 10);\nmy $result = find_First_Missing(\\@array);\nprint \"$result\\n\";",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar @$array;\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $n = scalar @$array;\n    my $i = 0;\n    while ($i < $n) {\n        if ($array->[$i] != $i) {\n            return $i;\n        }\n        $i++;\n    }\n    return $n;\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}",
    "    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n   ",
    "    my $i = 0;\n    my $j = scalar(@$array);\n    while($i < $j) {\n        if($array->[$i] != $i) {\n            return $i;\n        }\n        $i++;\n    }\n    return $i;\n}",
    "    my $n = scalar @$array;\n    my $i = 0;\n    while($i < $n) {\n        if($array->[$i] != $i) {\n            return $i;\n        }\n        $i++;\n    }\n    return $n;\n}",
    "    my $size = scalar @$array;\n    my $low = 0;\n    my $high = $size - 1;\n    while($low <= $high) {\n        my $mid = int(($low + $high)/2);\n        if($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}",
    "    my $size = scalar(@$array);\n    my $low = 0;\n    my $high = $size - 1;\n    while ($low <= $high) {\n        my $mid = int(($low + $high) / 2);\n        if ($array->[$mid] != $mid + 1 && $array->[$mid - 1] == $mid) {\n            return $mid + 1;\n        }\n        elsif ($array->[$mid] != $mid + 1) {\n            $high = $mid - 1;\n        }\n        else {\n            $low = $mid + 1;\n        }\n    }\n    if ($low > $high) {\n        return $low + 1;\n    }\n}"
  ]
}
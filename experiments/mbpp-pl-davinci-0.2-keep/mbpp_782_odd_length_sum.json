{
  "name": "mbpp_782_odd_length_sum",
  "language": "pl",
  "prompt": "# Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nsub odd_length_sum {\n    my($arr) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_782_odd_length_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&odd_length_sum;\n        if(eq_deeply($candidate->([1, 2, 4]),14)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 1, 2]),15)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 7]),8)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $sum = 0;\n    my $n = scalar @$arr;\n    for(my $i = 0; $i < $n; $i++) {\n        for(my $j = $i; $j < $n; $j++) {\n            my $len = $j - $i + 1;\n            if($len % 2 != 0) {\n                for(my $k = $i; $k <= $j; $k++) {\n                    $sum += $arr->[$k];\n                }\n            }\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my $n = scalar @$arr;\n    for my $i (0..$n-1) {\n        for my $j ($i..$n-1) {\n            my $len = $j - $i + 1;\n            if ($len % 2 == 1) {\n                $sum += sum(@$arr[$i..$j]);\n            }\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for (my $i = 0; $i < scalar @$arr; $i++) {\n        for (my $j = $i; $j < scalar @$arr; $j++) {\n            my $len = $j - $i + 1;\n            if ($len % 2 != 0) {\n                for (my $k = $i; $k <= $j; $k++) {\n                    $sum += $arr->[$k];\n                }\n            }\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for(my $i = 0; $i < scalar(@$arr); $i++) {\n        for(my $j = $i; $j < scalar(@$arr); $j++) {\n            my $len = $j - $i + 1;\n            if($len % 2 == 1) {\n                for(my $k = $i; $k <= $j; $k++) {\n                    $sum += $arr->[$k];\n                }\n            }\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my $n = scalar @$arr;\n    for my $i (0..$n-1) {\n        for my $j ($i..$n-1) {\n            my $len = $j - $i + 1;\n            if ($len % 2 != 0) {\n                $sum += sum(@$arr[$i..$j]);\n            }\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for my $i (0..$#$arr) {\n        for my $j ($i..$#$arr) {\n            my $len = $j - $i + 1;\n            $sum += $len % 2 == 1 ? sum(@$arr[$i..$j]) : 0;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for(my $i=0; $i<scalar(@$arr); $i++) {\n        for(my $j=$i; $j<scalar(@$arr); $j++) {\n            $sum += sum(@$arr[$i..$j]) if(($j-$i+1) % 2 != 0);\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my $n = scalar @$arr;\n    for(my $i = 0; $i < $n; $i++) {\n        for(my $j = $i; $j < $n; $j++) {\n            my $len = $j - $i + 1;\n            if($len % 2 == 1) {\n                for(my $k = $i; $k <= $j; $k++) {\n                    $sum += $arr->[$k];\n                }\n            }\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for(my $i=0; $i<scalar @$arr; $i++) {\n        for(my $j=$i; $j<scalar @$arr; $j++) {\n            if(($j-$i+1) % 2 != 0) {\n                for(my $k=$i; $k<=$j; $k++) {\n                    $sum += $arr->[$k];\n                }\n            }\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my $n = scalar(@$arr);\n    for(my $i = 0; $i < $n; $i++) {\n        for(my $j = $i; $j < $n; $j++) {\n            my $len = $j - $i + 1;\n            if($len % 2 == 1) {\n                for(my $k = $i; $k <= $j; $k++) {\n                    $sum += $arr->[$k];\n                }\n            }\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my $n = scalar(@$arr);\n    for(my $i = 0; $i < $n; $i++) {\n        for(my $j = $i; $j < $n; $j++) {\n            my $sub_len = $j - $i + 1;\n            if($sub_len % 2 == 1) {\n                for(my $k = $i; $k <= $j; $k++) {\n                    $sum += $arr->[$k];\n                }\n            }\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for(my $i = 0; $i < scalar(@$arr); $i++) {\n        for(my $j = $i; $j < scalar(@$arr); $j++) {\n            my $len = $j - $i + 1;\n            if($len % 2 != 0) {\n                for(my $k = $i; $k <= $j; $k++) {\n                    $sum += $arr->[$k];\n                }\n            }\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my $n = @$arr;\n    for(my $i = 0; $i < $n; $i++) {\n        for(my $j = $i; $j < $n; $j++) {\n            my $len = $j - $i + 1;\n            if($len % 2 != 0) {\n                for(my $k = $i; $k <= $j; $k++) {\n                    $sum += $arr->[$k];\n                }\n            }\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my $n = scalar(@$arr);\n    for(my $i = 0; $i < $n; $i++) {\n        for(my $j = $i; $j < $n; $j++) {\n            if(($j - $i + 1) % 2 == 1) {\n                for(my $k = $i; $k <= $j; $k++) {\n                    $sum += $arr->[$k];\n                }\n            }\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my $n = scalar @$arr;\n    for (my $i = 0; $i < $n; $i++) {\n        for (my $j = $i; $j < $n; $j++) {\n            my $len = $j - $i + 1;\n            if ($len % 2 != 0) {\n                for (my $k = $i; $k <= $j; $k++) {\n                    $sum += $arr->[$k];\n                }\n            }\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my $n = scalar(@$arr);\n    for(my $i=0; $i<$n; $i++) {\n        for(my $j=$i; $j<$n; $j++) {\n            my $len = $j - $i + 1;\n            if($len % 2 != 0) {\n                $sum += sum(@$arr[$i..$j]);\n            }\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my $n = scalar @{$arr};\n    for(my $i = 0; $i < $n; $i++) {\n        for(my $j = $i; $j < $n; $j++) {\n            my $len = $j - $i + 1;\n            if($len % 2 == 1) {\n                for(my $k = $i; $k <= $j; $k++) {\n                    $sum += $arr->[$k];\n                }\n            }\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my $n = scalar @$arr;\n    for my $i (0..$n-1) {\n        for my $j ($i..$n-1) {\n            my $len = $j - $i + 1;\n            if ($len % 2 != 0) {\n                $sum += sum(@$arr[$i..$j]);\n            }\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my $len = scalar(@$arr);\n    for my $i (0 .. $len - 1) {\n        for my $j ($i .. $len - 1) {\n            my $sub_len = $j - $i + 1;\n            if ($sub_len % 2 != 0) {\n                $sum += sum(@$arr[$i .. $j]);\n            }\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my $n = scalar @$arr;\n    for (my $i = 0; $i < $n; $i++) {\n        for (my $j = $i; $j < $n; $j++) {\n            my $len = $j - $i + 1;\n            if ($len % 2 == 1) {\n                for (my $k = $i; $k <= $j; $k++) {\n                    $sum += $arr->[$k];\n                }\n            }\n        }\n    }\n    return $sum;\n}"
  ]
}
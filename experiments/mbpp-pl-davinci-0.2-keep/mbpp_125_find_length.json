{
  "name": "mbpp_125_find_length",
  "language": "pl",
  "prompt": "# Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nsub find_length {\n    my($string) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_125_find_length.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&find_length;\n        if(eq_deeply($candidate->(\"11000010001\"),6)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"10111\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"11011101100101\"),2)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $max_len = 0;\n    my $count = 0;\n    my $i = 0;\n    my $j = 0;\n    while($i < length($string)) {\n        if(substr($string, $i, 1) eq '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count == 0) {\n            $max_len = $i + 1;\n        }\n        $i++;\n    }\n    return $max_len;\n}",
    "    my $count = 0;\n    my $max_count = 0;\n    my $len = length($string);\n    for(my $i=0;$i<$len;$i++) {\n        if(substr($string,$i,1) eq '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}",
    "    my $max = 0;\n    my $count = 0;\n    my $i = 0;\n    my $j = 0;\n    my $n = length($string);\n    while($i < $n && $j < $n) {\n        if(substr($string, $j, 1) eq '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count == 0) {\n            $max = $j - $i + 1 if $j - $i + 1 > $max;\n            $j++;\n        } elsif($count < 0) {\n            $i = $j + 1;\n            $j = $i;\n            $count = 0;\n        } else {\n            $j++;\n        }\n    }\n    return $max;\n}",
    "    my $count = 0;\n    my $max = 0;\n    my $len = length($string);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($string, $i, 1) eq '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}",
    "    my $max_length = 0;\n    my $count = 0;\n    for(my $i = 0; $i < length($string); $i++) {\n        if(substr($string, $i, 1) eq '0') {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count == 0) {\n            $max_length = $i + 1;\n        }\n    }\n    return $max_length;\n}",
    "    my $max_len = 0;\n    my $count = 0;\n    my $len = length($string);\n    my $i = 0;\n    my $j = 0;\n    while($i < $len && $j < $len) {\n        if($string->[$i] == $string->[$j]) {\n            $count++;\n            $j++;\n        }\n        else {\n            $count--;\n            $i++;\n        }\n        if($count == 0) {\n            $max_len = max($max_len, $j - $i);\n        }\n    }\n    return $max_len;\n}",
    "    my $count = 0;\n    my $max = 0;\n    my $len = length($string);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($string, $i, 1) eq '0') {\n            $count++;\n        }\n        else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}",
    "    my $max_diff = 0;\n    my $count_0 = 0;\n    my $count_1 = 0;\n    for(my $i = 0; $i < length($string); $i++) {\n        if(substr($string, $i, 1) eq '0') {\n            $count_0++;\n        }\n        else {\n            $count_1++;\n        }\n        if($count_0 == $count_1) {\n            $max_diff = $count_0 if $max_diff < $count_0;\n        }\n    }\n    return $max_diff;\n}",
    "    my $max_diff = 0;\n    my $count = 0;\n    my $n = length($string);\n    for(my $i = 0; $i < $n; $i++) {\n        if(substr($string, $i, 1) eq '0') {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max_diff) {\n            $max_diff = $count;\n        }\n    }\n    return $max_diff;\n}",
    "    my $max_diff = 0;\n    my $count_0 = 0;\n    my $count_1 = 0;\n    for(my $i = 0; $i < length($string); $i++) {\n        if(substr($string, $i, 1) eq '0') {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        if($count_0 == $count_1) {\n            $max_diff = $count_0 if($max_diff < $count_0);\n        }\n    }\n    return $max_diff;\n}",
    "    my $count = 0;\n    my $max = 0;\n    my $len = length($string);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($string, $i, 1) eq '0') {\n            $count--;\n        }\n        else {\n            $count++;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}",
    "    my $max_diff = 0;\n    my $count = 0;\n    my $i = 0;\n    my $j = 0;\n    while($i < length($string)) {\n        if(substr($string, $i, 1) eq '0') {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count > $max_diff) {\n            $max_diff = $count;\n        }\n        if($count < 0) {\n            $count = 0;\n            $j = $i + 1;\n        }\n        $i++;\n    }\n    return $max_diff;\n}",
    "    my $max_len = 0;\n    my $count_0 = 0;\n    my $count_1 = 0;\n    for(my $i=0; $i<length($string); $i++) {\n        if(substr($string, $i, 1) eq '0') {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        if($count_0 == $count_1) {\n            $max_len = $count_0 + $count_1;\n        }\n    }\n    return $max_len;\n}",
    "    my $max_length = 0;\n    my $count = 0;\n    my $i = 0;\n    my $j = 0;\n    while($i < length($string)) {\n        if(substr($string, $i, 1) eq '0') {\n            $count++;\n        }\n        else {\n            $count--;\n        }\n        if($count == 0) {\n            $max_length = $i + 1;\n        }\n        else {\n            if(exists $hash{$count}) {\n                $max_length = max($max_length, $i - $hash{$count});\n            }\n            else {\n                $hash{$count} = $i;\n            }\n        }\n        $i++;\n    }\n    return $max_length;\n}",
    "    my $max_len = 0;\n    my $count_0 = 0;\n    my $count_1 = 0;\n    my $i = 0;\n    my $j = 0;\n    while($i < length($string) && $j < length($string)) {\n        if(substr($string, $j, 1) eq '0') {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        if($count_0 == $count_1) {\n            $max_len = max($max_len, $j - $i + 1);\n            $j++;\n        } elsif($count_0 > $count_1) {\n            while($count_0 > $count_1) {\n                if(substr($string, $i, 1) eq '0') {\n                    $count_0--;\n                } else {\n                    $count_1--;\n                }\n                $i++;\n            }\n        } else {\n            $j++;\n        }\n    }\n    return $max_len;\n}",
    "    my $count = 0;\n    my $max = 0;\n    my $len = length($string);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($string, $i, 1) eq '0') {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}",
    "    my $max_len = 0;\n    my $count_0 = 0;\n    my $count_1 = 0;\n    for(my $i = 0; $i < length($string); $i++) {\n        if(substr($string, $i, 1) eq '0') {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        if($count_0 == $count_1) {\n            $max_len = max($max_len, $count_0 + $count_1);\n        }\n    }\n    return $max_len;\n}",
    "    my $count = 0;\n    my $max = 0;\n    my $len = length($string);\n    for(my $i=0; $i<$len; $i++) {\n        if($string =~ /^0/) {\n            $count++;\n        }\n        else {\n            $count--;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n        $string =~ s/^.//;\n    }\n    return $max;\n}",
    "    my $max_length = 0;\n    my $count = 0;\n    my $i = 0;\n    my $j = 0;\n    while($i < length($string)) {\n        if(substr($string, $i, 1) eq '0') {\n            $count++;\n        }\n        else {\n            $count--;\n        }\n        if($count == 0) {\n            $max_length = $i - $j + 1 if($i - $j + 1 > $max_length);\n        }\n        elsif($count < 0) {\n            $count = 0;\n            $j = $i + 1;\n        }\n        $i++;\n    }\n    return $max_length;\n}",
    "    my $max_diff = 0;\n    my $count_0 = 0;\n    my $count_1 = 0;\n    for(my $i = 0; $i < length($string); $i++) {\n        if(substr($string, $i, 1) eq '0') {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        if($count_0 == $count_1) {\n            $max_diff = $count_0;\n        }\n    }\n    return $max_diff;\n}"
  ]
}
{
  "name": "mbpp_229_re_arrange_array",
  "language": "pl",
  "prompt": "# Write a function that takes in an array and an integer n, and re-arranges the first n elements of the given array so that all negative elements appear before positive ones, and where the relative order among negative and positive elements is preserved.\nsub re_arrange_array {\n    my($arr, $n) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_229_re_arrange_array.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&re_arrange_array;\n        if(eq_deeply($candidate->([-1, 2, -3, 4, 5, 6, -7, 8, 9], 9),[-1, -3, -7, 4, 5, 6, 2, 8, 9])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([12, -14, -26, 13, 15], 5),[-14, -26, 12, 13, 15])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([10, 24, 36, -42, -39, -78, 85], 7),[-42, -39, -78, 10, 24, 36, 85])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] < 0) {\n            $i++;\n        } else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n}",
    "    my @neg = ();\n    my @pos = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @neg, $arr->[$i];\n        } else {\n            push @pos, $arr->[$i];\n        }\n    }\n    my @result = (@neg, @pos);\n    return \\@result;\n}",
    "    my @neg = ();\n    my @pos = ();\n    my @res = ();",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        }\n        else {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $j--;\n        }\n    }\n}",
    "    my @neg = grep {$_ < 0} @$arr[0..$n-1];\n    my @pos = grep {$_ >= 0} @$arr[0..$n-1];\n    my @result = (@neg, @pos);\n    return @result;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] < 0) {\n            $i++;\n        }\n        elsif($arr->[$j] >= 0) {\n            $j--;\n        }\n        else {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $i++;\n            $j--;\n        }\n    }\n    return $arr;\n}",
    "    my @negatives = grep {$_ < 0} @$arr;\n    my @positives = grep {$_ >= 0} @$arr;\n    my @result = (@negatives, @positives);\n    return @result[0..$n-1];\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } elsif ($arr->[$j] >= 0) {\n            $j--;\n        } else {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $i++;\n            $j--;\n        }\n    }\n    return $arr;\n}",
    "    my @result;\n    my $i = 0;\n    my $j = $n - 1;\n    while($i < $n && $j >= 0) {\n        if($arr->[$i] < 0) {\n            push(@result, $arr->[$i]);\n            $i++;\n        }\n        else {\n            unshift(@result, $arr->[$i]);\n            $j--;\n        }\n    }\n    while($i < $n) {\n        push(@result, $arr->[$i]);\n        $i++;\n    }\n    while($j >= 0) {\n        unshift(@result, $arr->[$j]);\n        $j--;\n    }\n    return @result;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n}",
    "    my @neg = ();\n    my @pos = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @neg, $arr->[$i];\n        } else {\n            push @pos, $arr->[$i];\n        }\n    }\n    my @result = (@neg, @pos);\n    return \\@result;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] < 0) {\n            $i++;\n        }\n        elsif($arr->[$j] >= 0) {\n            $j--;\n        }\n        else {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n        }\n    }\n    return $arr;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] < 0) {\n            $i++;\n        } else {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $j--;\n        }\n    }\n    return $arr;\n}",
    "    my @neg = ();\n    my @pos = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @neg, $arr->[$i];\n        } else {\n            push @pos, $arr->[$i];\n        }\n    }\n    my @result = (@neg, @pos);\n    return @result;\n}",
    "    my @result;\n    my @neg;\n    my @pos;\n    foreach my $i (0..$n-1) {\n        if ($arr->[$i] < 0) {\n            push @neg, $arr->[$i];\n        } else {\n            push @pos, $arr->[$i];\n        }\n    }\n    @result = (@neg, @pos);\n    return @result;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } elsif ($arr->[$j] > 0) {\n            $j--;\n        } else {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $i++;\n            $j--;\n        }\n    }\n    return $arr;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        while($arr->[$i] < 0 && $i < $j) {\n            $i++;\n        }\n        while($arr->[$j] >= 0 && $i < $j) {\n            $j--;\n        }\n        if($i < $j) {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n        }\n    }\n}",
    "    my @neg_arr = ();\n    my @pos_arr = ();\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] < 0) {\n            push @neg_arr, $arr->[$i];\n        } else {\n            push @pos_arr, $arr->[$i];\n        }\n    }\n    my @new_arr = (@neg_arr, @pos_arr);\n    return @new_arr;\n}",
    "    my @neg = ();\n    my @pos = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @neg, $arr->[$i];\n        } else {\n            push @pos, $arr->[$i];\n        }\n    }\n    my @res = (@neg, @pos);\n    return \\@res;\n}",
    "\n    my @neg = ();\n    my @pos = ();",
    "    my @result = ();\n    my @negative = ();\n    my @positive = ();\n    foreach my $i (0..$n-1) {\n        if ($arr->[$i] < 0) {\n            push @negative, $arr->[$i];\n        } else {\n            push @positive, $arr->[$i];\n        }\n    }\n    push @result, @negative;\n    push @result, @positive;\n    return @result;\n}",
    "    my @ret = ();\n    my @pos = ();\n    my @neg = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @neg, $arr->[$i];\n        } else {\n            push @pos, $arr->[$i];\n        }\n    }\n    @ret = (@neg, @pos);\n    return @ret;\n}",
    "    my @negatives = grep {$_ < 0} @$arr[0..$n-1];\n    my @positives = grep {$_ >= 0} @$arr[0..$n-1];\n    @$arr[0..$n-1] = (@negatives, @positives);\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } else {\n            my $tmp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $tmp;\n            $j--;\n        }\n    }\n}",
    "    my @arr = @$arr;\n    my @neg = ();\n    my @pos = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr[$i] < 0) {\n            push @neg, $arr[$i];\n        } else {\n            push @pos, $arr[$i];\n        }\n    }\n    my @result = (@neg, @pos);\n    return @result;\n}",
    "    my @neg_arr = ();\n    my @pos_arr = ();\n    my @result = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @neg_arr, $arr->[$i];\n        } else {\n            push @pos_arr, $arr->[$i];\n        }\n    }\n    @result = (@neg_arr, @pos_arr);\n    return @result;\n}",
    "    my @neg = grep { $_ < 0 } @$arr;\n    my @pos = grep { $_ >= 0 } @$arr;\n    my @result = (@neg, @pos);\n    return @result[0..$n-1];\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n    return $arr;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        }\n        else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n}",
    "    my @neg_arr;\n    my @pos_arr;\n    my @result;\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] < 0) {\n            push(@neg_arr, $arr->[$i]);\n        } else {\n            push(@pos_arr, $arr->[$i]);\n        }\n    }\n    @result = (@neg_arr, @pos_arr);\n    return @result;\n}",
    "    my @result = ();\n    my @neg = ();\n    my @pos = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @neg, $arr->[$i];\n        } else {\n            push @pos, $arr->[$i];\n        }\n    }\n    push @result, @neg;\n    push @result, @pos;\n    return @result;\n}",
    "    my @res = ();\n    my @neg = ();\n    my @pos = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @neg, $arr->[$i];\n        } else {\n            push @pos, $arr->[$i];\n        }\n    }\n    push @res, @neg;\n    push @res, @pos;\n    return @res;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n}",
    "    my @neg = grep {$_ < 0} @$arr;\n    my @pos = grep {$_ >= 0} @$arr;\n    my @res = (@neg, @pos);\n    return @res;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } else {\n            my $tmp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $tmp;\n            $j--;\n        }\n    }\n}",
    "    my @result;\n    my @neg;\n    my @pos;\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] < 0) {\n            push(@neg, $arr->[$i]);\n        } else {\n            push(@pos, $arr->[$i]);\n        }\n    }\n    @result = (@neg, @pos);\n    return @result;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0 && $arr->[$j] > 0) {\n            $i++;\n            $j--;\n        } elsif ($arr->[$i] < 0 && $arr->[$j] < 0) {\n            $i++;\n        } elsif ($arr->[$i] > 0 && $arr->[$j] > 0) {\n            $j--;\n        } else {\n            my $tmp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $tmp;\n        }\n    }\n    return $arr;\n}",
    "    my $j = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            swap($arr, $i, $j);\n            $j++;\n        }\n    }\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n}",
    "    my @result;\n    my @negative;\n    my @positive;\n    foreach my $i (0..$n-1) {\n        if ($arr->[$i] < 0) {\n            push @negative, $arr->[$i];\n        } else {\n            push @positive, $arr->[$i];\n        }\n    }\n    @result = (@negative, @positive);\n    return @result;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n}",
    "    my @neg = ();\n    my @pos = ();\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] < 0) {\n            push @neg, $arr->[$i];\n        } else {\n            push @pos, $arr->[$i];\n        }\n    }\n    my @result = (@neg, @pos);\n    return @result;\n}",
    "\n    my @neg = ();\n    my @pos = ();\n    my @result = ();",
    "    my @neg = grep {$_ < 0} @$arr;\n    my @pos = grep {$_ >= 0} @$arr;\n    my @result = (@neg, @pos);\n    return @result;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] < 0) {\n            $i++;\n        } else {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $j--;\n        }\n    }\n    return $arr;\n}",
    "    my @result = ();\n    my @neg = ();\n    my @pos = ();\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] < 0) {\n            push @neg, $arr->[$i];\n        } else {\n            push @pos, $arr->[$i];\n        }\n    }\n    push @result, @neg;\n    push @result, @pos;\n    return \\@result;\n}",
    "    my @neg = ();\n    my @pos = ();\n    for my $i (0..$n-1) {\n        if ($arr->[$i] < 0) {\n            push @neg, $arr->[$i];\n        } else {\n            push @pos, $arr->[$i];\n        }\n    }\n    my @res = (@neg, @pos);\n    return \\@res;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] < 0) {\n            $i++;\n        }\n        elsif($arr->[$j] > 0) {\n            $j--;\n        }\n        else {\n            swap($arr, $i, $j);\n            $i++;\n            $j--;\n        }\n    }\n    return $arr;\n}",
    "    my @result = ();\n    my @positive = ();\n    my @negative = ();\n    for my $i (0 .. $n-1) {\n        if ($arr->[$i] < 0) {\n            push @negative, $arr->[$i];\n        } else {\n            push @positive, $arr->[$i];\n        }\n    }\n    push @result, @negative, @positive;\n    return @result;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        }\n        else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        }\n        elsif ($arr->[$j] > 0) {\n            $j--;\n        }\n        else {\n            ($arr->[$i], $arr->[$j]) = ($arr->[$j], $arr->[$i]);\n            $i++;\n            $j--;\n        }\n    }\n    return $arr;\n}",
    "    my @result;\n    my @pos;\n    my @neg;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @neg, $arr->[$i];\n        } else {\n            push @pos, $arr->[$i];\n        }\n    }\n    push @result, @neg, @pos;\n    return @result;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        }\n        elsif ($arr->[$j] >= 0) {\n            $j--;\n        }\n        else {\n            ($arr->[$i], $arr->[$j]) = ($arr->[$j], $arr->[$i]);\n        }\n    }\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n}",
    "    my @neg_arr = ();\n    my @pos_arr = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @neg_arr, $arr->[$i];\n        } else {\n            push @pos_arr, $arr->[$i];\n        }\n    }\n    my @result = (@neg_arr, @pos_arr);\n    return @result;\n}",
    "    my @result;\n    my @neg;\n    my @pos;\n    for(my $i=0; $i<$n; $i++) {\n        if($arr->[$i] < 0) {\n            push @neg, $arr->[$i];\n        } else {\n            push @pos, $arr->[$i];\n        }\n    }\n    push @result, @neg;\n    push @result, @pos;\n    return @result;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } else {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $j--;\n        }\n    }\n    return $arr;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] > 0) {\n            if ($arr->[$j] <= 0) {\n                ($arr->[$i], $arr->[$j]) = ($arr->[$j], $arr->[$i]);\n                $i++;\n                $j--;\n            } else {\n                $j--;\n            }\n        } else {\n            $i++;\n        }\n    }\n    return $arr;\n}",
    "    my @neg_arr;\n    my @pos_arr;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push(@neg_arr, $arr->[$i]);\n        } else {\n            push(@pos_arr, $arr->[$i]);\n        }\n    }\n    my @new_arr = (@neg_arr, @pos_arr);\n    return @new_arr;\n}",
    "    my @negative_arr = ();\n    my @positive_arr = ();\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] < 0) {\n            push(@negative_arr, $arr->[$i]);\n        } else {\n            push(@positive_arr, $arr->[$i]);\n        }\n    }\n    my $i = 0;\n    for(my $j = 0; $j < scalar(@negative_arr); $j++) {\n        $arr->[$i] = $negative_arr[$j];\n        $i++;\n    }\n    for(my $j = 0; $j < scalar(@positive_arr); $j++) {\n        $arr->[$i] = $positive_arr[$j];\n        $i++;\n    }\n}",
    "    my @neg_arr = ();\n    my @pos_arr = ();\n    my $i = 0;\n    while($i < $n) {\n        if($arr->[$i] < 0) {\n            push(@neg_arr, $arr->[$i]);\n        } else {\n            push(@pos_arr, $arr->[$i]);\n        }\n        $i++;\n    }\n    $i = 0;\n    while($i < $n) {\n        if($i < scalar(@neg_arr)) {\n            $arr->[$i] = $neg_arr[$i];\n        } else {\n            $arr->[$i] = $pos_arr[$i - scalar(@neg_arr)];\n        }\n        $i++;\n    }\n    return $arr;\n}",
    "    my @result = ();\n    my @positives = ();\n    my @negatives = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @negatives, $arr->[$i];\n        } else {\n            push @positives, $arr->[$i];\n        }\n    }\n    push @result, @negatives;\n    push @result, @positives;\n    return @result;\n}",
    "    my @neg_arr = ();\n    my @pos_arr = ();\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] < 0) {\n            push(@neg_arr, $arr->[$i]);\n        } else {\n            push(@pos_arr, $arr->[$i]);\n        }\n    }\n    my @result = (@neg_arr, @pos_arr);\n    return @result;\n}",
    "    my @neg = ();\n    my @pos = ();\n    foreach my $i (0..$n-1) {\n        if ($arr->[$i] < 0) {\n            push @neg, $arr->[$i];\n        } else {\n            push @pos, $arr->[$i];\n        }\n    }\n    my @res = (@neg, @pos);\n    return \\@res;\n}",
    "    my @neg;\n    my @pos;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @neg, $arr->[$i];\n        } else {\n            push @pos, $arr->[$i];\n        }\n    }\n    my @result = (@neg, @pos);\n    return \\@result;\n}",
    "    my @neg = ();\n    my @pos = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @neg, $arr->[$i];\n        } else {\n            push @pos, $arr->[$i];\n        }\n    }\n    my @res = (@neg, @pos);\n    return @res;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } else {\n            my $tmp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $tmp;\n            $j--;\n        }\n    }\n    return $arr;\n}",
    "    my @neg_arr = ();\n    my @pos_arr = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @neg_arr, $arr->[$i];\n        } else {\n            push @pos_arr, $arr->[$i];\n        }\n    }\n    my @result = (@neg_arr, @pos_arr);\n    return @result;\n}",
    "    my @result = ();\n    my $i = 0;\n    my $j = $n - 1;\n    while($i <= $j) {\n        if($arr->[$i] < 0) {\n            push(@result, $arr->[$i]);\n            $i++;\n        } else {\n            unshift(@result, $arr->[$i]);\n            $j--;\n        }\n    }\n    return @result;\n}",
    "    my @negatives = ();\n    my @positives = ();\n    my @result = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @negatives, $arr->[$i];\n        } else {\n            push @positives, $arr->[$i];\n        }\n    }\n    push @result, @negatives;\n    push @result, @positives;\n    return @result;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0 && $arr->[$j] > 0) {\n            $i++;\n            $j--;\n        } elsif ($arr->[$i] < 0 && $arr->[$j] < 0) {\n            $i++;\n        } elsif ($arr->[$i] > 0 && $arr->[$j] > 0) {\n            $j--;\n        } else {\n            my $tmp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $tmp;\n        }\n    }\n    return $arr;\n}",
    "    my @result = ();\n    my @negative = ();\n    my @positive = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @negative, $arr->[$i];\n        } else {\n            push @positive, $arr->[$i];\n        }\n    }\n    @result = (@negative, @positive);\n    return @result;\n}",
    "    my @neg_arr = ();\n    my @pos_arr = ();\n    my $i = 0;\n    while($i < $n) {\n        if($arr->[$i] < 0) {\n            push(@neg_arr, $arr->[$i]);\n        } else {\n            push(@pos_arr, $arr->[$i]);\n        }\n        $i++;\n    }\n    my @result = (@neg_arr, @pos_arr);\n    return \\@result;\n}",
    "    my @neg_arr = ();\n    my @pos_arr = ();\n    for my $i (0..$n-1) {\n        if ($arr->[$i] < 0) {\n            push @neg_arr, $arr->[$i];\n        } else {\n            push @pos_arr, $arr->[$i];\n        }\n    }\n    @neg_arr = sort {$a <=> $b} @neg_arr;\n    @pos_arr = sort {$a <=> $b} @pos_arr;\n    my @res = (@neg_arr, @pos_arr);\n    return @res;\n}",
    "    my @result;\n    my @negative;\n    my @positive;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @negative, $arr->[$i];\n        } else {\n            push @positive, $arr->[$i];\n        }\n    }\n    push @result, @negative;\n    push @result, @positive;\n    return @result;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        while ($arr->[$i] < 0) {\n            $i++;\n        }\n        while ($arr->[$j] >= 0) {\n            $j--;\n        }\n        if ($i < $j) {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n        }\n    }\n    return $arr;\n}",
    "    my @negative_arr = ();\n    my @positive_arr = ();\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] < 0) {\n            push(@negative_arr, $arr->[$i]);\n        } else {\n            push(@positive_arr, $arr->[$i]);\n        }\n    }\n    my @result = (@negative_arr, @positive_arr);\n    return @result;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        }\n        else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        }\n        elsif ($arr->[$j] >= 0) {\n            $j--;\n        }\n        else {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $i++;\n            $j--;\n        }\n    }\n}",
    "    my @neg = grep { $_ < 0 } @$arr[0..$n-1];\n    my @pos = grep { $_ >= 0 } @$arr[0..$n-1];\n    my @res = (@neg, @pos);\n    return \\@res;\n}",
    "    my @neg = ();\n    my @pos = ();\n    my @result = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @neg, $arr->[$i];\n        } else {\n            push @pos, $arr->[$i];\n        }\n    }\n    push @result, @neg;\n    push @result, @pos;\n    return @result;\n}",
    "    my @neg = ();\n    my @pos = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @neg, $arr->[$i];\n        } else {\n            push @pos, $arr->[$i];\n        }\n    }\n    my @res = (@neg, @pos);\n    return \\@res;\n}",
    "    my @arr = @$arr;\n    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr[$i] < 0) {\n            $i++;\n        } elsif($arr[$j] >= 0) {\n            $j--;\n        } else {\n            my $temp = $arr[$i];\n            $arr[$i] = $arr[$j];\n            $arr[$j] = $temp;\n            $i++;\n            $j--;\n        }\n    }\n    return @arr;\n}",
    "    my @neg_arr = ();\n    my @pos_arr = ();\n    my $i = 0;\n    while ($i < $n) {\n        if ($arr->[$i] < 0) {\n            push @neg_arr, $arr->[$i];\n        } else {\n            push @pos_arr, $arr->[$i];\n        }\n        $i++;\n    }\n    my $j = 0;\n    while ($j < scalar(@neg_arr)) {\n        $arr->[$j] = $neg_arr[$j];\n        $j++;\n    }\n    my $k = 0;\n    while ($k < scalar(@pos_arr)) {\n        $arr->[$j] = $pos_arr[$k];\n        $j++;\n        $k++;\n    }\n    return $arr;\n}",
    "    my @neg = ();\n    my @pos = ();\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] < 0) {\n            push @neg, $arr->[$i];\n        }\n        else {\n            push @pos, $arr->[$i];\n        }\n    }\n    my @res = (@neg, @pos);\n    return @res;\n}",
    "    my @result;\n    my @negative;\n    my @positive;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @negative, $arr->[$i];\n        } else {\n            push @positive, $arr->[$i];\n        }\n    }\n    @result = (@negative, @positive);\n    return @result;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0 && $arr->[$j] > 0) {\n            $i++;\n            $j--;\n        } elsif ($arr->[$i] < 0 && $arr->[$j] < 0) {\n            $i++;\n        } elsif ($arr->[$i] > 0 && $arr->[$j] > 0) {\n            $j--;\n        } else {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $i++;\n            $j--;\n        }\n    }\n    return $arr;\n}",
    "    my @neg = grep {$_ < 0} @$arr;\n    my @pos = grep {$_ >= 0} @$arr;\n    my @result = (@neg, @pos);\n    return @result;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n    return $arr;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] < 0 && $arr->[$j] > 0) {\n            $i++;\n            $j--;\n        } elsif($arr->[$i] < 0 && $arr->[$j] < 0) {\n            $i++;\n        } elsif($arr->[$i] > 0 && $arr->[$j] > 0) {\n            $j--;\n        } else {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $i++;\n            $j--;\n        }\n    }\n    return $arr;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        while ($i < $j && $arr->[$i] < 0) {\n            $i++;\n        }\n        while ($i < $j && $arr->[$j] >= 0) {\n            $j--;\n        }\n        if ($i < $j) {\n            my $tmp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $tmp;\n        }\n    }\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] < 0) {\n            $i++;\n        } else {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $j--;\n        }\n    }\n    return $arr;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] < 0) {\n            $i++;\n        } else {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $j--;\n        }\n    }\n    return $arr;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        while ($i < $j && $arr->[$i] < 0) {\n            $i++;\n        }\n        while ($i < $j && $arr->[$j] >= 0) {\n            $j--;\n        }\n        if ($i < $j) {\n            my $tmp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $tmp;\n        }\n    }\n}",
    "    my @neg = ();\n    my @pos = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @neg, $arr->[$i];\n        } else {\n            push @pos, $arr->[$i];\n        }\n    }\n    my @result = (@neg, @pos);\n    return @result;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n}",
    "    my $j = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $j++;\n        }\n    }\n    return $arr;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] < 0) {\n            $i++;\n        }\n        else {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $j--;\n        }\n    }\n    return $arr;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n}",
    "    my @arr = @$arr;\n    my @neg;\n    my @pos;\n    for my $i (0..$n-1) {\n        if ($arr[$i] < 0) {\n            push @neg, $arr[$i];\n        } else {\n            push @pos, $arr[$i];\n        }\n    }\n    my @result = (@neg, @pos);\n    return @result;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        }\n        else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] < 0) {\n            $i++;\n        } elsif($arr->[$j] >= 0) {\n            $j--;\n        } else {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $i++;\n            $j--;\n        }\n    }\n}",
    "    my @negatives = grep {$_ < 0} @$arr;\n    my @positives = grep {$_ >= 0} @$arr;\n    my @result = (@negatives, @positives);\n    return @result[0..$n-1];\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] < 0) {\n            $i++;\n        }\n        elsif($arr->[$j] >= 0) {\n            $j--;\n        }\n        else {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $i++;\n            $j--;\n        }\n    }\n    return $arr;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        }\n        elsif ($arr->[$j] >= 0) {\n            $j--;\n        }\n        else {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $i++;\n            $j--;\n        }\n    }\n    return $arr;\n}",
    "    my @neg_arr = ();\n    my @pos_arr = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @neg_arr, $arr->[$i];\n        } else {\n            push @pos_arr, $arr->[$i];\n        }\n    }\n    my @new_arr = (@neg_arr, @pos_arr);\n    return @new_arr;\n}",
    "    my @negative = ();\n    my @positive = ();\n    for my $i (0..$n-1) {\n        if ($arr->[$i] < 0) {\n            push @negative, $arr->[$i];\n        } else {\n            push @positive, $arr->[$i];\n        }\n    }\n    my @result = (@negative, @positive);\n    return \\@result;\n}",
    "    my @neg = ();\n    my @pos = ();\n    my @result = ();\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] < 0) {\n            push(@neg, $arr->[$i]);\n        } else {\n            push(@pos, $arr->[$i]);\n        }\n    }\n    @result = (@neg, @pos);\n    return @result;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n    return $arr;\n}",
    "\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] < 0) {\n            $i++;\n        }\n        elsif($arr->[$j] >= 0) {\n            $j--;\n        }\n        else {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $i++;\n            $j--;\n        }\n    }\n    return $arr;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] < 0) {\n            $i++;\n        }\n        else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n}",
    "    my @neg = ();\n    my @pos = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @neg, $arr->[$i];\n        } else {\n            push @pos, $arr->[$i];\n        }\n    }\n    my @result = (@neg, @pos);\n    return @result;\n}",
    "    my @arr = @$arr;\n    my @neg;\n    my @pos;\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr[$i] < 0) {\n            push @neg, $arr[$i];\n        } else {\n            push @pos, $arr[$i];\n        }\n    }\n    return (@neg, @pos);\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] < 0) {\n            $i++;\n        }\n        elsif($arr->[$j] >= 0) {\n            $j--;\n        }\n        else {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $i++;\n            $j--;\n        }\n    }\n}",
    "    my @neg = ();\n    my @pos = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @neg, $arr->[$i];\n        } else {\n            push @pos, $arr->[$i];\n        }\n    }\n    my @res = (@neg, @pos);\n    return @res;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] < 0) {\n            $i++;\n        }\n        else {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $j--;\n        }\n    }\n    return $arr;\n}",
    "    my @neg_arr = ();\n    my @pos_arr = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @neg_arr, $arr->[$i];\n        } else {\n            push @pos_arr, $arr->[$i];\n        }\n    }\n    my @result = (@neg_arr, @pos_arr);\n    return @result;\n}",
    "    my @result;\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } elsif ($arr->[$j] >= 0) {\n            $j--;\n        } else {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $i++;\n            $j--;\n        }\n    }\n    return $arr;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } elsif ($arr->[$j] >= 0) {\n            $j--;\n        } else {\n            ($arr->[$i], $arr->[$j]) = ($arr->[$j], $arr->[$i]);\n            $i++;\n            $j--;\n        }\n    }\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] < 0) {\n            $i++;\n        } else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n}",
    "    my @neg;\n    my @pos;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @neg, $arr->[$i];\n        } else {\n            push @pos, $arr->[$i];\n        }\n    }\n    my @result = (@neg, @pos);\n    return @result;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        }\n        else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] < 0) {\n            $i++;\n        }\n        else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n}",
    "    my @neg_arr;\n    my @pos_arr;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push(@neg_arr, $arr->[$i]);\n        } else {\n            push(@pos_arr, $arr->[$i]);\n        }\n    }\n    my @result = (@neg_arr, @pos_arr);\n    return @result;\n}",
    "    my @neg = ();\n    my @pos = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @neg, $arr->[$i];\n        } else {\n            push @pos, $arr->[$i];\n        }\n    }\n    my @result = (@neg, @pos);\n    return @result;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } elsif ($arr->[$j] >= 0) {\n            $j--;\n        } else {\n            ($arr->[$i], $arr->[$j]) = ($arr->[$j], $arr->[$i]);\n        }\n    }\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] < 0) {\n            $i++;\n        }\n        elsif($arr->[$j] >= 0) {\n            $j--;\n        }\n        else {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $i++;\n            $j--;\n        }\n    }\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] < 0) {\n            $i++;\n        } else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] > 0) {\n            if($arr->[$j] < 0) {\n                my $temp = $arr->[$i];\n                $arr->[$i] = $arr->[$j];\n                $arr->[$j] = $temp;\n                $i++;\n                $j--;\n            } else {\n                $j--;\n            }\n        } else {\n            $i++;\n        }\n    }\n    return $arr;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } elsif ($arr->[$j] >= 0) {\n            $j--;\n        } else {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $i++;\n            $j--;\n        }\n    }\n    return $arr;\n}",
    "    my @arr = @$arr;\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr[$i] < 0) {\n            $i++;\n        } else {\n            my $tmp = $arr[$i];\n            $arr[$i] = $arr[$j];\n            $arr[$j] = $tmp;\n            $j--;\n        }\n    }\n    return @arr;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } elsif ($arr->[$j] >= 0) {\n            $j--;\n        } else {\n            my $tmp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $tmp;\n            $i++;\n            $j--;\n        }\n    }\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] > 0) {\n            if($arr->[$j] < 0) {\n                my $temp = $arr->[$i];\n                $arr->[$i] = $arr->[$j];\n                $arr->[$j] = $temp;\n                $i++;\n                $j--;\n            }\n            else {\n                $j--;\n            }\n        }\n        else {\n            $i++;\n        }\n    }\n    return $arr;\n}",
    "    my @neg = ();\n    my @pos = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @neg, $arr->[$i];\n        } else {\n            push @pos, $arr->[$i];\n        }\n    }\n    my @result = (@neg, @pos);\n    return @result;\n}",
    "    my @neg = grep { $_ < 0 } @$arr[0..$n-1];\n    my @pos = grep { $_ >= 0 } @$arr[0..$n-1];\n    my @res = (@neg, @pos);\n    return @res;\n}",
    "    my @neg = ();\n    my @pos = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @neg, $arr->[$i];\n        } else {\n            push @pos, $arr->[$i];\n        }\n    }\n    @$arr = (@neg, @pos);\n}",
    "    my @neg = ();\n    my @pos = ();\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] < 0) {\n            push(@neg, $arr->[$i]);\n        } else {\n            push(@pos, $arr->[$i]);\n        }\n    }\n    my @result = (@neg, @pos);\n    return @result;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } else {\n            my $tmp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $tmp;\n            $j--;\n        }\n    }\n}",
    "    my @neg = ();\n    my @pos = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @neg, $arr->[$i];\n        } else {\n            push @pos, $arr->[$i];\n        }\n    }\n    my @result = (@neg, @pos);\n    return @result;\n}",
    "    my @result = ();\n    my @negative = ();\n    my @positive = ();\n    for my $i (0 .. $n - 1) {\n        if ($arr->[$i] < 0) {\n            push @negative, $arr->[$i];\n        } else {\n            push @positive, $arr->[$i];\n        }\n    }\n    push @result, @negative;\n    push @result, @positive;\n    return @result;\n}",
    "    my @result = ();\n    my @positive = ();\n    my @negative = ();\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] < 0) {\n            push(@negative, $arr->[$i]);\n        } else {\n            push(@positive, $arr->[$i]);\n        }\n    }\n    push(@result, @negative);\n    push(@result, @positive);\n    return @result;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        }\n        else {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $j--;\n        }\n    }\n    return $arr;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    my $temp;\n    while($i < $j) {\n        if($arr->[$i] < 0) {\n            $i++;\n        }\n        else {\n            $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $j--;\n        }\n    }\n    return $arr;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] < 0) {\n            $i++;\n        }\n        else {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $j--;\n        }\n    }\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n}",
    "    my @neg;\n    my @pos;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] < 0) {\n            push @neg, $arr->[$i];\n        } else {\n            push @pos, $arr->[$i];\n        }\n    }\n    my $i = 0;\n    for my $num (@neg) {\n        $arr->[$i] = $num;\n        $i++;\n    }\n    for my $num (@pos) {\n        $arr->[$i] = $num;\n        $i++;\n    }\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] < 0) {\n            $i++;\n        } elsif($arr->[$j] >= 0) {\n            $j--;\n        } else {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $i++;\n            $j--;\n        }\n    }\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] > 0) {\n            while($arr->[$j] > 0 && $i < $j) {\n                $j--;\n            }\n            if($i < $j) {\n                my $temp = $arr->[$i];\n                $arr->[$i] = $arr->[$j];\n                $arr->[$j] = $temp;\n            }\n        }\n        $i++;\n    }\n    return $arr;\n}",
    "    my @neg;\n    my @pos;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] < 0) {\n            push @neg, $arr->[$i];\n        } else {\n            push @pos, $arr->[$i];\n        }\n    }\n    my @result = (@neg, @pos);\n    return @result;\n}",
    "    my @neg = ();\n    my @pos = ();\n    for my $i (0..$n-1) {\n        if ($arr->[$i] < 0) {\n            push @neg, $arr->[$i];\n        } else {\n            push @pos, $arr->[$i];\n        }\n    }\n    my @res = (@neg, @pos);\n    return \\@res;\n}",
    "    my @neg;\n    my @pos;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @neg, $arr->[$i];\n        } else {\n            push @pos, $arr->[$i];\n        }\n    }\n    my @result = (@neg, @pos);\n    return @result;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        }\n        else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n    return $arr;\n}",
    "    my @result = ();\n    my @positive = ();\n    my @negative = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @negative, $arr->[$i];\n        } else {\n            push @positive, $arr->[$i];\n        }\n    }\n    push @result, @negative;\n    push @result, @positive;\n    return @result;\n}",
    "    my @negatives;\n    my @positives;\n    my $i = 0;\n    while($i < $n) {\n        if($arr->[$i] < 0) {\n            push @negatives, $arr->[$i];\n        } else {\n            push @positives, $arr->[$i];\n        }\n        $i++;\n    }\n    my @result = (@negatives, @positives);\n    return \\@result;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n    return $arr;\n}",
    "    my @result = ();\n    my @negative = ();\n    my @positive = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @negative, $arr->[$i];\n        } else {\n            push @positive, $arr->[$i];\n        }\n    }\n    push @result, @negative;\n    push @result, @positive;\n    return \\@result;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] < 0) {\n            $i++;\n        }\n        elsif($arr->[$j] >= 0) {\n            $j--;\n        }\n        else {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $i++;\n            $j--;\n        }\n    }\n    return $arr;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] > 0) {\n            if ($arr->[$j] < 0) {\n                my $tmp = $arr->[$i];\n                $arr->[$i] = $arr->[$j];\n                $arr->[$j] = $tmp;\n                $i++;\n                $j--;\n            } else {\n                $j--;\n            }\n        } else {\n            $i++;\n        }\n    }\n    return $arr;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] < 0) {\n            $i++;\n        }\n        else {\n            if($arr->[$j] > 0) {\n                $j--;\n            }\n            else {\n                my $temp = $arr->[$i];\n                $arr->[$i] = $arr->[$j];\n                $arr->[$j] = $temp;\n                $i++;\n                $j--;\n            }\n        }\n    }\n    return $arr;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] < 0) {\n            $i++;\n        }\n        else {\n            if($arr->[$j] < 0) {\n                my $temp = $arr->[$i];\n                $arr->[$i] = $arr->[$j];\n                $arr->[$j] = $temp;\n                $i++;\n                $j--;\n            }\n            else {\n                $j--;\n            }\n        }\n    }\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] < 0) {\n            $i++;\n        }\n        else {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $j--;\n        }\n    }\n    return $arr;\n}",
    "    my @result = ();\n    my @negative = ();\n    my @positive = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @negative, $arr->[$i];\n        } else {\n            push @positive, $arr->[$i];\n        }\n    }\n    push @result, @negative;\n    push @result, @positive;\n    return @result;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        }\n        elsif ($arr->[$j] >= 0) {\n            $j--;\n        }\n        else {\n            my $tmp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $tmp;\n            $i++;\n            $j--;\n        }\n    }\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0 && $arr->[$j] > 0) {\n            $i++;\n            $j--;\n        } elsif ($arr->[$i] > 0 && $arr->[$j] < 0) {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $i++;\n            $j--;\n        } elsif ($arr->[$i] < 0 && $arr->[$j] < 0) {\n            $i++;\n        } else {\n            $j--;\n        }\n    }\n    return $arr;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        }\n        elsif ($arr->[$j] >= 0) {\n            $j--;\n        }\n        else {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $i++;\n            $j--;\n        }\n    }\n}",
    "    my @result;\n    my @positive;\n    my @negative;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] < 0) {\n            push @negative, $arr->[$i];\n        } else {\n            push @positive, $arr->[$i];\n        }\n    }\n    push @result, @negative;\n    push @result, @positive;\n    return @result;\n}",
    "    my @arr = @$arr;\n    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr[$i] < 0) {\n            $i++;\n        }\n        elsif($arr[$j] > 0) {\n            $j--;\n        }\n        else {\n            my $temp = $arr[$i];\n            $arr[$i] = $arr[$j];\n            $arr[$j] = $temp;\n            $i++;\n            $j--;\n        }\n    }\n    return @arr;\n}",
    "    my @neg = ();\n    my @pos = ();\n    my @result = ();\n    foreach my $i (@$arr) {\n        if ($i < 0) {\n            push @neg, $i;\n        } else {\n            push @pos, $i;\n        }\n    }\n    push @result, @neg;\n    push @result, @pos;\n    return @result;\n}",
    "    my @result = ();\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $n && $j >= 0) {\n        if ($arr->[$i] < 0) {\n            push @result, $arr->[$i];\n            $i++;\n        } else {\n            unshift @result, $arr->[$j];\n            $j--;\n        }\n    }\n    while ($i < $n) {\n        push @result, $arr->[$i];\n        $i++;\n    }\n    while ($j >= 0) {\n        unshift @result, $arr->[$j];\n        $j--;\n    }\n    return \\@result;\n}",
    "    my @neg = grep { $_ < 0 } @$arr;\n    my @pos = grep { $_ >= 0 } @$arr;\n    splice(@$arr, 0, $n, @neg, @pos);\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        }\n        else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] < 0) {\n            $i++;\n        } else {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $j--;\n        }\n    }\n}",
    "    my @neg_arr = ();\n    my @pos_arr = ();\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] < 0) {\n            push @neg_arr, $arr->[$i];\n        } else {\n            push @pos_arr, $arr->[$i];\n        }\n    }\n    my @result = (@neg_arr, @pos_arr);\n    return @result;\n}",
    "    my @neg_arr = ();\n    my @pos_arr = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @neg_arr, $arr->[$i];\n        } else {\n            push @pos_arr, $arr->[$i];\n        }\n    }\n    my @result = (@neg_arr, @pos_arr);\n    return @result;\n}",
    "    my @neg_arr;\n    my @pos_arr;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @neg_arr, $arr->[$i];\n        } else {\n            push @pos_arr, $arr->[$i];\n        }\n    }\n    my @result = (@neg_arr, @pos_arr);\n    return @result;\n}",
    "    my @neg = ();\n    my @pos = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @neg, $arr->[$i];\n        } else {\n            push @pos, $arr->[$i];\n        }\n    }\n    my @result = (@neg, @pos);\n    return @result;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] < 0) {\n            $i++;\n        }\n        elsif($arr->[$j] >= 0) {\n            $j--;\n        }\n        else {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $i++;\n            $j--;\n        }\n    }\n    return $arr;\n}",
    "    my @neg = grep { $_ < 0 } @$arr[0..$n-1];\n    my @pos = grep { $_ >= 0 } @$arr[0..$n-1];\n    @$arr[0..$n-1] = (@neg, @pos);\n}",
    "    my @result = ();\n    my @negative = ();\n    my @positive = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @negative, $arr->[$i];\n        } else {\n            push @positive, $arr->[$i];\n        }\n    }\n    @result = (@negative, @positive);\n    return @result;\n}",
    "    my @result = ();\n    my @positive = ();\n    my @negative = ();\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] < 0) {\n            push @negative, $arr->[$i];\n        } else {\n            push @positive, $arr->[$i];\n        }\n    }\n    push @result, @negative;\n    push @result, @positive;\n    return @result;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] > 0) {\n            if ($arr->[$j] < 0) {\n                my $temp = $arr->[$i];\n                $arr->[$i] = $arr->[$j];\n                $arr->[$j] = $temp;\n                $i++;\n                $j--;\n            } else {\n                $j--;\n            }\n        } else {\n            $i++;\n        }\n    }\n    return $arr;\n}",
    "    my @result = ();\n    my @negative = ();\n    my @positive = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push @negative, $arr->[$i];\n        } else {\n            push @positive, $arr->[$i];\n        }\n    }\n    push @result, @negative;\n    push @result, @positive;\n    return @result;\n}",
    "    my @temp = ();\n    my @res = ();\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] < 0) {\n            push(@temp, $arr->[$i]);\n        } else {\n            push(@res, $arr->[$i]);\n        }\n    }\n    push(@temp, @res);\n    return @temp;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] > 0 && $arr->[$j] < 0) {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $i++;\n            $j--;\n        } elsif($arr->[$i] < 0) {\n            $i++;\n        } elsif($arr->[$j] > 0) {\n            $j--;\n        }\n    }\n    return $arr;\n}",
    "    my @result;",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] < 0) {\n            $i++;\n        }\n        elsif($arr->[$j] >= 0) {\n            $j--;\n        }\n        else {\n            my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j] = $temp;\n            $i++;\n            $j--;\n        }\n    }\n    return $arr;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n}",
    "    my @result;\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i <= $j) {\n        if ($arr->[$i] < 0) {\n            push @result, $arr->[$i];\n            $i++;\n        } else {\n            unshift @result, $arr->[$j];\n            $j--;\n        }\n    }\n    return \\@result;\n}",
    "    my @neg = ();\n    my @pos = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] < 0) {\n            push(@neg, $arr->[$i]);\n        } else {\n            push(@pos, $arr->[$i]);\n        }\n    }\n    my @result = (@neg, @pos);\n    return @result;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] < 0) {\n            $i++;\n        } else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] < 0) {\n            $i++;\n        } else {\n            swap($arr, $i, $j);\n            $j--;\n        }\n    }\n}"
  ]
}
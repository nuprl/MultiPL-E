{
  "name": "mbpp_223_is_majority",
  "language": "pl",
  "prompt": "# Write a function that takes in a sorted array, its length (n), and an element and returns whether the element is the majority element in the given sorted array. (The majority element is the element that occurs more than n/2 times.)\nsub is_majority {\n    my($arr, $n, $x) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_223_is_majority.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&is_majority;\n        if(eq_deeply($candidate->([1, 2, 3, 3, 3, 3, 10], 7, 3),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 1, 2, 4, 4, 4, 6, 6], 8, 4),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 1, 1, 2, 2], 5, 1),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 1, 2, 2], 5, 1),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $count = 0;\n    for my $i (0 .. $n - 1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1)) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if ($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    return 0 if $i == -1;\n    if ($i + $n/2 < $n && $arr->[$i + $n/2] == $x) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    foreach my $i (@$arr) {\n        if ($i == $x) {\n            $count++;\n        }\n    }\n    if ($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1)) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1)) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    foreach my $i (@$arr) {\n        if ($i == $x) {\n            $count++;\n        }\n    }\n    if ($count > $n/2) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1)) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if($count > $n/2) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    my $i = firstidx { $_ == $x } @$arr;\n    return 0 if $i == -1;\n    return 1 if $i + $n/2 < $#$arr;\n    return 0;\n}",
    "    my $count = 0;\n    foreach my $i (@$arr) {\n        if ($i == $x) {\n            $count++;\n        }\n    }\n    if ($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= $n - 1) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1) && $arr->[$i + $n/2] == $x) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $count = 0;\n    for my $i (0 .. $n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $count = 0;\n    foreach my $i (@$arr) {\n        if ($i == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $count = 0;\n    foreach my $i (@$arr) {\n        if ($i == $x) {\n            $count++;\n        }\n    }\n    if ($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0 .. $n - 1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n / 2;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0 .. $n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1) && $arr->[$i + $n/2] == $x) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    foreach my $i (@$arr) {\n        if($i == $x) {\n            $count++;\n        }\n    }\n    if($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if(($i + $n/2) <= ($n - 1) && $arr->[$i + $n/2] == $x) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1)) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    return 0 if $i == -1;\n    return 1 if $i + $n/2 < $n && $arr->[$i + $n/2] == $x;\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $count = 0;\n    foreach my $i (@$arr) {\n        if ($i == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $count = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return ($count > $n/2);\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1) and $arr->[$i + $n/2] == $x) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $i = first_occurrence($arr, 0, $n-1, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i+$n/2) <= ($n-1) and $arr->[$i+$n/2] == $x) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    foreach my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return ($count > $n/2);\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if ($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0 .. $n - 1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n / 2;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= $n - 1) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if ($i + $n/2 <= $n - 1) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    foreach my $i (@$arr) {\n        if ($i == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $count = 0;\n    foreach my $i (@$arr) {\n        if ($i == $x) {\n            $count++;\n        }\n    }\n    if ($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    foreach my $i (@$arr) {\n        if ($i == $x) {\n            $count++;\n        }\n    }\n    if ($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1)) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n-1)) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    foreach my $e (@$arr) {\n        if ($e == $x) {\n            $count++;\n        }\n    }\n    return $count > $n / 2;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1) and $arr->[$i + $n/2] == $x) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1)) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1)) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return ($count > $n/2);\n}",
    "    my $count = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if ($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n / 2) <= ($n - 1)) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1) && $arr->[$i + $n/2] == $x) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $c = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] == $x) {\n            $c++;\n        }\n    }\n    return $c > $n/2;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1)) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i <= $j) {\n        my $mid = int(($i + $j) / 2);\n        if ($arr->[$mid] == $x) {\n            if ((($mid + $n/2) <= ($n - 1)) && ($arr->[$mid + $n/2] == $x)) {\n                return 1;\n            } else {\n                return 0;\n            }\n        } elsif ($arr->[$mid] > $x) {\n            $j = $mid - 1;\n        } else {\n            $i = $mid + 1;\n        }\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= $n - 1) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n-1)) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= $n - 1) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    foreach my $e (@$arr) {\n        if ($e == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= $n-1) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return ($count > $n/2);\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1) and $arr->[$i + $n/2] == $x) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if ($count > $n / 2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0 .. $n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $count = 0;\n    for (my $i=0; $i<$n; $i++) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if ($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1) and $arr->[$i + $n/2] == $x) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    foreach my $i (@$arr) {\n        if ($i == $x) {\n            $count++;\n        }\n    }\n    if ($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1)) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if ($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1)) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if ($i + $n/2 <= $n - 1) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    foreach my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if ($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $i = _binary_search($arr, 0, $n - 1, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1) and $arr->[$i + $n/2] == $x) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1) and $arr->[$i + $n/2] == $x) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= $n-1) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "\n    my $i = first_occurrence($arr, $n, $x);",
    "    my $count = 0;\n    foreach my $i (@$arr) {\n        $count++ if $i == $x;\n    }\n    return $count > $n/2;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n-1)) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if($count > $n / 2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n / 2) <= $n - 1) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = $n - 1;\n    while ($i <= $j) {\n        my $mid = int(($i + $j) / 2);\n        if ($arr->[$mid] == $x) {\n            if ((($mid + $n / 2) <= ($n - 1)) && ($arr->[$mid + $n / 2] == $x)) {\n                return 1;\n            }\n            else {\n                return 0;\n            }\n        }\n        elsif ($arr->[$mid] > $x) {\n            $j = $mid - 1;\n        }\n        else {\n            $i = $mid + 1;\n        }\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1) && $arr->[$i + $n/2] == $x) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0 .. $n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $count = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1)) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    foreach my $e (@$arr) {\n        if ($e == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $count = 0;\n    for my $i (0 .. $n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if ($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if ($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1) && $arr->[$i + $n/2] == $x) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1)) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1) && $arr->[$i + $n/2] == $x) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    return ($i != -1 && $i + $n/2 < $n && $arr->[$i + $n/2] == $x) ? 1 : 0;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1)) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    foreach my $i (@$arr) {\n        if ($i == $x) {\n            $count++;\n        }\n    }\n    if ($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if ($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    foreach my $e (@$arr) {\n        if ($e == $x) {\n            $count++;\n        }\n    }\n    return $count > $n / 2;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1) && $arr->[$i + $n/2] == $x) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if ($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1) && $arr->[$i + $n/2] == $x) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1)) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n-1)) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n / 2) <= ($n - 1)) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n-1)) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n / 2) <= $n - 1) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1) && $arr->[$i + $n/2] == $x) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1) and $arr->[$i + $n/2] == $x) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if ($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    foreach my $i (@$arr) {\n        $count++ if $i == $x;\n    }\n    return $count > $n/2;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $i = first_occurence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if ($i + $n/2 < $n and $arr->[$i + $n/2] == $x) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    return ($i != -1 && $i + $n/2 < $n && $arr->[$i + $n/2] == $x);\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= $n-1) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if ($i + $n/2 < $n && $arr->[$i + $n/2] == $x) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $i = first_occurrence($arr, 0, $n-1, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n-1) && $arr->[$i + $n/2] == $x) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n-1)) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $count = 0;\n    foreach my $e (@$arr) {\n        if ($e == $x) {\n            $count++;\n        }\n    }\n    return $count > $n / 2;\n}",
    "    my $count = 0;\n    foreach my $elem (@$arr) {\n        if ($elem == $x) {\n            $count++;\n        }\n    }\n    return ($count > $n/2);\n}",
    "    my $count = 0;\n    for my $i (0 .. $n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    return ($i != -1 && $i + $n/2 < $n && $arr->[$i + $n/2] == $x);\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if ($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    foreach my $i (@$arr) {\n        if ($i == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $count = 0;\n    foreach my $i (@$arr) {\n        if ($i == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1) && $arr->[$i + $n/2] == $x) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1)) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n-1)) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    return 0 if $i == -1;\n    return ($i + $n/2) <= ($n - 1);\n}",
    "    my $count = 0;\n    for my $i (0 .. $n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if ($i + $n/2 <= $n-1) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $count = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if ($count > $n / 2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1)) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $count = 0;\n    foreach my $i (@$arr) {\n        if ($i == $x) {\n            $count++;\n        }\n    }\n    if ($count > $n/2) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1)) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1)) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if ($i + $n/2 < $n && $arr->[$i + $n/2] == $x) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return ($count > $n/2);\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1)) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= $n-1) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1)) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if ($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1) && $arr->[$i + $n/2] == $x) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return ($count > $n/2);\n}",
    "    my $i = first_occurrence($arr, 0, $n-1, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if ($i + $n/2 < $n && $arr->[$i + $n/2] == $x) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1) && $arr->[$i + $n/2] == $x) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1)) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if ($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1)) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0 .. $n - 1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if ($count > $n / 2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for(my $i=0; $i<$n; $i++) {\n        if($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    if($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    foreach my $i (@$arr) {\n        if ($i == $x) {\n            $count++;\n        }\n    }\n    if ($count > $n/2) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    foreach my $i (@$arr) {\n        if ($i == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $i = first_occurrence($arr, $n, $x);\n    if ($i == -1) {\n        return 0;\n    }\n    if (($i + $n/2) <= ($n - 1)) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}",
    "    my $count = 0;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] == $x) {\n            $count++;\n        }\n    }\n    return $count > $n/2;\n}"
  ]
}
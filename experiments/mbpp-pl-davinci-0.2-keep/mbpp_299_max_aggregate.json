{
  "name": "mbpp_299_max_aggregate",
  "language": "pl",
  "prompt": "# Write a function to calculate the maximum aggregate from the list of tuples.\nsub max_aggregate {\n    my($stdata) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_299_max_aggregate.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&max_aggregate;\n        if(eq_deeply($candidate->([[\"Juan Whelan\", 90], [\"Sabah Colley\", 88], [\"Peter Nichols\", 7], [\"Juan Whelan\", 122], [\"Sabah Colley\", 84]]),[\"Juan Whelan\", 212])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Juan Whelan\", 50], [\"Sabah Colley\", 48], [\"Peter Nichols\", 37], [\"Juan Whelan\", 22], [\"Sabah Colley\", 14]]),[\"Juan Whelan\", 72])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Juan Whelan\", 10], [\"Sabah Colley\", 20], [\"Peter Nichols\", 30], [\"Juan Whelan\", 40], [\"Sabah Colley\", 50]]),[\"Sabah Colley\", 70])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $aggregate = $tuple->[0] + $tuple->[1] + $tuple->[2];\n        if ($aggregate > $max) {\n            $max = $aggregate;\n        }\n    }\n    return $max;\n}",
    "    my $max_agg = 0;\n    foreach my $st (@$stdata) {\n        my $agg = $st->[1] + $st->[2] + $st->[3];\n        $max_agg = $agg if $agg > $max_agg;\n    }\n    return $max_agg;\n}",
    "    my $max_aggregate = 0;\n    foreach my $st (@$stdata) {\n        my $aggregate = $st->[0] + $st->[1] + $st->[2];\n        if ($aggregate > $max_aggregate) {\n            $max_aggregate = $aggregate;\n        }\n    }\n    return $max_aggregate;\n}",
    "    my $max_aggregate = 0;\n    foreach my $st (@$stdata) {\n        my $aggregate = $st->{'runs'} + $st->{'wickets'};\n        if ($aggregate > $max_aggregate) {\n            $max_aggregate = $aggregate;\n        }\n    }\n    return $max_aggregate;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] * $tuple->[1];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] + $tuple->[1] + $tuple->[2];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $st (@$stdata) {\n        my $agg = $st->[1] + $st->[2] + $st->[3];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $aggregate = $tuple->[0] + $tuple->[1] + $tuple->[2];\n        if ($aggregate > $max) {\n            $max = $aggregate;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[1] + $tuple->[2] + $tuple->[3];\n        if ($agg > $max) {\n            $max = $agg;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] * $tuple->[1];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $aggregate = $tuple->[1] + $tuple->[2] + $tuple->[3];\n        $max = $aggregate if $aggregate > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my($agg, $name) = @$tuple;\n        if ($agg > $max) {\n            $max = $agg;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] + $tuple->[1] + $tuple->[2];\n        if ($agg > $max) {\n            $max = $agg;\n        }\n    }\n    return $max;\n}",
    "    my $max_aggregate = 0;\n    foreach my $st (@$stdata) {\n        my $aggregate = $st->[1] + $st->[2] + $st->[3];\n        if ($aggregate > $max_aggregate) {\n            $max_aggregate = $aggregate;\n        }\n    }\n    return $max_aggregate;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my($aggregate) = @$tuple;\n        $max = $aggregate if $aggregate > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my($aggregate) = @$tuple;\n        $max = $aggregate if $aggregate > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n\tmy $agg = $tuple->[1] * $tuple->[2];\n\t$max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = aggregate($tuple);\n        if ($agg > $max) {\n            $max = $agg;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n\tmy $agg = $tuple->[0] + $tuple->[1] + $tuple->[2];\n\t$max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $aggregate = $tuple->[0] + $tuple->[1] + $tuple->[2];\n        $max = $aggregate if $aggregate > $max;\n    }\n    return $max;\n}",
    "    my $max_agg = 0;\n    foreach my $st (@$stdata) {\n        my $agg = $st->{'aggregate'};\n        $max_agg = $agg if $agg > $max_agg;\n    }\n    return $max_agg;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] + $tuple->[1] + $tuple->[2];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $aggregate = $tuple->[0] + $tuple->[1];\n        if ($aggregate > $max) {\n            $max = $aggregate;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my($a, $b, $c) = @$tuple;\n        my $agg = $a + $b + $c;\n        if ($agg > $max) {\n            $max = $agg;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $st (@$stdata) {\n        my $agg = $st->[1] * $st->[2];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] + $tuple->[1];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[1] * $tuple->[2];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[1] + $tuple->[2] + $tuple->[3];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[1] + $tuple->[2] + $tuple->[3];\n        if ($agg > $max) {\n            $max = $agg;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        $max = $tuple->[1] if $tuple->[1] > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] + $tuple->[1] + $tuple->[2];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max_aggregate = 0;\n    foreach my $st (@$stdata) {\n        my $aggregate = $st->{'runs'} + $st->{'wickets'} + $st->{'catches'};\n        if ($aggregate > $max_aggregate) {\n            $max_aggregate = $aggregate;\n        }\n    }\n    return $max_aggregate;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $aggregate = $tuple->[2] + $tuple->[3];\n        if ($aggregate > $max) {\n            $max = $aggregate;\n        }\n    }\n    return $max;\n}",
    "    my $max_agg = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] + $tuple->[1] + $tuple->[2];\n        $max_agg = $agg if $agg > $max_agg;\n    }\n    return $max_agg;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my($aggregate, $count) = @$tuple;\n        $max = $aggregate if $aggregate > $max;\n    }\n    return $max;\n}",
    "    my $max_aggregate = 0;\n    foreach my $st (@$stdata) {\n        my $aggregate = $st->[1] + $st->[2] + $st->[3];\n        if ($aggregate > $max_aggregate) {\n            $max_aggregate = $aggregate;\n        }\n    }\n    return $max_aggregate;\n}",
    "    my $max_aggregate = 0;\n    foreach my $st (@$stdata) {\n        my $aggregate = $st->[1] + $st->[2] + $st->[3];\n        $max_aggregate = $aggregate if $aggregate > $max_aggregate;\n    }\n    return $max_aggregate;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my($aggregate) = @$tuple;\n        if ($aggregate > $max) {\n            $max = $aggregate;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $aggregate = $tuple->[0] * $tuple->[1];\n        $max = $aggregate if $aggregate > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $aggregate = $tuple->[1] + $tuple->[2] + $tuple->[3];\n        $max = $aggregate if $aggregate > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $aggregate = $tuple->[1] + $tuple->[2] + $tuple->[3];\n        if ($aggregate > $max) {\n            $max = $aggregate;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] + $tuple->[1] + $tuple->[2];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] * $tuple->[1];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my($agg, $count) = @$tuple;\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $st (@$stdata) {\n        my $agg = $st->[1] + $st->[2] + $st->[3];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $st (@$stdata) {\n        my $agg = $st->[0] + $st->[1];\n        if ($agg > $max) {\n            $max = $agg;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $aggregate = $tuple->[0] * $tuple->[1];\n        if ($aggregate > $max) {\n            $max = $aggregate;\n        }\n    }\n    return $max;\n}",
    "    my $max_aggregate = 0;\n    foreach my $st (@$stdata) {\n        my $aggregate = $st->[1] + $st->[2] + $st->[3];\n        $max_aggregate = $aggregate if $aggregate > $max_aggregate;\n    }\n    return $max_aggregate;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[1] * $tuple->[2];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max_agg = 0;\n    foreach my $st (@$stdata) {\n        my $agg = $st->[1] + $st->[2] + $st->[3];\n        $max_agg = $agg if $agg > $max_agg;\n    }\n    return $max_agg;\n}",
    "    my $max_aggregate = 0;\n    foreach my $st (@$stdata) {\n        my $aggregate = $st->[1] + $st->[2] + $st->[3];\n        if ($aggregate > $max_aggregate) {\n            $max_aggregate = $aggregate;\n        }\n    }\n    return $max_aggregate;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] + $tuple->[1] + $tuple->[2];\n        if ($agg > $max) {\n            $max = $agg;\n        }\n    }\n    return $max;\n}",
    "    my $max_agg = 0;\n    foreach my $st (@$stdata) {\n        my $agg = $st->{'aggregate'};\n        if ($agg > $max_agg) {\n            $max_agg = $agg;\n        }\n    }\n    return $max_agg;\n}",
    "    my $max_agg = 0;\n    foreach my $st (@$stdata) {\n        my $agg = $st->[1] * $st->[2];\n        if ($agg > $max_agg) {\n            $max_agg = $agg;\n        }\n    }\n    return $max_agg;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my($agg) = $tuple->[0];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $aggregate = $tuple->[1] + $tuple->[2] + $tuple->[3];\n        $max = $aggregate if $aggregate > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[1] + $tuple->[2] + $tuple->[3];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $st (@$stdata) {\n        my $agg = $st->[0] + $st->[1] + $st->[2];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max_aggregate = 0;\n    foreach my $st (@$stdata) {\n        my $aggregate = $st->[1] + $st->[2];\n        if ($aggregate > $max_aggregate) {\n            $max_aggregate = $aggregate;\n        }\n    }\n    return $max_aggregate;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] * $tuple->[1];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my($count, $aggregate) = @$tuple;\n        $max = $aggregate if $aggregate > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n\tmy $agg = $tuple->[0] + $tuple->[1];\n\tif ($agg > $max) {\n\t    $max = $agg;\n\t}\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] + $tuple->[1];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[2] + $tuple->[3];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[1] * $tuple->[2];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] * $tuple->[1];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $st (@$stdata) {\n        my $agg = $st->[1] * $st->[2];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[1] + $tuple->[2] + $tuple->[3];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $aggregate = $tuple->[0] * $tuple->[1];\n        $max = $aggregate if $aggregate > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $st (@$stdata) {\n        my $agg = $st->[1] + $st->[2] + $st->[3];\n        if ($agg > $max) {\n            $max = $agg;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $aggregate = $tuple->[1] + $tuple->[2] + $tuple->[3];\n        $max = $aggregate if $aggregate > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@{$stdata}) {\n        my $agg = $tuple->[1] + $tuple->[2] + $tuple->[3];\n        if ($agg > $max) {\n            $max = $agg;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $row (@$stdata) {\n        my $agg = $row->[1] + $row->[2] + $row->[3];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max_agg = 0;\n    foreach my $st (@$stdata) {\n        my $agg = $st->[1] + $st->[2] + $st->[3];\n        if ($agg > $max_agg) {\n            $max_agg = $agg;\n        }\n    }\n    return $max_agg;\n}",
    "    my $max = 0;\n    foreach my $st (@$stdata) {\n        my $agg = $st->[1] + $st->[2] + $st->[3];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n\tmy $agg = $tuple->[1] + $tuple->[2] + $tuple->[3];\n\t$max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $aggregate = $tuple->[0] + $tuple->[1] + $tuple->[2];\n        if ($aggregate > $max) {\n            $max = $aggregate;\n        }\n    }\n    return $max;\n}",
    "    my $max_aggregate = 0;\n    foreach my $st (@$stdata) {\n        my $aggregate = $st->[0] + $st->[1] + $st->[2];\n        $max_aggregate = $aggregate if $aggregate > $max_aggregate;\n    }\n    return $max_aggregate;\n}",
    "    my $max = 0;\n    foreach my $st (@$stdata) {\n        my $agg = $st->{'aggregate'};\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] + $tuple->[1] + $tuple->[2];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[1] + $tuple->[2] + $tuple->[3];\n        if ($agg > $max) {\n            $max = $agg;\n        }\n    }\n    return $max;\n}",
    "    my $max_agg = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] + $tuple->[1] + $tuple->[2];\n        if ($agg > $max_agg) {\n            $max_agg = $agg;\n        }\n    }\n    return $max_agg;\n}",
    "    my $max = 0;\n    for my $tuple (@$stdata) {\n        my $agg = $tuple->[1] + $tuple->[2] + $tuple->[3];\n        if ($agg > $max) {\n            $max = $agg;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $st (@$stdata) {\n\tmy $agg = $st->[1] + $st->[2] + $st->[3];\n\t$max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n\tmy $agg = $tuple->[0] + $tuple->[1] + $tuple->[2];\n\t$max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my($agg) = $tuple->[0];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my($a,$b,$c) = @$tuple;\n        my $agg = $a + $b + $c;\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $st (@$stdata) {\n        my $agg = $st->[1] + $st->[2] + $st->[3];\n        if ($agg > $max) {\n            $max = $agg;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[1] + $tuple->[2] + $tuple->[3];\n        if ($agg > $max) {\n            $max = $agg;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] + $tuple->[1] + $tuple->[2];\n        if ($agg > $max) {\n            $max = $agg;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[1] + $tuple->[2] + $tuple->[3];\n        if ($agg > $max) {\n            $max = $agg;\n        }\n    }\n    return $max;\n}",
    "    my $max_aggregate = 0;\n    foreach my $tuple (@$stdata) {\n        my $aggregate = $tuple->[0] + $tuple->[1];\n        if ($aggregate > $max_aggregate) {\n            $max_aggregate = $aggregate;\n        }\n    }\n    return $max_aggregate;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my($name, $agg) = @$tuple;\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] * $tuple->[1];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max_agg = 0;\n    foreach my $st (@$stdata) {\n\tmy $agg = $st->{'aggregate'};\n\tif ($agg > $max_agg) {\n\t    $max_agg = $agg;\n\t}\n    }\n    return $max_agg;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[1] * $tuple->[2];\n        if ($agg > $max) {\n            $max = $agg;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $aggregate = $tuple->[1] + $tuple->[2] + $tuple->[3];\n        if ($aggregate > $max) {\n            $max = $aggregate;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $aggregate = $tuple->[0] + $tuple->[1];\n        $max = $aggregate if $aggregate > $max;\n    }\n    return $max;\n}",
    "    my $max_aggregate = 0;\n    foreach my $tuple (@$stdata) {\n        my $aggregate = $tuple->[1] + $tuple->[2] + $tuple->[3];\n        $max_aggregate = $aggregate if $aggregate > $max_aggregate;\n    }\n    return $max_aggregate;\n}",
    "    my $max = 0;\n    foreach my $st (@$stdata) {\n        my $agg = $st->{'aggregate'};\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[1] * $tuple->[2];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $aggregate = $tuple->[0] + $tuple->[1] + $tuple->[2];\n        if ($aggregate > $max) {\n            $max = $aggregate;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[$AGG_INDEX];\n        if ($agg > $max) {\n            $max = $agg;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my($name, $agg) = @$tuple;\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] + $tuple->[1] + $tuple->[2];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] * $tuple->[1];\n        if ($agg > $max) {\n            $max = $agg;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[1] + $tuple->[2] + $tuple->[3];\n        if ($agg > $max) {\n            $max = $agg;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[1] + $tuple->[2] + $tuple->[3];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[1] + $tuple->[2];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $st (@$stdata) {\n        my $agg = $st->[1] + $st->[2] + $st->[3];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $aggregate = $tuple->[0] + $tuple->[1] + $tuple->[2];\n        if ($aggregate > $max) {\n            $max = $aggregate;\n        }\n    }\n    return $max;\n}",
    "    my($max) = 0;\n    foreach my $tuple (@$stdata) {\n        my($agg) = $tuple->[0] + $tuple->[1] + $tuple->[2];\n        if ($agg > $max) {\n            $max = $agg;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[1] + $tuple->[2] + $tuple->[3];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max_aggregate = 0;\n    foreach my $tuple (@$stdata) {\n        my($aggregate, $count) = @$tuple;\n        $max_aggregate = $aggregate if $aggregate > $max_aggregate;\n    }\n    return $max_aggregate;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] * $tuple->[1];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $st (@$stdata) {\n        my $agg = $st->[0] + $st->[1] + $st->[2];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[1] * $tuple->[2];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max_aggregate = 0;\n    foreach my $st (@$stdata) {\n        my $aggregate = $st->{'aggregate'};\n        if ($aggregate > $max_aggregate) {\n            $max_aggregate = $aggregate;\n        }\n    }\n    return $max_aggregate;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $aggregate = $tuple->[0] + $tuple->[1] + $tuple->[2];\n        if ($aggregate > $max) {\n            $max = $aggregate;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n\tmy $agg = $tuple->[0] + $tuple->[1] + $tuple->[2];\n\tif ($agg > $max) {\n\t    $max = $agg;\n\t}\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my($st, $agg) = @$tuple;\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max_aggregate = 0;\n    foreach my $st (@$stdata) {\n        my $aggregate = $st->[1] + $st->[2] + $st->[3];\n        if ($aggregate > $max_aggregate) {\n            $max_aggregate = $aggregate;\n        }\n    }\n    return $max_aggregate;\n}",
    "    my $max_aggregate = 0;\n    foreach my $tuple (@$stdata) {\n        my $aggregate = $tuple->[1] + $tuple->[2];\n        if ($aggregate > $max_aggregate) {\n            $max_aggregate = $aggregate;\n        }\n    }\n    return $max_aggregate;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my ($aggregate, $count) = @$tuple;\n        $max = $aggregate if $aggregate > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] * $tuple->[1];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my($aggregate) = @$tuple;\n        if ($aggregate > $max) {\n            $max = $aggregate;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[2] + $tuple->[3] + $tuple->[4];\n        if ($agg > $max) {\n            $max = $agg;\n        }\n    }\n    return $max;\n}",
    "    my $max_aggregate = 0;\n    foreach my $tuple (@$stdata) {\n        my $aggregate = $tuple->[0] + $tuple->[1];\n        if ($aggregate > $max_aggregate) {\n            $max_aggregate = $aggregate;\n        }\n    }\n    return $max_aggregate;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my($agg) = $tuple->[2];\n        if ($agg > $max) {\n            $max = $agg;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $aggregate = $tuple->[1] + $tuple->[2];\n        $max = $aggregate if $aggregate > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $aggregate = $tuple->[0] + $tuple->[1];\n        if ($aggregate > $max) {\n            $max = $aggregate;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my($agg) = @$tuple;\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    for my $tuple (@$stdata) {\n        my $agg = $tuple->[2] + $tuple->[3];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[1] * $tuple->[2];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $st (@$stdata) {\n        my $agg = $st->{'aggregate'};\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] * $tuple->[1];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] + $tuple->[1] + $tuple->[2];\n        if ($agg > $max) {\n            $max = $agg;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $aggregate = $tuple->[1] + $tuple->[2] + $tuple->[3];\n        if ($aggregate > $max) {\n            $max = $aggregate;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] * $tuple->[1];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] + $tuple->[1] + $tuple->[2];\n        if ($agg > $max) {\n            $max = $agg;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[2] + $tuple->[3] + $tuple->[4];\n        if ($agg > $max) {\n            $max = $agg;\n        }\n    }\n    return $max;\n}",
    "    my $max_aggregate = 0;\n    foreach my $st (@$stdata) {\n        my $aggregate = $st->[1] + $st->[2] + $st->[3];\n        if ($aggregate > $max_aggregate) {\n            $max_aggregate = $aggregate;\n        }\n    }\n    return $max_aggregate;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] * $tuple->[1];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[1] + $tuple->[2] + $tuple->[3];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $aggregate = $tuple->[0] + $tuple->[1] + $tuple->[2];\n        $max = $aggregate if $aggregate > $max;\n    }\n    return $max;\n}",
    "    my $max_aggregate = 0;\n    foreach my $tuple (@$stdata) {\n        my $aggregate = $tuple->[1] + $tuple->[2] + $tuple->[3];\n        if ($aggregate > $max_aggregate) {\n            $max_aggregate = $aggregate;\n        }\n    }\n    return $max_aggregate;\n}",
    "    my $max = 0;\n    foreach my $st (@$stdata) {\n        my $agg = $st->{'aggregate'};\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] + $tuple->[1];\n        if ($agg > $max) {\n            $max = $agg;\n        }\n    }\n    return $max;\n}",
    "    my $max_aggregate = 0;\n    foreach my $st (@$stdata) {\n        my $aggregate = $st->[1] + $st->[2];\n        if ($aggregate > $max_aggregate) {\n            $max_aggregate = $aggregate;\n        }\n    }\n    return $max_aggregate;\n}",
    "    my $max = 0;\n    foreach my $st (@$stdata) {\n        $max = $st->[1] if $st->[1] > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my($aggregate) = @$tuple;\n        $max = $aggregate if $aggregate > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[1] * $tuple->[2];\n        if ($agg > $max) {\n            $max = $agg;\n        }\n    }\n    return $max;\n}",
    "    my $max_aggregate = 0;\n    foreach my $st (@$stdata) {\n        my $aggregate = $st->[1] + $st->[2];\n        if ($aggregate > $max_aggregate) {\n            $max_aggregate = $aggregate;\n        }\n    }\n    return $max_aggregate;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my($aggregate) = $tuple->[$AGGREGATE_INDEX];\n        $max = $aggregate if $aggregate > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[1] + $tuple->[2] + $tuple->[3];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] * $tuple->[1];\n        if ($agg > $max) {\n            $max = $agg;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my($agg) = @$tuple;\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] * $tuple->[1];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[1] + $tuple->[2] + $tuple->[3];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $st (@$stdata) {\n        my $agg = $st->[0] + $st->[1];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my($agg) = @$tuple;\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $st (@$stdata) {\n        my $agg = $st->[1] + $st->[2] + $st->[3];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max_aggregate = 0;\n    foreach my $st (@$stdata) {\n        my $aggregate = $st->[0] + $st->[1] + $st->[2];\n        if ($aggregate > $max_aggregate) {\n            $max_aggregate = $aggregate;\n        }\n    }\n    return $max_aggregate;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my ($agg, $count) = @$tuple;\n        if ($agg > $max) {\n            $max = $agg;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my($agg) = $tuple->[0];\n        if ($agg > $max) {\n            $max = $agg;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] + $tuple->[1] + $tuple->[2] + $tuple->[3];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max_agg = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] + $tuple->[1] + $tuple->[2];\n        if ($agg > $max_agg) {\n            $max_agg = $agg;\n        }\n    }\n    return $max_agg;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n\tmy $agg = $tuple->[$AGG_IDX];\n\tif ($agg > $max) {\n\t    $max = $agg;\n\t}\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $st (@$stdata) {\n        my $agg = $st->[1] + $st->[2] + $st->[3];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[1] + $tuple->[2] + $tuple->[3];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    for my $tuple (@$stdata) {\n        my $agg = $tuple->[0] + $tuple->[1] + $tuple->[2];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $st (@$stdata) {\n        my $agg = $st->[0] + $st->[1] + $st->[2];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] + $tuple->[1];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max_aggregate = 0;\n    foreach my $tuple (@$stdata) {\n        my $aggregate = $tuple->[1] + $tuple->[2] + $tuple->[3];\n        if ($aggregate > $max_aggregate) {\n            $max_aggregate = $aggregate;\n        }\n    }\n    return $max_aggregate;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] * $tuple->[1];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my($agg) = $tuple->[1];\n        if ($agg > $max) {\n            $max = $agg;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $st (@$stdata) {\n        my $agg = $st->[1] + $st->[2];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[1] + $tuple->[2] + $tuple->[3];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my($aggregate) = @$tuple;\n        if ($aggregate > $max) {\n            $max = $aggregate;\n        }\n    }\n    return $max;\n}",
    "    my $max_aggregate = 0;\n    foreach my $st (@$stdata) {\n        my $aggregate = $st->[1] + $st->[2] + $st->[3];\n        if ($aggregate > $max_aggregate) {\n            $max_aggregate = $aggregate;\n        }\n    }\n    return $max_aggregate;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $aggregate = $tuple->[0] + $tuple->[1];\n        $max = $aggregate if $aggregate > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    for my $tuple (@$stdata) {\n        my($agg) = $tuple->[0];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n\tmy $agg = $tuple->[0] + $tuple->[1] + $tuple->[2];\n\t$max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n\tmy $agg = $tuple->[1] + $tuple->[2] + $tuple->[3];\n\tif ($agg > $max) {\n\t    $max = $agg;\n\t}\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] * $tuple->[1];\n        if ($agg > $max) {\n            $max = $agg;\n        }\n    }\n    return $max;\n}",
    "    my $max_aggregate = 0;\n    foreach my $st (@$stdata) {\n        my $aggregate = $st->[0] + $st->[1] + $st->[2];\n        if ($aggregate > $max_aggregate) {\n            $max_aggregate = $aggregate;\n        }\n    }\n    return $max_aggregate;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[2] + $tuple->[3] + $tuple->[4];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    for my $tuple (@$stdata) {\n        my $agg = $tuple->[0] + $tuple->[1] + $tuple->[2];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] + $tuple->[1];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $aggregate = $tuple->[1] + $tuple->[2] + $tuple->[3];\n        $max = $aggregate if $aggregate > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $st (@$stdata) {\n        my $agg = $st->[1] + $st->[2] + $st->[3];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max_aggregate = 0;\n    foreach my $st (@$stdata) {\n        my $aggregate = $st->[0] + $st->[1] + $st->[2];\n        if ($aggregate > $max_aggregate) {\n            $max_aggregate = $aggregate;\n        }\n    }\n    return $max_aggregate;\n}",
    "    my $max = 0;\n    foreach my $st (@$stdata) {\n        my $agg = $st->[1] + $st->[2] + $st->[3];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $st (@$stdata) {\n        my $agg = $st->{'aggregate'};\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $st (@$stdata) {\n        my $agg = $st->[0] + $st->[1] + $st->[2];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] + $tuple->[1] + $tuple->[2];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max_aggregate = 0;\n    for my $tuple (@$stdata) {\n        my $aggregate = $tuple->[1] + $tuple->[2];\n        if ($aggregate > $max_aggregate) {\n            $max_aggregate = $aggregate;\n        }\n    }\n    return $max_aggregate;\n}",
    "    my $max = 0;\n    foreach my $row (@$stdata) {\n        my $agg = $row->[1] + $row->[2];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $tuple (@$stdata) {\n        my $agg = $tuple->[0] * $tuple->[1];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $st (@$stdata) {\n        my $agg = $st->[0] + $st->[1];\n        $max = $agg if $agg > $max;\n    }\n    return $max;\n}"
  ]
}
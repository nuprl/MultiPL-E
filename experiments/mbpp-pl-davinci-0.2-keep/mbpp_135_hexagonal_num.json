{
  "name": "mbpp_135_hexagonal_num",
  "language": "pl",
  "prompt": "# Write a function to find the nth hexagonal number.\nsub hexagonal_num {\n    my($n) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_135_hexagonal_num.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&hexagonal_num;\n        if(eq_deeply($candidate->(10),190)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5),45)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7),91)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2*$n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n*(2*$n-1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2*$n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}",
    "    return $n * (2 * $n - 1);\n}"
  ]
}
{
  "name": "mbpp_395_first_non_repeating_character",
  "language": "pl",
  "prompt": "# Write a python function to find the first non-repeated character in a given string.\nsub first_non_repeating_character {\n    my($str1) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_395_first_non_repeating_character.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&first_non_repeating_character;\n        if(eq_deeply($candidate->(\"abcabc\"),undef)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abc\"),\"a\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"ababc\"),\"c\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (keys %count) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    my @char = split(//,$str1);\n    foreach my $char(@char){\n        $count{$char}++;\n    }\n    foreach my $char(@char){\n        if($count{$char} == 1){\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    my @char = split //, $str1;\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (keys %count) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %hash = ();\n    my @array = split(//, $str1);\n    foreach my $char (@array) {\n        $hash{$char}++;\n    }\n    foreach my $char (@array) {\n        if ($hash{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %hash;\n    my @char = split('', $str1);\n    foreach my $char (@char) {\n        $hash{$char}++;\n    }\n    foreach my $char (@char) {\n        if ($hash{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $count = 0;\n    my $flag = 0;\n    my $len = length($str1);\n    for($i = 0; $i < $len; $i++) {\n        $count = 0;\n        for($j = 0; $j < $len; $j++) {\n            if($str1[$i] eq $str1[$j]) {\n                $count++;\n            }\n        }\n        if($count == 1) {\n            $flag = 1;\n            last;\n        }\n    }\n    if($flag == 1) {\n        return $str1[$i];\n    }\n    else {\n        return -1;\n    }\n}",
    "    my %hash = ();\n    my @arr = split(\"\", $str1);\n    foreach my $char (@arr) {\n        if (exists $hash{$char}) {\n            $hash{$char} = $hash{$char} + 1;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    foreach my $char (@arr) {\n        if ($hash{$char} == 1) {\n            return $char;\n        }\n    }\n    return \"\";\n}",
    "    my %count;\n    my @characters = split //, $str1;\n    foreach my $char (@characters) {\n        $count{$char}++;\n    }\n    foreach my $char (@characters) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @characters = split //, $str1;\n    foreach my $char (@characters) {\n        $count{$char}++;\n    }\n    foreach my $char (keys %count) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    my @char = split(//,$str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}\nmy $str1 = \"abcdabcd\";\nmy $result = first_non_repeating_character($str1);\nprint \"First non-repeating character in $str1 is $result\\n\";",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %hash;\n    my @char = split('', $str1);\n    foreach my $char (@char) {\n        $hash{$char}++;\n    }\n    foreach my $char (@char) {\n        if($hash{$char} == 1) {\n            return $char;\n        }\n    }\n    return -1;\n}",
    "    my(%hash,$i,$j,$char);\n    for($i=0;$i<length($str1);$i++) {\n        $char = substr($str1,$i,1);\n        if(exists($hash{$char})) {\n            $hash{$char} = $hash{$char} + 1;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    for($j=0;$j<length($str1);$j++) {\n        $char = substr($str1,$j,1);\n        if($hash{$char} == 1) {\n            return $char;\n        }\n    }\n}\nprint \"Enter the string : \";\n$str1 = <STDIN>;\nchomp($str1);\n$char = first_non_repeating_character($str1);\nprint \"The first non-repeating character is : $char\\n\";",
    "    my %char_count;\n    my $first_non_repeating_character;\n    foreach my $char (split //, $str1) {\n        $char_count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($char_count{$char} == 1) {\n            $first_non_repeating_character = $char;\n            last;\n        }\n    }\n    return $first_non_repeating_character;\n}",
    "    my %count;\n    my @chars = split //, $str1;\n    foreach my $char (@chars) {\n        $count{$char}++;\n    }\n    foreach my $char (@chars) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}\nprint first_non_repeating_character('the quick brown fox jumps then quickly blow air');",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split //, $str1;\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @characters = split //, $str1;\n    foreach my $char (@characters) {\n        $count{$char}++;\n    }\n    foreach my $char (@characters) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    my @char = split('', $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split //, $str1;\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return -1;\n}\nprint \"Enter a string : \";\nmy $str1 = <STDIN>;\nchomp($str1);\nmy $result = first_non_repeating_character($str1);\nif ($result == -1) {\n    print \"No non-repeating character found\\n\";\n}\nelse {\n    print \"First non-repeating character is : $result\\n\";\n}",
    "    my %hash;\n    my $i;\n    my $j;\n    my $flag = 0;\n    for($i = 0; $i < length($str1); $i++) {\n        $hash{substr($str1, $i, 1)}++;\n    }\n    for($j = 0; $j < length($str1); $j++) {\n        if($hash{substr($str1, $j, 1)} == 1) {\n            $flag = 1;\n            last;\n        }\n    }\n    if($flag == 1) {\n        return substr($str1, $j, 1);\n    }\n    else {\n        return -1;\n    }\n}",
    "    my %count;\n    my @char = split //, $str1;\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return \"\";\n}",
    "    my %count;\n    my @char = split('', $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %hash;\n    my @arr = split(//, $str1);\n    foreach my $char (@arr) {\n        $hash{$char}++;\n    }\n    foreach my $char (@arr) {\n        if ($hash{$char} == 1) {\n            return $char;\n        }\n    }\n    return \"No non-repeating character\";\n}",
    "    my %count;\n    my @char = split('', $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %hash = ();\n    my @array = split('', $str1);\n    foreach my $char (@array) {\n        if (exists $hash{$char}) {\n            $hash{$char}++;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    foreach my $char (@array) {\n        if ($hash{$char} == 1) {\n            return $char;\n        }\n    }\n    return -1;\n}",
    "    my %hash;\n    my $i;\n    my @str = split(\"\",$str1);\n    for($i=0;$i<length($str1);$i++) {\n        if(exists($hash{$str[$i]})) {\n            $hash{$str[$i]} = $hash{$str[$i]} + 1;\n        }\n        else {\n            $hash{$str[$i]} = 1;\n        }\n    }\n    for($i=0;$i<length($str1);$i++) {\n        if($hash{$str[$i]} == 1) {\n            return $str[$i];\n        }\n    }\n}",
    "    my %hash;\n    my @array = split('',$str1);\n    foreach my $char (@array) {\n        $hash{$char}++;\n    }\n    foreach my $char (@array) {\n        if($hash{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//,$str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my(%count);\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %hash;\n    my @arr = split('', $str1);\n    foreach my $char (@arr) {\n        $hash{$char}++;\n    }\n    foreach my $char (@arr) {\n        if ($hash{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %hash;\n    my $i;\n    my $len = length($str1);\n    for($i=0;$i<$len;$i++) {\n        $hash{substr($str1,$i,1)}++;\n    }\n    for($i=0;$i<$len;$i++) {\n        if($hash{substr($str1,$i,1)} == 1) {\n            return substr($str1,$i,1);\n        }\n    }\n}",
    "    my %count;\n    my @chars = split //, $str1;\n    foreach my $char (@chars) {\n        $count{$char}++;\n    }\n    foreach my $char (@chars) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %hash;\n    my @arr = split('',$str1);\n    foreach my $char (@arr){\n        if(exists $hash{$char}){\n            $hash{$char}++;\n        }\n        else{\n            $hash{$char} = 1;\n        }\n    }\n    foreach my $char (@arr){\n        if($hash{$char} == 1){\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @characters = split //, $str1;\n    foreach my $char (@characters) {\n        $count{$char}++;\n    }\n    foreach my $char (keys %count) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @characters = split //, $str1;\n    foreach my $char (@characters) {\n        $count{$char}++;\n    }\n    foreach my $char (@characters) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @characters = split //, $str1;\n    foreach my $char (@characters) {\n        $count{$char}++;\n    }\n    foreach my $char (@characters) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    my @characters = split //, $str1;\n    foreach my $char (@characters) {\n        $count{$char}++;\n    }\n    foreach my $char (@characters) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    my @characters = split(//, $str1);\n    foreach my $char (@characters) {\n        $count{$char}++;\n    }\n    foreach my $char (@characters) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %char_count;\n    my @str1_array = split(//, $str1);\n    foreach my $char (@str1_array) {\n        $char_count{$char}++;\n    }\n    foreach my $char (@str1_array) {\n        if ($char_count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my $i;\n    my $j;\n    my $flag = 0;\n    my $char;\n    for($i=0;$i<length($str1);$i++) {\n        $char = substr($str1,$i,1);\n        $count{$char}++;\n    }\n    for($j=0;$j<length($str1);$j++) {\n        $char = substr($str1,$j,1);\n        if($count{$char} == 1) {\n            $flag = 1;\n            last;\n        }\n    }\n    if($flag == 1) {\n        return $char;\n    }\n    else {\n        return -1;\n    }\n}",
    "    my %count;\n    my @chars = split(//, $str1);\n    foreach my $char (@chars) {\n        $count{$char}++;\n    }\n    foreach my $char (@chars) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//,$str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return 'None';\n}",
    "    my %count;\n    my @char = split('', $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @chars = split('', $str1);\n    foreach my $char (@chars) {\n        $count{$char}++;\n    }\n    foreach my $char (@chars) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my @str = split(//,$str1);\n    my %count;\n    foreach my $char(@str) {\n        $count{$char}++;\n    }\n    foreach my $char(@str) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @characters = split(//, $str1);\n    foreach my $char (@characters) {\n        $count{$char}++;\n    }\n    foreach my $char (@characters) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return \"No non-repeating characters\";\n}",
    "    my %char_count;\n    foreach my $char (split //, $str1) {\n        $char_count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($char_count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my $count = 0;\n    my $char;\n    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            $count = 1;\n            last;\n        }\n    }\n    if ($count == 1) {\n        return $char;\n    }\n    else {\n        return -1;\n    }\n}",
    "    my %hash;\n    my @arr = split(\"\", $str1);\n    foreach my $char (@arr) {\n        if(exists $hash{$char}) {\n            $hash{$char} = $hash{$char} + 1;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} == 1) {\n            return $key;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %hash;\n    my @arr = split('', $str1);\n    foreach my $char (@arr) {\n        if (exists $hash{$char}) {\n            $hash{$char} += 1;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    foreach my $char (@arr) {\n        if ($hash{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my $str2 = $str1;\n    my $str3 = $str1;\n    my $str4 = $str1;\n    my $str5 = $str1;\n    my $str6 = $str1;\n    my $str7 = $str1;\n    my $str8 = $str1;\n    my $str9 = $str1;\n    my $str10 = $str1;\n    my $str11 = $str1;\n    my $str12 = $str1;\n    my $str13 = $str1;\n    my $str14 = $str1;\n    my $str15 = $str1;\n    my $str16 = $str1;\n    my $str17 = $str1;\n    my $str18 = $str1;\n    my $str19 = $str1;\n    my $str20 = $str1;\n    my $str21 = $str1;\n    my $str22 = $str1;\n    my $str23 = $str1;\n    my $str24 = $str1;\n    my $str25 = $str1;\n    my $str26 = $str1;\n    my $str27 = $str1;\n    my $str28 = $str1;\n    my $str29 = $str1;\n    my $str30 = $str1;\n    my $str31 = $str1;\n    my $str32 = $str1;\n    my $str33 = $str1;\n    my $str34 = $str1;\n    my $str35 = $str1;\n    my $str36 = $str1;\n    my $str37 = $str1;\n    my $str38 = $str1;\n    my $str39 = $str1;\n    my $str40 = $str1;\n    my $str41 = $str1;\n    my $str42 = $str1;\n    my $str43 = $str1;\n    my $str44 = $str1;\n    my $str45 = $str1;\n    my $str46 = $str1;\n    my $str47 = $str1;\n    my $str48",
    "    my %hash;\n    my @characters = split(//, $str1);\n    foreach my $char (@characters) {\n        if (exists $hash{$char}) {\n            $hash{$char} = $hash{$char} + 1;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    foreach my $char (@characters) {\n        if ($hash{$char} == 1) {\n            return $char;\n        }\n    }\n    return \"No non-repeating character found\";\n}",
    "    my %count;\n    my @char = split(//,$str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %hash;\n    my @arr = split('', $str1);\n    foreach my $char (@arr) {\n        if (exists $hash{$char}) {\n            $hash{$char}++;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    foreach my $char (@arr) {\n        if ($hash{$char} == 1) {\n            return $char;\n        }\n    }\n    return 'No non-repeating character found';\n}",
    "    my @str = split(//, $str1);\n    my %count;\n    foreach my $char (@str) {\n        $count{$char}++;\n    }\n    foreach my $char (@str) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//,$str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//,$str1);\n    foreach my $char(@char){\n        $count{$char}++;\n    }\n    foreach my $char(@char){\n        if($count{$char} == 1){\n            return $char;\n        }\n    }\n}",
    "    my %hash = ();\n    my @arr = split(\"\", $str1);\n    foreach my $char (@arr) {\n        if(exists $hash{$char}) {\n            $hash{$char}++;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    foreach my $char (@arr) {\n        if($hash{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split('', $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %hash;\n    my @arr = split(//,$str1);\n    foreach my $char (@arr) {\n        $hash{$char}++;\n    }\n    foreach my $char (@arr) {\n        if ($hash{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return -1;\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %hash;\n    my @arr = split(//, $str1);\n    foreach my $char (@arr) {\n        if(exists $hash{$char}) {\n            $hash{$char} += 1;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} == 1) {\n            return $key;\n        }\n    }\n}",
    "    my %char_count;\n    my @chars = split(//, $str1);\n    foreach my $char (@chars) {\n        $char_count{$char}++;\n    }\n    foreach my $char (@chars) {\n        if ($char_count{$char} == 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    my @chars = split(//, $str1);\n    foreach my $char (@chars) {\n        $count{$char}++;\n    }\n    foreach my $char (@chars) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return -1;\n}",
    "    my %hash;\n    my $i;\n    for($i=0;$i<length($str1);$i++) {\n        $hash{substr($str1,$i,1)}++;\n    }\n    for($i=0;$i<length($str1);$i++) {\n        if($hash{substr($str1,$i,1)} == 1) {\n            return substr($str1,$i,1);\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (keys %count) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//,$str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}\nprint first_non_repeating_character(\"abcab\");\nprint \"\\n\";\nprint first_non_repeating_character(\"abab\");\nprint \"\\n\";\nprint first_non_repeating_character(\"aabbbc\");\nprint \"\\n\";\nprint first_non_repeating_character(\"aabbdbc\");",
    "    my %count;\n    my @char = split('', $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return -1;\n}",
    "    my %hash = ();\n    my $i = 0;\n    my $j = 0;\n    my $char = \"\";\n    my $flag = 0;\n    my @arr = split(\"\",$str1);\n    for($i = 0; $i <= $#arr; $i++) {\n        $hash{$arr[$i]}++;\n    }\n    for($i = 0; $i <= $#arr; $i++) {\n        if($hash{$arr[$i]} == 1) {\n            $char = $arr[$i];\n            $flag = 1;\n            last;\n        }\n    }\n    if($flag == 1) {\n        return $char;\n    }\n    else {\n        return -1;\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    my @char = split(//,$str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split('', $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    my @char = split('', $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}\nprint(\"First non-repeating character: \", first_non_repeating_character(\"abcdabcd\"));",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @characters = split(//, $str1);\n    foreach my $char (@characters) {\n        $count{$char}++;\n    }\n    foreach my $char (@characters) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @characters = split //, $str1;\n    foreach my $char (@characters) {\n        $count{$char}++;\n    }\n    foreach my $char (@characters) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my(%hash,$i,$j,$count);\n    for($i=0;$i<length($str1);$i++) {\n        $hash{substr($str1,$i,1)} = 0;\n    }\n    for($i=0;$i<length($str1);$i++) {\n        $count = 0;\n        for($j=0;$j<length($str1);$j++) {\n            if(substr($str1,$i,1) eq substr($str1,$j,1)) {\n                $count++;\n            }\n        }\n        $hash{substr($str1,$i,1)} = $count;\n    }\n    for($i=0;$i<length($str1);$i++) {\n        if($hash{substr($str1,$i,1)} == 1) {\n            return substr($str1,$i,1);\n        }\n    }\n}",
    "    my %count;\n    my @char = split //, $str1;\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//,$str1);\n    foreach my $char(@char){\n        $count{$char}++;\n    }\n    foreach my $char(@char){\n        if($count{$char} == 1){\n            return $char;\n        }\n    }\n}\nprint(\"Enter the string : \");\nmy $str1 = <STDIN>;\nchomp($str1);\nmy $result = first_non_repeating_character($str1);\nprint(\"First non repeating character is : $result\\n\");",
    "    my $count = 0;\n    my $i = 0;\n    my $j = 0;\n    my $char = '';\n    my $len = length($str1);\n    for($i = 0; $i < $len; $i++) {\n        $count = 0;\n        $char = substr($str1, $i, 1);\n        for($j = 0; $j < $len; $j++) {\n            if($char eq substr($str1, $j, 1)) {\n                $count++;\n            }\n        }\n        if($count == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return \"No non-repeated character\";\n}",
    "    my $len = length($str1);\n    my $i = 0;\n    my $j = 0;\n    my $count = 0;\n    for($i = 0; $i < $len; $i++) {\n        $count = 0;\n        for($j = 0; $j < $len; $j++) {\n            if(substr($str1, $i, 1) eq substr($str1, $j, 1)) {\n                $count++;\n            }\n        }\n        if($count == 1) {\n            return substr($str1, $i, 1);\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    my @characters = split(//, $str1);\n    foreach my $char (@characters) {\n        $count{$char}++;\n    }\n    foreach my $char (@characters) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my(%count);\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    my @chars = split(//, $str1);\n    foreach my $char (@chars) {\n        $count{$char}++;\n    }\n    foreach my $char (@chars) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//,$str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}\nprint first_non_repeating_character(\"abcdabcd\");",
    "    my %count;\n    my @characters = split //, $str1;\n    foreach my $char (@characters) {\n        $count{$char}++;\n    }\n    foreach my $char (@characters) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count = ();\n    my @char = split('', $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my(@str1) = split(//,$str1);\n    my(%hash1);\n    foreach my $i (@str1) {\n        $hash1{$i}++;\n    }\n    foreach my $i (@str1) {\n        if($hash1{$i} == 1) {\n            return $i;\n        }\n    }\n}",
    "    my %count;\n    my @chars = split(//, $str1);\n    foreach my $char (@chars) {\n        $count{$char}++;\n    }\n    foreach my $char (@chars) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %hash = ();\n    my @arr = split('', $str1);\n    foreach my $char (@arr) {\n        if(exists $hash{$char}) {\n            $hash{$char} += 1;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    foreach my $char (@arr) {\n        if($hash{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $char{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    my @char = split(//,$str1);\n    foreach my $char(@char){\n        $count{$char}++;\n    }\n    foreach my $char(@char){\n        if($count{$char} == 1){\n            return $char;\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    my @characters = split //, $str1;\n    foreach my $char (@characters) {\n        $count{$char}++;\n    }\n    foreach my $char (@characters) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my(%hash, $char);\n    foreach $char (split //, $str1) {\n        $hash{$char}++;\n    }\n    foreach $char (split //, $str1) {\n        if ($hash{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %hash = ();\n    my $i = 0;\n    my $j = 0;\n    my $char = '';\n    my $char1 = '';\n    my $flag = 0;\n    my $flag1 = 0;\n    my $len = length($str1);\n    for($i = 0; $i < $len; $i++) {\n        $char = substr($str1, $i, 1);\n        $hash{$char}++;\n    }\n    for($i = 0; $i < $len; $i++) {\n        $char1 = substr($str1, $i, 1);\n        if($hash{$char1} == 1) {\n            $flag1 = 1;\n            last;\n        }\n    }\n    if($flag1 == 1) {\n        return $char1;\n    }\n    else {\n        return -1;\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return \"\";\n}",
    "    my %count;\n    my @char = split(//,$str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return '';\n}",
    "    my %count;\n    my @chars = split //, $str1;\n    foreach my $char (@chars) {\n        $count{$char}++;\n    }\n    foreach my $char (@chars) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return 'No non-repeating character found';\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    my @chars = split //, $str1;\n    foreach my $char (@chars) {\n        $count{$char}++;\n    }\n    foreach my $char (@chars) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    my @char = split //, $str1;\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    map { $count{$_}++ } split //, $str1;\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    my @char = split //, $str1;\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return \"\";\n}",
    "    my $str2 = $str1;\n    my $str3 = $str1;\n    my $str4 = $str1;\n    my $str5 = $str1;\n    my $str6 = $str1;\n    my $str7 = $str1;\n    my $str8 = $str1;\n    my $str9 = $str1;\n    my $str10 = $str1;\n    my $str11 = $str1;\n    my $str12 = $str1;\n    my $str13 = $str1;\n    my $str14 = $str1;\n    my $str15 = $str1;\n    my $str16 = $str1;\n    my $str17 = $str1;\n    my $str18 = $str1;\n    my $str19 = $str1;\n    my $str20 = $str1;\n    my $str21 = $str1;\n    my $str22 = $str1;\n    my $str23 = $str1;\n    my $str24 = $str1;\n    my $str25 = $str1;\n    my $str26 = $str1;\n    my $str27 = $str1;\n    my $str28 = $str1;\n    my $str29 = $str1;\n    my $str30 = $str1;\n    my $str31 = $str1;\n    my $str32 = $str1;\n    my $str33 = $str1;\n    my $str34 = $str1;\n    my $str35 = $str1;\n    my $str36 = $str1;\n    my $str37 = $str1;\n    my $str38 = $str1;\n    my $str39 = $str1;\n    my $str40 = $str1;\n    my $str41 = $str1;\n    my $str42 = $str1;\n    my $str43 = $str1;\n    my $str44 = $str1;\n    my $str45 = $str1;\n    my $str46 = $str1;\n    my $str47 = $str1;\n    my $str48",
    "    my %hash;\n    my $char;\n    foreach $char (split //, $str1) {\n        $hash{$char}++;\n    }\n    foreach $char (split //, $str1) {\n        if ($hash{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %hash;\n    my $i;\n    for($i=0;$i<length($str1);$i++) {\n        my $ch = substr($str1,$i,1);\n        if(exists $hash{$ch}) {\n            $hash{$ch} = $hash{$ch} + 1;\n        } else {\n            $hash{$ch} = 1;\n        }\n    }\n    for($i=0;$i<length($str1);$i++) {\n        my $ch = substr($str1,$i,1);\n        if($hash{$ch} == 1) {\n            return $ch;\n        }\n    }\n    return -1;\n}",
    "    my @str_array = split('', $str1);\n    my %count;\n    foreach my $char (@str_array) {\n        $count{$char}++;\n    }\n    foreach my $char (@str_array) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return 0;\n}",
    "    my %hash = ();\n    my @arr = split('', $str1);\n    foreach my $i (@arr) {\n        if (exists $hash{$i}) {\n            $hash{$i}++;\n        } else {\n            $hash{$i} = 1;\n        }\n    }\n    foreach my $i (@arr) {\n        if ($hash{$i} == 1) {\n            return $i;\n        }\n    }\n}",
    "    my %hash;\n    my $i;\n    my $j;\n    my $flag = 0;\n    for($i = 0; $i < length($str1); $i++) {\n        $hash{substr($str1, $i, 1)}++;\n    }\n    for($j = 0; $j < length($str1); $j++) {\n        if($hash{substr($str1, $j, 1)} == 1) {\n            $flag = 1;\n            print \"First non-repeated character is: \", substr($str1, $j, 1), \"\\n\";\n            last;\n        }\n    }\n    if($flag == 0) {\n        print \"No non-repeated character found\\n\";\n    }\n}",
    "    my %count;\n    my @characters = split //, $str1;\n    foreach my $char (@characters) {\n        $count{$char}++;\n    }\n    foreach my $char (keys %count) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return '';\n}",
    "    my @str = split(//, $str1);\n    my %count;\n    foreach my $char (@str) {\n        $count{$char}++;\n    }\n    foreach my $char (@str) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}"
  ]
}
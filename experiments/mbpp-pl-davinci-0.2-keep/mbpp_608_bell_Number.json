{
  "name": "mbpp_608_bell_Number",
  "language": "pl",
  "prompt": "# Write a python function to find nth bell number.\nsub bell_Number {\n    my($n) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_608_bell_Number.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&bell_Number;\n        if(eq_deeply($candidate->(2),2)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(3),5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(4),15)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - $j - 1];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * bell_Number($i - $j - 1);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - $j - 1];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - $j - 1];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for(my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for(my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - $j - 1];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * binomial($i - 1, $j);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - $j - 1];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @B = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $B[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $B[$i] += $B[$j] * $B[$i - 1 - $j];\n        }\n    }\n    return $B[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - $j - 1];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - $j - 1];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * factorial($i - 1 - $j);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - $j - 1];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for my $i (1 .. $n) {\n        my $bell = 0;\n        for my $j (0 .. $i - 1) {\n            $bell += $bell[$j] * binomial($i - 1, $j);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - $j - 1];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * binomial($i - 1, $j);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * bell_Number($i - $j - 1);\n        }\n        push(@bell, $bell);\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - $j - 1];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * bell_Number($i - $j - 1);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * binomial($i - 1, $j);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * bell_Number($i - $j - 1);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * binomial($i - 1, $j);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * binomial($i - 1, $j);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - $j - 1];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * binomial($i - 1, $j);\n        }\n        push(@bell, $bell);\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * binomial($i - 1, $j);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - $j - 1];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * binomial($i - 1, $j);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * bell_Number($i - $j - 1);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += bell($j) * bell($i - 1 - $j);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * binomial($i - 1, $j);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * binomial($i - 1, $j);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bellTriangle;\n    $bellTriangle[0][0] = 1;\n    for my $i (1 .. $n) {\n        $bellTriangle[$i][0] = $bellTriangle[$i-1][$i-1];\n        for my $j (1 .. $i) {\n            $bellTriangle[$i][$j] = $bellTriangle[$i][$j-1] + $bellTriangle[$i-1][$j-1];\n        }\n    }\n    return $bellTriangle[$n][0];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * binomial($i - 1, $j);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * binomial($i - 1, $j);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * binomial($i - 1, $j);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - $j - 1];\n        }\n    }\n    return $bell[$n];\n}",
    "    my $bell = [[1]];\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell->[$i][0] = $bell->[$i - 1][$i - 1];\n        for (my $j = 1; $j <= $i; $j++) {\n            $bell->[$i][$j] = $bell->[$i - 1][$j - 1] + $bell->[$i][$j - 1];\n        }\n    }\n    return $bell->[$n][0];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * binomial($i - 1, $j);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * bell_Number($i - $j - 1);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - $j - 1];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for(my $i=1; $i<=$n; $i++) {\n        $bell[$i] = 0;\n        for(my $j=0; $j<$i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i-$j-1];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * binomial($i - 1, $j);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - $j - 1];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell;\n    $bell[0][0] = 1;\n    for my $i (1 .. $n) {\n        $bell[$i][0] = $bell[$i-1][$i-1];\n        for my $j (1 .. $i) {\n            $bell[$i][$j] = $bell[$i][$j-1] + $bell[$i-1][$j-1];\n        }\n    }\n    return $bell[$n][0];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * binomial($i - 1, $j);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * bell_Number($i - $j - 1);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - $j - 1];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for my $i (1 .. $n) {\n        $bell[$i] = sum(map {$bell[$_] * $bell[$i - 1 - $_]} 0 .. $i - 1);\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * binomial($i - 1, $j);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * binomial($i - 1, $j);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * bell_Number($i - 1 - $j);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - $j - 1];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * binomial($i - 1, $j);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * binomial($i - 1, $j);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * bell_Number($i - $j - 1);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * bell_Number($i - $j - 1);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * bell_Number($i - $j - 1);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}\nprint(\"Enter the number : \");\n$n = <STDIN>;\nchomp($n);\n$result = bell_Number($n);\nprint(\"The $n th Bell Number is : $result\\n\");",
    "    my $bell = [[1]];\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell->[$i][0] = $bell->[$i - 1][$i - 1];\n        for (my $j = 1; $j <= $i; $j++) {\n            $bell->[$i][$j] = $bell->[$i - 1][$j - 1] + $bell->[$i][$j - 1];\n        }\n    }\n    return $bell->[$n][0];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * binomial($i - 1, $j);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * bell_Number($i - $j - 1);\n        }\n        push(@bell, $bell);\n    }\n    return $bell[$n];\n}",
    "    my @bell;\n    $bell[0][0] = 1;\n    for ($i = 1; $i <= $n; $i++) {\n        $bell[$i][0] = $bell[$i - 1][$i - 1];\n        for ($j = 1; $j <= $i; $j++) {\n            $bell[$i][$j] = $bell[$i - 1][$j - 1] + $bell[$i][$j - 1];\n        }\n    }\n    return $bell[$n][0];\n}",
    "    my $bell = [[1]];\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell->[$i][0] = $bell->[$i - 1][$i - 1];\n        for (my $j = 1; $j <= $i; $j++) {\n            $bell->[$i][$j] = $bell->[$i - 1][$j - 1] + $bell->[$i][$j - 1];\n        }\n    }\n    return $bell->[$n][0];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for my $i (1 .. $n) {\n        my $s = 0;\n        for my $j (0 .. $i - 1) {\n            $s += $bell[$j] * binomial($i - 1, $j);\n        }\n        push @bell, $s;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $sum = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $sum += $bell[$j] * binomial($i - 1, $j);\n        }\n        push @bell, $sum;\n    }\n    return $bell[$n];\n}",
    "    my $bell = [[1]];\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell->[$i][0] = $bell->[$i - 1][$i - 1];\n        for (my $j = 1; $j <= $i; $j++) {\n            $bell->[$i][$j] = $bell->[$i - 1][$j - 1] + $bell->[$i][$j - 1];\n        }\n    }\n    return $bell->[$n][0];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * bell_Number($i - $j - 1);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = $bell[$i-1];\n        for (my $j = $i-1; $j > 0; $j--) {\n            $bell[$j] += $bell[$j-1];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i=1; $i<=$n; $i++) {\n        $bell[$i] = 0;\n        for (my $j=0; $j<$i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i-$j-1];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * binomial($i - 1, $j);\n        }\n        push(@bell, $bell);\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - $j - 1];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * bell_Number($i - $j - 1);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - $j - 1];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += bell($j) * bell($i - 1 - $j);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bellTriangle = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $sum = 0;\n        for (my $j = $i - 1; $j >= 0; $j--) {\n            $sum += $bellTriangle[$j];\n        }\n        push(@bellTriangle, $sum);\n    }\n    return $bellTriangle[$n];\n}",
    "    my $bell_Number = 0;\n    my $bell_Number_prev = 0;\n    my $bell_Number_prev_prev = 0;\n    my $i = 0;\n    my $j = 0;\n    if($n == 0) {\n        return 0;\n    }\n    if($n == 1) {\n        return 1;\n    }\n    for($i = 0; $i <= $n; $i++) {\n        for($j = 0; $j <= $i; $j++) {\n            if($j == 0) {\n                $bell_Number = 1;\n            }\n            elsif($j == 1) {\n                $bell_Number = $i;\n            }\n            else {\n                $bell_Number = $bell_Number_prev_prev + ($j - 1) * $bell_Number_prev;\n            }\n            $bell_Number_prev_prev = $bell_Number_prev;\n            $bell_Number_prev = $bell_Number;\n        }\n    }\n    return $bell_Number;\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my $bell_number = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $bell_number = $bell_number * $i;\n    }\n    return $bell_number;\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * bell_Number($i - $j - 1);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += bell($j) * bell($i - 1 - $j);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * binomial($i - 1, $j);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * bell_Number($i - $j - 1);\n        }\n        push(@bell, $bell);\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - $j - 1];\n        }\n    }\n    return $bell[$n];\n}",
    "    my $bell_number = 0;\n    for (my $i = 0; $i <= $n; $i++) {\n        $bell_number += &bell_Number_Util($n, $i);\n    }\n    return $bell_number;\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * bell_Number($i - $j - 1);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - $j - 1];\n        }\n    }\n    return $bell[$n];\n}\nprint(\"Enter the value of n : \");\nmy $n = <STDIN>;\nprint(\"Bell Number is : \", bell_Number($n));",
    "    my @bell = (1);\n    my @temp = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        for (my $j = $i; $j > 0; $j--) {\n            $temp[$j] = $temp[$j] + $temp[$j - 1];\n        }\n        $bell[$i] = $temp[$i];\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my $bell = [[1]];\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell->[$i][0] = $bell->[$i - 1][$i - 1];\n        for (my $j = 1; $j <= $i; $j++) {\n            $bell->[$i][$j] = $bell->[$i - 1][$j - 1] + $bell->[$i][$j - 1];\n        }\n    }\n    return $bell->[$n][0];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my $bell_num = 0;\n    my $i = 0;\n    my $j = 0;\n    my @bell_table = ();\n    for($i = 0; $i <= $n; $i++) {\n        $bell_table[$i][0] = $bell_num;\n        for($j = 1; $j <= $i; $j++) {\n            $bell_table[$i][$j] = $bell_table[$i - 1][$j - 1] + $bell_table[$i - 1][$j] * $j;\n        }\n        $bell_num = $bell_table[$i][$i];\n    }\n    return $bell_num;\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - $j - 1];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - $j - 1];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - $j - 1];\n        }\n    }\n    return $bell[$n];\n}",
    "    my $bell = [[1]];\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell->[$i][0] = $bell->[$i - 1][$i - 1];\n        for (my $j = 1; $j <= $i; $j++) {\n            $bell->[$i][$j] = $bell->[$i - 1][$j - 1] + $bell->[$i][$j - 1];\n        }\n    }\n    return $bell->[$n][0];\n}",
    "    my $bell = [[1]];\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell->[$i][0] = $bell->[$i - 1][$i - 1];\n        for (my $j = 1; $j <= $i; $j++) {\n            $bell->[$i][$j] = $bell->[$i - 1][$j - 1] + $bell->[$i][$j - 1];\n        }\n    }\n    return $bell->[$n][0];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * binomial($i - 1, $j);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - $j - 1];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * binomial($i - 1, $j);\n        }\n        push(@bell, $bell);\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - $j - 1];\n        }\n    }\n    return $bell[$n];\n}\nprint(bell_Number(5));",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * binomial($i - 1, $j);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * binomial($i - 1, $j);\n        }\n        push(@bell, $bell);\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * binomial($i - 1, $j);\n        }\n    }\n    return $bell[$n];\n}",
    "    my $bell = [[1]];\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell->[$i][0] = $bell->[$i - 1][$i - 1];\n        for (my $j = 1; $j <= $i; $j++) {\n            $bell->[$i][$j] = $bell->[$i - 1][$j - 1] + $bell->[$i][$j - 1];\n        }\n    }\n    return $bell->[$n][0];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * bell_Number($i - $j - 1);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * bell_Number($i - $j - 1);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * binomial($i - 1, $j);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my $bell_number = 0;\n    my $i = 0;\n    my $j = 0;\n    my @bell = ();\n    $bell[0][0] = 1;\n    for ($i = 1; $i <= $n; $i++) {\n        $bell[$i][0] = $bell[$i - 1][$i - 1];\n        for ($j = 1; $j <= $i; $j++) {\n            $bell[$i][$j] = $bell[$i - 1][$j - 1] + $bell[$i][$j - 1];\n        }\n    }\n    return $bell[$n][0];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * bell_Number($i - $j - 1);\n        }\n        push(@bell, $bell);\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        my $bell = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell += $bell[$j] * binomial($i - 1, $j);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for my $i (1 .. $n) {\n        my $bell = 0;\n        for my $k (0 .. $i - 1) {\n            $bell += $bell[$k] * binomial($i - 1, $k);\n        }\n        push @bell, $bell;\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - $j - 1];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}\nprint(\"Enter the value of n: \");\n$n = <STDIN>;\nprint(\"Bell Number is: \", bell_Number($n));",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - 1 - $j];\n        }\n    }\n    return $bell[$n];\n}",
    "    my @bell = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $bell[$i] = 0;\n        for (my $j = 0; $j < $i; $j++) {\n            $bell[$i] += $bell[$j] * $bell[$i - $j - 1];\n        }\n    }\n    return $bell[$n];\n}"
  ]
}
{
  "name": "mbpp_442_positive_count",
  "language": "pl",
  "prompt": "# Write a function to find the ration of positive numbers in an array of integers.\nsub positive_count {\n    my($nums) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_442_positive_count.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&positive_count;\n        if(eq_deeply($candidate->([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $n (@$nums) {\n        if ($n > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / scalar @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $n (@$nums) {\n        $count++ if $n > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $positive_count = 0;\n    for my $num (@$nums) {\n        if ($num > 0) {\n            $positive_count++;\n        }\n    }\n    return $positive_count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $n (@$nums) {\n        if ($n > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / scalar @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $n (@$nums) {\n        $count++ if $n > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $positives = 0;\n    for my $num (@$nums) {\n        $positives++ if $num > 0;\n    }\n    return $positives / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $positives = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $positives++;\n        }\n    }\n    return $positives / @$nums;\n}",
    "    my $positive_count = 0;\n    for my $num (@$nums) {\n        if ($num > 0) {\n            $positive_count++;\n        }\n    }\n    return $positive_count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    for my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        $count++ if $num > 0;\n    }\n    return $count / @$nums;\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}",
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / scalar(@$nums);\n}"
  ]
}
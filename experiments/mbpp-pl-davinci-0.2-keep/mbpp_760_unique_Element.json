{
  "name": "mbpp_760_unique_Element",
  "language": "pl",
  "prompt": "# Write a python function to check whether a list of numbers contains only one distinct element or not.\nsub unique_Element {\n    my($arr) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_760_unique_Element.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&unique_Element;\n        if(eq_deeply($candidate->([1, 1, 1]),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 1, 2]),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3, 4, 5]),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $count = 0;\n    my $i;\n    my $j;\n    for($i = 0; $i < scalar(@$arr); $i++) {\n        for($j = $i + 1; $j < scalar(@$arr); $j++) {\n            if(@$arr[$i] == @$arr[$j]) {\n                $count++;\n            }\n        }\n    }\n    if($count == 0) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $count = 0;\n    my $size = scalar(@$arr);\n    for(my $i = 0; $i < $size; $i++) {\n        for(my $j = $i + 1; $j < $size; $j++) {\n            if($arr->[$i] == $arr->[$j]) {\n                $count++;\n            }\n        }\n    }\n    if($count == 0) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < scalar(@$arr); $i++) {\n        for(my $j = $i+1; $j < scalar(@$arr); $j++) {\n            if(@$arr[$i] == @$arr[$j]) {\n                $count++;\n            }\n        }\n    }\n    if($count == 0) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $count = 0;\n    my $i = 0;\n    my $j = 0;\n    for($i = 0; $i < scalar(@$arr); $i++) {\n        for($j = $i + 1; $j < scalar(@$arr); $j++) {\n            if(@$arr[$i] == @$arr[$j]) {\n                $count++;\n            }\n        }\n    }\n    if($count == 0) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    my $count = 0;\n    my $len = scalar(@$arr);\n    for(my $i=0;$i<$len;$i++) {\n        for(my $j=$i+1;$j<$len;$j++) {\n            if(@$arr[$i] == @$arr[$j]) {\n                $count++;\n            }\n        }\n    }\n    if($count == 0) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $count = 0;\n    my $i;\n    my $j;\n    for($i = 0; $i <= $#$arr; $i++) {\n        for($j = $i + 1; $j <= $#$arr; $j++) {\n            if($arr->[$i] == $arr->[$j]) {\n                $count++;\n            }\n        }\n    }\n    if($count == 0) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $count = 0;\n    my $i = 0;\n    my $j = 0;\n    for($i = 0; $i <= $#$arr; $i++) {\n        for($j = $i + 1; $j <= $#$arr; $j++) {\n            if($arr->[$i] == $arr->[$j]) {\n                $count++;\n            }\n        }\n    }\n    if($count == 0) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my %hash = map {$_, 1} @$arr;\n    if(scalar(keys %hash) == 1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my %hash = map {$_ => 1} @$arr;\n    if(scalar(keys %hash) == 1){\n        return 1;\n    }\n    else{\n        return 0;\n    }\n}\nmy @arr = (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,",
    "    my @array = @$arr;\n    my $count = 0;\n    for(my $i = 0; $i < scalar(@array); $i++) {\n        for(my $j = 0; $j < scalar(@array); $j++) {\n            if($array[$i] == $array[$j]) {\n                $count++;\n            }\n        }\n    }\n    if($count == scalar(@array)) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nmy @arr = (1,2,3,4,5,6,7,8,9);\nmy $res = unique_Element(\\@arr);\nprint \"$res\\n\";",
    "    my $count = 0;\n    my $i = 0;\n    my $j = 0;\n    for($i = 0; $i <= $#$arr; $i++) {\n        for($j = $i + 1; $j <= $#$arr; $j++) {\n            if($arr->[$i] == $arr->[$j]) {\n                $count++;\n            }\n        }\n    }\n    if($count == 0) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my %hash = map { $_ => 1 } @$arr;\n    return scalar keys %hash;\n}",
    "    my $size = scalar(@$arr);\n    my $flag = 0;\n    for(my $i = 0; $i < $size; $i++) {\n        for(my $j = $i+1; $j < $size; $j++) {\n            if($arr->[$i] == $arr->[$j]) {\n                $flag = 1;\n            }\n        }\n    }\n    if($flag == 1) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}",
    "    my %count;\n    foreach my $i (@$arr) {\n        $count{$i}++;\n    }\n    my $size = keys %count;\n    if($size == 1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my @arr = @$arr;\n    my $count = 0;\n    for(my $i = 0; $i < scalar(@arr); $i++) {\n        for(my $j = $i + 1; $j < scalar(@arr); $j++) {\n            if($arr[$i] == $arr[$j]) {\n                $count++;\n            }\n        }\n    }\n    if($count == 0) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my %hash;\n    foreach my $i (@$arr) {\n        $hash{$i}++;\n    }\n    if(scalar(keys %hash) == 1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $count = 0;\n    my $i = 0;\n    my $j = 0;\n    for($i = 0; $i <= $#$arr; $i++) {\n        for($j = $i + 1; $j <= $#$arr; $j++) {\n            if($arr->[$i] == $arr->[$j]) {\n                $count++;\n            }\n        }\n    }\n    if($count == 0) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $count = 0;\n    my $size = scalar(@$arr);\n    for(my $i = 0; $i < $size; $i++) {\n        for(my $j = $i + 1; $j < $size; $j++) {\n            if($arr->[$i] == $arr->[$j]) {\n                $count++;\n            }\n        }\n    }\n    if($count == 0) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $count = 0;\n    my $i;\n    my $j;\n    my $size = scalar(@$arr);\n    for($i = 0; $i < $size; $i++) {\n        for($j = 0; $j < $size; $j++) {\n            if($arr->[$i] == $arr->[$j]) {\n                $count++;\n            }\n        }\n    }\n    if($count == $size) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $count = 0;\n    my $size = scalar(@$arr);\n    for(my $i = 0; $i < $size; $i++) {\n        for(my $j = $i + 1; $j < $size; $j++) {\n            if(@$arr[$i] == @$arr[$j]) {\n                $count++;\n            }\n        }\n    }\n    if($count == 0) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}"
  ]
}
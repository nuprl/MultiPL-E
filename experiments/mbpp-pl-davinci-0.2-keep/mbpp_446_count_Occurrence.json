{
  "name": "mbpp_446_count_Occurrence",
  "language": "pl",
  "prompt": "# Write a python function to count the occurence of all elements of list in a tuple.\nsub count_Occurrence {\n    my($tup, $lst) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_446_count_Occurrence.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&count_Occurrence;\n        if(eq_deeply($candidate->([\"a\", \"a\", \"c\", \"b\", \"d\"], [\"a\", \"b\"]),3)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3, 1, 4, 6, 7, 1, 4], [1, 4, 7]),6)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3, 4, 5, 6], [1, 2]),2)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    map { $count{$_}++ } @$lst;\n    return \\%count;\n}",
    "    my %count = ();\n    foreach my $item (@$lst) {\n        $count{$item}++;\n    }\n    foreach my $item (@$tup) {\n        print \"$item : $count{$item}\\n\";\n    }\n}",
    "    my @tup = @$tup;\n    my @lst = @$lst;\n    my %count;\n    foreach my $element (@tup, @lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst)  {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup)  {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$tup) {\n        $count{$element}++;\n    }\n    foreach my $element (@$lst) {\n        print \"$element: $count{$element}\\n\";\n    }\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return \\%count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    @count{@$lst} = ();\n    my $count = grep { exists $count{$_} } @$tup;\n    return $count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return \\%count;\n}",
    "    my %count;\n    foreach my $element (@$tup) {\n        $count{$element}++;\n    }\n    my $result = {};\n    foreach my $element (@$lst) {\n        $result->{$element} = $count{$element} if exists $count{$element};\n    }\n    return $result;\n}",
    "    my $count = 0;\n    foreach my $i (@$lst) {\n        foreach my $j (@$tup) {\n            if ($i == $j) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my %count;\n    foreach my $elem (@$lst) {\n        $count{$elem}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup) {\n        if (exists $count{$element}) {\n            print \"$element occurs $count{$element} times\\n\";\n        }\n        else {\n            print \"$element does not exist\\n\";\n        }\n    }\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup) {\n        print \"$element : $count{$element}\\n\";\n    }\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my $count = 0;\n    foreach my $i (@$lst) {\n        foreach my $j (@$tup) {\n            if ($i == $j) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my %hash;\n    foreach my $i (@$lst) {\n        $hash{$i} = 0;\n    }\n    foreach my $i (@$tup) {\n        if (exists $hash{$i}) {\n            $hash{$i}++;\n        }\n    }\n    return %hash;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup) {\n        if (exists($count{$element})) {\n            print \"$element occurs $count{$element} times\\n\";\n        }\n        else {\n            print \"$element does not occur\\n\";\n        }\n    }\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup) {\n        if (exists $count{$element}) {\n            print \"$element : $count{$element}\\n\";\n        }\n    }\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    @count{@$lst} = (0) x @$lst;\n    $count{$_}++ for @$tup;\n    return %count;\n}",
    "    my %count;\n    my @tup = @$tup;\n    my @lst = @$lst;\n    foreach my $t (@tup) {\n        $count{$t}++;\n    }\n    foreach my $l (@lst) {\n        $count{$l}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst)  {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst)  {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $i (@$lst) {\n        $count{$i}++;\n    }\n    foreach my $i (@$tup) {\n        if(exists $count{$i}) {\n            print \"$i : $count{$i}\\n\";\n        }\n    }\n}",
    "    my $count = 0;\n    foreach my $i (@$lst) {\n        foreach my $j (@$tup) {\n            if($i == $j) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my %count;\n    foreach my $element (@$lst)  {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup)  {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$tup) {\n        $count{$element}++;\n    }\n    foreach my $element (@$lst) {\n        print \"The count of $element is $count{$element}\\n\";\n    }\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}\nmy @list = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nmy @tuple = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nmy %count = count_Occurrence(\\@tuple, \\@list);\nprint \"The count of all elements of list in a tuple is :\\n\";\nprint Dumper(\\%count);",
    "    my %hash = map { $_ => 0 } @$lst;\n    foreach my $i (@$tup) {\n        $hash{$i}++ if exists $hash{$i};\n    }\n    return %hash;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return \\%count;\n}",
    "    my @tup = @$tup;\n    my @lst = @$lst;\n    my $count = 0;\n    foreach my $i (@tup) {\n        foreach my $j (@lst) {\n            if ($i == $j) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $i (@$lst) {\n        foreach my $j (@$tup) {\n            if ($i == $j) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup) {\n        if (exists $count{$element}) {\n            print \"$element: $count{$element}\\n\";\n        }\n    }\n}",
    "    my %count;\n    foreach my $item (@$lst) {\n        $count{$item}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst)  {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    @count{@$lst} = ();\n    my $count = grep { exists $count{$_} } @$tup;\n    return $count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return \\%count;\n}",
    "    my %count;\n    my $i;\n    my $j;\n    my $cnt = 0;\n    my $len1 = scalar(@$tup);\n    my $len2 = scalar(@$lst);\n    for($i = 0; $i < $len1; $i++) {\n        for($j = 0; $j < $len2; $j++) {\n            if($tup->[$i] == $lst->[$j]) {\n                $cnt++;\n            }\n        }\n        $count{$tup->[$i]} = $cnt;\n        $cnt = 0;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    $count{$_}++ for @$tup;\n    my @result;\n    for my $i (@$lst) {\n        push @result, $count{$i};\n    }\n    return @result;\n}",
    "    my %hash = map { $_ => 0 } @$lst;\n    foreach my $i (@$tup) {\n        if (exists $hash{$i}) {\n            $hash{$i}++;\n        }\n    }\n    return %hash;\n}",
    "    my %count;\n    my @tup = @{$tup};\n    my @lst = @{$lst};\n    foreach my $element (@tup, @lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $i (@$lst) {\n        $count{$i}++;\n    }\n    my %count2;\n    foreach my $j (@$tup) {\n        $count2{$j}++;\n    }\n    my $res = {};\n    foreach my $k (keys %count) {\n        $res->{$k} = $count{$k} * $count2{$k};\n    }\n    return $res;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup) {\n        print \"$element : $count{$element}\\n\";\n    }\n}",
    "    my %hash = map {$_ => 0} @$lst;\n    foreach my $i (@$tup) {\n        if (exists $hash{$i}) {\n            $hash{$i}++;\n        }\n    }\n    return \\%hash;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup) {\n        print \"$element : $count{$element}\\n\";\n    }\n}",
    "    my %count;\n    @count{@$lst} = ();\n    my $count = grep { exists $count{$_} } @$tup;\n    return $count;\n}",
    "    my %count;\n    foreach my $element (@$lst)  {\n        $count{$element}++;\n    }\n    return %count;\n}\nmy @list = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nmy @tuple = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nmy %count = count_Occurrence(\\@tuple, \\@list);\nprint \"Occurence of elements of list in tuple: \\n\";\nforeach my $key (keys %count) {\n    print \"$key => $count{$key}\\n\";\n}",
    "    my @tup = @$tup;\n    my @lst = @$lst;\n    my %count;\n    foreach my $elem (@tup) {\n        $count{$elem}++;\n    }\n    foreach my $elem (@lst) {\n        if (exists $count{$elem}) {\n            print \"$elem : $count{$elem}\\n\";\n        }\n        else {\n            print \"$elem : 0\\n\";\n        }\n    }\n}",
    "    my %count;\n    foreach my $elem (@$lst) {\n        $count{$elem}++;\n    }\n    foreach my $elem (@$tup) {\n        print \"$elem : $count{$elem}\\n\";\n    }\n}",
    "    my %count;\n    my @tup = @$tup;\n    my @lst = @$lst;\n    foreach my $element (@tup, @lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return \\%count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $item (@$lst) {\n        $count{$item}++;\n    }\n    foreach my $item (@$tup) {\n        print \"$item => $count{$item}\\n\";\n    }\n}",
    "    my %count;\n    @count{@$lst} = ();\n    my $count = grep { exists $count{$_} } @$tup;\n    return $count;\n}",
    "    my %count;\n    @count{@$lst} = ();\n    my $count = grep { exists $count{$_} } @$tup;\n    return $count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return \\%count;\n}",
    "    my %count;\n    foreach my $element (@$lst)  {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    @count{@$lst} = ();\n    my $count = grep { exists $count{$_} } @$tup;\n    return $count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$tup) {\n        $count{$element}++;\n    }\n    foreach my $element (@$lst) {\n        if (exists $count{$element}) {\n            print \"$element : $count{$element}\\n\";\n        }\n        else {\n            print \"$element : 0\\n\";\n        }\n    }\n}",
    "    my %count;\n    @count{@$lst} = ();\n    my $count = grep { exists $count{$_} } @$tup;\n    return $count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return \\%count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return \\%count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup) {\n        if(exists($count{$element})) {\n            print \"$element : $count{$element}\\n\";\n        }\n    }\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$tup) {\n        $count{$element}++;\n    }\n    foreach my $element (@$lst) {\n        if (exists $count{$element}) {\n            print \"$element occurs $count{$element} times\\n\";\n        }\n        else {\n            print \"$element does not exist\\n\";\n        }\n    }\n}",
    "    my %count;\n    foreach my $element (@$lst)  {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    my @tup = @$tup;\n    my @lst = @$lst;\n    foreach my $t (@tup) {\n        $count{$t}++;\n    }\n    foreach my $l (@lst) {\n        $count{$l}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $word (@$lst) {\n        $count{$word}++;\n    }\n    foreach my $word (@$tup) {\n        $count{$word}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup) {\n        if (exists($count{$element})) {\n            print \"$element : $count{$element}\\n\";\n        }\n        else {\n            print \"$element : 0\\n\";\n        }\n    }\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst)  {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup)  {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my @tup = @$tup;\n    my @lst = @$lst;\n    my %count;\n    foreach my $element (@tup, @lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %hash = map { $_ => 0 } @$lst;\n    foreach my $i (@$tup) {\n        $hash{$i}++ if exists $hash{$i};\n    }\n    return %hash;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$tup) {\n        $count{$element}++;\n    }\n    foreach my $element (@$lst) {\n        if (exists($count{$element})) {\n            print \"$element occurs $count{$element} times\\n\";\n        }\n        else {\n            print \"$element does not occur\\n\";\n        }\n    }\n}",
    "    my %count;\n    @count{@$lst} = ();\n    my $count = grep { exists $count{$_} } @$tup;\n    return $count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    @count{@$lst} = ();\n    my $count = grep {exists $count{$_}} @$tup;\n    return $count;\n}",
    "    my %count;\n    foreach my $i (@$lst) {\n        $count{$i}++;\n    }\n    return \\%count;\n}",
    "    my %count;\n    foreach my $element (@$lst)  {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup)  {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}\nmy @lst = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nmy @tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nmy %count = count_Occurrence(\\@tup, \\@lst);\nprint Dumper(\\%count);",
    "    my %count;\n    foreach my $element (@$lst)  {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup)  {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$tup) {\n        $count{$element}++;\n    }\n    foreach my $element (@$lst) {\n        if (exists $count{$element}) {\n            print \"$element : $count{$element}\\n\";\n        }\n        else {\n            print \"$element : 0\\n\";\n        }\n    }\n}",
    "    my %count;\n    foreach my $element (@$lst)  {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst)  {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup)  {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $ele (@$tup) {\n        $count{$ele}++;\n    }\n    foreach my $ele (@$lst) {\n        if(exists $count{$ele}) {\n            print \"$ele : $count{$ele}\\n\";\n        }\n        else {\n            print \"$ele : 0\\n\";\n        }\n    }\n}",
    "    my %count;\n    foreach my $elem (@$lst) {\n        $count{$elem}++;\n    }\n    foreach my $elem (@$tup) {\n        if (exists $count{$elem}) {\n            print \"$elem : $count{$elem}\\n\";\n        }\n    }\n}",
    "    my @tup = @$tup;\n    my @lst = @$lst;\n    my %count;\n    foreach my $i (@lst) {\n        $count{$i}++;\n    }\n    foreach my $i (@tup) {\n        $count{$i}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$tup) {\n        $count{$element}++;\n    }\n    my $result = 0;\n    foreach my $element (@$lst) {\n        if(exists($count{$element})) {\n            $result++;\n        }\n    }\n    return $result;\n}",
    "    my %hash = map { $_ => 0 } @$lst;\n    foreach my $i (@$tup) {\n        $hash{$i}++ if exists $hash{$i};\n    }\n    return %hash;\n}",
    "    my %count;\n    my $i;\n    my $j;\n    for($i = 0; $i <= $#{$tup}; $i++) {\n        $count{$tup->[$i]} = 0;\n    }\n    for($i = 0; $i <= $#{$tup}; $i++) {\n        for($j = 0; $j <= $#{$lst}; $j++) {\n            if($tup->[$i] eq $lst->[$j]) {\n                $count{$tup->[$i]}++;\n            }\n        }\n    }\n    return %count;\n}",
    "    my %hash;\n    foreach my $i (@$lst) {\n        $hash{$i}++;\n    }\n    foreach my $i (@$tup) {\n        if (exists($hash{$i})) {\n            print \"$i => $hash{$i}\\n\";\n        }\n    }\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup) {\n        print \"$element : $count{$element}\\n\";\n    }\n}",
    "    my %count;\n    foreach my $element (@$tup) {\n        $count{$element}++;\n    }\n    my @result;\n    foreach my $element (@$lst) {\n        push @result, $count{$element};\n    }\n    return @result;\n}",
    "    my %hash = map { $_ => 0 } @$lst;\n    foreach my $i (@$tup) {\n        $hash{$i}++ if exists $hash{$i};\n    }\n    return %hash;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst)  {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup) {\n        print \"$element : $count{$element}\\n\";\n    }\n}",
    "    my %count;\n    foreach my $i (@$lst) {\n        $count{$i}++;\n    }\n    foreach my $i (@$tup) {\n        print \"$i : $count{$i}\\n\";\n    }\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}\nmy @lst = (1, 2, 3, 4, 5);\nmy @tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nmy %count = count_Occurrence(\\@tup, \\@lst);\nprint \"Occurence of elements in list in tuple\\n\";\nforeach my $key (keys %count) {\n    print \"$key => $count{$key}\\n\";\n}",
    "    my %count;\n    foreach my $i (@$lst) {\n        $count{$i}++;\n    }\n    foreach my $i (@$tup) {\n        if(exists $count{$i}) {\n            print \"$i : $count{$i}\\n\";\n        }\n    }\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup) {\n        $count{$element}++;\n    }\n    return \\%count;\n}",
    "    my %count;\n    foreach my $element (@$lst)  {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup)  {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$tup) {\n        $count{$element}++;\n    }\n    my $count = 0;\n    foreach my $element (@$lst) {\n        if (exists $count{$element}) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my %count;\n    my @tup = @$tup;\n    my @lst = @$lst;\n    foreach my $t (@tup) {\n        $count{$t}++;\n    }\n    foreach my $l (@lst) {\n        $count{$l}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    @count{@$lst} = ();\n    my $count = grep { exists $count{$_} } @$tup;\n    return $count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $t (@$tup) {\n        $count{$t}++;\n    }\n    foreach my $l (@$lst) {\n        if (exists $count{$l}) {\n            print \"$l: $count{$l}\\n\";\n        }\n        else {\n            print \"$l: 0\\n\";\n        }\n    }\n}",
    "    my @tuple = @$tup;\n    my @list = @$lst;\n    my %count;\n    foreach my $element (@tuple) {\n        $count{$element}++;\n    }\n    foreach my $element (@list) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %hash = map { $_ => 0 } @$lst;\n    foreach my $i (@$tup) {\n        if (exists $hash{$i}) {\n            $hash{$i}++;\n        }\n    }\n    return %hash;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}\nmy @list = (1,2,3,4,5,6,7,8,9,10);\nmy %count = count_Occurrence(\\@list, \\@list);\nprint Dumper \\%count;",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst)  {\n        $count{$element}++;\n    }\n    return \\%count;\n}",
    "    my %count;\n    my @list = @$lst;\n    my @tuple = @$tup;\n    foreach my $word(@list) {\n        $count{$word}++;\n    }\n    foreach my $word(@tuple) {\n        $count{$word}++;\n    }\n    return %count;\n}",
    "    my %count;\n    @count{@$lst} = ();\n    my $count = grep {exists $count{$_}} @$tup;\n    return $count;\n}",
    "    my %count;\n    foreach my $element (@$lst)  {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup)  {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$tup) {\n        $count{$element}++;\n    }\n    foreach my $element (@$lst) {\n        print \"$element : $count{$element}\\n\";\n    }\n}",
    "    my $count = 0;\n    foreach my $i (@$lst) {\n        $count += grep {$_ eq $i} @$tup;\n    }\n    return $count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $item (@$lst) {\n        $count{$item}++;\n    }\n    foreach my $item (@$tup) {\n        print \"$item : $count{$item}\\n\";\n    }\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my @tup = @$tup;\n    my @lst = @$lst;\n    my %count;\n    foreach my $t (@tup) {\n        $count{$t}++;\n    }\n    foreach my $l (@lst) {\n        $count{$l}++;\n    }\n    return %count;\n}",
    "    my %count;\n    my @tup = @$tup;\n    my @lst = @$lst;\n    foreach my $t (@tup) {\n        $count{$t}++;\n    }\n    foreach my $l (@lst) {\n        $count{$l}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst)  {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return \\%count;\n}",
    "    my %count;\n    foreach my $t (@$tup) {\n        $count{$t}++;\n    }\n    foreach my $l (@$lst) {\n        if (exists $count{$l}) {\n            print \"$l : $count{$l}\\n\";\n        }\n        else {\n            print \"$l : 0\\n\";\n        }\n    }\n}",
    "    my %count;\n    foreach my $element (@$tup) {\n        $count{$element}++;\n    }\n    foreach my $element (@$lst) {\n        if (exists($count{$element})) {\n            print \"$element : $count{$element}\\n\";\n        }\n        else {\n            print \"$element : 0\\n\";\n        }\n    }\n}",
    "    my %count;\n    foreach my $element (@$tup) {\n        $count{$element}++;\n    }\n    foreach my $element (@$lst) {\n        print \"$element : $count{$element}\\n\";\n    }\n}\nmy @tuple = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nmy @list = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\ncount_Occurrence(\\@tuple, \\@list);",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %hash = map { $_ => 0 } @$lst;\n    foreach my $i (@$tup) {\n        if (exists $hash{$i}) {\n            $hash{$i}++;\n        }\n    }\n    return %hash;\n}",
    "    my %count;\n    foreach my $element (@$lst)  {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %hash = map { $_ => 0 } @$lst;\n    foreach my $i (@$tup) {\n        $hash{$i}++ if exists $hash{$i};\n    }\n    return %hash;\n}",
    "    my %count;\n    foreach my $element (@$lst)  {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup) {\n        print \"$element : $count{$element}\\n\";\n    }\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return \\%count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup) {\n        if (exists($count{$element})) {\n            print \"$element : $count{$element}\\n\";\n        }\n    }\n}",
    "    my %count;\n    map { $count{$_}++ } @$lst;\n    return \\%count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup) {\n        print \"$element : $count{$element}\\n\";\n    }\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup) {\n        if (exists($count{$element})) {\n            print \"$element : $count{$element}\\n\";\n        }\n    }\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    @count{@$lst} = ();\n    my $count = grep { exists $count{$_} } @$tup;\n    return $count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup) {\n        if (exists $count{$element}) {\n            print \"$element => $count{$element}\\n\";\n        }\n    }\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return \\%count;\n}",
    "    my %count;\n    foreach my $element (@$tup) {\n        $count{$element}++;\n    }\n    foreach my $element (@$lst) {\n        print \"$element : $count{$element}\\n\";\n    }\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return \\%count;\n}",
    "    my @tup = @$tup;\n    my @lst = @$lst;\n    my %count;\n    foreach my $element (@lst) {\n        $count{$element}++;\n    }\n    foreach my $element (@tup) {\n        if (exists $count{$element}) {\n            print \"$element : $count{$element}\\n\";\n        }\n        else {\n            print \"$element : 0\\n\";\n        }\n    }\n}",
    "    my %count;\n    @count{@$lst} = ();\n    my $count = grep { exists $count{$_} } @$tup;\n    print \"Count of all elements of list in a tuple is : $count\\n\";\n}",
    "    my %count;\n    foreach my $elem (@$lst) {\n        $count{$elem}++;\n    }\n    my @tup = @$tup;\n    foreach my $elem (@tup) {\n        if (exists $count{$elem}) {\n            print \"$elem : $count{$elem}\\n\";\n        }\n        else {\n            print \"$elem : 0\\n\";\n        }\n    }\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return \\%count;\n}",
    "    my %count;\n    foreach my $element (@$lst)  {\n        $count{$element}++;\n    }\n    return \\%count;\n}",
    "    my %hash = map { $_ => 0 } @$lst;\n    foreach my $i (@$tup) {\n        $hash{$i}++ if exists $hash{$i};\n    }\n    return \\%hash;\n}",
    "    my %hash = map { $_ => 0 } @$lst;\n    foreach my $i (@$tup) {\n        $hash{$i}++ if exists $hash{$i};\n    }\n    return \\%hash;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$tup) {\n        $count{$element}++;\n    }\n    my $result = {};\n    foreach my $element (@$lst) {\n        $result->{$element} = $count{$element} // 0;\n    }\n    return $result;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$tup) {\n        $count{$element}++;\n    }\n    foreach my $element (@$lst) {\n        if (exists($count{$element})) {\n            print \"$element : $count{$element}\\n\";\n        } else {\n            print \"$element : 0\\n\";\n        }\n    }\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup) {\n        $count{$element}++;\n    }\n    return %count;\n}",
    "    my %count;\n    foreach my $word (@$lst) {\n        $count{$word}++;\n    }\n    foreach my $word (@$tup) {\n        $count{$word}++;\n    }\n    return %count;\n}",
    "    my %hash = map {$_ => 1} @$lst;\n    my $count = 0;\n    foreach my $i (@$tup) {\n        if(exists $hash{$i}) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my %count;\n    foreach my $element (@$lst) {\n        $count{$element}++;\n    }\n    foreach my $element (@$tup) {\n        print \"$element : $count{$element}\\n\";\n    }\n}",
    "    my %hash;\n    foreach my $i (@$lst) {\n        $hash{$i} = 0;\n    }\n    foreach my $i (@$tup) {\n        if(exists $hash{$i}) {\n            $hash{$i}++;\n        }\n    }\n    return %hash;\n}",
    "    my @tup = @$tup;\n    my @lst = @$lst;\n    my %count;\n    foreach my $i (@tup) {\n        $count{$i}++;\n    }\n    foreach my $j (@lst) {\n        if(exists($count{$j})) {\n            print \"$j : $count{$j}\\n\";\n        }\n        else {\n            print \"$j : 0\\n\";\n        }\n    }\n}",
    "    my %count;\n    foreach my $word (@$lst) {\n        $count{$word}++;\n    }\n    foreach my $word (@$tup) {\n        $count{$word}++;\n    }\n    return %count;\n}",
    "    my $count = 0;\n    foreach my $i (@$lst) {\n        foreach my $j (@$tup) {\n            if($i == $j) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $i (@$lst) {\n        foreach my $j (@$tup) {\n            if($i == $j) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my %count;\n    foreach my $element (@$tup) {\n        $count{$element}++;\n    }\n    foreach my $element (@$lst) {\n        print \"$element => $count{$element}\\n\";\n    }\n}",
    "    my %count;\n    foreach my $element (@$tup) {\n        $count{$element}++;\n    }\n    foreach my $element (@$lst) {\n        print \"$element occurs $count{$element} times\\n\";\n    }\n}"
  ]
}
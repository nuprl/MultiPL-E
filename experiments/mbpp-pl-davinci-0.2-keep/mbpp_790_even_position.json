{
  "name": "mbpp_790_even_position",
  "language": "pl",
  "prompt": "# Write a python function to check whether every even index contains even numbers of a given list.\nsub even_position {\n    my($nums) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_790_even_position.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&even_position;\n        if(eq_deeply($candidate->([3, 2, 1]),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3]),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 1, 4]),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($count % 2 == 0) {\n            if ($num % 2 != 0) {\n                return 0;\n            }\n        }\n        $count++;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    foreach my $num (@$nums) {\n        if ($i % 2 == 0) {\n            if ($num % 2 != 0) {\n                return 0;\n            }\n        }\n        $i++;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    while($i < scalar(@$nums)) {\n        if($i % 2 == 0 && $nums->[$i] % 2 != 0) {\n            return 0;\n        }\n        $i++;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    foreach my $num (@$nums) {\n        if ($i % 2 == 0 && $num % 2 == 0) {\n            $i++;\n        } else {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    foreach my $num (@$nums) {\n        if ($i % 2 == 0) {\n            if ($num % 2 != 0) {\n                return 0;\n            }\n        }\n        $i++;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $flag = 0;\n    foreach my $num (@$nums) {\n        if($i % 2 == 0) {\n            if($num % 2 != 0) {\n                $flag = 1;\n                last;\n            }\n        }\n        $i++;\n    }\n    if($flag == 0) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    foreach my $num (@$nums) {\n        if ($i % 2 == 0 && $num % 2 == 0) {\n            $i++;\n            next;\n        }\n        return 0;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    foreach my $num (@$nums) {\n        if ($i % 2 == 0) {\n            if ($num % 2 != 0) {\n                return 0;\n            }\n        }\n        $i++;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    foreach my $num (@$nums) {\n        if ($i % 2 == 0 && $num % 2 != 0) {\n            return 0;\n        }\n        $i++;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $count = 0;\n    my $flag = 0;\n    foreach my $num (@$nums) {\n        if($i % 2 == 0) {\n            if($num % 2 == 0) {\n                $count++;\n            }\n        }\n        $i++;\n    }\n    if($count == @$nums/2) {\n        $flag = 1;\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    foreach my $num (@$nums) {\n        if ($i % 2 == 0) {\n            if ($num % 2 != 0) {\n                return 0;\n            }\n        }\n        $i += 1;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $flag = 0;\n    foreach my $num (@$nums) {\n        if ($i % 2 == 0) {\n            if ($num % 2 != 0) {\n                $flag = 1;\n                last;\n            }\n        }\n        $i++;\n    }\n    if ($flag == 0) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    foreach my $num (@$nums) {\n        if ($i % 2 == 0) {\n            if ($num % 2 != 0) {\n                return 0;\n            }\n        }\n        $i++;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    foreach my $num (@$nums) {\n        if ($i % 2 == 0) {\n            if ($num % 2 != 0) {\n                return 0;\n            }\n        }\n        $i++;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    foreach my $n (@$nums) {\n        if ($i % 2 == 0) {\n            if ($n % 2 != 0) {\n                return 0;\n            }\n        }\n        $i++;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    foreach my $num (@$nums) {\n        if ($i % 2 == 0) {\n            if ($num % 2 != 0) {\n                return 0;\n            }\n        }\n        $i++;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    foreach my $num (@$nums) {\n        if ($i % 2 == 0) {\n            if ($num % 2 != 0) {\n                return 0;\n            }\n        }\n        $i++;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    foreach my $num (@$nums) {\n        if ($i % 2 == 0) {\n            if ($num % 2 != 0) {\n                return 0;\n            }\n        }\n        $i++;\n    }\n    return 1;\n}",
    "    my $flag = 0;\n    for(my $i = 0; $i < scalar(@$nums); $i++) {\n        if($i % 2 == 0) {\n            if($nums->[$i] % 2 == 0) {\n                $flag = 1;\n            }\n            else {\n                $flag = 0;\n                last;\n            }\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $flag = 0;\n    foreach my $num (@$nums) {\n        if($i % 2 == 0) {\n            if($num % 2 == 0) {\n                $flag = 1;\n            }\n            else {\n                $flag = 0;\n                last;\n            }\n        }\n        $i++;\n    }\n    return $flag;\n}"
  ]
}
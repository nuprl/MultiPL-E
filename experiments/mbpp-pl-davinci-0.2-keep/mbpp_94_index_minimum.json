{
  "name": "mbpp_94_index_minimum",
  "language": "pl",
  "prompt": "# Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\nsub index_minimum {\n    my($test_list) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_94_index_minimum.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&index_minimum;\n        if(eq_deeply($candidate->([[\"Rash\", 143], [\"Manjeet\", 200], [\"Varsha\", 100]]),\"Varsha\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Yash\", 185], [\"Dawood\", 125], [\"Sanya\", 175]]),\"Dawood\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sai\", 345], [\"Salman\", 145], [\"Ayesha\", 96]]),\"Ayesha\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min = $test_list->[0][1];\n    my $index = 0;\n    for(my $i = 0; $i < scalar @$test_list; $i++) {\n        if($test_list->[$i][1] < $min) {\n            $min = $test_list->[$i][1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_value = $test_list->[$i][1];\n            $min_index = $i;\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 0; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 0; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min = $test_list->[0][1];\n    my $index = 0;\n    for (my $i = 0; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min) {\n            $min = $test_list->[$i][1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0]->[1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i]->[1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i]->[1];\n        }\n    }\n    return $test_list->[$min_index]->[0];\n}",
    "    my $min = $test_list->[0][1];\n    my $index = 0;\n    for(my $i = 1; $i < scalar(@$test_list); $i++) {\n        if($test_list->[$i][1] < $min) {\n            $min = $test_list->[$i][1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index][0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0]->[1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i]->[1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i]->[1];\n        }\n    }\n    return $test_list->[$min_index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    for (my $i = 1; $i < @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $test_list->[$min_index]->[1]) {\n            $min_index = $i;\n        }\n    }\n    return $test_list->[$min_index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for my $i (1 .. $#{$test_list}) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for(my $i = 1; $i < scalar @$test_list; $i++) {\n        if($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 1; $i < scalar(@{$test_list}); $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    foreach my $index (1..$#{$test_list}) {\n        if ($test_list->[$index][1] < $min_value) {\n            $min_index = $index;\n            $min_value = $test_list->[$index][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for my $i (1..$#{$test_list}) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for my $i (0..$#{$test_list}) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0]->[1];\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i]->[1];\n        }\n    }\n    return $test_list->[$min_index]->[0];\n}",
    "    my $min = $test_list->[0][1];\n    my $index = 0;\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min) {\n            $min = $test_list->[$i][1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 0; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for my $i (1 .. $#$test_list) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for(my $i = 1; $i < @$test_list; $i++) {\n        if($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0]->[1];\n    for (my $i = 1; $i < scalar @{$test_list}; $i++) {\n        if ($test_list->[$i]->[1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i]->[1];\n        }\n    }\n    return $test_list->[$min_index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $index = 0;\n    my $min = $test_list->[0][1];\n    for (my $i = 1; $i < @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min) {\n            $min = $test_list->[$i][1];\n            $index = $i;\n        }\n    }\n    return $index;\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0]->[1];\n    for(my $i = 1; $i < scalar @$test_list; $i++) {\n        if($test_list->[$i]->[1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i]->[1];\n        }\n    }\n    return $test_list->[$min_index]->[0];\n}",
    "    my $min = $test_list->[0][1];\n    my $index = 0;\n    for (my $i = 0; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min) {\n            $min = $test_list->[$i][1];\n            $index = $i;\n        }\n    }\n    return $index;\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for my $i (1 .. $#$test_list) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0]->[1];\n    for (my $i = 1; $i < @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i]->[1];\n        }\n    }\n    return $test_list->[$min_index]->[0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 1; $i < @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min = $test_list->[0][1];\n    my $index = 0;\n    for (my $i = 1; $i < @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min) {\n            $min = $test_list->[$i][1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for my $i (1 .. $#$test_list) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min = $test_list->[0][1];\n    my $index = 0;\n    for (my $i = 0; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min) {\n            $min = $test_list->[$i][1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index][0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    my $i = 0;\n    foreach my $tuple (@$test_list) {\n        if ($tuple->[1] < $min) {\n            $min = $tuple->[1];\n            $index = $i;\n        }\n        $i++;\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_value = $test_list->[$i][1];\n            $min_index = $i;\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $index = 0;\n    my $min = $test_list->[0][1];\n    for (my $i = 0; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min) {\n            $min = $test_list->[$i][1];\n            $index = $i;\n        }\n    }\n    return $index;\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0]->[1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i]->[1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i]->[1];\n        }\n    }\n    return $test_list->[$min_index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0]->[1];\n    for(my $i = 1; $i < scalar(@$test_list); $i++) {\n        if($test_list->[$i]->[1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i]->[1];\n        }\n    }\n    return $test_list->[$min_index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    for(my $i = 1; $i < @$test_list; $i++) {\n        if($test_list->[$i]->[1] < $test_list->[$min_index]->[1]) {\n            $min_index = $i;\n        }\n    }\n    return $test_list->[$min_index]->[0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for(my $i = 1; $i < scalar(@{$test_list}); $i++) {\n        if($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0]->[1];\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i]->[1];\n        }\n    }\n    return $test_list->[$min_index]->[0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0]->[1];\n    for (my $i = 1; $i < @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i]->[1];\n        }\n    }\n    return $test_list->[$min_index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_value = $test_list->[$i][1];\n            $min_index = $i;\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i=1; $i<scalar(@$test_list); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for(my $i = 1; $i < scalar(@$test_list); $i++) {\n        if($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min = $test_list->[0][1];\n    my $index = 0;\n    for(my $i = 0; $i < scalar @$test_list; $i++) {\n        if($test_list->[$i][1] < $min) {\n            $min = $test_list->[$i][1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 0; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min = $test_list->[0];\n    my $index = 0;\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i] < $min) {\n            $min = $test_list->[$i];\n            $index = $i;\n        }\n    }\n    return $index;\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0]->[1];\n    for (my $i = 1; $i < scalar @{$test_list}; $i++) {\n        if ($test_list->[$i]->[1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i]->[1];\n        }\n    }\n    return $test_list->[$min_index]->[0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for my $i (1..$#$test_list) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 0; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $index = 0;\n    my $min = $test_list->[0][1];\n    for (my $i = 1; $i < scalar(@{$test_list}); $i++) {\n        if ($test_list->[$i][1] < $min) {\n            $min = $test_list->[$i][1];\n            $index = $i;\n        }\n    }\n    return $index;\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for my $i (1..$#$test_list) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0]->[1];\n    for (my $i = 1; $i < @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i]->[1];\n        }\n    }\n    return $test_list->[$min_index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[$min_index][1];\n    for (my $i = 1; $i < scalar(@{$test_list}); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min = $test_list->[0][1];\n    my $index = 0;\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min) {\n            $min = $test_list->[$i][1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index][0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min_index = 0;\n    for(my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i]->[1] < $test_list->[$min_index]->[1]) {\n            $min_index = $i;\n        }\n    }\n    return $test_list->[$min_index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $index;\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for my $i (0 .. $#{$test_list}) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 0; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0]->[1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i]->[1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i]->[1];\n        }\n    }\n    return $test_list->[$min_index]->[0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min_index = 0;\n    for (my $i = 1; $i < @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $test_list->[$min_index]->[1]) {\n            $min_index = $i;\n        }\n    }\n    return $test_list->[$min_index]->[0];\n}",
    "    my $min = $test_list->[0][1];\n    my $index = 0;\n    for (my $i = 1; $i < scalar(@{$test_list}); $i++) {\n        if ($test_list->[$i][1] < $min) {\n            $min = $test_list->[$i][1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0]->[1];\n    for(my $i = 1; $i < scalar(@$test_list); $i++) {\n        if($test_list->[$i]->[1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i]->[1];\n        }\n    }\n    return $test_list->[$min_index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for my $i (1 .. $#$test_list) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for my $i (1..$#{$test_list}) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0]->[1];\n    for (my $i = 1; $i < @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i]->[1];\n        }\n    }\n    return $test_list->[$min_index]->[0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for(my $i = 1; $i < scalar @$test_list; $i++) {\n        if($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for(my $i = 1; $i < scalar @$test_list; $i++) {\n        if($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 0; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min = $test_list->[0][1];\n    my $index = 0;\n    for (my $i = 0; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i][1] < $min) {\n            $min = $test_list->[$i][1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index][0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for(my $i = 0; $i < scalar(@$test_list); $i++) {\n        if($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for my $i (1 .. $#$test_list) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar @{$test_list}; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for(my $i = 1; $i < @$test_list; $i++) {\n        if($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0]->[1];\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i]->[1];\n        }\n    }\n    return $test_list->[$min_index]->[0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 1; $i < scalar(@{$test_list}); $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar(@{$test_list}); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0]->[1];\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i]->[1];\n        }\n    }\n    return $test_list->[$min_index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_value = $test_list->[$i][1];\n            $min_index = $i;\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for(my $i = 0; $i < scalar(@$test_list); $i++) {\n        if($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for my $i (1 .. $#{$test_list}) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0]->[1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i]->[1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i]->[1];\n        }\n    }\n    return $test_list->[$min_index]->[0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 0; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min = $test_list->[0][1];\n    my $index = 0;\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min) {\n            $min = $test_list->[$i][1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for my $i (1 .. $#{$test_list}) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for my $i (1..$#$test_list) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0]->[1];\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i]->[1];\n        }\n    }\n    return $test_list->[$min_index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min = $test_list->[0][1];\n    my $index = 0;\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min) {\n            $min = $test_list->[$i][1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index][0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for(my $i = 1; $i < scalar @$test_list; $i++) {\n        if($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min_index = 0;\n    for my $i (1..$#$test_list) {\n        if ($test_list->[$i][1] < $test_list->[$min_index][1]) {\n            $min_index = $i;\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min = $test_list->[0][1];\n    my $index = 0;\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min) {\n            $min = $test_list->[$i][1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 0; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_value = $test_list->[$i][1];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for my $i (1..$#{$test_list}) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for(my $i = 1; $i < scalar(@$test_list); $i++) {\n        if($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 0; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0]->[1];\n    for(my $i = 1; $i < scalar(@$test_list); $i++) {\n        if($test_list->[$i]->[1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i]->[1];\n        }\n    }\n    return $test_list->[$min_index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 0; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for(my $i = 1; $i < scalar(@$test_list); $i++) {\n        if($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for my $i (0 .. $#{$test_list}) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $index;\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 0; $i < @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min = $test_list->[0][1];\n    my $index = 0;\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min) {\n            $min = $test_list->[$i][1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0]->[1];\n    for(my $i = 1; $i < scalar(@$test_list); $i++) {\n        if($test_list->[$i]->[1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i]->[1];\n        }\n    }\n    return $test_list->[$min_index]->[0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 0; $i < @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for my $i (1..$#{$test_list}) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min_index;\n    my $min_value = $test_list->[0]->[1];\n    for (my $i = 0; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i]->[1] < $min_value) {\n            $min_value = $test_list->[$i]->[1];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for(my $i = 0; $i < scalar(@$test_list); $i++) {\n        if($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for my $i (1..$#{$test_list}) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    for my $i (1 .. $#{$test_list}) {\n        if ($test_list->[$i]->[1] < $test_list->[$min_index]->[1]) {\n            $min_index = $i;\n        }\n    }\n    return $test_list->[$min_index]->[0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 0; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min = $test_list->[0][1];\n    my $index = 0;\n    for (my $i = 1; $i < @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min) {\n            $min = $test_list->[$i][1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index][0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for my $i (1..$#{$test_list}) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar(@{$test_list}); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0]->[1];\n    for my $i (1..$#{$test_list}) {\n        if ($test_list->[$i]->[1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i]->[1];\n        }\n    }\n    return $test_list->[$min_index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for my $i (1 .. $#{$test_list}) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0]->[1];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        if ($test_list->[$i]->[1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i]->[1];\n        }\n    }\n    return $test_list->[$min_index]->[0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for(my $i = 1; $i < scalar(@{$test_list}); $i++) {\n        if($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min_index = 0;\n    for (my $i = 0; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $test_list->[$min_index]->[1]) {\n            $min_index = $i;\n        }\n    }\n    return $test_list->[$min_index]->[0];\n}",
    "    my $min = $test_list->[0]->[1];\n    my $index = 0;\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i]->[1] < $min) {\n            $min = $test_list->[$i]->[1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index]->[0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for my $i (0..$#{$test_list}) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_index = $i;\n            $min_value = $test_list->[$i][1];\n        }\n    }\n    return $test_list->[$min_index][0];\n}",
    "    my $min = $test_list->[0][1];\n    my $index = 0;\n    for (my $i = 0; $i < @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min) {\n            $min = $test_list->[$i][1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index][0];\n}",
    "    my $min = $test_list->[0][1];\n    my $index = 0;\n    for(my $i = 0; $i < scalar @{$test_list}; $i++) {\n        if($test_list->[$i][1] < $min) {\n            $min = $test_list->[$i][1];\n            $index = $i;\n        }\n    }\n    return $test_list->[$index][0];\n}",
    "    my $min_index = 0;\n    my $min_value = $test_list->[0][1];\n    for (my $i = 1; $i < @$test_list; $i++) {\n        if ($test_list->[$i][1] < $min_value) {\n            $min_value = $test_list->[$i][1];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}"
  ]
}
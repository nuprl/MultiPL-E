{
  "name": "mbpp_91_find_substring",
  "language": "pl",
  "prompt": "# Write a function to check if a string is present as a substring in a given list of string values.\nsub find_substring {\n    my($str1, $sub_str) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_91_find_substring.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&find_substring;\n        if(eq_deeply($candidate->([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $flag = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $flag = 1;\n        }\n    }\n    return $flag;\n}",
    "    my $flag = 0;\n    for my $i(0..$#{$str1}) {\n        if($str1->[$i] =~ /$sub_str/) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $result = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    foreach my $str2 (@$str1) {\n        return 1 if $str2 =~ /$sub_str/;\n    }\n    return 0;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my @str_array = split(/\\s+/, $str1);\n    my $found = 0;\n    foreach my $str (@str_array) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my @str_arr = split(/\\s+/, $str1);\n    foreach my $str (@str_arr) {\n        if ($str eq $sub_str) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my @str_arr = split(/\\s+/, $str1);\n    foreach my $str (@str_arr) {\n        if ($str eq $sub_str) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ m/$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $pos = index($str1, $sub_str);\n    if ($pos >= 0) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    my $flag = 0;\n    my @str_arr = split(/\\s+/, $str1);\n    foreach my $str (@str_arr) {\n        if ($str eq $sub_str) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $result = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $flag = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $flag = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $str_len = length($str1);\n    my $sub_str_len = length($sub_str);\n    for(my $i = 0; $i <= $str_len - $sub_str_len; $i++) {\n        if(substr($str1, $i, $sub_str_len) eq $sub_str) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $result = 0;\n    for my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my @str_list = split(/ /, $str1);\n    foreach my $str (@str_list) {\n        if($str eq $sub_str) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $flag = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my @str_list = split(/\\s+/, $str1);\n    foreach my $str (@str_list) {\n        if ($str =~ /$sub_str/) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    if (index($str1, $sub_str) != -1) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    my @str_arr = split(/ /, $str1);\n    my $flag = 0;\n    foreach my $str (@str_arr) {\n        if ($str eq $sub_str) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $sub_str_len = length($sub_str);\n    my $str1_len = length($str1);\n    my $i = 0;\n    my $j = 0;\n    my $found = 0;\n    while($i < $str1_len) {\n        if($str1[$i] == $sub_str[$j]) {\n            $i++;\n            $j++;\n        }\n        if($j == $sub_str_len) {\n            $found = 1;\n            last;\n        }\n        elsif($i < $str1_len && $str1[$i] != $sub_str[$j]) {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    return $found;\n}",
    "    my @str_arr = split(/ /, $str1);\n    my $result = 0;\n    foreach my $str (@str_arr) {\n        if ($str eq $sub_str) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    return 1 if $str1 =~ /$sub_str/;\n    return 0;\n}",
    "    my @str_arr = split(/ /, $str1);\n    foreach my $str (@str_arr) {\n        if ($str eq $sub_str) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my @str_list = split(/\\s+/, $str1);\n    foreach my $str (@str_list) {\n        if($str =~ /$sub_str/) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my @str1 = split(//, $str1);\n    my @sub_str = split(//, $sub_str);\n    my $count = 0;\n    foreach my $i (@str1) {\n        if ($i eq $sub_str[$count]) {\n            $count++;\n        }\n        else {\n            $count = 0;\n        }\n        if ($count == scalar(@sub_str)) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    if(index($str1, $sub_str) != -1) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my @str1 = split(/\\s+/, $str1);\n    my $found = 0;\n    foreach my $str (@str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my @str_list = split(/\\s+/, $str1);\n    foreach my $str (@str_list) {\n        if ($str =~ /$sub_str/) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    for my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my @str_list = split(/\\s+/, $str1);\n    foreach my $str (@str_list) {\n        if ($str =~ m/$sub_str/) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my @str_arr = split(/ /, $str1);\n    foreach my $str (@str_arr) {\n        if($str eq $sub_str) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my @str1 = split(//, $str1);\n    my @sub_str = split(//, $sub_str);\n    my $i = 0;\n    my $j = 0;\n    my $found = 0;\n    while ($i < scalar @str1) {\n        if ($str1[$i] eq $sub_str[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n            $j = 0;\n        }\n        if ($j == scalar @sub_str) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    if (index($str1, $sub_str) != -1) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    if (index($str1, $sub_str) != -1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my @str1 = split(/\\s+/, $str1);\n    foreach my $str (@str1) {\n        if ($str =~ /$sub_str/) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my @str_arr = split(/\\s+/, $str1);\n    my $found = 0;\n    foreach my $str (@str_arr) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    if ($str1 =~ /$sub_str/) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $ret = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $ret = 1;\n            last;\n        }\n    }\n    return $ret;\n}",
    "    my $result = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    for my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if (index($str, $sub_str) != -1) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my @str_list = split(/\\s+/, $str1);\n    my $found = 0;\n    foreach my $str (@str_list) {\n        if($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $count = 0;\n    foreach my $str2 (@$str1) {\n        if($str2 =~ /$sub_str/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my @str_list = split(/\\s+/, $str1);\n    foreach my $str (@str_list) {\n        if ($str =~ /$sub_str/) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    for my $str (@$str1) {\n        if (index($str, $sub_str) != -1) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    if($str1 =~ /$sub_str/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $result = 0;\n    if (index($str1, $sub_str) != -1) {\n        $result = 1;\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $ret = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $ret = 1;\n            last;\n        }\n    }\n    return $ret;\n}",
    "    my $found = 0;\n    for my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if (index($str2, $sub_str) != -1) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $count = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $found = 0;\n    for my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my @str_arr = split(/\\s+/, $str1);\n    foreach my $str (@str_arr) {\n        if ($str eq $sub_str) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    if (index($str1, $sub_str) != -1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my @str_arr = split(/\\s+/, $str1);\n    my $flag = 0;\n    foreach my $str (@str_arr) {\n        if ($str =~ /$sub_str/) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $result = 0;\n    foreach my $str2 (@$str1) {\n        if($str2 =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    if (index($str1, $sub_str) != -1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $count = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $result = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my @str_list = split(/\\s+/, $str1);\n    my $found = 0;\n    foreach my $str (@str_list) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    if ($str1 =~ /$sub_str/) {\n        return 1;\n    }\n    return 0;\n}",
    "    my @str_list = split(/\\s+/, $str1);\n    foreach my $str (@str_list) {\n        if($str =~ /$sub_str/) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $result = 0;\n    foreach my $str2 (@$str1) {\n        if (index($str2, $sub_str) != -1) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    if ($str1 =~ /$sub_str/) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my @str = split(/ /, $str1);\n    my $flag = 0;\n    foreach my $str(@str) {\n        if($str =~ /$sub_str/) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    for my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    for my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my @str_list = split(/\\s+/, $str1);\n    foreach my $str (@str_list) {\n        if ($str =~ /$sub_str/) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str2 (@$str1) {\n        if (index($str2, $sub_str) != -1) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    return $str1 =~ /$sub_str/;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my @str_list = split(/ /, $str1);\n    foreach my $str (@str_list) {\n        if($str eq $sub_str) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my @str_arr = split(/\\s+/, $str1);\n    foreach my $str (@str_arr) {\n        if ($str =~ /$sub_str/) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if (index($str, $sub_str) != -1) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str2 (@$str1) {\n        if($str2 =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $count = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $result = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $len = length($str1);\n    my $sub_len = length($sub_str);\n    my $flag = 0;\n    while($i < $len) {\n        if(substr($str1, $i, $sub_len) eq $sub_str) {\n            $flag = 1;\n            last;\n        }\n        $i++;\n    }\n    return $flag;\n}",
    "    my $result = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my @str_arr = split(/\\s+/, $str1);\n    my $found = 0;\n    foreach my $str (@str_arr) {\n        if($str eq $sub_str) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str2 (@$str1) {\n        if($str2 =~ /$sub_str/i) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    for my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my @str_arr = split(/\\s+/, $str1);\n    my $found = 0;\n    foreach my $str (@str_arr) {\n        if($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if (index($str, $sub_str) != -1) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "\n    if ($str1 =~ /$sub_str/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my @str = @$str1;\n    foreach my $str (@str) {\n        if ($str =~ /$sub_str/) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $flag = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my @str_arr = split(/\\s+/, $str1);\n    my $found = 0;\n    foreach my $str (@str_arr) {\n        if ($str eq $sub_str) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    for my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my @str1 = split(//, $str1);\n    my @sub_str = split(//, $sub_str);\n    my $flag = 0;\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] eq $sub_str[0]) {\n            $flag = 1;\n            for(my $j = 1; $j < scalar(@sub_str); $j++) {\n                if($str1[$i+$j] ne $sub_str[$j]) {\n                    $flag = 0;\n                    last;\n                }\n            }\n            if($flag == 1) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    for my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my @str_arr = split(/\\s+/, $str1);\n    my $is_present = 0;\n    foreach my $str (@str_arr) {\n        if ($str eq $sub_str) {\n            $is_present = 1;\n            last;\n        }\n    }\n    return $is_present;\n}"
  ]
}
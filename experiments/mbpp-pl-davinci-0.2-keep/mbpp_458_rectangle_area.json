{
  "name": "mbpp_458_rectangle_area",
  "language": "pl",
  "prompt": "# Write a function to find the area of a rectangle.\nsub rectangle_area {\n    my($l, $b) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_458_rectangle_area.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rectangle_area;\n        if(eq_deeply($candidate->(10, 20),200)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10, 5),50)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(4, 2),8)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    my $area = $l * $b;\n    return $area;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}",
    "    return $l * $b;\n}"
  ]
}
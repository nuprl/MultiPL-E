{
  "name": "mbpp_619_move_num",
  "language": "pl",
  "prompt": "# Write a function to move all the numbers to the end of the given string.\nsub move_num {\n    my($test_str) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_619_move_num.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&move_num;\n        if(eq_deeply($candidate->(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"Avengers124Assemble\"),\"AvengersAssemble124\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "\n    my @chars = split //, $test_str;\n    my @nums;\n    my @chars_no_num;",
    "    my @arr = split(//, $test_str);\n    my @num_arr;\n    my @char_arr;\n    foreach my $char (@arr) {\n        if ($char =~ /\\d/) {\n            push(@num_arr, $char);\n        } else {\n            push(@char_arr, $char);\n        }\n    }\n    return join(\"\", @char_arr) . join(\"\", @num_arr);\n}",
    "    my($i, $j, $len);\n    my(@arr);\n    my($result);",
    "    my @arr = split(//, $test_str);\n    my @num_arr;\n    my @char_arr;\n    for my $i (@arr) {\n        if ($i =~ /[0-9]/) {\n            push @num_arr, $i;\n        } else {\n            push @char_arr, $i;\n        }\n    }\n    return join('', @char_arr) . join('', @num_arr);\n}",
    "    my $result = \"\";\n    my $num = \"\";\n    my $char = \"\";\n    for (my $i = 0; $i < length($test_str); $i++) {\n        $char = substr($test_str, $i, 1);\n        if ($char =~ /[0-9]/) {\n            $num .= $char;\n        } else {\n            $result .= $char;\n        }\n    }\n    return $result . $num;\n}",
    "    my @str_arr = split('', $test_str);\n    my @num_arr;\n    my @char_arr;\n    foreach my $char (@str_arr) {\n        if ($char =~ /\\d/) {\n            push @num_arr, $char;\n        } else {\n            push @char_arr, $char;\n        }\n    }\n    return join('', @char_arr) . join('', @num_arr);\n}",
    "    my $str_len = length($test_str);\n    my $i = 0;\n    my $j = $str_len - 1;\n    my @str_arr = split(//, $test_str);\n    while($i < $j) {\n        if($str_arr[$i] =~ /[0-9]/) {\n            if($str_arr[$j] =~ /[a-zA-Z]/) {\n                my $tmp = $str_arr[$i];\n                $str_arr[$i] = $str_arr[$j];\n                $str_arr[$j] = $tmp;\n                $i++;\n                $j--;\n            } else {\n                $j--;\n            }\n        } else {\n            $i++;\n        }\n    }\n    my $ret_str = join('', @str_arr);\n    return $ret_str;\n}",
    "    my @chars = split(//, $test_str);\n    my @nums = grep { $_ =~ /\\d/ } @chars;\n    my @others = grep { $_ !~ /\\d/ } @chars;\n    return join('', @others, @nums);\n}",
    "    my @arr = split //, $test_str;\n    my @num = ();\n    my @char = ();\n    foreach my $i (@arr) {\n        if ($i =~ /\\d/) {\n            push @num, $i;\n        } else {\n            push @char, $i;\n        }\n    }\n    my $result = join '', @char, @num;\n    return $result;\n}",
    "    my @arr = split(//, $test_str);\n    my @num;\n    my @char;\n    foreach my $i (@arr) {\n        if ($i =~ /\\d/) {\n            push @num, $i;\n        } else {\n            push @char, $i;\n        }\n    }\n    my $str = join(\"\", @char, @num);\n    return $str;\n}",
    "    my @str_arr = split(//, $test_str);\n    my @num_arr;\n    my @char_arr;\n    for my $i (0..$#str_arr) {\n        if ($str_arr[$i] =~ /\\d/) {\n            push @num_arr, $str_arr[$i];\n        } else {\n            push @char_arr, $str_arr[$i];\n        }\n    }\n    return join('', @char_arr, @num_arr);\n}",
    "    my @str_arr = split(//, $test_str);\n    my @num_arr = ();\n    my @char_arr = ();\n    foreach my $char (@str_arr) {\n        if ($char =~ /\\d/) {\n            push @num_arr, $char;\n        } else {\n            push @char_arr, $char;\n        }\n    }\n    my $result = join('', @char_arr) . join('', @num_arr);\n    return $result;\n}",
    "    my $num_str = \"\";\n    my $char_str = \"\";\n    my @test_str = split(//, $test_str);\n    foreach my $char (@test_str) {\n        if ($char =~ /[0-9]/) {\n            $num_str .= $char;\n        } else {\n            $char_str .= $char;\n        }\n    }\n    return $char_str . $num_str;\n}",
    "    my @arr = split(//, $test_str);\n    my @num_arr = ();\n    my @char_arr = ();\n    foreach my $char (@arr) {\n        if ($char =~ /\\d/) {\n            push(@num_arr, $char);\n        } else {\n            push(@char_arr, $char);\n        }\n    }\n    my $result = join('', @char_arr) . join('', @num_arr);\n    return $result;\n}",
    "    my $num_str = \"\";\n    my $char_str = \"\";\n    for my $char (split //, $test_str) {\n        if ($char =~ /\\d/) {\n            $num_str .= $char;\n        } else {\n            $char_str .= $char;\n        }\n    }\n    return $char_str . $num_str;\n}",
    "    my @arr = split //, $test_str;\n    my @num_arr;\n    my @char_arr;\n    foreach my $char (@arr) {\n        if ($char =~ /\\d/) {\n            push @num_arr, $char;\n        } else {\n            push @char_arr, $char;\n        }\n    }\n    return join('', @char_arr, @num_arr);\n}",
    "    my @str_arr = split(//, $test_str);\n    my @num_arr = ();\n    my @char_arr = ();\n    for (my $i = 0; $i < scalar(@str_arr); $i++) {\n        if ($str_arr[$i] =~ /\\d/) {\n            push(@num_arr, $str_arr[$i]);\n        } else {\n            push(@char_arr, $str_arr[$i]);\n        }\n    }\n    return join('', @char_arr) . join('', @num_arr);\n}",
    "    my @arr = split(//, $test_str);\n    my @num_arr;\n    my @char_arr;\n    foreach my $char (@arr) {\n        if ($char =~ /\\d/) {\n            push(@num_arr, $char);\n        } else {\n            push(@char_arr, $char);\n        }\n    }\n    return join('', @char_arr) . join('', @num_arr);\n}",
    "    my @chars = split(//, $test_str);\n    my $i = 0;\n    my $j = @chars - 1;\n    while ($i < $j) {\n        if ($chars[$i] =~ /\\d/) {\n            if ($chars[$j] =~ /\\D/) {\n                my $tmp = $chars[$i];\n                $chars[$i] = $chars[$j];\n                $chars[$j] = $tmp;\n                $i++;\n                $j--;\n            } else {\n                $j--;\n            }\n        } else {\n            $i++;\n        }\n    }\n    return join('', @chars);\n}",
    "    my @str_arr = split(//, $test_str);\n    my @num_arr = ();\n    my @char_arr = ();\n    foreach my $char (@str_arr) {\n        if ($char =~ /\\d/) {\n            push(@num_arr, $char);\n        } else {\n            push(@char_arr, $char);\n        }\n    }\n    my $result_str = join(\"\", @char_arr) . join(\"\", @num_arr);\n    return $result_str;\n}"
  ]
}
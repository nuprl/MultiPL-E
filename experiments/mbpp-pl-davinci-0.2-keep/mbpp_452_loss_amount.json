{
  "name": "mbpp_452_loss_amount",
  "language": "pl",
  "prompt": "# Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nsub loss_amount {\n    my($actual_cost, $sale_amount) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_452_loss_amount.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&loss_amount;\n        if(eq_deeply($candidate->(1500, 1200),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(100, 200),100)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(2000, 5000),3000)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    return $actual_cost - $sale_amount;\n}",
    "    my $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}",
    "    return $actual_cost - $sale_amount;\n}",
    "    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}",
    "    return $actual_cost > $sale_amount ? $actual_cost - $sale_amount : 0;\n}",
    "    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $loss = $actual_cost - $sale_amount;\n    return $loss > 0 ? $loss : 0;\n}",
    "    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    }\n    return 0;\n}",
    "    if($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    }\n    return 0;\n}",
    "    if($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    }\n    return 0;\n}",
    "    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    }\n    return 0;\n}",
    "    my $loss_amount = $actual_cost - $sale_amount;\n    return $loss_amount;\n}",
    "    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    }\n    return 0;\n}",
    "    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    }\n    else {\n        return 0;\n    }\n}",
    "    return $actual_cost - $sale_amount;\n}",
    "    return $actual_cost - $sale_amount;\n}",
    "    my $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $loss = $actual_cost - $sale_amount;\n    return $loss > 0 ? $loss : 0;\n}",
    "    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    }\n    return 0;\n}"
  ]
}
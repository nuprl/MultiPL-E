{
  "name": "mbpp_293_otherside_rightangle",
  "language": "pl",
  "prompt": "# Write a function to find the third side of a right angled triangle.\nsub otherside_rightangle {\n    my($w, $h) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_293_otherside_rightangle.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&otherside_rightangle;\n        if(eq_deeply($candidate->(7, 8),10.63014581273465)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(3, 4),5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 15),16.55294535724685)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    return sqrt($w**2 + $h**2);\n}",
    "    return sqrt($w**2 + $h**2);\n}",
    "    return sqrt($w*$w + $h*$h);\n}",
    "    return sqrt($w*$w + $h*$h);\n}",
    "    return sqrt($w**2 + $h**2);\n}",
    "    my $hypotenuse = sqrt($w**2 + $h**2);\n    return $hypotenuse;\n}",
    "    return sqrt($w**2 + $h**2);\n}",
    "    return sqrt($w*$w + $h*$h);\n}",
    "    return sqrt($w**2 + $h**2);\n}",
    "    return sqrt($w**2 + $h**2);\n}",
    "    return sqrt($w**2 + $h**2);\n}",
    "    return sqrt($w * $w + $h * $h);\n}",
    "    return sqrt($w**2 + $h**2);\n}",
    "    return sqrt($w**2 + $h**2);\n}",
    "    return sqrt($w*$w + $h*$h);\n}",
    "    return sqrt($w**2 + $h**2);\n}",
    "    return sqrt($w**2 + $h**2);\n}",
    "    return sqrt($w**2 + $h**2);\n}",
    "    return sqrt($w**2 + $h**2);\n}",
    "    return sqrt($w**2 + $h**2);\n}"
  ]
}
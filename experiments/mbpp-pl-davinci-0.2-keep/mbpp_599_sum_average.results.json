{
  "name": "mbpp_599_sum_average",
  "language": "pl",
  "prompt": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_599_sum_average.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "results": [
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for (my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i=1; $i<=$number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum/$number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    for (my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    my $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return $sum, $average;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i=1; $i<=$number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum/$number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i=1; $i<=$number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum/$number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i=1; $i<=$number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum/$number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for (my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for (my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i=1; $i<=$number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum/$number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    my $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for (my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for (my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    my $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i=1; $i<=$number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpbxbgt2kn.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmpbxbgt2kn.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for (my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average;\n    for(my $i=1; $i<=$number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum/$number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpjd583ar0.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmpjd583ar0.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++){\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpxsc5bf5w.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmpxsc5bf5w.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    my $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum and average is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmprbb31uk7.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmprbb31uk7.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum and average is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmprbb31uk7.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmprbb31uk7.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i=1; $i<=$number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum/$number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for (my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for (my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum and average is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmprbb31uk7.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmprbb31uk7.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for (my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i=1; $i<=$number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpbxbgt2kn.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmpbxbgt2kn.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for (my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum and average is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmprbb31uk7.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmprbb31uk7.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for (my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for (my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $avg = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $avg\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpqej5s4ct.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmpqej5s4ct.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    my $average = $sum/$number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpeglbnmwy.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmpeglbnmwy.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average;\n    for(my $i=1; $i<=$number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum/$number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpu6g1rlbg.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmpu6g1rlbg.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i=1;$i<=$number;$i++) {\n        $sum += $i;\n    }\n    $average = $sum/$number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpxq2r_udx.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmpxq2r_udx.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    my $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for (my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i=1; $i<=$number; $i++){\n        $sum += $i;\n    }\n    $average = $sum/$number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpaa75svbk.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmpaa75svbk.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum is $sum and average is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpy9s_vl9z.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmpy9s_vl9z.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for (my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for (my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for (my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    my $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpf_2j2h9g.pl line 6.\nBEGIN failed--compilation aborted at /tmp/tmpf_2j2h9g.pl line 6.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for (my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $avg = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $avg\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpqej5s4ct.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmpqej5s4ct.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for (my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for (my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    my $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i=1; $i<=$number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpc8yvlkam.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmpc8yvlkam.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my($sum) = 0;\n    my($average) = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpi6jl07aj.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmpi6jl07aj.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++){\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpoy58m35d.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmpoy58m35d.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for (my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for (my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for (my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    my $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my($sum) = 0;\n    my($average) = 0;\n    for(my($i) = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpha1hom76.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmpha1hom76.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    if($number > 0) {\n        for(my $i = 1; $i <= $number; $i++) {\n            $sum += $i;\n        }\n        $average = $sum / $number;\n    }\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpseq5mfv7.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpseq5mfv7.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my($sum) = 0;\n    my($average) = 0;\n    for (my($i) = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpg61e6gym.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmpg61e6gym.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i=1; $i<=$number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpbxbgt2kn.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmpbxbgt2kn.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i=1; $i<=$number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum/$number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for (my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for (my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my($sum) = 0;\n    my($average) = 0;\n    for(my($i) = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpoylffbhf.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmpoylffbhf.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    foreach my $i (1..$number) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp04tckknz.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmp04tckknz.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for (my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my($sum, $average);\n    $sum = 0;\n    for($i=1; $i<=$number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum/$number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpod0d5f5u.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmpod0d5f5u.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    my $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    for(my $i=1; $i<=$number; $i++) {\n        $sum += $i;\n    }\n    my $average = $sum/$number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpll9yd8hc.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmpll9yd8hc.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i=1; $i<=$number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum/$number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i=1; $i<=$number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum/$number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum.\\n\";\n    print \"Average of first $number natural numbers is $average.\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpo7w2dr1t.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmpo7w2dr1t.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    if($number > 0) {\n        for(my $i = 1; $i <= $number; $i++) {\n            $sum += $i;\n        }\n        $average = $sum / $number;\n    }\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpseq5mfv7.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpseq5mfv7.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i=1; $i<=$number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum/$number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my($sum) = 0;\n    my($average) = 0;\n    for(my($i) = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpoylffbhf.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmpoylffbhf.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    my $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    for (my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    my $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    for (my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    my $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp3lw4m_hf.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmp3lw4m_hf.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average;\n    for (my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpcd0b_xhx.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmpcd0b_xhx.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $avg = 0;\n    for(my $i=1; $i<=$number; $i++){\n        $sum += $i;\n    }\n    $avg = $sum/$number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $avg\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpxqqvznvv.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmpxqqvznvv.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    if($number < 0) {\n        print \"Please enter a positive number.\\n\";\n    }\n    else {\n        for(my $i = 1; $i <= $number; $i++) {\n            $sum += $i;\n        }\n        $average = $sum / $number;\n        print \"Sum of first $number natural numbers is $sum.\\n\";\n        print \"Average of first $number natural numbers is $average.\\n\";\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp3q5ah2ct.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmp3q5ah2ct.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i=1; $i<=$number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum/$number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i=1; $i<=$number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum/$number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for (my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++){\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpoy58m35d.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmpoy58m35d.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    my $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for (my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for (my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    return ($sum, $average);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find sum and average of first n natural numbers.\nsub sum_average {\n    my($number) = @_;\n    my $sum = 0;\n    my $average = 0;\n    for(my $i = 1; $i <= $number; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / $number;\n    print \"Sum of first $number natural numbers is $sum\\n\";\n    print \"Average of first $number natural numbers is $average\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_average;\n        if(eq_deeply($candidate->(10),[55, 5.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),[120, 8.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(20),[210, 10.5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509808,
      "stdout": "Sum of first 10 natural numbers is 55\nAverage of first 10 natural numbers is 5.5\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
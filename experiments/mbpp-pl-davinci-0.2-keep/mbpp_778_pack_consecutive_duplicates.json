{
  "name": "mbpp_778_pack_consecutive_duplicates",
  "language": "pl",
  "prompt": "# Write a function to pack consecutive duplicates of a given list elements into sublists.\nsub pack_consecutive_duplicates {\n    my($list1) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_778_pack_consecutive_duplicates.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&pack_consecutive_duplicates;\n        if(eq_deeply($candidate->([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]),[[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]),[[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]),[[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my @list2 = ();\n    my $i = 0;\n    my $j = 0;\n    while ($i < scalar(@$list1)) {\n        my $temp = $list1->[$i];\n        my @temp_list = ();\n        while ($i < scalar(@$list1) && $list1->[$i] eq $temp) {\n            push @temp_list, $list1->[$i];\n            $i++;\n        }\n        $list2[$j] = \\@temp_list;\n        $j++;\n    }\n    return \\@list2;\n}",
    "    my $list2 = [];\n    my $i = 0;\n    my $j = 0;\n    while ($i < scalar(@$list1)) {\n        my $count = 1;\n        while ($i < scalar(@$list1) - 1 && $list1->[$i] == $list1->[$i + 1]) {\n            $i++;\n            $count++;\n        }\n        $list2->[$j] = [];\n        for (my $k = 0; $k < $count; $k++) {\n            $list2->[$j][$k] = $list1->[$i];\n        }\n        $i++;\n        $j++;\n    }\n    return $list2;\n}",
    "    my @list2;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $len = scalar @$list1;\n    while($i < $len) {\n        $j = $i + 1;\n        while($j < $len && $list1->[$i] == $list1->[$j]) {\n            $j++;\n        }\n        $list2[$k] = [@$list1[$i..$j-1]];\n        $i = $j;\n        $k++;\n    }\n    return @list2;\n}",
    "    my @list2;\n    my $i = 0;\n    my $j = 0;\n    while($i < scalar @$list1){\n        if($i == 0){\n            $list2[$j][0] = $list1->[$i];\n            $i++;\n        }\n        elsif($list1->[$i] == $list1->[$i-1]){\n            $list2[$j][$i-$j] = $list1->[$i];\n            $i++;\n        }\n        else{\n            $j = $i;\n            $list2[$j][0] = $list1->[$i];\n            $i++;\n        }\n    }\n    return @list2;\n}",
    "    my @list2;\n    my $i = 0;\n    my $j = 0;\n    while($i < scalar @$list1) {\n        $list2[$j] = [];\n        while($i < scalar @$list1 && $list1->[$i] eq $list1->[$i+1]) {\n            push @{$list2[$j]}, $list1->[$i];\n            $i++;\n        }\n        push @{$list2[$j]}, $list1->[$i];\n        $i++;\n        $j++;\n    }\n    return \\@list2;\n}",
    "    my @list2;\n    my $i = 0;\n    while ($i < scalar(@$list1)) {\n        my @sublist;\n        push @sublist, $list1->[$i];\n        while ($i < scalar(@$list1) - 1 and $list1->[$i] == $list1->[$i+1]) {\n            push @sublist, $list1->[$i+1];\n            $i++;\n        }\n        push @list2, \\@sublist;\n        $i++;\n    }\n    return \\@list2;\n}",
    "    my @list2;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $flag = 0;\n    my $len = scalar(@$list1);\n    while($i < $len) {\n        $j = $i + 1;\n        $flag = 0;\n        while($j < $len) {\n            if($list1->[$i] eq $list1->[$j]) {\n                $j++;\n                $flag = 1;\n            }\n            else {\n                last;\n            }\n        }\n        if($flag == 1) {\n            $list2[$k] = [@$list1[$i .. $j - 1]];\n            $k++;\n        }\n        else {\n            $list2[$k] = $list1->[$i];\n            $k++;\n        }\n        $i = $j;\n    }\n    return @list2;\n}",
    "    my @list2;\n    my $i = 0;\n    my $j = 0;\n    while ($i < scalar @$list1) {\n        my $temp = $list1->[$i];\n        while ($i < scalar @$list1 && $list1->[$i] eq $temp) {\n            $i++;\n        }\n        $list2[$j++] = [$temp, $i - $j];\n    }\n    return \\@list2;\n}",
    "    my @list2;\n    my $i = 0;\n    while($i < scalar(@$list1)) {\n        my $j = $i + 1;\n        while($j < scalar(@$list1) && $list1->[$i] eq $list1->[$j]) {\n            $j++;\n        }\n        push @list2, [@$list1[$i..$j-1]];\n        $i = $j;\n    }\n    return \\@list2;\n}",
    "    my @list1 = @$list1;\n    my @list2;\n    my $i = 0;\n    while ($i < @list1) {\n        my $j = $i + 1;\n        while ($j < @list1 && $list1[$i] eq $list1[$j]) {\n            $j++;\n        }\n        push @list2, [@list1[$i..$j-1]];\n        $i = $j;\n    }\n    return \\@list2;\n}",
    "    my $list2 = [];\n    my $i = 0;\n    my $j = 0;\n    while ($i < scalar @$list1) {\n        if ($i == 0) {\n            $list2->[$j] = [$list1->[$i]];\n        }\n        elsif ($list1->[$i] eq $list1->[$i-1]) {\n            push @{$list2->[$j]}, $list1->[$i];\n        }\n        else {\n            $j++;\n            $list2->[$j] = [$list1->[$i]];\n        }\n        $i++;\n    }\n    return $list2;\n}",
    "    my @list2;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $temp;\n    my $temp2;\n    my $temp3;\n    my $temp4;\n    my $temp5;\n    my $temp6;\n    my $temp7;\n    my $temp8;\n    my $temp9;\n    my $temp10;\n    my $temp11;\n    my $temp12;\n    my $temp13;\n    my $temp14;\n    my $temp15;\n    my $temp16;\n    my $temp17;\n    my $temp18;\n    my $temp19;\n    my $temp20;\n    my $temp21;\n    my $temp22;\n    my $temp23;\n    my $temp24;\n    my $temp25;\n    my $temp26;\n    my $temp27;\n    my $temp28;\n    my $temp29;\n    my $temp30;\n    my $temp31;\n    my $temp32;\n    my $temp33;\n    my $temp34;\n    my $temp35;\n    my $temp36;\n    my $temp37;\n    my $temp38;\n    my $temp39;\n    my $temp40;\n    my $temp41;\n    my $temp42;\n    my $temp43;\n    my $temp44;\n    my $temp45;\n    my $temp46;\n    my $temp47;\n    my $temp48;\n    my $temp49;\n    my $temp50;\n    my $temp51;\n    my $temp52;\n    my $temp53;\n    my $temp54;\n    my $temp55;\n    my $temp56;\n    my $temp57;\n    my $temp58;\n    my $temp59;\n    my $temp60;\n    my $temp61;\n    my $temp62;\n    my $temp63;\n    my $temp64;\n    my $temp65;\n    my $temp66;\n    my $temp67;\n    my $temp68;\n    my $temp69",
    "    my @list2 = ();\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $count = 0;\n    my $flag = 0;\n    my $temp = 0;\n    my $temp1 = 0;\n    my $temp2 = 0;\n    my $temp3 = 0;\n    my $temp4 = 0;\n    my $temp5 = 0;\n    my $temp6 = 0;\n    my $temp7 = 0;\n    my $temp8 = 0;\n    my $temp9 = 0;\n    my $temp10 = 0;\n    my $temp11 = 0;\n    my $temp12 = 0;\n    my $temp13 = 0;\n    my $temp14 = 0;\n    my $temp15 = 0;\n    my $temp16 = 0;\n    my $temp17 = 0;\n    my $temp18 = 0;\n    my $temp19 = 0;\n    my $temp20 = 0;\n    my $temp21 = 0;\n    my $temp22 = 0;\n    my $temp23 = 0;\n    my $temp24 = 0;\n    my $temp25 = 0;\n    my $temp26 = 0;\n    my $temp27 = 0;\n    my $temp28 = 0;\n    my $temp29 = 0;\n    my $temp30 = 0;\n    my $temp31 = 0;\n    my $temp32 = 0;\n    my $temp33 = 0;\n    my $temp34 = 0;\n    my $temp35 = 0;\n    my $temp36 = 0;\n    my $temp37 = 0;\n    my $temp38 = 0;\n    my $temp39 = 0;\n    my $temp40 = 0;\n    my $temp41 = 0;\n    my $temp42 = 0;\n    my $temp43 = 0;\n    my $temp44 = 0;\n    my $temp45 = 0;\n    my $temp46 = 0;\n    my $temp47 = 0;\n    my $temp48 = 0;\n    my $temp49 = 0;\n    my $temp50 = 0;\n    my $temp51",
    "    my $list2 = [];\n    my $i = 0;\n    while ($i < @$list1) {\n        my $j = $i + 1;\n        while ($j < @$list1 && $list1->[$i] eq $list1->[$j]) {\n            $j++;\n        }\n        push @$list2, [@$list1[$i..$j-1]];\n        $i = $j;\n    }\n    return $list2;\n}",
    "    my $list2 = [];\n    my $i = 0;\n    my $j = 0;\n    while ($i < scalar(@$list1)) {\n        if ($i == scalar(@$list1) - 1) {\n            $list2->[$j] = [$list1->[$i]];\n            $i++;\n            $j++;\n        } elsif ($list1->[$i] == $list1->[$i+1]) {\n            $list2->[$j] = [$list1->[$i]];\n            $i++;\n        } else {\n            $list2->[$j] = [$list1->[$i]];\n            $i++;\n            $j++;\n        }\n    }\n    return $list2;\n}",
    "    my @list2 = ();\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $count = 0;\n    my $flag = 0;\n    my $temp = 0;\n    my $temp1 = 0;\n    my $temp2 = 0;\n    my $temp3 = 0;\n    my $temp4 = 0;\n    my $temp5 = 0;\n    my $temp6 = 0;\n    my $temp7 = 0;\n    my $temp8 = 0;\n    my $temp9 = 0;\n    my $temp10 = 0;\n    my $temp11 = 0;\n    my $temp12 = 0;\n    my $temp13 = 0;\n    my $temp14 = 0;\n    my $temp15 = 0;\n    my $temp16 = 0;\n    my $temp17 = 0;\n    my $temp18 = 0;\n    my $temp19 = 0;\n    my $temp20 = 0;\n    my $temp21 = 0;\n    my $temp22 = 0;\n    my $temp23 = 0;\n    my $temp24 = 0;\n    my $temp25 = 0;\n    my $temp26 = 0;\n    my $temp27 = 0;\n    my $temp28 = 0;\n    my $temp29 = 0;\n    my $temp30 = 0;\n    my $temp31 = 0;\n    my $temp32 = 0;\n    my $temp33 = 0;\n    my $temp34 = 0;\n    my $temp35 = 0;\n    my $temp36 = 0;\n    my $temp37 = 0;\n    my $temp38 = 0;\n    my $temp39 = 0;\n    my $temp40 = 0;\n    my $temp41 = 0;\n    my $temp42 = 0;\n    my $temp43 = 0;\n    my $temp44 = 0;\n    my $temp45 = 0;\n    my $temp46 = 0;\n    my $temp47 = 0;\n    my $temp48 = 0;\n    my $temp49 = 0;\n    my $temp50 = 0;\n    my $temp51",
    "    my @list2;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $count = 0;\n    my $flag = 0;\n    my $temp = 0;\n    my $temp1 = 0;\n    my $temp2 = 0;\n    my $temp3 = 0;\n    my $temp4 = 0;\n    my $temp5 = 0;\n    my $temp6 = 0;\n    my $temp7 = 0;\n    my $temp8 = 0;\n    my $temp9 = 0;\n    my $temp10 = 0;\n    my $temp11 = 0;\n    my $temp12 = 0;\n    my $temp13 = 0;\n    my $temp14 = 0;\n    my $temp15 = 0;\n    my $temp16 = 0;\n    my $temp17 = 0;\n    my $temp18 = 0;\n    my $temp19 = 0;\n    my $temp20 = 0;\n    my $temp21 = 0;\n    my $temp22 = 0;\n    my $temp23 = 0;\n    my $temp24 = 0;\n    my $temp25 = 0;\n    my $temp26 = 0;\n    my $temp27 = 0;\n    my $temp28 = 0;\n    my $temp29 = 0;\n    my $temp30 = 0;\n    my $temp31 = 0;\n    my $temp32 = 0;\n    my $temp33 = 0;\n    my $temp34 = 0;\n    my $temp35 = 0;\n    my $temp36 = 0;\n    my $temp37 = 0;\n    my $temp38 = 0;\n    my $temp39 = 0;\n    my $temp40 = 0;\n    my $temp41 = 0;\n    my $temp42 = 0;\n    my $temp43 = 0;\n    my $temp44 = 0;\n    my $temp45 = 0;\n    my $temp46 = 0;\n    my $temp47 = 0;\n    my $temp48 = 0;\n    my $temp49 = 0;\n    my $temp50 = 0;\n    my $temp51 =",
    "    my @list2;\n    my $i = 0;\n    my $j = 0;\n    while ($i < scalar @{$list1}) {\n        if ($i == 0) {\n            $list2[$j][0] = $list1->[$i];\n            $i++;\n        }\n        elsif ($list1->[$i] == $list1->[$i-1]) {\n            push @{$list2[$j]}, $list1->[$i];\n            $i++;\n        }\n        else {\n            $j++;\n            $list2[$j][0] = $list1->[$i];\n            $i++;\n        }\n    }\n    return @list2;\n}",
    "    my @list2;\n    my $i = 0;\n    my $j = 0;\n    while ($i < scalar(@$list1)) {\n        my $count = 1;\n        my $element = $list1->[$i];\n        while ($i + $count < scalar(@$list1) and $list1->[$i + $count] eq $element) {\n            $count++;\n        }\n        $list2[$j] = [$element, $count];\n        $i += $count;\n        $j++;\n    }\n    return \\@list2;\n}",
    "    my @list2;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $count = 0;\n    my $flag = 0;\n    my $temp = 0;\n    my $temp1 = 0;\n    my $temp2 = 0;\n    my $temp3 = 0;\n    my $temp4 = 0;\n    my $temp5 = 0;\n    my $temp6 = 0;\n    my $temp7 = 0;\n    my $temp8 = 0;\n    my $temp9 = 0;\n    my $temp10 = 0;\n    my $temp11 = 0;\n    my $temp12 = 0;\n    my $temp13 = 0;\n    my $temp14 = 0;\n    my $temp15 = 0;\n    my $temp16 = 0;\n    my $temp17 = 0;\n    my $temp18 = 0;\n    my $temp19 = 0;\n    my $temp20 = 0;\n    my $temp21 = 0;\n    my $temp22 = 0;\n    my $temp23 = 0;\n    my $temp24 = 0;\n    my $temp25 = 0;\n    my $temp26 = 0;\n    my $temp27 = 0;\n    my $temp28 = 0;\n    my $temp29 = 0;\n    my $temp30 = 0;\n    my $temp31 = 0;\n    my $temp32 = 0;\n    my $temp33 = 0;\n    my $temp34 = 0;\n    my $temp35 = 0;\n    my $temp36 = 0;\n    my $temp37 = 0;\n    my $temp38 = 0;\n    my $temp39 = 0;\n    my $temp40 = 0;\n    my $temp41 = 0;\n    my $temp42 = 0;\n    my $temp43 = 0;\n    my $temp44 = 0;\n    my $temp45 = 0;\n    my $temp46 = 0;\n    my $temp47 = 0;\n    my $temp48 = 0;\n    my $temp49 = 0;\n    my $temp50 = 0;\n    my $temp51 ="
  ]
}
{
  "name": "mbpp_770_odd_num_sum",
  "language": "pl",
  "prompt": "# Write a python function to find the sum of fourth power of first n odd natural numbers.\nsub odd_num_sum {\n    my($n) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_770_odd_num_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&odd_num_sum;\n        if(eq_deeply($candidate->(2),82)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(3),707)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(4),3108)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $sum = 0;\n    for(my $i = 1; $i <= $n; $i++) {\n        if($i % 2 != 0) {\n            $sum += $i ** 4;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for(my $i = 1; $i <= $n; $i++) {\n        if($i % 2 != 0) {\n            $sum = $sum + ($i ** 4);\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for(my $i = 1; $i <= $n; $i++) {\n        $sum += ($i * $i * $i * $i);\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for(my $i=1;$i<=$n;$i++) {\n        if($i%2 != 0) {\n            $sum = $sum + ($i**4);\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for(my $i = 1; $i <= $n; $i++) {\n        $sum = $sum + ($i ** 4);\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for (my $i = 1; $i <= $n; $i++) {\n        $sum += $i**4;\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for(my $i = 1; $i <= $n; $i++) {\n        $sum += $i**4;\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for(my $i = 1; $i <= $n; $i++) {\n        $sum += $i**4;\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for(my $i = 1; $i <= $n; $i++) {\n        if($i % 2 != 0) {\n            $sum += $i ** 4;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for(my $i = 1; $i <= $n; $i++){\n        $sum += $i**4;\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for(my $i = 1; $i <= $n; $i++) {\n        $sum += $i**4;\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for(my $i = 1; $i <= $n; $i++) {\n        $sum += $i**4;\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for (my $i = 1; $i <= $n; $i++) {\n        if ($i % 2 != 0) {\n            $sum += $i**4;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for(my $i = 1; $i <= $n; $i++) {\n        if($i % 2 != 0) {\n            $sum += $i ** 4;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for(my $i = 1; $i <= $n; $i++) {\n        $sum += $i**4;\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for(my $i=1;$i<=$n;$i++) {\n        $sum = $sum + $i**4;\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for(my $i = 1; $i <= $n; $i++) {\n        $sum += $i**4;\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for(my $i = 1; $i <= $n; $i++) {\n        if($i % 2 != 0) {\n            $sum += $i**4;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for(my $i=1; $i<=$n; $i++) {\n        $sum += $i**4;\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for(my $i = 1; $i <= $n; $i++) {\n        $sum += ($i * 2 - 1) ** 4;\n    }\n    return $sum;\n}"
  ]
}
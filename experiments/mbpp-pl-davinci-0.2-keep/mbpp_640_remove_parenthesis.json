{
  "name": "mbpp_640_remove_parenthesis",
  "language": "pl",
  "prompt": "# Write a function to remove the parenthesis and what is inbetween them from a string.\nsub remove_parenthesis {\n    my($items) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_640_remove_parenthesis.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&remove_parenthesis;\n        if(eq_deeply($candidate->([\"python (chrome)\"]),\"python\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"string(.abc)\"]),\"string\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"alpha(num)\"]),\"alpha\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    my @items = @$items;\n    my @new_items;\n    foreach my $item (@items) {\n        $item =~ s/\\(.*?\\)//g;\n        push @new_items, $item;\n    }\n    return \\@new_items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    my($item);\n    my(@items) = split(/\\s+/, $items);\n    my(@new_items);\n    foreach $item (@items) {\n\tif ($item =~ /^\\((.*)\\)$/) {\n\t    push(@new_items, $1);\n\t} else {\n\t    push(@new_items, $item);\n\t}\n    }\n    return join(\" \", @new_items);\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*\\)//;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    my $new_items = $items;\n    $new_items =~ s/\\(.*?\\)//g;\n    return $new_items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    my $result = '';\n    my $in_parenthesis = 0;\n    foreach my $item (split(//, $items)) {\n        if ($item eq '(') {\n            $in_parenthesis = 1;\n        }\n        elsif ($item eq ')') {\n            $in_parenthesis = 0;\n        }\n        elsif (!$in_parenthesis) {\n            $result .= $item;\n        }\n    }\n    return $result;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\([^\\)]*\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    my $new_items = $items;\n    $new_items =~ s/\\(.*?\\)//g;\n    return $new_items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    my $result = $items;\n    $result =~ s/\\(.*?\\)//g;\n    return $result;\n}",
    "    my $new_items = \"\";\n    my $in_paren = 0;\n    foreach my $item (split(//, $items)) {\n        if ($item eq \"(\") {\n            $in_paren = 1;\n        } elsif ($item eq \")\") {\n            $in_paren = 0;\n        } else {\n            $new_items .= $item if (!$in_paren);\n        }\n    }\n    return $new_items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    my $new_items = \"\";\n    my $in_paren = 0;\n    for (my $i = 0; $i < length($items); $i++) {\n\tmy $c = substr($items, $i, 1);\n\tif ($c eq \"(\") {\n\t    $in_paren = 1;\n\t} elsif ($c eq \")\") {\n\t    $in_paren = 0;\n\t} elsif ($in_paren == 0) {\n\t    $new_items .= $c;\n\t}\n    }\n    return $new_items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    my $new_items = '';\n    my $in_parenthesis = 0;\n    foreach my $item (split(//, $items)) {\n        if ($item eq '(') {\n            $in_parenthesis = 1;\n        } elsif ($item eq ')') {\n            $in_parenthesis = 0;\n        } else {\n            $new_items .= $item unless $in_parenthesis;\n        }\n    }\n    return $new_items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    my $new_items = \"\";\n    my $in_paren = 0;\n    foreach my $item (split(//, $items)) {\n        if ($item eq \"(\") {\n            $in_paren = 1;\n        } elsif ($item eq \")\") {\n            $in_paren = 0;\n        } else {\n            if ($in_paren == 0) {\n                $new_items .= $item;\n            }\n        }\n    }\n    return $new_items;\n}",
    "    $items =~ s/\\(.*\\)//g;\n    return $items;\n}",
    "    my $result = $items;\n    $result =~ s/\\(.*?\\)//g;\n    return $result;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    my $new_items = $items;\n    $new_items =~ s/\\([^\\)]*\\)//g;\n    return $new_items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    my($item);\n    my($new_items) = \"\";\n    my($in_parenthesis) = 0;\n    foreach $item (split(//, $items)) {\n        if ($item eq \"(\") {\n            $in_parenthesis = 1;\n        } elsif ($item eq \")\") {\n            $in_parenthesis = 0;\n        } elsif (!$in_parenthesis) {\n            $new_items .= $item;\n        }\n    }\n    return $new_items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    my $new_items = $items;\n    $new_items =~ s/\\(.*?\\)//g;\n    return $new_items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    my $new_items = $items;\n    $new_items =~ s/\\(.*?\\)//g;\n    return $new_items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    my($item);\n    foreach $item (@$items) {\n        $item =~ s/\\(.*\\)//g;\n    }\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\([^\\)]*\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    my $new_items = \"\";\n    my $in_paren = 0;\n    foreach my $item (split(/\\s+/, $items)) {\n        if ($item =~ /^\\(/) {\n            $in_paren = 1;\n        }\n        if ($in_paren == 0) {\n            $new_items .= \"$item \";\n        }\n        if ($item =~ /\\)$/) {\n            $in_paren = 0;\n        }\n    }\n    return $new_items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\s*\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\([^\\)]*\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}"
  ]
}
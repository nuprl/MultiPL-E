{
  "name": "mbpp_746_sector_area",
  "language": "pl",
  "prompt": "# Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nsub sector_area {\n    my($r, $a) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_746_sector_area.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sector_area;\n        if(eq_deeply($candidate->(4, 45),6.283185307179586)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(9, 45),31.808625617596654)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(9, 361),undef)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    if ($a > 360) {\n        return undef;\n    }\n    return ($r**2 * $a)/360;\n}",
    "    if ($a > 360) {\n        return;\n    }\n    return $r * $r * $a / 2;\n}",
    "    return undef if $a > 360;\n    return ($r**2 * $a)/360;\n}",
    "    if ($a > 360) {\n        return undef;\n    }\n    return $r * $r * $a * $PI / 360;\n}",
    "    return unless $a <= 360;\n    return $r * $r * $a / 360;\n}",
    "    if($a > 360) {\n        return undef;\n    }\n    else {\n        return ($r**2 * $a * pi) / 360;\n    }\n}",
    "    return undef if $a > 360;\n    return ($r**2 * $a * $PI)/360;\n}",
    "    if ($a > 360) {\n        return undef;\n    }\n    return ($r ** 2) * ($a / 360) * $pi;\n}",
    "    if ($a > 360) {\n        return;\n    }\n    return ($r**2 * $a * 3.14159) / 360;\n}",
    "    if ($a > 360) {\n        return undef;\n    }\n    return ($r ** 2) * ($a / 360) * $pi;\n}",
    "    if($a > 360) {\n        return undef;\n    }\n    return ($r**2 * $a)/360;\n}",
    "    if($a > 360) {\n        return undef;\n    }\n    return ($r**2)*($a/360)*(3.14);\n}",
    "    return if $a > 360;\n    return $r * $r * $a / 2;\n}",
    "    if ($a > 360) {\n        return undef;\n    }\n    return ($r * $r * $a * 3.14) / 360;\n}",
    "    return undef if $a > 360;\n    return $r**2 * $a * $pi / 360;\n}",
    "    return undef if $a > 360;\n    return ($a/360)*3.14*$r*$r;\n}",
    "    return if $a > 360;\n    return $r * $r * $a * $PI / 360;\n}",
    "    return unless $a <= 360;\n    return $r**2 * $a / 360;\n}",
    "    if($a > 360) {\n        return undef;\n    }\n    return ($r**2 * $a)/360;\n}",
    "    return undef if $a > 360;\n    return $r * $r * $a / 2;\n}"
  ]
}
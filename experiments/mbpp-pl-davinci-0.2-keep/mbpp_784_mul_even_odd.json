{
  "name": "mbpp_784_mul_even_odd",
  "language": "pl",
  "prompt": "# Write a function to find the product of first even and odd number of a given list.\nsub mul_even_odd {\n    my($list1) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_784_mul_even_odd.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mul_even_odd;\n        if(eq_deeply($candidate->([1, 3, 5, 7, 4, 1, 6, 8]),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 5, 7, 9, 10]),10)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $even = 0;\n    my $odd = 0;\n    my $product = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even = $num;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd = $num;\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $product = 0;\n    foreach my $num (@$list1) {\n        if ($count == 0) {\n            $even = $num;\n            $count++;\n        }\n        elsif ($count == 1) {\n            $odd = $num;\n            $count++;\n        }\n        else {\n            $count++;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $mul = 0;\n    foreach $i (@$list1){\n        if($i%2 == 0){\n            $even = $i;\n            last;\n        }\n    }\n    foreach $j (@$list1){\n        if($j%2 != 0){\n            $odd = $j;\n            last;\n        }\n    }\n    $mul = $even * $odd;\n    return $mul;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $flag = 0;\n    my $flag1 = 0;\n    my $prod = 0;\n    foreach my $num(@$list1) {\n        if($num % 2 == 0 && $flag == 0) {\n            $even_num = $num;\n            $flag = 1;\n        }\n        if($num % 2 != 0 && $flag1 == 0) {\n            $odd_num = $num;\n            $flag1 = 1;\n        }\n    }\n    $prod = $even_num * $odd_num;\n    return $prod;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $mul = 0;\n    while ($i < scalar @$list1) {\n        if ($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            $i++;\n            last;\n        }\n        $i++;\n    }\n    while ($j < scalar @$list1) {\n        if ($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            $j++;\n            last;\n        }\n        $j++;\n    }\n    $mul = $even * $odd;\n    return $mul;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $count = 0;\n    my $count1 = 0;\n    my $product = 0;\n    foreach my $i (@$list1) {\n        if ($i % 2 == 0) {\n            $even = $i;\n            $count = 1;\n            last;\n        }\n    }\n    foreach my $j (@$list1) {\n        if ($j % 2 != 0) {\n            $odd = $j;\n            $count1 = 1;\n            last;\n        }\n    }\n    if ($count == 1 && $count1 == 1) {\n        $product = $even * $odd;\n    }\n    else {\n        $product = 0;\n    }\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $product = 0;\n    foreach my $i (@$list1) {\n        if($count == 0) {\n            $even = $i;\n            $count++;\n        }\n        elsif($count == 1) {\n            $odd = $i;\n            $count++;\n        }\n        else {\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $count = 0;\n    my $count1 = 0;\n    my $product = 0;\n    foreach my $i (@$list1) {\n        if ($i % 2 == 0) {\n            $even = $i;\n            $count++;\n            last;\n        }\n    }\n    foreach my $j (@$list1) {\n        if ($j % 2 != 0) {\n            $odd = $j;\n            $count1++;\n            last;\n        }\n    }\n    if ($count == 0 || $count1 == 0) {\n        print \"0\";\n    }\n    else {\n        $product = $even * $odd;\n        print \"$product\\n\";\n    }\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    foreach my $num (@$list1) {\n        if ($count == 0) {\n            $even = $num;\n            $count++;\n        } elsif ($count == 1) {\n            $odd = $num;\n            $count++;\n        }\n    }\n    return $even * $odd;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    while ($i < @$list1) {\n        if ($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            $i++;\n            last;\n        }\n        $i++;\n    }\n    while ($j < @$list1) {\n        if ($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            $j++;\n            last;\n        }\n        $j++;\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $product = 0;\n    foreach my $num (@$list1) {\n        if($num % 2 == 0) {\n            if($count == 0) {\n                $even = $num;\n                $count++;\n            }\n        }\n        else {\n            if($count == 1) {\n                $odd = $num;\n                $count++;\n            }\n        }\n    }\n    if($even != 0 && $odd != 0) {\n        $product = $even * $odd;\n    }\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    foreach my $num (@$list1) {\n        if ($i == 0) {\n            $even = $num;\n        } elsif ($i == 1) {\n            $odd = $num;\n            last;\n        }\n        $i++;\n    }\n    return $even * $odd;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i1 = 0;\n    my $j1 = 0;\n    my $k1 = 0;\n    my $l1 = 0;\n    my $m1 = 0;\n    my $n1 = 0;\n    my $o1 = 0;\n    my $p1 = 0;\n    my $q1 = 0;\n    my $r1 = 0;\n    my $s1 = 0;\n    my $t1 = 0;\n    my $u1 = 0;\n    my $v1 = 0;\n    my $w1 = 0;\n    my $x1 = 0;\n    my $y1 = 0;\n    my $z1 = 0;\n    my $a1 = 0;\n    my $b1 = 0;\n    my $c1 = 0;\n    my $d1 = 0;\n    my $e1 = 0;\n    my $f1 = 0;\n    my $g1 = 0;\n    my $h1 = 0;\n    my $i2 = 0;\n    my $j2 = 0;\n    my $k2 = 0;\n    my $l2 = 0;\n    my $m2 = 0;\n    my $n2 = 0;",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    foreach my $i (@$list1) {\n        if ($count == 0) {\n            $even = $i;\n            $count++;\n        }\n        elsif ($count == 1) {\n            $odd = $i;\n            $count++;\n        }\n        else {\n            last;\n        }\n    }\n    return $even * $odd;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $prod = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even = $num;\n            $count++;\n        }\n        if ($num % 2 != 0) {\n            $odd = $num;\n            $count++;\n        }\n        if ($count == 2) {\n            $prod = $even * $odd;\n            last;\n        }\n    }\n    return $prod;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $mul = 0;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            $k = $i;\n            last;\n        }\n    }\n    for($j = $k + 1; $j < scalar(@$list1); $j++) {\n        if($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            last;\n        }\n    }\n    $mul = $even * $odd;\n    return $mul;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    foreach my $i (@$list1) {\n        if ($count == 0) {\n            $even = $i;\n        }\n        elsif ($count == 1) {\n            $odd = $i;\n        }\n        $count++;\n    }\n    return $even * $odd;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even = $num;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd = $num;\n            last;\n        }\n    }\n    return $even * $odd;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i1 = 0;\n    my $j1 = 0;\n    my $k1 = 0;\n    my $l1 = 0;\n    my $m1 = 0;\n    my $n1 = 0;\n    my $o1 = 0;\n    my $p1 = 0;\n    my $q1 = 0;\n    my $r1 = 0;\n    my $s1 = 0;\n    my $t1 = 0;\n    my $u1 = 0;\n    my $v1 = 0;\n    my $w1 = 0;\n    my $x1 = 0;\n    my $y1 = 0;\n    my $z1 = 0;\n    my $a1 = 0;\n    my $b1 = 0;\n    my $c1 = 0;\n    my $d1 = 0;\n    my $e1 = 0;\n    my $f1 = 0;\n    my $g1 = 0;\n    my $h1 = 0;\n    my $i2 = 0;\n    my $j2 = 0;\n    my $k2 = 0;\n    my $l2 = 0;\n    my $m2 = 0;\n    my $n2 = 0;",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@$list1); $j++) {\n        if($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}"
  ]
}
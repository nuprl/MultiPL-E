{
  "name": "mbpp_71_comb_sort",
  "language": "pl",
  "prompt": "# Write a function to sort a list of elements.\nsub comb_sort {\n    my($nums) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_71_comb_sort.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&comb_sort;\n        if(eq_deeply($candidate->([5, 15, 37, 25, 79]),[5, 15, 25, 37, 79])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([41, 32, 15, 19, 22]),[15, 19, 22, 32, 41])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([99, 15, 13, 47]),[13, 15, 47, 99])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / $shrink);\n        $gap = 1 if $gap < 1;\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / 1.3);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my($gap) = scalar(@$nums);\n    my($shrink) = 1.3;\n    my($swapped) = 1;\n    while($gap > 1 || $swapped) {\n        if($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for(my($i) = 0; $i + $gap < scalar(@$nums); $i++) {\n            if($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                ($nums->[$i], $nums->[$i + $gap]) = ($nums->[$i + $gap], $nums->[$i]);\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my($gap) = scalar(@$nums);\n    my($shrink) = 1.3;\n    my($swapped) = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my($i) = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $swap = 1;\n    while ($gap > 1 || $swap) {\n        $gap = int($gap / 1.3);\n        $gap = 1 if $gap < 1;\n        $swap = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swap = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / 1.3);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / 1.3);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n    return $nums;\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / $shrink);\n        $gap = 1 if $gap < 1;\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / 1.3);\n        $gap = 1 if $gap == 0;\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / $shrink);\n        $gap = 1 if $gap < 1;\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / $shrink);\n        $gap = 1 if $gap < 1;\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my($gap) = scalar(@$nums);\n    my($shrink) = 1.3;\n    my($swapped) = 1;\n    while($gap > 1 || $swapped) {\n        $gap = int($gap / $shrink);\n        $gap = 1 if $gap < 1;\n        $swapped = 0;\n        for(my($i) = 0; $i + $gap < scalar(@$nums); $i++) {\n            if($nums->[$i] > $nums->[$i + $gap]) {\n                ($nums->[$i], $nums->[$i + $gap]) = ($nums->[$i + $gap], $nums->[$i]);\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / $shrink);\n        $gap = 1 if $gap < 1;\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / $shrink);\n        $gap = 1 if $gap < 1;\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n    return $nums;\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / $shrink);\n        $gap = 1 if $gap < 1;\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n    return $nums;\n}",
    "    my $gap = scalar(@$nums);\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / 1.25);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                ($nums->[$i], $nums->[$i + $gap]) = ($nums->[$i + $gap], $nums->[$i]);\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / $shrink);\n        $gap = 1 if $gap < 1;\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / 1.3);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / $shrink);\n        $gap = 1 if $gap < 1;\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n    return $nums;\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / 1.3);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swap = 1;\n    while ($gap > 1 || $swap) {\n        $gap = int($gap / $shrink);\n        $gap = 1 if $gap < 1;\n        $swap = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swap = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / $shrink);\n        $gap = 1 if $gap < 1;\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                my $tmp = $nums->[$i];\n                $nums->[$i] = $nums->[$i + $gap];\n                $nums->[$i + $gap] = $tmp;\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / 1.3);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / 1.3);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                ($nums->[$i], $nums->[$i + $gap]) = ($nums->[$i + $gap], $nums->[$i]);\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / 1.3);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); ++$i) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / 1.3);\n        $gap = 1 if $gap == 0;\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                my $tmp = $nums->[$i];\n                $nums->[$i] = $nums->[$i + $gap];\n                $nums->[$i + $gap] = $tmp;\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / $shrink);\n        $gap = 1 if $gap < 1;\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = $#$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap <= $#$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my($gap) = $#$nums;\n    my($shrink) = 1.3;\n    my($swapped) = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my($i) = 0; $i + $gap <= $#$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n    return $nums;\n}",
    "    my $gap = scalar(@$nums);\n    my $swap = 1;\n    while ($gap > 1 || $swap) {\n        $gap = int($gap / 1.3);\n        $gap = 1 if $gap < 1;\n        $swap = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swap = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / 1.3);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n    return $nums;\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n    return $nums;\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / $shrink);\n        $gap = 1 if $gap < 1;\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / 1.3);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / 1.3);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n    return $nums;\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                ($nums->[$i], $nums->[$i + $gap]) = ($nums->[$i + $gap], $nums->[$i]);\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / 1.3);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / $shrink);\n        $gap = 1 if ($gap < 1);\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my($gap) = scalar(@$nums);\n    my($shrink) = 1.3;\n    my($swapped) = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my($i) = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n    return $nums;\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / 1.25);\n        $gap = 1 if $gap == 0;\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / $shrink);\n        $gap = 1 if $gap < 1;\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / 1.3);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / 1.3);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my($gap) = @$nums;\n    my($swapped) = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / 1.3);\n        }\n        $swapped = 0;\n        for (my($i) = 0; $i + $gap < @$nums; ++$i) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / 1.3);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                ($nums->[$i], $nums->[$i + $gap]) = ($nums->[$i + $gap], $nums->[$i]);\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                ($nums->[$i], $nums->[$i + $gap]) = ($nums->[$i + $gap], $nums->[$i]);\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / $shrink);\n        $gap = 1 if $gap < 1;\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                ($nums->[$i], $nums->[$i + $gap]) = ($nums->[$i + $gap], $nums->[$i]);\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / $shrink);\n        $gap = 1 if $gap < 1;\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / 1.3);\n        $gap = 1 if $gap == 0;\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                ($nums->[$i], $nums->[$i + $gap]) = ($nums->[$i + $gap], $nums->[$i]);\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / 1.3);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / 1.3);\n        $gap = 1 if $gap < 1;\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / 1.3);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / $shrink);\n        $gap = 1 if $gap < 1;\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $swapped = 1;\n    my $shrink = 1.3;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my($gap) = scalar(@$nums);\n    my($shrink) = 1.3;\n    my($swapped) = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my($i) = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / $shrink);\n        $gap = 1 if $gap < 1;\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / 1.3);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / 1.3);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                ($nums->[$i], $nums->[$i + $gap]) = ($nums->[$i + $gap], $nums->[$i]);\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                ($nums->[$i], $nums->[$i + $gap]) = ($nums->[$i + $gap], $nums->[$i]);\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / 1.3);\n        $gap = 1 if $gap == 0;\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n    return $nums;\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / $shrink);\n        $gap = 1 if $gap < 1;\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / $shrink);\n        $gap = 1 if ($gap < 1);\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / $shrink);\n        $gap = 1 if $gap < 1;\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / 1.3);\n        $gap = 1 if $gap == 0;\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "\n    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / $shrink);\n        $gap = 1 if $gap < 1;\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink_factor = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink_factor);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "\n    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;",
    "    my $gap = scalar(@$nums);\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / 1.3);\n        $gap = 1 if $gap < 1;\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n    return $nums;\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n    return $nums;\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $swap = 1;\n    while ($gap > 1 || $swap) {\n        if ($gap > 1) {\n            $gap = int($gap / 1.3);\n        }\n        $swap = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swap = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $swap = 1;\n    while ($gap > 1 || $swap) {\n        $gap = int($gap / 1.3);\n        $gap = 1 if $gap < 1;\n        $swap = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swap = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / 1.3);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / 1.3);\n        $gap = 1 if $gap == 0;\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / 1.3);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n    return $nums;\n}",
    "    my $gap = @$nums;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / 1.3);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n    return $nums;\n}",
    "    my $gap = @$nums;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / 1.3);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / 1.3);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                ($nums->[$i], $nums->[$i + $gap]) = ($nums->[$i + $gap], $nums->[$i]);\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my($gap) = @$nums;\n    my($swapped) = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / 1.3);\n        }\n        $swapped = 0;\n        for (my($i) = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / 1.3);\n        $gap = 1 if $gap == 0;\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / 1.3);\n        $gap = 1 if $gap == 0;\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / 1.3);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $swap = 1;\n    while ($gap > 1 || $swap) {\n        $gap = int($gap / 1.3);\n        $gap = 1 if $gap == 0;\n        $swap = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swap = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / $shrink);\n        $gap = 1 if $gap < 1;\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                ($nums->[$i], $nums->[$i + $gap]) = ($nums->[$i + $gap], $nums->[$i]);\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $swap = 1;\n    while ($gap > 1 || $swap) {\n        $gap = int($gap / 1.3);\n        $gap = 1 if $gap == 0;\n        $swap = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swap = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        $gap = int($gap / 1.3);\n        $gap = 1 if $gap < 1;\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = scalar(@$nums);\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < scalar(@$nums); $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n}",
    "    my $gap = @$nums;\n    my $shrink = 1.3;\n    my $swapped = 1;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = int($gap / $shrink);\n        }\n        $swapped = 0;\n        for (my $i = 0; $i + $gap < @$nums; $i++) {\n            if ($nums->[$i] > $nums->[$i + $gap]) {\n                @$nums[$i, $i + $gap] = @$nums[$i + $gap, $i];\n                $swapped = 1;\n            }\n        }\n    }\n    return $nums;\n}"
  ]
}
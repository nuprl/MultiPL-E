{
  "name": "mbpp_253_count_integer",
  "language": "pl",
  "prompt": "# Write a python function that returns the number of integer elements in a given list.\nsub count_integer {\n    my($list1) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_253_count_integer.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&count_integer;\n        if(eq_deeply($candidate->([1, 2, \"abc\", 1.2]),2)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3]),3)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 1.2, 4, 5.1]),2)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $count = 0;\n    foreach my $i (@$list1) {\n        if($i =~ /^[+-]?\\d+$/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $i (@$list1) {\n        if($i =~ /^[0-9]+$/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $element (@$list1) {\n        if($element =~ /^[0-9]+$/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $i (@$list1) {\n        if($i =~ /^[0-9]+$/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $i (@$list1) {\n        if($i =~ /^[0-9]+$/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $i (@$list1) {\n        if($i =~ /^[+-]?\\d+$/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $i (@$list1) {\n        if($i =~ /^[+-]?\\d+$/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $i (@$list1) {\n        if($i =~ /^[0-9]+$/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $i (@$list1) {\n        if($i =~ /^\\d+$/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $i (@$list1) {\n        if ($i =~ /^[0-9]+$/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $element (@$list1) {\n        if ($element =~ /^[0-9]+$/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $i (@$list1) {\n        if ($i =~ /^[0-9]+$/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $i (@$list1) {\n        if($i =~ /^\\d+$/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $i (@$list1) {\n        if($i =~ /^[0-9]+$/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $i (@$list1) {\n        if ($i =~ /^\\d+$/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $i (@$list1) {\n        if($i =~ /^[0-9]+$/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $i (@$list1) {\n        if($i =~ /^\\d+$/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $i (@$list1) {\n        if ($i =~ /^\\d+$/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $i (@$list1) {\n        if($i =~ /^[0-9]+$/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $i (@$list1) {\n        if($i =~ /^[+-]?\\d+$/) {\n            $count++;\n        }\n    }\n    return $count;\n}"
  ]
}
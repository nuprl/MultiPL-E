{
  "name": "mbpp_59_is_octagonal",
  "language": "pl",
  "prompt": "# Write a function to find the nth octagonal number.\nsub is_octagonal {\n    my($n) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_59_is_octagonal.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&is_octagonal;\n        if(eq_deeply($candidate->(5),65)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),280)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15),645)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $x = (sqrt(24*$n+1)+1)/6;\n    return $x == int($x);\n}",
    "    my $x = (sqrt(24*$n + 1) + 1) / 6;\n    return $x == int($x);\n}",
    "    my $x = (sqrt(24*$n+1)+1)/6;\n    return $x == int($x);\n}",
    "    my $x = (sqrt(24*$n+1)+1)/6;\n    return $x == int($x);\n}",
    "    my $x = (sqrt(24 * $n + 1) + 1) / 6;\n    return $x == int($x);\n}",
    "    my $x = (sqrt(24*$n + 1) + 1) / 6;\n    return $x == int($x);\n}",
    "    my $x = (sqrt(24*$n + 1) + 1) / 6;\n    return $x == int($x);\n}",
    "    my $x = (sqrt(24*$n+1)+1)/6;\n    return $x == int($x);\n}",
    "    my $t = (sqrt(24*$n + 1) + 1) / 6;\n    return $t == int($t);\n}",
    "    my $x = (sqrt(24*$n+1)+1)/6;\n    return $x == int($x);\n}",
    "    my $x = (sqrt(8*$n+1) + 1) / 3;\n    return $x == int($x);\n}",
    "    my $x = (sqrt(24*$n+1)+1)/6;\n    return ($x == int($x));\n}",
    "    my $x = (sqrt(8*$n + 1) + 1)/3;\n    return $x == int($x);\n}",
    "    my $x = (sqrt(24*$n + 1) + 1) / 6;\n    return $x == int($x);\n}",
    "    my $x = (sqrt(1 + 24 * $n) + 1) / 6;\n    return $x == int($x);\n}",
    "    my $x = sqrt(1 + 24 * $n);\n    return ($x == int($x)) && ($x % 6 == 5);\n}",
    "    my $x = (sqrt(24*$n + 1) + 1) / 6;\n    return $x == int($x);\n}",
    "    my $x = (sqrt(24*$n+1)+1)/6;\n    return $x == int($x);\n}",
    "    my $x = (sqrt(24*$n+1)+1)/6;\n    return $x == int($x);\n}",
    "    my $x = (sqrt(24*$n + 1) + 1) / 6;\n    return $x == int($x);\n}"
  ]
}
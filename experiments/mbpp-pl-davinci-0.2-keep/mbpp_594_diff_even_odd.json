{
  "name": "mbpp_594_diff_even_odd",
  "language": "pl",
  "prompt": "# Write a function to find the difference of the first even and first odd number of a given list.\nsub diff_even_odd {\n    my($list1) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_594_diff_even_odd.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&diff_even_odd;\n        if(eq_deeply($candidate->([1, 3, 5, 7, 4, 1, 6, 8]),3)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 5, 7, 9, 10]),9)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $even = 0;\n    my $odd = 0;\n    my $diff = 0;\n    foreach my $i (@$list1) {\n        if ($i % 2 == 0) {\n            $even = $i;\n            last;\n        }\n    }\n    foreach my $i (@$list1) {\n        if ($i % 2 != 0) {\n            $odd = $i;\n            last;\n        }\n    }\n    $diff = $even - $odd;\n    return $diff;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $diff = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even = $num;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd = $num;\n            last;\n        }\n    }\n    $diff = $even - $odd;\n    return $diff;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    foreach my $i (@$list1) {\n        if ($i % 2 == 0) {\n            $even = $i;\n            last;\n        }\n    }\n    foreach my $i (@$list1) {\n        if ($i % 2 != 0) {\n            $odd = $i;\n            last;\n        }\n    }\n    return $even - $odd;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $diff = 0;\n    foreach my $i (@$list1) {\n        if ($i % 2 == 0) {\n            $even = $i;\n            last;\n        }\n    }\n    foreach my $i (@$list1) {\n        if ($i % 2 != 0) {\n            $odd = $i;\n            last;\n        }\n    }\n    $diff = $even - $odd;\n    return $diff;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $diff = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even = $num;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd = $num;\n            last;\n        }\n    }\n    $diff = $even - $odd;\n    return $diff;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $diff = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even = $num;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd = $num;\n            last;\n        }\n    }\n    $diff = $even - $odd;\n    return $diff;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    foreach my $i (@$list1) {\n        if ($i % 2 == 0) {\n            $even = $i;\n            last;\n        }\n    }\n    foreach my $i (@$list1) {\n        if ($i % 2 != 0) {\n            $odd = $i;\n            last;\n        }\n    }\n    return $even - $odd;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $diff = 0;\n    for(my $i=0; $i<@$list1; $i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            last;\n        }\n    }\n    for(my $i=0; $i<@$list1; $i++) {\n        if($list1->[$i] % 2 != 0) {\n            $odd = $list1->[$i];\n            last;\n        }\n    }\n    $diff = $even - $odd;\n    return $diff;\n}\nmy $list1 = [1,2,3,4,5,6,7,8,9];\nprint diff_even_odd($list1);",
    "    my $even = 0;\n    my $odd = 0;\n    my $diff = 0;\n    foreach my $i (@$list1) {\n        if ($i % 2 == 0) {\n            $even = $i;\n            last;\n        }\n    }\n    foreach my $i (@$list1) {\n        if ($i % 2 != 0) {\n            $odd = $i;\n            last;\n        }\n    }\n    $diff = $even - $odd;\n    return $diff;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $diff = 0;\n    foreach my $i (@$list1) {\n        if ($i % 2 == 0) {\n            $even = $i;\n            last;\n        }\n    }\n    foreach my $i (@$list1) {\n        if ($i % 2 != 0) {\n            $odd = $i;\n            last;\n        }\n    }\n    $diff = $even - $odd;\n    return $diff;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    for my $i (@$list1) {\n        if ($i % 2 == 0) {\n            $even = $i;\n            last;\n        }\n    }\n    for my $i (@$list1) {\n        if ($i % 2 != 0) {\n            $odd = $i;\n            last;\n        }\n    }\n    return $even - $odd;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $diff = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even = $num;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd = $num;\n            last;\n        }\n    }\n    $diff = $even - $odd;\n    return $diff;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $diff = 0;\n    foreach my $i (@$list1) {\n        if ($i % 2 == 0) {\n            $even = $i;\n            last;\n        }\n    }\n    foreach my $i (@$list1) {\n        if ($i % 2 != 0) {\n            $odd = $i;\n            last;\n        }\n    }\n    $diff = $even - $odd;\n    return $diff;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    while ($i < scalar(@$list1)) {\n        if ($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            last;\n        }\n        $i++;\n    }\n    $i = 0;\n    while ($i < scalar(@$list1)) {\n        if ($list1->[$i] % 2 != 0) {\n            $odd = $list1->[$i];\n            last;\n        }\n        $i++;\n    }\n    return $even - $odd;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $diff = 0;\n    foreach my $i (@$list1) {\n        if($i % 2 == 0) {\n            $even = $i;\n            last;\n        }\n    }\n    foreach my $i (@$list1) {\n        if($i % 2 != 0) {\n            $odd = $i;\n            last;\n        }\n    }\n    $diff = $even - $odd;\n    return $diff;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $diff = 0;\n    my $flag = 0;\n    foreach my $i (@$list1) {\n        if ($i % 2 == 0) {\n            $even = $i;\n            $flag = 1;\n            last;\n        }\n    }\n    foreach my $i (@$list1) {\n        if ($i % 2 != 0) {\n            $odd = $i;\n            last;\n        }\n    }\n    if ($flag == 1) {\n        $diff = $even - $odd;\n    }\n    return $diff;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even = $num;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd = $num;\n            last;\n        }\n    }\n    return $even - $odd;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $diff = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i1 = 0;\n    my $j1 = 0;\n    my $k1 = 0;\n    my $l1 = 0;\n    my $m1 = 0;\n    my $n1 = 0;\n    my $o1 = 0;\n    my $p1 = 0;\n    my $q1 = 0;\n    my $r1 = 0;\n    my $s1 = 0;\n    my $t1 = 0;\n    my $u1 = 0;\n    my $v1 = 0;\n    my $w1 = 0;\n    my $x1 = 0;\n    my $y1 = 0;\n    my $z1 = 0;\n    my $a1 = 0;\n    my $b1 = 0;\n    my $c1 = 0;\n    my $d1 = 0;\n    my $e1 = 0;\n    my $f1 = 0;\n    my $g1 = 0;\n    my $h1 = 0;\n    my $i2 = 0;\n    my $j2 = 0;\n    my $k2 = 0;\n    my $l2 = 0;\n    my $m2 = 0;\n",
    "    my $even = 0;\n    my $odd = 0;\n    my $diff = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even = $num;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd = $num;\n            last;\n        }\n    }\n    $diff = $even - $odd;\n    return $diff;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $diff = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even = $num;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd = $num;\n            last;\n        }\n    }\n    $diff = $even - $odd;\n    return $diff;\n}"
  ]
}
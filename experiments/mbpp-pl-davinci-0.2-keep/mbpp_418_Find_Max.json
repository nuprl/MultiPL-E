{
  "name": "mbpp_418_Find_Max",
  "language": "pl",
  "prompt": "# Write a python function to find the element of a list having maximum length.\nsub Find_Max {\n    my($lst) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_418_Find_Max.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&Find_Max;\n        if(eq_deeply($candidate->([[\"A\"], [\"A\", \"B\"], [\"A\", \"B\", \"C\"]]),[\"A\", \"B\", \"C\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[1], [1, 2], [1, 2, 3]]),[1, 2, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[1, 1], [1, 2, 3], [1, 5, 6, 1]]),[1, 5, 6, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $max = $lst->[0];\n    for my $i (1 .. $#$lst) {\n        $max = $lst->[$i] if length($lst->[$i]) > length($max);\n    }\n    return $max;\n}",
    "    my $max = $lst->[0];\n    foreach my $elem (@$lst) {\n        if (length($elem) > length($max)) {\n            $max = $elem;\n        }\n    }\n    return $max;\n}",
    "    my $max = $lst->[0];\n    for my $i (1 .. $#$lst) {\n        if (length($lst->[$i]) > length($max)) {\n            $max = $lst->[$i];\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $max_element;\n    foreach my $element (@$lst) {\n        if (length($element) > $max) {\n            $max = length($element);\n            $max_element = $element;\n        }\n    }\n    return $max_element;\n}",
    "    my $max = $lst->[0];\n    foreach my $elem (@$lst) {\n        if (length($elem) > length($max)) {\n            $max = $elem;\n        }\n    }\n    return $max;\n}",
    "    my $max = $lst->[0];\n    foreach my $elem (@$lst) {\n        if (length($elem) > length($max)) {\n            $max = $elem;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $max_ele;\n    foreach my $ele (@$lst) {\n        if (length($ele) > $max) {\n            $max = length($ele);\n            $max_ele = $ele;\n        }\n    }\n    return $max_ele;\n}",
    "    my $max = 0;\n    my $max_element = '';\n    foreach my $element (@$lst) {\n        if (length($element) > $max) {\n            $max = length($element);\n            $max_element = $element;\n        }\n    }\n    return $max_element;\n}",
    "    my $max = 0;\n    my $max_elem = \"\";\n    foreach my $elem (@$lst) {\n        if (length($elem) > $max) {\n            $max = length($elem);\n            $max_elem = $elem;\n        }\n    }\n    return $max_elem;\n}",
    "    my $max = $lst->[0];\n    foreach my $elem (@$lst) {\n        if (length($elem) > length($max)) {\n            $max = $elem;\n        }\n    }\n    return $max;\n}",
    "    my $max = $lst->[0];\n    for my $i (1..$#$lst) {\n        if (length($lst->[$i]) > length($max)) {\n            $max = $lst->[$i];\n        }\n    }\n    return $max;\n}",
    "    my $max = $lst->[0];\n    for my $i (1 .. $#$lst) {\n        if (length($lst->[$i]) > length($max)) {\n            $max = $lst->[$i];\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $max_element = \"\";\n    foreach my $element (@$lst) {\n        if (length($element) > $max) {\n            $max = length($element);\n            $max_element = $element;\n        }\n    }\n    return $max_element;\n}",
    "    my $max = $lst->[0];\n    foreach my $elem (@$lst) {\n        if (length($elem) > length($max)) {\n            $max = $elem;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $max_element = \"\";\n    foreach my $element (@$lst) {\n        if (length($element) > $max) {\n            $max = length($element);\n            $max_element = $element;\n        }\n    }\n    return $max_element;\n}",
    "    my $max = 0;\n    my $max_element = \"\";\n    foreach my $element (@$lst) {\n        if (length($element) > $max) {\n            $max = length($element);\n            $max_element = $element;\n        }\n    }\n    return $max_element;\n}",
    "    my $max = 0;\n    my $max_elem = \"\";\n    foreach my $elem (@$lst) {\n        if (length($elem) > $max) {\n            $max = length($elem);\n            $max_elem = $elem;\n        }\n    }\n    return $max_elem;\n}",
    "    my $max = $lst->[0];\n    foreach my $elem (@$lst) {\n        if (length($elem) > length($max)) {\n            $max = $elem;\n        }\n    }\n    return $max;\n}",
    "    my $max = $lst->[0];\n    foreach my $item (@$lst) {\n        if (length($item) > length($max)) {\n            $max = $item;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $max_elem;\n    foreach my $elem (@$lst) {\n        if (length($elem) > $max) {\n            $max = length($elem);\n            $max_elem = $elem;\n        }\n    }\n    return $max_elem;\n}"
  ]
}
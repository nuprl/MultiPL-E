{
  "name": "mbpp_754_extract_index_list",
  "language": "pl",
  "prompt": "# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nsub extract_index_list {\n    my($l1, $l2, $l3) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_754_extract_index_list.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&extract_index_list;\n        if(eq_deeply($candidate->([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 7])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 1, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 6, 5], [0, 1, 2, 3, 4, 6, 7]),[1, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 1, 3, 4, 6, 5, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[1, 5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3, 4, 6, 6, 6], [0, 1, 2, 3, 4, 5, 7], [0, 1, 2, 3, 4, 5, 7]),[])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my @common;\n    for my $i (0..$#{$l1}) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @common, $l1->[$i];\n        }\n    }\n    return \\@common;\n}",
    "    my @result = ();\n    for my $i (0 .. $#$l1) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i];\n    }\n    return \\@result;\n}",
    "    my @common = ();\n    for (my $i = 0; $i < scalar(@$l1); $i++) {\n        if (defined($l1->[$i]) && defined($l2->[$i]) && defined($l3->[$i])) {\n            push(@common, $l1->[$i]);\n        }\n    }\n    return @common;\n}",
    "    my @result = ();\n    for my $i (0..$#$l1) {\n        if (defined $l1->[$i] && defined $l2->[$i] && defined $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return \\@result;\n}",
    "    my @result;\n    for(my $i = 0; $i < scalar(@$l1); $i++) {\n        if($$l1[$i] eq $$l2[$i] && $$l2[$i] eq $$l3[$i]) {\n            push @result, $$l1[$i];\n        }\n    }\n    return @result;\n}",
    "    my @result;\n    for my $i (0..$#$l1) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return \\@result;\n}",
    "    my @common_elements;\n    for my $i (0..$#$l1) {\n        if ($l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return \\@common_elements;\n}",
    "    my @result;\n    for my $i (0..$#$l1) {\n        push @result, $l1->[$i] if $l2->[$i] && $l3->[$i];\n    }\n    return \\@result;\n}",
    "    my @common;\n    for (my $i = 0; $i < @$l1; $i++) {\n        my $e1 = $l1->[$i];\n        my $e2 = $l2->[$i];\n        my $e3 = $l3->[$i];\n        if (defined $e1 && defined $e2 && defined $e3 && $e1 eq $e2 && $e2 eq $e3) {\n            push @common, $e1;\n        }\n    }\n    return @common;\n}",
    "    my @result;\n    for my $i (0 .. $#$l1) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] && $l1->[$i] eq $l3->[$i];\n    }\n    return @result;\n}",
    "    my @common_elements;\n    for my $i (0 .. @$l1 - 1) {\n        push @common_elements, $l1->[$i] if $l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i];\n    }\n    return \\@common_elements;\n}",
    "    my @common_elements;\n    for (my $i = 0; $i < @$l1; $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l1->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return \\@common_elements;\n}",
    "    my @common_elements;\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        if ($l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @common;\n    for my $i (0 .. $#$l1) {\n        push @common, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i];\n    }\n    return @common;\n}",
    "    my @result = ();\n    for my $i (0..$#{$l1}) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i];\n    }\n    return @result;\n}",
    "    my @result;\n    for my $i (0 .. $#{$l1}) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i];\n    }\n    return \\@result;\n}",
    "    my @l1 = @$l1;\n    my @l2 = @$l2;\n    my @l3 = @$l3;\n    my @result;\n    for (my $i = 0; $i < @l1; $i++) {\n        if ($l1[$i] eq $l2[$i] and $l2[$i] eq $l3[$i]) {\n            push @result, $l1[$i];\n        }\n    }\n    return @result;\n}",
    "    my @common = ();\n    for my $i (0..$#{$l1}) {\n        if (defined $l1->[$i] and defined $l2->[$i] and defined $l3->[$i]) {\n            push @common, $l1->[$i];\n        }\n    }\n    return @common;\n}",
    "    my @result;\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l1->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @common_elements;\n    for my $i (0..$#{$l1}) {\n        if ($l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return \\@common_elements;\n}",
    "    my @common;\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        if ($l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i]) {\n            push @common, $l1->[$i];\n        }\n    }\n    return @common;\n}",
    "    my @common_elements;\n    for (my $i = 0; $i < scalar(@$l1); $i++) {\n        if ($l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @result;\n    for (my $i = 0; $i < @$l1; $i++) {\n        if (defined $l1->[$i] && defined $l2->[$i] && defined $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @result = ();\n    for (my $i = 0; $i < scalar(@$l1); $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l1->[$i] eq $l3->[$i]) {\n            push(@result, $l1->[$i]);\n        }\n    }\n    return @result;\n}",
    "    my @common_elements;\n    for my $i (0 .. $#{$l1}) {\n        if ($l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @l1 = @$l1;\n    my @l2 = @$l2;\n    my @l3 = @$l3;\n    my @common;\n    for my $i (0..$#l1) {\n        if ($l1[$i] eq $l2[$i] && $l1[$i] eq $l3[$i]) {\n            push @common, $l1[$i];\n        }\n    }\n    return @common;\n}",
    "    my @common_elements;\n    for my $i (0 .. $#{$l1}) {\n        if ($l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @common_elements = ();\n    for (my $i = 0; $i < scalar(@$l1); $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @common_elements;\n    for my $i (0 .. $#$l1) {\n        if ($l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @common;\n    for my $i (0..$#$l1) {\n        push @common, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i];\n    }\n    return \\@common;\n}",
    "    my @l1 = @$l1;\n    my @l2 = @$l2;\n    my @l3 = @$l3;\n    my @result;\n    for (my $i = 0; $i < scalar @l1; $i++) {\n        if ($l1[$i] eq $l2[$i] && $l2[$i] eq $l3[$i]) {\n            push @result, $l1[$i];\n        }\n    }\n    return @result;\n}",
    "    my @l1 = @$l1;\n    my @l2 = @$l2;\n    my @l3 = @$l3;\n    my @result;\n    for (my $i = 0; $i < @l1; $i++) {\n        if ($l1[$i] eq $l2[$i] and $l2[$i] eq $l3[$i]) {\n            push @result, $l1[$i];\n        }\n    }\n    return @result;\n}",
    "    my @common_elements;\n    for my $i (0..$#{$l1}) {\n        push @common_elements, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i];\n    }\n    return @common_elements;\n}",
    "    my @result;\n    for my $i (0 .. $#$l1) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i];\n    }\n    return @result;\n}",
    "    my @common_elements;\n    for my $i (0..$#$l1) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @result = ();\n    for (my $i = 0; $i < @$l1; $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @result;\n    for my $i (0 .. $#{$l1}) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i];\n    }\n    return \\@result;\n}",
    "    my @common;\n    for my $i (0..$#{$l1}) {\n        push @common, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i];\n    }\n    return \\@common;\n}",
    "    my @result;\n    for my $i (0..$#{$l1}) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i];\n    }\n    return @result;\n}",
    "    my @result;\n    for (my $i = 0; $i < @$l1; $i++) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i];\n    }\n    return \\@result;\n}",
    "    my @result = ();\n    my $i = 0;\n    while ($i < scalar(@$l1) && $i < scalar(@$l2) && $i < scalar(@$l3)) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n        $i++;\n    }\n    return \\@result;\n}",
    "    my @common_elements = ();\n    for my $i (0 .. $#{$l1}) {\n        push @common_elements, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i];\n    }\n    return @common_elements;\n}",
    "    my @result;\n    for my $i (0 .. $#$l1) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i];\n    }\n    return @result;\n}",
    "    my @common_elements;\n    for my $i (0..$#$l1) {\n        push @common_elements, $l1->[$i] if $l1->[$i] eq $l2->[$i] && $l1->[$i] eq $l3->[$i];\n    }\n    return \\@common_elements;\n}",
    "    my $l = [];\n    for (my $i = 0; $i < @$l1; $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l1->[$i] eq $l3->[$i]) {\n            push @$l, $l1->[$i];\n        }\n    }\n    return $l;\n}",
    "    my @result;\n    for my $i (0 .. $#{$l1}) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @l1 = @$l1;\n    my @l2 = @$l2;\n    my @l3 = @$l3;\n    my @common_elements;\n    for (my $i = 0; $i < scalar @l1; $i++) {\n        if ($l1[$i] eq $l2[$i] && $l2[$i] eq $l3[$i]) {\n            push @common_elements, $l1[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @result;\n    for (my $i = 0; $i < @$l1; $i++) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i];\n    }\n    return @result;\n}",
    "    my @result;\n    my $i = 0;\n    while ($i < @$l1) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i];\n        $i++;\n    }\n    return @result;\n}",
    "    my @common_elements;\n    for my $i (0..$#{$l1}) {\n        if ($l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @result = ();\n    for (my $i = 0; $i < @$l1; $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @result;\n    my $index = 0;\n    while (1) {\n        my $e1 = $l1->[$index];\n        my $e2 = $l2->[$index];\n        my $e3 = $l3->[$index];\n        last if (!defined($e1) && !defined($e2) && !defined($e3));\n        if (defined($e1) && defined($e2) && defined($e3)) {\n            push @result, $e1;\n        }\n        $index++;\n    }\n    return @result;\n}",
    "    my @result;\n    for my $i (0..$#{$l1}) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i];\n    }\n    return \\@result;\n}",
    "    my @result;\n    for my $i (0..$#$l1) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i];\n    }\n    return @result;\n}",
    "    my @result;\n    for (my $i = 0; $i < scalar(@$l1); $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @result;\n    my $size = @$l1;\n    for (my $i = 0; $i < $size; $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @result;\n    for my $i (0..$#$l1) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i];\n    }\n    return @result;\n}",
    "    my @common_elements;\n    for my $i (0..$#{$l1}) {\n        push @common_elements, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i];\n    }\n    return @common_elements;\n}",
    "    my @common_elements;\n    my $length = scalar @$l1;\n    for (my $i = 0; $i < $length; $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l1->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @l = ();\n    for (my $i = 0; $i < @$l1; $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @l, $l1->[$i];\n        }\n    }\n    return @l;\n}",
    "    my @list;\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        if ($l1->[$i] == $l2->[$i] && $l2->[$i] == $l3->[$i]) {\n            push @list, $l1->[$i];\n        }\n    }\n    return @list;\n}",
    "    my @common_elements;\n    for my $i (0..$#{$l1}) {\n        if (defined $l1->[$i] && defined $l2->[$i] && defined $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return \\@common_elements;\n}",
    "    my @list;\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l1->[$i] eq $l3->[$i]) {\n            push @list, $l1->[$i];\n        }\n    }\n    return @list;\n}",
    "    my @result;\n    for my $i (0 .. $#{$l1}) {\n        if ($l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @result = ();\n    for (my $i = 0; $i < scalar(@$l1); $i++) {\n        if (defined($l1->[$i]) && defined($l2->[$i]) && defined($l3->[$i])) {\n            push(@result, $l1->[$i]);\n        }\n    }\n    return @result;\n}",
    "    my @result = ();\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        if ($l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @result = ();\n    for (my $i = 0; $i < scalar(@$l1); $i++) {\n        if (defined($l1->[$i]) && defined($l2->[$i]) && defined($l3->[$i])) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @common_elements;\n    for (my $i = 0; $i < scalar(@$l1); $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l1->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return \\@common_elements;\n}",
    "    my @result = ();\n    for my $i (0..$#$l1) {\n        if (defined $l1->[$i] && defined $l2->[$i] && defined $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @result = ();\n    for my $i (0..$#{$l1}) {\n        if ($l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return \\@result;\n}",
    "    my @common_elements;\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @common_elements = ();\n    for my $i (0..$#{$l1}) {\n        if ($l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @common_elements;\n    for my $i (0..$#$l1) {\n        if ($l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @common;\n    for my $i (0..$#$l1) {\n        if ($l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i]) {\n            push @common, $l1->[$i];\n        }\n    }\n    return @common;\n}",
    "    my @common_elements;\n    for my $i (0 .. $#$l1) {\n        if ($l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return \\@common_elements;\n}",
    "    my @result;\n    for my $i (0..$#$l1) {\n        if ($l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return \\@result;\n}",
    "    my @result = ();\n    for (my $i = 0; $i < scalar(@$l1); $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @common_elements;\n    for (my $i = 0; $i < scalar(@$l1); $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l1->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @result;\n    for (my $i = 0; $i < @$l1; $i++) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i];\n    }\n    return @result;\n}",
    "    my @common_elements;\n    for my $i (0..$#{$l1}) {\n        if ($l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @result = ();\n    for (my $i = 0; $i < scalar(@$l1); $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l1->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @common_elements;\n    for (my $i = 0; $i < @$l1; $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l1->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return \\@common_elements;\n}",
    "    my @common_elements;\n    for my $i (0 .. $#{$l1}) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @l1 = @$l1;\n    my @l2 = @$l2;\n    my @l3 = @$l3;\n    my @result;\n    for (my $i = 0; $i < @l1; $i++) {\n        if ($l1[$i] eq $l2[$i] && $l2[$i] eq $l3[$i]) {\n            push @result, $l1[$i];\n        }\n    }\n    return @result;\n}",
    "    my @common_elements;\n    for my $index (0..$#{$l1}) {\n        if (defined $l1->[$index] && defined $l2->[$index] && defined $l3->[$index]) {\n            push @common_elements, $l1->[$index];\n        }\n    }\n    return \\@common_elements;\n}",
    "    my @common = ();\n    for my $i (0 .. $#$l1) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @common, $l1->[$i];\n        }\n    }\n    return @common;\n}",
    "    my @common_elements;\n    for my $index (0 .. $#{$l1}) {\n        push @common_elements, $l1->[$index] if $l1->[$index] eq $l2->[$index] and $l1->[$index] eq $l3->[$index];\n    }\n    return @common_elements;\n}",
    "    my @common_elements;\n    for(my $i = 0; $i < scalar(@$l1); $i++) {\n        push(@common_elements, $l1->[$i]) if $l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i];\n    }\n    return @common_elements;\n}",
    "    my @result;\n    for (my $i = 0; $i < @$l1; $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @common_elements;\n    for my $i (0 .. $#$l1) {\n        if ($l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @common_elements;\n    for (my $i = 0; $i < scalar(@$l1); $i++) {\n        if ($l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @result;\n    for my $i (0..$#$l1) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i];\n    }\n    return \\@result;\n}",
    "    my @common;\n    for my $i (0..$#$l1) {\n        push @common, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i];\n    }\n    return @common;\n}",
    "    my @common_elements;\n    for my $i (0..$#$l1) {\n        if (defined $l1->[$i] && defined $l2->[$i] && defined $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @result;\n    for my $i (0 .. $#{$l1}) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i];\n    }\n    return \\@result;\n}",
    "    my @result = ();\n    for (my $i = 0; $i < @$l1; $i++) {\n        if ($l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @common_elements;\n    for my $i (0..$#{$l1}) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @result;\n    for (my $i = 0; $i < scalar(@$l1); $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @common_elements;\n    for my $i (0 .. $#{$l1}) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @result;\n    for my $i (0..$#$l1) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] && $l1->[$i] eq $l3->[$i];\n    }\n    return \\@result;\n}",
    "    my @common_elements = ();\n    my $length = scalar(@$l1);\n    for (my $i = 0; $i < $length; $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l1->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @result;\n    for(my $i = 0; $i < @$l1; $i++) {\n        if(@$l1[$i] eq @$l2[$i] && @$l1[$i] eq @$l3[$i]) {\n            push @result, @$l1[$i];\n        }\n    }\n    return @result;\n}",
    "    my @common_elements;\n    for my $i (0 .. $#$l1) {\n        push @common_elements, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i];\n    }\n    return @common_elements;\n}",
    "    my $l = [];\n    for my $i (0..$#$l1) {\n        push @$l, $i if $l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i];\n    }\n    return $l;\n}",
    "    my @common_elements;\n    for my $i (0 .. $#$l1) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return \\@common_elements;\n}",
    "    my @result;\n    for (my $i = 0; $i < scalar(@$l1); $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @result = ();\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l1->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @result = ();\n    for my $i (0..$#$l1) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i];\n    }\n    return @result;\n}",
    "    my @result;\n    for (my $i = 0; $i < @$l1; $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @result = ();\n    for my $i (0..$#$l1) {\n        if ($l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @result;\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @result;\n    for (my $i = 0; $i < @$l1; $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l1->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @common_elements;\n    for (my $i = 0; $i < @$l1; $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @result = ();\n    for my $i (0..$#{$l1}) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i];\n    }\n    return @result;\n}",
    "    my @common_elements;\n    for my $i (0..$#{$l1}) {\n        if ($l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @result = ();\n    for my $i (0..$#{$l1}) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return \\@result;\n}",
    "    my @result;\n    for my $i (0 .. @$l1 - 1) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i];\n    }\n    return @result;\n}",
    "    my @common_elements;\n    for (my $i = 0; $i < @$l1; $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @l1 = @$l1;\n    my @l2 = @$l2;\n    my @l3 = @$l3;\n    my @common_elements;\n    for (my $i = 0; $i < scalar(@l1); $i++) {\n        if ($l1[$i] eq $l2[$i] && $l2[$i] eq $l3[$i]) {\n            push @common_elements, $l1[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @common_elements;\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l1->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @result;\n    for my $i (0..$#$l1) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i];\n    }\n    return \\@result;\n}",
    "    my @result;\n    for(my $i = 0; $i < @$l1; $i++) {\n        push @result, $l1->[$i] if $l1->[$i] == $l2->[$i] && $l2->[$i] == $l3->[$i];\n    }\n    return @result;\n}",
    "    my @result;\n    for (my $i = 0; $i < scalar(@$l1); $i++) {\n        if ($l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @common;\n    for my $i (0 .. $#$l1) {\n        push @common, $l1->[$i] if $l1->[$i] eq $l2->[$i] && $l1->[$i] eq $l3->[$i];\n    }\n    return @common;\n}",
    "    my @common_elements;\n    my $max_index = max(scalar(@$l1), scalar(@$l2), scalar(@$l3));\n    for (my $i = 0; $i < $max_index; $i++) {\n        if (defined($l1->[$i]) && defined($l2->[$i]) && defined($l3->[$i])) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @common_elements;\n    for (my $i = 0; $i < @$l1; $i++) {\n        if ($l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return \\@common_elements;\n}",
    "    my @common;\n    for my $i (0..$#$l1) {\n        if (defined $l1->[$i] && defined $l2->[$i] && defined $l3->[$i]) {\n            push @common, $l1->[$i];\n        }\n    }\n    return \\@common;\n}",
    "    my @result;\n    for my $i (0..$#$l1) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i];\n    }\n    return \\@result;\n}",
    "    my @result;\n    for (my $i = 0; $i < @$l1; $i++) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i];\n    }\n    return @result;\n}",
    "    my @result = ();\n    for (my $i = 0; $i < scalar(@$l1); $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @l1 = @$l1;\n    my @l2 = @$l2;\n    my @l3 = @$l3;\n    my @common_elements;\n    for (my $i = 0; $i < @l1; $i++) {\n        if ($l1[$i] eq $l2[$i] && $l2[$i] eq $l3[$i]) {\n            push @common_elements, $l1[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @result;\n    for my $i (0..$#{$l1}) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i];\n    }\n    return \\@result;\n}",
    "    my @result;\n    my $i = 0;\n    while ($i < scalar(@$l1)) {\n        if ($l1->[$i] eq $l2->[$i] && $l1->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n        $i++;\n    }\n    return \\@result;\n}",
    "    my @result;\n    for my $i (0 .. $#$l1) {\n        if ($l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @common_elements;\n    for my $i (0 .. $#$l1) {\n        if ($l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @result = ();\n    for (my $i = 0; $i < scalar(@$l1); $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @result = ();\n    for my $i (0 .. $#{$l1}) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return \\@result;\n}",
    "    my @result;\n    for(my $i = 0; $i < scalar(@$l1); $i++) {\n        if($$l1[$i] eq $$l2[$i] and $$l2[$i] eq $$l3[$i]) {\n            push @result, $$l1[$i];\n        }\n    }\n    return @result;\n}",
    "    my @result = ();\n    for my $i (0..$#$l1) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i];\n    }\n    return @result;\n}",
    "    my @common_elements = ();\n    for (my $i = 0; $i < scalar(@$l1); $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l1->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @list = ();\n    for my $i (0..$#{$l1}) {\n        if ($l1->[$i] eq $l2->[$i] && $l1->[$i] eq $l3->[$i]) {\n            push @list, $l1->[$i];\n        }\n    }\n    return @list;\n}",
    "    my @result;\n    for (my $i = 0; $i < scalar(@$l1); $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @result = ();\n    for (my $i = 0; $i < @$l1; $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @result = ();\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l1->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return \\@result;\n}",
    "    my @result;\n    for my $i (0..$#$l1) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i];\n    }\n    return \\@result;\n}",
    "    my @common_elements;\n    for my $i (0 .. $#{$l1}) {\n        if ($l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @result;\n    for my $i (0..$#$l1) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i];\n    }\n    return \\@result;\n}",
    "    my @result = ();\n    for (my $i = 0; $i < scalar(@$l1); $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @common_elements;\n    for my $i (0 .. $#{$l1}) {\n        push @common_elements, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i];\n    }\n    return @common_elements;\n}",
    "    my @common_elements = ();\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return \\@common_elements;\n}",
    "    my @common;\n    for my $i (0 .. $#$l1) {\n        push @common, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i];\n    }\n    return \\@common;\n}",
    "    my @result = ();\n    for my $i (0..$#{$l1}) {\n        if (defined $l1->[$i] && defined $l2->[$i] && defined $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @common_elements = ();\n    for my $i (0 .. $#$l1) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @common_elements;\n    for my $i (0..$#$l1) {\n        if ($l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @result;\n    for (my $i = 0; $i < @$l1; $i++) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] && $l1->[$i] eq $l3->[$i];\n    }\n    return @result;\n}",
    "    my @l1 = @$l1;\n    my @l2 = @$l2;\n    my @l3 = @$l3;\n    my @result;\n    for my $i (0..$#l1) {\n        if ($l1[$i] eq $l2[$i] and $l1[$i] eq $l3[$i]) {\n            push @result, $l1[$i];\n        }\n    }\n    return @result;\n}",
    "    my @l1 = @$l1;\n    my @l2 = @$l2;\n    my @l3 = @$l3;\n    my @l;\n    for (my $i = 0; $i < @l1; $i++) {\n        if ($l1[$i] eq $l2[$i] && $l2[$i] eq $l3[$i]) {\n            push @l, $l1[$i];\n        }\n    }\n    return @l;\n}",
    "    my @common;\n    for my $i (0 .. $#$l1) {\n        push @common, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i];\n    }\n    return @common;\n}",
    "    my @l1 = @$l1;\n    my @l2 = @$l2;\n    my @l3 = @$l3;\n    my @common_elements;\n    for (my $i = 0; $i < @l1; $i++) {\n        if ($l1[$i] eq $l2[$i] && $l2[$i] eq $l3[$i]) {\n            push @common_elements, $l1[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @result;\n    for my $i (0 .. $#$l1) {\n        push @result, $l1->[$i] if defined $l1->[$i] && defined $l2->[$i] && defined $l3->[$i];\n    }\n    return @result;\n}",
    "    my @result;\n    for my $i (0 .. $#{$l1}) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] && $l1->[$i] eq $l3->[$i];\n    }\n    return @result;\n}",
    "    my @common_elements;\n    for (my $i = 0; $i < scalar(@$l1); $i++) {\n        if ($l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @common_elements;\n    for (my $i = 0; $i < @$l1; $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l1->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @result = ();\n    for (my $i = 0; $i < @$l1; $i++) {\n        if ($l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @common_elements;\n    for my $i (0..$#{$l1}) {\n        push @common_elements, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i];\n    }\n    return @common_elements;\n}",
    "    my @result;\n    for my $i (0..$#$l1) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i];\n    }\n    return @result;\n}",
    "    my @common_elements;\n    for my $i (0..$#$l1) {\n        if (defined $l1->[$i] && defined $l2->[$i] && defined $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return \\@common_elements;\n}",
    "    my @result;\n    for my $i (0..$#$l1) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i];\n    }\n    return @result;\n}",
    "    my @common_elements;\n    for my $i (0 .. $#$l1) {\n        push @common_elements, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i];\n    }\n    return @common_elements;\n}",
    "    my @result;\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @common_elements;\n    for my $i (0..$#$l1) {\n        if ($l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @result;\n    for (my $i = 0; $i < scalar(@$l1); $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @result;\n    for my $i (0 .. $#$l1) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i];\n    }\n    return \\@result;\n}",
    "    my @common_elements;\n    for my $i (0..$#{$l1}) {\n        push @common_elements, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i];\n    }\n    return @common_elements;\n}",
    "    my @result = ();\n    for (my $i = 0; $i < scalar(@$l1); $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @common_elements;\n    for (my $i = 0; $i < @$l1; $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @common_elements;\n    for my $i (0 .. $#$l1) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @result = ();\n    for my $i (0 .. $#{$l1}) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i];\n    }\n    return @result;\n}",
    "    my @common_elements;\n    for my $i (0..$#{$l1}) {\n        if ($l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @result = ();\n    for my $i (0..$#{$l1}) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i];\n    }\n    return \\@result;\n}",
    "    my @l1 = @$l1;\n    my @l2 = @$l2;\n    my @l3 = @$l3;\n    my @result;\n    for (my $i = 0; $i < @l1; $i++) {\n        if ($l1[$i] eq $l2[$i] && $l2[$i] eq $l3[$i]) {\n            push @result, $l1[$i];\n        }\n    }\n    return @result;\n}",
    "    my @common_elements;\n    for my $i (0..$#$l1) {\n        push @common_elements, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i];\n    }\n    return \\@common_elements;\n}",
    "    my @common_elements;\n    for (my $i = 0; $i < @$l1; $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @common_elements = ();\n    for my $i (0..$#{$l1}) {\n        if ($l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return \\@common_elements;\n}",
    "    my @result;\n    my $i = 0;\n    while ($i < @$l1) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] && $l1->[$i] eq $l3->[$i];\n        $i++;\n    }\n    return @result;\n}",
    "    my @common_elements;\n    for (my $i = 0; $i < @$l1; $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l1->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @common;\n    for my $i (0 .. $#{$l1}) {\n        push @common, $l1->[$i] if $l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i];\n    }\n    return @common;\n}",
    "    my @common_elements;\n    for my $i (0..$#$l1) {\n        if ($l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return \\@common_elements;\n}",
    "    my @common_elements = ();\n    for my $i (0..$#{$l1}) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @result = ();\n    for my $i (0..$#{$l1}) {\n        if (defined $l1->[$i] && defined $l2->[$i] && defined $l3->[$i]) {\n            push @result, $l1->[$i];\n        }\n    }\n    return @result;\n}",
    "    my @common_elements;\n    for my $i (0 .. $#$l1) {\n        if ($l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @result;\n    for(my $i = 0; $i < scalar(@$l1); $i++) {\n        if($$l1[$i] == $$l2[$i] && $$l2[$i] == $$l3[$i]) {\n            push @result, $$l1[$i];\n        }\n    }\n    return @result;\n}",
    "    my @common_elements = ();\n    for my $i (0..$#{$l1}) {\n        if ($l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return @common_elements;\n}",
    "    my @result;\n    for my $i (0..$#$l1) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i];\n    }\n    return @result;\n}",
    "    my @list;\n    for (my $i = 0; $i < scalar @$l1; $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l2->[$i] eq $l3->[$i]) {\n            push @list, $l1->[$i];\n        }\n    }\n    return \\@list;\n}",
    "    my @result = ();\n    for my $i (0..$#{$l1}) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i];\n    }\n    return @result;\n}",
    "    my @common_elements;\n    for my $i (0..$#$l1) {\n        push @common_elements, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l2->[$i] eq $l3->[$i];\n    }\n    return \\@common_elements;\n}",
    "    my @result = ();\n    for my $i (0..$#$l1) {\n        push @result, $l1->[$i] if $l1->[$i] eq $l2->[$i] and $l1->[$i] eq $l3->[$i];\n    }\n    return @result;\n}",
    "    my @l1 = @$l1;\n    my @l2 = @$l2;\n    my @l3 = @$l3;\n    my @result;\n    for (my $i = 0; $i < @l1; $i++) {\n        if ($l1[$i] == $l2[$i] && $l1[$i] == $l3[$i]) {\n            push @result, $l1[$i];\n        }\n    }\n    return @result;\n}",
    "    my @common_elements = ();\n    for (my $i = 0; $i < scalar(@$l1); $i++) {\n        if ($l1->[$i] eq $l2->[$i] && $l1->[$i] eq $l3->[$i]) {\n            push @common_elements, $l1->[$i];\n        }\n    }\n    return \\@common_elements;\n}"
  ]
}
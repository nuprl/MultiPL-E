{
  "name": "mbpp_425_count_element_in_list",
  "language": "pl",
  "prompt": "# Write a function to count the number of sublists containing a particular element.\nsub count_element_in_list {\n    my($list1, $x) = @_;\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_425_count_element_in_list.py",
  "prompt_terminology": "verbatim",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&count_element_in_list;\n        if(eq_deeply($candidate->([[1, 3], [5, 7], [1, 11], [1, 15, 7]], 1),3)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"A\", \"B\"], [\"A\", \"C\"], [\"A\", \"D\", \"E\"], [\"B\", \"C\", \"D\"]], \"A\"),3)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"A\", \"B\"], [\"A\", \"C\"], [\"A\", \"D\", \"E\"], [\"B\", \"C\", \"D\"]], \"E\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $count = 0;\n    foreach my $list2 (@$list1) {\n        foreach my $element (@$list2) {\n            if ($element == $x) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $sublist (@$list1) {\n        foreach my $element (@$sublist) {\n            if ($element == $x) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for my $sublist (@$list1) {\n        for my $element (@$sublist) {\n            $count++ if $element == $x;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $sublist (@$list1) {\n        foreach my $element (@$sublist) {\n            if ($element == $x) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $sublist (@$list1) {\n        if (grep {$_ eq $x} @$sublist) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $sublist (@$list1) {\n        foreach my $element (@$sublist) {\n            if ($element eq $x) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $sublist (@$list1) {\n        foreach my $element (@$sublist) {\n            if ($element == $x) {\n                $count++;\n                last;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $sublist (@$list1) {\n        if (grep {$_ eq $x} @$sublist) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $list2 (@$list1) {\n        $count++ if grep {$_ eq $x} @$list2;\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $sublist (@$list1) {\n        foreach my $element (@$sublist) {\n            if ($element == $x) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $sublist (@$list1) {\n        if (grep {$_ eq $x} @$sublist) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $sublist (@$list1) {\n        foreach my $element (@$sublist) {\n            if ($element == $x) {\n                $count++;\n                last;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $sublist (@$list1) {\n        foreach my $element (@$sublist) {\n            if ($element == $x) {\n                $count++;\n                last;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $sublist (@$list1) {\n        foreach my $element (@$sublist) {\n            if ($element == $x) {\n                $count++;\n                last;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $elem (@$list1) {\n        if (ref($elem) eq 'ARRAY') {\n            $count += count_element_in_list($elem, $x);\n        }\n        else {\n            $count++ if $elem == $x;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $i (@$list1) {\n        if (ref($i) eq 'ARRAY') {\n            $count += count_element_in_list($i, $x);\n        } else {\n            $count++ if $i == $x;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $item (@$list1) {\n        if (ref($item) eq 'ARRAY') {\n            $count += count_element_in_list($item, $x);\n        }\n        elsif ($item eq $x) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $sublist (@$list1) {\n        foreach my $element (@$sublist) {\n            if ($element == $x) {\n                $count++;\n                last;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $sublist (@$list1) {\n        foreach my $element (@$sublist) {\n            if ($element == $x) {\n                $count++;\n                last;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for my $sublist (@$list1) {\n        for my $element (@$sublist) {\n            if ($element eq $x) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}"
  ]
}
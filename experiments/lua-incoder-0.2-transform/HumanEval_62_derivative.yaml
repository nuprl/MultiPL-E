name: HumanEval_62_derivative
language: lua
prompt: "-- xs represent coefficients of a polynomial.\n-- xs[0] + xs[1] * x + xs[2]\
  \ * x^2 + ....\n-- Return derivative of this polynomial in the same form.\n-- >>>\
  \ derivative({3, 1, 2, 4, 5})\n-- {1, 4, 12, 20}\n-- >>> derivative({1, 2, 3})\n\
  -- {2, 6}\nlocal function derivative(xs)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = derivative\n\
  \    lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})\n    lu.assertEquals(candidate({1,\
  \ 2, 3}), {2, 6})\n    lu.assertEquals(candidate({3, 2, 1}), {2, 2})\n    lu.assertEquals(candidate({3,\
  \ 2, 1, 0, 4}), {2, 2, 0, 16})\n    lu.assertEquals(candidate({1}), {})\nend\n\n\
  os.exit(lu.LuaUnit.run())"
completions: ["  local n = #xs\n  local f = {}\n  for i = 1, n do\n    table.insert(f,\
    \ xs[i])\n  end\n  table.insert(f, 1)\n  local d\n  for i = 1, n do\n    d = d\
    \ * xs[i]\n  end\n  return d\nend", "  local d = 0\n  local n = #xs\n  for i =\
    \ 1, n do\n    d = d * xs[i]\n  end\n  return d\nend", "  if #xs == 0 then\n \
    \   return {}\n  end\n  local n = #xs - 1\n  local x = xs[n]\n  local d = {}\n\
    \  for i = 1, n do\n    table.insert(d, xs[i + 1] * x)\n  end\n  return d\nend",
  "  if #xs == 0 then\n    return {}\n  elseif #xs == 1 then\n    return xs[1]\n \
    \ else\n    local ds = {}\n    for i = 1, #xs do\n      ds[i] = xs[i] - xs[i -\
    \ 1]\n    end\n    return ds\n  end\nend", "  local n = #xs - 1\n  local x = xs[n]\n\
    \  local d = {}\n  for i = 1, n do\n    table.insert(d, xs[i] - x)\n  end\n  return\
    \ d\nend", "  local n = #xs\n  local result = {}\n  for i = 1, n do\n    local\
    \ x = xs[i]\n    local d = 1\n    for j = 1, n do\n      if j == i then\n    \
    \    local term = xs[j]\n      else\n        local term = xs[j] * x\n      end\n\
    \      d = d * term\n    end\n    result[i] = d\n  end\n  return result\nend",
  "  local n = #xs - 1\n  local d = 0\n  local i = 1\n  while i <= n do\n    d = d\
    \ * xs[i] + xs[i + 1]\n    i = i + 2\n  end\n  return d\nend", "  if #xs == 0\
    \ then\n    return {}\n  end\n  local n = #xs - 1\n  local x = xs[n]\n  local\
    \ d = {}\n  for i = 1, n do\n    table.insert(d, xs[i + 1] * x)\n  end\n  return\
    \ d\nend", "  local n = 1\n  local ds = {}\n  for i = 1, #xs do\n    local x =\
    \ xs[i]\n    local d = 1\n    for j = 1, n do\n      d = d * x\n    end\n    ds[i]\
    \ = d\n    n = n + 1\n  end\n  return ds\nend", "  local d = 0\n  for i = 1, #xs\
    \ do\n    d = d * xs[i]\n  end\n  return d\nend", "  local ds = {}\n  local n\
    \ = #xs\n  for i = 1, n do\n    local x = xs[i]\n    local d = 1\n    for j =\
    \ 1, n do\n      if j == i then\n        d:add(1)\n      else\n        d:mul(x)\n\
    \      end\n    end\n    ds[i] = d\n  end\n  return ds\nend", "  local ds = {}\n\
    \  local n = #xs\n  for i = 1, n do\n    local x = xs[i]\n    local d = 1\n  \
    \  for j = 1, n do\n      if j == i then\n        d:add(1)\n      else\n     \
    \   d:mul(x)\n      end\n    end\n    ds[i] = d\n  end\n  return ds\nend", " \
    \ local n = 1\n  local d = 0\n  for i = 1, #xs do\n    local x = xs[i]\n    local\
    \ xp = n * x\n    n = xp\n    d = d + xp\n  end\n  return d\nend", "  local d\
    \ = 0\n  for i = 1, #xs do\n    d = d * xs[i]\n  end\n  return d\nend", "  if\
    \ #xs == 1 then\n    return { xs[1] }\n  end\n  local ds = {}\n  for i = 1, #xs\
    \ do\n    local d = {}\n    for j = 1, #xs do\n      table.insert(d, xs[j] * xs[i])\n\
    \    end\n    table.insert(ds, d)\n  end\n  return ds\nend", "  local n = 1\n\
    \  local ds = {}\n  for i = 1, #xs do\n    local x = xs[i]\n    local d = 1\n\
    \    for j = 1, n do\n      d = d * x\n    end\n    ds[i] = d\n    n = n + 1\n\
    \  end\n  return ds\nend", "  local n = 1\n  local d = 0\n  for i = 1, #xs do\n\
    \    local x = xs[i]\n    local xp = n * x\n    n = xp\n    d = d + x\n  end\n\
    \  return d\nend", "  local n = 1\n  local ds = {}\n  for i = 1, #xs do\n    local\
    \ x = xs[i]\n    local d = 1\n    for j = 1, n do\n      d = d * x\n    end\n\
    \    ds[i] = d\n    n = n + 1\n  end\n  return ds\nend", "  local ds = {}\n  local\
    \ n = #xs\n  for i = 1, n do\n    local x = xs[i]\n    local d = 1\n    for j\
    \ = 1, n do\n      if j == i then\n        d\n      else\n        d = d * xs[j]\n\
    \      end\n    end\n    ds[i] = d\n  end\n  return ds\nend", "  local ds = {}\n\
    \  local n = #xs\n  if n == 0 then\n    return ds\n  end\n  ds[1] = xs[1]\n  for\
    \ i = 2, n do\n    ds[i] = ds[i-1] * xs[i]\n  end\n  return ds\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

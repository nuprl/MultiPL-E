name: HumanEval_92_any_int
language: lua
prompt: "-- Create a function that takes 3 numbers.\n-- Returns true if one of the\
  \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
  -- Returns false in any other cases.\n-- Examples\n-- >>> any_int(5, 2, 7)\n-- true\n\
  -- >>> any_int(3, 2, 2)\n-- false\n-- >>> any_int(3, -2, 1)\n-- true\n-- >>> any_int(3.6,\
  \ -2.2, 2)\n-- false\nlocal function any_int(x, y, z)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = any_int\n\
  \    lu.assertEquals(candidate(2, 3, 1), true)\n    lu.assertEquals(candidate(2.5,\
  \ 2, 3), false)\n    lu.assertEquals(candidate(1.5, 5, 3.5), false)\n    lu.assertEquals(candidate(2,\
  \ 6, 2), false)\n    lu.assertEquals(candidate(4, 2, 2), true)\n    lu.assertEquals(candidate(2.2,\
  \ 2.2, 2.2), false)\n    lu.assertEquals(candidate(-4, 6, 2), true)\n    lu.assertEquals(candidate(2,\
  \ 1, 1), true)\n    lu.assertEquals(candidate(3, 4, 7), true)\n    lu.assertEquals(candidate(3.0,\
  \ 4, 7), false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  if type(x) == 'number' and type(y) == 'number' and type(z) == 'number'\
    \ then\n    return x == y + z\n  else\n    return false\n  end\nend", "  if type(x)\
    \ == 'number' and type(y) == 'number' and type(z) == 'number' then\n    return\
    \ x == y + z\n  else\n    return false\n  end\nend", "  if type(x) == 'number'\
    \ and type(y) == 'number' and type(z) == 'number' then\n    return x == y + z\n\
    \  else\n    return false\n  end\nend", "  if x == y or x == z or y == z then\n\
    \    return true\n  else\n    return false\n  end\nend", "  if x == y then\n \
    \   return z == x\n  elseif x == z then\n    return y == z\n  else\n    return\
    \ false\n  end\nend", "  if x == y then\n    return z == x\n  elseif x == z then\n\
    \    return y == z\n  else\n    return false\n  end\nend", "  if x ~= nil and\
    \ y ~= nil and z ~= nil then\n    if type(x) == 'number' and type(y) == 'number'\
    \ and type(z) == 'number' then\n      return (x+y+z) == z\n    else\n      return\
    \ false\n    end\n  else\n    return false\n  end\nend", "  if type(x) == 'number'\
    \ and type(y) == 'number' and type(z) == 'number' then\n    return x == y + z\n\
    \  else\n    return false\n  end\nend", "  if x == y then\n    return true\n \
    \ elseif x == z then\n    return true\n  elseif y == z then\n    return true\n\
    \  else\n    return false\n  end\nend", "  if x ~= nil and y ~= nil and z ~= nil\
    \ then\n    return x == y + z\n  else\n    return false\n  end\nend", "  if x\
    \ ~= nil and y ~= nil and z ~= nil then\n    if type(x) == \"number\" and type(y)\
    \ == \"number\" and type(z) == \"number\" then\n      return (x+y+z) == z\n  \
    \  else\n      return false\n    end\n  else\n    return false\n  end\nend", " \
    \ if x ~= nil and y ~= nil and z ~= nil then\n    if type(x) == \"number\" and\
    \ type(y) == \"number\" and type(z) == \"number\" then\n      return (x+y+z ==\
    \ sum(x, y, z))\n    end\n  end\n  return false\nend", "  if type(x) == 'number'\
    \ and type(y) == 'number' and type(z) == 'number' then\n    return x == y + z\n\
    \  else\n    return false\n  end\nend", "  if x == y or x == z or y == z then\n\
    \    return true\n  end\n  return false\nend", "  if x ~= nil then\n    if y ~=\
    \ nil then\n      if z ~= nil then\n        return (x == y and z == z) or any_int(x,\
    \ y, z - 1)\n      else\n        return (x == y)\n      end\n    else\n      return\
    \ true\n    end\n  else\n    return false\n  end\nend", "  if type(y) == 'number'\
    \ and type(z) == 'number' then\n    return x == y or x == z\n  elseif type(y)\
    \ == 'table' then\n    for _, v in pairs(y) do\n      if any_int(x, y, v) then\n\
    \        return true\n      end\n    end\n    return false\n  else\n    return\
    \ false\n  end\nend", "  if x ~= nil and y ~= nil and z ~= nil then\n    if type(x)\
    \ == 'number' and type(y) == 'number' and type(z) == 'number' then\n      return\
    \ ((x + y) == z) or ((x - y) == z) or ((x * y) == z) or ((x / y) == z) or ((x\
    \ % y) == z)\n    end\n  end\n  return false\nend", "  local sum = x+y+z\n  return\
    \ sum == x or sum == y or sum == z\nend", "  if x == y then\n    return true\n\
    \  elseif x == z or y == z then\n    return false\n  else\n    return true\n \
    \ end\nend", "  if type(x) == \"number\" and type(y) == \"number\" and type(z)\
    \ == \"number\" then\n    return x == y + z\n  else\n    return false\n  end\n\
    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

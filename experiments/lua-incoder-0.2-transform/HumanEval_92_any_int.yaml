name: HumanEval_92_any_int
language: lua
prompt: "-- Create a function that takes 3 numbers.\n-- Returns true if one of the\
  \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
  -- Returns false in any other cases.\n-- Examples\n-- >>> any_int(5, 2, 7)\n-- true\n\
  -- >>> any_int(3, 2, 2)\n-- false\n-- >>> any_int(3, -2, 1)\n-- true\n-- >>> any_int(3.6,\
  \ -2.2, 2)\n-- false\nlocal function any_int(x, y, z)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = any_int\n\
  \    lu.assertEquals(candidate(2, 3, 1), true)\n    lu.assertEquals(candidate(2.5,\
  \ 2, 3), false)\n    lu.assertEquals(candidate(1.5, 5, 3.5), false)\n    lu.assertEquals(candidate(2,\
  \ 6, 2), false)\n    lu.assertEquals(candidate(4, 2, 2), true)\n    lu.assertEquals(candidate(2.2,\
  \ 2.2, 2.2), false)\n    lu.assertEquals(candidate(-4, 6, 2), true)\n    lu.assertEquals(candidate(2,\
  \ 1, 1), true)\n    lu.assertEquals(candidate(3, 4, 7), true)\n    lu.assertEquals(candidate(3.0,\
  \ 4, 7), false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  if type(x) == 'number' and type(y) == 'number' and type(z) == 'number'\
    \ then\n    return x == y + z\n  else\n    return false\n  end\nend", "  if type(x)\
    \ == 'number' and type(y) == 'number' and type(z) == 'number' then\n    return\
    \ x == y + z\n  else\n    return false\n  end\nend", "  if type(x) == 'number'\
    \ and type(y) == 'number' and type(z) == 'number' then\n    return x == y + z\n\
    \  else\n    return false\n  end\nend", "  if x == y or x == z or y == z then\n\
    \    return true\n  else\n    return false\n  end\nend", "  if x == y then\n \
    \   return z == x\n  elseif x == z then\n    return y == z\n  else\n    return\
    \ false\n  end\nend", "  if x == y then\n    return z == x\n  elseif x == z then\n\
    \    return y == z\n  else\n    return false\n  end\nend", "  if x ~= nil and\
    \ y ~= nil and z ~= nil then\n    if type(x) == 'number' and type(y) == 'number'\
    \ and type(z) == 'number' then\n      return (x+y+z) == z\n    else\n      return\
    \ false\n    end\n  else\n    return false\n  end\nend", "  if type(x) == 'number'\
    \ and type(y) == 'number' and type(z) == 'number' then\n    return x == y + z\n\
    \  else\n    return false\n  end\nend", "  if x == y then\n    return true\n \
    \ elseif x == z then\n    return true\n  elseif y == z then\n    return true\n\
    \  else\n    return false\n  end\nend", "  if x ~= nil and y ~= nil and z ~= nil\
    \ then\n    return x == y + z\n  else\n    return false\n  end\nend", "  if x\
    \ ~= nil and y ~= nil and z ~= nil then\n    if type(x) == \"number\" and type(y)\
    \ == \"number\" and type(z) == \"number\" then\n      return (x+y+z) == z\n  \
    \  else\n      return false\n    end\n  else\n    return false\n  end\nend", " \
    \ if x ~= nil and y ~= nil and z ~= nil then\n    if type(x) == \"number\" and\
    \ type(y) == \"number\" and type(z) == \"number\" then\n      return (x+y+z ==\
    \ sum(x, y, z))\n    end\n  end\n  return false\nend", "  if type(x) == 'number'\
    \ and type(y) == 'number' and type(z) == 'number' then\n    return x == y + z\n\
    \  else\n    return false\n  end\nend", "  if x == y or x == z or y == z then\n\
    \    return true\n  end\n  return false\nend", "  if x ~= nil then\n    if y ~=\
    \ nil then\n      if z ~= nil then\n        return (x == y and z == z) or any_int(x,\
    \ y, z - 1)\n      else\n        return (x == y)\n      end\n    else\n      return\
    \ true\n    end\n  else\n    return false\n  end\nend", "  if type(y) == 'number'\
    \ and type(z) == 'number' then\n    return x == y or x == z\n  elseif type(y)\
    \ == 'table' then\n    for _, v in pairs(y) do\n      if any_int(x, y, v) then\n\
    \        return true\n      end\n    end\n    return false\n  else\n    return\
    \ false\n  end\nend", "  if x ~= nil and y ~= nil and z ~= nil then\n    if type(x)\
    \ == 'number' and type(y) == 'number' and type(z) == 'number' then\n      return\
    \ ((x + y) == z) or ((x - y) == z) or ((x * y) == z) or ((x / y) == z) or ((x\
    \ % y) == z)\n    end\n  end\n  return false\nend", "  local sum = x+y+z\n  return\
    \ sum == x or sum == y or sum == z\nend", "  if x == y then\n    return true\n\
    \  elseif x == z or y == z then\n    return false\n  else\n    return true\n \
    \ end\nend", "  if type(x) == \"number\" and type(y) == \"number\" and type(z)\
    \ == \"number\" then\n    return x == y + z\n  else\n    return false\n  end\n\
    end", "  if x == y then\n    return true\n  elseif x == z then\n    return true\n\
    \  elseif y == z then\n    return true\n  else\n    return false\n  end\nend",
  "  if type(x) == \"number\" and type(y) == \"number\" and type(z) == \"number\"\
    \ then\n    return x == y + z\n  else\n    return false\n  end\nend", "  if x\
    \ == y then\n    return true\n  elseif x == z then\n    return true\n  elseif\
    \ y == z then\n    return true\n  else\n    return false\n  end\nend", "  if type(y)\
    \ == 'number' and type(z) == 'number' then\n    return x == y or x == z\n  else\n\
    \    return false\n  end\nend", "  if type(x) == 'number' and type(y) == 'number'\
    \ and type(z) == 'number' then\n    return x == y + z\n  else\n    return false\n\
    \  end\nend", "  if x ~= nil then\n    if y ~= nil then\n      if z ~= nil then\n\
    \        return (x == y and y == z and type(z) == 'number')\n      else\n    \
    \    return (x == y)\n      end\n    else\n      return true\n    end\n  else\n\
    \    return false\n  end\nend", "  if x == y then\n    return z == x\n  elseif\
    \ x == z then\n    return y == z\n  elseif y == z then\n    return x == y\n  else\n\
    \    return false\n  end\nend", "  if x ~= nil then\n    if y ~= nil then\n  \
    \    if z ~= nil then\n        return (x == y and y == z and type(z) == 'number')\n\
    \      else\n        return (x == y and y == nil and type(y) == 'number')\n  \
    \    end\n    else\n      return (x == y and type(x) == 'number')\n    end\n \
    \ else\n    if y ~= nil then\n      return (y == nil and type(y) == 'number')\n\
    \    else\n      return (type(x) == 'number')\n    end\n  end\nend", "  if type(x)\
    \ == 'number' and type(y) == 'number' and type(z) == 'number' then\n    return\
    \ x == y + z\n  else\n    return false\n  end\nend", "  if type(x) == 'number'\
    \ and type(y) == 'number' and type(z) == 'number' then\n    return x == y + z\n\
    \  else\n    return false\n  end\nend", "  if x == y then\n    if x == z then\n\
    \      return true\n    end\n    return false\n  end\n  if x ~= z then\n    return\
    \ false\n  end\n  return true\nend", "  if x ~= nil and y ~= nil and z ~= nil\
    \ then\n    if x == y and x == z then\n      return true\n    else\n      return\
    \ false\n    end\n  else\n    return false\n  end\nend", "  if type(x) == 'number'\
    \ and type(y) == 'number' and type(z) == 'number' then\n    return x == y + z\n\
    \  else\n    return false\n  end\nend", "  if type(x) == 'number' and type(y)\
    \ == 'number' and type(z) == 'number' then\n    return x == y + z\n  else\n  \
    \  return false\n  end\nend", "  if x ~= nil and y ~= nil and z ~= nil then\n\
    \    if x == y and x == z then\n      return true\n    end\n  end\n  return false\n\
    end", "  if x == y then\n    if x == z then\n      return true\n    end\n    return\
    \ false\n  end\n  if x < y then\n    if x < z then\n      return true\n    end\n\
    \    return false\n  end\n  if y < x then\n    if y < z then\n      return true\n\
    \    end\n    return false\n  end\n  return true\nend", "  if type(x) == \"number\"\
    \ and type(y) == \"number\" and type(z) == \"number\" then\n    return x == y\
    \ + z\n  else\n    return false\n  end\nend", "  if type(x) == 'number' and type(y)\
    \ == 'number' and type(z) == 'number' then\n    return x == y + z\n  else\n  \
    \  return false\n  end\nend", "  if type(x) == 'number' and type(y) == 'number'\
    \ and type(z) == 'number' then\n    return x == y + z\n  else\n    return false\n\
    \  end\nend", "  if type(x) == 'number' and type(y) == 'number' and type(z) ==\
    \ 'number' then\n    return x == y + z\n  else\n    return false\n  end\nend",
  "  if x ~= nil then\n    if y ~= nil then\n      if z ~= nil then\n        return\
    \ (x == y and y == z and type(z) == 'number')\n      else\n        return (x ==\
    \ y and y == nil and type(y) == 'number')\n      end\n    else\n      return (x\
    \ == y and type(x) == 'number')\n    end\n  else\n    if y ~= nil then\n     \
    \ return (y == nil and type(y) == 'number')\n    else\n      return (type(x) ==\
    \ 'number')\n    end\n  end\nend", "  if x ~= nil and y ~= nil and z ~= nil then\n\
    \    return x == y + z\n  else\n    return false\n  end\nend", "  if x == y then\n\
    \    if x == z then\n      return true\n    end\n    return false\n  end\n  if\
    \ x < y then\n    if x < z then\n      return true\n    end\n    return false\n\
    \  end\n  if y < x then\n    if y < z then\n      return true\n    end\n    return\
    \ false\n  end\n  return true\nend", "  if x ~= nil and y ~= nil and z ~= nil\
    \ then\n    if type(x) == 'number' and type(y) == 'number' and type(z) == 'number'\
    \ then\n      if x == y and x == z and x ~= 0 then\n        return true\n    \
    \  else\n        return false\n      end\n    end\n  end\n  return false\nend",
  "  if x ~= nil and y ~= nil and z ~= nil then\n    if type(x) == \"number\" and\
    \ type(y) == \"number\" and type(z) == \"number\" then\n      return (x+y+z) ==\
    \ z\n    end\n  end\n  return false\nend", "  if x ~= nil then\n    if y ~= nil\
    \ then\n      if z ~= nil then\n        return (x == y and y == z and type(z)\
    \ == 'number')\n      else\n        return (x == y)\n      end\n    else\n   \
    \   return true\n    end\n  else\n    return false\n  end\nend", "  if x == y\
    \ then\n    return z == x and type(z) == 'number'\n  elseif x < y then\n    return\
    \ any_int(y, x, z)\n  else\n    return any_int(x, y, z) or any_int(y, x, z)\n\
    \  end\nend", "  if x ~= nil and y ~= nil and z ~= nil then\n    if type(x) ==\
    \ 'number' and type(y) == 'number' and type(z) == 'number' then\n      -- The\
    \ numbers are all integers\n      if x == y and x == z then\n        return true\n\
    \      else\n        return false\n      end\n    end\n  end\nend", "  if type(x)\
    \ == 'number' and type(y) == 'number' and type(z) == 'number' then\n    return\
    \ x == y + z\n  else\n    return false\n  end\nend", "  if type(x) == 'number'\
    \ and type(y) == 'number' and type(z) == 'number' then\n    return x == y + z\n\
    \  else\n    return false\n  end\nend", "  if type(y) == 'number' and type(z)\
    \ == 'number' then\n    return x == y or x == z\n  elseif type(y) == 'table' then\n\
    \    for _, v in pairs(y) do\n      if any_int(x, y, v) then\n        return true\n\
    \      end\n    end\n  elseif type(z) == 'table' then\n    for _, v in pairs(z)\
    \ do\n      if any_int(x, y, v) then\n        return true\n      end\n    end\n\
    \  end\n  return false\nend", "  if type(x) == 'number' and type(y) == 'number'\
    \ and type(z) == 'number' then\n    return x == y + z\n  else\n    return false\n\
    \  end\nend", "  if x == y or x == z or y == z then\n    return true\n  else\n\
    \    return false\n  end\nend", "  if type(x) == 'number' and type(y) == 'number'\
    \ and type(z) == 'number' then\n    return x == y + z\n  else\n    return false\n\
    \  end\nend", "  if type(y) == 'number' and type(z) == 'number' then\n    return\
    \ x == y or x == z\n  else\n    return false\n  end\nend", "  if x ~= nil then\n\
    \    if y ~= nil then\n      if z ~= nil then\n        return (x == y and y ==\
    \ z and type(z) == 'number')\n      else\n        return (x == y and y == nil\
    \ and type(y) == 'number')\n      end\n    else\n      return (x == nil and type(y)\
    \ == 'number')\n    end\n  else\n    if y ~= nil then\n      return (y == nil\
    \ and type(z) == 'number')\n    else\n      return (y == nil and type(y) == 'number')\n\
    \    end\n  end\nend", "  if x ~= nil and y ~= nil and z ~= nil then\n    return\
    \ ((type(x) == \"number\" and type(y) == \"number\" and type(z) == \"number\"\
    ) and\n            ((x == y and x == z) or (x > y and x > z) or (x < y and x <\
    \ z) or (x == y and y == z)))\n  else\n    return false\n  end\nend", "  if x\
    \ == y then\n    return z == x\n  elseif x == z then\n    return y == z\n  else\n\
    \    return false\n  end\nend", "  if x ~= nil and y ~= nil and z ~= nil then\n\
    \    if type(x) == 'number' and type(y) == 'number' and type(z) == 'number' then\n\
    \      return (x == y and x == z) or (x ~= y and x ~= z)\n    end\n  end\n  return\
    \ false\nend", "  if x == y or x == z or y == z then\n    return true\n  else\n\
    \    return false\n  end\nend", "  local sum = x+y+z\n  return sum == x or sum\
    \ == y or sum == z\nend", "  if x == y then\n    return z == x or z == y\n  elseif\
    \ x < y then\n    return any_int(y, x, z)\n  else\n    return any_int(x, y, z)\
    \ or any_int(y, x, z)\n  end\nend", "  if type(y) == 'number' and type(z) == 'number'\
    \ then\n    return x == y or x == z\n  else\n    return false\n  end\nend", " \
    \ if type(x) == 'number' and type(y) == 'number' and type(z) == 'number' then\n\
    \    return x == y + z\n  else\n    return false\n  end\nend", "  if x == y then\n\
    \    return true\n  elseif x == z then\n    return true\n  elseif y == z then\n\
    \    return true\n  else\n    return false\n  end\nend", "  if type(x) == 'number'\
    \ and type(y) == 'number' and type(z) == 'number' then\n    return x == y + z\n\
    \  else\n    return false\n  end\nend", "  if type(x) == \"number\" and type(y)\
    \ == \"number\" and type(z) == \"number\" then\n    return x == y + z\n  else\n\
    \    return false\n  end\nend", "  if x ~= nil then\n    if y ~= nil then\n  \
    \    if z ~= nil then\n        return (x == y and y == z and type(z) == 'number')\n\
    \      else\n        return (x == y and y == z and type(z) == 'table')\n     \
    \ end\n    else\n      return (x == y and type(z) == 'table')\n    end\n  else\n\
    \    if y ~= nil then\n      return (y == z and type(z) == 'number')\n    else\n\
    \      return (type(z) == 'table')\n    end\n  end\nend", "  if x == y then\n\
    \    return z == x\n  elseif x == z then\n    return y == z\n  else\n    return\
    \ false\n  end\nend", "  if type(y) == 'number' and type(z) == 'number' then\n\
    \    return x == y or x == z\n  elseif type(y) == 'table' and type(z) == 'table'\
    \ then\n    for _, v in ipairs(y) do\n      if any_int(x, y, v) then\n       \
    \ return true\n      end\n    end\n    return false\n  else\n    return false\n\
    \  end\nend", "  if type(x) == 'number' and type(y) == 'number' and type(z) ==\
    \ 'number' then\n    return x == y + z\n  else\n    return false\n  end\nend",
  "  if type(x) == \"number\" and type(y) == \"number\" and type(z) == \"number\"\
    \ then\n    return x == y + z\n  else\n    return false\n  end\nend", "  if x\
    \ ~= nil and y ~= nil and z ~= nil then\n    return (x == y and type(y) == 'number'\
    \ and type(z) == 'number' and type(z) == 'number')\n  else\n    return false\n\
    \  end\nend", "  if x == y then\n    return z == x\n  elseif x == z then\n   \
    \ return y == z\n  else\n    return false\n  end\nend", "  if x ~= nil and y ~=\
    \ nil and z ~= nil then\n    if x == y and x == z then\n      return true\n  \
    \  end\n  end\n  return false\nend", "  if type(x) == 'number' and type(y) ==\
    \ 'number' and type(z) == 'number' then\n    return x == y + z\n  else\n    return\
    \ false\n  end\nend", "  if x == y then\n    return z == x or z == y\n  elseif\
    \ x < y then\n    return any_int(y, x, z)\n  else\n    return any_int(x, y, z)\
    \ or any_int(y, x, z)\n  end\nend", "  if x ~= nil and y ~= nil and z ~= nil then\n\
    \    if type(x) == 'number' and type(y) == 'number' and type(z) == 'number' then\n\
    \      return x == y + z\n    else\n      return false\n    end\n  else\n    return\
    \ false\n  end\nend", "  if x == y then\n    return z == x and type(z) == 'number'\n\
    \  else\n    return z == x and type(z) == 'number' or z == y and type(z) == 'number'\n\
    \  end\nend", "  if x == y then\n    return true\n  elseif x == z then\n    return\
    \ true\n  elseif y == z then\n    return true\n  else\n    return false\n  end\n\
    end", "  if x == y or x == z or y == z then\n    return true\n  else\n    return\
    \ false\n  end\nend", "  if x ~= nil and y ~= nil and z ~= nil then\n    return\
    \ ((type(x) == \"number\" and type(y) == \"number\" and type(z) == \"number\"\
    ) and\n            math.floor(x) == math.floor(y) and math.floor(x) == math.floor(z)\n\
    \           )\n  else\n    return false\n  end\nend", "  if type(y) == 'number'\
    \ and type(z) == 'number' then\n    return x == y or x == z\n  else\n    return\
    \ false\n  end\nend", "  if x == y then\n    if x == z then\n      return true\n\
    \    end\n    return false\n  end\n  if x < y then\n    if x < z then\n      return\
    \ true\n    end\n    return false\n  end\n  if y < x then\n    if y < z then\n\
    \      return true\n    end\n    return false\n  end\n  return true\nend", " \
    \ if x == y then\n    return z == x\n  elseif x < y then\n    return any_int(y,\
    \ x, z)\n  else\n    return any_int(x, y, z) or any_int(y, x, z)\n  end\nend",
  "  if type(x) == 'number' and type(y) == 'number' and type(z) == 'number' then\n\
    \    return x == y + z\n  else\n    return false\n  end\nend", "  if x ~= nil\
    \ and y ~= nil and z ~= nil then\n    if type(x) == 'number' and type(y) == 'number'\
    \ and type(z) == 'number' then\n      return ((x + y) == z) or ((x - y) == z)\
    \ or ((x * y) == z) or ((x / y) == z)\n    end\n  end\n  return false\nend", " \
    \ if x == y then\n    return z == x\n  elseif x == z then\n    return y == z\n\
    \  else\n    return false\n  end\nend", "  if x ~= nil then\n    if y ~= nil then\n\
    \      if z ~= nil then\n        return (x == y and y == z and type(z) == 'number')\n\
    \      else\n        return (x == y and type(y) == 'number')\n      end\n    else\n\
    \      return true\n    end\n  else\n    return false\n  end\nend", "  if type(x)\
    \ == 'number' and type(y) == 'number' and type(z) == 'number' then\n    return\
    \ x == y + z\n  else\n    return false\n  end\nend", "  if x == y then\n    return\
    \ true\n  elseif x == z or y == z then\n    return false\n  else\n    return true\n\
    \  end\nend", "  if x ~= nil and y ~= nil and z ~= nil then\n    if type(x) ==\
    \ 'number' and type(y) == 'number' and type(z) == 'number' then\n      return\
    \ (x+y+z) == z\n    end\n  end\n  return false\nend", "  if x ~= nil and y ~=\
    \ nil and z ~= nil then\n    return x == y + z\n  else\n    return false\n  end\n\
    end", "  if x ~= nil and y ~= nil and z ~= nil then\n    return x == y + z\n \
    \ else\n    return false\n  end\nend", "  if x == y then\n    return true\n  elseif\
    \ x == z then\n    return false\n  elseif y == z then\n    return true\n  else\n\
    \    return false\n  end\nend", "  if type(x) == 'number' and type(y) == 'number'\
    \ and type(z) == 'number' then\n    return x == y + z\n  else\n    return false\n\
    \  end\nend", "  if x == y or x == z or y == z then\n    return true\n  end\n\
    \  return false\nend", "  if x == y then\n    if x == z then\n      return true\n\
    \    end\n    return false\n  end\n  return true\nend", "  if x == y then\n  \
    \  return z == x\n  elseif x < y then\n    return any_int(y, x, z)\n  else\n \
    \   return any_int(x, y, z) or any_int(y, x, z)\n  end\nend", "  if type(x) ==\
    \ 'number' and type(y) == 'number' and type(z) == 'number' then\n    return x\
    \ == y + z\n  else\n    return false\n  end\nend", "  if type(x) == 'number' and\
    \ type(y) == 'number' and type(z) == 'number' then\n    return x == y + z\n  else\n\
    \    return false\n  end\nend", "  if x == y or x == z or y == z then\n    return\
    \ true\n  else\n    return false\n  end\nend", "  if x == y then\n    return z\
    \ == x\n  elseif x == z then\n    return y == z\n  else\n    return false\n  end\n\
    end", "  if x ~= nil and y ~= nil and z ~= nil then\n    if type(x) == \"number\"\
    \ and type(y) == \"number\" and type(z) == \"number\" then\n      return ((x +\
    \ y + z) == (x * y * z))\n    end\n  end\n  return false\nend", "  if type(y)\
    \ == 'number' and type(z) == 'number' then\n    return x == y + z\n  elseif type(y)\
    \ == 'number' then\n    return x == y\n  elseif type(z) == 'number' then\n   \
    \ return x == z\n  else\n    return false\n  end\nend", "  if type(y) == 'number'\
    \ and type(z) == 'number' then\n    return x == y or x == z\n  else\n    return\
    \ false\n  end\nend", "  if type(x) == 'number' and type(y) == 'number' and type(z)\
    \ == 'number' then\n    return x == y + z\n  else\n    return false\n  end\nend",
  "  if type(x) == 'number' and type(y) == 'number' and type(z) == 'number' then\n\
    \    return x == y + z\n  else\n    return false\n  end\nend", "  local a, b,\
    \ c = x, y, z\n  local sum = a + b + c\n  return sum == x or sum == y or sum ==\
    \ z\nend", "  -- Check that the numbers are integers\n  if x ~= x or y ~= y or\
    \ z ~= z then\n    return false\n  end", "  if x ~= nil and y ~= nil and z ~=\
    \ nil then\n    if type(x) == 'number' and type(y) == 'number' and type(z) ==\
    \ 'number' then\n      return (x+y+z == 0 or x+y+z == -2 or x+y+z == -3 or x+y+z\
    \ == -4 or x+y+z == -5 or x+y+z == -6 or x+y+z == -7 or x+y+z == -8 or x+y+z ==\
    \ -9 or x+y+z == -10 or x+y+z == -11 or x+y+z == -12 or x+y+z == -13 or x+y+z\
    \ == -14 or x+y+z == -15 or x+y+z == -16 or x+y+z == -17 or x+y+z == -18 or x+y+z\
    \ == -19 or x+y+z == -20 or x+y+z == -21 or x+y+z == -22 or x+y+z == -23 or x+y+z\
    \ == -24 or x+y+z == -25 or x+y+z == -26 or x+y+z == -27 or x+y+z == -28 or x+y+z\
    \ == -29 or x+y+z == -30 or x+y+z == -31 or x+y+z == -32 or x+y+z == -33 or x+y+z\
    \ == -34 or x+y+z == -35 or x+y+z == -36 or x+y+z == -37 or x+y+z == -38 or x+y+z\
    \ == -39 or x+y+z == -40 or x+y+z == -41 or x+y+z == -42 or x+y+z == -43 or x+y+z\
    \ == -44 or x+y+z == -45 or x+y+z == -46 or x+y+z == -47 or x+y+z == -48 or x+y+z\
    \ == -49 or x+y+z == -50 or x+y+z == -51 or x+y+z == -52 or x+y+z == -53 or x+y+z\
    \ == -54 or x+y+z == -55 or x+y+z == -56 or x+y+z == -57 or x+y+z == -58 or x+y+z\
    \ == -59 or x+y+z == -60 or x+y+z == -61 or x+y+z == -62 or x+y+z == -63 or x+y+z\
    \ == -64 or x+y+z == -65 or x+y+z == -66 or x+y+z == -67 or x+y+z == -68 or x+y+z\
    \ == -69 or x+y+z == -70 or x+y+z == -71 or x+y+z == -72 or x+y+z == ", "  if\
    \ x ~= nil and y ~= nil and z ~= nil then\n    if type(x) == 'number' and type(y)\
    \ == 'number' and type(z) == 'number' then\n      return ((x + y) == z) or ((x\
    \ - y) == z) or ((x * y) == z) or ((x / y) == z) or ((x % y) == z) or ((x ^ y)\
    \ == z)\n    end\n  end\n  return false\nend", "  if type(x) == \"number\" and\
    \ type(y) == \"number\" and type(z) == \"number\" then\n    return x == y + z\n\
    \  else\n    return false\n  end\nend", "  if type(x) == 'number' and type(y)\
    \ == 'number' and type(z) == 'number' then\n    return x == y + z\n  else\n  \
    \  return false\n  end\nend", "  if x ~= nil and y ~= nil and z ~= nil then\n\
    \    return ((type(x) == \"number\" and type(y) == \"number\" and type(z) == \"\
    number\") and\n            ((x == y and x == z) or (x > y and x > z) or (x < y\
    \ and x < z)))\n  else\n    return false\n  end\nend", "  if x == y or x == z\
    \ or y == z then\n    return true\n  else\n    return false\n  end\nend", "  if\
    \ x == y then\n    return true\n  elseif x == z then\n    return true\n  elseif\
    \ y == z then\n    return true\n  else\n    return false\n  end\nend", "  if x\
    \ ~= nil and y ~= nil and z ~= nil then\n    if x == y and x == z then\n     \
    \ return true\n    end\n  end\n  return false\nend", "  if type(x) == 'number'\
    \ and type(y) == 'number' and type(z) == 'number' then\n    return x == y + z\n\
    \  else\n    return false\n  end\nend", "  if type(x) == 'number' and type(y)\
    \ == 'number' and type(z) == 'number' then\n    return x == y + z\n  else\n  \
    \  return false\n  end\nend", "  if x ~= nil and y ~= nil and z ~= nil then\n\
    \    return ((type(x) == 'number' and type(y) == 'number' and type(z) == 'number')\
    \ and\n            ((x == y and z == z) or (x == z and y == z) or (y == z and\
    \ x == x)))\n  else\n    return false\n  end\nend", "  if type(x) == 'number'\
    \ and type(y) == 'number' and type(z) == 'number' then\n    return x == y + z\n\
    \  else\n    return false\n  end\nend", "  if x == y then\n    return true\n \
    \ elseif x == z then\n    return true\n  elseif y == z then\n    return true\n\
    \  else\n    return false\n  end\nend", "  if x ~= nil and y ~= nil and z ~= nil\
    \ then\n    if type(x) == \"number\" and type(y) == \"number\" and type(z) ==\
    \ \"number\" then\n      return (x+y+z) == z\n    end\n  end\n  return false\n\
    end", "  if type(x) == 'number' and type(y) == 'number' and type(z) == 'number'\
    \ then\n    return x == y + z\n  else\n    return false\n  end\nend", "  if type(x)\
    \ == \"number\" and type(y) == \"number\" and type(z) == \"number\" then\n   \
    \ return x == y + z\n  else\n    return false\n  end\nend", "  if x == y then\n\
    \    return z == x\n  elseif x == z then\n    return y == z\n  else\n    return\
    \ false\n  end\nend", "  if x ~= nil and y ~= nil and z ~= nil then\n    return\
    \ ((type(x) == \"number\" and type(y) == \"number\" and type(z) == \"number\"\
    ) and\n            ((x == y and x == z) or (x ~= y and x ~= z)))\n  else\n   \
    \ return false\n  end\nend", "  if x == y or x == z or y == z then\n    return\
    \ true\n  end\n  return false\nend", "  if type(x) == 'number' and type(y) ==\
    \ 'number' and type(z) == 'number' then\n    return x == y + z\n  else\n    return\
    \ false\n  end\nend", "  local xint, yint, zint = tonumber(x), tonumber(y), tonumber(z)\n\
    \  if xint == nil or yint == nil or zint == nil then\n    return false\n  end\n\
    \  if xint == yint and xint == zint then\n    return true\n  end\n  if xint >\
    \ yint then\n    return any_int(xint, y, z)\n  elseif yint > zint then\n    return\
    \ any_int(x, yint, z)\n  else\n    return any_int(xint, yint, zint)\n  end\nend",
  "  if type(x) == 'number' and type(y) == 'number' and type(z) == 'number' then\n\
    \    return x == y + z\n  else\n    return false\n  end\nend", "  if type(x) ==\
    \ 'number' and type(y) == 'number' and type(z) == 'number' then\n    return x\
    \ == y + z\n  else\n    return false\n  end\nend", "  if x == y then\n    if x\
    \ == z then\n      return true\n    end\n    return false\n  end\n  return true\n\
    end", "  if type(x) == 'number' and type(y) == 'number' and type(z) == 'number'\
    \ then\n    return x == y + z\n  else\n    return false\n  end\nend", "  if x\
    \ == y then\n    return true\n  elseif x == z then\n    return true\n  elseif\
    \ y == z then\n    return true\n  else\n    return false\n  end\nend", "  if type(x)\
    \ == 'number' and type(y) == 'number' and type(z) == 'number' then\n    return\
    \ x == y + z\n  else\n    return false\n  end\nend", "  if type(x) == 'number'\
    \ and type(y) == 'number' and type(z) == 'number' then\n    return x == y + z\n\
    \  else\n    return false\n  end\nend", "  if x == y then\n    return z == x\n\
    \  elseif x == z then\n    return y == z\n  else\n    return false\n  end\nend",
  "  if x == y then\n    return z == x\n  elseif x == z then\n    return y == z\n\
    \  else\n    return false\n  end\nend", "  if type(x) == \"number\" and type(y)\
    \ == \"number\" and type(z) == \"number\" then\n    return x == y + z\n  else\n\
    \    return false\n  end\nend", "  if x == y then\n    return z == x\n  elseif\
    \ x == z then\n    return y == z\n  else\n    return false\n  end\nend", "  if\
    \ x ~= nil and y ~= nil and z ~= nil then\n    if type(x) == 'number' and type(y)\
    \ == 'number' and type(z) == 'number' then\n      return (x+y+z) == z\n    else\n\
    \      return false\n    end\n  else\n    return false\n  end\nend", "  if type(x)\
    \ == \"number\" and type(y) == \"number\" and type(z) == \"number\" then\n   \
    \ return x == y + z\n  else\n    return false\n  end\nend", "  if x ~= nil and\
    \ y ~= nil and z ~= nil then\n    if type(x) == 'number' and type(y) == 'number'\
    \ and type(z) == 'number' then\n      return ((x == y and x == z) or (x == z and\
    \ y == z)) and type(x) == 'integer'\n    end\n  end\n  return false\nend", " \
    \ if x ~= nil then\n    if y ~= nil then\n      if z ~= nil then\n        return\
    \ (x == y and z == z) or (x == z and y == y)\n      else\n        return (x ==\
    \ y)\n      end\n    else\n      return (x == z)\n    end\n  else\n    return\
    \ (y == z)\n  end\nend", "  if type(x) == 'number' and type(y) == 'number' and\
    \ type(z) == 'number' then\n    return x == y + z\n  else\n    return false\n\
    \  end\nend", "  if x ~= nil then\n    if y ~= nil then\n      if z ~= nil then\n\
    \        return (x == y and y == z and type(z) == 'number')\n      else\n    \
    \    return (x == y and y == z and type(z) == 'table')\n      end\n    else\n\
    \      return (x == y and type(z) == 'table')\n    end\n  else\n    if y ~= nil\
    \ then\n      return (y == z and type(z) == 'table')\n    else\n      return (type(z)\
    \ == 'table')\n    end\n  end\nend", "  if x == y or x == z or y == z then\n \
    \   return true\n  else\n    return false\n  end\nend", "  if type(x) == 'number'\
    \ and type(y) == 'number' and type(z) == 'number' then\n    return x == y + z\n\
    \  else\n    return false\n  end\nend", "  if type(y) == 'number' and type(z)\
    \ == 'number' then\n    return x == y or x == z\n  else\n    return false\n  end\n\
    end", "  if type(y) == 'number' and type(z) == 'number' then\n    return x ==\
    \ y or x == z\n  else\n    return false\n  end\nend", "  if x ~= nil and y ~=\
    \ nil and z ~= nil then\n    if type(x) == 'number' and type(y) == 'number' and\
    \ type(z) == 'number' then\n      return x == y + z\n    end\n  end\n  return\
    \ false\nend", "  if x ~= nil and y ~= nil and z ~= nil then\n    if type(x) ==\
    \ \"number\" and type(y) == \"number\" and type(z) == \"number\" then\n      if\
    \ x == y and x == z and x ~= 0 then\n        return true\n      else\n       \
    \ return false\n      end\n    end\n  end\nend", "  if x ~= nil and y ~= nil and\
    \ z ~= nil then\n    return ((type(x) == 'number' and type(y) == 'number' and\
    \ type(z) == 'number') and\n            ((x == y and x == z) or (x ~= y and x\
    \ ~= z)))\n  else\n    return false\n  end\nend", "  local xint, yint, zint =\
    \ tonumber(x), tonumber(y), tonumber(z)\n  if xint == nil then return false end\n\
    \  if yint == nil then return xint == zint end\n  if zint == nil then return xint\
    \ == yint end\n  return xint == yint and xint == zint\nend", "  if x == y or x\
    \ == z or y == z then\n    return true\n  end\n  return false\nend", "  if type(x)\
    \ == 'number' and type(y) == 'number' and type(z) == 'number' then\n    return\
    \ x == y + z\n  else\n    return false\n  end\nend", "  if x ~= nil and y ~= nil\
    \ and z ~= nil then\n    if type(x) == \"number\" and type(y) == \"number\" and\
    \ type(z) == \"number\" then\n      return ((x + y) == z) or ((x - y) == z) or\
    \ ((x * y) == z) or ((x / y) == z) or ((x % y) == z)\n    end\n  end\n  return\
    \ false\nend", "  -- Check that the numbers are integers\n  assert(type(y) ==\
    \ 'number' and type(z) == 'number')\n  -- Check that the numbers are positive\n\
    \  assert(y >= 0 and z >= 0)\n  -- Check that the numbers are different\n  assert(x\
    \ ~= y and z ~= x)\n  -- Return true if the sum of the two numbers is equal to\
    \ the third number\n  return x == y + z\nend", "  if type(x) == 'number' and type(y)\
    \ == 'number' and type(z) == 'number' then\n    return x == y + z\n  else\n  \
    \  return false\n  end\nend", "  if type(y) == 'number' and type(z) == 'number'\
    \ then\n    return x == y or x == z\n  else\n    return false\n  end\nend", " \
    \ local a, b, c = x, y, z\n  if a == b and a == c then\n    return true\n  elseif\
    \ a == b or a == c then\n    return false\n  elseif b == c then\n    return true\n\
    \  else\n    return false\n  end\nend", "  if type(x) == 'number' and type(y)\
    \ == 'number' and type(z) == 'number' then\n    return x == y + z\n  else\n  \
    \  return false\n  end\nend", "  if x ~= nil and y ~= nil and z ~= nil then\n\
    \    if type(x) == 'number' and type(y) == 'number' and type(z) == 'number' then\n\
    \      return (x+y+z) == z\n    else\n      return false\n    end\n  else\n  \
    \  return false\n  end\nend", "  if type(x) == 'number' and type(y) == 'number'\
    \ and type(z) == 'number' then\n    return x == y + z\n  else\n    return false\n\
    \  end\nend", "  if x == y or x == z or y == z then\n    return true\n  else\n\
    \    return false\n  end\nend", "  if type(x) == 'number' and type(y) == 'number'\
    \ and type(z) == 'number' then\n    return x == y + z\n  else\n    return false\n\
    \  end\nend", "  if x == y then\n    return true\n  elseif x == z or y == z then\n\
    \    return false\n  else\n    return true\n  end\nend", "  if x ~= nil then\n\
    \    if y ~= nil then\n      if z ~= nil then\n        return (x == y and y ==\
    \ z and type(z) == 'number')\n      else\n        return (x == y and y == z and\
    \ type(z) == 'number')\n      end\n    else\n      return (x == y and type(z)\
    \ == 'number')\n    end\n  else\n    if y ~= nil then\n      return (y == z and\
    \ type(z) == 'number')\n    else\n      return (type(z) == 'number')\n    end\n\
    \  end\nend", "  if type(x) == 'number' and type(y) == 'number' and type(z) ==\
    \ 'number' then\n    return x == y + z\n  else\n    return false\n  end\nend",
  "  if x == y then\n    if x == z then\n      return true\n    end\n    return false\n\
    \  end\n  if x < y then\n    if x < z then\n      return true\n    end\n    return\
    \ false\n  end\n  if y < x then\n    if y < z then\n      return true\n    end\n\
    \    return false\n  end\n  return true\nend", "  if type(y) == 'number' and type(z)\
    \ == 'number' then\n    return x == y or x == z\n  elseif type(y) == 'table' then\n\
    \    for _, v in pairs(y) do\n      if any_int(x, y, v) then\n        return true\n\
    \      end\n    end\n    return false\n  else\n    return false\n  end\nend",
  "  if type(x) == 'number' and type(y) == 'number' and type(z) == 'number' then\n\
    \    return x == y + z\n  else\n    return false\n  end\nend", "  if x == y or\
    \ x == z or y == z then\n    return true\n  else\n    return false\n  end\nend",
  "  if x ~= nil and y ~= nil and z ~= nil then\n    if type(x) == 'number' and type(y)\
    \ == 'number' and type(z) == 'number' then\n      return ((x + y + z) == (x *\
    \ y * z)) and ((x % z) == ((x % y) * z)) and ((x % y) == ((x % z) * y))\n    end\n\
    \  end\n  return false\nend", "  if x == y or x == z or y == z then\n    return\
    \ true\n  else\n    return false\n  end\nend", "  if x == y then\n    return z\
    \ == x\n  elseif x == z then\n    return y == z\n  else\n    return false\n  end\n\
    end", "  if type(x) == 'number' and type(y) == 'number' and type(z) == 'number'\
    \ then\n    return x == y + z\n  else\n    return false\n  end\nend", "  if x\
    \ == y then\n    if x == z then\n      return true\n    end\n    return false\n\
    \  end\n  return true\nend", "  if type(x) == 'number' and type(y) == 'number'\
    \ and type(z) == 'number' then\n    return x == y + z\n  else\n    return false\n\
    \  end\nend", "  if x == y then\n    return z == x\n  elseif x == z then\n   \
    \ return y == z\n  else\n    return false\n  end\nend", "  if x == y then\n  \
    \  return true\n  elseif x == z then\n    return true\n  elseif y == z then\n\
    \    return true\n  else\n    return false\n  end\nend", "  if x == y then\n \
    \   return z == x and z == z\n  elseif x < y then\n    return z == x and z < z\n\
    \  else\n    return z == y and z > z\n  end\nend", "  if x ~= nil and y ~= nil\
    \ and z ~= nil then\n    if type(x) == \"number\" and type(y) == \"number\" and\
    \ type(z) == \"number\" then\n      return ((x + y) == z) or ((x - y) == z) or\
    \ ((x * y) == z) or ((x / y) == z) or ((x % y) == z)\n    end\n  end\n  return\
    \ false\nend", "  if x == y then\n    if x == z then\n      return true\n    end\n\
    \    return false\n  end\n  if x ~= z then\n    return false\n  end\n  return\
    \ true\nend", "  if type(x) == 'number' and type(y) == 'number' and type(z) ==\
    \ 'number' then\n    return x == y + z\n  else\n    return false\n  end\nend",
  "  if x == y then\n    return true\n  elseif x == z then\n    return true\n  elseif\
    \ y == z then\n    return true\n  else\n    return false\n  end\nend", "  if type(x)\
    \ == \"number\" and type(y) == \"number\" and type(z) == \"number\" then\n   \
    \ return x == y + z\n  else\n    return false\n  end\nend", "  if type(x) == 'number'\
    \ and type(y) == 'number' and type(z) == 'number' then\n    return x == y + z\n\
    \  else\n    return false\n  end\nend", "  if x ~= nil and y ~= nil and z ~= nil\
    \ then\n    if x == y and x == z then\n      return true\n    elseif x ~= z and\
    \ y ~= z then\n      return true\n    elseif x ~= z and y ~= z then\n      return\
    \ false\n    end\n  end\n  return false\nend", "  if x == y then\n    return true\n\
    \  elseif x == z then\n    return true\n  elseif y == z then\n    return true\n\
    \  else\n    return false\n  end\nend", "  if x == y then\n    return z == x\n\
    \  elseif x == z then\n    return y == z\n  else\n    return false\n  end\nend",
  "  if type(y) == 'number' and type(z) == 'number' then\n    return x == y or x ==\
    \ z\n  elseif type(y) == 'table' then\n    for _, v in ipairs(y) do\n      if\
    \ any_int(x, y, v) then\n        return true\n      end\n    end\n    return false\n\
    \  else\n    return false\n  end\nend", "  if x == y then\n    return z == x and\
    \ z == z\n  elseif x < y then\n    return any_int(y, x, z)\n  else\n    return\
    \ any_int(x, y, z) or any_int(y, x, z)\n  end\nend", "  if x == y then\n    return\
    \ z == x and type(z) == 'number'\n  elseif x < y then\n    return any_int(y, x,\
    \ z)\n  else\n    return any_int(x, y, z) or type(z) == 'number'\n  end\nend",
  "  if type(x) == 'number' and type(y) == 'number' and type(z) == 'number' then\n\
    \    return x == y + z\n  else\n    return false\n  end\nend", "  if x == y then\n\
    \    return z == x and type(z) == 'number'\n  else\n    return z == x and type(z)\
    \ == 'number'\n  end\nend", "  if type(y) == 'number' and type(z) == 'number'\
    \ then\n    return x == y or x == z\n  else\n    return false\n  end\nend", " \
    \ if x ~= nil then\n    if y ~= nil then\n      if z ~= nil then\n        return\
    \ (x == y and z == math.floor(x+y+z))\n      else\n        return (x == y)\n \
    \     end\n    else\n      return true\n    end\n  else\n    return false\n  end\n\
    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

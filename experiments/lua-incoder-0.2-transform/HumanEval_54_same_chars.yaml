name: HumanEval_54_same_chars
language: lua
prompt: "-- Check if two words have the same characters.\n-- >>> same_chars('eabcdzzzz',\
  \ 'dddzzzzzzzddeddabc')\n-- true\n-- >>> same_chars('abcd', 'dddddddabc')\n-- true\n\
  -- >>> same_chars('dddddddabc', 'abcd')\n-- true\n-- >>> same_chars('eabcd', 'dddddddabc')\n\
  -- false\n-- >>> same_chars('abcd', 'dddddddabce')\n-- false\n-- >>> same_chars('eabcdzzzz',\
  \ 'dddzzzzzzzddddabc')\n-- false\nlocal function same_chars(s0, s1)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = same_chars\n\
  \    lu.assertEquals(candidate('eabcdzzzz', 'dddzzzzzzzddeddabc'), true)\n    lu.assertEquals(candidate('abcd',\
  \ 'dddddddabc'), true)\n    lu.assertEquals(candidate('dddddddabc', 'abcd'), true)\n\
  \    lu.assertEquals(candidate('eabcd', 'dddddddabc'), false)\n    lu.assertEquals(candidate('abcd',\
  \ 'dddddddabcf'), false)\n    lu.assertEquals(candidate('eabcdzzzz', 'dddzzzzzzzddddabc'),\
  \ false)\n    lu.assertEquals(candidate('aabb', 'aaccc'), false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local l0 = #s0\n  local l1 = #s1\n  if l0 ~= l1 then return false\
    \ end\n  for i = 1, l0 do\n    if s0:sub(i, i) ~= s1:sub(i, i) then return false\
    \ end\n  end\n  return true\nend", "  local len0 = #s0\n  local len1 = #s1\n \
    \ if len0 ~= len1 then return false end\n  for i = 1, len0 do\n    if s0[i] ~=\
    \ s1[i] then return false end\n  end\n  return true\nend", "  local len0 = #s0\n\
    \  local len1 = #s1\n  if len0 ~= len1 then return false end\n  for i = 1, len0\
    \ do\n    if s0:sub(i, i) ~= s1:sub(i, i) then return false end\n  end\n  return\
    \ true\nend", "  local n0 = #s0\n  local n1 = #s1\n  if n0 ~= n1 then return false\
    \ end\n  for i = 1, n0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n\
    \  return true\nend", "  local n0 = #s0\n  local n1 = #s1\n  local i\n  for i=1,\
    \ n0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n  return n0 == n1\n\
    end", "  local len0 = #s0\n  local len1 = #s1\n  if len0 ~= len1 then return false\
    \ end\n  for i = 1, len0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n\
    \  return true\nend", "  local n0, n1 = #s0, #s1\n  if n0 ~= n1 then\n    return\
    \ false\n  end\n  for i = 1, n0 do\n    if s0[i] ~= s1[i] then\n      return false\n\
    \    end\n  end\n  return true\nend", "  local l0 = #s0\n  local l1 = #s1\n  local\
    \ i\n  for i=1, l0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n  return\
    \ l0 == l1\nend", "  local len0 = #s0\n  local len1 = #s1\n  if len0 ~= len1 then\
    \ return false end\n  local i = 0\n  while i < len0 do\n    if s0[i] ~= s1[i]\
    \ then return false end\n    i = i + 1\n  end\n  return true\nend", "  -- TODO:\
    \ Optimize by comparing only the first and last character\n  -- instead of comparing\
    \ every single character.\n  for i=1, #s0 do\n    if s0[i] ~= s1[i] then\n   \
    \   return false\n    end\n  end\n  return true\nend", "  local n0 = #s0\n  local\
    \ n1 = #s1\n  if n0 ~= n1 then return false end\n  for i = 1, n0 do\n    if s0[i]\
    \ ~= s1[i] then return false end\n  end\n  return true\nend", "  local l0 = #s0\n\
    \  local l1 = #s1\n  if l0 ~= l1 then return false end\n  for i = 1, l0 do\n \
    \   if s0[i] ~= s1[i] then return false end\n  end\n  return true\nend", "  local\
    \ n0 = #s0\n  local n1 = #s1\n  if n0 ~= n1 then return false end\n  for i = 1,\
    \ n0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n  return true\nend",
  "  local n0 = #s0\n  local n1 = #s1\n  local i\n  for i = 1, n0 do\n    if s0[i]\
    \ ~= s1[i] then return false end\n  end\n  return n0 == n1\nend", "  local len0\
    \ = #s0\n  local len1 = #s1\n  if len0 ~= len1 then\n    return false\n  end\n\
    \  for i = 1, len0 do\n    if s0[i] ~= s1[i] then\n      return false\n    end\n\
    \  end\n  return true\nend", "  local l0 = #s0\n  local l1 = #s1\n  if l0 ~= l1\
    \ then\n    return false\n  end\n  for i = 1, l0 do\n    if s0[i] ~= s1[i] then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local len0 = #s0\n\
    \  local len1 = #s1\n  if len0 ~= len1 then return false end\n  local i\n  for\
    \ i=1, len0 do\n    if s0[i] ~= s1[i] then return false end\n  end\n  return true\n\
    end", "  -- Check length\n  if #s0 ~= #s1 then\n    return false\n  end\n  --\
    \ Check characters\n  for i=1, #s0 do\n    if s0[i] ~= s1[i] then\n      return\
    \ false\n    end\n  end\n  return true\nend", "  local len0 = #s0\n  local len1\
    \ = #s1\n  if len0 ~= len1 then return false end\n  for i = 1, len0 do\n    if\
    \ s0[i] ~= s1[i] then return false end\n  end\n  return true\nend", "  local len0\
    \ = #s0\n  local len1 = #s1\n  if len0 ~= len1 then return false end\n  for i\
    \ = 1, len0 do\n    if string.sub(s0, i, i) ~= string.sub(s1, i, i) then return\
    \ false end\n  end\n  return true\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_103_rounded_avg
language: lua
prompt: "-- You are given two positive integers n and m, and your task is to compute\
  \ the\n-- average of the integers from n through m (including n and m). \n-- Round\
  \ the answer to the nearest integer and convert that to binary.\n-- If n is greater\
  \ than m, return -1.\n-- Example:\n-- >>> rounded_avg(1, 5)\n-- '0b11'\n-- >>> rounded_avg(7,\
  \ 5)\n-- -1\n-- >>> rounded_avg(10, 20)\n-- '0b1111'\n-- >>> rounded_avg(20, 33)\n\
  -- '0b11010'\nlocal function rounded_avg(n, m)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rounded_avg\n\
  \    lu.assertEquals(candidate(1, 5), '0b11')\n    lu.assertEquals(candidate(7,\
  \ 13), '0b1010')\n    lu.assertEquals(candidate(964, 977), '0b1111001010')\n   \
  \ lu.assertEquals(candidate(996, 997), '0b1111100100')\n    lu.assertEquals(candidate(560,\
  \ 851), '0b1011000010')\n    lu.assertEquals(candidate(185, 546), '0b101101110')\n\
  \    lu.assertEquals(candidate(362, 496), '0b110101101')\n    lu.assertEquals(candidate(350,\
  \ 902), '0b1001110010')\n    lu.assertEquals(candidate(197, 233), '0b11010111')\n\
  \    lu.assertEquals(candidate(7, 5), -1)\n    lu.assertEquals(candidate(5, 1),\
  \ -1)\n    lu.assertEquals(candidate(5, 5), '0b101')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  if n > m then\n    return -1\n  end\n  local sum = 0\n  local count\
    \ = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return\
    \ \"0b\" .. tostring(sum / count)\nend", "  if m > n then\n    return -1\n  end\n\
    \  local sum = 0\n  for i = n, m + 1 do\n    sum = sum + i\n  end\n  return tostring(sum\
    \ / 2)\nend", "  if n > m then\n    return -1\n  end\n  local sum = 0\n  for i\
    \ = n, m do\n    sum = sum + i\n  end\n  return \"0b\" .. tostring(sum / 2)\n\
    end", "  local nn = math.floor(n/2) + 1\n  local mm = math.floor(m/2) + 1\n  if\
    \ nn > m then\n    return -1\n  end\n  return string.format('0b%b', nn * 2 - mm)\n\
    end", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local count =\
    \ 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return\
    \ \"0b\" .. tostring(sum / count)\nend", "  if m == 0 then\n    return -1\n  end\n\
    \  local sum = 0\n  local count = 0\n  while n <= m do\n    sum = sum + n\n  \
    \  count = count + 1\n    n = n + 1\n  end\n  return \"0b\" .. tostring(sum /\
    \ count)\nend", "  local nn = math.max(n, m)\n  local mm = math.min(m, n)\n  local\
    \ sum = 0\n  local count = 0\n  for i = n, mm do\n    sum = sum + i\n    count\
    \ = count + 1\n  end\n  return \"0b\" .. tostring(sum / count)\nend", "  if m\
    \ > n then\n    return -1\n  end\n  local sum = 0\n  local count = 0\n  for i\
    \ = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  local avg = sum\
    \ / count\n  local bin = bit.bor(bit.lshift(bit.rshift(avg, 8), 8), bit.rshift(avg,\
    \ 8))\n  return bin\nend", "  if m > n then\n    return -1\n  end\n  local sum\
    \ = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count\
    \ + 1\n  end\n  return tostring(sum / count)\nend", "  local nm = math.min(n,\
    \ m)\n  local sum = 0\n  local count = 0\n  while nm do\n    sum = sum + nm\n\
    \    count = count + 1\n    nm = math.floor(nm/2)\n  end\n  if count == 0 then\n\
    \    return -1\n  end\n  return \"0b\" .. tostring(sum/count)\nend", "  if m >\
    \ n then\n    return -1\n  end\n  local sum = 0\n  local count = 0\n  for i =\
    \ n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return string.format(\"\
    0b%b\", sum / count)\nend", "  if m > n then\n    return -1\n  end\n  local sum\
    \ = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  return \"0b\" .. tostring(sum\
    \ / 2)\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local\
    \ count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n\
    \  return tostring(sum / count)\nend", "  local nm = math.floor(n/m)\n  if nm\
    \ == 0 then\n    return -1\n  else\n    return string.format('0b%b', math.floor(nm*m))\n\
    \  end\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  for i\
    \ = n, m do\n    sum = sum + i\n  end\n  return tostring(sum / 2)\nend", "  if\
    \ m > n then return -1 end\n  local sum = 0\n  local count = 0\n  for i = n, m\
    \ do\n    sum = sum + i\n    count = count + 1\n  end\n  return tostring(sum /\
    \ count)\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local\
    \ count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n\
    \  return tostring(sum / count)\nend", "  if m > n then\n    return -1\n  end\n\
    \  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n  \
    \  count = count + 1\n  end\n  return \"0b\" .. tostring(sum / count)\nend", " \
    \ local sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n   \
    \ count = count + 1\n  end\n  if count > 0 then\n    return tostring(sum / count)\n\
    \  else\n    return -1\n  end\nend", "  if m > n then\n    return -1\n  end\n\
    \  local sum = 0\n  local count = 0\n  while n <= m do\n    sum = sum + n\n  \
    \  n = n + 1\n    count = count + 1\n  end\n  local avg = sum / count\n  local\
    \ bin = bit.bor(bit.lshift(bit.rshift(avg, 8), 8), bit.rshift(avg, 8))\n  return\
    \ bin\nend", "  if n > m then\n    return -1\n  end\n  local sum = 0\n  local\
    \ count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n\
    \  return string.format('0b%b', sum / count)\nend", "  if m > n then\n    return\
    \ -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum =\
    \ sum + i\n    count = count + 1\n  end\n  return string.format('0b%b', sum /\
    \ count)\nend", "  if m > n then return -1 end\n  local sum = 0\n  local count\
    \ = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return\
    \ string.format('0b%b', sum / count)\nend", "  if n > m then\n    return -1\n\
    \  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum +\
    \ i\n    count = count + 1\n  end\n  local avg = sum / count\n  local bin = string.format('%b',\
    \ avg)\n  -- remove leading zero\n  bin = string.sub(bin, 1, string.len(bin) -\
    \ 1)\n  return bin\nend", "  if n < m then\n    return -1\n  end\n  local sum\
    \ = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count\
    \ + 1\n  end\n  return string.format('0b%b', sum / count)\nend", "  local nm =\
    \ n .. m\n  local nm_int = tonumber(nm)\n  if nm_int == nil then\n    return -1\n\
    \  end\n  local nm_bin = bit.bor(bit.lshift(nm_int, 1), bit.rshift(nm_int, 1))\n\
    \  local nm_sum = bit.add(nm_bin, bit.lshift(nm_int, 2))\n  local nm_avg = bit.rshift(nm_sum,\
    \ 1) -- Round down\n  return nm_avg\nend", "  if m > n then\n    return -1\n \
    \ end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum +\
    \ i\n    count = count + 1\n  end\n  return \"0b\" .. tostring(sum / count)\n\
    end", "  if n > m then\n    return -1\n  end\n  local sum = 0\n  local count =\
    \ 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return\
    \ \"0b\" .. tostring(sum / count)\nend", "  local avg = math.floor((n + m) / 2)\n\
    \  if avg < n then\n    return -1\n  end\n  return tostring(avg)\nend", "  if\
    \ m == 0 then\n    return -1\n  elseif n == m then\n    return tostring(n / 2)\n\
    \  else\n    return tostring(n / 2) .. '0' .. tostring(m / 2)\n  end\nend", " \
    \ local nm = math.max(m, n)\n  local nn = math.max(n - nm, 1)\n  return string.format(\"\
    %b\", math.floor(nn / 2)) .. string.format(\"%b\", math.floor(nm / 2))\nend",
  "  if n > m then return -1 end\n  local sum = 0\n  for i = n, m do\n    sum = sum\
    \ + i\n  end\n  return tostring(sum / 2)\nend", "  local nn = math.floor(n/2)\
    \ + 1\n  local mm = math.floor(m/2) + 1\n  if nn > m then return -1 end\n  local\
    \ ans = ''\n  for i = 1, nn do\n    ans = ans .. '0' \n  end\n  for i = 1, mm\
    \ do\n    ans = ans .. '1' \n  end\n  return ans\nend", "  if m == 0 then\n  \
    \  return -1\n  end\n  local sum = 0\n  for i = n, m + 1 do\n    sum = sum + i\n\
    \  end\n  return tostring(sum / 2)\nend", "  if m > n then\n    return -1\n  end\n\
    \  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n  \
    \  count = count + 1\n  end\n  return string.format('0b%b', sum / count)\nend",
  "  local nm = math.floor(n/m)\n  if nm == 0 then\n    return -1\n  else\n    return\
    \ tostring(nm) .. 'b'\n  end\nend", "  if n < m then\n    return -1\n  end\n \
    \ local sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n   \
    \ count = count + 1\n  end\n  return tostring(sum / count)\nend", "  local sum\
    \ = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count\
    \ + 1\n  end\n  if count == 0 then\n    return -1\n  end\n  local bin = sum /\
    \ count\n  return bin:bits(1)\nend", "  if n < m then\n    return -1\n  end\n\
    \  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n  \
    \  count = count + 1\n  end\n  return string.format('0b%b', sum / count)\nend",
  "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local count = 0\n  for\
    \ i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return tostring(sum\
    \ / count)\nend", "  local sum = 0\n  local count = 0\n  local n = tonumber(n)\n\
    \  local m = tonumber(m)\n  if n <= m then\n    sum = (n - m + 1)\n    count =\
    \ n\n  else\n    sum = (m - n + 1)\n    count = m\n  end\n  return string.format('0b%b',\
    \ sum / count)\nend", "  if m > n then return -1 end\n  local sum = 0\n  for i\
    \ = n, m+1 do\n    sum = sum + i\n  end\n  return \"0b\" .. tostring(sum / 2)\n\
    end", "  local nm, m, nn, mm\n  nn = n or 0\n  mm = m or 0\n  nm = math.floor(nn\
    \ / mm) * mm\n  if nn < mm then\n    return -1\n  end\n  local bin = math.floor(nm\
    \ / 2)\n  local remainder = math.floor(nm / 2)\n  while remainder > 0 do\n   \
    \ bin = math.floor(bin)\n    remainder = math.floor(remainder)\n  end\n  return\
    \ bin\nend", "  if m > n then return -1 end\n  local sum = 0\n  for i = n, m do\n\
    \    sum = sum + i\n  end\n  return '0b' .. tostring(sum / 2)\nend", "  local\
    \ nm = math.floor(n/m)\n  if nm == 0 then\n    return -1\n  else\n    return string.format(\"\
    0b%b\", nm*m+n)\n  end\nend", "  local nn = math.max(m, n)\n  local mm = math.max(m,\
    \ n)\n  local sum = 0\n  local count = 0\n  for i = n, mm do\n    sum = sum +\
    \ i\n    count = count + 1\n  end\n  if mm > n then\n    return -1\n  end\n  return\
    \ \"0b\" .. string.format(\"%b\", sum / count)\nend", "  if m > n then\n    return\
    \ -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum =\
    \ sum + i\n    count = count + 1\n  end\n  return tostring(sum / count)\nend",
  "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local count = 0\n  while\
    \ n > m do\n    sum = sum + n\n    n = n - 1\n    count = count + 1\n  end\n \
    \ return \"0b\" .. tostring(sum / count)\nend", "  local nn = math.floor(n)\n\
    \  local mm = math.floor(m)\n  if mm > n then\n    return -1\n  end\n  local result\
    \ = nn\n  local remainder = mm\n  while remainder ~= 0 do\n    result = result\
    \ + remainder\n    remainder = remainder - math.floor(remainder)\n  end\n  return\
    \ result\nend", "  local nn = math.floor(n)\n  local mm = math.floor(m)\n  if\
    \ nn > mm then\n    return -1\n  end\n  local ans = ''\n  while nn <= mm do\n\
    \    ans = ans .. '1b'\n    nn=nn+1\n  end\n  return ans\nend", "  local nm =\
    \ math.max(m, n)\n  local sum = 0\n  local count = 0\n  for i = n, nm do\n   \
    \ sum = sum + i\n    count = count + 1\n  end\n  if count == 0 then\n    return\
    \ -1\n  end\n  return string.format('0b%b', math.floor(sum / count))\nend", " \
    \ local nm = math.floor(n/m)\n  if nm == 0 then\n    return -1\n  else\n    return\
    \ string.format('0b%b', nm)\n  end\nend", "  if m == 0 then\n    return -1\n \
    \ end\n  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  return\
    \ math.floor(sum / 2)\nend", "  local nm = math.floor(n/m)*m\n  if nm > m then\
    \ return -1 end\n  return string.format('0b%b', nm)\nend", "  if n > m then\n\
    \    return -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n\
    \    sum = sum + i\n    count = count + 1\n  end\n  return string.format('0b%b',\
    \ sum / count)\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n\
    \  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count +\
    \ 1\n  end\n  return tostring(sum / count)\nend", "  local nn = math.floor(n/2)\
    \ + 1\n  local mm = math.floor(m/2) + 1\n  if nn > m then\n    return -1\n  end\n\
    \  return string.format('%b', nn * 2 + mm)\nend", "  if n > m then\n    return\
    \ -1\n  end\n  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  return\
    \ \"0b\" .. tostring(sum / 2)\nend", "  if m > n then\n    return -1\n  end\n\
    \  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n  \
    \  count = count + 1\n  end\n  return string.format(\"0b%b\", sum / count)\nend",
  "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local count = 0\n  for\
    \ i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return string.format(\"\
    0b%b\", sum / count)\nend", "  local n1 = math.floor(n)\n  local m1 = math.floor(m)\n\
    \  local n2 = math.floor((n1 + m) / 2)\n  local m2 = math.floor((n1 + m) / 2)\n\
    \  if n2 > m1 then\n    return -1\n  elseif n2 < m1 then\n    return -1\n  else\n\
    \    return bin(n1) + bin(n2)\n  end\nend", "  local nm = math.max(m, n)\n  local\
    \ avg = math.floor((n + nm) / 2)\n  return tostring(bin(avg))\nend", "  if n >\
    \ m then\n    return -1\n  end\n  local sum = 0\n  local count = 0\n  for i =\
    \ n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return string.format(\"\
    0b%b\", sum / count)\nend", "  if m > n then\n    return -1\n  end\n  local sum\
    \ = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count\
    \ + 1\n  end\n  return string.format('0b%b', sum / count)\nend", "  local nm =\
    \ math.floor(n/m)\n  if nm == 0 then\n    return -1\n  else\n    return string.format('0b%0*d',\
    \ math.ceil(nm*m), math.floor(n))\n  end\nend", "  if m > n then\n    return -1\n\
    \  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum +\
    \ i\n    count = count + 1\n  end\n  local avg = sum / count\n  local binary =\
    \ string.format('%b', avg)\n  return binary\nend", "  local sum = 0\n  local count\
    \ = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  if\
    \ count > 0 then\n    return tostring(sum / count)\n  else\n    return -1\n  end\n\
    end", "  if m > n then return -1 end\n  local sum = 0\n  local count = 0\n  for\
    \ i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return tostring(sum\
    \ / count)\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local\
    \ count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n\
    \  return \"0b\" .. tostring(sum / count)\nend", "  if m == 0 then\n    return\
    \ -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum =\
    \ sum + i\n    count = count + 1\n  end\n  return tostring(sum / count)\nend",
  "  if m > n then\n    return -1\n  end\n  local sum = 0\n  for i = n, m do\n   \
    \ sum = sum + i\n  end\n  local avg = sum / 2\n  local bin = string.format(\"\
    %b\", avg)\n  local digits = #bin\n  if digits == 0 then\n    return -1\n  end\n\
    \  local result = \"\"\n  for i = 1, digits do\n    result = result .. bin[i]\n\
    \  end\n  return result\nend", "  if m > n then\n    return -1\n  end\n  local\
    \ sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count\
    \ = count + 1\n  end\n  return string.format('0b%b', sum / count)\nend", "  local\
    \ nm = math.min(n, m)\n  local nn = math.max(n, m)\n  local sum = 0\n  local count\
    \ = 0\n  for i = nm, nn, 1 do\n    sum = sum + i\n    count = count + 1\n  end\n\
    \  return string.format('0b%b', math.floor(sum / count)) \nend", "  local sum\
    \ = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count\
    \ + 1\n  end\n  if count > 0 then\n    return sum / count\n  else\n    return\
    \ -1\n  end\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n \
    \ local count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n\
    \  end\n  local avg = sum / count\n  return string.format(\"0b%b\", avg)\nend",
  "  if n > m then\n    return -1\n  end\n  local sum = 0\n  local count = 0\n  for\
    \ i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return string.format('0b%b',\
    \ sum / count)\nend", "  local sum = 0\n  local count = 0\n  for i = n, m do\n\
    \    sum = sum + i\n    count = count + 1\n  end\n  if count > 0 then\n    return\
    \ tostring(sum / count)\n  else\n    return -1\n  end\nend", "  local sum = 0\n\
    \  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count +\
    \ 1\n  end\n  if count > 0 then\n    return tostring(sum / count)\n  else\n  \
    \  return -1\n  end\nend", "  local avg = math.floor(n / m) * m\n  if avg > m\
    \ then\n    return -1\n  else\n    return tostring(avg)\n  end\nend", "  if m\
    \ == 0 then\n    return -1\n  elseif m > n then\n    return -1\n  else\n    local\
    \ sum = 0\n    local count = 0\n    for i = n, m + 1 do\n      sum = sum + i\n\
    \      count = count + 1\n    end\n    return string.format('0b%b', sum / count)\n\
    \  end\nend", "  if n > m then\n    return -1\n  end\n  local sum = 0\n  local\
    \ count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n\
    \  return \"0b\" .. tostring(sum / count)\nend", "  if n > m then\n    return\
    \ -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum =\
    \ sum + i\n    count = count + 1\n  end\n  return \"0b\" .. tostring(sum / count)\n\
    end", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local count =\
    \ 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return\
    \ string.format('0b%b', sum / count)\nend", "  if n > m then\n    return -1\n\
    \  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum +\
    \ i\n    count = count + 1\n  end\n  return string.format('0b%b', sum / count)\n\
    end", "  if m == 0 then\n    return -1\n  end\n  if n == m then\n    return tostring(m)\n\
    \  end\n  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  return\
    \ tostring(sum / 2)\nend", "  if n > m then\n    return -1\n  end\n  local sum\
    \ = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count\
    \ + 1\n  end\n  return string.format('0b%b', sum / count)\nend", "  if m > n then\n\
    \    return -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n\
    \    sum = sum + i\n    count = count + 1\n  end\n  return string.format('0b%b',\
    \ sum / count)\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n\
    \  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count +\
    \ 1\n  end\n  return \"0b\" .. tostring(sum / count)\nend", "  if m > n then\n\
    \    return -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n\
    \    sum = sum + i\n    count = count + 1\n  end\n  local avg = sum / count\n\
    \  local bin = string.format(\"%b\", avg)\n  -- remove leading zero\n  bin = bin:sub(1,\
    \ bin:len() - 1)\n  return bin\nend", "  local nm = math.floor(n/m)\n  if nm ==\
    \ 0 then\n    return -1\n  else\n    return string.format(\"0b%b\", math.floor(nm))\n\
    \  end\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local\
    \ count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n\
    \  return \"0b\" .. tostring(sum / count)\nend", "  if m > n then return -1 end\n\
    \  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n  \
    \  count = count + 1\n  end\n  return \"0b\" .. string.format(\"%b\", sum / count)\n\
    end", "  local nm = math.floor(n/m)\n  local remainder = n % m\n  if remainder\
    \ == 0 then\n    return bin.pack(nm)\n  else\n    return -1\n  end\nend", "  local\
    \ avg = math.floor((n + m) / 2)\n  if avg > m then\n    return -1\n  elseif avg\
    \ < n then\n    return -1\n  else\n    return tostring(avg)\n  end\nend", "  local\
    \ nm = math.floor(n/m)\n  if nm == 0 then\n    return -1\n  else\n    return string.format('0b%0*d',\
    \ math.ceil(nm*m), math.floor(n))\n  end\nend", "  if m > n then\n    return -1\n\
    \  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum +\
    \ i\n    count = count + 1\n  end\n  return string.format('0b%b', sum / count)\n\
    end", "  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  return\
    \ sum / 2\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local\
    \ count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n\
    \  return \"0b\" .. tostring(sum / count)\nend", "  if n > m then return -1 end\n\
    \  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  return sum /\
    \ 2\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local count\
    \ = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return\
    \ tostring(sum / count)\nend", "  if m > n then\n    return -1\n  end\n  local\
    \ sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count\
    \ = count + 1\n  end\n  return tostring(sum / count)\nend", "  local sum = 0\n\
    \  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count +\
    \ 1\n  end\n  if count > 0 then\n    return string.format(\"0b%b\", sum / count)\n\
    \  else\n    return -1\n  end\nend", "  if m > n then\n    return -1\n  end\n\
    \  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n  \
    \  count = count + 1\n  end\n  return string.format('0b%b', sum / count)\nend",
  "  local nm = math.max(m, n)\n  local sum = 0\n  local count = 0\n  for i = n, nm\
    \ do\n    sum = sum + i\n    count = count + 1\n  end\n  if count > 0 then\n \
    \   return tostring(sum / count)\n  else\n    return -1\n  end\nend", "  if n\
    \ < m then\n    return -1\n  end\n  local sum = 0\n  local count = 0\n  for i\
    \ = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return string.format('0b%b',\
    \ sum / count)\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n\
    \  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count +\
    \ 1\n  end\n  local avg = sum / count\n  return tostring(avg)\nend", "  local\
    \ nm = math.floor(n/m)*m\n  if nm > m then return -1 end\n  return string.format('0b%b',\
    \ nm)\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local\
    \ count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n\
    \  local avg = sum / count\n  local binary = string.format('0b%b', avg)\n  return\
    \ binary\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local\
    \ count = 0\n  while n > m do\n    sum = sum + n\n    n = n - 1\n    count = count\
    \ + 1\n  end\n  sum = sum + m\n  count = count + 1\n  local binary = string.format('0b%b',\
    \ sum)\n  return binary:sub(1, binary:len() - 1)\nend", "  local nm = math.floor(n/m)*m\n\
    \  if nm > m then return -1 end\n  return string.format('0b%0*d', math.ceil(nm/m),\
    \ nm%m)\nend", "  if n > m then\n    return -1\n  end\n  local sum = 0\n  for\
    \ i = n, m do\n    sum = sum + i\n  end\n  return sum / 2\nend", "  if m > n then\
    \ return -1 end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum\
    \ = sum + i\n    count = count + 1\n  end\n  return \"0b\" .. tostring(sum / count)\n\
    end", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local count =\
    \ 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return\
    \ string.format('0b%b', sum / count)\nend", "  if n > m then\n    return -1\n\
    \  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum +\
    \ i\n    count = count + 1\n  end\n  return \"0b\" .. tostring(sum / count)\n\
    end", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  for i = n, m\
    \ do\n    sum = sum + i\n  end\n  return \"0b\" .. tostring(sum / 2)\nend", " \
    \ local nn = math.floor(n)\n  local mm = math.floor(m)\n  if nn > mm then\n  \
    \  return -1\n  end\n  local bin = nn..'b'..mm\n  return bin\nend", "  local nm,\
    \ m, n = n, m, 0\n  while n <= m do\n    n, m = m, n + m\n  end\n  return m ==\
    \ 0 and n or -1\nend", "  local nm = math.min(n, m)\n  local sum = 0\n  local\
    \ count = 0\n  for i = n, nm do\n    sum = sum + i\n    count = count + 1\n  end\n\
    \  if count == 0 then\n    return -1\n  end\n  return string.format('0b%b', math.floor(sum\
    \ / count))\nend", "  local nn = math.floor(n)\n  local mm = math.floor(m)\n \
    \ if nn > mm then\n    return -1\n  end\n  local sum = 0\n  local count = 0\n\
    \  for i = nn,mm do\n    sum = sum + i\n    count = count + 1\n  end\n  return\
    \ string.format('0b%b', sum / count)\nend", "  local n1 = math.floor(n)\n  local\
    \ n2 = math.ceil(n)\n  local m1 = math.floor(m)\n  local m2 = math.ceil(m)\n \
    \ if n1 == n2 then\n    if m1 == m2 then\n      return n\n    end\n    return\
    \ -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n1, m1 do\n    sum\
    \ = sum + i\n    count = count + 1\n  end\n  return \"0b\" .. tostring(sum / count)\n\
    end", "  if n > m then\n    return -1\n  end\n  local sum = 0\n  local count =\
    \ 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return\
    \ string.format('0b%b', sum / count)\nend", "  if n > m then\n    return -1\n\
    \  end\n  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  return\
    \ \"0b\" .. tostring(sum / 2)\nend", "  local nn = math.max(m, n)\n  local mm\
    \ = math.max(m, n)\n  local nm = math.max(m, n)\n  local nn = math.max(m, n)\n\
    \  local mm = math.max(m, n)\n  local nm = math.max(m, n)\n  local nn = math.max(m,\
    \ n)\n  local mm = math.max(m, n)\n  local nm = math.max(m, n)\n  local nn = math.max(m,\
    \ n)\n  local mm = math.max(m, n)\n  local nm = math.max(m, n)\n  local nn = math.max(m,\
    \ n)\n  local mm = math.max(m, n)\n  local nm = math.max(m, n)\n  local nn = math.max(m,\
    \ n)\n  local mm = math.max(m, n)\n  local nm = math.max(m, n)\n  local nn = math.max(m,\
    \ n)\n  local mm = math.max(m, n)\n  local nm = math.max(m, n)\n  local nn = math.max(m,\
    \ n)\n  local mm = math.max(m, n)\n  local nm = math.max(m, n)\n  local nn = math.max(m,\
    \ n)\n  local mm = math.max(m, n)\n  local nm = math.max(m, n)\n  local nn = math.max(m,\
    \ n)\n  local mm = math.max(m, n)\n  local nm = math.max(m, n)\n  local nn = math.max(m,\
    \ n)\n  local mm = math.max(m, n)\n  local nm = math.max(m, n)\n  local nn = math.max(m,\
    \ n)\n  local mm = math.max(m, n)\n  local nm = math.max(m, n)\n  local nn = math.max(m,\
    \ n)\n  local mm = math.max(m, n)\n  local nm = math.max(m, n)\n  local nn = math.max(m,\
    \ n)\n  local mm = math.max(m, n)\n  local nm = math.max(m, n)\n  local nn = math.max(m,\
    \ n)\n  local mm = math.max(m, n)\n  local nm = math.max(m, n)\n  local nn = math.max(m,\
    \ n)\n  local mm = math.max(m, n)\n  local nm = math.max(m, n)\n  local nn = math.max(m,\
    \ n)\n  local mm = math.max(m, n)\n  local nm = math.max(m, n)\n  local nn = math.max(m,\
    \ n)\n  local mm = math.max(m, n)\n  local nm = math.max(m, n)\n  local nn = math.max(m,\
    \ n)\n  local mm = math.max(m, n)\n  local nm = math.max(m, n)", "  local nn =\
    \ math.floor(n/m)\n  local mm = math.floor(m/n)\n  if nn > mm then\n    return\
    \ -1\n  else\n    return nn * m + (n - nn * m) * math.pow(10, math.ceil(math.log10(m/n)))\n\
    \  end\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local\
    \ count = 0\n  while n <= m do\n    sum = sum + n\n    count = count + 1\n   \
    \ n = n + 1\n  end\n  local result = string.format(\"0b%b\", sum / count)\n  return\
    \ result\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local\
    \ count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n\
    \  return string.format('0b%b', sum / count)\nend", "  local nn = math.floor(n/m)\n\
    \  if nn > m then\n    return -1\n  end\n  local bin = string.format('%b', nn)\n\
    \  local bin = bin:sub(1, bin:len()-1)\n  return bin\nend", "  if m > n then\n\
    \    return -1\n  end\n  local sum = 0\n  for i = n, m + 1 do\n    sum = sum +\
    \ i\n  end\n  return string.format('0b%b', sum / 2)\nend", "  if m > n then\n\
    \    return -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n\
    \    sum = sum + i\n    count = count + 1\n  end\n  return string.format('0b%b',\
    \ sum / count)\nend", "  local n1 = math.floor(n)\n  local m1 = math.floor(m)\n\
    \  if n1 < m1 then\n    return -1\n  end\n  local n2 = math.ceil(n)\n  local m2\
    \ = math.ceil(m)\n  local sum = 0\n  local count = 0\n  for i = n1, m1 do\n  \
    \  sum = sum + i\n    count = count + 1\n  end\n  if n2 < m2 then\n    return\
    \ -1\n  end\n  local result = sum / count\n  local bin = string.format('0b%x',\
    \ result)\n  return bin\nend", "  local nn = math.floor(n)\n  local mm = math.floor(m)\n\
    \  if nn > mm then\n    return -1\n  end\n  local result = \"\"\n  for i = 1,\
    \ mm do\n    result = result .. \"1\"\n  end\n  for i = 1, nn do\n    result =\
    \ result .. \"0\"\n  end\n  return result\nend", "  if m > n then\n    return\
    \ -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum =\
    \ sum + i\n    count = count + 1\n  end\n  return \"0b\" .. tostring(sum / count)\n\
    end", "  if n < m then\n    return -1\n  end\n  local sum = 0\n  local count =\
    \ 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return\
    \ string.format(\"0b%b\", sum / count)\nend", "  if n > m then\n    return -1\n\
    \  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum +\
    \ i\n    count = count + 1\n  end\n  return string.format(\"0b%b\", sum / count)\n\
    end", "  if n > m then return -1 end\n  local sum = 0\n  local count = 0\n  for\
    \ i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return \"0b\"\
    \ .. tostring(sum / count)\nend", "  local nn = math.max(m, n)\n  local mm = math.max(m,\
    \ n)\n  local sum = 0\n  local count = 0\n  while nn <= mm do\n    sum = sum +\
    \ nn\n    count = count + 1\n    nn = nn + 1\n  end\n  if count > 0 then\n   \
    \ return tostring(sum / count)\n  else\n    return -1\n  end\nend", "  local nn\
    \ = math.max(n, m)\n  local mm = math.min(m, n)\n  local sum = 0\n  local count\
    \ = 0\n  for i = n, mm do\n    sum = sum + i\n    count = count + 1\n  end\n \
    \ return string.format('0b%b', math.floor(sum / count))\nend", "  local nn = math.floor(n)\n\
    \  local mm = math.floor(m)\n  if nn > mm then\n    return -1\n  end\n  local\
    \ sum = 0\n  local count = 0\n  for i = nn + 1, mm do\n    sum = sum + i\n   \
    \ count = count + 1\n  end\n  return string.format('0b%b', sum / count)\nend",
  "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local count = 0\n  for\
    \ i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return tostring(sum\
    \ / count)\nend", "  local sum = 0\n  local count = 0\n  for i = n, m do\n   \
    \ sum = sum + i\n    count = count + 1\n  end\n  if count > 0 then\n    return\
    \ string.format('0b%b', sum / count)\n  else\n    return -1\n  end\nend", "  if\
    \ n > m then\n    return -1\n  end\n  local sum = 0\n  local count = 0\n  for\
    \ i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  local avg =\
    \ sum / count\n  local bin = string.format('%b', avg)\n  return bin\nend", " \
    \ local nn = math.floor(n/m)\n  if nn > m then return -1 end\n  local bin = string.format('%b',\
    \ nn)\n  local bin = bin:sub(1, bin:len()-1)\n  return bin\nend", "  if m > n\
    \ then\n    return -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n,\
    \ m do\n    sum = sum + i\n    count = count + 1\n  end\n  local avg = sum / count\n\
    \  return tostring(avg)\nend", "  if m > n then\n    return -1\n  end\n  local\
    \ sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count\
    \ = count + 1\n  end\n  return \"0b\" .. tostring(sum / count)\nend", "  local\
    \ avg = math.floor((n + m) / 2)\n  if avg > m then return -1 end\n  return tostring(avg)\n\
    end", "  local nm = math.floor(n/m)*m\n  if nm > m then return -1 end\n  return\
    \ bin(nm)\nend", "  local nn = math.floor(n)\n  local mm = math.floor(m)\n  if\
    \ mm > n then\n    return -1\n  end\n  return string.format('0b%b', nn + (mm-nn)*math.pow(2,\
    \ math.floor(math.log2(mm-nn))))\nend", "  local nm = math.floor(n/m)\n  if nm\
    \ == 0 then\n    return -1\n  else\n    return string.format('0b%b', nm)\n  end\n\
    end", "  local nn = math.floor(n/m)\n  local mm = math.floor((n-nn*m)/m)\n  return\
    \ string.format('0b%b', nn*m + mm)\nend", "  if m > n then\n    return -1\n  end\n\
    \  local sum = 0\n  for i = n, m, 1 do\n    sum = sum + i\n  end\n  return '0b'\
    \ .. tostring(sum / 2)\nend", "  if m == 0 then\n    return -1\n  end\n  local\
    \ sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count\
    \ = count + 1\n  end\n  return string.format('0b%b', sum / count)\nend", "  local\
    \ nm = math.floor(n/m)\n  if nm == 0 then\n    return -1\n  else\n    return string.format('0b%b',\
    \ nm*m)\n  end\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n\
    \  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count +\
    \ 1\n  end\n  return tostring(sum / count)\nend", "  if n > m then\n    return\
    \ -1\n  end\n  local sum = 0\n  local count = 0\n  local i = n\n  while i <= m\
    \ do\n    sum = sum + i\n    count = count + 1\n    i = i + 1\n  end\n  return\
    \ string.format('0b%b', sum / count)\nend", "  if m > n then\n    return -1\n\
    \  end\n  local sum = 0\n  local count = 0\n  while n > m do\n    sum = sum +\
    \ n\n    n = n - 1\n    count = count + 1\n  end\n  return tostring(sum / count)\n\
    end", "  if m == 0 then\n    return -1\n  elseif n == m then\n    return tostring(n\
    \ / 2)\n  else\n    return tostring(n / 2) .. \"0\" .. tostring(m / 2)\n  end\n\
    end", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local count =\
    \ 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return\
    \ string.format('0b%b', sum / count)\nend", "  if m == 0 then\n    return -1\n\
    \  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum = sum +\
    \ i\n    count = count + 1\n  end\n  local avg = sum / count\n  local bin = string.format('%b',\
    \ avg)\n  return bin\nend", "  if n < m then\n    return -1\n  end\n  local sum\
    \ = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count\
    \ + 1\n  end\n  return string.format('0b%b', sum / count)\nend", "  local nm =\
    \ math.floor(n/m)*m\n  if nm > m then return -1 end\n  return string.format('0b%b',\
    \ nm)\nend", "  if n > m then\n    return -1\n  end\n  local sum = 0\n  for i\
    \ = n, m do\n    sum = sum + i\n  end\n  return tonumber(string.format(\"%b\"\
    , sum))\nend", "  if n > m then return -1 end\n  local sum = 0\n  for i = n, m\
    \ do\n    sum = sum + i\n  end\n  return sum / 2\nend", "  if m > n then\n   \
    \ return -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n  \
    \  sum = sum + i\n    count = count + 1\n  end\n  return string.format('0b%b',\
    \ sum / count)\nend", "  if n > m then\n    return -1\n  end\n  local sum = 0\n\
    \  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count +\
    \ 1\n  end\n  return string.format(\"0b%b\", sum / count)\nend", "  local sum\
    \ = 0\n  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count\
    \ + 1\n  end\n  if count > 0 then\n    return string.format('0b%b', sum / count)\n\
    \  else\n    return -1\n  end\nend", "  local nm = math.max(m, n)\n  local sum\
    \ = 0\n  local count = 0\n  for i = n, nm do\n    sum = sum + i\n    count = count\
    \ + 1\n  end\n  if count > 0 then\n    return tostring(sum / count)\n  else\n\
    \    return -1\n  end\nend", "  local nm = math.floor(n/m)\n  if nm == 0 then\n\
    \    return -1\n  else\n    return string.format('0b%0*d', math.ceil(nm), m)\n\
    \  end\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local\
    \ count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n\
    \  return string.format(\"0b%b\", sum / count)\nend", "  if n < m then\n    return\
    \ -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum =\
    \ sum + i\n    count = count + 1\n  end\n  return string.format('0b%b', sum /\
    \ count)\nend", "  if m > n then return -1 end\n  local sum = 0\n  local count\
    \ = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return\
    \ string.format('0b%b', sum / count)\nend", "  local avg = math.floor((n + m)\
    \ / 2)\n  if avg > m then return -1 end\n  return tostring(avg)\nend", "  if m\
    \ > n then\n    return -1\n  end\n  local sum = 0\n  local count = 0\n  while\
    \ n <= m do\n    sum = sum + n\n    count = count + 1\n    n = n + 1\n  end\n\
    \  return string.format('0b%b', sum / count)\nend", "  if m > n then\n    return\
    \ -1\n  end\n  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  return\
    \ '0b' .. string.format('%0*b', math.ceil(math.log(sum, 2)), sum)\nend", "  if\
    \ n > m then\n    return -1\n  end\n  local sum = 0\n  local count = 0\n  for\
    \ i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return string.format('0b%b',\
    \ sum / count)\nend", "  local nn = math.floor(n/m)\n  local mm = math.floor((n-nn*m)/m)\n\
    \  return string.format('0b%b', nn*m + mm)\nend", "  if m > n then\n    return\
    \ -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n    sum =\
    \ sum + i\n    count = count + 1\n  end\n  return string.format('0b%b', sum /\
    \ count)\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local\
    \ count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n\
    \  return \"0b\" .. tostring(sum / count)\nend", "  local sum = 0\n  local count\
    \ = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  if\
    \ count > 0 then\n    return string.format(\"0b%b\", sum / count)\n  else\n  \
    \  return -1\n  end\nend", "  local nm = math.floor(n/m)\n  local remainder =\
    \ n - nm * m\n  if nm == 0 then\n    return 0\n  elseif nm == 1 then\n    return\
    \ 1\n  elseif nm == m then\n    return remainder\n  else\n    return nm * m +\
    \ 1\n  end\nend", "  if n < m then\n    return -1\n  end\n  local sum = 0\n  local\
    \ count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n\
    \  return string.format('0b%b', sum / count)\nend", "  if m > n then\n    return\
    \ -1\n  end\n  local sum = 0\n  local count = 0\n  local i = n\n  while i <= m\
    \ do\n    sum = sum + i\n    count = count + 1\n    i = i + 1\n  end\n  return\
    \ string.format('0b%b', sum / count)\nend", "  local nn = math.max(n, m)\n  local\
    \ mm = math.min(m, n)\n  local sum = 0\n  local count = 0\n  for i = n, mm do\n\
    \    sum = sum + i\n    count = count + 1\n  end\n  return tostring(sum / count)\
    \ or '-1'\nend", "  if n > m then\n    return -1\n  end\n  local sum = 0\n  local\
    \ count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n\
    \  local avg = sum / count\n  return tostring(avg)\nend", "  if m > n then\n \
    \   return -1\n  end\n  local sum = 0\n  local count = 0\n  for i = n, m do\n\
    \    sum = sum + i\n    count = count + 1\n  end\n  return string.format('0b%b',\
    \ sum / count)\nend", "  local nm, mn = math.abs(n), math.abs(m)\n  if nm > mn\
    \ then\n    return -1\n  end\n  local ni, mi = math.floor(n), math.floor(m)\n\
    \  local sum = 0\n  local count = 0\n  for i = ni, mi do\n    sum = sum + i\n\
    \    count = count + 1\n  end\n  return tostring(sum / count)\nend", "  local\
    \ nm, m, n = n, m, 0\n  while m <= n do\n    m, n = m + 1, n\n  end\n  if n ==\
    \ m then\n    return tostring(m)\n  end\n  local digits = math.floor(math.log(m)\
    \ / math.log(2))\n  local binary = tostring(math.floor(m))\n  local remainder\
    \ = math.floor((m - math.floor(m)) / math.pow(2, digits))\n  while remainder >\
    \ 0 do\n    binary = string.format(\"%0*b%s\", digits, binary, tostring(remainder))\n\
    \    remainder = remainder - math.pow(2, digits)\n  end\n  return binary\nend",
  "  local nn = math.floor(n)\n  local mm = math.floor(m)\n  if mm > n then\n    return\
    \ -1\n  end\n  local sum = 0\n  local count = 0\n  for i = nn, mm do\n    sum\
    \ = sum + i\n    count = count + 1\n  end\n  return string.format('0b%b', sum\
    \ / count)\nend", "  local nm, m, nn, mm\n  nm, m, nn, mm = n, m, n, m\n  if m\
    \ > n then\n    return -1\n  end\n  local sum = 0\n  while nn <= m do\n    sum\
    \ = sum + nn\n    nn = nn + 1\n  end\n  return '0b' .. string.format('%0*d', math.floor(math.log10(sum)),\
    \ sum)\nend", "  local nm = math.max(m, n)\n  local sum = 0\n  for i = n, nm do\n\
    \    sum = sum + i\n  end\n  return tonumber(string.format('%b', sum))\nend",
  "  local nm = math.max(m, n)\n  local sum = 0\n  local count = 0\n  for i = n, nm\
    \ do\n    sum = sum + i\n    count = count + 1\n  end\n  return string.format('0b%b',\
    \ sum / count)\nend", "  if m == 0 then\n    return -1\n  end\n  if n == m then\n\
    \    return tostring(m)\n  end\n  local sum = 0\n  local count = 0\n  for i =\
    \ n, m do\n    sum = sum + i\n    count = count + 1\n  end\n  return tostring(sum\
    \ / count)\nend", "  if n > m then\n    return -1\n  end\n  local sum = 0\n  for\
    \ i = n, m + 1 do\n    sum = sum + i\n  end\n  return '0b' .. string.format('%b',\
    \ sum / 2)\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n  local\
    \ count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count + 1\n  end\n\
    \  return string.format('0b%b', sum / count)\nend", "  local nm = math.min(n,\
    \ m)\n  local nn = math.max(n, m)\n  local sum = 0\n  local count = 0\n  for i\
    \ = nm,nm do\n    sum = sum + i\n    count = count + 1\n  end\n  if count == 0\
    \ then\n    return -1\n  end\n  local bin = string.format(\"%b\", sum / count)\n\
    \  return bin\nend", "  if m > n then\n    return -1\n  end\n  local sum = 0\n\
    \  local count = 0\n  for i = n, m do\n    sum = sum + i\n    count = count +\
    \ 1\n  end\n  return \"0b\" .. tostring(sum / count)\nend", "  if m > n then\n\
    \    return -1\n  end\n  local sum = 0\n  local count = 0\n  while n <= m do\n\
    \    sum = sum + n\n    n = n + 1\n    count = count + 1\n  end\n  return string.format('0b%b',\
    \ sum / count)\nend", "  local nm = math.floor(n/m)*m\n  if nm > m then\n    return\
    \ -1\n  else\n    return nm\n  end\nend", "  local nn = math.floor(n)\n  local\
    \ mm = math.floor(m)\n  if nn > mm then\n    return -1\n  end\n  local sum = 0\n\
    \  for i = nn + 1, mm do\n    sum = sum + i\n  end\n  return '0b' .. string.format('%0*d',\
    \ math.ceil(math.log2(sum)), sum)\nend", "  if m > n then\n    return -1\n  end\n\
    \  local sum = 0\n  for i = n, m do\n    sum = sum + i\n  end\n  return '0b' ..\
    \ tostring(sum / 2)\nend", "  local sum = 0\n  local count = 0\n  for i = n, m\
    \ do\n    sum = sum + i\n    count = count + 1\n  end\n  if count > 0 then\n \
    \   return sum / count\n  else\n    return -1\n  end\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_40_triples_sum_to_zero
language: lua
prompt: "-- triples_sum_to_zero takes a list of integers as an input.\n-- it returns\
  \ True if there are three distinct elements in the list that\n-- sum to zero, and\
  \ False otherwise.\n-- >>> triples_sum_to_zero({1, 3, 5, 0})\n-- false\n-- >>> triples_sum_to_zero({1,\
  \ 3, -2, 1})\n-- true\n-- >>> triples_sum_to_zero({1, 2, 3, 7})\n-- false\n-- >>>\
  \ triples_sum_to_zero({2, 4, -5, 3, 9, 7})\n-- true\n-- >>> triples_sum_to_zero({1})\n\
  -- false\nlocal function triples_sum_to_zero(l)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triples_sum_to_zero\n\
  \    lu.assertEquals(candidate({1, 3, 5, 0}), false)\n    lu.assertEquals(candidate({1,\
  \ 3, 5, -1}), false)\n    lu.assertEquals(candidate({1, 3, -2, 1}), true)\n    lu.assertEquals(candidate({1,\
  \ 2, 3, 7}), false)\n    lu.assertEquals(candidate({1, 2, 5, 7}), false)\n    lu.assertEquals(candidate({2,\
  \ 4, -5, 3, 9, 7}), true)\n    lu.assertEquals(candidate({1}), false)\n    lu.assertEquals(candidate({1,\
  \ 3, 5, -100}), false)\n    lu.assertEquals(candidate({100, 3, 5, -100}), false)\n\
  end\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local sum = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n  end\n\
    \  return sum == 0\nend", "  local sum = 0\n  for _, v in ipairs(l) do\n    sum\
    \ = sum + v\n  end\n  return sum == 0\nend", "  local sum = 0\n  for _, v in ipairs(l)\
    \ do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local sum = 0\n  for\
    \ _, v in pairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local\
    \ s = #l\n  for i = 1, s do\n    local a, b, c = l[i], l[i + 1], l[i + 2]\n  \
    \  if a + b + c == 0 then\n      return true\n    end\n  end\n  return false\n\
    end", "  local sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n  end\n\
    \  return sum == 0\nend", "  local sum = 0\n  for _, v in ipairs(l) do\n    sum\
    \ = sum + v\n    if sum > 0 then\n      return false\n    end\n  end\n  return\
    \ true\nend", "  local n = 0\n  for _, v in pairs(l) do\n    n = n + v\n  end\n\
    \  return n == 0\nend", "  local sum = 0\n  for _, v in ipairs(l) do\n    sum\
    \ = sum + v\n    if sum > 0 then\n      return false\n    end\n  end\n  return\
    \ true\nend", "  local sum = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n\
    \  end\n  return sum == 0\nend", "  local sum = 0\n  for _, v in pairs(l) do\n\
    \    sum = sum + v\n  end\n  return sum == 0\nend", "  local sum = 0\n  for _,\
    \ v in ipairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local\
    \ n = 0\n  local s = nil\n  for _, v in ipairs(l) do\n    if v > 0 then\n    \
    \  n = n + 1\n      s = v\n    end\n  end\n  return n == 3\nend", "  local sum\
    \ = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\n\
    end", "  local sum = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n  end\n\
    \  return sum == 0\nend", "  local function helper(l, sum)\n    if #l == 0 then\n\
    \      return false\n    end\n    if sum == 0 then\n      return true\n    end\n\
    \    local first = l[1]\n    local rest = l[#l]\n    return helper(rest, sum -\
    \ first) or helper(rest, sum)\n  end\n  return helper(l, 0)\nend", "  local sum\
    \ = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\n\
    end", "  local sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n  end\n\
    \  return sum == 0\nend", "  local sum = 0\n  for _, v in pairs(l) do\n    sum\
    \ = sum + v\n  end\n  return sum == 0\nend", "  local sum = 0\n  for _, v in pairs(l)\
    \ do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local s = #l\n  local\
    \ sum = 0\n  for i = 1, s do\n    sum = sum + l[i]\n    if sum == 0 then\n   \
    \   return false\n    end\n  end\n  return true\nend", "  local function helper(l,\
    \ sum)\n    if #l == 0 then\n      return true\n    end\n    if sum == 0 then\n\
    \      return false\n    end\n    if #l == 1 then\n      return l[1] == sum\n\
    \    end\n    local first = l[1]\n    local rest = helper(l[2:], sum - first)\n\
    \    return rest and first == sum\n  end\n  return helper(l, 0)\nend", "  local\
    \ sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n  end\n  return sum ==\
    \ 0\nend", "  local n = 0\n  local s = nil\n  for _, v in ipairs(l) do\n    n\
    \ = n + 1\n    s = s + v\n  end\n  return n == 3 and s == 0\nend", "  local sum\
    \ = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\n\
    end", "  local sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n  end\n\
    \  return sum == 0\nend", "  local sum = 0\n  for _, v in pairs(l) do\n    sum\
    \ = sum + v\n  end\n  return sum == 0\nend", "  local sum = 0\n  for _, v in pairs(l)\
    \ do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local sum = 0\n  for\
    \ _, v in pairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local\
    \ sum = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n  end\n  return sum\
    \ == 0\nend", "  local sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n\
    \  end\n  return sum == 0\nend", "  local n = 0\n  local m = #l\n  while n > 0\
    \ do\n    local n2 = m\n    while n2 > 0 do\n      local n3 = n2 * n2\n      local\
    \ n4 = n2 * n2 + 1\n      if n3 > 0 and l[n3] == 0 and l[n4] == 0 then\n     \
    \   return true\n      end\n      n2 = n2 - 1\n    end\n    n = n - 1\n    m =\
    \ m - 1\n  end\n  return false\nend", "  local n = 0\n  for _, v in ipairs(l)\
    \ do\n    n = n + v\n  end\n  return n == 0\nend", "  local sum = 0\n  for _,\
    \ v in ipairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local\
    \ sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n  end\n  return sum ==\
    \ 0\nend", "  local sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n  end\n\
    \  return sum == 0\nend", "  local sum = 0\n  for _, v in ipairs(l) do\n    sum\
    \ = sum + v\n  end\n  return sum == 0\nend", "  local sum = 0\n  for _, v in ipairs(l)\
    \ do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local function is_triple(l)\n\
    \    return #l == 3 and l[1] == l[2] and l[2] == l[3]\n  end\n  local function\
    \ is_zero(l)\n    return l[1] == 0 and l[2] == 0 and l[3] == 0\n  end\n  local\
    \ function is_distinct(l)\n    return #l == 3 and is_zero(l) or is_triple(l)\n\
    \  end\n  local function is_three_distinct(l)\n    return #l == 3 and is_distinct(l)\n\
    \  end\n  local function is_three_distinct_from_zero(l)\n    return #l == 3 and\
    \ is_distinct(l) and is_zero(l)\n  end\n  local function is_three_distinct_from_triple(l)\n\
    \    return #l == 3 and is_distinct(l) and is_triple(l)\n  end\n  local function\
    \ is_three_distinct_from_distinct(l)\n    return #l == 3 and is_distinct(l) and\
    \ is_three_distinct(l)\n  end\n  local function is_three_distinct_from_three_distinct(l)\n\
    \    return #l == 3 and is_distinct(l) and is_three_distinct_from_distinct(l)\n\
    \  end\n  local function is_three_distinct_from_three_distinct_from_zero(l)\n\
    \    return #l == 3 and is_distinct(l) and is_three_distinct_from_distinct(l)\
    \ and is_zero(l)\n  end\n  local function is_three_distinct_from_three_distinct_from_triple(l)\n\
    \    return #l == 3 and is_distinct(l) and is_three_distinct_from_distinct(l)\
    \ and is_triple(l)\n  end\n  local function is_three_distinct_from_three_distinct_from_distinct(l)\n\
    \    return #l == 3 and is_distinct(l) and is_three_distinct_from_three_distinct(l)\n\
    \  end\n  local function is_three_distinct_from_three_distinct_from_three_distinct(l)\n\
    \    return #l == 3 and is_distinct(l) and is_three_distinct_from_three_distinct_from_distinct(l)\n\
    \  end\n  local function is_three_distinct_from_three_distinct_from_three_distinct_from_zero(l)\n\
    \    return #l == 3 and is_distinct(l) and is_three_distinct_from_three_distinct_from_distinct(l)\
    \ and is_zero(l)\n  end\n  local function is_three_distinct_from_three_distinct_from_three_distinct_from_triple(l)\n\
    \    return #l == 3 and is_distinct(l) and is_three_distinct_from_three_distinct_from_distinct(l)\
    \ and is_triple(l)\n  end\n  local function is_three_distinct_from_three_distinct_from_three_distinct_from_distinct_from_zero(l)\n\
    \    return #l == 3 and is_distinct(l", "  local n = 0\n  for _, v in ipairs(l)\
    \ do\n    n = n + v\n  end\n  return n == 0\nend", "  local sum = 0\n  for _,\
    \ v in pairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local\
    \ sum = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n  end\n  return sum\
    \ == 0\nend", "  local n = 0\n  for _, v in ipairs(l) do\n    n = n + v\n  end\n\
    \  return n == 0\nend", "  local sum = 0\n  for _, v in pairs(l) do\n    sum =\
    \ sum + v\n  end\n  return sum == 0\nend", "  local sum = 0\n  for _, v in pairs(l)\
    \ do\n    sum = sum + v\n  end\n  return sum == 0 and #l == 3\nend", "  local\
    \ sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n  end\n  return sum ==\
    \ 0\nend", "  local sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n  end\n\
    \  return sum == 0\nend", "  local function is_triple(l)\n    return #l == 3 and\
    \ l[1] == l[2] and l[2] == l[3]\n  end\n  local function is_triples(l)\n    return\
    \ #l == 3 and is_triple(l) and is_triple(l) and is_triple(l)\n  end\n  local function\
    \ is_zero(l)\n    return #l == 0 and l[1] == 0 and l[2] == 0 and l[3] == 0\n \
    \ end\n  return is_triples(l) or is_zero(l)\nend", "  local sum = 0\n  for _,\
    \ v in pairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local\
    \ sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n  end\n  return sum ==\
    \ 0\nend", "  local n = 0\n  for _, v in pairs(l) do\n    n = n + v\n  end\n \
    \ return n == 0\nend", "  local sum = 0\n  for _, v in pairs(l) do\n    sum =\
    \ sum + v\n  end\n  return sum == 0\nend", "  local sum = 0\n  for _, v in pairs(l)\
    \ do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local n = 0\n  for\
    \ _, v in ipairs(l) do\n    n = n + v\n  end\n  return n == 0\nend", "  local\
    \ sum = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n  end\n  return sum\
    \ == 0\nend", "  local function helper(l, sum)\n    if #l == 0 then\n      return\
    \ false\n    end\n    if sum == 0 then\n      return true\n    end\n    local\
    \ first = l[1]\n    local rest = l[#l]\n    if rest == 0 then\n      return helper(l[#l],\
    \ sum - first)\n    else\n      return helper(rest, sum - first)\n    end\n  end\n\
    \  return helper(l, 0)\nend", "  local sum = 0\n  for _, v in ipairs(l) do\n \
    \   sum = sum + v\n  end\n  return sum == 0\nend", "  local sum = 0\n  for _,\
    \ v in ipairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local\
    \ s = #l\n  local t = {}\n  local i = 1\n  while i <= s do\n    local x = l[i]\n\
    \    local y = l[i - 1]\n    local z = l[i - 2]\n    if x + y + z == 0 then\n\
    \      table.insert(t, x)\n      table.insert(t, y)\n      table.insert(t, z)\n\
    \    end\n    i = i + 3\n  end\n  return #t == 3\nend", "  local s = #l\n  local\
    \ i = 0\n  while i < s do\n    local e = l[i]\n    local j = i + 1\n    while\
    \ j < s do\n      local f = l[j]\n      if e + f == 0 then\n        return true\n\
    \      elseif e < f then\n        return false\n      else\n        j = j + 1\n\
    \      end\n    end\n    i = i + 1\n  end\n  return false\nend", "  local sum\
    \ = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\n\
    end", "  local n = 0\n  for _, v in pairs(l) do\n    n = n + v\n  end\n  return\
    \ n == 0\nend", "  local sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n\
    \  end\n  return sum == 0\nend", "  local sum = 0\n  for _, v in ipairs(l) do\n\
    \    sum = sum + v\n  end\n  return sum == 0\nend", "  local sum = 0\n  for _,\
    \ v in pairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local\
    \ sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n  end\n  return sum ==\
    \ 0\nend", "  local s = #l\n  local t = {}\n  for i = 1, s do\n    t[i] = l[i]\n\
    \  end\n  local sum = 0\n  for i = 1, s do\n    sum = sum + t[i]\n  end\n  if\
    \ sum == 0 then\n    return true\n  else\n    return false\n  end\nend", "  local\
    \ n = 0\n  for _, v in pairs(l) do\n    n = n + v\n  end\n  return n == 0\nend",
  "  local sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n  end\n  return\
    \ sum == 0\nend", "  local n = 0\n  for _, v in ipairs(l) do\n    n = n + v\n\
    \  end\n  return n == 0\nend", "  local sum = 0\n  for _, v in ipairs(l) do\n\
    \    sum = sum + v\n    if sum > 0 then\n      return false\n    end\n  end\n\
    \  return true\nend", "  local zeros = 0\n  local negatives = 0\n  for i = 1,\
    \ #l do\n    local x = l[i]\n    if x < 0 then\n      negatives = negatives +\
    \ 1\n    elseif x == 0 then\n      zeros = zeros + 1\n    else\n      break\n\
    \    end\n  end\n  return zeros == 3 and negatives == 0\nend", "  local s = #l\n\
    \  local sum = 0\n  for i = 1, s do\n    sum = sum + l[i]\n    if sum > 0 then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local sum = 0\n \
    \ for _, v in pairs(l) do\n    sum = sum + v\n  end\n  return sum == 0 and #l\
    \ == 3\nend", "  local n = 0\n  local s = nil\n  for _, v in pairs(l) do\n   \
    \ n = n + v\n    if s == nil then\n      s = v\n    elseif v == s then\n     \
    \ n = n - s\n    else\n      return false\n    end\n  end\n  return n == 0\nend",
  "  local sum = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n  end\n  return\
    \ sum == 0\nend", "  local function helper(l, sum)\n    if #l == 0 then\n    \
    \  return false\n    end\n    local first = l[1]\n    local rest = l[#l]\n   \
    \ if sum + first == 0 then\n      return helper(rest, sum)\n    end\n    return\
    \ helper(rest, sum + first)\n  end\n  return helper(l, 0)\nend", "  local n =\
    \ 0\n  for _, v in pairs(l) do\n    n = n + v\n  end\n  return n == 0\nend", " \
    \ local sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n  end\n  return\
    \ sum == 0\nend", "  local function helper(l, sum)\n    if #l == 0 then\n    \
    \  return false\n    end\n    if sum > 0 then\n      local a, b, c = unpack(l)\n\
    \      if a + b + c > sum then\n        return helper(l, sum)\n      else\n  \
    \      return helper(l, sum - a + b + c)\n      end\n    else\n      local a,\
    \ b, c = unpack(l)\n      if a + b + c < sum then\n        return helper(l, sum)\n\
    \      else\n        return helper(l, sum - a + b + c)\n      end\n    end\n \
    \ end\n  return helper(l, 0)\nend", "  local sum = 0\n  for _, v in pairs(l) do\n\
    \    sum = sum + v\n  end\n  return sum == 0 and #l == 3\nend", "  local sum =\
    \ 0\n  for _, v in pairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\n\
    end", "  local n = 0\n  for _, v in pairs(l) do\n    n = n + v\n  end\n  return\
    \ n == 0\nend", "  local sum = 0\n  for _, v in ipairs(l) do\n    sum = sum +\
    \ v\n  end\n  return sum == 0 and #l == 3\nend", "  local sum = 0\n  for _, v\
    \ in pairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local\
    \ sum = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n  end\n  return sum\
    \ == 0\nend", "  local sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n\
    \  end\n  return sum == 0\nend", "  local function helper(l, sum)\n    if #l ==\
    \ 0 then\n      return false\n    end\n    if sum == 0 then\n      return true\n\
    \    end\n    local first = l[1]\n    local rest = l[#l]\n    return helper(rest,\
    \ sum - first)\n  end\n  return helper(l, 0)\nend", "  local sum = 0\n  for _,\
    \ v in ipairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local\
    \ s = #l\n  for i = 1, s do\n    local t = l[i]\n    if t ~= 0 and t ~= t then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local n = 0\n  for\
    \ _, v in ipairs(l) do\n    n = n + v\n  end\n  return n == 0\nend", "  local\
    \ sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n  end\n  return sum ==\
    \ 0\nend", "  local sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n  end\n\
    \  return sum == 0\nend", "  local sum = 0\n  for _, v in ipairs(l) do\n    sum\
    \ = sum + v\n    if sum > 0 then\n      return false\n    end\n  end\n  return\
    \ true\nend", "  local s = #l\n  local t = 0\n  local i = 1\n  while i <= s do\n\
    \    t = t + l[i]\n    i = i + 1\n    if t == 0 then\n      return true\n    end\n\
    \  end\n  return false\nend", "  local sum = 0\n  for _, v in ipairs(l) do\n \
    \   sum = sum + v\n  end\n  return sum == 0\nend", "  local sum = 0\n  for _,\
    \ v in pairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local\
    \ s = #l\n  local i = 0\n  while i < s do\n    local t = l[i]\n    local j = i\
    \ + 1\n    while j < s and t + l[j] == 0 do\n      j = j + 1\n    end\n    if\
    \ j - i == 3 then\n      return true\n    end\n    i = j\n  end\n  return false\n\
    end", "  local sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n  end\n\
    \  return sum == 0\nend", "  local function is_triple(l)\n    return #l == 3 and\
    \ l[1] == l[2] and l[2] == l[3]\n  end\n  local function is_zero(l)\n    return\
    \ #l == 0 and l[1] == l[2] and l[2] == l[3]\n  end\n  local function is_distinct(l)\n\
    \    return #l == 3 and l[1] == l[2] and l[2] ~= l[3]\n  end\n  local function\
    \ is_sum(l)\n    return #l == 3 and l[1] == l[2] and l[2] ~= 0\n  end\n  local\
    \ function is_triple(l)\n    return #l == 3 and l[1] == l[2] and l[2] == l[3]\n\
    \  end\n  local function is_sum(l)\n    return #l == 3 and l[1] == l[2] and l[2]\
    \ ~= 0\n  end\n  local function is_zero(l)\n    return #l == 0 and l[1] == l[2]\
    \ and l[2] == l[3]\n  end\n  local function is_distinct(l)\n    return #l == 3\
    \ and l[1] == l[2] and l[2] ~= l[3]\n  end\n  local function is_sum(l)\n    return\
    \ #l == 3 and l[1] == l[2] and l[2] ~= 0\n  end\n  local function is_triple(l)\n\
    \    return #l == 3 and l[1] == l[2] and l[2] == l[3]\n  end\n  local function\
    \ is_sum(l)\n    return #l == 3 and l[1] == l[2] and l[2] ~= 0\n  end\n  local\
    \ function is_zero(l)\n    return #l == 0 and l[1] == l[2] and l[2] == l[3]\n\
    \  end\n  local function is_distinct(l)\n    return #l == 3 and l[1] == l[2] and\
    \ l[2] ~= l[3]\n  end\n  local function is_sum(l)\n    return #l == 3 and l[1]\
    \ == l[2] and l[2] ~= 0\n  end\n  local function is_triple(l)\n    return #l ==\
    \ 3 and l[1] == l[2] and l[2] == l[3]\n  end\n  local function is_sum(l)\n   \
    \ return #l == 3 and l[1] == l[2] and l[2] ~= 0\n  end\n  local function is_zero(l)\n\
    \    return #l == 0 and l[1] == l[2] and l[2] == l[3]\n  end\n  local function\
    \ is_distinct(l)\n    return #l == 3 and l[1] == l[2] and l[2] ~= l[3]\n  end\n\
    \  local function is_sum(l)\n    return #l == 3 and l[1] == l[2] and l[2] ~= 0\n\
    \  end\n  local function is_triple(l)\n    return #l == 3 and l[1] == l[2] and\
    \ l[2] == ", "  local sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n\
    \  end\n  return sum == 0\nend", "  local sum = 0\n  for _, v in ipairs(l) do\n\
    \    sum = sum + v\n  end\n  return sum == 0\nend", "  local zeros = 0\n  local\
    \ triples = 0\n  for _, v in pairs(l) do\n    if v == 0 then\n      zeros = zeros\
    \ + 1\n    elseif v > 0 then\n      triples = triples + 1\n    end\n  end\n  return\
    \ zeros == 3 and triples == 3\nend", "  local sum = 0\n  for _, v in pairs(l)\
    \ do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local sum = 0\n  for\
    \ _, v in ipairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\nend", " \
    \ local n = 0\n  for _, v in pairs(l) do\n    n = n + v\n  end\n  return n ==\
    \ 0\nend", "  local sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n  end\n\
    \  return sum == 0\nend", "  local sum = 0\n  for _, v in ipairs(l) do\n    sum\
    \ = sum + v\n  end\n  return sum == 0\nend", "  local sum = 0\n  for _, v in pairs(l)\
    \ do\n    sum = sum + v\n  end\n  return sum == 0 and #l == 3\nend", "  local\
    \ sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n  end\n  return sum ==\
    \ 0\nend", "  local sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n  end\n\
    \  return sum == 0\nend", "  local sum = 0\n  for _, v in pairs(l) do\n    sum\
    \ = sum + v\n  end\n  return sum == 0\nend", "  local function triples_sum_to_zero_helper(l,\
    \ sum)\n    if #l == 0 then\n      return false\n    end\n    local first = l[1]\n\
    \    local rest = l[#l]\n    if sum + first > 0 then\n      return triples_sum_to_zero_helper(rest,\
    \ sum + first)\n    else\n      return triples_sum_to_zero_helper(rest, sum)\n\
    \    end\n  end\n  return triples_sum_to_zero_helper(l, 0)\nend", "  local sum\
    \ = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\n\
    end", "  local function helper(l, sum)\n    if #l == 0 then\n      return false\n\
    \    end\n    if sum == 0 then\n      return true\n    end\n    if sum > 0 then\n\
    \      return helper(l, sum - l[1]) or helper(l, sum - l[2])\n    else\n     \
    \ return helper(l, sum + l[1]) or helper(l, sum + l[2])\n    end\n  end\n  return\
    \ helper(l, 0)\nend", "  local function is_triple(l)\n    return #l == 3 and l[1]\
    \ == l[2] and l[2] == l[3]\n  end\n  local function is_triples(l)\n    return\
    \ #l == 3 and is_triple(l) and is_triple(l) and is_triple(l)\n  end\n  return\
    \ #l == 3 and is_triples(l)\nend", "  local sum = 0\n  for _, v in pairs(l) do\n\
    \    sum = sum + v\n  end\n  return sum == 0 and #l == 3\nend", "  local s = #l\n\
    \  local t = {}\n  local i = 1\n  while i <= s do\n    local k = i\n    while\
    \ k <= s do\n      if l[k] == l[k] then\n        table.insert(t, l[k])\n     \
    \ else\n        break\n      end\n      k = k + 1\n    end\n    i = i + 1\n  end\n\
    \  if #t == 3 then\n    return true\n  else\n    return false\n  end\nend", " \
    \ local sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n  end\n  return\
    \ sum == 0\nend", "  local sum = 0\n  for _, v in pairs(l) do\n    sum = sum +\
    \ v\n  end\n  return sum == 0\nend", "  local sum = 0\n  for _, v in pairs(l)\
    \ do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local function triples_sum_to_zero_helper(l,\
    \ sum)\n    local t = {}\n    for _, v in ipairs(l) do\n      t[#t + 1] = v\n\
    \      if sum + v ~= 0 then\n        sum = sum + v\n      else\n        return\
    \ true\n      end\n    end\n    return false\n  end\n  return triples_sum_to_zero_helper(l,\
    \ 0)\nend", "  local n = 0\n  for _, v in ipairs(l) do\n    n = n + v\n  end\n\
    \  return n == 0\nend", "  local zero = 0\n  local three = 0\n  for _, v in ipairs(l)\
    \ do\n    zero = zero + v\n    if zero > 0 then\n      three = three + 1\n   \
    \ end\n  end\n  return three == 3\nend", "  local sum = 0\n  for _, v in ipairs(l)\
    \ do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local sum = 0\n  for\
    \ _, v in pairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local\
    \ function helper(l, i, sum)\n    if i == #l then\n      return true\n    end\n\
    \    local v = l[i]\n    sum = sum + v\n    if sum == 0 then\n      return helper(l,\
    \ i + 1, sum)\n    else\n      return helper(l, i + 1, sum)\n    end\n  end\n\
    \  return helper(l, 1, 0)\nend", "  local sum = 0\n  for _, v in pairs(l) do\n\
    \    sum = sum + v\n  end\n  return sum == 0\nend", "  local sum = 0\n  for _,\
    \ v in pairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local\
    \ sum = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n    if sum > 0 then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local sum = 0\n \
    \ for _, v in pairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\nend",
  "  local sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n  end\n  return\
    \ sum == 0\nend", "  local sum = 0\n  for _, v in pairs(l) do\n    sum = sum +\
    \ v\n  end\n  return sum == 0\nend", "  local sum = 0\n  for _, v in pairs(l)\
    \ do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local sum = 0\n  for\
    \ _, v in ipairs(l) do\n    sum = sum + v\n    if sum > 0 then\n      return false\n\
    \    end\n  end\n  return true\nend", "  local sum = 0\n  for _, v in ipairs(l)\
    \ do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local sum = 0\n  for\
    \ _, v in pairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local\
    \ function is_triple(l)\n    return #l == 3 and l[1] == l[2] and l[2] == l[3]\n\
    \  end\n  local function is_zero(l)\n    return l == 0\n  end\n  local function\
    \ is_three(l)\n    return #l == 3 and is_triple(l) and is_zero(l) and is_zero(l+1)\n\
    \  end\n  local function is_three_to_zero(l)\n    return #l == 3 and is_triple(l)\
    \ and is_zero(l) and is_zero(l+1)\n  end\n  local function is_three_to_zero_or_more(l)\n\
    \    return #l == 3 and is_triple(l) and is_zero(l) and is_zero(l+1) or\n    \
    \       #l == 3 and is_triple(l) and is_zero(l) and is_zero(l+2)\n  end\n  local\
    \ function is_three_to_zero_or_more_to_zero(l)\n    return #l == 3 and is_triple(l)\
    \ and is_zero(l) and is_zero(l+1) or\n           #l == 3 and is_triple(l) and\
    \ is_zero(l) and is_zero(l+2)\n           and is_zero(l+3)\n  end\n  local function\
    \ is_three_to_zero_or_more_to_zero_or_more(l)\n    return #l == 3 and is_triple(l)\
    \ and is_zero(l) and is_zero(l+1) or\n           #l == 3 and is_triple(l) and\
    \ is_zero(l) and is_zero(l+2) or\n           #l == 3 and is_triple(l) and is_zero(l)\
    \ and is_zero(l+3) or\n           #l == 3 and is_triple(l) and is_zero(l) and\
    \ is_zero(l+4)\n  end\n  local function is_three_to_zero_or_more_to_zero_or_more_to_zero(l)\n\
    \    return #l == 3 and is_triple(l) and is_zero(l) and is_zero(l+1) or\n    \
    \       #l == 3 and is_triple(l) and is_zero(l) and is_zero(l+2) or\n        \
    \   #l == 3 and is_triple(l) and is_zero(l) and is_zero(l+3) or\n           #l\
    \ == 3 and is_triple(l) and is_zero(l) and is_zero(l+4) or\n           #l == 3\
    \ and is_triple(l) and is_zero(l) and is_zero(l+5) or\n           #l == 3 and\
    \ is_triple(l) and is_zero(l) and is_zero(l+6)\n  end\n  local function is_three_to_zero_or_more_to_zero_or_more_to_zero_or_more(l)\n\
    \    return #l == 3 and is_triple(l) and is_zero(l) and is_zero(l+1) or\n    \
    \       #l == 3 and is_triple(l) and is_zero(l) and is_zero(l+2) or\n        \
    \   #l == 3 and is_", "  local s = #l\n  local i = 0\n  while i < s do\n    local\
    \ x = l[i]\n    local y = l[i - 2]\n    local z = l[i - 1]\n    if x + y + z ==\
    \ 0 then\n      return true\n    end\n    i = i + 1\n  end\n  return false\nend",
  "  local sum = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n  end\n  return\
    \ sum == 0\nend", "  local n = 0\n  local s = nil\n  for _, v in pairs(l) do\n\
    \    n = n + v\n    if s == nil then\n      s = v\n    else\n      if v == 0 then\n\
    \        return false\n      else\n        if v == s then\n          n = n - v\n\
    \        else\n          return false\n        end\n      end\n    end\n  end\n\
    \  return n == 0\nend", "  local sum = 0\n  for _, v in ipairs(l) do\n    sum\
    \ = sum + v\n  end\n  return sum == 0\nend", "  local sum = 0\n  for _, v in pairs(l)\
    \ do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local sum = 0\n  for\
    \ _, v in ipairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\nend", " \
    \ local s = #l\n  for i = 1, s do\n    local a, b, c = l[i], l[i + 1], l[i + 2]\n\
    \    if b == 0 and c ~= 0 then\n      return false\n    end\n  end\n  return true\n\
    end", "  local sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n  end\n\
    \  return sum == 0\nend", "  local sum = 0\n  for _, v in pairs(l) do\n    sum\
    \ = sum + v\n  end\n  return sum == 0\nend", "  local n = 0\n  for _, v in ipairs(l)\
    \ do\n    n = n + v\n  end\n  return n == 0\nend", "  local sum = 0\n  for _,\
    \ v in ipairs(l) do\n    sum = sum + v\n    if sum > 0 then\n      return false\n\
    \    end\n  end\n  return true\nend", "  local sum = 0\n  for _, v in pairs(l)\
    \ do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local sum = 0\n  for\
    \ _, v in ipairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\nend", " \
    \ local sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n  end\n  return\
    \ sum == 0\nend", "  local sum = 0\n  for _, v in pairs(l) do\n    sum = sum +\
    \ v\n  end\n  return sum == 0\nend", "  local sum = 0\n  for _, v in pairs(l)\
    \ do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local sum = 0\n  for\
    \ _, v in ipairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\nend", " \
    \ local sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n  end\n  return\
    \ sum == 0\nend", "  local function helper(l, sum)\n    if #l == 0 then\n    \
    \  return false\n    end\n    if sum == 0 then\n      return true\n    end\n \
    \   local first = l[1]\n    local rest = l[#l]\n    local second_sum = sum - first\n\
    \    return helper(rest, second_sum) or helper(rest, second_sum + first)\n  end\n\
    \  return helper(l, 0)\nend", "  local sum = 0\n  for _, v in pairs(l) do\n  \
    \  sum = sum + v\n  end\n  return sum == 0\nend", "  local sum = 0\n  for _, v\
    \ in pairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local\
    \ sum = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n  end\n  return sum\
    \ == 0\nend", "  local sum = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n\
    \  end\n  return sum == 0\nend", "  local sum = 0\n  for _, v in ipairs(l) do\n\
    \    sum = sum + v\n  end\n  return sum == 0\nend", "  local sum = 0\n  for _,\
    \ v in ipairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local\
    \ sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n  end\n  return sum ==\
    \ 0\nend", "  local sum = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n \
    \ end\n  return sum == 0\nend", "  local sum = 0\n  for _, v in ipairs(l) do\n\
    \    sum = sum + v\n  end\n  return sum == 0\nend", "  local n = 0\n  for _, v\
    \ in ipairs(l) do\n    n = n + v\n  end\n  return n == 0\nend", "  local sum =\
    \ 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\n\
    end", "  local sum = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n  end\n\
    \  return sum == 0\nend", "  local sum = 0\n  for _, v in pairs(l) do\n    sum\
    \ = sum + v\n  end\n  return sum == 0\nend", "  local sum = 0\n  for _, v in ipairs(l)\
    \ do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local sum = 0\n  for\
    \ _, v in pairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local\
    \ sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n  end\n  return sum ==\
    \ 0\nend", "  local sum = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n \
    \ end\n  return sum == 0\nend", "  local function helper(l, sum)\n    if #l ==\
    \ 0 then\n      return false\n    end\n    if sum == 0 then\n      return true\n\
    \    end\n    if sum == -2 then\n      return helper(l, sum + l[1])\n    end\n\
    \    if sum == -1 then\n      return helper(l, sum + l[2])\n    end\n    return\
    \ helper(l, sum + l[3])\n  end\n  return helper(l, 0)\nend", "  local s = #l\n\
    \  local sum = 0\n  for i = 1, s do\n    sum = sum + l[i]\n  end\n  return sum\
    \ == 0 and #l == 3\nend", "  local function is_triple(l)\n    return #l == 3 and\
    \ l[1] == l[2] and l[2] == l[3]\n  end\n  local function is_zero(l)\n    return\
    \ #l == 0 and l[1] == 0 and l[2] == 0\n  end\n  local function is_three(l)\n \
    \   return #l == 3 and l[1] == l[2] and l[2] == l[3]\n  end\n  local function\
    \ is_three_or_more(l)\n    return #l > 3 and l[1] == l[2] and l[2] == l[3]\n \
    \ end\n  local function is_one_or_more(l)\n    return #l > 1 and l[1] == l[2]\
    \ and l[2] == l[3]\n  end\n  local function is_one_or_more_or_zero(l)\n    return\
    \ #l > 1 and l[1] == l[2] and l[2] == l[3] and l[3] == 0\n  end\n  local function\
    \ is_two(l)\n    return #l == 2 and l[1] == l[2]\n  end\n  local function is_two_or_more(l)\n\
    \    return #l > 2 and l[1] == l[2]\n  end\n  local function is_two_to_three(l)\n\
    \    return #l == 2 and l[1] == l[2] and l[2] == l[3]\n  end\n  local function\
    \ is_two_to_three_or_more(l)\n    return #l > 2 and l[1] == l[2] and l[2] == l[3]\n\
    \  end\n  local function is_two_to_four(l)\n    return #l == 2 and l[1] == l[2]\
    \ and l[2] == l[3] and l[3] == l[4]\n  end\n  local function is_two_to_four_or_more(l)\n\
    \    return #l > 2 and l[1] == l[2] and l[2] == l[3] and l[3] == l[4]\n  end\n\
    \  local function is_two_to_five(l)\n    return #l == 2 and l[1] == l[2] and l[2]\
    \ == l[3] and l[3] == l[4] and l[4] == l[5]\n  end\n  local function is_two_to_five_or_more(l)\n\
    \    return #l > 2 and l[1] == l[2] and l[2] == l[3] and l[3] == l[4] and l[4]\
    \ == l[5]\n  end\n  local function is_two_to_six(l)\n    return #l == 2 and l[1]\
    \ == l[2] and l[2] == l[3] and l[3] == l[4] and l[4] == l[5] and l[5] == l[6]\n\
    \  end\n  local function is_two_to_six_or_more(l)\n    return #l > 2 and l[1]\
    \ == l[2] and l[2] == l[3] and l[3] == l[4] and l[4] == l[5] and l[5] == l", " \
    \ local sum = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n  end\n  return\
    \ sum == 0\nend", "  local sum = 0\n  for _, v in ipairs(l) do\n    sum = sum\
    \ + v\n  end\n  return sum == 0\nend", "  local sum = 0\n  for _, v in ipairs(l)\
    \ do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local sum = 0\n  for\
    \ _, v in ipairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\nend", " \
    \ local sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n  end\n  return\
    \ sum == 0 and #l == 3\nend", "  local sum = 0\n  for _, v in pairs(l) do\n  \
    \  sum = sum + v\n  end\n  return sum == 0\nend", "  local n = 0\n  for _, v in\
    \ pairs(l) do\n    n = n + v\n  end\n  return n == 0\nend", "  local sum = 0\n\
    \  for _, v in pairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\nend",
  "  local s = #l\n  local t = {}\n  for i = 1, s do\n    local x = l[i]\n    if x\
    \ then\n      t[#t + 1] = x\n    end\n  end\n  local count = 0\n  for i = 1, s\
    \ do\n    if t[i] then\n      count = count + 1\n    end\n  end\n  return count\
    \ == 3\nend", "  local function triples_sum_to_zero_aux(l)\n    local function\
    \ aux(l)\n      if #l == 0 then return false end\n      local a, b, c = unpack(l)\n\
    \      if b == 0 and c > 0 then return false end\n      if b == 0 and c < 0 then\
    \ return true end\n      if b > 0 and c > 0 then return false end\n      if b\
    \ > 0 and c < 0 then return true end\n      if b < 0 and c > 0 then return false\
    \ end\n      if b < 0 and c < 0 then return true end\n      return aux(l)\n  \
    \  end\n    return aux(l)\n  end\n  return triples_sum_to_zero_aux(l)\nend", " \
    \ local sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n  end\n  return\
    \ sum == 0\nend", "  local sum = 0\n  for _, v in pairs(l) do\n    sum = sum +\
    \ v\n  end\n  return sum == 0 and #l == 3\nend", "  local sum = 0\n  for _, v\
    \ in ipairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local\
    \ n = 0\n  for _, v in pairs(l) do\n    n = n + v\n  end\n  return n == 0\nend",
  "  local sum = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n    if sum > 0\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local sum\
    \ = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\n\
    end", "  local sum = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n  end\n\
    \  return sum == 0 and #l == 3\nend", "  local sum = 0\n  for _, v in pairs(l)\
    \ do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local sum = 0\n  for\
    \ _, v in pairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local\
    \ sum = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n  end\n  return sum\
    \ == 0\nend", "  local sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n\
    \  end\n  return sum == 0\nend", "  local sum = 0\n  for _, v in pairs(l) do\n\
    \    sum = sum + v\n  end\n  return sum == 0\nend", "  local n = 0\n  local m\
    \ = #l\n  while n > 0 or m > 0 do\n    local n = n - l[m]\n    local m = m - l[m]\n\
    \    if n == 0 and m == 0 then return true end\n  end\n  return false\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

language: lua
name: HumanEval_77_iscube
results:
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\tlocal b = 0\n\
    \twhile a > 0 do\n\t\tb = b * a % 16384\n\t\ta = a / 16384\n\tend\n\treturn b\
    \ == 0 and a or false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr99n7lsp.lua:29:\
    \ expected: true, actual: 0\nstack traceback:\n\t/tmp/tmpr99n7lsp.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmppefjperv.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp3wa21ypl.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a <= 0 then\n\
    \    return false\n  end\n  local b = 1\n  while b < a do\n    if a % b == 0 then\n\
    \      return false\n    end\n    b = b * 3 + 1\n  end\n  return true\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpag7lxrzp.lua:36:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpag7lxrzp.lua:36:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a == 1 then\n        return true\n\
    \    end\n    if a == 2 then\n        return true\n    end\n    if a == 3 then\n\
    \        return true\n    end\n    if a == 4 then\n        return true\n    end\n\
    \    if a == 5 then\n        return true\n    end\n    if a == 6 then\n      \
    \  return true\n    end\n    if a == 7 then\n        return true\n    end\n  \
    \  if a == 8 then\n        return true\n    end\n    if a == 9 then\n        return\
    \ true\n    end\n    if a == 10 then\n        return true\n    end\n    if a ==\
    \ 11 then\n        return true\n    end\n    if a == 12 then\n        return true\n\
    \    end\n    if a == 13 then\n        return true\n    end\n    if a == 14 then\n\
    \        return true\n    end\n    if a == 15 then\n        return true\n    end\n\
    \    if a == 16 then\n        return true\n    end\n    if a == 17 then\n    \
    \    return true\n    end\n    if a == 18 then\n        return true\n    end\n\
    \    if a == 19 then\n        return true\n    end\n    if a == 20 then\n    \
    \    return true\n    end\n    if a == 21 then\n        return true\n    end\n\
    \    if a == 22 then\n        return true\n    end\n    if a == 23 then\n    \
    \    return true\n    end\n    if a == 24 then\n        return true\n    end\n\
    \    if a == 25 then\n        return true\n    end\n    if a == 26 then\n    \
    \    return true\n    end\n    if a == 27 then\n        return true\n    end\n\
    \    if a == 28 then\n        return true\n    end\n    if a == 29 then\n    \
    \    return true\n    end\n    if a == 30 then\n        return true\n    end\n\
    \    if a == 31 then\n        return true\n    end\n    if a == 32 then\n    \
    \    return true\n    end\n    if a == 33 then\n        return true\n    end\n\
    \    if a == 34 then\n        return true\n    end\n    if a == 35 then\n    \
    \    return true\n    end\n    if a == 36 then\n        return true\n    end\n\
    \    if a == 37 then\n        return true\n    end\n    if a == 38 then\n    \
    \    return true\n    end\n    if a == 39 then\n        return true\n    end\n\
    \    if a == 40 then\n        return true\n    end\n    if a == 41 then\n    \
    \    return true\n    end\n    if a == 42 then\n        return true\n    end\n\
    \    if a == 43 then\n        return true\n    end\n    if a == 44 then\n    \
    \    return true\n    end\n    if a == 45 then\n        return true\n    end\n\
    \    if a == 46 then\n        return true\n    end\n    if a == 47 then\n    \
    \    return true\n    end\n    if a == 48 then\n        return true\n    end\n\
    \    if a == 49 then\n        return true\n    end\n    if a == \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmps91f6xx8.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a < 0 then\n\
    \    return false\n  end\n  if a < 1 then\n    return false\n  end\n  if a < 3\
    \ then\n    return true\n  end\n  if a < 5 then\n    return true\n  end\n  if\
    \ a < 7 then\n    return true\n  end\n  if a < 9 then\n    return true\n  end\n\
    \  if a < 11 then\n    return true\n  end\n  if a < 13 then\n    return true\n\
    \  end\n  if a < 15 then\n    return true\n  end\n  if a < 17 then\n    return\
    \ true\n  end\n  if a < 19 then\n    return true\n  end\n  if a < 21 then\n  \
    \  return true\n  end\n  if a < 23 then\n    return true\n  end\n  if a < 25 then\n\
    \    return true\n  end\n  if a < 27 then\n    return true\n  end\n  if a < 29\
    \ then\n    return true\n  end\n  if a < 31 then\n    return true\n  end\n  if\
    \ a < 33 then\n    return true\n  end\n  if a < 35 then\n    return true\n  end\n\
    \  if a < 37 then\n    return true\n  end\n  if a < 39 then\n    return true\n\
    \  end\n  if a < 41 then\n    return true\n  end\n  if a < 43 then\n    return\
    \ true\n  end\n  if a < 45 then\n    return true\n  end\n  if a < 47 then\n  \
    \  return true\n  end\n  if a < 49 then\n    return true\n  end\n  if a < 51 then\n\
    \    return true\n  end\n  if a < 53 then\n    return true\n  end\n  if a < 55\
    \ then\n    return true\n  end\n  if a < 57 then\n    return true\n  end\n  if\
    \ a < 59 then\n    return true\n  end\n  if a < 61 then\n    return true\n  end\n\
    \  if a < 63 then\n    return true\n  end\n  if a < 65 then\n    return true\n\
    \  end\n  if a < 67 then\n    return true\n  end\n  if a < 69 then\n    return\
    \ true\n  end\n  if a < 71 then\n    return true\n  end\n  if a < 73 then\n  \
    \  return true\n  end\n  if a < 75 then\n    return true\n  end\n  if a < 77 then\n\
    \    return true\n  end\n  if a < 79 then\n    return true\n  end\n  if a < 81\
    \ then\n    return true\n  end\n  if a < 83 then\n    return true\n  end\n  if\
    \ a < 85 then\n    return true\n  end\n  if a < 87 \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpek4h_ede.lua:151: ''then'' expected near ''lu''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\tif a == 0 then\n\
    \t\treturn true\n\telseif a%1 == 0 then\n\t\treturn false\n\telse\n\t\treturn\
    \ true\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt66wgvfp.lua:30:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpt66wgvfp.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp3wa21ypl.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmppefjperv.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 and a <= 9 then\n        return\
    \ true\n    end\n    if a > 9 and a <= 99 then\n        return true\n    end\n\
    \    if a > 99 and a <= 999 then\n        return true\n    end\n    if a > 999\
    \ and a <= 9999 then\n        return true\n    end\n    if a > 9999 and a <= 99999\
    \ then\n        return true\n    end\n    if a > 99999 and a <= 999999 then\n\
    \        return true\n    end\n    if a > 999999 and a <= 9999999 then\n     \
    \   return true\n    end\n    if a > 9999999 and a <= 999999999 then\n       \
    \ return true\n    end\n    if a > 999999999 and a <= 9999999999 then\n      \
    \  return true\n    end\n    if a > 9999999999 and a <= 99999999999 then\n   \
    \     return true\n    end\n    if a > 99999999999 and a <= 1000000000000 then\n\
    \        return true\n    end\n    if a > 1000000000000 and a <= 10000000000000\
    \ then\n        return true\n    end\n    if a > 10000000000000 and a <= 1000000000000000\
    \ then\n        return true\n    end\n    if a > 1000000000000000 and a <= 100000000000000000\
    \ then\n        return true\n    end\n    if a > 100000000000000000 and a <= 1000000000000000000\
    \ then\n        return true\n    end\n    return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpeittm168.lua:73:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpeittm168.lua:73:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp3wa21ypl.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmppefjperv.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a < 0 then\n\
    \    return false\n  end\n  if a == 0 then\n    return true\n  end\n  if a ==\
    \ 1 then\n    return true\n  end\n  if a == 2 then\n    return true\n  end\n \
    \ if a == 3 then\n    return true\n  end\n  if a == 4 then\n    return true\n\
    \  end\n  if a == 5 then\n    return true\n  end\n  if a == 6 then\n    return\
    \ true\n  end\n  if a == 7 then\n    return true\n  end\n  if a == 8 then\n  \
    \  return true\n  end\n  if a == 9 then\n    return true\n  end\n  if a == 10\
    \ then\n    return true\n  end\n  if a == 11 then\n    return true\n  end\n  if\
    \ a == 12 then\n    return true\n  end\n  if a == 13 then\n    return true\n \
    \ end\n  if a == 14 then\n    return true\n  end\n  if a == 15 then\n    return\
    \ true\n  end\n  if a == 16 then\n    return true\n  end\n  if a == 17 then\n\
    \    return true\n  end\n  if a == 18 then\n    return true\n  end\n  if a ==\
    \ 19 then\n    return true\n  end\n  if a == 20 then\n    return true\n  end\n\
    \  if a == 21 then\n    return true\n  end\n  if a == 22 then\n    return true\n\
    \  end\n  if a == 23 then\n    return true\n  end\n  if a == 24 then\n    return\
    \ true\n  end\n  if a == 25 then\n    return true\n  end\n  if a == 26 then\n\
    \    return true\n  end\n  if a == 27 then\n    return true\n  end\n  if a ==\
    \ 28 then\n    return true\n  end\n  if a == 29 then\n    return true\n  end\n\
    \  if a == 30 then\n    return true\n  end\n  if a == 31 then\n    return true\n\
    \  end\n  if a == 32 then\n    return true\n  end\n  if a == 33 then\n    return\
    \ true\n  end\n  if a == 34 then\n    return true\n  end\n  if a == 35 then\n\
    \    return true\n  end\n  if a == 36 then\n    return true\n  end\n  if a ==\
    \ 37 then\n    return true\n  end\n  if a == 38 then\n    return true\n  end\n\
    \  if a == 39 then\n    return true\n  end\n  if a == 40 then\n    return true\n\
    \  end\n  if a == 41 then\n    return true\n  end\n  if a == 42 then\n    return\
    \ true\n  end\n  if a == 43 then\n    return true\n  end\n  if a == 44 then\n\
    \    return true\n  end\n  if a == 45 then\n    return true\n  end\n  if a ==\
    \ 46 then\n    return true\n  end\n  if a == 47 then\n    return true\n  end\n\
    \  if a == 48 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp4l4yszpw.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a < 0 then\n        return false\n\
    \    end\n    if a > 180 then\n        return false\n    end\n    if a % 3 ==\
    \ 0 then\n        return true\n    end\n    return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj4xd7qp9.lua:36:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpj4xd7qp9.lua:36:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return false end\n  if a == 1 then return true end\n  if a == 2 then return\
    \ true end\n  if a == 3 then return true end\n  if a == 4 then return true end\n\
    \  if a == 5 then return true end\n  if a == 6 then return true end\n  if a ==\
    \ 7 then return true end\n  if a == 8 then return true end\n  if a == 9 then return\
    \ true end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpeb49dkpq.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return false end\n  if a == 1 then return true end\n  if a == 2 then return\
    \ true end\n  if a == 3 then return true end\n  if a == 4 then return true end\n\
    \  if a == 5 then return true end\n  if a == 6 then return true end\n  if a ==\
    \ 7 then return true end\n  if a == 8 then return true end\n  if a == 9 then return\
    \ true end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpeb49dkpq.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then return false end\n    if a > 0 then\n        if a % 3 == 0 and a % 5 ==\
    \ 0 then return true end\n        if a % 3 == 0 then return true end\n       \
    \ if a % 5 == 0 then return true end\n        if a % 3 == 0 and a % 5 == 0 then\
    \ return true end\n        if a % 3 == 0 then return true end\n        if a %\
    \ 5 == 0 then return true end\n        if a % 3 == 0 and a % 5 == 0 then return\
    \ true end\n        if a % 3 == 0 then return true end\n        if a % 5 == 0\
    \ then return true end\n        if a % 3 == 0 and a % 5 == 0 then return true\
    \ end\n        if a % 3 == 0 then return true end\n        if a % 5 == 0 then\
    \ return true end\n        if a % 3 == 0 and a % 5 == 0 then return true end\n\
    \        if a % 3 == 0 then return true end\n        if a % 5 == 0 then return\
    \ true end\n        if a % 3 == 0 and a % 5 == 0 then return true end\n      \
    \  if a % 3 == 0 then return true end\n        if a % 5 == 0 then return true\
    \ end\n        if a % 3 == 0 and a % 5 == 0 then return true end\n        if a\
    \ % 3 == 0 then return true end\n        if a % 5 == 0 then return true end\n\
    \        if a % 3 == 0 and a % 5 == 0 then return true end\n        if a % 3 ==\
    \ 0 then return true end\n        if a % 5 == 0 then return true end\n       \
    \ if a % 3 == 0 and a % 5 == 0 then return true end\n        if a % 3 == 0 then\
    \ return true end\n        if a % 5 == 0 then return true end\n        if a %\
    \ 3 == 0 and a % 5 == 0 then return true end\n        if a % 3 == 0 then return\
    \ true end\n        if a % 5 == 0 then return true end\n        if a % 3 == 0\
    \ and a % 5 == 0 then return true end\n        if a % 3 == 0 then return true\
    \ end\n        if a % 5 == 0 then return true end\n        if a % 3 == 0 and a\
    \ % 5 == 0 then return true end\n        if a % 3 == 0 then return true end\n\
    \        if a % 5 == 0 then return true end\n        if a % 3 == 0 and a % 5 ==\
    \ 0 then return true end\n        if a % 3 == 0 then return true end\n       \
    \ if a % 5 == 0 then return true end\n        if a % 3 == 0 and a % 5 == 0 then\
    \ return true end\n        if a % 3 == 0 then return true end\n        if a %\
    \ 5 == \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpeefz29yp.lua:62: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\tif a == 0 then\n\
    \t\treturn true\n\telseif a%1 == 0 then\n\t\treturn false\n\telse\n\t\treturn\
    \ true\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt66wgvfp.lua:30:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpt66wgvfp.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a == 1 then\n    return true\n  elseif a == 2 then\n\
    \    return true\n  elseif a == 3 then\n    return true\n  elseif a == 4 then\n\
    \    return true\n  elseif a == 5 then\n    return true\n  elseif a == 6 then\n\
    \    return true\n  elseif a == 7 then\n    return true\n  elseif a == 8 then\n\
    \    return true\n  elseif a == 9 then\n    return true\n  elseif a == 10 then\n\
    \    return true\n  elseif a == 11 then\n    return true\n  elseif a == 12 then\n\
    \    return true\n  elseif a == 13 then\n    return true\n  elseif a == 14 then\n\
    \    return true\n  elseif a == 15 then\n    return true\n  elseif a == 16 then\n\
    \    return true\n  elseif a == 17 then\n    return true\n  elseif a == 18 then\n\
    \    return true\n  elseif a == 19 then\n    return true\n  elseif a == 20 then\n\
    \    return true\n  elseif a == 21 then\n    return true\n  elseif a == 22 then\n\
    \    return true\n  elseif a == 23 then\n    return true\n  elseif a == 24 then\n\
    \    return true\n  elseif a == 25 then\n    return true\n  elseif a == 26 then\n\
    \    return true\n  elseif a == 27 then\n    return true\n  elseif a == 28 then\n\
    \    return true\n  elseif a == 29 then\n    return true\n  elseif a == 30 then\n\
    \    return true\n  elseif a == 31 then\n    return true\n  elseif a == 32 then\n\
    \    return true\n  elseif a == 33 then\n    return true\n  elseif a == 34 then\n\
    \    return true\n  elseif a == 35 then\n    return true\n  elseif a == 36 then\n\
    \    return true\n  elseif a == 37 then\n    return true\n  elseif a == 38 then\n\
    \    return true\n  elseif a == 39 then\n    return true\n  elseif a == 40 then\n\
    \    return true\n  elseif a == 41 then\n    return true\n  elseif a == 42 then\n\
    \    return true\n  elseif a == 43 then\n    return true\n  elseif a == 44 then\n\
    \    return true\n  elseif a == 45 then\n    return true\n  elseif a == 46 then\n\
    \    return true\n  elseif a == 47 then\n    return true\n  elseif a == 48 then\n\
    \    return true\n  elseif a == 49 then\n    return true\n  elseif a == \nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmphtvu4l27.lua:119: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a <= 0 then\n\
    \    return false\n  elseif a%1 == 0 then\n    return true\n  else\n    return\
    \ false\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp13ory67j.lua:31:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp13ory67j.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a < 0 then\n        return false\n\
    \    end\n    if a > 180 then\n        return false\n    end\n    if a <= 1 then\n\
    \        return true\n    end\n    if a <= 3 then\n        return true\n    end\n\
    \    if a <= 9 then\n        return true\n    end\n    if a <= 27 then\n     \
    \   return true\n    end\n    if a <= 81 then\n        return true\n    end\n\
    \    if a <= 123 then\n        return true\n    end\n    if a <= 163 then\n  \
    \      return true\n    end\n    if a <= 193 then\n        return true\n    end\n\
    \    if a <= 227 then\n        return true\n    end\n    if a <= 257 then\n  \
    \      return true\n    end\n    if a <= 289 then\n        return true\n    end\n\
    \    if a <= 321 then\n        return true\n    end\n    if a <= 363 then\n  \
    \      return true\n    end\n    if a <= 419 then\n        return true\n    end\n\
    \    if a <= 499 then\n        return true\n    end\n    if a <= 557 then\n  \
    \      return true\n    end\n    if a <= 619 then\n        return true\n    end\n\
    \    if a <= 671 then\n        return true\n    end\n    if a <= 733 then\n  \
    \      return true\n    end\n    if a <= 793 then\n        return true\n    end\n\
    \    if a <= 857 then\n        return true\n    end\n    if a <= 919 then\n  \
    \      return true\n    end\n    if a <= 987 then\n        return true\n    end\n\
    \    if a <= 1059 then\n        return true\n    end\n    if a <= 1111 then\n\
    \        return true\n    end\n    if a <= 1189 then\n        return true\n  \
    \  end\n    if a <= 1269 then\n        return true\n    end\n    if a <= 1349\
    \ then\n        return true\n    end\n    if a <= 1429 then\n        return true\n\
    \    end\n    if a <= 1509 then\n        return true\n    end\n    if a <= 1579\
    \ then\n        return true\n    end\n    if a <= 1659 then\n        return true\n\
    \    end\n    if a <= 1749 then\n        return true\n    end\n    if a <= 1829\
    \ then\n        return true\n    end\n    if a <= 1909 then\n        return true\n\
    \    end\n    if a <= 1979 then\n        return true\n    end\n    if a <= 2049\
    \ then\n        return true\n    end\n    if a <= 2119 then\n        return true\n\
    \    end\n    if a <= 2191 then\n        return true\n    end\n\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpju50lce_.lua:159: ''end'' expected (to close ''function''
    at line 17) near <eof>

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmppefjperv.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then return false end\n    if a == 1 then return true end\n    if a == 2 then\
    \ return true end\n    if a == 3 then return true end\n    if a == 4 then return\
    \ true end\n    if a == 5 then return true end\n    if a == 6 then return true\
    \ end\n    if a == 7 then return true end\n    if a == 8 then return true end\n\
    \    if a == 9 then return true end\n    if a == 10 then return true end\n   \
    \ if a == 11 then return true end\n    if a == 12 then return true end\n    if\
    \ a == 13 then return true end\n    if a == 14 then return true end\n    if a\
    \ == 15 then return true end\n    if a == 16 then return true end\n    if a ==\
    \ 17 then return true end\n    if a == 18 then return true end\n    if a == 19\
    \ then return true end\n    if a == 20 then return true end\n    if a == 21 then\
    \ return true end\n    if a == 22 then return true end\n    if a == 23 then return\
    \ true end\n    if a == 24 then return true end\n    if a == 25 then return true\
    \ end\n    if a == 26 then return true end\n    if a == 27 then return true end\n\
    \    if a == 28 then return true end\n    if a == 29 then return true end\n  \
    \  if a == 30 then return true end\n    if a == 31 then return true end\n    if\
    \ a == 32 then return true end\n    if a == 33 then return true end\n    if a\
    \ == 34 then return true end\n    if a == 35 then return true end\n    if a ==\
    \ 36 then return true end\n    if a == 37 then return true end\n    if a == 38\
    \ then return true end\n    if a == 39 then return true end\n    if a == 40 then\
    \ return true end\n    if a == 41 then return true end\n    if a == 42 then return\
    \ true end\n    if a == 43 then return true end\n    if a == 44 then return true\
    \ end\n    if a == 45 then return true end\n    if a == 46 then return true end\n\
    \    if a == 47 then return true end\n    if a == 48 then return true end\n  \
    \  if a == 49 then return true end\n    if a == 50 then return true end\n    if\
    \ a == 51 then return true end\n    if a == 52 then return true end\n    if a\
    \ == 53 then return true end\n    if a == 54 then return true end\n    if a ==\
    \ 55 then return true end\n    if a == 56 then return true end\n    if a == 57\
    \ then return true end\n    if a == 58 then return true end\n    if a == 59 then\
    \ return true end\n    if a == 60 then return true end\n    if a == 61 then \n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyozjat_3.lua:94: ''end'' expected (to close ''if'' at line
    79) near <eof>

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmppefjperv.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmppefjperv.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 and a <= 9 then\n        return\
    \ true\n    end\n    if a > 9 and a <= 99 then\n        return true\n    end\n\
    \    if a > 99 and a <= 999 then\n        return true\n    end\n    if a > 999\
    \ and a <= 9999 then\n        return true\n    end\n    if a > 9999 and a <= 99999\
    \ then\n        return true\n    end\n    if a > 99999 and a <= 999999 then\n\
    \        return true\n    end\n    if a > 999999 and a <= 9999999 then\n     \
    \   return true\n    end\n    if a > 9999999 and a <= 999999999 then\n       \
    \ return true\n    end\n    if a > 999999999 and a <= 99999999999 then\n     \
    \   return true\n    end\n    if a > 99999999999 and a <= 9999999999999 then\n\
    \        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999 and a <= 9999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999 and a <= 9999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999 and a <= 9999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999 and a <= 9999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999 and a <= 9999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999 and a <= 9999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999 and a <= 9999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999 and a <= 9999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpag6b7zdk.lua:100: ''then'' expected near ''lu''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a < 0\
    \ then\n        return false\n    end\n    if a == 0 then\n        return true\n\
    \    end\n    if a > 0 then\n        return false\n    end\n    if a < 1 then\n\
    \        return true\n    end\n    if a < 2 then\n        return true\n    end\n\
    \    if a < 3 then\n        return true\n    end\n    if a < 4 then\n        return\
    \ true\n    end\n    if a < 5 then\n        return true\n    end\n    if a < 6\
    \ then\n        return true\n    end\n    if a < 7 then\n        return true\n\
    \    end\n    if a < 8 then\n        return true\n    end\n    if a < 9 then\n\
    \        return true\n    end\n    if a < 10 then\n        return true\n    end\n\
    \    if a < 11 then\n        return true\n    end\n    if a < 12 then\n      \
    \  return true\n    end\n    if a < 13 then\n        return true\n    end\n  \
    \  if a < 14 then\n        return true\n    end\n    if a < 15 then\n        return\
    \ true\n    end\n    if a < 16 then\n        return true\n    end\n    if a <\
    \ 17 then\n        return true\n    end\n    if a < 18 then\n        return true\n\
    \    end\n    if a < 19 then\n        return true\n    end\n    if a < 20 then\n\
    \        return true\n    end\n    if a < 21 then\n        return true\n    end\n\
    \    if a < 22 then\n        return true\n    end\n    if a < 23 then\n      \
    \  return true\n    end\n    if a < 24 then\n        return true\n    end\n  \
    \  if a < 25 then\n        return true\n    end\n    if a < 26 then\n        return\
    \ true\n    end\n    if a < 27 then\n        return true\n    end\n    if a <\
    \ 28 then\n        return true\n    end\n    if a < 29 then\n        return true\n\
    \    end\n    if a < 30 then\n        return true\n    end\n    if a < 31 then\n\
    \        return true\n    end\n    if a < 32 then\n        return true\n    end\n\
    \    if a < 33 then\n        return true\n    end\n    if a < 34 then\n      \
    \  return true\n    end\n    if a < 35 then\n        return true\n    end\n  \
    \  if a < 36 then\n        return true\n    end\n    if a < 37 then\n        return\
    \ true\n    end\n    if a < 38 then\n        return true\n    end\n    if a <\
    \ 39 then\n        return true\n    end\n    if a < 40 then\n        return true\n\
    \    end\n    if a < 41 then\n        return true\n    end\n    if a < 42 then\n\
    \        return true\n    end\n    if a < 43 then\n        return true\n    end\n\
    \    if \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp3yw5y3i1.lua:157: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a%1 == 0 then\n    return false\n  else\n    return\
    \ iscube(a-1) or iscube(a-1)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn7nduge9.lua:30:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpn7nduge9.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a == 1 then\n    return true\n  elseif a == 2 then\n\
    \    return true\n  elseif a == 3 then\n    return true\n  elseif a == 4 then\n\
    \    return true\n  elseif a == 5 then\n    return true\n  elseif a == 6 then\n\
    \    return true\n  elseif a == 7 then\n    return true\n  elseif a == 8 then\n\
    \    return true\n  elseif a == 9 then\n    return true\n  elseif a == 10 then\n\
    \    return true\n  elseif a == 11 then\n    return true\n  elseif a == 12 then\n\
    \    return true\n  elseif a == 13 then\n    return true\n  elseif a == 14 then\n\
    \    return true\n  elseif a == 15 then\n    return true\n  elseif a == 16 then\n\
    \    return true\n  elseif a == 17 then\n    return true\n  elseif a == 18 then\n\
    \    return true\n  elseif a == 19 then\n    return true\n  elseif a == 20 then\n\
    \    return true\n  elseif a == 21 then\n    return true\n  elseif a == 22 then\n\
    \    return true\n  elseif a == 23 then\n    return true\n  elseif a == 24 then\n\
    \    return true\n  elseif a == 25 then\n    return true\n  elseif a == 26 then\n\
    \    return true\n  elseif a == 27 then\n    return true\n  elseif a == 28 then\n\
    \    return true\n  elseif a == 29 then\n    return true\n  elseif a == 30 then\n\
    \    return true\n  elseif a == 31 then\n    return true\n  elseif a == 32 then\n\
    \    return true\n  elseif a == 33 then\n    return true\n  elseif a == 34 then\n\
    \    return true\n  elseif a == 35 then\n    return true\n  elseif a == 36 then\n\
    \    return true\n  elseif a == 37 then\n    return true\n  elseif a == 38 then\n\
    \    return true\n  elseif a == 39 then\n    return true\n  elseif a == 40 then\n\
    \    return true\n  elseif a == 41 then\n    return true\n  elseif a == 42 then\n\
    \    return true\n  elseif a == 43 then\n    return true\n  elseif a == 44 then\n\
    \    return true\n  elseif a == 45 then\n    return true\n  elseif a == 46 then\n\
    \    return true\n  elseif a == 47 then\n    return true\n  elseif a == 48 then\n\
    \    return true\n  elseif a == 49 then\n    return true\n  elseif a == \nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmphtvu4l27.lua:119: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a < 0 then\n\
    \    return false\n  end\n  if a == 0 then\n    return true\n  end\n  if a > 0\
    \ then\n    return true\n  end\n  if a <= 1 then\n    return false\n  end\n  if\
    \ a <= 3 then\n    return true\n  end\n  if a <= 9 then\n    return true\n  end\n\
    \  if a <= 27 then\n    return true\n  end\n  if a <= 81 then\n    return true\n\
    \  end\n  if a <= 123 then\n    return true\n  end\n  if a <= 255 then\n    return\
    \ true\n  end\n  if a <= 511 then\n    return true\n  end\n  if a <= 1025 then\n\
    \    return true\n  end\n  if a <= 2049 then\n    return true\n  end\n  if a <=\
    \ 4099 then\n    return true\n  end\n  if a <= 8191 then\n    return true\n  end\n\
    \  if a <= 16383 then\n    return true\n  end\n  if a <= 32767 then\n    return\
    \ true\n  end\n  if a <= 65535 then\n    return true\n  end\n  if a <= 131071\
    \ then\n    return true\n  end\n  if a <= 262143 then\n    return true\n  end\n\
    \  if a <= 524287 then\n    return true\n  end\n  if a <= 1048575 then\n    return\
    \ true\n  end\n  if a <= 2097151 then\n    return true\n  end\n  if a <= 4194303\
    \ then\n    return true\n  end\n  if a <= 8388607 then\n    return true\n  end\n\
    \  if a <= 16777215 then\n    return true\n  end\n  if a <= 33554431 then\n  \
    \  return true\n  end\n  if a <= 67108863 then\n    return true\n  end\n  if a\
    \ <= 134217727 then\n    return true\n  end\n  if a <= 268435455 then\n    return\
    \ true\n  end\n  if a <= 536870911 then\n    return true\n  end\n  if a <= 1073741823\
    \ then\n    return true\n  end\n  if a <= 2147483647 then\n    return true\n \
    \ end\n  if a <= 4294967295 then\n    return true\n  end\n  if a <= 8589934591\
    \ then\n    return true\n  end\n  if a <= 17179869183 then\n    return true\n\
    \  end\n  if a <= 34359738367 then\n    return true\n  end\n  if a <= 68719476735\
    \ then\n    return true\n  end\n  if a <= 137438953473 then\n    return true\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpm0_wu7i8.lua:134: ''end'' expected (to close ''if'' at line
    132) near ''lu''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmppefjperv.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmppefjperv.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp3wa21ypl.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 then\n        return false\n\
    \    end\n    if a < 0 then\n        return false\n    end\n    if a <= 0 then\n\
    \        return false\n    end\n    if a >= 1 then\n        return false\n   \
    \ end\n    if a >= 2 then\n        return true\n    end\n    if a >= 3 then\n\
    \        return true\n    end\n    if a >= 4 then\n        return true\n    end\n\
    \    if a >= 5 then\n        return true\n    end\n    if a >= 6 then\n      \
    \  return true\n    end\n    if a >= 7 then\n        return true\n    end\n  \
    \  if a >= 8 then\n        return true\n    end\n    if a >= 9 then\n        return\
    \ true\n    end\n    if a >= 10 then\n        return true\n    end\n    if a >=\
    \ 11 then\n        return true\n    end\n    if a >= 12 then\n        return true\n\
    \    end\n    if a >= 13 then\n        return true\n    end\n    if a >= 14 then\n\
    \        return true\n    end\n    if a >= 15 then\n        return true\n    end\n\
    \    if a >= 16 then\n        return true\n    end\n    if a >= 17 then\n    \
    \    return true\n    end\n    if a >= 18 then\n        return true\n    end\n\
    \    if a >= 19 then\n        return true\n    end\n    if a >= 20 then\n    \
    \    return true\n    end\n    if a >= 21 then\n        return true\n    end\n\
    \    if a >= 22 then\n        return true\n    end\n    if a >= 23 then\n    \
    \    return true\n    end\n    if a >= 24 then\n        return true\n    end\n\
    \    if a >= 25 then\n        return true\n    end\n    if a >= 26 then\n    \
    \    return true\n    end\n    if a >= 27 then\n        return true\n    end\n\
    \    if a >= 28 then\n        return true\n    end\n    if a >= 29 then\n    \
    \    return true\n    end\n    if a >= 30 then\n        return true\n    end\n\
    \    if a >= 31 then\n        return true\n    end\n    if a >= 32 then\n    \
    \    return true\n    end\n    if a >= 33 then\n        return true\n    end\n\
    \    if a >= 34 then\n        return true\n    end\n    if a >= 35 then\n    \
    \    return true\n    end\n    if a >= 36 then\n        return true\n    end\n\
    \    if a >= 37 then\n        return true\n    end\n    if a >= 38 then\n    \
    \    return true\n    end\n    if a >= 39 then\n        return true\n    end\n\
    \    if a >= 40 then\n        return true\n    end\n    if a >= 41 then\n    \
    \    return true\n    end\n    if a >= 42 then\n        return true\n    end\n\
    \    if a \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpktpg02g3.lua:157: ''then'' expected near ''lu''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmppefjperv.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\t-- Write your\
    \ solution here\n\treturn true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjoazload.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpjoazload.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmppefjperv.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a < 0 then\n        return false\n\
    \    end\n    if a > 180 then\n        return false\n    end\n    if a <= 3 then\n\
    \        return true\n    end\n    if a <= 6 then\n        return true\n    end\n\
    \    if a <= 9 then\n        return true\n    end\n    if a <= 12 then\n     \
    \   return true\n    end\n    if a <= 15 then\n        return true\n    end\n\
    \    if a <= 18 then\n        return true\n    end\n    if a <= 21 then\n    \
    \    return true\n    end\n    if a <= 24 then\n        return true\n    end\n\
    \    if a <= 27 then\n        return true\n    end\n    if a <= 30 then\n    \
    \    return true\n    end\n    if a <= 33 then\n        return true\n    end\n\
    \    if a <= 36 then\n        return true\n    end\n    if a <= 39 then\n    \
    \    return true\n    end\n    if a <= 42 then\n        return true\n    end\n\
    \    if a <= 45 then\n        return true\n    end\n    if a <= 48 then\n    \
    \    return true\n    end\n    if a <= 51 then\n        return true\n    end\n\
    \    if a <= 54 then\n        return true\n    end\n    if a <= 57 then\n    \
    \    return true\n    end\n    if a <= 60 then\n        return true\n    end\n\
    \    if a <= 63 then\n        return true\n    end\n    if a <= 66 then\n    \
    \    return true\n    end\n    if a <= 69 then\n        return true\n    end\n\
    \    if a <= 72 then\n        return true\n    end\n    if a <= 75 then\n    \
    \    return true\n    end\n    if a <= 78 then\n        return true\n    end\n\
    \    if a <= 81 then\n        return true\n    end\n    if a <= 84 then\n    \
    \    return true\n    end\n    if a <= 87 then\n        return true\n    end\n\
    \    if a <= 90 then\n        return true\n    end\n    if a <= 93 then\n    \
    \    return true\n    end\n    if a <= 96 then\n        return true\n    end\n\
    \    if a <= 99 then\n        return true\n    end\n    if a <= 102 then\n   \
    \     return true\n    end\n    if a <= 105 then\n        return true\n    end\n\
    \    if a <= 108 then\n        return true\n    end\n    if a <= 111 then\n  \
    \      return true\n    end\n    if a <= 114 then\n        return true\n    end\n\
    \    if a <= 117 then\n        return true\n    end\n    if a <= 120 then\n  \
    \      return true\n    end\n    if a <= 123 then\n        return true\n    end\n\
    \    if a \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmppl_ebdki.lua:151: ''then'' expected near ''lu''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmppefjperv.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  else\n    local b = a\n    while b > 1 do\n      if b % 3\
    \ == 0 then\n        return false\n      end\n      b = b / 3\n    end\n    return\
    \ true\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp72adcn7b.lua:36:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp72adcn7b.lua:36:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a == 1 then\n        return true\n\
    \    end\n    if a == 2 then\n        return true\n    end\n    if a == 3 then\n\
    \        return true\n    end\n    if a == 4 then\n        return true\n    end\n\
    \    if a == 5 then\n        return true\n    end\n    if a == 6 then\n      \
    \  return true\n    end\n    if a == 7 then\n        return true\n    end\n  \
    \  if a == 8 then\n        return true\n    end\n    if a == 9 then\n        return\
    \ true\n    end\n    if a == 10 then\n        return true\n    end\n    if a ==\
    \ 11 then\n        return true\n    end\n    if a == 12 then\n        return true\n\
    \    end\n    if a == 13 then\n        return true\n    end\n    if a == 14 then\n\
    \        return true\n    end\n    if a == 15 then\n        return true\n    end\n\
    \    if a == 16 then\n        return true\n    end\n    if a == 17 then\n    \
    \    return true\n    end\n    if a == 18 then\n        return true\n    end\n\
    \    if a == 19 then\n        return true\n    end\n    if a == 20 then\n    \
    \    return true\n    end\n    if a == 21 then\n        return true\n    end\n\
    \    if a == 22 then\n        return true\n    end\n    if a == 23 then\n    \
    \    return true\n    end\n    if a == 24 then\n        return true\n    end\n\
    \    if a == 25 then\n        return true\n    end\n    if a == 26 then\n    \
    \    return true\n    end\n    if a == 27 then\n        return true\n    end\n\
    \    if a == 28 then\n        return true\n    end\n    if a == 29 then\n    \
    \    return true\n    end\n    if a == 30 then\n        return true\n    end\n\
    \    if a == 31 then\n        return true\n    end\n    if a == 32 then\n    \
    \    return true\n    end\n    if a == 33 then\n        return true\n    end\n\
    \    if a == 34 then\n        return true\n    end\n    if a == 35 then\n    \
    \    return true\n    end\n    if a == 36 then\n        return true\n    end\n\
    \    if a == 37 then\n        return true\n    end\n    if a == 38 then\n    \
    \    return true\n    end\n    if a == 39 then\n        return true\n    end\n\
    \    if a == 40 then\n        return true\n    end\n    if a == 41 then\n    \
    \    return true\n    end\n    if a == 42 then\n        return true\n    end\n\
    \    if a == 43 then\n        return true\n    end\n    if a == 44 then\n    \
    \    return true\n    end\n    if a == 45 then\n        return true\n    end\n\
    \    if a == 46 then\n        return true\n    end\n    if a == 47 then\n    \
    \    return true\n    end\n    if a == 48 then\n        return true\n    end\n\
    \    if a == 49 then\n        return true\n    end\n    if a == \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmps91f6xx8.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a == 1 then\n    return true\n  elseif a == 2 then\n\
    \    return true\n  elseif a == 3 then\n    return true\n  elseif a == 4 then\n\
    \    return true\n  elseif a == 5 then\n    return true\n  elseif a == 6 then\n\
    \    return true\n  elseif a == 7 then\n    return true\n  elseif a == 8 then\n\
    \    return true\n  elseif a == 9 then\n    return true\n  elseif a == 10 then\n\
    \    return true\n  elseif a == 11 then\n    return true\n  elseif a == 12 then\n\
    \    return true\n  elseif a == 13 then\n    return true\n  elseif a == 14 then\n\
    \    return true\n  elseif a == 15 then\n    return true\n  elseif a == 16 then\n\
    \    return true\n  elseif a == 17 then\n    return true\n  elseif a == 18 then\n\
    \    return true\n  elseif a == 19 then\n    return true\n  elseif a == 20 then\n\
    \    return true\n  elseif a == 21 then\n    return true\n  elseif a == 22 then\n\
    \    return true\n  elseif a == 23 then\n    return true\n  elseif a == 24 then\n\
    \    return true\n  elseif a == 25 then\n    return true\n  elseif a == 26 then\n\
    \    return true\n  elseif a == 27 then\n    return true\n  elseif a == 28 then\n\
    \    return true\n  elseif a == 29 then\n    return true\n  elseif a == 30 then\n\
    \    return true\n  elseif a == 31 then\n    return true\n  elseif a == 32 then\n\
    \    return true\n  elseif a == 33 then\n    return true\n  elseif a == 34 then\n\
    \    return true\n  elseif a == 35 then\n    return true\n  elseif a == 36 then\n\
    \    return true\n  elseif a == 37 then\n    return true\n  elseif a == 38 then\n\
    \    return true\n  elseif a == 39 then\n    return true\n  elseif a == 40 then\n\
    \    return true\n  elseif a == 41 then\n    return true\n  elseif a == 42 then\n\
    \    return true\n  elseif a == 43 then\n    return true\n  elseif a == 44 then\n\
    \    return true\n  elseif a == 45 then\n    return true\n  elseif a == 46 then\n\
    \    return true\n  elseif a == 47 then\n    return true\n  elseif a == 48 then\n\
    \    return true\n  elseif a == 49 then\n    return true\n  elseif a == \nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmphtvu4l27.lua:119: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return false end\n  if a > 0 then\n    if a % 2 == 0 then\n      if a % 3 ==\
    \ 0 then\n        if a % 5 == 0 then\n          return true\n        end\n   \
    \   end\n    end\n  end\n  return false\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgroaxvps.lua:34:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpgroaxvps.lua:34:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 then\n        if a % 3 == 0\
    \ then\n            if a % 5 == 0 then\n                if a % 7 == 0 then\n \
    \                   return true\n                end\n            end\n      \
    \  end\n    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptnxeixig.lua:36:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmptnxeixig.lua:36:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a < 0 then\n        return false\n\
    \    end\n    if a > 180 then\n        return false\n    end\n    if a <= 1 then\n\
    \        return true\n    end\n    if a <= 3 then\n        return true\n    end\n\
    \    if a <= 9 then\n        return true\n    end\n    if a <= 27 then\n     \
    \   return true\n    end\n    if a <= 81 then\n        return true\n    end\n\
    \    if a <= 127 then\n        return true\n    end\n    if a <= 255 then\n  \
    \      return true\n    end\n    if a <= 511 then\n        return true\n    end\n\
    \    if a <= 1025 then\n        return true\n    end\n    if a <= 2047 then\n\
    \        return true\n    end\n    if a <= 4095 and a > 4095 and a <= 8191 then\n\
    \        return true\n    end\n    if a <= 8191 then\n        return true\n  \
    \  end\n    if a <= 16383 then\n        return true\n    end\n    if a <= 32767\
    \ then\n        return true\n    end\n    if a <= 65535 then\n        return true\n\
    \    end\n    if a <= 131071 then\n        return true\n    end\n    if a <= 262143\
    \ then\n        return true\n    end\n    if a <= 524287 then\n        return\
    \ true\n    end\n    if a <= 1048575 then\n        return true\n    end\n    if\
    \ a <= 2097151 then\n        return true\n    end\n    if a <= 4194303 then\n\
    \        return true\n    end\n    if a <= 8388607 then\n        return true\n\
    \    end\n    if a <= 16777215 then\n        return true\n    end\n    if a <=\
    \ 33554431 then\n        return true\n    end\n    if a <= 67108863 then\n   \
    \     return true\n    end\n    if a <= 134217727 then\n        return true\n\
    \    end\n    if a <= 268435455 then\n        return true\n    end\n    if a <=\
    \ 536870911 then\n        return true\n    end\n    if a <= 1073741823 then\n\
    \        return true\n    end\n    if a <= 2147483647 then\n        return true\n\
    \    end\n    if a <= 4294967295 then\n        return true\n    end\n    if a\
    \ <= 8589934591 then\n        return true\n    end\n    if a <= 17179869183 then\n\
    \        return true\n    end\n    if a <= 34359738367 then\n        return true\n\
    \    end\n    if a <= 68719476735 then\n        return true\n    end\n    if a\
    \ <= \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate =\
    \ iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp6lt5vupt.lua:133: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a < 0 then\n        return false\n\
    \    end\n    if a > 180 then\n        return false\n    end\n    if a % 180 ~=\
    \ 0 then\n        return false\n    end\n    if a % 180 == 0 then\n        return\
    \ true\n    end\n    if a % 180 == 180 then\n        return true\n    end\n  \
    \  if a % 180 == 0 then\n        return true\n    end\n    if a % 180 == 180 then\n\
    \        return true\n    end\n    if a % 180 == 0 then\n        return true\n\
    \    end\n    if a % 180 == 180 then\n        return true\n    end\n    if a %\
    \ 180 == 0 then\n        return true\n    end\n    if a % 180 == 180 then\n  \
    \      return true\n    end\n    if a % 180 == 0 then\n        return true\n \
    \   end\n    if a % 180 == 180 then\n        return true\n    end\n    if a %\
    \ 180 == 0 then\n        return true\n    end\n    if a % 180 == 180 then\n  \
    \      return true\n    end\n    if a % 180 == 0 then\n        return true\n \
    \   end\n    if a % 180 == 180 then\n        return true\n    end\n    if a %\
    \ 180 == 0 then\n        return true\n    end\n    if a % 180 == 180 then\n  \
    \      return true\n    end\n    if a % 180 == 0 then\n        return true\n \
    \   end\n    if a % 180 == 180 then\n        return true\n    end\n    if a %\
    \ 180 == 0 then\n        return true\n    end\n    if a % 180 == 180 then\n  \
    \      return true\n    end\n    if a % 180 == 0 then\n        return true\n \
    \   end\n    if a % 180 == 180 then\n        return true\n    end\n    if a %\
    \ 180 == 0 then\n        return true\n    end\n    if a % 180 == 180 then\n  \
    \      return true\n    end\n    if a % 180 == 0 then\n        return true\n \
    \   end\n    if a % 180 == 180 then\n        return true\n    end\n    if a %\
    \ 180 == 0 then\n        return true\n    end\n    if a % 180 == 180 then\n  \
    \      return true\n    end\n    if a % 180 == 0 then\n        return true\n \
    \   end\n    if a % 180 == 180 then\n        return true\n    end\n    if a %\
    \ 180 == 0 then\n        return true\n    end\n    if a % 180 == 180 then\n  \
    \      return true\n    end\n    if a % 180 == 0 then\n        return true\n \
    \   end\n    if a % 180 == 180 then\n        return true\n    end\n    if a %\
    \ 180 == \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpt5dq04cx.lua:133: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a > 0 then\n    return false\n  end\n  if a < 0\
    \ then\n    return true\n  end\n  if a < 1 then\n    return false\n  end\n  if\
    \ a < 2 then\n    return true\n  end\n  if a < 3 then\n    return false\n  end\n\
    \  if a < 4 then\n    return true\n  end\n  if a < 5 then\n    return false\n\
    \  end\n  if a < 6 then\n    return true\n  end\n  if a < 7 then\n    return false\n\
    \  end\n  if a < 8 then\n    return true\n  end\n  if a < 9 then\n    return false\n\
    \  end\n  if a < 10 then\n    return true\n  end\n  if a < 11 then\n    return\
    \ false\n  end\n  if a < 12 then\n    return true\n  end\n  if a < 13 then\n \
    \   return false\n  end\n  if a < 14 then\n    return true\n  end\n  if a < 15\
    \ then\n    return false\n  end\n  if a < 16 then\n    return true\n  end\n  if\
    \ a < 17 then\n    return false\n  end\n  if a < 18 then\n    return true\n  end\n\
    \  if a < 19 then\n    return false\n  end\n  if a < 20 then\n    return true\n\
    \  end\n  if a < 21 then\n    return false\n  end\n  if a < 22 then\n    return\
    \ true\n  end\n  if a < 23 then\n    return false\n  end\n  if a < 24 then\n \
    \   return true\n  end\n  if a < 25 then\n    return false\n  end\n  if a < 26\
    \ then\n    return true\n  end\n  if a < 27 then\n    return false\n  end\n  if\
    \ a < 28 then\n    return true\n  end\n  if a < 29 then\n    return false\n  end\n\
    \  if a < 30 then\n    return true\n  end\n  if a < 31 then\n    return false\n\
    \  end\n  if a < 32 then\n    return true\n  end\n  if a < 33 then\n    return\
    \ false\n  end\n  if a < 34 then\n    return true\n  end\n  if a < 35 then\n \
    \   return false\n  end\n  if a < 36 then\n    return true\n  end\n  if a < 37\
    \ then\n    return false\n  end\n  if a < 38 then\n    return true\n  end\n  if\
    \ a < 39 then\n    return false\n  end\n  if a < 40 then\n    return true\n  end\n\
    \  if a < 41 then\n    return false\n  end\n  if a < 42 then\n    return true\n\
    \  end\n  if a < 43 then\n    return false\n  end\n  if \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpn7ee47dr.lua:157: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return false end\n  if a == 1 then return true end\n  if a == 2 then return\
    \ true end\n  if a == 3 then return true end\n  if a == 4 then return true end\n\
    \  if a == 5 then return true end\n  if a == 6 then return true end\n  if a ==\
    \ 7 then return true end\n  if a == 8 then return true end\n  if a == 9 then return\
    \ true end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpeb49dkpq.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp3wa21ypl.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a < 0 then\n\
    \    return false\n  end\n  if a == 0 then\n    return true\n  end\n  if a > 0\
    \ then\n    return true\n  end\n  if a < 1 then\n    return false\n  end\n  if\
    \ a > 1 then\n    return false\n  end\n  if a < 2 then\n    return true\n  end\n\
    \  if a > 2 then\n    return true\n  end\n  if a < 3 then\n    return false\n\
    \  end\n  if a > 3 then\n    return false\n  end\n  if a < 4 then\n    return\
    \ true\n  end\n  if a > 4 then\n    return true\n  end\n  if a < 5 then\n    return\
    \ false\n  end\n  if a > 5 then\n    return false\n  end\n  if a < 6 then\n  \
    \  return true\n  end\n  if a > 6 then\n    return true\n  end\n  if a < 7 then\n\
    \    return false\n  end\n  if a > 7 then\n    return false\n  end\n  if a < 8\
    \ then\n    return true\n  end\n  if a > 8 then\n    return true\n  end\n  if\
    \ a < 9 then\n    return false\n  end\n  if a > 9 then\n    return false\n  end\n\
    \  if a < 10 then\n    return true\n  end\n  if a > 10 then\n    return true\n\
    \  end\n  if a < 11 then\n    return false\n  end\n  if a > 11 then\n    return\
    \ false\n  end\n  if a < 12 then\n    return true\n  end\n  if a > 12 then\n \
    \   return true\n  end\n  if a < 13 then\n    return false\n  end\n  if a > 13\
    \ then\n    return false\n  end\n  if a < 14 then\n    return true\n  end\n  if\
    \ a > 14 then\n    return true\n  end\n  if a < 15 then\n    return false\n  end\n\
    \  if a > 15 then\n    return false\n  end\n  if a < 16 then\n    return true\n\
    \  end\n  if a > 16 then\n    return true\n  end\n  if a < 17 then\n    return\
    \ false\n  end\n  if a > 17 then\n    return false\n  end\n  if a < 18 then\n\
    \    return true\n  end\n  if a > 18 then\n    return true\n  end\n  if a < 19\
    \ then\n    return false\n  end\n  if a > 19 then\n    return false\n  end\n \
    \ if a < 20 then\n    return true\n  end\n  if a > 20 then\n    return true\n\
    \  end\n  if a < 21 then\n    return false\n  end\n  if a > 21 then\n    return\
    \ false\n  end\n  if a < 22 then\n    return true\n  end\n  if a > 22 then\n \
    \   return \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpb7tioqye.lua:158: ''end'' expected (to close ''if'' at line
    156) near ''=''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a < 0 then\n        return false\n\
    \    end\n    if a > 180 then\n        return false\n    end\n    if a % 180 ~=\
    \ 0 then\n        return false\n    end\n    if a % 180 == 0 then\n        return\
    \ true\n    end\n    return iscube(a / 180)\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo562vlcw.lua:39:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpo562vlcw.lua:39:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a > 0 then\n    return false\n  end\n  if a < 0\
    \ then\n    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if\
    \ a == 2 then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n\
    \  if a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n\
    \  end\n  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return\
    \ true\n  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n  \
    \  return true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11\
    \ then\n    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if\
    \ a == 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n \
    \ end\n  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return\
    \ true\n  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n\
    \    return true\n  end\n  if a == 19 then\n    return true\n  end\n  if a ==\
    \ 20 then\n    return true\n  end\n  if a == 21 then\n    return true\n  end\n\
    \  if a == 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n\
    \  end\n  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return\
    \ true\n  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n\
    \    return true\n  end\n  if a == 28 then\n    return true\n  end\n  if a ==\
    \ 29 then\n    return true\n  end\n  if a == 30 then\n    return true\n  end\n\
    \  if a == 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n\
    \  end\n  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return\
    \ true\n  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n\
    \    return true\n  end\n  if a == 37 then\n    return true\n  end\n  if a ==\
    \ 38 then\n    return true\n  end\n  if a == 39 then\n    return true\n  end\n\
    \  if a == 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n\
    \  end\n  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return\
    \ true\n  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n\
    \    return true\n  end\n  if a == 46 then\n    return true\n  end\n  if a ==\
    \ 47 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpa232fl_p.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a < 0 then\n    return false\n  end\n  if a > 180\
    \ then\n    return false\n  end\n  if a == 180 then\n    return true\n  end\n\
    \  if a == 360 then\n    return true\n  end\n  if a == 720 then\n    return true\n\
    \  end\n  if a == 1440 then\n    return true\n  end\n  if a == 28800 then\n  \
    \  return true\n  end\n  if a == 57600 then\n    return true\n  end\n  if a ==\
    \ 115200 then\n    return true\n  end\n  if a == 230400 then\n    return true\n\
    \  end\n  if a == 345600 then\n    return true\n  end\n  if a == 687200 then\n\
    \    return true\n  end\n  if a == 1152000 then\n    return true\n  end\n  if\
    \ a == 2304000 then\n    return true\n  end\n  if a == 3456000 then\n    return\
    \ true\n  end\n  if a == 6872000 then\n    return true\n  end\n  if a == 1814400\
    \ then\n    return true\n  end\n  if a == 3628800 then\n    return true\n  end\n\
    \  if a == 7209600 then\n    return true\n  end\n  if a == 1439200 then\n    return\
    \ true\n  end\n  if a == 2889600 then\n    return true\n  end\n  if a == 5764000\
    \ then\n    return true\n  end\n  if a == 1152400 then\n    return true\n  end\n\
    \  if a == 2304000 then\n    return true\n  end\n  if a == 3456000 then\n    return\
    \ true\n  end\n  if a == 6872000 then\n    return true\n  end\n  if a == 1814400\
    \ then\n    return true\n  end\n  if a == 3628800 then\n    return true\n  end\n\
    \  if a == 7209600 then\n    return true\n  end\n  if a == 1439200 then\n    return\
    \ true\n  end\n  if a == 2889600 then\n    return true\n  end\n  if a == 5764000\
    \ then\n    return true\n  end\n  if a == 1152400 then\n    return true\n  end\n\
    \  if a == 2304000 then\n    return true\n  end\n  if a == 3456000 then\n    return\
    \ true\n  end\n  if a == 6872000 then\n    return true\n  end\n  if a == 1814400\
    \ then\n    return true\n  end\n  if a == 3628800 then\n    return true\n  end\n\
    \  if a == 7209600 then\n    return true\n  end\n  if a == 1439200 then\n    return\
    \ true\n  end\n  if a == 2889600 then\n    return true\n  end\n  if a == 5764000\
    \ then\n    return true\n  end\n  if a == 115\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmppp_hvfbw.lua:148: ''then'' expected near ''lu''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\tlocal b = 0\n\
    \twhile a > 0 do\n\t\tb = b * a % 16384\n\t\ta = a / 16384\n\tend\n\treturn b\
    \ == 0 and a or false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr99n7lsp.lua:29:\
    \ expected: true, actual: 0\nstack traceback:\n\t/tmp/tmpr99n7lsp.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a == 1 then\n        return true\n\
    \    end\n    if a == 2 then\n        return true\n    end\n    if a == 3 then\n\
    \        return true\n    end\n    if a == 4 then\n        return true\n    end\n\
    \    if a == 5 then\n        return true\n    end\n    if a == 6 then\n      \
    \  return true\n    end\n    if a == 7 then\n        return true\n    end\n  \
    \  if a == 8 then\n        return true\n    end\n    if a == 9 then\n        return\
    \ true\n    end\n    if a == 10 then\n        return true\n    end\n    if a ==\
    \ 11 then\n        return true\n    end\n    if a == 12 then\n        return true\n\
    \    end\n    if a == 13 then\n        return true\n    end\n    if a == 14 then\n\
    \        return true\n    end\n    if a == 15 then\n        return true\n    end\n\
    \    if a == 16 then\n        return true\n    end\n    if a == 17 then\n    \
    \    return true\n    end\n    if a == 18 then\n        return true\n    end\n\
    \    if a == 19 then\n        return true\n    end\n    if a == 20 then\n    \
    \    return true\n    end\n    if a == 21 then\n        return true\n    end\n\
    \    if a == 22 then\n        return true\n    end\n    if a == 23 then\n    \
    \    return true\n    end\n    if a == 24 then\n        return true\n    end\n\
    \    if a == 25 then\n        return true\n    end\n    if a == 26 then\n    \
    \    return true\n    end\n    if a == 27 then\n        return true\n    end\n\
    \    if a == 28 then\n        return true\n    end\n    if a == 29 then\n    \
    \    return true\n    end\n    if a == 30 then\n        return true\n    end\n\
    \    if a == 31 then\n        return true\n    end\n    if a == 32 then\n    \
    \    return true\n    end\n    if a == 33 then\n        return true\n    end\n\
    \    if a == 34 then\n        return true\n    end\n    if a == 35 then\n    \
    \    return true\n    end\n    if a == 36 then\n        return true\n    end\n\
    \    if a == 37 then\n        return true\n    end\n    if a == 38 then\n    \
    \    return true\n    end\n    if a == 39 then\n        return true\n    end\n\
    \    if a == 40 then\n        return true\n    end\n    if a == 41 then\n    \
    \    return true\n    end\n    if a == 42 then\n        return true\n    end\n\
    \    if a == 43 then\n        return true\n    end\n    if a == 44 then\n    \
    \    return true\n    end\n    if a == 45 then\n        return true\n    end\n\
    \    if a == 46 then\n        return true\n    end\n    if a == 47 then\n    \
    \    return true\n    end\n    if a == 48 then\n        return true\n    end\n\
    \    if a == 49 then\n        return true\n    end\n    if a == \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmps91f6xx8.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a < 0 then\n        return false\n\
    \    end\n    if a > 180 then\n        return false\n    end\n    if a % 3 ==\
    \ 0 then\n        return true\n    end\n    return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj4xd7qp9.lua:36:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpj4xd7qp9.lua:36:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\t-- Write your\
    \ solution here\n\tlocal b = 1\n\twhile b < a do\n\t\tif a % b == 0 then\n\t\t\
    \treturn false\n\t\tend\n\t\tb = b * 3 + 1\n\tend\n\treturn true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp582vg7ge.lua:35:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp582vg7ge.lua:35:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a%1 == 0 then\n    return false\n  else\n    return\
    \ iscube(a-1)\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnw07xhho.lua:30:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpnw07xhho.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a <= 0 then\n    return false\n  end\n  if a > 180\
    \ then\n    return false\n  end\n  local b = math.floor(a)\n  local c = math.floor(b)\n\
    \  local d = math.floor(c)\n  local e = math.floor(d)\n  local f = math.floor(e)\n\
    \  local g = math.floor(f)\n  local h = math.floor(g)\n  local i = math.floor(h)\n\
    \  local j = math.floor(i)\n  local k = math.floor(j)\n  local l = math.floor(k)\n\
    \  local m = math.floor(l)\n  local n = math.floor(m)\n  local o = math.floor(n)\n\
    \  local p = math.floor(o)\n  local q = math.floor(p)\n  local r = math.floor(q)\n\
    \  local s = math.floor(r)\n  local t = math.floor(s)\n  local u = math.floor(t)\n\
    \  local v = math.floor(u)\n  local w = math.floor(v)\n  local x = math.floor(w)\n\
    \  local y = math.floor(x)\n  local z = math.floor(y)\n  local a = math.floor(z)\n\
    \  return a == b * c * d * e * f * g * h * i * j * k * l * m * n * o * p * q *\
    \ r * s * t * u * v * w * x\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6gppx32n.lua:61:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp6gppx32n.lua:61:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a < 0\
    \ then\n        return false\n    end\n    if a == 0 then\n        return true\n\
    \    end\n    if a > 0 then\n        return iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1)\n    end\n    return false\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpap8t96z9.lua:34:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpap8t96z9.lua:34:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a < 0 then\
    \ return false end\n  if a == 0 then return true end\n  if a > 0 then\n    if\
    \ a % 3 == 0 then\n      if a % 5 == 0 then\n        if a % 7 == 0 then\n    \
    \      return true\n        end\n      end\n    end\n  end\n  return false\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpukrlz7mw.lua:35:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpukrlz7mw.lua:35:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a <= 0 then\n\
    \    return false\n  end\n  if a == 1 then\n    return true\n  end\n  if a ==\
    \ 2 then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n \
    \ if a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n\
    \  end\n  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return\
    \ true\n  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n  \
    \  return true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11\
    \ then\n    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if\
    \ a == 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n \
    \ end\n  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return\
    \ true\n  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n\
    \    return true\n  end\n  if a == 19 then\n    return true\n  end\n  if a ==\
    \ 20 then\n    return true\n  end\n  if a == 21 then\n    return true\n  end\n\
    \  if a == 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n\
    \  end\n  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return\
    \ true\n  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n\
    \    return true\n  end\n  if a == 28 then\n    return true\n  end\n  if a ==\
    \ 29 then\n    return true\n  end\n  if a == 30 then\n    return true\n  end\n\
    \  if a == 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n\
    \  end\n  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return\
    \ true\n  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n\
    \    return true\n  end\n  if a == 37 then\n    return true\n  end\n  if a ==\
    \ 38 then\n    return true\n  end\n  if a == 39 then\n    return true\n  end\n\
    \  if a == 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n\
    \  end\n  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return\
    \ true\n  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n\
    \    return true\n  end\n  if a == 46 then\n    return true\n  end\n  if a ==\
    \ 47 then\n    return true\n  end\n  if a == 48 then\n    return true\n  end\n\
    \  if a == 49 then\n    return true\n  end\n  if \nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpolsyrk9q.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return false end\n  if a == 1 then return true end\n  if a == 2 then return\
    \ true end\n  if a == 3 then return true end\n  if a == 4 then return true end\n\
    \  if a == 5 then return true end\n  if a == 6 then return true end\n  if a ==\
    \ 7 then return true end\n  if a == 8 then return true end\n  if a == 9 then return\
    \ true end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpeb49dkpq.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 then\n        return a == (a\
    \ ^ 3)\n    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnhaw4nb_.lua:32:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpnhaw4nb_.lua:32:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\tlocal cube\
    \ = math.floor(a/3)\n\tif a == cube then\n\t\treturn true\n\telse\n\t\treturn\
    \ false\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf6lcx9pm.lua:29:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpf6lcx9pm.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a%1 == 0 then\n    return true\n  elseif a%2 == 0 then\n\
    \    return true\n  elseif a%3 == 0 then\n    return true\n  elseif a%4 == 0 then\n\
    \    return true\n  elseif a%5 == 0 then\n    return true\n  elseif a%6 == 0 then\n\
    \    return true\n  elseif a%7 == 0 then\n    return true\n  elseif a%8 == 0 then\n\
    \    return true\n  elseif a%9 == 0 then\n    return true\n  elseif a%10 == 0\
    \ then\n    return true\n  elseif a%11 == 0 then\n    return true\n  elseif a%12\
    \ == 0 then\n    return true\n  elseif a%13 == 0 then\n    return true\n  elseif\
    \ a%14 == 0 then\n    return true\n  elseif a%15 == 0 then\n    return true\n\
    \  elseif a%16 == 0 then\n    return true\n  elseif a%17 == 0 then\n    return\
    \ true\n  elseif a%18 == 0 then\n    return true\n  elseif a%19 == 0 then\n  \
    \  return true\n  elseif a%20 == 0 then\n    return true\n  elseif a%21 == 0 then\n\
    \    return true\n  elseif a%22 == 0 then\n    return true\n  elseif a%23 == 0\
    \ then\n    return true\n  elseif a%24 == 0 then\n    return true\n  elseif a%25\
    \ == 0 then\n    return true\n  elseif a%26 == 0 then\n    return true\n  elseif\
    \ a%27 == 0 then\n    return true\n  elseif a%28 == 0 then\n    return true\n\
    \  elseif a%29 == 0 then\n    return true\n  elseif a%30 == 0 then\n    return\
    \ true\n  elseif a%31 == 0 then\n    return true\n  elseif a%32 == 0 then\n  \
    \  return true\n  elseif a%33 == 0 then\n    return true\n  elseif a%34 == 0 then\n\
    \    return true\n  elseif a%35 == 0 then\n    return true\n  elseif a%36 == 0\
    \ then\n    return true\n  elseif a%37 == 0 then\n    return true\n  elseif a%38\
    \ == 0 then\n    return true\n  elseif a%39 == 0 then\n    return true\n  \nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpr63fjsz3.lua:99: ''end'' expected (to close ''if'' at line
    18) near ''lu''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 then\n        return false\n\
    \    end\n    if a < 0 then\n        return true\n    end\n    if a <= 1 then\n\
    \        return true\n    end\n    if a <= 3 then\n        return true\n    end\n\
    \    if a <= 9 then\n        return true\n    end\n    if a <= 27 then\n     \
    \   return true\n    end\n    if a <= 81 then\n        return true\n    end\n\
    \    if a <= 127 then\n        return true\n    end\n    if a <= 255 then\n  \
    \      return true\n    end\n    if a <= 511 then\n        return true\n    end\n\
    \    if a <= 1025 then\n        return true\n    end\n    if a <= 2047 then\n\
    \        return true\n    end\n    if a <= 4095 then\n        return true\n  \
    \  end\n    if a <= 8191 then\n        return true\n    end\n    if a <= 16383\
    \ then\n        return true\n    end\n    if a <= 32767 then\n        return true\n\
    \    end\n    if a <= 65535 then\n        return true\n    end\n    if a <= 131071\
    \ then\n        return true\n    end\n    if a <= 262143 then\n        return\
    \ true\n    end\n    if a <= 524287 then\n        return true\n    end\n    if\
    \ a <= 1048575 then\n        return true\n    end\n    if a <= 2097151 then\n\
    \        return true\n    end\n    if a <= 4194303 then\n        return true\n\
    \    end\n    if a <= 8388607 then\n        return true\n    end\n    if a <=\
    \ 16777215 then\n        return true\n    end\n    if a <= 33554431 then\n   \
    \     return true\n    end\n    if a <= 67108863 then\n        return true\n \
    \   end\n    if a <= 134217727 then\n        return true\n    end\n    if a <=\
    \ 268435455 then\n        return true\n    end\n    if a <= 536870911 then\n \
    \       return true\n    end\n    if a <= 1073741823 then\n        return true\n\
    \    end\n    if a <= 2147483647 then\n        return true\n    end\n    if a\
    \ <= 4294967295 then\n        return true\n    end\n    if a <= 8589934591 then\n\
    \        return true\n    end\n    if a <= 17179869183 then\n        return true\n\
    \    end\n    if a <= 34359738367 then\n        return true\n    end\n    if a\
    \ <= 68719476735 then\n        return true\n    end\n    if a <= 137438953473\
    \ then\n        return true\n\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpkdvx4v_7.lua:135: ''end'' expected (to close ''if'' at line
    132) near ''lu''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a == 1 then\n        return true\n\
    \    end\n    if a == 2 then\n        return true\n    end\n    if a == 3 then\n\
    \        return true\n    end\n    if a == 4 then\n        return true\n    end\n\
    \    if a == 5 then\n        return true\n    end\n    if a == 6 then\n      \
    \  return true\n    end\n    if a == 7 then\n        return true\n    end\n  \
    \  if a == 8 then\n        return true\n    end\n    if a == 9 then\n        return\
    \ true\n    end\n    if a == 10 then\n        return true\n    end\n    if a ==\
    \ 11 then\n        return true\n    end\n    if a == 12 then\n        return true\n\
    \    end\n    if a == 13 then\n        return true\n    end\n    if a == 14 then\n\
    \        return true\n    end\n    if a == 15 then\n        return true\n    end\n\
    \    if a == 16 then\n        return true\n    end\n    if a == 17 then\n    \
    \    return true\n    end\n    if a == 18 then\n        return true\n    end\n\
    \    if a == 19 then\n        return true\n    end\n    if a == 20 then\n    \
    \    return true\n    end\n    if a == 21 then\n        return true\n    end\n\
    \    if a == 22 then\n        return true\n    end\n    if a == 23 then\n    \
    \    return true\n    end\n    if a == 24 then\n        return true\n    end\n\
    \    if a == 25 then\n        return true\n    end\n    if a == 26 then\n    \
    \    return true\n    end\n    if a == 27 then\n        return true\n    end\n\
    \    if a == 28 then\n        return true\n    end\n    if a == 29 then\n    \
    \    return true\n    end\n    if a == 30 then\n        return true\n    end\n\
    \    if a == 31 then\n        return true\n    end\n    if a == 32 then\n    \
    \    return true\n    end\n    if a == 33 then\n        return true\n    end\n\
    \    if a == 34 then\n        return true\n    end\n    if a == 35 then\n    \
    \    return true\n    end\n    if a == 36 then\n        return true\n    end\n\
    \    if a == 37 then\n        return true\n    end\n    if a == 38 then\n    \
    \    return true\n    end\n    if a == 39 then\n        return true\n    end\n\
    \    if a == 40 then\n        return true\n    end\n    if a == 41 then\n    \
    \    return true\n    end\n    if a == 42 then\n        return true\n    end\n\
    \    if a == 43 then\n        return true\n    end\n    if a == 44 then\n    \
    \    return true\n    end\n    if a == 45 then\n        return true\n    end\n\
    \    if a == 46 then\n        return true\n    end\n    if a == 47 then\n    \
    \    return true\n    end\n    if a == 48 then\n        return true\n    end\n\
    \    if a == 49 then\n        return true\n    end\n    if a == \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmps91f6xx8.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp3wa21ypl.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\t-- Write your\
    \ solution here\n\treturn false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplp_n6jax.lua:25:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmplp_n6jax.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a > 0 then\n    if a % 3 == 0 then\n      return\
    \ true\n    end\n    if a % 5 == 0 then\n      return true\n    end\n    if a\
    \ % 7 == 0 then\n      return true\n    end\n  end\n  return false\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz2pu6z54.lua:38:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpz2pu6z54.lua:38:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a < 0 then\n        return false\n\
    \    end\n    if a > 180 then\n        return false\n    end\n    if a == 180\
    \ then\n        return true\n    end\n    if a == 360 then\n        return true\n\
    \    end\n    if a == 720 then\n        return true\n    end\n    if a == 1440\
    \ then\n        return true\n    end\n    if a == 28800 then\n        return true\n\
    \    end\n    if a == 57600 then\n        return true\n    end\n    if a == 115200\
    \ then\n        return true\n    end\n    if a == 230400 then\n        return\
    \ true\n    end\n    if a == 345600 then\n        return true\n    end\n    if\
    \ a == 563000 then\n        return true\n    end\n    if a == 786400 then\n  \
    \      return true\n    end\n    if a == 1152000 then\n        return true\n \
    \   end\n    if a == 2304000 then\n        return true\n    end\n    if a == 3456000\
    \ then\n        return true\n    end\n    if a == 5630000 then\n        return\
    \ true\n    end\n    if a == 7864000 then\n        return true\n    end\n    if\
    \ a == 1152000 then\n        return true\n    end\n    if a == 2304000 then\n\
    \        return true\n    end\n    if a == 3456000 then\n        return true\n\
    \    end\n    if a == 5630000 then\n        return true\n    end\n    if a ==\
    \ 7864000 then\n        return true\n    end\n    if a == 1152000 then\n     \
    \   return true\n    end\n    if a == 2304000 then\n        return true\n    end\n\
    \    if a == 3456000 then\n        return true\n    end\n    if a == 5630000 then\n\
    \        return true\n    end\n    if a == 7864000 then\n        return true\n\
    \    end\n    if a == 1152000 then\n        return true\n    end\n    if a ==\
    \ 2304000 then\n        return true\n    end\n    if a == 3456000 then\n     \
    \   return true\n    end\n    if a == 5630000 then\n        return true\n    end\n\
    \    if a == 7864000 then\n        return true\n    end\n    if a == 1152000 then\n\
    \        return true\n    end\n    if a == 2304000 then\n        return true\n\
    \    end\n    if a == 3456000 then\n        return true\n    end\n    if a ==\
    \ 5630000 then\n        return true\n    end\n    if a == 7864000 then\n     \
    \   return true\n    end\n    if a == 1152000 then\n        return true\n    end\n\
    \    if a == 2304000 then\n        return true\n    end\n    if a == 3456000 then\n\
    \        return true\n    end\n    if a == 5630000 then\n        return true\n\
    \    end\n    if a == 7864000 then\n        return true\n    end\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmprwylsk5_.lua:164: ''end'' expected (to close ''function''
    at line 17) near <eof>

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp3wa21ypl.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a < 0 then\n        return false\n\
    \    end\n    if a > 180 then\n        return false\n    end\n    if a <= 1 then\n\
    \        return true\n    end\n    if a <= 3 then\n        return true\n    end\n\
    \    if a <= 9 then\n        return true\n    end\n    if a <= 27 then\n     \
    \   return true\n    end\n    if a <= 81 then\n        return true\n    end\n\
    \    if a <= 127 then\n        return true\n    end\n    if a <= 255 then\n  \
    \      return true\n    end\n    if a <= 511 then\n        return true\n    end\n\
    \    if a <= 1025 then\n        return true\n    end\n    if a <= 2047 then\n\
    \        return true\n    end\n    if a <= 4095 and a >= 256 then\n        return\
    \ true\n    end\n    if a <= 8191 then\n        return true\n    end\n    if a\
    \ <= 16383 then\n        return true\n    end\n    if a <= 32767 then\n      \
    \  return true\n    end\n    if a <= 65535 then\n        return true\n    end\n\
    \    if a <= 131071 then\n        return true\n    end\n    if a <= 262143 then\n\
    \        return true\n    end\n    if a <= 524287 then\n        return true\n\
    \    end\n    if a <= 1048575 then\n        return true\n    end\n    if a <=\
    \ 2097151 then\n        return true\n    end\n    if a <= 4194303 then\n     \
    \   return true\n    end\n    if a <= 8388607 then\n        return true\n    end\n\
    \    if a <= 16777215 then\n        return true\n    end\n    if a <= 33554431\
    \ then\n        return true\n    end\n    if a <= 67108863 then\n        return\
    \ true\n    end\n    if a <= 134217727 then\n        return true\n    end\n  \
    \  if a <= 268435455 then\n        return true\n    end\n    if a <= 536870911\
    \ then\n        return true\n    end\n    if a <= 1073741823 then\n        return\
    \ true\n    end\n    if a <= 2147483647 then\n        return true\n    end\n \
    \   if a <= 4294967295 then\n        return true\n    end\n    if a <= 8589934591\
    \ then\n        return true\n    end\n    if a <= 17179869183 then\n        return\
    \ true\n    end\n    if a <= 34359738367 then\n        return true\n    end\n\
    \    if a <= 68719476735 then\n        return true\n    end\n    if a <= 137438953473\
    \ \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpw4iri1di.lua:133: ''then'' expected near ''lu''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a > 0 and a <= 9 then\n    return true\n  end\n\
    \  if a > 9 and a <= 99 then\n    return true\n  end\n  if a > 99 and a <= 999\
    \ then\n    return true\n  end\n  if a > 999 and a <= 9999 then\n    return true\n\
    \  end\n  if a > 9999 and a <= 99999 then\n    return true\n  end\n  if a > 99999\
    \ and a <= 999999 then\n    return true\n  end\n  if a > 999999 and a <= 9999999\
    \ then\n    return true\n  end\n  if a > 9999999 and a <= 999999999 then\n   \
    \ return true\n  end\n  if a > 999999999 and a <= 9999999999 then\n    return\
    \ true\n  end\n  if a > 9999999999 and a <= 99999999999 then\n    return true\n\
    \  end\n  if a > 99999999999 and a <= 9999999999999 then\n    return true\n  end\n\
    \  if a > 9999999999999 and a <= 999999999999 then\n    return true\n  end\n \
    \ if a > 999999999999 and a <= 9999999999999 then\n    return true\n  end\n  if\
    \ a > 9999999999999 and a <= 999999999999999 then\n    return true\n  end\n  if\
    \ a > 999999999999999 and a <= 9999999999999 then\n    return true\n  end\n  if\
    \ a > 9999999999999 and a <= 9999999999999999 then\n    return true\n  end\n \
    \ if a > 9999999999999999 and a <= 9999999999999 then\n    return true\n  end\n\
    \  if a > 9999999999999 and a <= 9999999999999999999 then\n    return true\n \
    \ end\n  if a > 9999999999999999999 and a <= 9999999999999 then\n    return true\n\
    \  end\n  if a > 9999999999999 and a <= 99999999999999999999 then\n    return\
    \ true\n  end\n  if a > 99999999999999999999 and a <= 9999999999999 then\n   \
    \ return true\n  end\n  if a > 9999999999999 and a <= 99999999999999999999999\
    \ then\n    return true\n  end\n  if a > 99999999999999999999999 and a <= 9999999999999\
    \ then\n    return true\n  end\n  if a > 9999999999999 and a <= 999999999999999999999999\
    \ then\n    return true\n  end\n  if a > 999999999999999999999999 and a <= 9999999999999\
    \ then\n    return true\n  end\n  if a > 9999999999999 and a <= 999999999999999999999999999\
    \ then\n    return true\n  end\n  if a > 9999\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmph18l9y40.lua:100: ''then'' expected near ''lu''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmppefjperv.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a == 1 then\n        return true\n\
    \    end\n    if a == 2 then\n        return true\n    end\n    if a == 3 then\n\
    \        return true\n    end\n    if a == 4 then\n        return true\n    end\n\
    \    if a == 5 then\n        return true\n    end\n    if a == 6 then\n      \
    \  return true\n    end\n    if a == 7 then\n        return true\n    end\n  \
    \  if a == 8 then\n        return true\n    end\n    if a == 9 then\n        return\
    \ true\n    end\n    if a == 10 then\n        return true\n    end\n    if a ==\
    \ 11 then\n        return true\n    end\n    if a == 12 then\n        return true\n\
    \    end\n    if a == 13 then\n        return true\n    end\n    if a == 14 then\n\
    \        return true\n    end\n    if a == 15 then\n        return true\n    end\n\
    \    if a == 16 then\n        return true\n    end\n    if a == 17 then\n    \
    \    return true\n    end\n    if a == 18 then\n        return true\n    end\n\
    \    if a == 19 then\n        return true\n    end\n    if a == 20 then\n    \
    \    return true\n    end\n    if a == 21 then\n        return true\n    end\n\
    \    if a == 22 then\n        return true\n    end\n    if a == 23 then\n    \
    \    return true\n    end\n    if a == 24 then\n        return true\n    end\n\
    \    if a == 25 then\n        return true\n    end\n    if a == 26 then\n    \
    \    return true\n    end\n    if a == 27 then\n        return true\n    end\n\
    \    if a == 28 then\n        return true\n    end\n    if a == 29 then\n    \
    \    return true\n    end\n    if a == 30 then\n        return true\n    end\n\
    \    if a == 31 then\n        return true\n    end\n    if a == 32 then\n    \
    \    return true\n    end\n    if a == 33 then\n        return true\n    end\n\
    \    if a == 34 then\n        return true\n    end\n    if a == 35 then\n    \
    \    return true\n    end\n    if a == 36 then\n        return true\n    end\n\
    \    if a == 37 then\n        return true\n    end\n    if a == 38 then\n    \
    \    return true\n    end\n    if a == 39 then\n        return true\n    end\n\
    \    if a == 40 then\n        return true\n    end\n    if a == 41 then\n    \
    \    return true\n    end\n    if a == 42 then\n        return true\n    end\n\
    \    if a == 43 then\n        return true\n    end\n    if a == 44 then\n    \
    \    return true\n    end\n    if a == 45 then\n        return true\n    end\n\
    \    if a == 46 then\n        return true\n    end\n    if a == 47 then\n    \
    \    return true\n    end\n    if a == 48 then\n        return true\n    end\n\
    \    if a == 49 then\n        return true\n    end\n    if a == \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmps91f6xx8.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\t-- Write your\
    \ code here\n\treturn true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps8bjojke.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmps8bjojke.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmppefjperv.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a <= 0 then\n        return false\n\
    \    end\n    if a > 0 then\n        return iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1)\n    end\n    return true\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqebq3h0r.lua:34:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpqebq3h0r.lua:34:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a%1 == 0 then\n    return true\n  elseif a%2 == 0 then\n\
    \    return true\n  elseif a%3 == 0 then\n    return true\n  elseif a%4 == 0 then\n\
    \    return true\n  elseif a%5 == 0 then\n    return true\n  elseif a%6 == 0 then\n\
    \    return true\n  elseif a%7 == 0 then\n    return true\n  elseif a%8 == 0 then\n\
    \    return true\n  elseif a%9 == 0 then\n    return true\n  elseif a%10 == 0\
    \ then\n    return true\n  elseif a%11 == 0 then\n    return true\n  elseif a%12\
    \ == 0 then\n    return true\n  elseif a%13 == 0 then\n    return true\n  elseif\
    \ a%14 == 0 then\n    return true\n  elseif a%15 == 0 then\n    return true\n\
    \  elseif a%16 == 0 then\n    return true\n  elseif a%17 == 0 then\n    return\
    \ true\n  elseif a%18 == 0 then\n    return true\n  elseif a%19 == 0 then\n  \
    \  return true\n  elseif a%20 == 0 then\n    return true\n  elseif a%21 == 0 then\n\
    \    return true\n  elseif a%22 == 0 then\n    return true\n  elseif a%23 == 0\
    \ then\n    return true\n  elseif a%24 == 0 then\n    return true\n  elseif a%25\
    \ == 0 then\n    return true\n  elseif a%26 == 0 then\n    return true\n  elseif\
    \ a%27 == 0 then\n    return true\n  elseif a%28 == 0 then\n    return true\n\
    \  elseif a%29 == 0 then\n    return true\n  elseif a%30 == 0 then\n    return\
    \ true\n  elseif a%31 == 0 then\n    return true\n  elseif a%32 == 0 then\n  \
    \  return true\n  elseif a%33 == 0 then\n    return true\n  elseif a%34 == 0 then\n\
    \    return true\n  elseif a%35 == 0 then\n    return true\n  elseif a%36 == 0\
    \ then\n    return true\n  elseif a%37 == 0 then\n    return true\n  elseif a%38\
    \ == 0 then\n    return true\n  elseif a%39 == 0 then\n    return true\n  \nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpr63fjsz3.lua:99: ''end'' expected (to close ''if'' at line
    18) near ''lu''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a <= 0 then\n\
    \    return false\n  end\n  if a <= 1 then\n    return true\n  end\n  if a <=\
    \ 3 then\n    return true\n  end\n  if a <= 9 then\n    return true\n  end\n \
    \ if a <= 27 then\n    return true\n  end\n  if a <= 81 then\n    return true\n\
    \  end\n  if a <= 127 then\n    return true\n  end\n  if a <= 255 then\n    return\
    \ true\n  end\n  if a <= 511 then\n    return true\n  end\n  if a <= 1025 then\n\
    \    return true\n  end\n  if a <= 2047 then\n    return true\n  end\n  if a <=\
    \ 4095 then\n    return true\n  end\n  if a <= 8191 then\n    return true\n  end\n\
    \  if a <= 16383 then\n    return true\n  end\n  if a <= 32767 then\n    return\
    \ true\n  end\n  if a <= 65535 then\n    return true\n  end\n  if a <= 131071\
    \ then\n    return true\n  end\n  if a <= 262143 then\n    return true\n  end\n\
    \  if a <= 524287 then\n    return true\n  end\n  if a <= 1048575 then\n    return\
    \ true\n  end\n  if a <= 2097151 then\n    return true\n  end\n  if a <= 4194303\
    \ then\n    return true\n  end\n  if a <= 8388607 then\n    return true\n  end\n\
    \  if a <= 16777215 then\n    return true\n  end\n  if a <= 33554431 then\n  \
    \  return true\n  end\n  if a <= 67108863 then\n    return true\n  end\n  if a\
    \ <= 134217727 then\n    return true\n  end\n  if a <= 268435455 then\n    return\
    \ true\n  end\n  if a <= 536870911 then\n    return true\n  end\n  if a <= 1073741823\
    \ then\n    return true\n  end\n  if a <= 2147483647 then\n    return true\n \
    \ end\n  if a <= 4294967295 then\n    return true\n  end\n  if a <= 858993459\
    \ then\n    return true\n  end\n  if a <= 1717986919 then\n    return true\n \
    \ end\n  if a <= 34359738367 then\n    return true\n  end\n  if a <= 68719476735\
    \ then\n    return true\n  end\n  if a <= 137438953473 then\n    return true\n\
    \  end\n  if a <= 274877906919 then\n    return true\n  end\n  if a <= 5497\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyvhuipj0.lua:133: ''then'' expected near ''lu''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a < 0 then\n        return false\n\
    \    end\n    if a > 180 then\n        return false\n    end\n    if a <= 1 then\n\
    \        return true\n    end\n    if a <= 3 then\n        return true\n    end\n\
    \    if a <= 9 then\n        return true\n    end\n    if a <= 27 then\n     \
    \   return true\n    end\n    if a <= 81 then\n        return true\n    end\n\
    \    if a <= 127 then\n        return true\n    end\n    if a <= 255 then\n  \
    \      return true\n    end\n    if a <= 511 then\n        return true\n    end\n\
    \    if a <= 1025 then\n        return true\n    end\n    if a <= 2047 then\n\
    \        return true\n    end\n    if a <= 4097 then\n        return true\n  \
    \  end\n    if a <= 8191 then\n        return true\n    end\n    if a <= 16383\
    \ then\n        return true\n    end\n    if a <= 32767 then\n        return true\n\
    \    end\n    if a <= 65535 then\n        return true\n    end\n    if a <= 131071\
    \ then\n        return true\n    end\n    if a <= 262143 then\n        return\
    \ true\n    end\n    if a <= 524287 then\n        return true\n    end\n    if\
    \ a <= 1048575 then\n        return true\n    end\n    if a <= 2097151 then\n\
    \        return true\n    end\n    if a <= 4194303 then\n        return true\n\
    \    end\n    if a <= 8388607 then\n        return true\n    end\n    if a <=\
    \ 16777215 then\n        return true\n    end\n    if a <= 33554431 then\n   \
    \     return true\n    end\n    if a <= 67108863 then\n        return true\n \
    \   end\n    if a <= 134217727 then\n        return true\n    end\n    if a <=\
    \ 268435455 then\n        return true\n    end\n    if a <= 536870911 then\n \
    \       return true\n    end\n    if a <= 1073741823 then\n        return true\n\
    \    end\n    if a <= 2147483647 then\n        return true\n    end\n    if a\
    \ <= 4294967295 then\n        return true\n    end\n    return false\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpq5z7xzey.lua:127:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpq5z7xzey.lua:127:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then return true end\n    if a == 1 then return true end\n    if a == 2 then\
    \ return true end\n    if a == 3 then return true end\n    if a == 4 then return\
    \ true end\n    if a == 5 then return true end\n    if a == 6 then return true\
    \ end\n    if a == 7 then return true end\n    if a == 8 then return true end\n\
    \    if a == 9 then return true end\n    if a == 10 then return true end\n   \
    \ if a == 11 then return true end\n    if a == 12 then return true end\n    if\
    \ a == 13 then return true end\n    if a == 14 then return true end\n    if a\
    \ == 15 then return true end\n    if a == 16 then return true end\n    if a ==\
    \ 17 then return true end\n    if a == 18 then return true end\n    if a == 19\
    \ then return true end\n    if a == 20 then return true end\n    if a == 21 then\
    \ return true end\n    if a == 22 then return true end\n    if a == 23 then return\
    \ true end\n    if a == 24 then return true end\n    if a == 25 then return true\
    \ end\n    if a == 26 then return true end\n    if a == 27 then return true end\n\
    \    if a == 28 then return true end\n    if a == 29 then return true end\n  \
    \  if a == 30 then return true end\n    if a == 31 then return true end\n    if\
    \ a == 32 then return true end\n    if a == 33 then return true end\n    if a\
    \ == 34 then return true end\n    if a == 35 then return true end\n    if a ==\
    \ 36 then return true end\n    if a == 37 then return true end\n    if a == 38\
    \ then return true end\n    if a == 39 then return true end\n    if a == 40 then\
    \ return true end\n    if a == 41 then return true end\n    if a == 42 then return\
    \ true end\n    if a == 43 then return true end\n    if a == 44 then return true\
    \ end\n    if a == 45 then return true end\n    if a == 46 then return true end\n\
    \    if a == 47 then return true end\n    if a == 48 then return true end\n  \
    \  if a == 49 then return true end\n    if a == 50 then return true end\n    if\
    \ a == 51 then return true end\n    if a == 52 then return true end\n    if a\
    \ == 53 then return true end\n    if a == 54 then return true end\n    if a ==\
    \ 55 then return true end\n    if a == 56 then return true end\n    if a == 57\
    \ then return true end\n    if a == 58 then return true end\n    if a == 59 then\
    \ return true end\n    if a == 60 then return true end\n    if a == 61 then \n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmprb4t5yxi.lua:94: ''end'' expected (to close ''if'' at line
    79) near <eof>

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a%1 == 0 then\n    return false\n  elseif a%2 == 0\
    \ then\n    return iscube(a/2) or iscube(a-1)\n  elseif a%3 == 0 then\n    return\
    \ iscube(a/3) or iscube(a-2) or iscube(a-1)\n  else\n    return false\n  end\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo7rzg92v.lua:34:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpo7rzg92v.lua:34:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a < 0 then\n    return false\n  end\n  if a > 180\
    \ then\n    return false\n  end\n  if a % 3 == 0 then\n    return true\n  end\n\
    \  if a % 3 == 1 then\n    return iscube(a/3)\n  end\n  if a % 3 == 2 then\n \
    \   return iscube(a/3)*iscube(a/3)\n  end\n  return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmkwfzgbo.lua:42:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpmkwfzgbo.lua:42:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 then\n        return a % 3\
    \ == 0 and a % 5 == 0 and a % 7 == 0\n    end\n    return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpeqvxdbll.lua:30:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpeqvxdbll.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 and a < 9 then\n        return\
    \ true\n    end\n    if a > 9 and a < 99 then\n        return true\n    end\n\
    \    if a > 99 and a < 999 then\n        return true\n    end\n    if a > 999\
    \ and a < 9999 then\n        return true\n    end\n    if a > 9999 and a < 99999\
    \ then\n        return true\n    end\n    if a > 99999 and a < 999999 then\n \
    \       return true\n    end\n    if a > 999999 and a < 9999999 then\n       \
    \ return true\n    end\n    if a > 9999999 and a < 99999999 then\n        return\
    \ true\n    end\n    if a > 99999999 and a < 999999999 then\n        return true\n\
    \    end\n    if a > 999999999 and a < 1000000000 then\n        return true\n\
    \    end\n    if a > 1000000000 and a < 1000000001 then\n        return true\n\
    \    end\n    if a > 1000000001 and a < 1000000002 then\n        return true\n\
    \    end\n    if a > 1000000002 and a < 1000000003 then\n        return true\n\
    \    end\n    if a > 1000000003 and a < 1000000004 then\n        return true\n\
    \    end\n    if a > 1000000004 and a < 1000000005 then\n        return true\n\
    \    end\n    if a > 1000000005 and a < 1000000006 then\n        return true\n\
    \    end\n    if a > 1000000006 and a < 1000000007 then\n        return true\n\
    \    end\n    if a > 1000000007 and a < 1000000008 then\n        return true\n\
    \    end\n    if a > 1000000008 and a < 1000000009 then\n        return true\n\
    \    end\n    if a > 1000000009 and a < 1000000010 then\n        return true\n\
    \    end\n    if a > 1000000010 and a < 1000000011 then\n        return true\n\
    \    end\n    if a > 1000000011 and a < 1000000012 then\n        return true\n\
    \    end\n    if a > 1000000012 and a < 1000000013 then\n        return true\n\
    \    end\n    if a > 1000000013 and a < 1000000014 then\n        return true\n\
    \    end\n    if a > 1000000014 and a < 1000000015 then\n        return true\n\
    \    end\n    if a > 1000000015 and a < 1000000016 then\n        return true\n\
    \    end\n    if a > 1000000016 and a < 1000000017 then\n        return true\n\
    \    end\n    if a > 1000000017 and a < 1000000018 then\n        return true\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp44twatiy.lua:104: ''end'' expected (to close ''if'' at line
    102) near ''lu''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a <= 0 then\n    return false\n  end\n  if a <=\
    \ 1 then\n    return true\n  end\n  if a <= 3 then\n    return true\n  end\n \
    \ if a <= 9 then\n    return true\n  end\n  if a <= 27 then\n    return true\n\
    \  end\n  if a <= 81 then\n    return true\n  end\n  if a <= 127 then\n    return\
    \ true\n  end\n  return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz662ttjz.lua:49:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpz662ttjz.lua:49:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a == 1 then\n    return true\n  elseif a == 2 then\n\
    \    return true\n  elseif a == 3 then\n    return true\n  elseif a == 4 then\n\
    \    return true\n  elseif a == 5 then\n    return true\n  elseif a == 6 then\n\
    \    return true\n  elseif a == 7 then\n    return true\n  elseif a == 8 then\n\
    \    return true\n  elseif a == 9 then\n    return true\n  elseif a == 10 then\n\
    \    return true\n  elseif a == 11 then\n    return true\n  elseif a == 12 then\n\
    \    return true\n  elseif a == 13 then\n    return true\n  elseif a == 14 then\n\
    \    return true\n  elseif a == 15 then\n    return true\n  elseif a == 16 then\n\
    \    return true\n  elseif a == 17 then\n    return true\n  elseif a == 18 then\n\
    \    return true\n  elseif a == 19 then\n    return true\n  elseif a == 20 then\n\
    \    return true\n  elseif a == 21 then\n    return true\n  elseif a == 22 then\n\
    \    return true\n  elseif a == 23 then\n    return true\n  elseif a == 24 then\n\
    \    return true\n  elseif a == 25 then\n    return true\n  elseif a == 26 then\n\
    \    return true\n  elseif a == 27 then\n    return true\n  elseif a == 28 then\n\
    \    return true\n  elseif a == 29 then\n    return true\n  elseif a == 30 then\n\
    \    return true\n  elseif a == 31 then\n    return true\n  elseif a == 32 then\n\
    \    return true\n  elseif a == 33 then\n    return true\n  elseif a == 34 then\n\
    \    return true\n  elseif a == 35 then\n    return true\n  elseif a == 36 then\n\
    \    return true\n  elseif a == 37 then\n    return true\n  elseif a == 38 then\n\
    \    return true\n  elseif a == 39 then\n    return true\n  elseif a == 40 then\n\
    \    return true\n  elseif a == 41 then\n    return true\n  elseif a == 42 then\n\
    \    return true\n  elseif a == 43 then\n    return true\n  elseif a == 44 then\n\
    \    return true\n  elseif a == 45 then\n    return true\n  elseif a == 46 then\n\
    \    return true\n  elseif a == 47 then\n    return true\n  elseif a == 48 then\n\
    \    return true\n  elseif a == 49 then\n    return true\n  elseif a == \nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmphtvu4l27.lua:119: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a == 1 then\n    return true\n  elseif a == 2 then\n\
    \    return true\n  elseif a == 3 then\n    return true\n  elseif a == 4 then\n\
    \    return true\n  elseif a == 5 then\n    return true\n  elseif a == 6 then\n\
    \    return true\n  elseif a == 7 then\n    return true\n  elseif a == 8 then\n\
    \    return true\n  elseif a == 9 then\n    return true\n  elseif a == 10 then\n\
    \    return true\n  elseif a == 11 then\n    return true\n  elseif a == 12 then\n\
    \    return true\n  elseif a == 13 then\n    return true\n  elseif a == 14 then\n\
    \    return true\n  elseif a == 15 then\n    return true\n  elseif a == 16 then\n\
    \    return true\n  elseif a == 17 then\n    return true\n  elseif a == 18 then\n\
    \    return true\n  elseif a == 19 then\n    return true\n  elseif a == 20 then\n\
    \    return true\n  elseif a == 21 then\n    return true\n  elseif a == 22 then\n\
    \    return true\n  elseif a == 23 then\n    return true\n  elseif a == 24 then\n\
    \    return true\n  elseif a == 25 then\n    return true\n  elseif a == 26 then\n\
    \    return true\n  elseif a == 27 then\n    return true\n  elseif a == 28 then\n\
    \    return true\n  elseif a == 29 then\n    return true\n  elseif a == 30 then\n\
    \    return true\n  elseif a == 31 then\n    return true\n  elseif a == 32 then\n\
    \    return true\n  elseif a == 33 then\n    return true\n  elseif a == 34 then\n\
    \    return true\n  elseif a == 35 then\n    return true\n  elseif a == 36 then\n\
    \    return true\n  elseif a == 37 then\n    return true\n  elseif a == 38 then\n\
    \    return true\n  elseif a == 39 then\n    return true\n  elseif a == 40 then\n\
    \    return true\n  elseif a == 41 then\n    return true\n  elseif a == 42 then\n\
    \    return true\n  elseif a == 43 then\n    return true\n  elseif a == 44 then\n\
    \    return true\n  elseif a == 45 then\n    return true\n  elseif a == 46 then\n\
    \    return true\n  elseif a == 47 then\n    return true\n  elseif a == 48 then\n\
    \    return true\n  elseif a == 49 then\n    return true\n  elseif a == \nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmphtvu4l27.lua:119: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a <= 0 then\n\
    \    return false\n  end\n  if a == 1 then\n    return true\n  end\n  if a ==\
    \ 2 then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n \
    \ if a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n\
    \  end\n  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return\
    \ true\n  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n  \
    \  return true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11\
    \ then\n    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if\
    \ a == 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n \
    \ end\n  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return\
    \ true\n  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n\
    \    return true\n  end\n  if a == 19 then\n    return true\n  end\n  if a ==\
    \ 20 then\n    return true\n  end\n  if a == 21 then\n    return true\n  end\n\
    \  if a == 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n\
    \  end\n  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return\
    \ true\n  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n\
    \    return true\n  end\n  if a == 28 then\n    return true\n  end\n  if a ==\
    \ 29 then\n    return true\n  end\n  if a == 30 then\n    return true\n  end\n\
    \  if a == 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n\
    \  end\n  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return\
    \ true\n  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n\
    \    return true\n  end\n  if a == 37 then\n    return true\n  end\n  if a ==\
    \ 38 then\n    return true\n  end\n  if a == 39 then\n    return true\n  end\n\
    \  if a == 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n\
    \  end\n  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return\
    \ true\n  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n\
    \    return true\n  end\n  if a == 46 then\n    return true\n  end\n  if a ==\
    \ 47 then\n    return true\n  end\n  if a == 48 then\n    return true\n  end\n\
    \  if a == 49 then\n    return true\n  end\n  if \nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpolsyrk9q.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a < 0 then\n    return false\n  end\n  if a > 180\
    \ then\n    return false\n  end\n  if a % 3 == 0 then\n    return true\n  end\n\
    \  if a % 3 == 1 then\n    return false\n  end\n  if a % 3 == 2 then\n    return\
    \ true\n  end\n  if a % 3 == 3 then\n    return false\n  end\n  if a % 3 == 4\
    \ then\n    return true\n  end\n  if a % 3 == 5 then\n    return false\n  end\n\
    \  if a % 3 == 6 then\n    return true\n  end\n  if a % 3 == 7 then\n    return\
    \ false\n  end\n  if a % 3 == 8 then\n    return true\n  end\n  if a % 3 == 9\
    \ then\n    return false\n  end\n  if a % 3 == 10 then\n    return true\n  end\n\
    \  if a % 3 == 11 then\n    return false\n  end\n  if a % 3 == 12 then\n    return\
    \ true\n  end\n  if a % 3 == 13 then\n    return false\n  end\n  if a % 3 == 14\
    \ then\n    return true\n  end\n  if a % 3 == 15 then\n    return false\n  end\n\
    \  if a % 3 == 16 then\n    return true\n  end\n  if a % 3 == 17 then\n    return\
    \ false\n  end\n  if a % 3 == 18 then\n    return true\n  end\n  if a % 3 == 19\
    \ then\n    return false\n  end\n  if a % 3 == 20 then\n    return true\n  end\n\
    \  if a % 3 == 21 then\n    return false\n  end\n  if a % 3 == 22 then\n    return\
    \ true\n  end\n  if a % 3 == 23 then\n    return false\n  end\n  if a % 3 == 24\
    \ then\n    return true\n  end\n  if a % 3 == 25 then\n    return false\n  end\n\
    \  if a % 3 == 26 then\n    return true\n  end\n  if a % 3 == 27 then\n    return\
    \ false\n  end\n  if a % 3 == 28 then\n    return true\n  end\n  if a % 3 == 29\
    \ then\n    return false\n  end\n  if a % 3 == 3 then\n    return true\n  end\n\
    \  if a % 3 == 4 then\n    return false\n  end\n  if a % 3 == 5 then\n    return\
    \ true\n  end\n  if a % 3 == 6 then\n    return false\n  end\n  if a % 3 == 7\
    \ then\n    return true\n  end\n  if a % 3 == 8 then\n    return false\n  end\n\
    \  if a % 3 == 9 then\n    return true\n  end\n  if a % 3 == 10 then\n    return\
    \ false\n  end\n  if a % 3 == 11 then\n    return true\n  end\n  if a % 3 == 12\
    \ then\n    return false\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpseoabi0x.lua:161: ''end'' expected (to close ''function''
    at line 17) near <eof>

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\tif a == 0 then\
    \ return true end\n\tif a == 1 then return true end\n\tif a == 2 then return true\
    \ end\n\tif a == 3 then return true end\n\tif a == 4 then return true end\n\t\
    if a == 5 then return true end\n\tif a == 6 then return true end\n\tif a == 7\
    \ then return true end\n\tif a == 8 then return true end\n\tif a == 9 then return\
    \ true end\n\tif a == 10 then return true end\n\tif a == 11 then return true end\n\
    \tif a == 12 then return true end\n\tif a == 13 then return true end\n\tif a ==\
    \ 14 then return true end\n\tif a == 15 then return true end\n\tif a == 16 then\
    \ return true end\n\tif a == 17 then return true end\n\tif a == 18 then return\
    \ true end\n\tif a == 19 then return true end\n\tif a == 20 then return true end\n\
    \tif a == 21 then return true end\n\tif a == 22 then return true end\n\tif a ==\
    \ 23 then return true end\n\tif a == 24 then return true end\n\tif a == 25 then\
    \ return true end\n\tif a == 26 then return true end\n\tif a == 27 then return\
    \ true end\n\tif a == 28 then return true end\n\tif a == 29 then return true end\n\
    \tif a == 30 then return true end\n\tif a == 31 then return true end\n\tif a ==\
    \ 32 then return true end\n\tif a == 33 then return true end\n\tif a == 34 then\
    \ return true end\n\tif a == 35 then return true end\n\tif a == 36 then return\
    \ true end\n\tif a == 37 then return true end\n\tif a == 38 then return true end\n\
    \tif a == 39 then return true end\n\tif a == 40 then return true end\n\tif a ==\
    \ 41 then return true end\n\tif a == 42 then return true end\n\tif a == 43 then\
    \ return true end\n\tif a == 44 then return true end\n\tif a == 45 then return\
    \ true end\n\tif a == 46 then return true end\n\tif a == 47 then return true end\n\
    \tif a == 48 then return true end\n\tif a == 49 then return true end\n\tif a ==\
    \ 50 then return true end\n\tif a == 51 then return true end\n\tif a == 52 then\
    \ return true end\n\tif a == 53 then return true end\n\tif a == 54 then return\
    \ true end\n\tif a == 55 then return true end\n\tif a == 56 then return true end\n\
    \tif a == 57 then return true end\n\tif a == 58 then return true end\n\tif a ==\
    \ 59 then return true end\n\tif a == 60 then return true end\n\tif a == 61 then\
    \ \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpha1foz96.lua:94: ''end'' expected (to close ''if'' at line
    79) near <eof>

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a == 1 then\n    return true\n  elseif a == 2 then\n\
    \    return true\n  elseif a == 3 then\n    return true\n  elseif a == 4 then\n\
    \    return true\n  elseif a == 5 then\n    return true\n  elseif a == 6 then\n\
    \    return true\n  elseif a == 7 then\n    return true\n  elseif a == 8 then\n\
    \    return true\n  elseif a == 9 then\n    return true\n  elseif a == 10 then\n\
    \    return true\n  elseif a == 11 then\n    return true\n  elseif a == 12 then\n\
    \    return true\n  elseif a == 13 then\n    return true\n  elseif a == 14 then\n\
    \    return true\n  elseif a == 15 then\n    return true\n  elseif a == 16 then\n\
    \    return true\n  elseif a == 17 then\n    return true\n  elseif a == 18 then\n\
    \    return true\n  elseif a == 19 then\n    return true\n  elseif a == 20 then\n\
    \    return true\n  elseif a == 21 then\n    return true\n  elseif a == 22 then\n\
    \    return true\n  elseif a == 23 then\n    return true\n  elseif a == 24 then\n\
    \    return true\n  elseif a == 25 then\n    return true\n  elseif a == 26 then\n\
    \    return true\n  elseif a == 27 then\n    return true\n  elseif a == 28 then\n\
    \    return true\n  elseif a == 29 then\n    return true\n  elseif a == 30 then\n\
    \    return true\n  elseif a == 31 then\n    return true\n  elseif a == 32 then\n\
    \    return true\n  elseif a == 33 then\n    return true\n  elseif a == 34 then\n\
    \    return true\n  elseif a == 35 then\n    return true\n  elseif a == 36 then\n\
    \    return true\n  elseif a == 37 then\n    return true\n  elseif a == 38 then\n\
    \    return true\n  elseif a == 39 then\n    return true\n  elseif a == 40 then\n\
    \    return true\n  elseif a == 41 then\n    return true\n  elseif a == 42 then\n\
    \    return true\n  elseif a == 43 then\n    return true\n  elseif a == 44 then\n\
    \    return true\n  elseif a == 45 then\n    return true\n  elseif a == 46 then\n\
    \    return true\n  elseif a == 47 then\n    return true\n  elseif a == 48 then\n\
    \    return true\n  elseif a == 49 then\n    return true\n  elseif a == \nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmphtvu4l27.lua:119: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a%1 == 0 then\n    return false\n  else\n    return\
    \ iscube(a-1)\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnw07xhho.lua:30:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpnw07xhho.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 and a <= 180 then\n       \
    \ return true\n    end\n    return false\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzp6t0oy3.lua:31:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpzp6t0oy3.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then return false end\n    if a > 0 then\n        if a % 3 == 0 then\n     \
    \       if a % 5 == 0 then\n                if a % 7 == 0 then\n             \
    \       return true\n                else\n                    return false\n\
    \                end\n            else\n                return false\n       \
    \     end\n        else\n            return false\n        end\n    else\n   \
    \     return false\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4w6tgu5e.lua:41:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp4w6tgu5e.lua:41:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a < 0 then\n    return false\n  end\n  if a > 180\
    \ then\n    return false\n  end\n  if a <= 1 then\n    return true\n  end\n  if\
    \ a <= 3 then\n    return true\n  end\n  if a <= 9 then\n    return true\n  end\n\
    \  if a <= 27 then\n    return true\n  end\n  if a <= 81 then\n    return true\n\
    \  end\n  if a <= 127 then\n    return true\n  end\n  if a <= 255 then\n    return\
    \ true\n  end\n  if a <= 511 then\n    return true\n  end\n  if a <= 1025 then\n\
    \    return true\n  end\n  if a <= 2047 then\n    return true\n  end\n  if a <=\
    \ 4095 and a > 1025 then\n    return true\n  end\n  if a <= 8191 then\n    return\
    \ true\n  end\n  if a <= 16383 then\n    return true\n  end\n  if a <= 32767 then\n\
    \    return true\n  end\n  if a <= 65535 then\n    return true\n  end\n  if a\
    \ <= 131071 then\n    return true\n  end\n  if a <= 262143 then\n    return true\n\
    \  end\n  if a <= 524287 then\n    return true\n  end\n  if a <= 1048575 then\n\
    \    return true\n  end\n  if a <= 2097151 then\n    return true\n  end\n  if\
    \ a <= 4194303 then\n    return true\n  end\n  if a <= 8388607 then\n    return\
    \ true\n  end\n  if a <= 16777215 then\n    return true\n  end\n  if a <= 33554431\
    \ then\n    return true\n  end\n  if a <= 67108863 then\n    return true\n  end\n\
    \  if a <= 134217727 then\n    return true\n  end\n  if a <= 268435455 then\n\
    \    return true\n  end\n  if a <= 536870911 then\n    return true\n  end\n  if\
    \ a <= 1073741823 then\n    return true\n  end\n  if a <= 2147483647 then\n  \
    \  return true\n  end\n  if a <= 4294967295 then\n    return true\n  end\n  if\
    \ a <= 858993459 then\n    return true\n  end\n  if a <= 1717986915 then\n   \
    \ return true\n  end\n  if a <= 3435973833 then\n    return true\n  end\n  if\
    \ a <= 687194767 then\n    return true\n  end\n  if a <= 1374389535 then\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp9qfsp0v2.lua:147: ''end'' expected (to close ''if'' at line
    132) near <eof>

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a < 0 then\n\
    \    return false\n  end\n  if a == 0 then\n    return true\n  end\n  if a > 0\
    \ then\n    return iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\n\
    \  end\n  return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6omfvy9u.lua:34:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp6omfvy9u.lua:34:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a < 0 then\n        return false\n\
    \    end\n    if a > 180 then\n        return false\n    end\n    if a <= 1 then\n\
    \        return true\n    end\n    if a <= 3 then\n        return true\n    end\n\
    \    if a <= 9 then\n        return true\n    end\n    if a <= 27 then\n     \
    \   return true\n    end\n    if a <= 81 then\n        return true\n    end\n\
    \    if a <= 127 then\n        return true\n    end\n    if a <= 255 then\n  \
    \      return true\n    end\n    if a <= 511 then\n        return true\n    end\n\
    \    if a <= 1025 then\n        return true\n    end\n    if a <= 2047 then\n\
    \        return true\n    end\n    if a <= 4095 and a > 1025 then\n        return\
    \ true\n    end\n    if a <= 8191 then\n        return true\n    end\n    if a\
    \ <= 16383 then\n        return true\n    end\n    if a <= 32767 then\n      \
    \  return true\n    end\n    if a <= 65535 then\n        return true\n    end\n\
    \    if a <= 131071 then\n        return true\n    end\n    if a <= 262143 then\n\
    \        return true\n    end\n    if a <= 524287 then\n        return true\n\
    \    end\n    if a <= 1048575 then\n        return true\n    end\n    if a <=\
    \ 2097151 then\n        return true\n    end\n    if a <= 4194303 then\n     \
    \   return true\n    end\n    if a <= 8388607 then\n        return true\n    end\n\
    \    if a <= 16777215 then\n        return true\n    end\n    if a <= 33554431\
    \ then\n        return true\n    end\n    if a <= 67108863 then\n        return\
    \ true\n    end\n    if a <= 134217727 then\n        return true\n    end\n  \
    \  if a <= 268435455 then\n        return true\n    end\n    if a <= 536870911\
    \ then\n        return true\n    end\n    if a <= 1073741823 then\n        return\
    \ true\n    end\n    if a <= 2147483647 then\n        return true\n    end\n \
    \   if a <= 4294967295 then\n        return true\n    end\n    if a <= 8589934591\
    \ then\n        return true\n    end\n    if a <= 17179869183 then\n        return\
    \ true\n    end\n    if a <= 34359738367 then\n        return true\n    end\n\
    \    if a <= 68719476735 then\n        return true\n    end\n    if a <= 13743895347\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpa3kj7tl7.lua:133: ''then'' expected near ''lu''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a <= 0 then\n        return false\n\
    \    end\n    if a > 180 then\n        return false\n    end\n    if a <= 1 then\n\
    \        return true\n    end\n    if a <= 3 then\n        return true\n    end\n\
    \    if a <= 5 then\n        return true\n    end\n    if a <= 7 then\n      \
    \  return true\n    end\n    if a <= 9 then\n        return true\n    end\n  \
    \  if a <= 11 then\n        return true\n    end\n    if a <= 13 then\n      \
    \  return true\n    end\n    if a <= 15 then\n        return true\n    end\n \
    \   if a <= 17 then\n        return true\n    end\n    if a <= 19 then\n     \
    \   return true\n    end\n    if a <= 21 then\n        return true\n    end\n\
    \    if a <= 23 then\n        return true\n    end\n    if a <= 25 then\n    \
    \    return true\n    end\n    if a <= 27 then\n        return true\n    end\n\
    \    if a <= 29 then\n        return true\n    end\n    if a <= 31 then\n    \
    \    return true\n    end\n    if a <= 33 then\n        return true\n    end\n\
    \    if a <= 35 then\n        return true\n    end\n    if a <= 37 then\n    \
    \    return true\n    end\n    if a <= 39 then\n        return true\n    end\n\
    \    if a <= 41 then\n        return true\n    end\n    if a <= 43 then\n    \
    \    return true\n    end\n    if a <= 45 then\n        return true\n    end\n\
    \    if a <= 47 then\n        return true\n    end\n    if a <= 49 then\n    \
    \    return true\n    end\n    if a <= 51 then\n        return true\n    end\n\
    \    if a <= 53 then\n        return true\n    end\n    if a <= 55 then\n    \
    \    return true\n    end\n    if a <= 57 then\n        return true\n    end\n\
    \    if a <= 59 then\n        return true\n    end\n    if a <= 61 then\n    \
    \    return true\n    end\n    if a <= 63 then\n        return true\n    end\n\
    \    if a <= 65 then\n        return true\n    end\n    if a <= 67 then\n    \
    \    return true\n    end\n    if a <= 69 then\n        return true\n    end\n\
    \    if a <= 71 then\n        return true\n    end\n    if a <= 73 then\n    \
    \    return true\n    end\n    if a <= 75 then\n        return true\n    end\n\
    \    if a <= 77 then\n        return true\n    end\n    if a <= 79 then\n    \
    \    return true\n    end\n    if a <= 81 then\n        return true\n    end\n\
    \    if a <= 83 then\n\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp9t689llp.lua:166: ''end'' expected (to close ''if'' at line
    150) near <eof>

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a%1 == 0 then\n    return false\n  else\n    return\
    \ iscube(a-1) or iscube(a-2)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn2_aqhd0.lua:30:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpn2_aqhd0.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a == 1 then\n        return true\n\
    \    end\n    if a == 2 then\n        return true\n    end\n    if a == 3 then\n\
    \        return true\n    end\n    if a == 4 then\n        return true\n    end\n\
    \    if a == 5 then\n        return true\n    end\n    if a == 6 then\n      \
    \  return true\n    end\n    if a == 7 then\n        return true\n    end\n  \
    \  if a == 8 then\n        return true\n    end\n    if a == 9 then\n        return\
    \ true\n    end\n    if a == 10 then\n        return true\n    end\n    if a ==\
    \ 11 then\n        return true\n    end\n    if a == 12 then\n        return true\n\
    \    end\n    if a == 13 then\n        return true\n    end\n    if a == 14 then\n\
    \        return true\n    end\n    if a == 15 then\n        return true\n    end\n\
    \    if a == 16 then\n        return true\n    end\n    if a == 17 then\n    \
    \    return true\n    end\n    if a == 18 then\n        return true\n    end\n\
    \    if a == 19 then\n        return true\n    end\n    if a == 20 then\n    \
    \    return true\n    end\n    if a == 21 then\n        return true\n    end\n\
    \    if a == 22 then\n        return true\n    end\n    if a == 23 then\n    \
    \    return true\n    end\n    if a == 24 then\n        return true\n    end\n\
    \    if a == 25 then\n        return true\n    end\n    if a == 26 then\n    \
    \    return true\n    end\n    if a == 27 then\n        return true\n    end\n\
    \    if a == 28 then\n        return true\n    end\n    if a == 29 then\n    \
    \    return true\n    end\n    if a == 30 then\n        return true\n    end\n\
    \    if a == 31 then\n        return true\n    end\n    if a == 32 then\n    \
    \    return true\n    end\n    if a == 33 then\n        return true\n    end\n\
    \    if a == 34 then\n        return true\n    end\n    if a == 35 then\n    \
    \    return true\n    end\n    if a == 36 then\n        return true\n    end\n\
    \    if a == 37 then\n        return true\n    end\n    if a == 38 then\n    \
    \    return true\n    end\n    if a == 39 then\n        return true\n    end\n\
    \    if a == 40 then\n        return true\n    end\n    if a == 41 then\n    \
    \    return true\n    end\n    if a == 42 then\n        return true\n    end\n\
    \    if a == 43 then\n        return true\n    end\n    if a == 44 then\n    \
    \    return true\n    end\n    if a == 45 then\n        return true\n    end\n\
    \    if a == 46 then\n        return true\n    end\n    if a == 47 then\n    \
    \    return true\n    end\n    if a == 48 then\n        return true\n    end\n\
    \    if a == 49 then\n        return true\n    end\n    if a == \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmps91f6xx8.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a > 0 then\n    if a % 2 == 0 then\n      if a % 3 ==\
    \ 0 then\n        if a % 5 == 0 then\n          return true\n        end\n   \
    \   end\n    end\n  end\n  return false\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpujew7ykj.lua:34:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpujew7ykj.lua:34:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a == 1 then\n        return true\n\
    \    end\n    if a == 2 then\n        return true\n    end\n    if a == 3 then\n\
    \        return true\n    end\n    if a == 4 then\n        return true\n    end\n\
    \    if a == 5 then\n        return true\n    end\n    if a == 6 then\n      \
    \  return true\n    end\n    if a == 7 then\n        return true\n    end\n  \
    \  if a == 8 then\n        return true\n    end\n    if a == 9 then\n        return\
    \ true\n    end\n    if a == 10 then\n        return true\n    end\n    if a ==\
    \ 11 then\n        return true\n    end\n    if a == 12 then\n        return true\n\
    \    end\n    if a == 13 then\n        return true\n    end\n    if a == 14 then\n\
    \        return true\n    end\n    if a == 15 then\n        return true\n    end\n\
    \    if a == 16 then\n        return true\n    end\n    if a == 17 then\n    \
    \    return true\n    end\n    if a == 18 then\n        return true\n    end\n\
    \    if a == 19 then\n        return true\n    end\n    if a == 20 then\n    \
    \    return true\n    end\n    if a == 21 then\n        return true\n    end\n\
    \    if a == 22 then\n        return true\n    end\n    if a == 23 then\n    \
    \    return true\n    end\n    if a == 24 then\n        return true\n    end\n\
    \    if a == 25 then\n        return true\n    end\n    if a == 26 then\n    \
    \    return true\n    end\n    if a == 27 then\n        return true\n    end\n\
    \    if a == 28 then\n        return true\n    end\n    if a == 29 then\n    \
    \    return true\n    end\n    if a == 30 then\n        return true\n    end\n\
    \    if a == 31 then\n        return true\n    end\n    if a == 32 then\n    \
    \    return true\n    end\n    if a == 33 then\n        return true\n    end\n\
    \    if a == 34 then\n        return true\n    end\n    if a == 35 then\n    \
    \    return true\n    end\n    if a == 36 then\n        return true\n    end\n\
    \    if a == 37 then\n        return true\n    end\n    if a == 38 then\n    \
    \    return true\n    end\n    if a == 39 then\n        return true\n    end\n\
    \    if a == 40 then\n        return true\n    end\n    if a == 41 then\n    \
    \    return true\n    end\n    if a == 42 then\n        return true\n    end\n\
    \    if a == 43 then\n        return true\n    end\n    if a == 44 then\n    \
    \    return true\n    end\n    if a == 45 then\n        return true\n    end\n\
    \    if a == 46 then\n        return true\n    end\n    if a == 47 then\n    \
    \    return true\n    end\n    if a == 48 then\n        return true\n    end\n\
    \    if a == 49 then\n        return true\n    end\n    if a == \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmps91f6xx8.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a < 0 then\n        return false\n\
    \    end\n    if a > 180 then\n        return false\n    end\n    if a <= 1 then\n\
    \        return true\n    end\n    if a <= 3 then\n        return true\n    end\n\
    \    if a <= 9 then\n        return true\n    end\n    if a <= 27 then\n     \
    \   return true\n    end\n    if a <= 81 then\n        return true\n    end\n\
    \    if a <= 127 then\n        return true\n    end\n    if a <= 255 then\n  \
    \      return true\n    end\n    if a <= 511 then\n        return true\n    end\n\
    \    if a <= 1025 then\n        return true\n    end\n    if a <= 2047 then\n\
    \        return true\n    end\n    if a <= 4095 then\n        return true\n  \
    \  end\n    if a <= 8191 then\n        return true\n    end\n    if a <= 16383\
    \ then\n        return true\n    end\n    if a <= 32767 then\n        return true\n\
    \    end\n    if a <= 65535 then\n        return true\n    end\n    if a <= 131071\
    \ then\n        return true\n    end\n    if a <= 262143 then\n        return\
    \ true\n    end\n    if a <= 524287 then\n        return true\n    end\n    if\
    \ a <= 1048575 then\n        return true\n    end\n    if a <= 2097151 then\n\
    \        return true\n    end\n    if a <= 4194303 then\n        return true\n\
    \    end\n    if a <= 8388607 then\n        return true\n    end\n    if a <=\
    \ 16777215 then\n        return true\n    end\n    if a <= 33554431 then\n   \
    \     return true\n    end\n    if a <= 67108863 then\n        return true\n \
    \   end\n    if a <= 134217727 then\n        return true\n    end\n    if a <=\
    \ 268435455 then\n        return true\n    end\n    if a <= 536870911 then\n \
    \       return true\n    end\n    if a <= 1073741823 then\n        return true\n\
    \    end\n    if a <= 2147483647 then\n        return true\n    end\n    if a\
    \ <= 4294967295 then\n        return true\n    end\n    if a <= 8589934591 then\n\
    \        return true\n    end\n    if a <= 17179869183 then\n        return true\n\
    \    end\n    if a <= 34359738367 then\n        return true\n    end\n    if a\
    \ <= 68719476735 then\n        return true\n    end\n    if a <= 137438953473\
    \ then\n        return true\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpru4cbwtk.lua:134: ''end'' expected (to close ''if'' at line
    132) near ''lu''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a == 1 then\n        return true\n\
    \    end\n    if a == 2 then\n        return true\n    end\n    if a == 3 then\n\
    \        return true\n    end\n    if a == 4 then\n        return true\n    end\n\
    \    if a == 5 then\n        return true\n    end\n    if a == 6 then\n      \
    \  return true\n    end\n    if a == 7 then\n        return true\n    end\n  \
    \  if a == 8 then\n        return true\n    end\n    if a == 9 then\n        return\
    \ true\n    end\n    if a == 10 then\n        return true\n    end\n    if a ==\
    \ 11 then\n        return true\n    end\n    if a == 12 then\n        return true\n\
    \    end\n    if a == 13 then\n        return true\n    end\n    if a == 14 then\n\
    \        return true\n    end\n    if a == 15 then\n        return true\n    end\n\
    \    if a == 16 then\n        return true\n    end\n    if a == 17 then\n    \
    \    return true\n    end\n    if a == 18 then\n        return true\n    end\n\
    \    if a == 19 then\n        return true\n    end\n    if a == 20 then\n    \
    \    return true\n    end\n    if a == 21 then\n        return true\n    end\n\
    \    if a == 22 then\n        return true\n    end\n    if a == 23 then\n    \
    \    return true\n    end\n    if a == 24 then\n        return true\n    end\n\
    \    if a == 25 then\n        return true\n    end\n    if a == 26 then\n    \
    \    return true\n    end\n    if a == 27 then\n        return true\n    end\n\
    \    if a == 28 then\n        return true\n    end\n    if a == 29 then\n    \
    \    return true\n    end\n    if a == 30 then\n        return true\n    end\n\
    \    if a == 31 then\n        return true\n    end\n    if a == 32 then\n    \
    \    return true\n    end\n    if a == 33 then\n        return true\n    end\n\
    \    if a == 34 then\n        return true\n    end\n    if a == 35 then\n    \
    \    return true\n    end\n    if a == 36 then\n        return true\n    end\n\
    \    if a == 37 then\n        return true\n    end\n    if a == 38 then\n    \
    \    return true\n    end\n    if a == 39 then\n        return true\n    end\n\
    \    if a == 40 then\n        return true\n    end\n    if a == 41 then\n    \
    \    return true\n    end\n    if a == 42 then\n        return true\n    end\n\
    \    if a == 43 then\n        return true\n    end\n    if a == 44 then\n    \
    \    return true\n    end\n    if a == 45 then\n        return true\n    end\n\
    \    if a == 46 then\n        return true\n    end\n    if a == 47 then\n    \
    \    return true\n    end\n    if a == 48 then\n        return true\n    end\n\
    \    if a == 49 then\n        return true\n    end\n    if a == \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmps91f6xx8.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmppefjperv.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return false end\n  if a == 1 then return true end\n  if a == 2 then return\
    \ true end\n  if a == 3 then return true end\n  if a == 4 then return true end\n\
    \  if a == 5 then return true end\n  if a == 6 then return true end\n  if a ==\
    \ 7 then return true end\n  if a == 8 then return true end\n  if a == 9 then return\
    \ true end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpeb49dkpq.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a < 0 then\
    \ return false end\n  if a == 0 then return true end\n  if a > 0 then\n    local\
    \ b = a\n    local c = a\n    while c > 0 do\n      b = b * c\n      c = c - 1\n\
    \    end\n    return b == a\n  end\n  return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpruwbyew_.lua:37:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpruwbyew_.lua:37:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp3wa21ypl.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 and a < 9 then\n        return\
    \ true\n    end\n    if a > 9 and a < 16 then\n        return true\n    end\n\
    \    if a > 16 and a < 25 then\n        return true\n    end\n    if a > 25 and\
    \ a < 36 then\n        return true\n    end\n    if a > 36 and a < 49 then\n \
    \       return true\n    end\n    if a > 49 and a < 64 then\n        return true\n\
    \    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgxjhrco8.lua:46:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpgxjhrco8.lua:46:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 then\n        return iscube(a-1)\
    \ and iscube(a-1*a) and iscube(a-1*a*a)\n    else\n        return false\n    end\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7b8o4ego.lua:33:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp7b8o4ego.lua:33:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmppefjperv.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a%1 == 0 then\n    return false\n  else\n    return\
    \ iscube(a-1) or iscube(a-1)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn7nduge9.lua:30:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpn7nduge9.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a < 0 then\n        return false\n\
    \    end\n    if a > 180 then\n        return false\n    end\n    if a <= 1 then\n\
    \        return true\n    end\n    if a <= 3 then\n        return true\n    end\n\
    \    if a <= 9 then\n        return true\n    end\n    if a <= 27 then\n     \
    \   return true\n    end\n    if a <= 81 then\n        return true\n    end\n\
    \    if a <= 127 then\n        return true\n    end\n    if a <= 255 then\n  \
    \      return true\n    end\n    if a <= 511 then\n        return true\n    end\n\
    \    if a <= 1025 then\n        return true\n    end\n    if a <= 2049 then\n\
    \        return true\n    end\n    if a <= 4095 then\n        return true\n  \
    \  end\n    if a <= 8191 then\n        return true\n    end\n    if a <= 16383\
    \ then\n        return true\n    end\n    if a <= 32767 then\n        return true\n\
    \    end\n    if a <= 65535 then\n        return true\n    end\n    if a <= 131071\
    \ then\n        return true\n    end\n    if a <= 262143 then\n        return\
    \ true\n    end\n    if a <= 524287 then\n        return true\n    end\n    if\
    \ a <= 1048575 then\n        return true\n    end\n    if a <= 2097151 then\n\
    \        return true\n    end\n    if a <= 4194303 then\n        return true\n\
    \    end\n    if a <= 8388607 then\n        return true\n    end\n    if a <=\
    \ 16777215 then\n        return true\n    end\n    if a <= 33554431 then\n   \
    \     return true\n    end\n    if a <= 67108863 then\n        return true\n \
    \   end\n    if a <= 134217727 then\n        return true\n    end\n    if a <=\
    \ 268435455 then\n        return true\n    end\n    if a <= 536870911 then\n \
    \       return true\n    end\n    if a <= 1073741823 then\n        return true\n\
    \    end\n    if a <= 2147483647 then\n        return true\n    end\n    if a\
    \ <= 4294967295 then\n        return true\n    end\n    if a <= 8589934591 then\n\
    \        return true\n    end\n    if a <= 17179869183 then\n        return true\n\
    \    end\n    if a <= 34359738367 then\n        return true\n    end\n    if a\
    \ <= 68719476735 then\n        return true\n    end\n    if a <= 137438953473\
    \ then\n        return true\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpiosy227l.lua:134: ''end'' expected (to close ''if'' at line
    132) near ''lu''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a < 0 then\n        return false\n\
    \    end\n    if a > 180 then\n        return false\n    end\n    if a <= 1 then\n\
    \        return true\n    end\n    if a <= 3 then\n        return true\n    end\n\
    \    if a <= 9 then\n        return true\n    end\n    if a <= 27 then\n     \
    \   return true\n    end\n    if a <= 81 then\n        return true\n    end\n\
    \    if a <= 181 then\n        return true\n    end\n    if a <= 361 then\n  \
    \      return true\n    end\n    if a <= 729 then\n        return true\n    end\n\
    \    if a <= 1429 then\n        return true\n    end\n    if a <= 2879 then\n\
    \        return true\n    end\n    if a <= 5729 then\n        return true\n  \
    \  end\n    if a <= 10289 then\n        return true\n    end\n    if a <= 15289\
    \ then\n        return true\n    end\n    if a <= 20389 then\n        return true\n\
    \    end\n    if a <= 30791 then\n        return true\n    end\n    if a <= 40289\
    \ then\n        return true\n    end\n    if a <= 50389 then\n        return true\n\
    \    end\n    if a <= 60791 then\n        return true\n    end\n    if a <= 70289\
    \ then\n        return true\n    end\n    if a <= 80389 then\n        return true\n\
    \    end\n    if a <= 90791 then\n        return true\n    end\n    if a <= 100289\
    \ then\n        return true\n    end\n    if a <= 110389 then\n        return\
    \ true\n    end\n    if a <= 120791 then\n        return true\n    end\n    if\
    \ a <= 130289 then\n        return true\n    end\n    if a <= 140391 then\n  \
    \      return true\n    end\n    if a <= 150791 then\n        return true\n  \
    \  end\n    if a <= 160391 then\n        return true\n    end\n    if a <= 170791\
    \ then\n        return true\n    end\n    if a <= 180391 then\n        return\
    \ true\n    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiixk_8tn.lua:124:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpiixk_8tn.lua:124:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp3wa21ypl.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a < 0\
    \ then\n        return false\n    end\n    if a == 0 then\n        return true\n\
    \    end\n    if a > 0 then\n        return a % 3 == 0 and iscube(math.floor(a/3))\n\
    \    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6zaq2idh.lua:33:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp6zaq2idh.lua:33:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a == 1 then\n        return true\n\
    \    end\n    if a == 2 then\n        return true\n    end\n    if a == 3 then\n\
    \        return true\n    end\n    if a == 4 then\n        return true\n    end\n\
    \    if a == 5 then\n        return true\n    end\n    if a == 6 then\n      \
    \  return true\n    end\n    if a == 7 then\n        return true\n    end\n  \
    \  if a == 8 then\n        return true\n    end\n    if a == 9 then\n        return\
    \ true\n    end\n    if a == 10 then\n        return true\n    end\n    if a ==\
    \ 11 then\n        return true\n    end\n    if a == 12 then\n        return true\n\
    \    end\n    if a == 13 then\n        return true\n    end\n    if a == 14 then\n\
    \        return true\n    end\n    if a == 15 then\n        return true\n    end\n\
    \    if a == 16 then\n        return true\n    end\n    if a == 17 then\n    \
    \    return true\n    end\n    if a == 18 then\n        return true\n    end\n\
    \    if a == 19 then\n        return true\n    end\n    if a == 20 then\n    \
    \    return true\n    end\n    if a == 21 then\n        return true\n    end\n\
    \    if a == 22 then\n        return true\n    end\n    if a == 23 then\n    \
    \    return true\n    end\n    if a == 24 then\n        return true\n    end\n\
    \    if a == 25 then\n        return true\n    end\n    if a == 26 then\n    \
    \    return true\n    end\n    if a == 27 then\n        return true\n    end\n\
    \    if a == 28 then\n        return true\n    end\n    if a == 29 then\n    \
    \    return true\n    end\n    if a == 30 then\n        return true\n    end\n\
    \    if a == 31 then\n        return true\n    end\n    if a == 32 then\n    \
    \    return true\n    end\n    if a == 33 then\n        return true\n    end\n\
    \    if a == 34 then\n        return true\n    end\n    if a == 35 then\n    \
    \    return true\n    end\n    if a == 36 then\n        return true\n    end\n\
    \    if a == 37 then\n        return true\n    end\n    if a == 38 then\n    \
    \    return true\n    end\n    if a == 39 then\n        return true\n    end\n\
    \    if a == 40 then\n        return true\n    end\n    if a == 41 then\n    \
    \    return true\n    end\n    if a == 42 then\n        return true\n    end\n\
    \    if a == 43 then\n        return true\n    end\n    if a == 44 then\n    \
    \    return true\n    end\n    if a == 45 then\n        return true\n    end\n\
    \    if a == 46 then\n        return true\n    end\n    if a == 47 then\n    \
    \    return true\n    end\n    if a == 48 then\n        return true\n    end\n\
    \    if a == 49 then\n        return true\n    end\n    if a == \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmps91f6xx8.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\tif a == 0 then\n\
    \t\treturn true\n\telseif a == 1 then\n\t\treturn true\n\telseif a == 2 then\n\
    \t\treturn true\n\telseif a == 3 then\n\t\treturn true\n\telseif a == 4 then\n\
    \t\treturn true\n\telseif a == 5 then\n\t\treturn true\n\telseif a == 6 then\n\
    \t\treturn true\n\telseif a == 7 then\n\t\treturn true\n\telseif a == 8 then\n\
    \t\treturn true\n\telseif a == 9 then\n\t\treturn true\n\telseif a == 10 then\n\
    \t\treturn true\n\telseif a == 11 then\n\t\treturn true\n\telseif a == 12 then\n\
    \t\treturn true\n\telseif a == 13 then\n\t\treturn true\n\telseif a == 14 then\n\
    \t\treturn true\n\telseif a == 15 then\n\t\treturn true\n\telseif a == 16 then\n\
    \t\treturn true\n\telseif a == 17 then\n\t\treturn true\n\telseif a == 18 then\n\
    \t\treturn true\n\telseif a == 19 then\n\t\treturn true\n\telseif a == 20 then\n\
    \t\treturn true\n\telseif a == 21 then\n\t\treturn true\n\telseif a == 22 then\n\
    \t\treturn true\n\telseif a == 23 then\n\t\treturn true\n\telseif a == 24 then\n\
    \t\treturn true\n\telseif a == 25 then\n\t\treturn true\n\telseif a == 26 then\n\
    \t\treturn true\n\telseif a == 27 then\n\t\treturn true\n\telseif a == 28 then\n\
    \t\treturn true\n\telseif a == 29 then\n\t\treturn true\n\telseif a == 30 then\n\
    \t\treturn true\n\telseif a == 31 then\n\t\treturn true\n\telseif a == 32 then\n\
    \t\treturn true\n\telseif a == 33 then\n\t\treturn true\n\telseif a == 34 then\n\
    \t\treturn true\n\telseif a == 35 then\n\t\treturn true\n\telseif a == 36 then\n\
    \t\treturn true\n\telseif a == 37 then\n\t\treturn true\n\telseif a == 38 then\n\
    \t\treturn true\n\telseif a == 39 then\n\t\treturn true\n\telseif a == 40 then\n\
    \t\treturn true\n\telseif a == 41 then\n\t\treturn true\n\telseif a == 42 then\n\
    \t\treturn true\n\telseif a == 43 then\n\t\treturn true\n\telseif a == 44 then\n\
    \t\treturn true\n\telseif a == 45 then\n\t\treturn true\n\telseif a == 46 then\n\
    \t\treturn true\n\telseif a == 47 then\n\t\treturn true\n\telseif a == 48 then\n\
    \t\treturn true\n\telseif a == 49 then\n\t\treturn true\n\telseif a == \nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmppn63ugc2.lua:119: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a < 0 then\n        return false\n\
    \    end\n    if a > 180 then\n        return false\n    end\n    if a <= 1 then\n\
    \        return true\n    end\n    if a <= 3 then\n        return true\n    end\n\
    \    if a <= 9 then\n        return true\n    end\n    if a <= 27 then\n     \
    \   return true\n    end\n    if a <= 81 then\n        return true\n    end\n\
    \    if a <= 127 then\n        return true\n    end\n    if a <= 255 then\n  \
    \      return true\n    end\n    if a <= 511 then\n        return true\n    end\n\
    \    if a <= 1025 then\n        return true\n    end\n    if a <= 2047 then\n\
    \        return true\n    end\n    if a <= 4095 then\n        return true\n  \
    \  end\n    if a <= 8191 then\n        return true\n    end\n    if a <= 16383\
    \ then\n        return true\n    end\n    if a <= 32767 then\n        return true\n\
    \    end\n    if a <= 65535 then\n        return true\n    end\n    if a <= 131071\
    \ then\n        return true\n    end\n    if a <= 262143 then\n        return\
    \ true\n    end\n    if a <= 524287 then\n        return true\n    end\n    if\
    \ a <= 1048575 then\n        return true\n    end\n    if a <= 2097151 then\n\
    \        return true\n    end\n    if a <= 4194303 then\n        return true\n\
    \    end\n    if a <= 8388607 then\n        return true\n    end\n    if a <=\
    \ 16777215 then\n        return true\n    end\n    if a <= 33554431 then\n   \
    \     return true\n    end\n    if a <= 67108863 then\n        return true\n \
    \   end\n    if a <= 134217727 then\n        return true\n    end\n    if a <=\
    \ 268435455 then\n        return true\n    end\n    if a <= 536870911 then\n \
    \       return true\n    end\n    if a <= 1073741823 then\n        return true\n\
    \    end\n    if a <= 2147483647 then\n        return true\n    end\n    if a\
    \ <= 4294967295 then\n        return true\n    end\n    if a <= 8589934591 then\n\
    \        return true\n    end\n    if a <= 17179869183 then\n        return true\n\
    \    end\n    if a <= 34359738367 then\n        return true\n    end\n    if a\
    \ <= 68719476735 then\n        return true\n    end\n    if a <= 137438953473\
    \ then\n        return true\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpru4cbwtk.lua:134: ''end'' expected (to close ''if'' at line
    132) near ''lu''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a > 0 then\n    if a % 2 == 0 then\n      if a % 3 ==\
    \ 0 then\n        if a % 5 == 0 then\n          return true\n        end\n   \
    \   end\n    end\n  end\n  return false\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpujew7ykj.lua:34:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpujew7ykj.lua:34:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a < 0 then\n        return false\n\
    \    end\n    if a > 180 then\n        return false\n    end\n    if a % 180 ~=\
    \ 0 then\n        return false\n    end\n    if a % 180 == 0 then\n        return\
    \ true\n    end\n    if a % 180 == 180 then\n        return true\n    end\n  \
    \  if a % 180 == 270 then\n        return true\n    end\n    if a % 180 == 180\
    \ then\n        return true\n    end\n    if a % 180 == 270 then\n        return\
    \ true\n    end\n    if a % 180 == 180 then\n        return true\n    end\n  \
    \  if a % 180 == 270 then\n        return true\n    end\n    if a % 180 == 180\
    \ then\n        return true\n    end\n    if a % 180 == 270 then\n        return\
    \ true\n    end\n    if a % 180 == 180 then\n        return true\n    end\n  \
    \  if a % 180 == 270 then\n        return true\n    end\n    if a % 180 == 180\
    \ then\n        return true\n    end\n    if a % 180 == 270 then\n        return\
    \ true\n    end\n    if a % 180 == 180 then\n        return true\n    end\n  \
    \  if a % 180 == 270 then\n        return true\n    end\n    if a % 180 == 180\
    \ then\n        return true\n    end\n    if a % 180 == 270 then\n        return\
    \ true\n    end\n    if a % 180 == 180 then\n        return true\n    end\n  \
    \  if a % 180 == 270 then\n        return true\n    end\n    if a % 180 == 180\
    \ then\n        return true\n    end\n    if a % 180 == 270 then\n        return\
    \ true\n    end\n    if a % 180 == 180 then\n        return true\n    end\n  \
    \  if a % 180 == 270 then\n        return true\n    end\n    if a % 180 == 180\
    \ then\n        return true\n    end\n    if a % 180 == 270 then\n        return\
    \ true\n    end\n    if a % 180 == 180 then\n        return true\n    end\n  \
    \  if a % 180 == 270 then\n        return true\n    end\n    if a % 180 == 180\
    \ then\n        return true\n    end\n    if a % 180 == 270 then\n        return\
    \ true\n    end\n    if a % 180 == 180 then\n        return true\n    end\n  \
    \  if a % 180 == 270 then\n        return true\n    end\n    if a % 180 == 180\
    \ then\n        return true\n    end\n    if a % 180 == 270 then\n        return\
    \ true\n    end\n    if a % \nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpjdroam_v.lua:130: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 and a <= 9 then\n        return\
    \ true\n    end\n    if a > 9 and a <= 99 then\n        return true\n    end\n\
    \    if a > 99 and a <= 999 then\n        return true\n    end\n    if a > 999\
    \ and a <= 9999 then\n        return true\n    end\n    if a > 9999 and a <= 99999\
    \ then\n        return true\n    end\n    if a > 99999 and a <= 999999 then\n\
    \        return true\n    end\n    if a > 999999 and a <= 9999999 then\n     \
    \   return true\n    end\n    if a > 9999999 and a <= 999999999 then\n       \
    \ return true\n    end\n    if a > 999999999 and a <= 99999999999 then\n     \
    \   return true\n    end\n    if a > 99999999999 and a <= 9999999999999 then\n\
    \        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999 and a <= 9999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999 and a <= 9999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999 and a <= 9999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999 and a <= 9999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999 and a <= 9999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999 and a <= 9999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999 and a <= 9999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999 and a <= 9999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpag6b7zdk.lua:100: ''then'' expected near ''lu''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\tlocal b = 0\n\
    \tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0\n\tlocal g = 0\n\t\
    local h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal l = 0\n\tlocal\
    \ m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal q = 0\n\tlocal r\
    \ = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v = 0\n\tlocal w =\
    \ 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal A = 0\n\tlocal B = 0\n\
    \tlocal C = 0\n\tlocal D = 0\n\tlocal E = 0\n\tlocal F = 0\n\tlocal G = 0\n\t\
    local H = 0\n\tlocal I = 0\n\tlocal J = 0\n\tlocal K = 0\n\tlocal L = 0\n\tlocal\
    \ M = 0\n\tlocal N = 0\n\tlocal O = 0\n\tlocal P = 0\n\tlocal Q = 0\n\tlocal R\
    \ = 0\n\tlocal S = 0\n\tlocal T = 0\n\tlocal U = 0\n\tlocal V = 0\n\tlocal W =\
    \ 0\n\tlocal X = 0\n\tlocal Y = 0\n\tlocal Z = 0\n\tlocal AA = 0\n\tlocal AB =\
    \ 0\n\tlocal AC = 0\n\tlocal AD = 0\n\tlocal AE = 0\n\tlocal AF = 0\n\tlocal AG\
    \ = 0\n\tlocal AH = 0\n\tlocal AI = 0\n\tlocal AJ = 0\n\tlocal AK = 0\n\tlocal\
    \ AL = 0\n\tlocal AM = 0\n\tlocal AN = 0\n\tlocal AO = 0\n\tlocal AP = 0\n\tlocal\
    \ AQ = 0\n\tlocal AR = 0\n\tlocal AS = 0\n\tlocal AT = 0\n\tlocal AU = 0\n\tlocal\
    \ AV = 0\n\tlocal AW = 0\n\tlocal AX = 0\n\tlocal AY = 0\n\tlocal AZ = 0\n\tlocal\
    \ AA = 0\n\tlocal AB = 0\n\tlocal AC = 0\n\tlocal AD = 0\n\tlocal AE = 0\n\tlocal\
    \ AF = 0\n\tlocal AG = 0\n\tlocal AH = 0\n\tlocal AI = 0\n\tlocal AJ = 0\n\tlocal\
    \ AK = 0\n\tlocal AL = 0\n\tlocal AM = 0\n\tlocal AN = 0\n\tlocal AO = 0\n\tlocal\
    \ AP = 0\n\tlocal AQ = 0\n\tlocal AR = 0\n\tlocal AS = 0\n\tlocal AT = 0\n\tlocal\
    \ AU = 0\n\tlocal AV = 0\n\tlocal AW = 0\n\tlocal AX = 0\n\tlocal AY = 0\n\tlocal\
    \ \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp2zsmk00s.lua:135: ''end'' expected (to close ''function''
    at line 17) near <eof>

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a%1 == 0 then\n    return false\n  else\n    return\
    \ iscube(a-1)\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnw07xhho.lua:30:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpnw07xhho.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmppefjperv.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 then\n        return iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1) and iscube(a-1)\
    \ and iscube(a-1) and iscube(a-1) and iscube(a-1) and \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpks1w43jm.lua:23: ''end'' expected (to close ''if'' at line
    21) near ''=''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a < 0\
    \ then\n        return false\n    end\n    if a == 0 then\n        return true\n\
    \    end\n    if a > 0 then\n        return true\n    end\n    if a < 1 then\n\
    \        return false\n    end\n    if a < 2 then\n        return true\n    end\n\
    \    if a < 3 then\n        return true\n    end\n    if a < 4 then\n        return\
    \ true\n    end\n    if a < 5 then\n        return true\n    end\n    if a < 6\
    \ then\n        return true\n    end\n    if a < 7 then\n        return true\n\
    \    end\n    if a < 8 then\n        return true\n    end\n    if a < 9 then\n\
    \        return true\n    end\n    if a < 10 then\n        return true\n    end\n\
    \    if a < 11 then\n        return true\n    end\n    if a < 12 then\n      \
    \  return true\n    end\n    if a < 13 then\n        return true\n    end\n  \
    \  if a < 14 then\n        return true\n    end\n    if a < 15 then\n        return\
    \ true\n    end\n    if a < 16 then\n        return true\n    end\n    if a <\
    \ 17 then\n        return true\n    end\n    if a < 18 then\n        return true\n\
    \    end\n    if a < 19 then\n        return true\n    end\n    if a < 20 then\n\
    \        return true\n    end\n    if a < 21 then\n        return true\n    end\n\
    \    if a < 22 then\n        return true\n    end\n    if a < 23 then\n      \
    \  return true\n    end\n    if a < 24 then\n        return true\n    end\n  \
    \  if a < 25 then\n        return true\n    end\n    if a < 26 then\n        return\
    \ true\n    end\n    if a < 27 then\n        return true\n    end\n    if a <\
    \ 28 then\n        return true\n    end\n    if a < 29 then\n        return true\n\
    \    end\n    if a < 30 then\n        return true\n    end\n    if a < 31 then\n\
    \        return true\n    end\n    if a < 32 then\n        return true\n    end\n\
    \    if a < 33 then\n        return true\n    end\n    if a < 34 then\n      \
    \  return true\n    end\n    if a < 35 then\n        return true\n    end\n  \
    \  if a < 36 then\n        return true\n    end\n    if a < 37 then\n        return\
    \ true\n    end\n    if a < 38 then\n        return true\n    end\n    if a <\
    \ 39 then\n        return true\n    end\n    if a < 40 then\n        return true\n\
    \    end\n    if a < 41 then\n        return true\n    end\n    if a < 42 then\n\
    \        return true\n    end\n    if a < 43 then\n        return true\n    end\n\
    \    if \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmptbcgyvu3.lua:157: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a == 1 then\n        return true\n\
    \    end\n    if a == 2 then\n        return true\n    end\n    if a == 3 then\n\
    \        return true\n    end\n    if a == 4 then\n        return true\n    end\n\
    \    if a == 5 then\n        return true\n    end\n    if a == 6 then\n      \
    \  return true\n    end\n    if a == 7 then\n        return true\n    end\n  \
    \  if a == 8 then\n        return true\n    end\n    if a == 9 then\n        return\
    \ true\n    end\n    if a == 10 then\n        return true\n    end\n    if a ==\
    \ 11 then\n        return true\n    end\n    if a == 12 then\n        return true\n\
    \    end\n    if a == 13 then\n        return true\n    end\n    if a == 14 then\n\
    \        return true\n    end\n    if a == 15 then\n        return true\n    end\n\
    \    if a == 16 then\n        return true\n    end\n    if a == 17 then\n    \
    \    return true\n    end\n    if a == 18 then\n        return true\n    end\n\
    \    if a == 19 then\n        return true\n    end\n    if a == 20 then\n    \
    \    return true\n    end\n    if a == 21 then\n        return true\n    end\n\
    \    if a == 22 then\n        return true\n    end\n    if a == 23 then\n    \
    \    return true\n    end\n    if a == 24 then\n        return true\n    end\n\
    \    if a == 25 then\n        return true\n    end\n    if a == 26 then\n    \
    \    return true\n    end\n    if a == 27 then\n        return true\n    end\n\
    \    if a == 28 then\n        return true\n    end\n    if a == 29 then\n    \
    \    return true\n    end\n    if a == 30 then\n        return true\n    end\n\
    \    if a == 31 then\n        return true\n    end\n    if a == 32 then\n    \
    \    return true\n    end\n    if a == 33 then\n        return true\n    end\n\
    \    if a == 34 then\n        return true\n    end\n    if a == 35 then\n    \
    \    return true\n    end\n    if a == 36 then\n        return true\n    end\n\
    \    if a == 37 then\n        return true\n    end\n    if a == 38 then\n    \
    \    return true\n    end\n    if a == 39 then\n        return true\n    end\n\
    \    if a == 40 then\n        return true\n    end\n    if a == 41 then\n    \
    \    return true\n    end\n    if a == 42 then\n        return true\n    end\n\
    \    if a == 43 then\n        return true\n    end\n    if a == 44 then\n    \
    \    return true\n    end\n    if a == 45 then\n        return true\n    end\n\
    \    if a == 46 then\n        return true\n    end\n    if a == 47 then\n    \
    \    return true\n    end\n    if a == 48 then\n        return true\n    end\n\
    \    if a == 49 then\n        return true\n    end\n    if a == \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmps91f6xx8.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a < 0 then\
    \ return false end\n  if a == 0 then return true end\n  if a > 0 then\n    if\
    \ a % 3 == 0 then\n      if a % 5 == 0 then\n        if a % 7 == 0 then\n    \
    \      return true\n        end\n      end\n    end\n  end\n  return false\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpukrlz7mw.lua:35:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpukrlz7mw.lua:35:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 and a <= 180 then\n       \
    \ return true\n    end\n    return false\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzp6t0oy3.lua:31:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpzp6t0oy3.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp3wa21ypl.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a < 0 then\n        return false\n\
    \    end\n    if a > 180 then\n        return false\n    end\n    if a % 180 ~=\
    \ 0 then\n        return false\n    end\n    if a % 180 == 0 then\n        return\
    \ true\n    end\n    if a % 180 == 180 then\n        return true\n    end\n  \
    \  if a % 180 == 270 then\n        return true\n    end\n    if a % 180 == 180\
    \ then\n        return true\n    end\n    if a % 180 == 270 then\n        return\
    \ true\n    end\n    if a % 180 == 180 then\n        return true\n    end\n  \
    \  if a % 180 == 270 then\n        return true\n    end\n    if a % 180 == 180\
    \ then\n        return true\n    end\n    if a % 180 == 270 then\n        return\
    \ true\n    end\n    if a % 180 == 180 then\n        return true\n    end\n  \
    \  if a % 180 == 270 then\n        return true\n    end\n    if a % 180 == 180\
    \ then\n        return true\n    end\n    if a % 180 == 270 then\n        return\
    \ true\n    end\n    if a % 180 == 180 then\n        return true\n    end\n  \
    \  if a % 180 == 270 then\n        return true\n    end\n    if a % 180 == 180\
    \ then\n        return true\n    end\n    if a % 180 == 270 then\n        return\
    \ true\n    end\n    if a % 180 == 180 then\n        return true\n    end\n  \
    \  if a % 180 == 270 then\n        return true\n    end\n    if a % 180 == 180\
    \ then\n        return true\n    end\n    if a % 180 == 270 then\n        return\
    \ true\n    end\n    if a % 180 == 180 then\n        return true\n    end\n  \
    \  if a % 180 == 270 then\n        return true\n    end\n    if a % 180 == 180\
    \ then\n        return true\n    end\n    if a % 180 == 270 then\n        return\
    \ true\n    end\n    if a % 180 == 180 then\n        return true\n    end\n  \
    \  if a % 180 == 270 then\n        return true\n    end\n    if a % 180 == 180\
    \ then\n        return true\n    end\n    if a % 180 == 270 then\n        return\
    \ true\n    end\n    if a % 180 == 180 then\n        return true\n    end\n  \
    \  if a % 180 == 270 then\n        return true\n    end\n    if a % 180 == 180\
    \ then\n        return true\n    end\n    if a % 180 == 270 then\n        return\
    \ true\n    end\n    if a % \nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpjdroam_v.lua:130: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a > 0 then\n    if a % 3 == 0 and a % 5 == 0 then return\
    \ true end\n    if a % 3 == 0 and a % 5 == 1 or a % 3 == 1 and a % 5 == 1 then\
    \ return true end\n    if a % 3 == 1 and a % 5 == 0 then return true end\n   \
    \ if a % 3 == 1 and a % 5 == 1 then return true end\n  end\n  return false\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpairmvs_i.lua:33:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpairmvs_i.lua:33:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 then\n        return false\n\
    \    end\n    if a < 0 then\n        return true\n    end\n    if a <= 1 then\n\
    \        return true\n    end\n    if a % 2 == 0 then\n        return false\n\
    \    end\n    if a % 3 == 0 then\n        return true\n    end\n    if a % 4 ==\
    \ 0 then\n        return false\n    end\n    if a % 5 == 0 then\n        return\
    \ true\n    end\n    if a % 6 == 0 then\n        return false\n    end\n    if\
    \ a % 7 == 0 then\n        return true\n    end\n    if a % 8 == 0 then\n    \
    \    return false\n    end\n    if a % 9 == 0 then\n        return true\n    end\n\
    \    if a % 10 == 0 then\n        return false\n    end\n    if a % 11 == 0 then\n\
    \        return true\n    end\n    if a % 12 == 0 then\n        return false\n\
    \    end\n    if a % 13 == 0 then\n        return true\n    end\n    if a % 14\
    \ == 0 then\n        return false\n    end\n    if a % 15 == 0 then\n        return\
    \ true\n    end\n    if a % 16 == 0 then\n        return false\n    end\n    if\
    \ a % 17 == 0 then\n        return true\n    end\n    if a % 18 == 0 then\n  \
    \      return false\n    end\n    if a % 19 == 0 then\n        return true\n \
    \   end\n    if a % 20 == 0 then\n        return false\n    end\n    if a % 21\
    \ == 0 then\n        return true\n    end\n    if a % 22 == 0 then\n        return\
    \ false\n    end\n    if a % 23 == 0 then\n        return true\n    end\n    if\
    \ a % 24 == 0 then\n        return false\n    end\n    if a % 25 == 0 then\n \
    \       return true\n    end\n    if a % 26 == 0 then\n        return false\n\
    \    end\n    if a % 27 == 0 then\n        return true\n    end\n    if a % 28\
    \ == 0 then\n        return false\n    end\n    if a % 29 == 0 then\n        return\
    \ true\n    end\n    if a % 30 == 0 then\n        return false\n    end\n    if\
    \ a % 31 == 0 then\n        return true\n    end\n    if a % 32 == 0 then\n  \
    \      return false\n    end\n    if a % 33 == 0 then\n        return true\n \
    \   end\n    if a % 34 == 0 then\n        return false\n    end\n    if a % 35\
    \ == 0 then\n        return true\n    end\n    if a % 36 == 0 then\n        return\
    \ false\n    end\n    if a % 37 == 0 then\n        return true\n    end\n    if\
    \ a % \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp7ipbkka0.lua:139: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a > 0 and a <= 9 then\n    return true\n  end\n\
    \  if a > 9 and a <= 99 then\n    return true\n  end\n  if a > 99 and a <= 999\
    \ then\n    return true\n  end\n  if a > 999 and a <= 9999 then\n    return true\n\
    \  end\n  if a > 9999 and a <= 99999 then\n    return true\n  end\n  if a > 99999\
    \ and a <= 999999 then\n    return true\n  end\n  if a > 999999 and a <= 9999999\
    \ then\n    return true\n  end\n  if a > 9999999 and a <= 999999999 then\n   \
    \ return true\n  end\n  if a > 999999999 and a <= 99999999999 then\n    return\
    \ true\n  end\n  if a > 99999999999 and a <= 9999999999999 then\n    return true\n\
    \  end\n  if a > 9999999999999 and a <= 999999999999999 then\n    return true\n\
    \  end\n  if a > 999999999999999 and a <= 9999999999999 then\n    return true\n\
    \  end\n  if a > 9999999999999 and a <= 999999999999999 then\n    return true\n\
    \  end\n  if a > 999999999999999 and a <= 9999999999999 then\n    return true\n\
    \  end\n  if a > 9999999999999 and a <= 999999999999999 then\n    return true\n\
    \  end\n  if a > 999999999999999 and a <= 9999999999999 then\n    return true\n\
    \  end\n  if a > 9999999999999 and a <= 999999999999999 then\n    return true\n\
    \  end\n  if a > 999999999999999 and a <= 9999999999999 then\n    return true\n\
    \  end\n  if a > 9999999999999 and a <= 999999999999999 then\n    return true\n\
    \  end\n  if a > 999999999999999 and a <= 9999999999999 then\n    return true\n\
    \  end\n  if a > 9999999999999 and a <= 999999999999999 then\n    return true\n\
    \  end\n  if a > 999999999999999 and a <= 9999999999999 then\n    return true\n\
    \  end\n  if a > 9999999999999 and a <= 999999999999999 then\n    return true\n\
    \  end\n  if a > 999999999999999 and a <= 9999999999999 then\n    return true\n\
    \  end\n  if a > 9999999999999 and a <= 999999999999999 then\n    return true\n\
    \  end\n  if a > 999999999999999 and a <= 9999999999999 then\n    return true\n\
    \  end\n  if a > 9999999999999 and a <= 999999999999999 \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpxeai5a_z.lua:100: ''then'' expected near ''lu''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmppefjperv.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a == 1 then\n        return true\n\
    \    end\n    if a == 2 then\n        return true\n    end\n    if a == 3 then\n\
    \        return true\n    end\n    if a == 4 then\n        return true\n    end\n\
    \    if a == 5 then\n        return true\n    end\n    if a == 6 then\n      \
    \  return true\n    end\n    if a == 7 then\n        return true\n    end\n  \
    \  if a == 8 then\n        return true\n    end\n    if a == 9 then\n        return\
    \ true\n    end\n    if a == 10 then\n        return true\n    end\n    if a ==\
    \ 11 then\n        return true\n    end\n    if a == 12 then\n        return true\n\
    \    end\n    if a == 13 then\n        return true\n    end\n    if a == 14 then\n\
    \        return true\n    end\n    if a == 15 then\n        return true\n    end\n\
    \    if a == 16 then\n        return true\n    end\n    if a == 17 then\n    \
    \    return true\n    end\n    if a == 18 then\n        return true\n    end\n\
    \    if a == 19 then\n        return true\n    end\n    if a == 20 then\n    \
    \    return true\n    end\n    if a == 21 then\n        return true\n    end\n\
    \    if a == 22 then\n        return true\n    end\n    if a == 23 then\n    \
    \    return true\n    end\n    if a == 24 then\n        return true\n    end\n\
    \    if a == 25 then\n        return true\n    end\n    if a == 26 then\n    \
    \    return true\n    end\n    if a == 27 then\n        return true\n    end\n\
    \    if a == 28 then\n        return true\n    end\n    if a == 29 then\n    \
    \    return true\n    end\n    if a == 30 then\n        return true\n    end\n\
    \    if a == 31 then\n        return true\n    end\n    if a == 32 then\n    \
    \    return true\n    end\n    if a == 33 then\n        return true\n    end\n\
    \    if a == 34 then\n        return true\n    end\n    if a == 35 then\n    \
    \    return true\n    end\n    if a == 36 then\n        return true\n    end\n\
    \    if a == 37 then\n        return true\n    end\n    if a == 38 then\n    \
    \    return true\n    end\n    if a == 39 then\n        return true\n    end\n\
    \    if a == 40 then\n        return true\n    end\n    if a == 41 then\n    \
    \    return true\n    end\n    if a == 42 then\n        return true\n    end\n\
    \    if a == 43 then\n        return true\n    end\n    if a == 44 then\n    \
    \    return true\n    end\n    if a == 45 then\n        return true\n    end\n\
    \    if a == 46 then\n        return true\n    end\n    if a == 47 then\n    \
    \    return true\n    end\n    if a == 48 then\n        return true\n    end\n\
    \    if a == 49 then\n        return true\n    end\n    if a == \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmps91f6xx8.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a == 1 then\n    return true\n  elseif a == 2 then\n\
    \    return true\n  elseif a == 3 then\n    return true\n  elseif a == 4 then\n\
    \    return true\n  elseif a == 5 then\n    return true\n  elseif a == 6 then\n\
    \    return true\n  elseif a == 7 then\n    return true\n  elseif a == 8 then\n\
    \    return true\n  elseif a == 9 then\n    return true\n  elseif a == 10 then\n\
    \    return true\n  elseif a == 11 then\n    return true\n  elseif a == 12 then\n\
    \    return true\n  elseif a == 13 then\n    return true\n  elseif a == 14 then\n\
    \    return true\n  elseif a == 15 then\n    return true\n  elseif a == 16 then\n\
    \    return true\n  elseif a == 17 then\n    return true\n  elseif a == 18 then\n\
    \    return true\n  elseif a == 19 then\n    return true\n  elseif a == 20 then\n\
    \    return true\n  elseif a == 21 then\n    return true\n  elseif a == 22 then\n\
    \    return true\n  elseif a == 23 then\n    return true\n  elseif a == 24 then\n\
    \    return true\n  elseif a == 25 then\n    return true\n  elseif a == 26 then\n\
    \    return true\n  elseif a == 27 then\n    return true\n  elseif a == 28 then\n\
    \    return true\n  elseif a == 29 then\n    return true\n  elseif a == 30 then\n\
    \    return true\n  elseif a == 31 then\n    return true\n  elseif a == 32 then\n\
    \    return true\n  elseif a == 33 then\n    return true\n  elseif a == 34 then\n\
    \    return true\n  elseif a == 35 then\n    return true\n  elseif a == 36 then\n\
    \    return true\n  elseif a == 37 then\n    return true\n  elseif a == 38 then\n\
    \    return true\n  elseif a == 39 then\n    return true\n  elseif a == 40 then\n\
    \    return true\n  elseif a == 41 then\n    return true\n  elseif a == 42 then\n\
    \    return true\n  elseif a == 43 then\n    return true\n  elseif a == 44 then\n\
    \    return true\n  elseif a == 45 then\n    return true\n  elseif a == 46 then\n\
    \    return true\n  elseif a == 47 then\n    return true\n  elseif a == 48 then\n\
    \    return true\n  elseif a == 49 then\n    return true\n  elseif a == \nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmphtvu4l27.lua:119: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\tif a == 0 then\n\
    \t\treturn true\n\telseif a%1 == 0 then\n\t\treturn false\n\telse\n\t\treturn\
    \ true\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt66wgvfp.lua:30:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpt66wgvfp.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a%1 == 0 then\n    return true\n  elseif a%2 == 0 then\n\
    \    return iscube(a/2) or iscube(a-1)\n  elseif a%3 == 0 then\n    return iscube(a/3)\
    \ or iscube(a-2) or iscube(a-1)\n  else\n    return false\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxo2b4c6c.lua:35:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpxo2b4c6c.lua:35:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\tlocal b = 1\n\
    \twhile b < a do\n\t\tif a % b == 0 then\n\t\t\treturn false\n\t\tend\n\t\tb =\
    \ b * 3 + 1\n\tend\n\treturn true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2pz23qag.lua:34:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp2pz23qag.lua:34:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\tlocal b = 0\n\
    \tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0\n\tlocal g = 0\n\t\
    local h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal l = 0\n\tlocal\
    \ m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal q = 0\n\tlocal r\
    \ = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v = 0\n\tlocal w =\
    \ 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a = 0\n\tlocal b = 0\n\
    \tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0\n\tlocal g = 0\n\t\
    local h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal l = 0\n\tlocal\
    \ m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal q = 0\n\tlocal r\
    \ = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v = 0\n\tlocal w =\
    \ 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a = 0\n\tlocal b = 0\n\
    \tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0\n\tlocal g = 0\n\t\
    local h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal l = 0\n\tlocal\
    \ m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal q = 0\n\tlocal r\
    \ = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v = 0\n\tlocal w =\
    \ 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a = 0\n\tlocal b = 0\n\
    \tlocal c = 0\n\tlocal d = 0\n\tlocal e = 0\n\tlocal f = 0\n\tlocal g = 0\n\t\
    local h = 0\n\tlocal i = 0\n\tlocal j = 0\n\tlocal k = 0\n\tlocal l = 0\n\tlocal\
    \ m = 0\n\tlocal n = 0\n\tlocal o = 0\n\tlocal p = 0\n\tlocal q = 0\n\tlocal r\
    \ = 0\n\tlocal s = 0\n\tlocal t = 0\n\tlocal u = 0\n\tlocal v = 0\n\tlocal w =\
    \ 0\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z = 0\n\tlocal a = 0\n\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpvmhxnrhw.lua:137: ''end'' expected (to close ''function''
    at line 17) near <eof>

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return false end\n  if a == 1 then return true end\n  if a == 2 then return\
    \ true end\n  if a == 3 then return true end\n  if a == 4 then return true end\n\
    \  if a == 5 then return true end\n  if a == 6 then return true end\n  if a ==\
    \ 7 then return true end\n  if a == 8 then return true end\n  if a == 9 then return\
    \ true end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpeb49dkpq.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp3wa21ypl.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a == 1 then\n        return true\n\
    \    end\n    if a == 2 then\n        return true\n    end\n    if a == 3 then\n\
    \        return true\n    end\n    if a == 4 then\n        return true\n    end\n\
    \    if a == 5 then\n        return true\n    end\n    if a == 6 then\n      \
    \  return true\n    end\n    if a == 7 then\n        return true\n    end\n  \
    \  if a == 8 then\n        return true\n    end\n    if a == 9 then\n        return\
    \ true\n    end\n    if a == 10 then\n        return true\n    end\n    if a ==\
    \ 11 then\n        return true\n    end\n    if a == 12 then\n        return true\n\
    \    end\n    if a == 13 then\n        return true\n    end\n    if a == 14 then\n\
    \        return true\n    end\n    if a == 15 then\n        return true\n    end\n\
    \    if a == 16 then\n        return true\n    end\n    if a == 17 then\n    \
    \    return true\n    end\n    if a == 18 then\n        return true\n    end\n\
    \    if a == 19 then\n        return true\n    end\n    if a == 20 then\n    \
    \    return true\n    end\n    if a == 21 then\n        return true\n    end\n\
    \    if a == 22 then\n        return true\n    end\n    if a == 23 then\n    \
    \    return true\n    end\n    if a == 24 then\n        return true\n    end\n\
    \    if a == 25 then\n        return true\n    end\n    if a == 26 then\n    \
    \    return true\n    end\n    if a == 27 then\n        return true\n    end\n\
    \    if a == 28 then\n        return true\n    end\n    if a == 29 then\n    \
    \    return true\n    end\n    if a == 30 then\n        return true\n    end\n\
    \    if a == 31 then\n        return true\n    end\n    if a == 32 then\n    \
    \    return true\n    end\n    if a == 33 then\n        return true\n    end\n\
    \    if a == 34 then\n        return true\n    end\n    if a == 35 then\n    \
    \    return true\n    end\n    if a == 36 then\n        return true\n    end\n\
    \    if a == 37 then\n        return true\n    end\n    if a == 38 then\n    \
    \    return true\n    end\n    if a == 39 then\n        return true\n    end\n\
    \    if a == 40 then\n        return true\n    end\n    if a == 41 then\n    \
    \    return true\n    end\n    if a == 42 then\n        return true\n    end\n\
    \    if a == 43 then\n        return true\n    end\n    if a == 44 then\n    \
    \    return true\n    end\n    if a == 45 then\n        return true\n    end\n\
    \    if a == 46 then\n        return true\n    end\n    if a == 47 then\n    \
    \    return true\n    end\n    if a == 48 then\n        return true\n    end\n\
    \    if a == 49 then\n        return true\n    end\n    if a == \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmps91f6xx8.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then return false end\n    if a == 1 then return true end\n    if a == 2 then\
    \ return true end\n    if a == 3 then return true end\n    if a == 4 then return\
    \ true end\n    if a == 5 then return true end\n    if a == 6 then return true\
    \ end\n    if a == 7 then return true end\n    if a == 8 then return true end\n\
    \    if a == 9 then return true end\n    if a == 10 then return true end\n   \
    \ if a == 11 then return true end\n    if a == 12 then return true end\n    if\
    \ a == 13 then return true end\n    if a == 14 then return true end\n    if a\
    \ == 15 then return true end\n    if a == 16 then return true end\n    if a ==\
    \ 17 then return true end\n    if a == 18 then return true end\n    if a == 19\
    \ then return true end\n    if a == 20 then return true end\n    if a == 21 then\
    \ return true end\n    if a == 22 then return true end\n    if a == 23 then return\
    \ true end\n    if a == 24 then return true end\n    if a == 25 then return true\
    \ end\n    if a == 26 then return true end\n    if a == 27 then return true end\n\
    \    if a == 28 then return true end\n    if a == 29 then return true end\n  \
    \  if a == 30 then return true end\n    if a == 31 then return true end\n    if\
    \ a == 32 then return true end\n    if a == 33 then return true end\n    if a\
    \ == 34 then return true end\n    if a == 35 then return true end\n    if a ==\
    \ 36 then return true end\n    if a == 37 then return true end\n    if a == 38\
    \ then return true end\n    if a == 39 then return true end\n    if a == 40 then\
    \ return true end\n    if a == 41 then return true end\n    if a == 42 then return\
    \ true end\n    if a == 43 then return true end\n    if a == 44 then return true\
    \ end\n    if a == 45 then return true end\n    if a == 46 then return true end\n\
    \    if a == 47 then return true end\n    if a == 48 then return true end\n  \
    \  if a == 49 then return true end\n    if a == 50 then return true end\n    if\
    \ a == 51 then return true end\n    if a == 52 then return true end\n    if a\
    \ == 53 then return true end\n    if a == 54 then return true end\n    if a ==\
    \ 55 then return true end\n    if a == 56 then return true end\n    if a == 57\
    \ then return true end\n    if a == 58 then return true end\n    if a == 59 then\
    \ return true end\n    if a == 60 then return true end\n    if a == 61 then \n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyozjat_3.lua:94: ''end'' expected (to close ''if'' at line
    79) near <eof>

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a <= 0 then\n\
    \    return false\n  end\n  if a == 1 then\n    return true\n  end\n  if a ==\
    \ 2 then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n \
    \ if a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n\
    \  end\n  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return\
    \ true\n  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n  \
    \  return true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11\
    \ then\n    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if\
    \ a == 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n \
    \ end\n  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return\
    \ true\n  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n\
    \    return true\n  end\n  if a == 19 then\n    return true\n  end\n  if a ==\
    \ 20 then\n    return true\n  end\n  if a == 21 then\n    return true\n  end\n\
    \  if a == 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n\
    \  end\n  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return\
    \ true\n  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n\
    \    return true\n  end\n  if a == 28 then\n    return true\n  end\n  if a ==\
    \ 29 then\n    return true\n  end\n  if a == 30 then\n    return true\n  end\n\
    \  if a == 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n\
    \  end\n  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return\
    \ true\n  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n\
    \    return true\n  end\n  if a == 37 then\n    return true\n  end\n  if a ==\
    \ 38 then\n    return true\n  end\n  if a == 39 then\n    return true\n  end\n\
    \  if a == 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n\
    \  end\n  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return\
    \ true\n  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n\
    \    return true\n  end\n  if a == 46 then\n    return true\n  end\n  if a ==\
    \ 47 then\n    return true\n  end\n  if a == 48 then\n    return true\n  end\n\
    \  if a == 49 then\n    return true\n  end\n  if \nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpolsyrk9q.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\t-- Write your\
    \ code here.\n\treturn true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1z5ek6xq.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp1z5ek6xq.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: -1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\t-- Write your\
    \ code here.\n\tlocal b = 0\n\tlocal c = a\n\twhile c > 0 do\n\t\tb = b + 1\n\t\
    \tc = c * c\n\tend\n\treturn b == a \nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659822006
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a == 1 then\n    return true\n  elseif a == 2 then\n\
    \    return true\n  elseif a == 3 then\n    return true\n  elseif a == 4 then\n\
    \    return true\n  elseif a == 5 then\n    return true\n  elseif a == 6 then\n\
    \    return true\n  elseif a == 7 then\n    return true\n  elseif a == 8 then\n\
    \    return true\n  elseif a == 9 then\n    return true\n  elseif a == 10 then\n\
    \    return true\n  elseif a == 11 then\n    return true\n  elseif a == 12 then\n\
    \    return true\n  elseif a == 13 then\n    return true\n  elseif a == 14 then\n\
    \    return true\n  elseif a == 15 then\n    return true\n  elseif a == 16 then\n\
    \    return true\n  elseif a == 17 then\n    return true\n  elseif a == 18 then\n\
    \    return true\n  elseif a == 19 then\n    return true\n  elseif a == 20 then\n\
    \    return true\n  elseif a == 21 then\n    return true\n  elseif a == 22 then\n\
    \    return true\n  elseif a == 23 then\n    return true\n  elseif a == 24 then\n\
    \    return true\n  elseif a == 25 then\n    return true\n  elseif a == 26 then\n\
    \    return true\n  elseif a == 27 then\n    return true\n  elseif a == 28 then\n\
    \    return true\n  elseif a == 29 then\n    return true\n  elseif a == 30 then\n\
    \    return true\n  elseif a == 31 then\n    return true\n  elseif a == 32 then\n\
    \    return true\n  elseif a == 33 then\n    return true\n  elseif a == 34 then\n\
    \    return true\n  elseif a == 35 then\n    return true\n  elseif a == 36 then\n\
    \    return true\n  elseif a == 37 then\n    return true\n  elseif a == 38 then\n\
    \    return true\n  elseif a == 39 then\n    return true\n  elseif a == 40 then\n\
    \    return true\n  elseif a == 41 then\n    return true\n  elseif a == 42 then\n\
    \    return true\n  elseif a == 43 then\n    return true\n  elseif a == 44 then\n\
    \    return true\n  elseif a == 45 then\n    return true\n  elseif a == 46 then\n\
    \    return true\n  elseif a == 47 then\n    return true\n  elseif a == 48 then\n\
    \    return true\n  elseif a == 49 then\n    return true\n  elseif a == \nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmphtvu4l27.lua:119: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\tlocal b = 0\n\
    \twhile a > 0 do\n\t\tb = b * a % 10\n\t\ta = a / 10\n\tend\n\treturn b == 0\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk4_fiz0s.lua:30:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpk4_fiz0s.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a <= 0\
    \ then\n        return false\n    end\n    if a == 1 then\n        return true\n\
    \    end\n    if a == 2 then\n        return true\n    end\n    if a == 3 then\n\
    \        return true\n    end\n    if a == 4 then\n        return true\n    end\n\
    \    if a == 5 then\n        return true\n    end\n    if a == 6 then\n      \
    \  return true\n    end\n    if a == 7 then\n        return true\n    end\n  \
    \  if a == 8 then\n        return true\n    end\n    if a == 9 then\n        return\
    \ true\n    end\n    if a == 10 then\n        return true\n    end\n    if a ==\
    \ 11 then\n        return true\n    end\n    if a == 12 then\n        return true\n\
    \    end\n    if a == 13 then\n        return true\n    end\n    if a == 14 then\n\
    \        return true\n    end\n    if a == 15 then\n        return true\n    end\n\
    \    if a == 16 then\n        return true\n    end\n    if a == 17 then\n    \
    \    return true\n    end\n    if a == 18 then\n        return true\n    end\n\
    \    if a == 19 then\n        return true\n    end\n    if a == 20 then\n    \
    \    return true\n    end\n    if a == 21 then\n        return true\n    end\n\
    \    if a == 22 then\n        return true\n    end\n    if a == 23 then\n    \
    \    return true\n    end\n    if a == 24 then\n        return true\n    end\n\
    \    if a == 25 then\n        return true\n    end\n    if a == 26 then\n    \
    \    return true\n    end\n    if a == 27 then\n        return true\n    end\n\
    \    if a == 28 then\n        return true\n    end\n    if a == 29 then\n    \
    \    return true\n    end\n    if a == 30 then\n        return true\n    end\n\
    \    if a == 31 then\n        return true\n    end\n    if a == 32 then\n    \
    \    return true\n    end\n    if a == 33 then\n        return true\n    end\n\
    \    if a == 34 then\n        return true\n    end\n    if a == 35 then\n    \
    \    return true\n    end\n    if a == 36 then\n        return true\n    end\n\
    \    if a == 37 then\n        return true\n    end\n    if a == 38 then\n    \
    \    return true\n    end\n    if a == 39 then\n        return true\n    end\n\
    \    if a == 40 then\n        return true\n    end\n    if a == 41 then\n    \
    \    return true\n    end\n    if a == 42 then\n        return true\n    end\n\
    \    if a == 43 then\n        return true\n    end\n    if a == 44 then\n    \
    \    return true\n    end\n    if a == 45 then\n        return true\n    end\n\
    \    if a == 46 then\n        return true\n    end\n    if a == 47 then\n    \
    \    return true\n    end\n    if a == 48 then\n        return true\n    end\n\
    \    if a == 49 then\n        return true\n    end\n    if \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp45csky3a.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a <= 0 then\n\
    \    return false\n  end\n  if a % 3 == 0 and a % 5 == 0 then\n    return true\n\
    \  end\n  return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpd64xp_ce.lua:30:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpd64xp_ce.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 then\n        return iscube(a-1)\
    \ and iscube(a-1*a) and iscube(a-1*a*a)\n    else\n        return false\n    end\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7b8o4ego.lua:33:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp7b8o4ego.lua:33:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a > 0 then\n    if a % 2 == 0 then\n      return\
    \ iscube(a/2) or iscube(a*3) or iscube(a*5)\n    else\n      return false\n  \
    \  end\n  else\n    return false\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxl1clv7n.lua:35:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpxl1clv7n.lua:35:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a == 1 then\n    return true\n  elseif a == 2 then\n\
    \    return true\n  elseif a == 3 then\n    return true\n  elseif a == 4 then\n\
    \    return true\n  elseif a == 5 then\n    return true\n  elseif a == 6 then\n\
    \    return true\n  elseif a == 7 then\n    return true\n  elseif a == 8 then\n\
    \    return true\n  elseif a == 9 then\n    return true\n  elseif a == 10 then\n\
    \    return true\n  elseif a == 11 then\n    return true\n  elseif a == 12 then\n\
    \    return true\n  elseif a == 13 then\n    return true\n  elseif a == 14 then\n\
    \    return true\n  elseif a == 15 then\n    return true\n  elseif a == 16 then\n\
    \    return true\n  elseif a == 17 then\n    return true\n  elseif a == 18 then\n\
    \    return true\n  elseif a == 19 then\n    return true\n  elseif a == 20 then\n\
    \    return true\n  elseif a == 21 then\n    return true\n  elseif a == 22 then\n\
    \    return true\n  elseif a == 23 then\n    return true\n  elseif a == 24 then\n\
    \    return true\n  elseif a == 25 then\n    return true\n  elseif a == 26 then\n\
    \    return true\n  elseif a == 27 then\n    return true\n  elseif a == 28 then\n\
    \    return true\n  elseif a == 29 then\n    return true\n  elseif a == 30 then\n\
    \    return true\n  elseif a == 31 then\n    return true\n  elseif a == 32 then\n\
    \    return true\n  elseif a == 33 then\n    return true\n  elseif a == 34 then\n\
    \    return true\n  elseif a == 35 then\n    return true\n  elseif a == 36 then\n\
    \    return true\n  elseif a == 37 then\n    return true\n  elseif a == 38 then\n\
    \    return true\n  elseif a == 39 then\n    return true\n  elseif a == 40 then\n\
    \    return true\n  elseif a == 41 then\n    return true\n  elseif a == 42 then\n\
    \    return true\n  elseif a == 43 then\n    return true\n  elseif a == 44 then\n\
    \    return true\n  elseif a == 45 then\n    return true\n  elseif a == 46 then\n\
    \    return true\n  elseif a == 47 then\n    return true\n  elseif a == 48 then\n\
    \    return true\n  elseif a == 49 then\n    return true\n  elseif a == \nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmphtvu4l27.lua:119: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmppefjperv.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\t-- Write your\
    \ code here.\n\tlocal b = 0\n\twhile b < a do\n\t\tif a % b == 0 then\n\t\t\t\
    return false\n\t\tend\n\t\tb = b + 1\n\tend\n\treturn true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_4b8c73c.lua:17:\
    \ attempt to perform 'n%0'\nstack traceback:\n\t/tmp/tmp_4b8c73c.lua:17: in local\
    \ 'candidate'\n\t/tmp/tmp_4b8c73c.lua:32: in function 'test_humaneval'\n\nRan\
    \ 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a > 0 then\n    return false\n  end\n  if a < 0\
    \ then\n    return true\n  end\n  if a < 1 then\n    return false\n  end\n  if\
    \ a % 1 == 0 then\n    return false\n  end\n  local b = a\n  while b > 1 do\n\
    \    b = b >> 1\n    if b % 2 == 0 then\n      return false\n    end\n  end\n\
    \  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpq6xky13r.lua:46:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpq6xky13r.lua:46:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a < 0 then\n        return false\n\
    \    end\n    if a > 180 then\n        return false\n    end\n    if a <= 1 then\n\
    \        return true\n    end\n    if a <= 3 then\n        return true\n    end\n\
    \    if a <= 9 then\n        return true\n    end\n    if a <= 27 then\n     \
    \   return true\n    end\n    if a <= 81 then\n        return true\n    end\n\
    \    if a <= 127 then\n        return true\n    end\n    if a <= 255 then\n  \
    \      return true\n    end\n    if a <= 511 then\n        return true\n    end\n\
    \    if a <= 1025 then\n        return true\n    end\n    if a <= 2047 then\n\
    \        return true\n    end\n    if a <= 4095 then\n        return true\n  \
    \  end\n    if a <= 8191 then\n        return true\n    end\n    if a <= 16383\
    \ then\n        return true\n    end\n    if a <= 32767 then\n        return true\n\
    \    end\n    if a <= 65535 then\n        return true\n    end\n    if a <= 131071\
    \ then\n        return true\n    end\n    if a <= 262143 then\n        return\
    \ true\n    end\n    if a <= 524287 then\n        return true\n    end\n    if\
    \ a <= 1048575 then\n        return true\n    end\n    if a <= 2097151 then\n\
    \        return true\n    end\n    if a <= 4194303 then\n        return true\n\
    \    end\n    if a <= 8388607 then\n        return true\n    end\n    if a <=\
    \ 16777215 then\n        return true\n    end\n    if a <= 33554431 then\n   \
    \     return true\n    end\n    if a <= 67108863 then\n        return true\n \
    \   end\n    if a <= 134217727 then\n        return true\n    end\n    if a <=\
    \ 268435455 then\n        return true\n    end\n    if a <= 536870911 then\n \
    \       return true\n    end\n    if a <= 1073741823 then\n        return true\n\
    \    end\n    if a <= 2147483647 then\n        return true\n    end\n    if a\
    \ <= 4294967295 then\n        return true\n    end\n    if a <= 8589934591 then\n\
    \        return true\n    end\n    if a <= 17179869183 then\n        return true\n\
    \    end\n    if a <= 34359738367 then\n        return true\n    end\n    if a\
    \ <= 68719476735 then\n        return true\n    end\n    if a <= 137438953473\
    \ then\n        return true\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpru4cbwtk.lua:134: ''end'' expected (to close ''if'' at line
    132) near ''lu''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return false end\n  if a == 1 then return true end\n  if a == 2 then return\
    \ true end\n  if a == 3 then return true end\n  if a == 4 then return true end\n\
    \  if a == 5 then return true end\n  if a == 6 then return true end\n  if a ==\
    \ 7 then return true end\n  if a == 8 then return true end\n  if a == 9 then return\
    \ true end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpeb49dkpq.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return false end\n  if a == 1 then return true end\n  if a == 2 then return\
    \ true end\n  if a == 3 then return true end\n  if a == 4 then return true end\n\
    \  if a == 5 then return true end\n  if a == 6 then return true end\n  if a ==\
    \ 7 then return true end\n  if a == 8 then return true end\n  if a == 9 then return\
    \ true end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpeb49dkpq.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a < 0 then\n        return false\n\
    \    end\n    if a > 180 then\n        return false\n    end\n    if a <= 1 then\n\
    \        return true\n    end\n    if a <= 3 then\n        return true\n    end\n\
    \    if a <= 9 then\n        return true\n    end\n    if a <= 27 then\n     \
    \   return true\n    end\n    if a <= 81 then\n        return true\n    end\n\
    \    if a <= 127 then\n        return true\n    end\n    if a <= 255 then\n  \
    \      return true\n    end\n    if a <= 511 then\n        return true\n    end\n\
    \    if a <= 1021 then\n        return true\n    end\n    if a <= 2047 then\n\
    \        return true\n    end\n    if a <= 4095 then\n        return true\n  \
    \  end\n    if a <= 8191 then\n        return true\n    end\n    if a <= 16383\
    \ then\n        return true\n    end\n    if a <= 32767 then\n        return true\n\
    \    end\n    if a <= 65535 then\n        return true\n    end\n    if a <= 131071\
    \ then\n        return true\n    end\n    if a <= 262143 then\n        return\
    \ true\n    end\n    if a <= 524287 then\n        return true\n    end\n    if\
    \ a <= 1048575 then\n        return true\n    end\n    if a <= 2097151 then\n\
    \        return true\n    end\n    if a <= 4194303 then\n        return true\n\
    \    end\n    if a <= 8388607 then\n        return true\n    end\n    if a <=\
    \ 16777215 then\n        return true\n    end\n    if a <= 33554431 then\n   \
    \     return true\n    end\n    if a <= 67108863 then\n        return true\n \
    \   end\n    if a <= 134217727 then\n        return true\n    end\n    if a <=\
    \ 268435455 then\n        return true\n    end\n    if a <= 536870911 then\n \
    \       return true\n    end\n    if a <= 1073741823 then\n        return true\n\
    \    end\n    if a <= 2147483647 then\n        return true\n    end\n    if a\
    \ <= 4294967295 then\n        return true\n    end\n    if a <= 8589934591 then\n\
    \        return true\n    end\n    if a <= 17179869183 then\n        return true\n\
    \    end\n    if a <= 34359738367 then\n        return true\n    end\n    if a\
    \ <= 68719476735 then\n        return true\n    end\n    if a <= 137438953473\
    \ then\n        return true\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpncddfwrs.lua:134: ''end'' expected (to close ''if'' at line
    132) near ''lu''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a < 0 then\n        return false\n\
    \    end\n    if a > 180 then\n        return false\n    end\n    if a <= 1 then\n\
    \        return true\n    end\n    if a <= 3 then\n        return true\n    end\n\
    \    if a <= 9 then\n        return true\n    end\n    if a <= 27 then\n     \
    \   return true\n    end\n    if a <= 81 then\n        return true\n    end\n\
    \    if a <= 127 then\n        return true\n    end\n    if a <= 255 then\n  \
    \      return true\n    end\n    if a <= 511 then\n        return true\n    end\n\
    \    if a <= 1025 then\n        return true\n    end\n    if a <= 2049 then\n\
    \        return true\n    end\n    if a <= 4095 then\n        return true\n  \
    \  end\n    if a <= 8191 then\n        return true\n    end\n    if a <= 16383\
    \ then\n        return true\n    end\n    if a <= 32767 then\n        return true\n\
    \    end\n    if a <= 65535 then\n        return true\n    end\n    if a <= 131071\
    \ then\n        return true\n    end\n    if a <= 262143 then\n        return\
    \ true\n    end\n    if a <= 524287 then\n        return true\n    end\n    if\
    \ a <= 1048575 then\n        return true\n    end\n    if a <= 2097151 then\n\
    \        return true\n    end\n    if a <= 4194303 then\n        return true\n\
    \    end\n    if a <= 8388607 then\n        return true\n    end\n    if a <=\
    \ 16777215 then\n        return true\n    end\n    if a <= 33554431 then\n   \
    \     return true\n    end\n    if a <= 67108863 then\n        return true\n \
    \   end\n    if a <= 134217727 then\n        return true\n    end\n    if a <=\
    \ 268435455 then\n        return true\n    end\n    if a <= 536870911 then\n \
    \       return true\n    end\n    if a <= 1073741823 then\n        return true\n\
    \    end\n    if a <= 2147483647 then\n        return true\n    end\n    if a\
    \ <= 4294967295 then\n        return true\n    end\n    return false\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjxznl5cn.lua:127:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpjxznl5cn.lua:127:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a%1 == 0 then\n    return false\n  else\n    return\
    \ iscube(a-1)\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnw07xhho.lua:30:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpnw07xhho.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmppefjperv.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a == 1 then\n        return true\n\
    \    end\n    if a == 2 then\n        return true\n    end\n    if a == 3 then\n\
    \        return true\n    end\n    if a == 4 then\n        return true\n    end\n\
    \    if a == 5 then\n        return true\n    end\n    if a == 6 then\n      \
    \  return true\n    end\n    if a == 7 then\n        return true\n    end\n  \
    \  if a == 8 then\n        return true\n    end\n    if a == 9 then\n        return\
    \ true\n    end\n    if a == 10 then\n        return true\n    end\n    if a ==\
    \ 11 then\n        return true\n    end\n    if a == 12 then\n        return true\n\
    \    end\n    if a == 13 then\n        return true\n    end\n    if a == 14 then\n\
    \        return true\n    end\n    if a == 15 then\n        return true\n    end\n\
    \    if a == 16 then\n        return true\n    end\n    if a == 17 then\n    \
    \    return true\n    end\n    if a == 18 then\n        return true\n    end\n\
    \    if a == 19 then\n        return true\n    end\n    if a == 20 then\n    \
    \    return true\n    end\n    if a == 21 then\n        return true\n    end\n\
    \    if a == 22 then\n        return true\n    end\n    if a == 23 then\n    \
    \    return true\n    end\n    if a == 24 then\n        return true\n    end\n\
    \    if a == 25 then\n        return true\n    end\n    if a == 26 then\n    \
    \    return true\n    end\n    if a == 27 then\n        return true\n    end\n\
    \    if a == 28 then\n        return true\n    end\n    if a == 29 then\n    \
    \    return true\n    end\n    if a == 30 then\n        return true\n    end\n\
    \    if a == 31 then\n        return true\n    end\n    if a == 32 then\n    \
    \    return true\n    end\n    if a == 33 then\n        return true\n    end\n\
    \    if a == 34 then\n        return true\n    end\n    if a == 35 then\n    \
    \    return true\n    end\n    if a == 36 then\n        return true\n    end\n\
    \    if a == 37 then\n        return true\n    end\n    if a == 38 then\n    \
    \    return true\n    end\n    if a == 39 then\n        return true\n    end\n\
    \    if a == 40 then\n        return true\n    end\n    if a == 41 then\n    \
    \    return true\n    end\n    if a == 42 then\n        return true\n    end\n\
    \    if a == 43 then\n        return true\n    end\n    if a == 44 then\n    \
    \    return true\n    end\n    if a == 45 then\n        return true\n    end\n\
    \    if a == 46 then\n        return true\n    end\n    if a == 47 then\n    \
    \    return true\n    end\n    if a == 48 then\n        return true\n    end\n\
    \    if a == 49 then\n        return true\n    end\n    if a == \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmps91f6xx8.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\tif a == 0 then\n\
    \t\treturn true\n\telseif a%1 == 0 then\n\t\treturn false\n\telseif a%2 == 0 then\n\
    \t\treturn iscube(a/2) or iscube(a*2)\n\telseif a%3 == 0 then\n\t\treturn iscube(a/3)\
    \ or iscube(a*3)\n\telseif a%4 == 0 then\n\t\treturn iscube(a/4) or iscube(a*4)\n\
    \telseif a%5 == 0 then\n\t\treturn iscube(a/5) or iscube(a*5)\n\telseif a%6 ==\
    \ 0 then\n\t\treturn iscube(a/6) or iscube(a*6)\n\telseif a%7 == 0 then\n\t\t\
    return iscube(a/7) or iscube(a*7)\n\telseif a%8 == 0 then\n\t\treturn iscube(a/8)\
    \ or iscube(a*8)\n\telseif a%9 == 0 then\n\t\treturn iscube(a/9) or iscube(a*9)\n\
    \telseif a%10 == 0 then\n\t\treturn iscube(a/10) or iscube(a*10)\n\telseif a%11\
    \ == 0 then\n\t\treturn iscube(a/11) or iscube(a*11)\n\telseif a%12 == 0 then\n\
    \t\treturn iscube(a/12) or iscube(a*12)\n\telseif a%13 == 0 then\n\t\treturn iscube(a/13)\
    \ or iscube(a*13)\n\telseif a%14 == 0 then\n\t\treturn iscube(a/14) or iscube(a*14)\n\
    \telseif a%15 == 0 then\n\t\treturn iscube(a/15) or iscube(a*15)\n\telseif a%16\
    \ == 0 then\n\t\treturn iscube(a/16) or iscube(a*16)\n\telseif a%17 == 0 then\n\
    \t\treturn iscube(a/17) or iscube(a*17)\n\telseif a%18 == 0 then\n\t\treturn iscube(a/18)\
    \ or iscube(a*18)\n\telseif a%19 == 0 then\n\t\treturn iscube(a/19) or iscube(a*19)\n\
    \telseif a%20 == 0 then\n\t\treturn iscube(a/20) or iscube(a*20)\n\telseif a%21\
    \ == 0 then\n\t\treturn iscube(a/21) or iscube(a*21)\n\telseif a%22 == 0 then\n\
    \t\treturn iscube(a/22) or iscube(a*22)\n\telseif a%23 == 0 then\n\t\treturn \n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpajmqp8iv.lua:66: ''end'' expected (to close ''if'' at line
    18) near ''=''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp3wa21ypl.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a <= 0\
    \ then\n        return false\n    end\n    if a > 180 then\n        return true\n\
    \    end\n    if a % 180 ~= 0 then\n        return false\n    end\n    if a %\
    \ 180 == 0 then\n        return true\n    end\n    if a % 180 == 180 then\n  \
    \      return true\n    end\n    if a % 180 == 0 then\n        return true\n \
    \   end\n    if a % 180 == 180 then\n        return true\n    end\n    if a %\
    \ 180 == 180 then\n        return true\n    end\n    if a % 180 == 180 then\n\
    \        return true\n    end\n    if a % 180 == 180 then\n        return true\n\
    \    end\n    if a % 180 == 180 then\n        return true\n    end\n    if a %\
    \ 180 == 180 then\n        return true\n    end\n    if a % 180 == 180 then\n\
    \        return true\n    end\n    if a % 180 == 180 then\n        return true\n\
    \    end\n    if a % 180 == 180 then\n        return true\n    end\n    if a %\
    \ 180 == 180 then\n        return true\n    end\n    if a % 180 == 180 then\n\
    \        return true\n    end\n    if a % 180 == 180 then\n        return true\n\
    \    end\n    if a % 180 == 180 then\n        return true\n    end\n    if a %\
    \ 180 == 180 then\n        return true\n    end\n    if a % 180 == 180 then\n\
    \        return true\n    end\n    if a % 180 == 180 then\n        return true\n\
    \    end\n    if a % 180 == 180 then\n        return true\n    end\n    if a %\
    \ 180 == 180 then\n        return true\n    end\n    if a % 180 == 180 then\n\
    \        return true\n    end\n    if a % 180 == 180 then\n        return true\n\
    \    end\n    if a % 180 == 180 then\n        return true\n    end\n    if a %\
    \ 180 == 180 then\n        return true\n    end\n    if a % 180 == 180 then\n\
    \        return true\n    end\n    if a % 180 == 180 then\n        return true\n\
    \    end\n    if a % 180 == 180 then\n        return true\n    end\n    if a %\
    \ 180 == 180 then\n        return true\n    end\n    if a % 180 == 180 then\n\
    \        return true\n    end\n    if a % 180 == 180 then\n        return true\n\
    \    end\n    if a % 180 == 180 then\n        return true\n    end\n    if a %\
    \ 180 == 180 then\n        return true\n    end\n    if a % 180 == 180 then\n\
    \        return true\n    end\n\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmparttb2wp.lua:144: ''end'' expected (to close ''function''
    at line 17) near <eof>

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a <= 0 then\n        return false\n\
    \    end\n    if a > 0 then\n        return iscube(math.floor(a/3)) == true and\
    \ iscube(a*3) == true\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpluki81v7.lua:25:\
    \ stack overflow\nstack traceback:\n\t/tmp/tmpluki81v7.lua:25: in upvalue 'iscube'\n\
    \t/tmp/tmpluki81v7.lua:25: in upvalue 'iscube'\n\t/tmp/tmpluki81v7.lua:25: in\
    \ upvalue 'iscube'\n\t/tmp/tmpluki81v7.lua:25: in upvalue 'iscube'\n\t/tmp/tmpluki81v7.lua:25:\
    \ in upvalue 'iscube'\n\t/tmp/tmpluki81v7.lua:25: in upvalue 'iscube'\n\t/tmp/tmpluki81v7.lua:25:\
    \ in upvalue 'iscube'\n\t/tmp/tmpluki81v7.lua:25: in upvalue 'iscube'\n\t/tmp/tmpluki81v7.lua:25:\
    \ in upvalue 'iscube'\n\t...\t(skipping 499947 levels)\n\t/tmp/tmpluki81v7.lua:25:\
    \ in local 'candidate'\n\t/tmp/tmpluki81v7.lua:32: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.290 seconds, 0 successes, 1 error\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a == 1 then\n        return true\n\
    \    end\n    if a == 2 then\n        return true\n    end\n    if a == 3 then\n\
    \        return true\n    end\n    if a == 4 then\n        return true\n    end\n\
    \    if a == 5 then\n        return true\n    end\n    if a == 6 then\n      \
    \  return true\n    end\n    if a == 7 then\n        return true\n    end\n  \
    \  if a == 8 then\n        return true\n    end\n    if a == 9 then\n        return\
    \ true\n    end\n    if a == 10 then\n        return true\n    end\n    if a ==\
    \ 11 then\n        return true\n    end\n    if a == 12 then\n        return true\n\
    \    end\n    if a == 13 then\n        return true\n    end\n    if a == 14 then\n\
    \        return true\n    end\n    if a == 15 then\n        return true\n    end\n\
    \    if a == 16 then\n        return true\n    end\n    if a == 17 then\n    \
    \    return true\n    end\n    if a == 18 then\n        return true\n    end\n\
    \    if a == 19 then\n        return true\n    end\n    if a == 20 then\n    \
    \    return true\n    end\n    if a == 21 then\n        return true\n    end\n\
    \    if a == 22 then\n        return true\n    end\n    if a == 23 then\n    \
    \    return true\n    end\n    if a == 24 then\n        return true\n    end\n\
    \    if a == 25 then\n        return true\n    end\n    if a == 26 then\n    \
    \    return true\n    end\n    if a == 27 then\n        return true\n    end\n\
    \    if a == 28 then\n        return true\n    end\n    if a == 29 then\n    \
    \    return true\n    end\n    if a == 30 then\n        return true\n    end\n\
    \    if a == 31 then\n        return true\n    end\n    if a == 32 then\n    \
    \    return true\n    end\n    if a == 33 then\n        return true\n    end\n\
    \    if a == 34 then\n        return true\n    end\n    if a == 35 then\n    \
    \    return true\n    end\n    if a == 36 then\n        return true\n    end\n\
    \    if a == 37 then\n        return true\n    end\n    if a == 38 then\n    \
    \    return true\n    end\n    if a == 39 then\n        return true\n    end\n\
    \    if a == 40 then\n        return true\n    end\n    if a == 41 then\n    \
    \    return true\n    end\n    if a == 42 then\n        return true\n    end\n\
    \    if a == 43 then\n        return true\n    end\n    if a == 44 then\n    \
    \    return true\n    end\n    if a == 45 then\n        return true\n    end\n\
    \    if a == 46 then\n        return true\n    end\n    if a == 47 then\n    \
    \    return true\n    end\n    if a == 48 then\n        return true\n    end\n\
    \    if a == 49 then\n        return true\n    end\n    if a == \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmps91f6xx8.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 and a <= 9 then\n        return\
    \ true\n    end\n    if a > 9 and a <= 99 then\n        return true\n    end\n\
    \    if a > 99 and a <= 999 then\n        return true\n    end\n    if a > 999\
    \ and a <= 9999 then\n        return true\n    end\n    if a > 9999 and a <= 99999\
    \ then\n        return true\n    end\n    if a > 99999 and a <= 999999 then\n\
    \        return true\n    end\n    if a > 999999 and a <= 9999999 then\n     \
    \   return true\n    end\n    if a > 9999999 and a <= 999999999 then\n       \
    \ return true\n    end\n    if a > 999999999 and a <= 99999999999 then\n     \
    \   return true\n    end\n    if a > 99999999999 and a <= 9999999999999 then\n\
    \        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999 and a <= 9999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999 and a <= 9999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999 and a <= 9999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999 and a <= 9999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999 and a <= 9999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999 and a <= 9999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999 and a <= 9999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ then\n        return true\n    end\n    if a > 999999999999999 and a <= 9999999999999\
    \ then\n        return true\n    end\n    if a > 9999999999999 and a <= 999999999999999\
    \ \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpag6b7zdk.lua:100: ''then'' expected near ''lu''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return false end\n  if a == 1 then return true end\n  if a == 2 then return\
    \ true end\n  if a == 3 then return true end\n  if a == 4 then return true end\n\
    \  if a == 5 then return true end\n  if a == 6 then return true end\n  if a ==\
    \ 7 then return true end\n  if a == 8 then return true end\n  if a == 9 then return\
    \ true end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpeb49dkpq.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\tlocal b = 1\n\
    \twhile b < a do\n\t\tif a % b == 0 then\n\t\t\treturn false\n\t\tend\n\t\tb =\
    \ b * 3 + 1\n\tend\n\treturn true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2pz23qag.lua:34:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp2pz23qag.lua:34:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a%1 == 0 then\n    return true\n  elseif a%2 == 0 then\n\
    \    return true\n  elseif a%3 == 0 then\n    return true\n  elseif a%4 == 0 then\n\
    \    return true\n  elseif a%5 == 0 then\n    return true\n  elseif a%6 == 0 then\n\
    \    return true\n  elseif a%7 == 0 then\n    return true\n  elseif a%8 == 0 then\n\
    \    return true\n  elseif a%9 == 0 then\n    return true\n  elseif a%10 == 0\
    \ then\n    return true\n  elseif a%11 == 0 then\n    return true\n  elseif a%12\
    \ == 0 then\n    return true\n  elseif a%13 == 0 then\n    return true\n  elseif\
    \ a%14 == 0 then\n    return true\n  elseif a%15 == 0 then\n    return true\n\
    \  elseif a%16 == 0 then\n    return true\n  elseif a%17 == 0 then\n    return\
    \ true\n  elseif a%18 == 0 then\n    return true\n  elseif a%19 == 0 then\n  \
    \  return true\n  elseif a%20 == 0 then\n    return true\n  elseif a%21 == 0 then\n\
    \    return true\n  elseif a%22 == 0 then\n    return true\n  elseif a%23 == 0\
    \ then\n    return true\n  elseif a%24 == 0 then\n    return true\n  elseif a%25\
    \ == 0 then\n    return true\n  elseif a%26 == 0 then\n    return true\n  elseif\
    \ a%27 == 0 then\n    return true\n  elseif a%28 == 0 then\n    return true\n\
    \  elseif a%29 == 0 then\n    return true\n  elseif a%30 == 0 then\n    return\
    \ true\n  elseif a%31 == 0 then\n    return true\n  elseif a%32 == 0 then\n  \
    \  return true\n  elseif a%33 == 0 then\n    return true\n  elseif a%34 == 0 then\n\
    \    return true\n  elseif a%35 == 0 then\n    return true\n  elseif a%36 == 0\
    \ then\n    return true\n  elseif a%37 == 0 then\n    return true\n  elseif a%38\
    \ == 0 then\n    return true\n  elseif a%39 == 0 then\n    return true\n  \nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpr63fjsz3.lua:99: ''end'' expected (to close ''if'' at line
    18) near ''lu''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a%1 == 0 then\n    return false\n  else\n    return\
    \ iscube(a-1) or iscube(a*a) or iscube(a/3)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwyrc2435.lua:30:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpwyrc2435.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 then\n        return a % 3\
    \ == 0 and iscube(a / 3)\n    else\n        return false\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptihq__1u.lua:31:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmptihq__1u.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\tlocal b = 0\n\
    \twhile a > 0 do\n\t\tb = b * a % 16384\n\t\ta = a / 16384\n\tend\n\treturn b\
    \ == 0 and a or false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr99n7lsp.lua:29:\
    \ expected: true, actual: 0\nstack traceback:\n\t/tmp/tmpr99n7lsp.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp3wa21ypl.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 and a < 1 then\n        return\
    \ true\n    end\n    if a > 1 and a < 3 then\n        return true\n    end\n \
    \   if a > 3 and a < 9 then\n        return true\n    end\n    if a > 9 and a\
    \ < 27 then\n        return true\n    end\n    if a > 27 and a < 81 then\n   \
    \     return true\n    end\n    if a > 81 and a < 256 then\n        return true\n\
    \    end\n    if a > 256 and a < 512 then\n        return true\n    end\n    if\
    \ a > 512 and a < 1024 then\n        return true\n    end\n    if a > 1024 and\
    \ a < 2048 then\n        return true\n    end\n    if a > 2048 and a < 4096 then\n\
    \        return true\n    end\n    if a > 4096 and a < 8192 then\n        return\
    \ true\n    end\n    if a > 8192 and a  then\n        return true\n    end\n \
    \   return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8bw7sf5d.lua:63:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp8bw7sf5d.lua:63:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a < 0 then\n\
    \    return false\n  end\n  if a == 0 then\n    return true\n  end\n  if a > 0\
    \ then\n    return false\n  end\n  if a <= 1 then\n    return true\n  end\n  if\
    \ a <= 3 then\n    return true\n  end\n  if a <= 9 then\n    return true\n  end\n\
    \  if a <= 27 then\n    return true\n  end\n  if a <= 81 then\n    return true\n\
    \  end\n  if a <= 127 then\n    return true\n  end\n  if a <= 255 then\n    return\
    \ true\n  end\n  if a <= 511 then\n    return true\n  end\n  if a <= 1025 then\n\
    \    return true\n  end\n  if a <= 2047 then\n    return true\n  end\n  if a <=\
    \ 4097 then\n    return true\n  end\n  if a <= 8191 then\n    return true\n  end\n\
    \  if a <= 16383 then\n    return true\n  end\n  if a <= 32767 then\n    return\
    \ true\n  end\n  if a <= 65535 then\n    return true\n  end\n  if a <= 131071\
    \ then\n    return true\n  end\n  if a <= 262143 then\n    return true\n  end\n\
    \  if a <= 524287 then\n    return true\n  end\n  if a <= 1048575 then\n    return\
    \ true\n  end\n  if a <= 2097151 then\n    return true\n  end\n  if a <= 4194303\
    \ then\n    return true\n  end\n  if a <= 8388607 then\n    return true\n  end\n\
    \  if a <= 16777215 then\n    return true\n  end\n  if a <= 33554431 then\n  \
    \  return true\n  end\n  if a <= 67108863 then\n    return true\n  end\n  if a\
    \ <= 134217727 then\n    return true\n  end\n  if a <= 268435455 then\n    return\
    \ true\n  end\n  if a <= 536870911 then\n    return true\n  end\n  if a <= 1073741823\
    \ then\n    return true\n  end\n  if a <= 2147483647 then\n    return true\n \
    \ end\n  if a <= 4294967295 then\n    return true\n  end\n  return false\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_szjpby3.lua:126:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp_szjpby3.lua:126:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 then\n        if a % 2 == 0\
    \ then\n            if a % 3 == 0 then\n                if a % 5 == 0 then\n \
    \                   if a % 7 == 0 then\n                        return true\n\
    \                    else\n                        return false\n            \
    \        end\n                else\n                    return false\n       \
    \         end\n            else\n                return false\n            end\n\
    \        else\n            return false\n        end\n    else\n        return\
    \ false\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaq_mp4gz.lua:47:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpaq_mp4gz.lua:47:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a == 1 then\n    return true\n  elseif a == 2 then\n\
    \    return true\n  elseif a == 3 then\n    return true\n  elseif a == 4 then\n\
    \    return true\n  elseif a == 5 then\n    return true\n  elseif a == 6 then\n\
    \    return true\n  elseif a == 7 then\n    return true\n  elseif a == 8 then\n\
    \    return true\n  elseif a == 9 then\n    return true\n  elseif a == 10 then\n\
    \    return true\n  elseif a == 11 then\n    return true\n  elseif a == 12 then\n\
    \    return true\n  elseif a == 13 then\n    return true\n  elseif a == 14 then\n\
    \    return true\n  elseif a == 15 then\n    return true\n  elseif a == 16 then\n\
    \    return true\n  elseif a == 17 then\n    return true\n  elseif a == 18 then\n\
    \    return true\n  elseif a == 19 then\n    return true\n  elseif a == 20 then\n\
    \    return true\n  elseif a == 21 then\n    return true\n  elseif a == 22 then\n\
    \    return true\n  elseif a == 23 then\n    return true\n  elseif a == 24 then\n\
    \    return true\n  elseif a == 25 then\n    return true\n  elseif a == 26 then\n\
    \    return true\n  elseif a == 27 then\n    return true\n  elseif a == 28 then\n\
    \    return true\n  elseif a == 29 then\n    return true\n  elseif a == 30 then\n\
    \    return true\n  elseif a == 31 then\n    return true\n  elseif a == 32 then\n\
    \    return true\n  elseif a == 33 then\n    return true\n  elseif a == 34 then\n\
    \    return true\n  elseif a == 35 then\n    return true\n  elseif a == 36 then\n\
    \    return true\n  elseif a == 37 then\n    return true\n  elseif a == 38 then\n\
    \    return true\n  elseif a == 39 then\n    return true\n  elseif a == 40 then\n\
    \    return true\n  elseif a == 41 then\n    return true\n  elseif a == 42 then\n\
    \    return true\n  elseif a == 43 then\n    return true\n  elseif a == 44 then\n\
    \    return true\n  elseif a == 45 then\n    return true\n  elseif a == 46 then\n\
    \    return true\n  elseif a == 47 then\n    return true\n  elseif a == 48 then\n\
    \    return true\n  elseif a == 49 then\n    return true\n  elseif a == \nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmphtvu4l27.lua:119: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\t-- Write your\
    \ solution here\n\tlocal b = 1\n\twhile b < a do\n\t\tif a == b*b then\n\t\t\t\
    return true\n\t\telse\n\t\t\tb = b + 1\n\t\tend\n\tend\n\treturn false\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
    \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
    \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7e0mbyso.lua:33:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp7e0mbyso.lua:33:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return false end\n  if a == 1 then return true end\n  if a == 2 then return\
    \ true end\n  if a == 3 then return true end\n  if a == 4 then return true end\n\
    \  if a == 5 then return true end\n  if a == 6 then return true end\n  if a ==\
    \ 7 then return true end\n  if a == 8 then return true end\n  if a == 9 then return\
    \ true end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpeb49dkpq.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp3wa21ypl.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  elseif a%1 == 0 then\n    return false\n  elseif a%2 == 0\
    \ then\n    return iscube(a/2) or iscube(a*3) or iscube(a*5)\n  elseif a%3 ==\
    \ 0 then\n    return iscube(a/3) or iscube(a*5) or iscube(a*7)\n  elseif a%5 ==\
    \ 0 then\n    return iscube(a/5) or iscube(a*7) or iscube(a*11)\n  elseif a%7\
    \ == 0 then\n    return iscube(a/7) or iscube(a*11) or iscube(a*13)\n  elseif\
    \ a%11 == 0 then\n    return iscube(a/11) or iscube(a*13) or iscube(a*17)\n  elseif\
    \ a%13 == 0 then\n    return iscube(a/13) or iscube(a*17) or iscube(a*19)\n  elseif\
    \ a%17 == 0 then\n    return iscube(a/17) or iscube(a*19) or iscube(a*23)\n  elseif\
    \ a%19 == 0 then\n    return iscube(a/19) or iscube(a*23) or iscube(a*29)\n  elseif\
    \ a%23 == 0 then\n    return iscube(a/23) or iscube(a*29) or iscube(a*31)\n  elseif\
    \ a%29 == 0 then\n    return iscube(a/29) or iscube(a*31) or iscube(a*37)\n  elseif\
    \ a%31 == 0 then\n    return iscube(a/31) or iscube(a*37) or iscube(a*43)\n  elseif\
    \ a%37 == 0 then\n    return iscube(a/37) or iscube(a*43) or iscube(a*49)\n  elseif\
    \ a%43 == 0 then\n    return iscube(a/43) or iscube(a*49) or iscube(a*55)\n  elseif\
    \ a%49 == 0 then\n    return iscube(a/49) or iscube(a*55) or iscube(a*61)\n  elseif\
    \ a%55 == 0 then\n    return iscube(a/55) or iscube(a*61) or iscube(a*67)\n  elseif\
    \ a%61 == 0 then\n    return iscube(a/61) or iscube(a*67) or iscube(a*73)\n  elseif\
    \ a%67 == 0 then\n    return iscube(a/67) or iscube\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpc0jds_6w.lua:56: ''end'' expected (to close ''if'' at line
    18) near ''lu''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a < 0 then\n\
    \    return false\n  end\n  if a == 0 then\n    return true\n  end\n  if a > 0\
    \ then\n    if a % 3 == 0 then\n      return true\n    end\n    if a % 3 == 1\
    \ then\n      return false\n    end\n    if a % 3 == 2 then\n      return true\n\
    \    end\n  end\n  return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8ht_n4jc.lua:41:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp8ht_n4jc.lua:41:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\tif a == 0 then\n\
    \t\treturn true\n\tend\n\tif a > 0 then\n\t\tif a % 2 == 0 then\n\t\t\tif a %\
    \ 3 == 0 then\n\t\t\t\tif a % 5 == 0 then\n\t\t\t\t\treturn true\n\t\t\t\tend\n\
    \t\t\tend\n\t\tend\n\tend\n\treturn false\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo8f7u7qs.lua:36:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpo8f7u7qs.lua:36:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a == 1 then\n        return true\n\
    \    end\n    if a == 2 then\n        return true\n    end\n    if a == 3 then\n\
    \        return true\n    end\n    if a == 4 then\n        return true\n    end\n\
    \    if a == 5 then\n        return true\n    end\n    if a == 6 then\n      \
    \  return true\n    end\n    if a == 7 then\n        return true\n    end\n  \
    \  if a == 8 then\n        return true\n    end\n    if a == 9 then\n        return\
    \ true\n    end\n    if a == 10 then\n        return true\n    end\n    if a ==\
    \ 11 then\n        return true\n    end\n    if a == 12 then\n        return true\n\
    \    end\n    if a == 13 then\n        return true\n    end\n    if a == 14 then\n\
    \        return true\n    end\n    if a == 15 then\n        return true\n    end\n\
    \    if a == 16 then\n        return true\n    end\n    if a == 17 then\n    \
    \    return true\n    end\n    if a == 18 then\n        return true\n    end\n\
    \    if a == 19 then\n        return true\n    end\n    if a == 20 then\n    \
    \    return true\n    end\n    if a == 21 then\n        return true\n    end\n\
    \    if a == 22 then\n        return true\n    end\n    if a == 23 then\n    \
    \    return true\n    end\n    if a == 24 then\n        return true\n    end\n\
    \    if a == 25 then\n        return true\n    end\n    if a == 26 then\n    \
    \    return true\n    end\n    if a == 27 then\n        return true\n    end\n\
    \    if a == 28 then\n        return true\n    end\n    if a == 29 then\n    \
    \    return true\n    end\n    if a == 30 then\n        return true\n    end\n\
    \    if a == 31 then\n        return true\n    end\n    if a == 32 then\n    \
    \    return true\n    end\n    if a == 33 then\n        return true\n    end\n\
    \    if a == 34 then\n        return true\n    end\n    if a == 35 then\n    \
    \    return true\n    end\n    if a == 36 then\n        return true\n    end\n\
    \    if a == 37 then\n        return true\n    end\n    if a == 38 then\n    \
    \    return true\n    end\n    if a == 39 then\n        return true\n    end\n\
    \    if a == 40 then\n        return true\n    end\n    if a == 41 then\n    \
    \    return true\n    end\n    if a == 42 then\n        return true\n    end\n\
    \    if a == 43 then\n        return true\n    end\n    if a == 44 then\n    \
    \    return true\n    end\n    if a == 45 then\n        return true\n    end\n\
    \    if a == 46 then\n        return true\n    end\n    if a == 47 then\n    \
    \    return true\n    end\n    if a == 48 then\n        return true\n    end\n\
    \    if a == 49 then\n        return true\n    end\n    if a == \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmps91f6xx8.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n\t-- Write your\
    \ code here.\n\treturn true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1z5ek6xq.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp1z5ek6xq.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return true end\n  if a == 1 then return true end\n  if a == 2 then return true\
    \ end\n  if a == 3 then return true end\n  if a == 4 then return true end\n  if\
    \ a == 5 then return true end\n  if a == 6 then return true end\n  if a == 7 then\
    \ return true end\n  if a == 8 then return true end\n  if a == 9 then return true\
    \ end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp3wa21ypl.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\
    \ return false end\n  if a == 1 then return true end\n  if a == 2 then return\
    \ true end\n  if a == 3 then return true end\n  if a == 4 then return true end\n\
    \  if a == 5 then return true end\n  if a == 6 then return true end\n  if a ==\
    \ 7 then return true end\n  if a == 8 then return true end\n  if a == 9 then return\
    \ true end\n  if a == 10 then return true end\n  if a == 11 then return true end\n\
    \  if a == 12 then return true end\n  if a == 13 then return true end\n  if a\
    \ == 14 then return true end\n  if a == 15 then return true end\n  if a == 16\
    \ then return true end\n  if a == 17 then return true end\n  if a == 18 then return\
    \ true end\n  if a == 19 then return true end\n  if a == 20 then return true end\n\
    \  if a == 21 then return true end\n  if a == 22 then return true end\n  if a\
    \ == 23 then return true end\n  if a == 24 then return true end\n  if a == 25\
    \ then return true end\n  if a == 26 then return true end\n  if a == 27 then return\
    \ true end\n  if a == 28 then return true end\n  if a == 29 then return true end\n\
    \  if a == 30 then return true end\n  if a == 31 then return true end\n  if a\
    \ == 32 then return true end\n  if a == 33 then return true end\n  if a == 34\
    \ then return true end\n  if a == 35 then return true end\n  if a == 36 then return\
    \ true end\n  if a == 37 then return true end\n  if a == 38 then return true end\n\
    \  if a == 39 then return true end\n  if a == 40 then return true end\n  if a\
    \ == 41 then return true end\n  if a == 42 then return true end\n  if a == 43\
    \ then return true end\n  if a == 44 then return true end\n  if a == 45 then return\
    \ true end\n  if a == 46 then return true end\n  if a == 47 then return true end\n\
    \  if a == 48 then return true end\n  if a == 49 then return true end\n  if a\
    \ == 50 then return true end\n  if a == 51 then return true end\n  if a == 52\
    \ then return true end\n  if a == 53 then return true end\n  if a == 54 then return\
    \ true end\n  if a == 55 then return true end\n  if a == 56 then return true end\n\
    \  if a == 57 then return true end\n  if a == 58 then return true end\n  if a\
    \ == 59 then return true end\n  if a == 60 then return true end\n  if a == 61\
    \ then \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpeb49dkpq.lua:94: ''end'' expected (to close ''if'' at line
    79) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750355
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n    if a == 0\
    \ then\n        return true\n    end\n    if a > 0 then\n        return false\n\
    \    end\n    if a < 0 then\n        return true\n    end\n    if a <= 0 then\n\
    \        return false\n    end\n    if a > 1 then\n        return true\n    end\n\
    \    if a <= 1 then\n        return false\n    end\n    if a > 2 then\n      \
    \  return true\n    end\n    if a <= 2 then\n        return false\n    end\n \
    \   if a > 3 then\n        return true\n    end\n    if a <= 3 then\n        return\
    \ false\n    end\n    if a > 4 then\n        return true\n    end\n    if a <=\
    \ 4 then\n        return false\n    end\n    if a > 5 then\n        return true\n\
    \    end\n    if a <= 5 then\n        return false\n    end\n    if a > 6 then\n\
    \        return true\n    end\n    if a <= 6 then\n        return false\n    end\n\
    \    if a > 7 then\n        return true\n    end\n    if a <= 7 then\n       \
    \ return false\n    end\n    if a > 8 then\n        return true\n    end\n   \
    \ if a <= 8 then\n        return false\n    end\n    if a > 9 then\n        return\
    \ true\n    end\n    if a <= 9 then\n        return false\n    end\n    if a >\
    \ 10 then\n        return true\n    end\n    if a <= 10 then\n        return false\n\
    \    end\n    if a > 11 then\n        return true\n    end\n    if a <= 11 then\n\
    \        return false\n    end\n    if a > 12 then\n        return true\n    end\n\
    \    if a <= 12 then\n        return false\n    end\n    if a > 13 then\n    \
    \    return true\n    end\n    if a <= 13 then\n        return false\n    end\n\
    \    if a > 14 then\n        return true\n    end\n    if a <= 14 then\n     \
    \   return false\n    end\n    if a > 15 then\n        return true\n    end\n\
    \    if a <= 15 then\n        return false\n    end\n    if a > 16 then\n    \
    \    return true\n    end\n    if a <= 16 then\n        return false\n    end\n\
    \    if a > 17 then\n        return true\n    end\n    if a <= 17 then\n     \
    \   return false\n    end\n    if a > 18 then\n        return true\n    end\n\
    \    if a <= 18 then\n        return false\n    end\n    if a > 19 then\n    \
    \    return true\n    end\n    if a <= 19 then\n        return false\n    end\n\
    \    if a > 20 then\n        return true\n    end\n    if a <= 20 then\n     \
    \   return false\n    end\n    if a > 21 then\n        return true\n    end\n\
    \    if a <= 21 then\n        return false\n    end\n    if a > 22 then\n    \
    \    return \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = iscube\n    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2),\
    \ false)\n    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64),\
    \ true)\n    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
    \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
    \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp8phn7zwi.lua:158: ''end'' expected (to close ''if'' at line
    156) near ''=''

    '
  stdout: ''
  timestamp: 1659822001
- exit_code: 1
  program: "-- Write a function that takes an integer a and returns True \n-- if this\
    \ ingeger is a cube of some integer number.\n-- Note: you may assume the input\
    \ is always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n\
    -- false\n-- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n\
    -- true\n-- >>> iscube(180)\n-- false\nlocal function iscube(a)\n  if a == 0 then\n\
    \    return true\n  end\n  if a == 1 then\n    return true\n  end\n  if a == 2\
    \ then\n    return true\n  end\n  if a == 3 then\n    return true\n  end\n  if\
    \ a == 4 then\n    return true\n  end\n  if a == 5 then\n    return true\n  end\n\
    \  if a == 6 then\n    return true\n  end\n  if a == 7 then\n    return true\n\
    \  end\n  if a == 8 then\n    return true\n  end\n  if a == 9 then\n    return\
    \ true\n  end\n  if a == 10 then\n    return true\n  end\n  if a == 11 then\n\
    \    return true\n  end\n  if a == 12 then\n    return true\n  end\n  if a ==\
    \ 13 then\n    return true\n  end\n  if a == 14 then\n    return true\n  end\n\
    \  if a == 15 then\n    return true\n  end\n  if a == 16 then\n    return true\n\
    \  end\n  if a == 17 then\n    return true\n  end\n  if a == 18 then\n    return\
    \ true\n  end\n  if a == 19 then\n    return true\n  end\n  if a == 20 then\n\
    \    return true\n  end\n  if a == 21 then\n    return true\n  end\n  if a ==\
    \ 22 then\n    return true\n  end\n  if a == 23 then\n    return true\n  end\n\
    \  if a == 24 then\n    return true\n  end\n  if a == 25 then\n    return true\n\
    \  end\n  if a == 26 then\n    return true\n  end\n  if a == 27 then\n    return\
    \ true\n  end\n  if a == 28 then\n    return true\n  end\n  if a == 29 then\n\
    \    return true\n  end\n  if a == 30 then\n    return true\n  end\n  if a ==\
    \ 31 then\n    return true\n  end\n  if a == 32 then\n    return true\n  end\n\
    \  if a == 33 then\n    return true\n  end\n  if a == 34 then\n    return true\n\
    \  end\n  if a == 35 then\n    return true\n  end\n  if a == 36 then\n    return\
    \ true\n  end\n  if a == 37 then\n    return true\n  end\n  if a == 38 then\n\
    \    return true\n  end\n  if a == 39 then\n    return true\n  end\n  if a ==\
    \ 40 then\n    return true\n  end\n  if a == 41 then\n    return true\n  end\n\
    \  if a == 42 then\n    return true\n  end\n  if a == 43 then\n    return true\n\
    \  end\n  if a == 44 then\n    return true\n  end\n  if a == 45 then\n    return\
    \ true\n  end\n  if a == 46 then\n    return true\n  end\n  if a == 47 then\n\
    \    return true\n  end\n  if a == 48 then\n    return true\n  end\n  if a ==\
    \ 49 then\n    return true\n  end\n  if a == \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = iscube\n    lu.assertEquals(candidate(1),\
    \ true)\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(-1),\
    \ true)\n    lu.assertEquals(candidate(64), true)\n    lu.assertEquals(candidate(180),\
    \ false)\n    lu.assertEquals(candidate(1000), true)\n    lu.assertEquals(candidate(0),\
    \ true)\n    lu.assertEquals(candidate(1729), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmppefjperv.lua:169: ''then'' expected near ''=''

    '
  stdout: ''
  timestamp: 1659750355

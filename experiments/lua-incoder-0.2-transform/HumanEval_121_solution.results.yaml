language: lua
name: HumanEval_121_solution
results:
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjq4rjb3u.lua:23:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpjq4rjb3u.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjq4rjb3u.lua:23:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpjq4rjb3u.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then\n    return\
    \ 0\n  end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n  \
    \    sum = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw1_0tl2o.lua:25:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpw1_0tl2o.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then\n    return\
    \ 0\n  end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n  \
    \    sum = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw1_0tl2o.lua:25:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpw1_0tl2o.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjq4rjb3u.lua:23:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpjq4rjb3u.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then\n    return\
    \ 0\n  end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n  \
    \    sum = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw1_0tl2o.lua:25:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpw1_0tl2o.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for _, v in\
    \ ipairs(lst) do\n    if v % 2 == 1 then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1xzwpy7d.lua:22:\
    \ expected: 12, actual: 13\nstack traceback:\n\t/tmp/tmp1xzwpy7d.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if lst == nil then\n    return\
    \ 0\n  end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n  \
    \    sum = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpl9vp6__f.lua:25:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpl9vp6__f.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjq4rjb3u.lua:23:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpjq4rjb3u.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 1 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgtktg1f4.lua:24:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmpgtktg1f4.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if lst == nil then\n    return\
    \ 0\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3,\
    \ 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30, 13, 24, 321}), 0)\n   \
    \ lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2, 4,\
    \ 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp7zap9h51.lua:26: ''end'' expected (to close ''function'' at
    line 9) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then\n    return\
    \ 0\n  end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n  \
    \    sum = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw1_0tl2o.lua:25:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpw1_0tl2o.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  -- Base case\n  if #lst ==\
    \ 0 then\n    return 0\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n\
    \    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpj4lmsh0v.lua:27: ''end'' expected (to close ''function'' at
    line 9) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then\n    return\
    \ 0\n  end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n  \
    \    sum = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw1_0tl2o.lua:25:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpw1_0tl2o.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if lst == nil then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 1 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe4m33roq.lua:25:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmpe4m33roq.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823714
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  if #lst == 1 then return lst[1] end\n  local sum = 0\n  for i = 1, #lst\
    \ do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n  return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3,\
    \ 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30, 13, 24, 321}), 0)\n   \
    \ lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2, 4,\
    \ 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqk1cjuvi.lua:24:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpqk1cjuvi.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823714
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjq4rjb3u.lua:23:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpjq4rjb3u.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then\n    return\
    \ 0\n  end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 1 then\n  \
    \    sum = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuuph_nrc.lua:27:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmpuuph_nrc.lua:27: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823714
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjq4rjb3u.lua:23:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpjq4rjb3u.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then\n    return\
    \ 0\n  end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n  \
    \    sum = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw1_0tl2o.lua:25:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpw1_0tl2o.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  if #lst == 1 then return lst[1] end\n  local sum = 0\n  for i = 1, #lst\
    \ do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n  return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3,\
    \ 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30, 13, 24, 321}), 0)\n   \
    \ lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2, 4,\
    \ 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqk1cjuvi.lua:24:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpqk1cjuvi.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823714
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then\n    return\
    \ 0\n  end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n  \
    \    sum = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw1_0tl2o.lua:25:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpw1_0tl2o.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 1 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5vg9700u.lua:25:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmp5vg9700u.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823714
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for _, v in\
    \ ipairs(lst) do\n    if v % 2 == 1 then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1xzwpy7d.lua:22:\
    \ expected: 12, actual: 13\nstack traceback:\n\t/tmp/tmp1xzwpy7d.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjq4rjb3u.lua:23:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpjq4rjb3u.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjq4rjb3u.lua:23:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpjq4rjb3u.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then\n    return\
    \ 0\n  end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n  \
    \    sum = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw1_0tl2o.lua:25:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpw1_0tl2o.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then\n    return\
    \ 0\n  end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n  \
    \    sum = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw1_0tl2o.lua:25:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpw1_0tl2o.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then\n    return\
    \ 0\n  end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 1 then\n  \
    \    sum = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuuph_nrc.lua:27:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmpuuph_nrc.lua:27: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823714
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 1 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgtktg1f4.lua:24:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmpgtktg1f4.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 1 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgtktg1f4.lua:24:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmpgtktg1f4.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjq4rjb3u.lua:23:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpjq4rjb3u.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if lst == nil then\n    return\
    \ 0\n  end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n  \
    \    sum = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpl9vp6__f.lua:25:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpl9vp6__f.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then\n    return\
    \ 0\n  end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n  \
    \    sum = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw1_0tl2o.lua:25:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpw1_0tl2o.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjq4rjb3u.lua:23:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpjq4rjb3u.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then\n    return\
    \ 0\n  end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 1 then\n  \
    \    sum = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuuph_nrc.lua:27:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmpuuph_nrc.lua:27: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823714
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for _, v in\
    \ ipairs(lst) do\n    if v % 2 == 1 then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1xzwpy7d.lua:22:\
    \ expected: 12, actual: 13\nstack traceback:\n\t/tmp/tmp1xzwpy7d.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 1 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgtktg1f4.lua:24:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmpgtktg1f4.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then\n    return\
    \ 0\n  end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 1 then\n  \
    \    sum = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuuph_nrc.lua:27:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmpuuph_nrc.lua:27: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823714
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for _, v in\
    \ ipairs(lst) do\n    if v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpomef33p4.lua:22:\
    \ expected: 12, actual: 8\nstack traceback:\n\t/tmp/tmpomef33p4.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823714
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 1 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgtktg1f4.lua:24:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmpgtktg1f4.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjq4rjb3u.lua:23:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpjq4rjb3u.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for _, v in\
    \ ipairs(lst) do\n    if v % 2 == 1 then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1xzwpy7d.lua:22:\
    \ expected: 12, actual: 13\nstack traceback:\n\t/tmp/tmp1xzwpy7d.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then\n    return\
    \ 0\n  end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n  \
    \    sum = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw1_0tl2o.lua:25:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpw1_0tl2o.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjq4rjb3u.lua:23:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpjq4rjb3u.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for _, v in\
    \ pairs(lst) do\n    if v %2 == 1 then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvmqqktdp.lua:22:\
    \ expected: 12, actual: 13\nstack traceback:\n\t/tmp/tmpvmqqktdp.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823714
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then\n    return\
    \ 0\n  end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n  \
    \    sum = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw1_0tl2o.lua:25:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpw1_0tl2o.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for _, v in\
    \ ipairs(lst) do\n    if v % 2 == 1 then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1xzwpy7d.lua:22:\
    \ expected: 12, actual: 13\nstack traceback:\n\t/tmp/tmp1xzwpy7d.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then\n    return\
    \ 0\n  end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n  \
    \    sum = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw1_0tl2o.lua:25:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpw1_0tl2o.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 1 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgtktg1f4.lua:24:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmpgtktg1f4.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjq4rjb3u.lua:23:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpjq4rjb3u.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjq4rjb3u.lua:23:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpjq4rjb3u.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjq4rjb3u.lua:23:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpjq4rjb3u.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for _, v in\
    \ pairs(lst) do\n    if v %2 == 1 then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvmqqktdp.lua:22:\
    \ expected: 12, actual: 13\nstack traceback:\n\t/tmp/tmpvmqqktdp.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823714
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then\n    return\
    \ 0\n  end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n  \
    \    sum = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw1_0tl2o.lua:25:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpw1_0tl2o.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then\n    return\
    \ 0\n  end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n  \
    \    sum = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw1_0tl2o.lua:25:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpw1_0tl2o.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  -- Base case\n  if #lst ==\
    \ 0 then\n    return 0\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n\
    \    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpj4lmsh0v.lua:27: ''end'' expected (to close ''function'' at
    line 9) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 1 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgtktg1f4.lua:24:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmpgtktg1f4.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 1 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgtktg1f4.lua:24:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmpgtktg1f4.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for _, v in\
    \ ipairs(lst) do\n    if v % 2 == 1 then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1xzwpy7d.lua:22:\
    \ expected: 12, actual: 13\nstack traceback:\n\t/tmp/tmp1xzwpy7d.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  -- Base case: empty list\n\
    \  if #lst == 0 then\n    return 0\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpnr47igmz.lua:27: ''end'' expected (to close ''function'' at
    line 9) near <eof>

    '
  stdout: ''
  timestamp: 1659823714
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  -- Base case\n  if #lst ==\
    \ 0 then\n    return 0\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n\
    \    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpj4lmsh0v.lua:27: ''end'' expected (to close ''function'' at
    line 9) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjq4rjb3u.lua:23:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpjq4rjb3u.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 1 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgtktg1f4.lua:24:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmpgtktg1f4.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for _, v in\
    \ ipairs(lst) do\n    if v % 2 == 1 then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1xzwpy7d.lua:22:\
    \ expected: 12, actual: 13\nstack traceback:\n\t/tmp/tmp1xzwpy7d.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for _, v in\
    \ ipairs(lst) do\n    if v % 2 == 1 then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1xzwpy7d.lua:22:\
    \ expected: 12, actual: 13\nstack traceback:\n\t/tmp/tmp1xzwpy7d.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 1 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgtktg1f4.lua:24:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmpgtktg1f4.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then\n    return\
    \ 0\n  end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n  \
    \    sum = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw1_0tl2o.lua:25:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpw1_0tl2o.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjq4rjb3u.lua:23:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpjq4rjb3u.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjq4rjb3u.lua:23:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpjq4rjb3u.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 1 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5vg9700u.lua:25:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmp5vg9700u.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823714
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 1 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgtktg1f4.lua:24:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmpgtktg1f4.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 1 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5vg9700u.lua:25:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmp5vg9700u.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823714
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for _, v in\
    \ pairs(lst) do\n    if v % 2 == 1 then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmmljqdo.lua:22:\
    \ expected: 12, actual: 13\nstack traceback:\n\t/tmp/tmpbmmljqdo.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823714
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  -- Base case\n  if #lst ==\
    \ 0 then\n    return 0\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n\
    \    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpj4lmsh0v.lua:27: ''end'' expected (to close ''function'' at
    line 9) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 1 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgtktg1f4.lua:24:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmpgtktg1f4.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for _, v in\
    \ ipairs(lst) do\n    if v % 2 == 1 then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1xzwpy7d.lua:22:\
    \ expected: 12, actual: 13\nstack traceback:\n\t/tmp/tmp1xzwpy7d.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjq4rjb3u.lua:23:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpjq4rjb3u.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for _, v in\
    \ ipairs(lst) do\n    if v % 2 == 1 then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1xzwpy7d.lua:22:\
    \ expected: 12, actual: 13\nstack traceback:\n\t/tmp/tmp1xzwpy7d.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjq4rjb3u.lua:23:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpjq4rjb3u.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjq4rjb3u.lua:23:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpjq4rjb3u.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 1 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgtktg1f4.lua:24:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmpgtktg1f4.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 1 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgtktg1f4.lua:24:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmpgtktg1f4.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for _, v in\
    \ pairs(lst) do\n    if v %2 == 1 then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvmqqktdp.lua:22:\
    \ expected: 12, actual: 13\nstack traceback:\n\t/tmp/tmpvmqqktdp.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823714
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 1 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgtktg1f4.lua:24:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmpgtktg1f4.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  -- Base case\n  if #lst ==\
    \ 0 then\n    return 0\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n\
    \    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpj4lmsh0v.lua:27: ''end'' expected (to close ''function'' at
    line 9) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 1 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgtktg1f4.lua:24:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmpgtktg1f4.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then\n    return\
    \ 0\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3,\
    \ 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30, 13, 24, 321}), 0)\n   \
    \ lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2, 4,\
    \ 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp8q7o6wmf.lua:26: ''end'' expected (to close ''function'' at
    line 9) near <eof>

    '
  stdout: ''
  timestamp: 1659823714
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  -- Base case\n  if lst[1] ==\
    \ nil then return 0 end\n  -- Recursive case\n  if lst[2] == nil then return solution(lst[1])\
    \ + lst[1] end\n  return solution(lst[1]) + solution(lst[2]) + lst[2]\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = solution\n\
    \    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3,\
    \ 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30, 13, 24, 321}), 0)\n   \
    \ lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2, 4,\
    \ 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp77nle2t3.lua:11:\
    \ attempt to index a number value (local 'lst')\nstack traceback:\n\t/tmp/tmp77nle2t3.lua:11:\
    \ in upvalue 'solution'\n\t/tmp/tmp77nle2t3.lua:14: in local 'candidate'\n\t/tmp/tmp77nle2t3.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1659823714
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 1 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgtktg1f4.lua:24:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmpgtktg1f4.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for _, v in\
    \ pairs(lst) do\n    if v % 2 == 1 then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmmljqdo.lua:22:\
    \ expected: 12, actual: 13\nstack traceback:\n\t/tmp/tmpbmmljqdo.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823714
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 1 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgtktg1f4.lua:24:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmpgtktg1f4.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjq4rjb3u.lua:23:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpjq4rjb3u.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for _, v in\
    \ ipairs(lst) do\n    if v % 2 == 1 then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1xzwpy7d.lua:22:\
    \ expected: 12, actual: 13\nstack traceback:\n\t/tmp/tmp1xzwpy7d.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  -- Base case\n  if #lst ==\
    \ 0 then\n    return 0\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n\
    \    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpj4lmsh0v.lua:27: ''end'' expected (to close ''function'' at
    line 9) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjq4rjb3u.lua:23:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpjq4rjb3u.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 1 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgtktg1f4.lua:24:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmpgtktg1f4.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjq4rjb3u.lua:23:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpjq4rjb3u.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for _, v in\
    \ ipairs(lst) do\n    if v % 2 == 1 then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1xzwpy7d.lua:22:\
    \ expected: 12, actual: 13\nstack traceback:\n\t/tmp/tmp1xzwpy7d.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if lst == nil then\n    return\
    \ 0\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3,\
    \ 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30, 13, 24, 321}), 0)\n   \
    \ lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2, 4,\
    \ 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp7zap9h51.lua:26: ''end'' expected (to close ''function'' at
    line 9) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 1 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgtktg1f4.lua:24:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmpgtktg1f4.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 1 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgtktg1f4.lua:24:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmpgtktg1f4.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 1 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgtktg1f4.lua:24:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmpgtktg1f4.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjq4rjb3u.lua:23:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpjq4rjb3u.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjq4rjb3u.lua:23:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpjq4rjb3u.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjq4rjb3u.lua:23:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpjq4rjb3u.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 1 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgtktg1f4.lua:24:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmpgtktg1f4.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 1 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgtktg1f4.lua:24:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmpgtktg1f4.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  -- Base case\n  if #lst ==\
    \ 0 then\n    return 0\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n\
    \    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpj4lmsh0v.lua:27: ''end'' expected (to close ''function'' at
    line 9) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 1 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgtktg1f4.lua:24:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmpgtktg1f4.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 1 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgtktg1f4.lua:24:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmpgtktg1f4.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for _, v in\
    \ ipairs(lst) do\n    if v % 2 == 1 then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1xzwpy7d.lua:22:\
    \ expected: 12, actual: 13\nstack traceback:\n\t/tmp/tmp1xzwpy7d.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then\n    return\
    \ 0\n  end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 1 then\n  \
    \    sum = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuuph_nrc.lua:27:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmpuuph_nrc.lua:27: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823714
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 1 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5vg9700u.lua:25:\
    \ expected: 0, actual: 54\nstack traceback:\n\t/tmp/tmp5vg9700u.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823714
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for _, v in\
    \ ipairs(lst) do\n    if v % 2 == 1 then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1xzwpy7d.lua:22:\
    \ expected: 12, actual: 13\nstack traceback:\n\t/tmp/tmp1xzwpy7d.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if lst == nil then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcrnkhtak.lua:23:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpcrnkhtak.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823714
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjq4rjb3u.lua:23:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpjq4rjb3u.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then\n    return\
    \ 0\n  end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n  \
    \    sum = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw1_0tl2o.lua:25:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpw1_0tl2o.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then return 0\
    \ end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjq4rjb3u.lua:23:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpjq4rjb3u.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  if #lst == 0 then\n    return\
    \ 0\n  end\n  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n  \
    \    sum = sum + lst[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = solution\n    lu.assertEquals(candidate({5,\
    \ 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw1_0tl2o.lua:25:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpw1_0tl2o.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393
- exit_code: 1
  program: "-- Given a non-empty list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n-- Examples\n-- >>> solution({5, 8, 7,\
    \ 1})\n-- 12\n-- >>> solution({3, 3, 3, 3, 3})\n-- 9\n-- >>> solution({30, 13,\
    \ 24, 321})\n-- 0\nlocal function solution(lst)\n  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = solution\n    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n   \
    \ lu.assertEquals(candidate({3, 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30,\
    \ 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5, 9}), 5)\n    lu.assertEquals(candidate({2,\
    \ 4, 8}), 0)\n    lu.assertEquals(candidate({30, 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3,\
    \ 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltzqp51t.lua:22:\
    \ expected: 12, actual: 9\nstack traceback:\n\t/tmp/tmpltzqp51t.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750393

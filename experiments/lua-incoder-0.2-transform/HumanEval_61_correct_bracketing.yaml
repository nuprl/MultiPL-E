name: HumanEval_61_correct_bracketing
language: lua
prompt: "-- brackets is a string of \"(\" and \")\".\n-- return True if every opening\
  \ bracket has a corresponding closing bracket.\n-- >>> correct_bracketing('(')\n\
  -- false\n-- >>> correct_bracketing('()')\n-- true\n-- >>> correct_bracketing('(()())')\n\
  -- true\n-- >>> correct_bracketing(')(()')\n-- false\nlocal function correct_bracketing(brackets)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = correct_bracketing\n\
  \    lu.assertEquals(candidate('()'), true)\n    lu.assertEquals(candidate('(()())'),\
  \ true)\n    lu.assertEquals(candidate('()()(()())()'), true)\n    lu.assertEquals(candidate('()()((()()())())(()()(()))'),\
  \ true)\n    lu.assertEquals(candidate('((()())))'), false)\n    lu.assertEquals(candidate(')(()'),\
  \ false)\n    lu.assertEquals(candidate('('), false)\n    lu.assertEquals(candidate('(((('),\
  \ false)\n    lu.assertEquals(candidate(')'), false)\n    lu.assertEquals(candidate('(()'),\
  \ false)\n    lu.assertEquals(candidate('()()(()())())(()'), false)\n    lu.assertEquals(candidate('()()(()())()))()'),\
  \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local opening_brackets = brackets:gsub('%[(%)%]', function(x)\n \
    \   return x:reverse()\n  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]',\
    \ function(x)\n    return x:reverse()\n  end)\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  for i = 1, opening_brackets_count do\n    local opening_bracket = opening_brackets:sub(1,\
    \ i)\n    local closing_bracket = closing_brackets:sub(1, i)\n    if opening_bracket\
    \ ~= closing_bracket then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n\
    \  return opening:find(closing) == nil\nend", "  local opening_brackets = brackets:gsub('%[(%)].*$',\
    \ ''):gsub('%[)]$', '')\n  local closing_brackets = brackets:gsub('%[)](%)$',\
    \ ''):gsub('%[(%)]$', '')\n  return opening_brackets == closing_brackets\nend",
  "  local opening = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n  return\
    \ opening ~= closing and opening ~= '(' and opening ~= ')'\nend", "  local opening_brackets\
    \ = brackets:gsub('%[(%)].*$', '\\0')\n  local closing_brackets = brackets:gsub('%[%)](.*)$',\
    \ '\\0')\n  local opening_brackets_count = opening_brackets:len()\n  local closing_brackets_count\
    \ = closing_brackets:len()\n  local opening_brackets_table = { }\n  local closing_brackets_table\
    \ = { }\n  for i = 1, opening_brackets_count do\n    local opening_bracket = opening_brackets:sub(i,\
    \ i)\n    opening_brackets_table[opening_bracket] = true\n  end\n  for i = 1,\
    \ closing_brackets_count do\n    local closing_bracket = closing_brackets:sub(i,\
    \ i)\n    closing_brackets_table[closing_bracket] = true\n  end\n  for opening_bracket,\
    \ closing_bracket in pairs(opening_brackets_table) do\n    if not closing_brackets_table[closing_bracket]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub('%[(%)%]', function(x)\n    return x:lower()\n  end)\n  local\
    \ closing_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n    return x:lower()\n\
    \  end)\n  for i = 1, #opening_brackets do\n    local opening = opening_brackets[i]\n\
    \    local closing = closing_brackets[i]\n    if opening ~= closing then\n   \
    \   return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub('(%[(%)%])', function(x)\n    return x:reverse()\n  end)\n \
    \ local closing_brackets = brackets:gsub('(%[%[(%)]%])', function(x)\n    return\
    \ x:reverse()\n  end)\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n\
    \  return opening:find(closing) == nil\nend", "  local open_brackets = brackets:gsub('%[(%)%]',\
    \ function(x)\n    return x:reverse()\n  end)\n  local close_brackets = brackets:gsub('%[%[(%)]%]',\
    \ function(x)\n    return x:reverse()\n  end)\n  return open_brackets:len() ==\
    \ close_brackets:len() and\n    open_brackets:all(ipairs, close_brackets:len())\
    \ and\n    open_brackets:all(ipairs, close_brackets:len()) and\n    open_brackets:all(ipairs,\
    \ close_brackets:len())\nend", "  local opening = brackets:sub(1, 1)\n  local\
    \ closing = brackets:sub(2, 2)\n  return opening:find(closing) == nil\nend", " \
    \ local opening = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n  return\
    \ opening:find(closing) == nil\nend", "  local opening_brackets = brackets:gsub('%[(%)][(%)]','')\n\
    \  local closing_brackets = brackets:gsub('%[)](%)','')\n  return opening_brackets\
    \ ~= closing_brackets\nend", "  local opening = brackets:sub(1,1)\n  local closing\
    \ = brackets:sub(2,2)\n  return opening and closing and opening:sub(1,1) == closing:sub(1,1)\n\
    end", "  local opening = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n\
    \  return opening and closing and opening == closing\nend", "  local opening_brackets\
    \ = brackets:gsub('%[(%)][(%)]+', '()')\n  local closing_brackets = brackets:gsub('%[)](%)][)]+',\
    \ '()')\n  return opening_brackets ~= closing_brackets\nend", "  local opening_brackets\
    \ = brackets:gsub('%[(%)%]', function(x)\n    return x:reverse()\n  end)\n  local\
    \ closing_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n    return x:reverse()\n\
    \  end)\n  return opening_brackets:len() == closing_brackets:len()\nend", "  local\
    \ opening_brackets = brackets:gsub('(%[(%)%])', function(x)\n    return x:reverse()\n\
    \  end)\n  local closing_brackets = brackets:gsub('(%[%[(%)]%])', function(x)\n\
    \    return x:reverse()\n  end)\n  return opening_brackets:len() == closing_brackets:len()\
    \ and\n    opening_brackets:all(ipairs, 1, closing_brackets:len()) and\n    closing_brackets:all(ipairs,\
    \ 1, opening_brackets:len())\nend", "  local opening_brackets = brackets:gsub('%[(%)%]',\
    \ function(x)\n    return x:reverse()\n  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]',\
    \ function(x)\n    return x:reverse()\n  end)\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  local opening_brackets_index = 1\n  local closing_brackets_index = 1\n  while\
    \ opening_brackets_index < opening_brackets_count do\n    local opening_bracket\
    \ = opening_brackets:sub(opening_brackets_index, opening_brackets_index)\n   \
    \ local closing_bracket = closing_brackets:sub(closing_brackets_index, closing_brackets_index)\n\
    \    if opening_bracket ~= closing_bracket then\n      return false\n    end\n\
    \    opening_brackets_index = opening_brackets_index + 1\n    closing_brackets_index\
    \ = closing_brackets_index + 1\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub('%[(%)%]', function(x)\n    return x:reverse()\n  end)\n  local\
    \ closing_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n    return x:reverse()\n\
    \  end)\n  return opening_brackets:len() == closing_brackets:len()\nend", "  local\
    \ opening = brackets:sub(1, 1)\n  local closing = brackets:sub(2, 2)\n  return\
    \ opening and closing and opening:sub(1, 1) == closing:sub(1, 1)\nend", "  local\
    \ opening_brackets = brackets:gsub('%[(%)][(%)]', '%s*%2s*')\n  local closing_brackets\
    \ = brackets:gsub('%[)](%)', '%s*%2s*')\n  return opening_brackets ~= closing_brackets\n\
    end", "  local opening_brackets = brackets:gsub('%[(%)].*$', ''):gsub('%[)]$',\
    \ '')\n  local closing_brackets = brackets:gsub('%[)](%)$', ''):gsub('%[(%)]$',\
    \ '')\n  return opening_brackets ~= closing_brackets\nend", "  local opening_brackets\
    \ = brackets:gsub('%[(%)][(%)]', function(x)\n    return x:reverse()\n  end)\n\
    \  local closing_brackets = brackets:gsub('%[)](%)', function(x)\n    return x:reverse()\n\
    \  end)\n  return opening_brackets:len() == closing_brackets:len()\nend", "  local\
    \ open_brackets = brackets:gsub('%[(%)%]', function(x)\n    return x:reverse()\n\
    \  end)\n  local close_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n  \
    \  return x:reverse()\n  end)\n  for i = 1, #open_brackets do\n    if open_brackets[i]\
    \ ~= close_brackets[i] then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening_brackets = brackets:gsub('(%[(%)]+)','%1')\n  local closing_brackets\
    \ = brackets:gsub('(%[%)]+)','%1')\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening_brackets = brackets:gsub('%[(%)%]', function(x)\n    return\
    \ x:reverse()\n  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]',\
    \ function(x)\n    return x:reverse()\n  end)\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  if opening_brackets_count ~= closing_brackets:len()\
    \ then\n    return false\n  end\n  for i = 1, opening_brackets_count do\n    local\
    \ opening_bracket = opening_brackets:sub(i, i)\n    local closing_bracket = closing_brackets:sub(i,\
    \ i)\n    if opening_bracket ~= closing_bracket then\n      return false\n   \
    \ end\n  end\n  return true\nend", "  local opening = brackets:sub(1,1)\n  local\
    \ closing = brackets:sub(2,2)\n  return opening:sub(1,1) ~= closing or opening:sub(2,2)\
    \ ~= closing\nend", "  local opening_brackets = brackets:gsub('%[(%)%]', function(x)\n\
    \    return x:lower()\n  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]',\
    \ function(x)\n    return x:lower()\n  end)\n  local opening_brackets_count =\
    \ opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  if opening_brackets_count ~= closing_brackets_count then\n    return false\n\
    \  end\n  for i = 1, opening_brackets_count do\n    local opening_bracket = opening_brackets:sub(i,\
    \ i)\n    local closing_bracket = closing_brackets:sub(i, i)\n    if opening_bracket\
    \ ~= closing_bracket then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n\
    \  return opening and closing and opening:sub(1,1) == closing:sub(1,1)\nend",
  "  local opening_brackets = brackets:gsub('%[(%)].*$', '%%1'):gsub('%[(%)]$', '%%1')\n\
    \  local closing_brackets = brackets:gsub('%[(%)]$', '%%1'):gsub('%[(%)].*$',\
    \ '%%1')\n  return opening_brackets:len() == closing_brackets:len()\nend", " \
    \ local opening_brackets = brackets:gsub('%[(%)%]', function(x)\n    return x:reverse()\n\
    \  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n\
    \    return x:reverse()\n  end)\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening_brackets = brackets:gsub('%[(%)%]', function(x)\n    return\
    \ x:reverse()\n  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]',\
    \ function(x)\n    return x:reverse()\n  end)\n  return opening_brackets:len()\
    \ == closing_brackets:len()\nend", "  local opening_brackets = brackets:gsub('%[(%)].*$',\
    \ ''):gsub('%[(%)].*$', '')\n  local closing_brackets = brackets:gsub('%[)]%$',\
    \ ''):gsub('%[)]%$', '')\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening_brackets = brackets:gsub('%[(%)%]', function(x)\n    return\
    \ x:lower()\n  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n\
    \    return x:lower()\n  end)\n  for i = 1, #opening_brackets do\n    local opening\
    \ = opening_brackets[i]\n    local closing = closing_brackets[i]\n    if opening\
    \ ~= closing then\n      return false\n    end\n  end\n  return true\nend", " \
    \ local opening_brackets = brackets:gsub('%[(%)][(%)]', function(_, _1, _2)\n\
    \    return brackets\n  end)\n  local closing_brackets = brackets:gsub('%[)](%)',\
    \ function(_, _1, _2)\n    return brackets\n  end)\n  return opening_brackets\
    \ == closing_brackets\nend", "  local opening_brackets = brackets:gsub('(%b)(%b)',\
    \ function(_, opening, closing)\n    return opening:len() == closing:len() and\
    \ opening:len() == 1\n  end)\n  return opening_brackets:len() == 0 and brackets:len()\
    \ == 1 and brackets:sub(1, 1) == '('\nend", "  local opening_brackets = brackets:gsub('%[(%)].*$',\
    \ ''):gsub('%[(%)]$', '')\n  local closing_brackets = brackets:gsub('%[)](%)$',\
    \ ''):gsub('%[)]$', '')\n  return opening_brackets:len() == closing_brackets:len()\
    \ and\n         opening_brackets:gsub('%[(%)]$', ''):gsub('%[(%)]$', '') == closing_brackets\n\
    end", "  brackets = brackets:gsub('(%[(%)%])', function(x)\n    return x:reverse()\n\
    \  end)\n  brackets = brackets:gsub('(%[(%)%])', function(x)\n    return x:reverse()\n\
    \  end)\n  brackets = brackets:gsub('(%[(%)%])', function(x)\n    return x:reverse()\n\
    \  end)\n  brackets = brackets:gsub('(%[(%)%])', function(x)\n    return x:reverse()\n\
    \  end)\n  brackets = brackets:gsub('(%[(%)%])', function(x)\n    return x:reverse()\n\
    \  end)\n  brackets = brackets:gsub('(%[(%)%])', function(x)\n    return x:reverse()\n\
    \  end)\n  brackets = brackets:gsub('(%[(%)%])', function(x)\n    return x:reverse()\n\
    \  end)\n  brackets = brackets:gsub('(%[(%)%])', function(x)\n    return x:reverse()\n\
    \  end)\n  brackets = brackets:gsub('(%[(%)%])', function(x)\n    return x:reverse()\n\
    \  end)\n  brackets = brackets:gsub('(%[(%)%])', function(x)\n    return x:reverse()\n\
    \  end)\n  brackets = brackets:gsub('(%[(%)%])', function(x)\n    return x:reverse()\n\
    \  end)\n  brackets = brackets:gsub('(%[(%)%])', function(x)\n    return x:reverse()\n\
    \  end)\n  brackets = brackets:gsub('(%[(%)%])', function(x)\n    return x:reverse()\n\
    \  end)\n  brackets = brackets:gsub('(%[(%)%])', function(x)\n    return x:reverse()\n\
    \  end)\n  brackets = brackets:gsub('(%[(%)%])', function(x)\n    return x:reverse()\n\
    \  end)\n  brackets = brackets:gsub('(%[(%)%])', function(x)\n    return x:reverse()\n\
    \  end)\n  brackets = brackets:gsub('(%[(%)%])', function(x)\n    return x:reverse()\n\
    \  end)\n  brackets = brackets:gsub('(%[(%)%])', function(x)\n    return x:reverse()\n\
    \  end)\n  brackets = brackets:gsub('(%[(%)%])', function(x)\n    return x:reverse()\n\
    \  end)\n  brackets = brackets:gsub('(%[(%)%])', function(x)\n", "  local opening_brackets\
    \ = brackets:gsub('%[(%)%]', function(x)\n    return x:lower()\n  end)\n  local\
    \ closing_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n    return x:lower()\n\
    \  end)\n  return opening_brackets:len() == closing_brackets:len()\nend", "  local\
    \ opening = brackets:sub(1, 1)\n  local closing = brackets:sub(2, 1)\n  return\
    \ opening and closing and opening:sub(1, 1) == closing:sub(1, 1)\nend", "  local\
    \ opening = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n  local opening_brackets\
    \ = opening:gsub('%W','()'):gsub('%W','()')\n  local closing_brackets = closing:gsub('%W','()'):gsub('%W','()')\n\
    \  local opening_brackets_count = opening_brackets:len()\n  local closing_brackets_count\
    \ = closing_brackets:len()\n  return opening_brackets_count == closing_brackets_count\n\
    end", "  local open_brackets = brackets:gsub('%[(%)%]', function(x)\n    return\
    \ x:reverse()\n  end)\n  local close_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n\
    \    return x:reverse()\n  end)\n  return open_brackets:len() == close_brackets:len()\
    \ and\n    open_brackets:all() ~= close_brackets:all()\nend", "  local opening_brackets\
    \ = brackets:gsub('%[(%)][(%)]', function(x)\n    return x:reverse()\n  end)\n\
    \  local closing_brackets = brackets:gsub('%[)](%)', function(x)\n    return x:reverse()\n\
    \  end)\n  return opening_brackets:len() == closing_brackets:len() and\n    opening_brackets:all(ipairs,\
    \ 1, closing_brackets:len()) and\n    closing_brackets:all(ipairs, 1, opening_brackets:len())\n\
    end", "  local opening_brackets = brackets:gsub('%[(%)%]', function(x)\n    return\
    \ x:reverse()\n  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]',\
    \ function(x)\n    return x:reverse()\n  end)\n  for i = 1, #opening_brackets\
    \ do\n    if opening_brackets[i] != closing_brackets[i] then\n      return false\n\
    \    end\n  end\n  return true\nend", "  local opening_brackets = brackets:gsub('%[(%)%]',\
    \ function(x)\n    return x:reverse()\n  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]',\
    \ function(x)\n    return x:reverse()\n  end)\n  return opening_brackets:len()\
    \ == closing_brackets:len() and\n    opening_brackets:all() ~= closing_brackets:all()\n\
    end", "  local opening_brackets = brackets:gsub('%[(%)%]', '')\n  local closing_brackets\
    \ = brackets:gsub('%[%[(%)]%]', '')\n  local opening_brackets_count = opening_brackets:count('(')\n\
    \  local closing_brackets_count = closing_brackets:count('(')\n  return opening_brackets_count\
    \ == closing_brackets_count\nend", "  local opening = brackets:sub(1,1)\n  local\
    \ closing = brackets:sub(2,2)\n  return opening ~= closing and opening ~= '('\
    \ and opening ~= ')'\nend", "  brackets = brackets:gsub('()', ' ')\n  brackets\
    \ = brackets:gsub('[]', ' ')\n  brackets = brackets:gsub('[()()]', ' ')\n  brackets\
    \ = brackets:gsub('[][]', ' ')\n  brackets = brackets:gsub('[()]', ' ')\n  brackets\
    \ = brackets:gsub('[]()', ' ')\n  brackets = brackets:gsub('[][]', ' ')\n  brackets\
    \ = brackets:gsub('[()]', ' ')\n  brackets = brackets:gsub('[]()', ' ')\n  brackets\
    \ = brackets:gsub('[][]', ' ')\n  brackets = brackets:gsub('[()]', ' ')\n  brackets\
    \ = brackets:gsub('[]()', ' ')\n  brackets = brackets:gsub('[][]', ' ')\n  brackets\
    \ = brackets:gsub('[()]', ' ')\n  brackets = brackets:gsub('[]()', ' ')\n  brackets\
    \ = brackets:gsub('[][]', ' ')\n  brackets = brackets:gsub('[()]', ' ')\n  brackets\
    \ = brackets:gsub('[]()', ' ')\n  brackets = brackets:gsub('[][]', ' ')\n  brackets\
    \ = brackets:gsub('[()]', ' ')\n  brackets = brackets:gsub('[]()', ' ')\n  brackets\
    \ = brackets:gsub('[][]', ' ')\n  brackets = brackets:gsub('[()]', ' ')\n  brackets\
    \ = brackets:gsub('[]()', ' ')\n  brackets = brackets:gsub('[][]', ' ')\n  brackets\
    \ = brackets:gsub('[()]', ' ')\n  brackets = brackets:gsub('[]()', ' ')\n  brackets\
    \ = brackets:gsub('[][]', ' ')\n  brackets = brackets:gsub('[()]', ' ')\n  brackets\
    \ = brackets:gsub('[]()', ' ')\n  brackets = brackets:gsub('[][]', ' ')\n  brackets\
    \ = brackets:gsub('[()]', ' ')\n  brackets = brackets:gsub('[]()', ' ')\n  brackets\
    \ = brackets:gsub('[][]', ' ')\n  brackets = brackets:gsub('[()]', ' ')\n  brackets\
    \ = brackets:gsub('[]()', ' ')\n  brackets = brackets:gsub('[][]', ' ')\n  brackets\
    \ = brackets:gsub('[()]', ' ')\n  brackets = brackets:gsub('[]()', ' ')\n  brackets\
    \ = brackets:gsub('[][]', ' ')\n  brackets = brackets:g", "  local opening_brackets\
    \ = brackets:gsub('%[(%)%]', function(x)\n    return x:reverse()\n  end)\n  local\
    \ closing_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n    return x:reverse()\n\
    \  end)\n  return opening_brackets:len() == closing_brackets:len()\nend", "  local\
    \ opening_brackets = brackets:gsub('%[(%)%]', function(x)\n    return x:reverse()\n\
    \  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n\
    \    return x:reverse()\n  end)\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local open_brackets = brackets:gsub('%[(%)%]', function(x)\n    return\
    \ x:reverse()\n  end)\n  local close_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n\
    \    return x:reverse()\n  end)\n  return open_brackets:len() == close_brackets:len()\n\
    end", "  local opening_brackets = brackets:gsub('%[(%)%]', function(x)\n    return\
    \ x:lower()\n  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n\
    \    return x:lower()\n  end)\n  for i = 1, #opening_brackets do\n    local opening_bracket\
    \ = opening_brackets[i]\n    local closing_bracket = closing_brackets[i]\n   \
    \ if opening_bracket ~= closing_bracket then\n      return false\n    end\n  end\n\
    \  return true\nend", "  local opening_brackets = brackets:gsub('%[(%)%]', function(x)\n\
    \    return x:reverse()\n  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]',\
    \ function(x)\n    return x:reverse()\n  end)\n  return opening_brackets:len()\
    \ == closing_brackets:len()\nend", "  local opening_brackets = brackets:gsub('%[(%)].*$',\
    \ '\\0')\n  local closing_brackets = brackets:gsub('%[)]%', '\\0')\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  if opening_brackets_count ~= closing_brackets_count then\n    return false\n\
    \  end\n  for i = 1, opening_brackets_count do\n    local opening_bracket = opening_brackets:sub(i,\
    \ i)\n    local closing_bracket = closing_brackets:sub(i, i)\n    if opening_bracket\
    \ ~= closing_bracket then\n      return false\n    end\n  end\n  return true\n\
    end", "  local open_brackets = brackets:gsub('%[(%)][(%)]', function(x)\n    return\
    \ x:reverse()\n  end)\n  local close_brackets = brackets:gsub('%[)](%)', function(x)\n\
    \    return x:reverse()\n  end)\n  return open_brackets:len() == close_brackets:len()\
    \ and\n    open_brackets:all() ~= close_brackets:all()\nend", "  local opening\
    \ = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n  return opening:find(closing)\
    \ == nil\nend", "  local open_brackets = brackets:gsub('(%[(%)%[%)]%[%)]%)', '')\n\
    \  local close_brackets = brackets:gsub('(%[(%)%[%)]%[%)]%)', '[%1]')\n  return\
    \ open_brackets == close_brackets\nend", "  local opening_brackets = brackets:gsub('%[(%)].*$',\
    \ ''):gsub('%[(%)]$', '')\n  local closing_brackets = brackets:gsub('%[)](%).*$',\
    \ ''):gsub('%[)](%)$', '')\n  return opening_brackets ~= closing_brackets\nend",
  "  local opening_brackets = brackets:gsub('%[(%)][(%)]', '%s*%1*%s*') -- replace\
    \ all opening brackets with opening brackets plus zero or more closing brackets\n\
    \  local closing_brackets = brackets:gsub('%[)](%)', '%s*%1*%s*') -- replace all\
    \ closing brackets with closing brackets plus zero or more opening brackets\n\
    \  return opening_brackets:len() == closing_brackets:len() and opening_brackets:gsub('%[(%)]',\
    \ '%s*%1*%s*') == closing_brackets:gsub('%[)](%)', '%s*%1*%s*') -- replace all\
    \ opening brackets with opening brackets plus zero or more closing brackets\n\
    end", "  local opening = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n\
    \  local opening_count = brackets:sub(1,1):len()\n  local opening_count2 = brackets:sub(2,2):len()\n\
    \  if opening_count ~= opening_count2 then\n    return false\n  end\n  local opening_count3\
    \ = brackets:sub(3,3):len()\n  if opening_count ~= opening_count3 then\n    return\
    \ false\n  end\n  local opening_count4 = brackets:sub(4,4):len()\n  if opening_count\
    \ ~= opening_count4 then\n    return false\n  end\n  local opening_count5 = brackets:sub(5,5):len()\n\
    \  if opening_count ~= opening_count5 then\n    return false\n  end\n  local opening_count6\
    \ = brackets:sub(6,6):len()\n  if opening_count ~= opening_count6 then\n    return\
    \ false\n  end\n  local opening_count7 = brackets:sub(7,7):len()\n  if opening_count\
    \ ~= opening_count7 then\n    return false\n  end\n  local opening_count8 = brackets:sub(8,8):len()\n\
    \  if opening_count ~= opening_count8 then\n    return false\n  end\n  local opening_count9\
    \ = brackets:sub(9,9):len()\n  if opening_count ~= opening_count9 then\n    return\
    \ false\n  end\n  local opening_count10 = brackets:sub(10,10):len()\n  if opening_count\
    \ ~= opening_count10 then\n    return false\n  end\n  local opening_count11 =\
    \ brackets:sub(11,11):len()\n  if opening_count ~= opening_count11 then\n    return\
    \ false\n  end\n  local opening_count12 = brackets:sub(12,12):len()\n  if opening_count\
    \ ~= opening_count12 then\n    return false\n  end\n  local opening_count13 =\
    \ brackets:sub(13,13):len()\n  if opening_count ~= opening_count13 then\n    return\
    \ false\n  end\n  local opening_count14 = brackets:sub(14,14):len()\n  if opening_count\
    \ ~= opening_count14 then\n    return false\n  end\n  local opening_count15 =\
    \ brackets:sub(15,15):len()\n  if opening_count ~= opening_count15 then\n    return\
    \ false\n  end\n  local opening_count16 = brackets:sub(16,16):len()\n  if opening_count\
    \ ~= opening_count16 then\n    return false\n  end\n  ", "  brackets = brackets:gsub('%[(%)]',\
    \ '()')\n  brackets = brackets:gsub('%[%)]', '()')\n  brackets = brackets:gsub('%[%[(%)]',\
    \ '()')\n  brackets = brackets:gsub('%[(%)]%[(%)]', '()()()')\n  brackets = brackets:gsub('%[%)]%[%)]',\
    \ '()()()')\n  brackets = brackets:gsub('%[%[(%)]%[%)]', '()()()')\n  brackets\
    \ = brackets:gsub('%[(%)]%[(%)]%[(%)]', '()()()()')\n  brackets = brackets:gsub('%[%)]%[%)]%[%)]',\
    \ '()()()()')\n  brackets = brackets:gsub('%[%[(%)]%[%)]%[%)]%[%)]', '()()()()()')\n\
    \  brackets = brackets:gsub('%[(%)]%[(%)]%[(%)]%[(%)]', '()()()()()')\n  brackets\
    \ = brackets:gsub('%[%)]%[%)]%[%)]%[%)]%[%)]', '()()()()()')\n  brackets = brackets:gsub('%[%[(%)]%[%)]%[%)]%[%)]%[%)]%[%)]',\
    \ '()()()()()()')\n  brackets = brackets:gsub('%[(%)]%[(%)]%[(%)]%[(%)]%[(%)]%[(%)]',\
    \ '()()()()()()')\n  brackets = brackets:gsub('%[%)]%[%)]%[%)]%[%)]%[%)]%[%)]%[%)]',\
    \ '()()()()()()()')\n  brackets = brackets:gsub('%[%[(%)]%[%)]%[%)]%[%)]%[%)]%[%)]%[%)]%[%)]',\
    \ '()()()()()()()')\n  brackets = brackets:gsub('%[(%)]%[(%)]%[(%)]%[(%)]%[(%)]%[(%)]%[(%)]%[(%)]',\
    \ '()()()()()()()()')\n  brackets = brackets:", "  local opening_brackets = brackets:gsub('%[(%)].*$',\
    \ ''):gsub('%[)]%', '')\n  local closing_brackets = brackets:gsub('%[)]%', ''):gsub('%[(%)].*$',\
    \ '')\n  return opening_brackets:len() == closing_brackets:len()\nend", "  local\
    \ opening_brackets = brackets:gsub('%[(%)%]', function(x)\n    return x:reverse()\n\
    \  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n\
    \    return x:reverse()\n  end)\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n\
    \  local opening_count = brackets:sub(1,1):len()\n  local opening_opening = brackets:sub(1,opening_count)\n\
    \  local opening_closing = brackets:sub(opening_count+1,opening_count+opening_opening)\n\
    \  local opening_opening_count = opening_opening:len()\n  local opening_opening_opening\
    \ = opening_opening:sub(1,opening_opening_count)\n  local opening_opening_closing_count\
    \ = opening_opening_closing:len()\n  local opening_opening_opening_closing = opening_opening_closing:sub(1,opening_opening_closing_count)\n\
    \  local opening_opening_closing_opening = opening_opening_closing:sub(opening_opening_closing_count+1,opening_opening_closing_count+opening_opening_opening)\n\
    \  local opening_opening_closing_opening_count = opening_opening_closing_opening:len()\n\
    \  local opening_opening_closing_opening_opening = opening_opening_closing_opening:sub(1,opening_opening_closing_opening_count)\n\
    \  local opening_opening_closing_opening_opening_count = opening_opening_closing_opening_opening:len()\n\
    \  local opening_opening_closing_opening_opening_opening = opening_opening_closing_opening_opening:sub(1,opening_opening_closing_opening_opening_count)\n\
    \  local opening_opening_closing_opening_opening_opening_count = opening_opening_closing_opening_opening_opening:len()\n\
    \  local opening_opening_closing_opening_opening_opening_opening = opening_opening_closing_opening_opening_opening:sub(1,opening_opening_closing_opening_opening_opening_count)\n\
    \  local opening_opening_closing_opening_opening_opening_opening_count = opening_opening_closing_opening_opening_opening_opening:len()\n\
    \  local opening_opening_closing_opening_opening_opening_opening_opening = opening_opening_closing_opening_opening_opening_opening:sub(1,opening_opening_closing_opening_opening_opening_opening_count)\n\
    \  local opening_opening_closing_opening_opening_opening_opening_opening_count\
    \ = opening_opening_closing_opening_opening_opening_opening_opening_opening:len()\n\
    \  local opening_opening_closing_open", "  local opening_brackets = brackets:gsub('%[(%)][(%)]',\
    \ '%s*%2s*')\n  local closing_brackets = brackets:gsub('%[)](%)', '%s*%2s*')\n\
    \  return opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('%[(%)%]', function(x)\n    return x:reverse()\n  end)\n  local\
    \ closing_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n    return x:reverse()\n\
    \  end)\n  return opening_brackets:len() == closing_brackets:len() and\n    opening_brackets:all()\
    \ ~= closing_brackets:all()\nend", "  local opening = brackets:sub(1, 1)\n  local\
    \ closing = brackets:sub(2, 1)\n  return opening ~= closing and opening ~= '('\
    \ and opening ~= ')'\nend", "  local opening_brackets = brackets:gsub('%[(%)].*$',\
    \ ''):gsub('%[)]$', '')\n  local closing_brackets = brackets:gsub('%[)]%', ''):gsub('%[(%)].*$',\
    \ '')\n  return opening_brackets == closing_brackets\nend", "  local open_brackets\
    \ = brackets:gsub('%[(%)].*$', ''):gsub('%[%](%)', '')\n  local close_brackets\
    \ = brackets:gsub('%[(%)].*$', ''):gsub('%[%]$', '')\n  local open_brackets_count\
    \ = open_brackets:count('(')\n  local close_brackets_count = close_brackets:count(')')\n\
    \  return open_brackets_count == close_brackets_count\nend", "  local opening_brackets\
    \ = brackets:gsub('%[(%)][(%)]', '%s*%1[^%1]*%2')\n  local closing_brackets =\
    \ brackets:gsub('%[%)](%)', '%1[^%1]*%2')\n  return opening_brackets ~= closing_brackets\n\
    end", "  local opening_brackets = brackets:gsub('%[(%)][(%)]', function(_, _,\
    \ opening_bracket)\n    return opening_bracket:gsub('%[%]', function(_, _, closing_bracket)\n\
    \      return closing_bracket:gsub('%[%]', function(_, _, closing_bracket)\n \
    \       return closing_bracket:gsub('%[%]', function(_, _, closing_bracket)\n\
    \          return closing_bracket:gsub('%[%]', function(_, _, closing_bracket)\n\
    \            return closing_bracket:gsub('%[%]', function(_, _, closing_bracket)\n\
    \              return closing_bracket:gsub('%[%]', function(_, _, closing_bracket)\n\
    \                return closing_bracket:gsub('%[%]', function(_, _, closing_bracket)\n\
    \                  return closing_bracket:gsub('%[%]', function(_, _, closing_bracket)\n\
    \                    return closing_bracket:gsub('%[%]', function(_, _, closing_bracket)\n\
    \                      return closing_bracket:gsub('%[%]', function(_, _, closing_bracket)\n\
    \                        return closing_bracket:gsub('%[%]', function(_, _, closing_bracket)\n\
    \                          return closing_bracket:gsub('%[%]', function(_, _,\
    \ closing_bracket)\n                            return closing_bracket:gsub('%[%]',\
    \ function(_, _, closing_bracket)\n                              return closing_bracket:gsub('%[%]',\
    \ function(_, _, closing_bracket)\n                                return closing_bracket:gsub('%[%]',\
    \ function(_, _, closing_bracket)\n                                  return closing_bracket:gsub('%[%]',\
    \ function(_, _, closing_bracket)\n                                    return\
    \ closing_bracket:gsub('%[%]', function(_, _, closing_bracket)\n             \
    \                         return closing_bracket:gsub('%[%]', function(_, _, closing_bracket)\n\
    \                                        return closing_bracket:gsub('%[%]', function(_,\
    \ _, closing_bracket)\n                                          return closing_bracket:gsub('%[%]',\
    \ function(_, _, closing_bracket)\n                                          \
    \  return closing_bracket:gsub('%[%]', function(_, _, closing_bracket)\n     \
    \                                         return closing_bracket", "  local opening\
    \ = brackets:sub(1, 1)\n  local closing = brackets:sub(2, 2)\n  return opening\
    \ ~= closing and opening ~= '(' and closing ~= ')'\nend", "  local opening = brackets:sub(1,1)\n\
    \  local closing = brackets:sub(2,2)\n  local opening_brackets = opening:gsub('%W','()')\n\
    \  local closing_brackets = closing:gsub('%W','()')\n  return opening_brackets\
    \ ~= closing_brackets\nend", "  local open_brackets = brackets:gsub('%[(%)%]',\
    \ function(x)\n    return x:reverse()\n  end)\n  local close_brackets = brackets:gsub('%[%[(%)]%]',\
    \ function(x)\n    return x:reverse()\n  end)\n  return open_brackets:len() ==\
    \ close_brackets:len() and\n    open_brackets:all(ipairs, close_brackets:len())\
    \ and\n    open_brackets:all(ipairs, close_brackets:len()) and\n    open_brackets:all(ipairs,\
    \ close_brackets:len())\nend", "  local opening_brackets = brackets:gsub('%[(%)][(%)]+',\
    \ '()')\n  local closing_brackets = brackets:gsub('%[)](%)%[)]', '()')\n  return\
    \ opening_brackets ~= closing_brackets\nend", "  local opening_brackets = brackets:gsub('(%[(%)%])',\
    \ function(x)\n    return x:reverse()\n  end)\n  local closing_brackets = brackets:gsub('(%[%[(%)]%])',\
    \ function(x)\n    return x:reverse()\n  end)\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  return opening_brackets_count == closing_brackets_count\nend", "  brackets\
    \ = brackets:gsub('()', '\\1')\n  return brackets:sub(1, #brackets) == brackets\n\
    end", "  local opening_brackets = brackets:gsub('%[(%)].*$', '%%1'):gsub('%[(%)]',\
    \ '%%1')\n  local closing_brackets = brackets:gsub('%[(%)](.*)$', '%%1'):gsub('%[(%)]$',\
    \ '%%1')\n  return opening_brackets:len() == closing_brackets:len() and\n    \
    \     opening_brackets:gsub('%%1', '(') == closing_brackets:gsub('%%1', ')')\n\
    end", "  local opening = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n\
    \  return opening:find(closing) == nil\nend", "  local opening_brackets = brackets:gsub('%[(%)][(%)]',\
    \ '%s*%1*%s*'):gsub('(%1)(%2)', '%s*%1*%s*'):gsub('(%1)(%2)', '%s*%1*%s*'):gsub('(%1)(%2)',\
    \ '%s*%1*%s*'):gsub('(%1)(%2)', '%s*%1*%s*')\n  local closing_brackets = brackets:gsub('%[(%)](%)',\
    \ '%s*%1*%s*'):gsub('(%1)(%2)', '%s*%1*%s*'):gsub('(%1)(%2)', '%s*%1*%s*'):gsub('(%1)(%2)',\
    \ '%s*%1*%s*'):gsub('(%1)(%2)', '%s*%1*%s*')\n  return opening_brackets == closing_brackets\n\
    end", "  local opening_brackets = brackets:gsub('%[(%)%]', function(x)\n    return\
    \ x:lower()\n  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n\
    \    return x:lower()\n  end)\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  if opening_brackets_count\
    \ ~= closing_brackets_count then\n    return false\n  end\n  local opening_brackets_table\
    \ = opening_brackets:gsub('()', '')\n  local closing_brackets_table = closing_brackets:gsub('()',\
    \ '')\n  local opening_brackets_table_count = opening_brackets_table:len()\n \
    \ local closing_brackets_table_count = closing_brackets_table:len()\n  if opening_brackets_table_count\
    \ ~= closing_brackets_table_count then\n    return false\n  end\n  for i = 1,\
    \ opening_brackets_table_count do\n    local opening_bracket = opening_brackets_table:sub(i,\
    \ i)\n    local closing_bracket = closing_brackets_table:sub(i, i)\n    if opening_bracket\
    \ ~= closing_bracket then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n\
    \  return opening ~= closing and opening ~= '(' and opening ~= ')'\nend", "  local\
    \ open_brackets = brackets:gsub('%[(%)].*$', ''):gsub('%[)]$', '')\n  local close_brackets\
    \ = brackets:gsub('%[)](%)$', ''):gsub('%[(%)]$', '')\n  return open_brackets\
    \ == close_brackets\nend", "  local opening_brackets = brackets:gsub('%[(%)][(%)]','%1'):gsub('%[(%)]','%1')\n\
    \  local closing_brackets = brackets:gsub('%[(%)](%)','%1'):gsub('%[(%)]','%1')\n\
    \  return opening_brackets ~= closing_brackets\nend", "  local opening_brackets\
    \ = brackets:gsub('%[(%)][(%)]', '%s*%1*%s*')\n  local closing_brackets = brackets:gsub('%[)](%)%s*',\
    \ '%s*%1*')\n  return opening_brackets ~= closing_brackets\nend", "  local opening_brackets\
    \ = brackets:gsub('%[(%)%]', function(x)\n    return x:reverse()\n  end)\n  local\
    \ closing_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n    return x:reverse()\n\
    \  end)\n  return opening_brackets:len() == closing_brackets:len()\nend", "  local\
    \ opening_brackets = brackets:gsub('%[(%)].*$', ''):gsub('%[(%)]$', ''):gsub('%[%]$',\
    \ ''):gsub('%[(%)]$', '')\n  local closing_brackets = brackets:gsub('%[%].*$',\
    \ ''):gsub('%[%]$', ''):gsub('%[%]$', ''):gsub('%[(%)]$', '')\n  return opening_brackets\
    \ ~= closing_brackets\nend", "  local opening_brackets = brackets:gsub('%[(%)].*$',\
    \ ''):gsub('%[)]%', '').\n      gsub('%[(%)].*$', '')\n  local closing_brackets\
    \ = brackets:gsub('%[)]%', ''):gsub('%[(%)].*$', '').\n      gsub('%[)]%', '')\n\
    \  return opening_brackets:len() == closing_brackets:len()\nend", "  local open_brackets\
    \ = brackets:gsub('%[(%)][(%)]', function(x)\n    return x:reverse()\n  end)\n\
    \  local close_brackets = brackets:gsub('%[)](%)', function(x)\n    return x:reverse()\n\
    \  end)\n  local open_brackets_count = open_brackets:len()\n  local close_brackets_count\
    \ = close_brackets:len()\n  return open_brackets_count == close_brackets_count\n\
    end", "  local opening = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n\
    \  local opening_count = brackets:sub(1,1):len()\n  local opening_open = opening_count\
    \ > 0 and opening:sub(1,opening_count-1) == '('\n  local opening_close = opening_count\
    \ > 0 and opening:sub(opening_count-1,opening_count+1) == ')'\n  local closing_count\
    \ = brackets:sub(opening_count+1,opening_count+2):len()\n  local closing_open\
    \ = closing_count > 0 and closing:sub(1,closing_count-1) == '('\n  local closing_close\
    \ = closing_count > 0 and closing:sub(closing_count-1,closing_count+1) == ')'\n\
    \  return opening_open and closing_close or opening_close and closing_open\nend",
  "  local opening_brackets = brackets:gsub('%[(%)%]', function(x)\n    return x:reverse()\n\
    \  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n\
    \    return x:reverse()\n  end)\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening_brackets = brackets:gsub('%[(%)][(%)]', function(x)\n \
    \   return x:reverse()\n  end)\n  local closing_brackets = brackets:gsub('%[)](%)',\
    \ function(x)\n    return x:reverse()\n  end)\n  return opening_brackets:len()\
    \ == closing_brackets:len()\nend", "  local opening_brackets = brackets:gsub('%[(%)].*$',\
    \ ''):gsub('%[)]$', '')\n  local closing_brackets = brackets:gsub('%[)](%)$',\
    \ ''):gsub('%[(%)]$', '')\n  return opening_brackets ~= closing_brackets\nend",
  "  brackets = brackets:gsub('(%[(%)%])', function(x)\n    return x:sub(1, 1)\n \
    \ end)\n  return brackets:sub(1, 1):sub(1, 1):sub(1, 1) ~= '()'\nend", "  local\
    \ opening = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n  return opening:sub(1,1)\
    \ ~= closing or opening:sub(2,2) ~= closing\nend", "  local opening_brackets =\
    \ brackets:gsub('%[(%)%]', function(x)\n    return x:reverse()\n  end)\n  local\
    \ closing_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n    return x:reverse()\n\
    \  end)\n  return opening_brackets:len() == closing_brackets:len()\nend", "  local\
    \ opening_brackets = brackets:gsub('%[(%)%]', function(x)\n    return x:reverse()\n\
    \  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n\
    \    return x:reverse()\n  end)\n  return opening_brackets:len() == closing_brackets:len()\
    \ and\n    opening_brackets:all(ipairs, closing_brackets:len())\nend", "  local\
    \ opening_brackets = brackets:gsub('(%[(%)]+)','%1'):gsub('(%[%)]+)','%1')\n \
    \ local closing_brackets = brackets:gsub('(%[%)]+)','%1'):gsub('(%[(%)]+)','%1')\n\
    \  return opening_brackets:len() == closing_brackets:len() and opening_brackets:gsub('(%[(%)]+)','%1'):gsub('(%[%)]+)','%1'):gsub('(%[(%)]+)','%1'):gsub('(%[%)]+)','%1'):gsub('(%[(%)]+)','%1'):gsub('(%[%)]+)','%1'):gsub('(%[(%)]+)','%1'):gsub('(%[%)]+)','%1'):gsub('(%[(%)]+)','%1'):gsub('(%[%)]+)','%1'):gsub('(%[(%)]+)','%1'):gsub('(%[%)]+)','%1'):gsub('(%[(%)]+)','%1'):gsub('(%[%)]+)','%1'):gsub('(%[(%)]+)','%1'):gsub('(%[%)]+)','%1'):gsub('(%[(%)]+)','%1'):gsub('(%[%)]+)','%1'):gsub('(%[(%)]+)','%1'):gsub('(%[%)]+)','%1'):gsub('(%[(%)]+)','%1'):gsub('(%[%)]+)','%1'):gsub('(%[(%)]+)','%1'):gsub('(%[%)]+)','%1'):gsub('(%[(%)]+)','%1'):gsub('(%[%)]+)','%1'):gsub('(%[(%)]+)','%1'):gsub('(%[%)]+)','%1'):gsub('(%[(%)]+)','%1'):gsub('(%[%)]+)','%1'):gsub('(%[(%)]+)','%1'):gsub('(%[%)]+)','%1'):gsub('",
  "  local opening_brackets = brackets:gsub('%[(%[%)]%)','%1'):gsub('%[(%[%)]%)','%1')\n\
    \  local closing_brackets = brackets:gsub('%[%[%)]%]','%1'):gsub('%[%[%)]%]','%1')\n\
    \  return opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('%[(%)%]', function(x)\n    return x:reverse()\n  end)\n  local\
    \ closing_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n    return x:reverse()\n\
    \  end)\n  return opening_brackets:len() == closing_brackets:len() and\n    opening_brackets:all()\
    \ ~= closing_brackets:all()\nend", "  local opening_brackets = brackets:gsub('%[(%[(%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%",
  "  local opening_brackets = brackets:gsub('(%[(%)]+)', ''):gsub('%[%)]+', '')\n\
    \  local closing_brackets = brackets:gsub('(%[(%)]+)', ''):gsub('%[%)]+', '')\n\
    \  return opening_brackets ~= closing_brackets\nend", "  local opening = brackets:sub(1,1)\n\
    \  local closing = brackets:sub(2,2)\n  return opening ~= closing and opening\
    \ ~= '(' and closing ~= ')'\nend", "  local opening_brackets = brackets:gsub('%[(%)][(%)]','')\n\
    \  local closing_brackets = brackets:gsub('%[)](%)','')\n  return opening_brackets:len()\
    \ == closing_brackets:len() and\n         opening_brackets:len() == 0 and closing_brackets:len()\
    \ > 0\nend", "  local opening = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n\
    \  local opening_brackets = opening:gsub('%[(%a)]','%1')\n  local closing_brackets\
    \ = closing:gsub('%[(%a)]','%1')\n  return opening_brackets ~= closing_brackets\n\
    end", "  local opening_brackets = brackets:gsub('%[(%)][(%)]', function(_, _,\
    \ opening_bracket)\n    return opening_bracket\n  end)\n  local closing_brackets\
    \ = brackets:gsub('%[)](%)', function(_, _, closing_bracket)\n    return closing_bracket\n\
    \  end)\n  return opening_brackets == closing_brackets\nend", "  local opening\
    \ = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n  local opening_count\
    \ = brackets:sub(1,1):len()\n  local closed_count = brackets:sub(2):len()\n  return\
    \ opening_count == closed_count and opening:sub(1,opening_count) == closing:sub(1,closed_count)\n\
    end", "  local opening_brackets = brackets:gsub('%[(%)][(%)]', '%s*%1*%s*')\n\
    \  local closing_brackets = brackets:gsub('%[)](%)][)]', '%s*%1*%s*')\n  return\
    \ opening_brackets ~= closing_brackets\nend", "  local opening_brackets = brackets:gsub('%[(%)][(%)]','')\n\
    \  local closing_brackets = brackets:gsub('%[)](%)','')\n  local opening_brackets\
    \ = opening_brackets:gsub('%[(%)][(%)]','')\n  local closing_brackets = closing_brackets:gsub('%[)](%)','')\n\
    \  local opening_brackets = opening_brackets:gsub('%[(%)]','')\n  local closing_brackets\
    \ = closing_brackets:gsub('%[)]','')\n  local opening_brackets = opening_brackets:gsub('%[()]','')\n\
    \  local closing_brackets = closing_brackets:gsub('%[]','')\n  local opening_brackets\
    \ = opening_brackets:gsub('%[()]','')\n  local closing_brackets = closing_brackets:gsub('%[]','')\n\
    \  local opening_brackets = opening_brackets:gsub('%[()]','')\n  local closing_brackets\
    \ = closing_brackets:gsub('%[]','')\n  local opening_brackets = opening_brackets:gsub('%[()]','')\n\
    \  local closing_brackets = closing_brackets:gsub('%[]','')\n  local opening_brackets\
    \ = opening_brackets:gsub('%[()]','')\n  local closing_brackets = closing_brackets:gsub('%[]','')\n\
    \  local opening_brackets = opening_brackets:gsub('%[()]','')\n  local closing_brackets\
    \ = closing_brackets:gsub('%[]','')\n  local opening_brackets = opening_brackets:gsub('%[()]','')\n\
    \  local closing_brackets = closing_brackets:gsub('%[]','')\n  local opening_brackets\
    \ = opening_brackets:gsub('%[()]','')\n  local closing_brackets = closing_brackets:gsub('%[]','')\n\
    \  local opening_brackets = opening_brackets:gsub('%[()]','')\n  local closing",
  "  local opening_brackets = brackets:gsub('%[(%)][(%)]', '%s*%1*%s*'):gsub('%s*%1*%s*',\
    \ '%s*%1*%s*'):gsub('%s*%1*%s*', '%s*%1*%s*')\n  local closing_brackets = brackets:gsub('%[)](%)',\
    \ '%s*%1*%s*'):gsub('%s*%1*%s*', '%s*%1*%s*'):gsub('%s*%1*%s*', '%s*%1*%s*')\n\
    \  return opening_brackets:len() == closing_brackets:len() and opening_brackets:sub(1,\
    \ -1) == closing_brackets:sub(1, -1)\nend", "  local opening = brackets:sub(1,1)\n\
    \  local closing = brackets:sub(2,2)\n  return opening:len() == closing:len()\
    \ and opening:sub(1,1) == closing:sub(1,1)\nend", "  local opening_brackets =\
    \ brackets:gsub('%[(%)][(%)]','')\n  local closing_brackets = brackets:gsub('%[)](%)','')\n\
    \  return opening_brackets:len() == closing_brackets:len()\nend", "  local opening\
    \ = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n  local opening_count\
    \ = brackets:sub(1,1):len()\n  local closed_count = brackets:sub(2):len()\n  return\
    \ opening_count == closed_count and opening_count ~= 0 and opening_count ~= closing\n\
    end", "  local opening_brackets = brackets:gsub('%[(%)%]', function(x)\n    return\
    \ x:reverse()\n  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]',\
    \ function(x)\n    return x:reverse()\n  end)\n  return opening_brackets:len()\
    \ == closing_brackets:len()\nend", "  local opening = brackets:sub(1,1)\n  local\
    \ closing = brackets:sub(2,2)\n  return opening:find(closing) == nil\nend", " \
    \ local opening_brackets = brackets:gsub('%[(%)][(%)]', function(x)\n    return\
    \ x:reverse()\n  end)\n  local closing_brackets = brackets:gsub('%[)](%)', function(x)\n\
    \    return x:reverse()\n  end)\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening_brackets = brackets:gsub('(%[(%)%])', function(x)\n   \
    \ return x:reverse()\n  end)\n  local closing_brackets = brackets:gsub('(%[%)]%)',\
    \ function(x)\n    return x:reverse()\n  end)\n  return opening_brackets:len()\
    \ == closing_brackets:len()\nend", "  local opening_brackets = brackets:gsub('%[(%)][(%)]',\
    \ function(_, _, opening_bracket)\n    return opening_bracket\n  end)\n  local\
    \ closing_brackets = brackets:gsub('%[)](%)', function(_, _, closing_bracket)\n\
    \    return closing_bracket\n  end)\n  return opening_brackets ~= closing_brackets\n\
    end", "  local opening_brackets = brackets:gsub('%[(%)%]', function(x)\n    return\
    \ x:lower()\n  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n\
    \    return x:lower()\n  end)\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  for i = 1, opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets:sub(1, i)\n    local closing_bracket\
    \ = closing_brackets:sub(1, i)\n    if opening_bracket ~= closing_bracket then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub('%[(%)].*$', '\\0')\n  local closing_brackets = brackets:gsub('%[)]%',\
    \ '\\0')\n  return opening_brackets:len() == closing_brackets:len() and\n    \
    \     opening_brackets:sub(1, opening_brackets:len()) == closing_brackets:sub(1,\
    \ closing_brackets:len())\nend", "  local opening_brackets = brackets:gsub('%[(%)%]',\
    \ function(x)\n    return x:reverse()\n  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]',\
    \ function(x)\n    return x:reverse()\n  end)\n  for i = 1, #opening_brackets\
    \ do\n    if opening_brackets[i] != closing_brackets[i] then\n      return false\n\
    \    end\n  end\n  return true\nend", "  local opening_brackets = brackets:gsub('%[(%)][(%)]','')\n\
    \  local closing_brackets = brackets:gsub('%[)](%)','')\n  return opening_brackets\
    \ ~= closing_brackets\nend", "  local open_brackets = brackets:gsub('%[(%)][(%)]',\
    \ '%s*%1*%s*'):gsub('%s*%1*%s*', '%s*%1*%s*'):gsub('%s*%1*%s*', '%s*%1*%s*'):gsub('%s*%1*%s*',\
    \ '%s*%1*%s*'):gsub('%s*%1*%s*', '%s*%1*%s*'):gsub('%s*%1*%s*', '%s*%1*%s*'):gsub('%s*%1*%s*',\
    \ '%s*%1*%s*'):gsub('%s*%1*%s*', '%s*%1*%s*'):gsub('%s*%1*%s*', '%s*%1*%s*'):gsub('%s*%1*%s*',\
    \ '%s*%1*%s*'):gsub('%s*%1*%s*', '%s*%1*%s*'):gsub('%s*%1*%s*', '%s*%1*%s*'):gsub('%s*%1*%s*',\
    \ '%s*%1*%s*'):gsub('%s*%1*%s*', '%s*%1*%s*'):gsub('%s*%1*%s*', '%s*%1*%s*'):gsub('%s*%1*%s*',\
    \ '%s*%1*%s*'):gsub('%s*%1*%s*', '%s*%1*%s*'):gsub('%s*%1*%s*', '%s*%1*%s*'):gsub('%s*%1*%s*',\
    \ '%s*%1*%s*'):gsub('%s*%1*%s*', '%s*%1*%s*'):gsub('%s*%1*%s*', '%s*%1*%s*'):gsub('%s*%1*%s*',\
    \ '%s*%1*%s*'):gsub('%s*%1*%s*', '%s*%1*%s*'):gsub('%s*%1*%s*', '%s*%1*%s*'):gsub('%s*%1*%s*',\
    \ '%s*%1*%s*'):gsub('%s*%1*%s*', '%s*%1*%s*'):gsub('%s*%1*%s*', '%s*%1*%s*'):gsub('%s*%1*%s*',\
    \ '%s*%1*%s*'):gsub('%s*%1*%s*', '%s*%1*%s*'):gsub('%s*%1*%s", "  local opening_brackets\
    \ = brackets:gsub('%[(%)][(%)]', function(_, _, opening_bracket)\n    return opening_bracket\n\
    \  end)\n  local closing_brackets = brackets:gsub('%[)](%)', function(_, _, closing_bracket)\n\
    \    return closing_bracket\n  end)\n  return opening_brackets:len() == closing_brackets:len()\
    \ and opening_brackets:all() ~= closing_brackets:all()\nend", "  local opening_brackets\
    \ = brackets:gsub('(%[(%)]+)', ''):gsub('%[(%)]+$', '')\n  local closing_brackets\
    \ = brackets:gsub('(%[(%)]+)', ''):gsub('%[(%)]+$', '')\n  return opening_brackets:len()\
    \ == closing_brackets:len() and opening_brackets:len() > 0 and closing_brackets:len()\
    \ > 0\nend", "  local open_brackets = brackets:gsub('%[(%)][(%)]', function(x)\n\
    \    return x:reverse()\n  end)\n  local close_brackets = brackets:gsub('%[)](%)',\
    \ function(x)\n    return x:reverse()\n  end)\n  return open_brackets:len() ==\
    \ close_brackets:len() and\n    open_brackets:all(io.char.isalpha) and\n    close_brackets:all(io.char.isalpha)\n\
    end", "  local opening_brackets = brackets:gsub('%[(%)][(%)]', '%s*%1*%s*') --\
    \ replace all opening brackets with opening brackets*closing brackets\n  local\
    \ closing_brackets = brackets:gsub('%[)](%)', '%s*%1*%s*') -- replace all closing\
    \ brackets with closing brackets*opening brackets\n  return opening_brackets ~=\
    \ closing_brackets\nend", "  local opening_brackets = brackets:gsub('(%[(%)]+)','%1'):gsub('(%[%)]+)','%1')\n\
    \  local closing_brackets = brackets:gsub('(%[%)]+)','%1'):gsub('(%[(%)]+)','%1')\n\
    \  local opening_brackets_count = opening_brackets:count('(')\n  local closing_brackets_count\
    \ = closing_brackets:count(')')\n  return opening_brackets_count == closing_brackets_count\n\
    end", "  local opening_brackets = brackets:gsub('%[(%)][(%)]', '%s*%1*%2')\n \
    \ local closing_brackets = brackets:gsub('%[)](%)%s*%1*%2', '%s*%1*%2')\n  return\
    \ opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('%[(%)][(%)]+', '()')\n  local closing_brackets = brackets:gsub('%[)]%[)]%[(%)]',\
    \ '()')\n  return opening_brackets ~= closing_brackets\nend", "  local opening_brackets\
    \ = brackets:gsub('%[(%)%]', '')\n  local closing_brackets = brackets:gsub('%[%[(%)]%]',\
    \ '')\n  return opening_brackets:len() == closing_brackets:len() and\n       \
    \  opening_brackets:gsub('%[(%)%]', '') == closing_brackets:gsub('%[%[(%)]%]',\
    \ '')\nend", "  local opening_brackets = brackets:gsub('%[(%)].*$', ''):gsub('%[%)]',\
    \ ''):gsub('%[(%)]', '')\n  local closing_brackets = brackets:gsub('%[%)](%)',\
    \ ''):gsub('%[%)]%[(%)', ''):gsub('%[(%)]%[%)]', '')\n  return opening_brackets\
    \ ~= closing_brackets\nend", "  local opening_brackets = brackets:gsub('%[(%)][(%)]',\
    \ function(x)\n    return x:reverse()\n  end)\n  local closing_brackets = brackets:gsub('%[)](%)',\
    \ function(x)\n    return x:reverse()\n  end)\n  return opening_brackets:len()\
    \ == closing_brackets:len()\nend", "  local opening_brackets = brackets:gsub('%[(%)%]',\
    \ function(x)\n    return x:reverse()\n  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]',\
    \ function(x)\n    return x:reverse()\n  end)\n  return opening_brackets:len()\
    \ == closing_brackets:len()\nend", "  local opening = brackets:sub(1, 1)\n  local\
    \ closing = brackets:sub(2, 1)\n  return opening ~= closing and opening ~= '('\
    \ and closing ~= ')'\nend", "  local opening_brackets = brackets:gsub('%[(%)][(%)]',\
    \ function(x)\n    return x:reverse()\n  end)\n  local closing_brackets = brackets:gsub('%[)](%)%[)]',\
    \ function(x)\n    return x:reverse()\n  end)\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  return opening_brackets_count == closing_brackets_count\nend", "  brackets\
    \ = brackets:gsub('()', '')\n  brackets = brackets:gsub('[]', '')\n  brackets\
    \ = brackets:gsub('{}', '')\n  brackets = brackets:gsub('<>', '')\n  brackets\
    \ = brackets:gsub('<>', '')\n  brackets = brackets:gsub('()', '')\n  brackets\
    \ = brackets:gsub('[]', '')\n  brackets = brackets:gsub('{}', '')\n  brackets\
    \ = brackets:gsub('<>', '')\n  brackets = brackets:gsub('{}', '')\n  brackets\
    \ = brackets:gsub('[]', '')\n  brackets = brackets:gsub('()', '')\n  brackets\
    \ = brackets:gsub('[]', '')\n  brackets = brackets:gsub('{}', '')\n  brackets\
    \ = brackets:gsub('<>', '')\n  brackets = brackets:gsub('{}', '')\n  brackets\
    \ = brackets:gsub('[]', '')\n  brackets = brackets:gsub('()', '')\n  brackets\
    \ = brackets:gsub('[]', '')\n  brackets = brackets:gsub('{}', '')\n  brackets\
    \ = brackets:gsub('<>', '')\n  brackets = brackets:gsub('{}', '')\n  brackets\
    \ = brackets:gsub('[]', '')\n  brackets = brackets:gsub('()', '')\n  brackets\
    \ = brackets:gsub('[]', '')\n  brackets = brackets:gsub('{}', '')\n  brackets\
    \ = brackets:gsub('<>', '')\n  brackets = brackets:gsub('{}', '')\n  brackets\
    \ = brackets:gsub('[]', '')\n  brackets = brackets:gsub('()', '')\n  brackets\
    \ = brackets:gsub('[]', '')\n  brackets = brackets:gsub('{}', '')\n  brackets\
    \ = brackets:gsub('<>', '')\n  brackets = brackets:gsub('{}', '')\n  brackets\
    \ = brackets:gsub('[]', '')\n  brackets = brackets:gsub('()', '')\n  brackets\
    \ = brackets:gsub('[]', '')\n  brackets = brackets:gsub('{}', '')\n  brackets\
    \ = brackets:gsub('<>', '')\n  brackets = brackets:gsub('{}', '')\n  brackets\
    \ = brackets:gsub('[]', '')\n  brackets = brackets:gsub('()', '')\n  brackets\
    \ = brackets:gsub('[]', '')\n  brackets = brackets:gsub('{}', '')\n  brackets\
    \ = brackets:gsub('<>', '')\n  brackets = brackets:gsub('{}', '')\n  brackets\
    \ = brackets:g", "  local open_brackets = brackets:gsub('%[(%)%]', function(x)\n\
    \    return x:reverse()\n  end)\n  local close_brackets = brackets:gsub('%[%[(%)]%]',\
    \ function(x)\n    return x:reverse()\n  end)\n  return open_brackets:len() ==\
    \ close_brackets:len()\nend", "  local open_brackets = brackets:gsub('%[(%)][(%)]',\
    \ '%s*%1*%s*'):gsub('%s*%1*%s*', '%s*%1*%s*'):gsub('%s*%1*%s*', '%s*%1*%s*')\n\
    \  local close_brackets = brackets:gsub('%[)](%)', '%s*%1*%s*'):gsub('%s*%1*%s*',\
    \ '%s*%1*%s*'):gsub('%s*%1*%s*', '%s*%1*%s*')\n  return open_brackets:len() ==\
    \ close_brackets:len() and open_brackets:sub(1, -1) == close_brackets:sub(1, -1)\n\
    end", "  local opening_brackets = brackets:gsub('%[(%)%]', function(x)\n    return\
    \ x:reverse()\n  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]',\
    \ function(x)\n    return x:reverse()\n  end)\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  if opening_brackets_count ~= closing_brackets:len()\
    \ then\n    return false\n  end\n  for i = 1, opening_brackets_count do\n    local\
    \ opening_bracket = opening_brackets:sub(i, i)\n    local closing_bracket = closing_brackets:sub(i,\
    \ i)\n    if opening_bracket ~= closing_bracket then\n      return false\n   \
    \ end\n  end\n  return true\nend", "  local opening_brackets = brackets:gsub('%[(%)][(%)]','%1'):gsub('%[(%)]','%1')\n\
    \  local closing_brackets = brackets:gsub('%[)](%)','%1'):gsub('%)]','%1')\n \
    \ return opening_brackets ~= closing_brackets\nend", "  local opening_brackets\
    \ = brackets:gsub('%[(%)%]', function(x)\n    return x:reverse()\n  end)\n  local\
    \ closing_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n    return x:reverse()\n\
    \  end)\n  return opening_brackets:len() == closing_brackets:len()\nend", "  local\
    \ opening_brackets = brackets:gsub('%[(%)%]', function(x)\n    return x:reverse()\n\
    \  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n\
    \    return x:reverse()\n  end)\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening_brackets = brackets:gsub('(%[(%)]+)', ''):gsub('%[%)]+',\
    \ '')\n  local closing_brackets = brackets:gsub('(%[(%)]+)', ''):gsub('%[%)]+',\
    \ '')\n  return opening_brackets ~= closing_brackets\nend", "  local open_brackets\
    \ = brackets:gsub('%[(%)%]', function(x)\n    return x:reverse()\n  end)\n  local\
    \ close_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n    return x:reverse()\n\
    \  end)\n  return open_brackets:len() == close_brackets:len()\nend", "  local\
    \ opening_brackets = brackets:gsub('%[(%)%]', function(x)\n    return x:reverse()\n\
    \  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n\
    \    return x:reverse()\n  end)\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_table\
    \ = opening_brackets:gsub('(%)%', function(x)\n    return x:reverse()\n  end)\n\
    \  local closing_brackets_table = closing_brackets:gsub('(%)%', function(x)\n\
    \    return x:reverse()\n  end)\n  local opening_brackets_count = opening_brackets_count\n\
    \  local closing_brackets_count = closing_brackets_count\n  local opening_brackets_table\
    \ = opening_brackets_table\n  local closing_brackets_table = closing_brackets_table\n\
    \  local opening_brackets_table = opening_brackets_table\n  local closing_brackets_table\
    \ = closing_brackets_table\n  local opening_brackets_count = opening_brackets_count\n\
    \  local closing_brackets_count = closing_brackets_count\n  local opening_brackets_table\
    \ = opening_brackets_table\n  local closing_brackets_table = closing_brackets_table\n\
    \  local opening_brackets_table = opening_brackets_table\n  local closing_brackets_table\
    \ = closing_brackets_table\n  local opening_brackets_count = opening_brackets_count\n\
    \  local closing_brackets_count = closing_brackets_count\n  local opening_brackets_table\
    \ = opening_brackets_table\n  local closing_brackets_table = closing_brackets_table\n\
    \  local opening_brackets_table = opening_brackets_table\n  local closing_brackets_table\
    \ = closing_brackets_table\n  local opening_brackets_count = opening_brackets_count\n\
    \  local closing_brackets_count = closing_brackets_count\n  local opening_brackets_table\
    \ = opening_brackets_table\n  local closing_brackets_table = closing_brackets_table\n\
    \  local opening_brackets_table = ", "  local opening_brackets = brackets:gsub('%[(%)%]',\
    \ function(x)\n    return x:reverse()\n  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]',\
    \ function(x)\n    return x:reverse()\n  end)\n  return opening_brackets:len()\
    \ == closing_brackets:len()\nend", "  local open_brackets = brackets:gsub('%[(%)].*$',\
    \ ''):gsub('%[)]%', '')\n  local close_brackets = brackets:gsub('%[)]%', ''):gsub('%[(%)].*$',\
    \ '')\n  return open_brackets:len() == close_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('%[(%)%]', function(x)\n    return x:reverse()\n  end)\n  local\
    \ closing_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n    return x:reverse()\n\
    \  end)\n  return opening_brackets:len() == closing_brackets:len()\nend", "  local\
    \ opening_brackets = brackets:gsub('%[(%)%]', function(x)\n    return x:reverse()\n\
    \  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n\
    \    return x:reverse()\n  end)\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening_brackets = brackets:gsub('%[(%)%]', function(x)\n    return\
    \ x:reverse()\n  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]',\
    \ function(x)\n    return x:reverse()\n  end)\n  return opening_brackets:len()\
    \ == closing_brackets:len()\nend", "  brackets = brackets:gsub('()', ' ')\n  brackets\
    \ = brackets:gsub('[]', ' ')\n  brackets = brackets:gsub('[()()]', ' ')\n  brackets\
    \ = brackets:gsub('[]()', ' ')\n  brackets = brackets:gsub('[][]', ' ')\n  brackets\
    \ = brackets:gsub('[()]', ' ')\n  brackets = brackets:gsub('[[]]', ' ')\n  brackets\
    \ = brackets:gsub('[()()]', ' ')\n  brackets = brackets:gsub('[]()', ' ')\n  brackets\
    \ = brackets:gsub('[][]', ' ')\n  brackets = brackets:gsub('[()]', ' ')\n  brackets\
    \ = brackets:gsub('[[]]', ' ')\n  brackets = brackets:gsub('[()()]', ' ')\n  brackets\
    \ = brackets:gsub('[]()', ' ')\n  brackets = brackets:gsub('[][]', ' ')\n  brackets\
    \ = brackets:gsub('[()]', ' ')\n  brackets = brackets:gsub('[[]]', ' ')\n  brackets\
    \ = brackets:gsub('[()()]', ' ')\n  brackets = brackets:gsub('[]()', ' ')\n  brackets\
    \ = brackets:gsub('[][]', ' ')\n  brackets = brackets:gsub('[()]', ' ')\n  brackets\
    \ = brackets:gsub('[[]]', ' ')\n  brackets = brackets:gsub('[()()]', ' ')\n  brackets\
    \ = brackets:gsub('[]()', ' ')\n  brackets = brackets:gsub('[][]', ' ')\n  brackets\
    \ = brackets:gsub('[()]', ' ')\n  brackets = brackets:gsub('[[]]', ' ')\n  brackets\
    \ = brackets:gsub('[()()]', ' ')\n  brackets = brackets:gsub('[]()', ' ')\n  brackets\
    \ = brackets:gsub('[][]', ' ')\n  brackets = brackets:gsub('[()]', ' ')\n  brackets\
    \ = brackets:gsub('[[]]', ' ')\n  brackets = brackets:gsub('[()()]', ' ')\n  brackets\
    \ = brackets:gsub('[]()', ' ')\n  brackets = brackets:gsub('[][]', ' ')\n  brackets\
    \ = brackets:gsub('[()]', ' ')\n  brackets = brackets:gsub('[[]]', ' ')\n  brackets\
    \ = brackets:gsub('[()()]', ' ')\n  brackets = brackets:gsub('[]()', ' ')\n  brackets\
    \ = brackets:gsub('[][]', ' ')\n  ", "  local opening = brackets:sub(1,1)\n  local\
    \ closing = brackets:sub(2,2)\n  return opening:len() == closing:len() and opening:sub(1,1)\
    \ == closing:sub(1,1)\nend", "  brackets = brackets:gsub('%[(%)][(%)]', '(%1)(%2)')\n\
    \  brackets = brackets:gsub('%[(%)]', '(%1)')\n  brackets = brackets:gsub('[(%)]',\
    \ '(%1)')\n  brackets = brackets:gsub('%[%]', '(%1)')\n  return brackets:sub(1,\
    \ 1):sub(1, 1):sub(1, 1) ~= '()'\nend", "  local opening_brackets = brackets:gsub('(%[(%)%[%)]%[%)]%)','%1'):gsub('(%[(%)%[%)]%[%)]%)','%1')\n\
    \  local closing_brackets = brackets:gsub('(%[(%)%[%)]%[%)]%)','%1'):gsub('(%[(%)%[%)]%[%)]%)','%1')\n\
    \  return opening_brackets:len() == closing_brackets:len()\nend", "  local open_brackets\
    \ = brackets:gsub('%[(%)%]', function(x)\n    return x:reverse()\n  end)\n  local\
    \ close_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n    return x:reverse()\n\
    \  end)\n  local open_brackets_count = open_brackets:len()\n  local close_brackets_count\
    \ = close_brackets:len()\n  if open_brackets_count ~= close_brackets_count then\n\
    \    return false\n  end\n  for i = 1, open_brackets_count do\n    if open_brackets[i:len()\
    \ - 1] ~= close_brackets[i] then\n      return false\n    end\n  end\n  return\
    \ true\nend", "  local opening_brackets = brackets:gsub('(%[(%)%])', function(x)\n\
    \    return x:reverse()\n  end)\n  local closing_brackets = brackets:gsub('(%[%[(%)]%])',\
    \ function(x)\n    return x:reverse()\n  end)\n  return opening_brackets:len()\
    \ == closing_brackets:len()\nend", "  local opening_brackets = brackets:gsub('(%[(%)]+)',\
    \ '%%%1')\n  local closing_brackets = brackets:gsub('(%[%)]+)', '%%%1')\n  local\
    \ opening_brackets_count = opening_brackets:gsub('%%%1'):gsub('%%%2'):gsub('%%%3')\n\
    \  local closing_brackets_count = closing_brackets:gsub('%%%1'):gsub('%%%2'):gsub('%%%3')\n\
    \  return opening_brackets_count == closing_brackets_count\nend", "  local opening_brackets\
    \ = brackets:gsub('%[(%)][(%)]', function(match)\n    return match == '(' and\
    \ ')' or match\n  end)\n  local closing_brackets = brackets:gsub('%[)](%)][)]',\
    \ function(match)\n    return match == ')' and ')' or match\n  end)\n  return\
    \ opening_brackets ~= closing_brackets\nend", "  local opening_brackets = brackets:gsub('%[(%)][(%)]',\
    \ '%s*%1*%s*')\n  local closing_brackets = brackets:gsub('%[)](%)%s*', '%s*%1*%s*')\n\
    \  return opening_brackets:len() == closing_brackets:len()\nend", "  local open_brackets\
    \ = brackets:gsub('(%[(%)]+)', ''):gsub('(%[(%)]+)$', '')\n  local close_brackets\
    \ = brackets:gsub('(%[(%)]+)$', ''):gsub('(%[(%)]+)', '')\n  return open_brackets:len()\
    \ == close_brackets:len() and open_brackets:len() > 0 and close_brackets:len()\
    \ > 0\nend", "  local opening = brackets:sub(1, 1)\n  local closing = brackets:sub(2,\
    \ 1)\n  return opening ~= closing and opening ~= '(' and opening ~= ')'\nend",
  "  local opening = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n  return\
    \ opening and closing and opening:sub(1,1) == closing:sub(1,1)\nend", "  local\
    \ opening = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n  return opening\
    \ ~= closing and opening ~= '(' and opening ~= ')'\nend", "  local opening_brackets\
    \ = brackets:gsub('%[(%)].*$', ''):gsub('%[(%)]', '')\n  local closing_brackets\
    \ = brackets:gsub('%[)](%).*$', ''):gsub('%[)](%)', '')\n  return opening_brackets\
    \ ~= closing_brackets\nend", "  local opening_brackets = brackets:gsub('%[(%[(%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%",
  "  local opening = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n  local\
    \ opening_count = brackets:sub(1,1):len()\n  local opening_count = opening_count\
    \ + opening:len()\n  local closing_bracket = brackets:sub(2,opening_count)\n \
    \ local closing_bracket = closing_bracket:sub(1,1)\n  local closing_bracket =\
    \ closing_bracket:sub(1,1)\n  local closing_bracket = closing_bracket:sub(1,1)\n\
    \  local closing_bracket = closing_bracket:sub(1,1)\n  local closing_bracket =\
    \ closing_bracket:sub(1,1)\n  local closing_bracket = closing_bracket:sub(1,1)\n\
    \  local closing_bracket = closing_bracket:sub(1,1)\n  local closing_bracket =\
    \ closing_bracket:sub(1,1)\n  local closing_bracket = closing_bracket:sub(1,1)\n\
    \  local closing_bracket = closing_bracket:sub(1,1)\n  local closing_bracket =\
    \ closing_bracket:sub(1,1)\n  local closing_bracket = closing_bracket:sub(1,1)\n\
    \  local closing_bracket = closing_bracket:sub(1,1)\n  local closing_bracket =\
    \ closing_bracket:sub(1,1)\n  local closing_bracket = closing_bracket:sub(1,1)\n\
    \  local closing_bracket = closing_bracket:sub(1,1)\n  local closing_bracket =\
    \ closing_bracket:sub(1,1)\n  local closing_bracket = closing_bracket:sub(1,1)\n\
    \  local closing_bracket = closing_bracket:sub(1,1)\n  local closing_bracket =\
    \ closing_bracket:sub(1,1)\n  local closing_bracket = closing_bracket:sub(1,1)\n\
    \  local closing_bracket = closing_bracket:sub(1,1)\n  local closing_bracket =\
    \ closing_bracket:sub(1,1)\n  local closing_bracket = closing_bracket:sub(1,1)\n\
    \  local closing_bracket = closing_bracket:sub(1,1)\n  local closing_bracket =\
    \ closing_bracket:sub(1,1)\n  local closing_bracket = closing_bracket:sub(1,1)\n\
    \  local closing_bracket = closing_bracket:sub(1,1)\n  local ", "  local opening_brackets\
    \ = brackets:gsub('%[(%)][(%)]', function(m)\n    return m\n  end)\n  local closing_brackets\
    \ = brackets:gsub('%[)](%)', function(m)\n    return m\n  end)\n  return opening_brackets:len()\
    \ == closing_brackets:len() and\n    opening_brackets:all() ~= closing_brackets:all()\n\
    end", "  local open_brackets = brackets:gsub('%[(%)][(%)]','')\n  local close_brackets\
    \ = brackets:gsub('%[)](%)','')\n  local open_brackets = open_brackets:gsub('%[(%)][(%)]','')\n\
    \  local close_brackets = close_brackets:gsub('%[)](%)','')\n  local open_brackets\
    \ = open_brackets:gsub('%[(%)]','')\n  local close_brackets = close_brackets:gsub('%[)]','')\n\
    \  local open_brackets = open_brackets:gsub('%[(%)]','')\n  local close_brackets\
    \ = close_brackets:gsub('%[)]','')\n  local open_brackets = open_brackets:gsub('%[(%)]','')\n\
    \  local close_brackets = close_brackets:gsub('%[)]','')\n  local open_brackets\
    \ = open_brackets:gsub('%[(%)]','')\n  local close_brackets = close_brackets:gsub('%[)]','')\n\
    \  local open_brackets = open_brackets:gsub('%[(%)]','')\n  local close_brackets\
    \ = close_brackets:gsub('%[)]','')\n  local open_brackets = open_brackets:gsub('%[(%)]','')\n\
    \  local close_brackets = close_brackets:gsub('%[)]','')\n  local open_brackets\
    \ = open_brackets:gsub('%[(%)]','')\n  local close_brackets = close_brackets:gsub('%[)]','')\n\
    \  local open_brackets = open_brackets:gsub('%[(%)]','')\n  local close_brackets\
    \ = close_brackets:gsub('%[)]','')\n  local open_brackets = open_brackets:gsub('%[(%)]','')\n\
    \  local close_brackets = close_brackets:gsub('%[)]','')\n  local open_brackets\
    \ = open_brackets:gsub('%[(%)]','')\n  local close_brackets = close_b", "  local\
    \ opening_brackets = brackets:gsub('%[(%)%]', function(x)\n    return x:lower()\n\
    \  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n\
    \    return x:lower()\n  end)\n  local opening_brackets_count = opening_brackets:len()\n\
    \  if opening_brackets_count ~= closing_brackets:len() then\n    return false\n\
    \  end\n  local opening_brackets_table = opening_brackets:gsub('%[(%)%]', function(x)\n\
    \    return x:lower()\n  end)\n  local closing_brackets_table = closing_brackets:gsub('%[%[(%)]%]',\
    \ function(x)\n    return x:lower()\n  end)\n  for i = 1, opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets_table[i]\n    local closing_bracket\
    \ = closing_brackets_table[i]\n    if opening_bracket ~= closing_bracket then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local opening = brackets:sub(1,1)\n\
    \  local closing = brackets:sub(2,2)\n  local opening_count = brackets:sub(1,1):len()\n\
    \  local closed_count = brackets:sub(2):len()\n  return opening_count == closed_count\
    \ and opening:sub(1,1) == closing:sub(1,1)\nend", "  local opening_brackets =\
    \ brackets:gsub('%[(%)%]', function(x)\n    return x:reverse()\n  end)\n  local\
    \ closing_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n    return x:reverse()\n\
    \  end)\n  local opening_brackets_count = opening_brackets:len()\n  local closing_brackets_count\
    \ = closing_brackets:len()\n  return opening_brackets_count == closing_brackets_count\n\
    end", "  local opening_brackets = brackets:gsub('%[(%)%]', function(x)\n    return\
    \ x:lower()\n  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n\
    \    return x:lower()\n  end)\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  return opening_brackets_count\
    \ == closing_brackets_count\nend", "  local opening_brackets = brackets:gsub('%[(%)%]',\
    \ function(x)\n    return x:reverse()\n  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]',\
    \ function(x)\n    return x:reverse()\n  end)\n  for i = 1, #opening_brackets\
    \ do\n    if opening_brackets[i]:sub(1, 1) ~= closing_brackets[i]:sub(1, 1) then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local opening = brackets:sub(1,1)\n\
    \  local closing = brackets:sub(2,2)\n  local opening_count = brackets:sub(1,1):len()\n\
    \  local opening_count = opening_count - 1\n  local closing_bracket = brackets:sub(2,2)\n\
    \  local closing_bracket = closing_bracket:sub(1,1)\n  local closing_bracket =\
    \ closing_bracket:sub(1,1)\n  local closing_bracket = closing_bracket:sub(1,1)\n\
    \  local closing_bracket = closing_bracket:sub(1,1)\n  local closing_bracket =\
    \ closing_bracket:sub(1,1)\n  local closing_bracket = closing_bracket:sub(1,1)\n\
    \  local closing_bracket = closing_bracket:sub(1,1)\n  local closing_bracket =\
    \ closing_bracket:sub(1,1)\n  local closing_bracket = closing_bracket:sub(1,1)\n\
    \  local closing_bracket = closing_bracket:sub(1,1)\n  local closing_bracket =\
    \ closing_bracket:sub(1,1)\n  local closing_bracket = closing_bracket:sub(1,1)\n\
    \  local closing_bracket = closing_bracket:sub(1,1)\n  local closing_bracket =\
    \ closing_bracket:sub(1,1)\n  local closing_bracket = closing_bracket:sub(1,1)\n\
    \  local closing_bracket = closing_bracket:sub(1,1)\n  local closing_bracket =\
    \ closing_bracket:sub(1,1)\n  local closing_bracket = closing_bracket:sub(1,1)\n\
    \  local closing_bracket = closing_bracket:sub(1,1)\n  local closing_bracket =\
    \ closing_bracket:sub(1,1)\n  local closing_bracket = closing_bracket:sub(1,1)\n\
    \  local closing_bracket = closing_bracket:sub(1,1)\n  local closing_bracket =\
    \ closing_bracket:sub(1,1)\n  local closing_bracket = closing_bracket:sub(1,1)\n\
    \  local closing_bracket = closing_bracket:sub(1,1)\n  local closing_bracket =\
    \ closing_bracket:sub(1,1)\n  local closing_bracket = closing_bracket:sub(1,1)\n\
    \  local closing_bracket = closing_bracket:sub(1,1)\n  local closing_bracket =\
    \ closing", "  local opening_brackets = brackets:gsub('%[(%)].*$', ''):gsub('%[(%)]$',\
    \ '')\n  local closing_brackets = brackets:gsub('%[)](%)$', ''):gsub('%[)]$',\
    \ '')\n  return opening_brackets:len() == closing_brackets:len()\nend", "  local\
    \ opening_brackets = brackets:gsub('%[(%)][(%)]', '%s*%1*%2')\n  local closing_brackets\
    \ = brackets:gsub('%[)](%)]%s*', '%s*%1*')\n  return opening_brackets:len() ==\
    \ closing_brackets:len()\nend", "  local open_brackets = brackets:gsub('%[(%)].*$',\
    \ ''):gsub('%[%)]', '')\n  local close_brackets = brackets:gsub('%[(%)](.*)$',\
    \ ''):gsub('%[%)]', '')\n  return open_brackets:len() == close_brackets:len()\
    \ and\n         open_brackets:gsub('%[(%)]', ''):gsub('%[%)]', '') == close_brackets\n\
    end", "  local opening_brackets = brackets:gsub('%[(%[(%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%[%",
  "  local opening_brackets = brackets:gsub('%[(%)].*$', ''):gsub('%[)]$', '')\n \
    \ local closing_brackets = brackets:gsub('%[)]%', ''):gsub('%[(%)].*$', '')\n\
    \  return opening_brackets ~= closing_brackets\nend", "  local opening = brackets:sub(1,1)\n\
    \  local closing = brackets:sub(2,2)\n  return opening:find(closing) == nil\n\
    end", "  local opening_brackets = brackets:gsub('%[(%)][(%)]*', '%s*'):gsub('%s*$',\
    \ '')\n  local closing_brackets = brackets:gsub('%[(%)](%)', '%s*'):gsub('%s*$',\
    \ '')\n  return opening_brackets:len() == closing_brackets:len()\nend", "  local\
    \ opening_brackets = brackets:gsub('%[(%)%]', function(x)\n    return x:reverse()\n\
    \  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]', function(x)\n\
    \    return x:reverse()\n  end)\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening_brackets = brackets:gsub('%[(%)%]', function(x)\n    return\
    \ x:reverse()\n  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]',\
    \ function(x)\n    return x:reverse()\n  end)\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  local opening_brackets_table = opening_brackets:gsub('()', '')\n  local closing_brackets_table\
    \ = closing_brackets:gsub('()', '')\n  local opening_brackets_table_count = opening_brackets_table:len()\n\
    \  local closing_brackets_table_count = closing_brackets_table:len()\n  local\
    \ opening_brackets_table_count_correct = opening_brackets_table_count == opening_brackets_count\n\
    \  local closing_brackets_table_count_correct = closing_brackets_table_count ==\
    \ closing_brackets_count\n  return opening_brackets_table_count_correct and closing_brackets_table_count_correct\n\
    end", "  local opening_brackets = brackets:gsub('%[(%)][(%)]','')\n  local closing_brackets\
    \ = brackets:gsub('%[)](%)','')\n  return opening_brackets ~= closing_brackets\n\
    end", "  local opening_brackets = brackets:gsub('%[(%)].*$', ''):gsub('%[)]%',\
    \ ''):gsub('%[()]%', '')\n  local closing_brackets = brackets:gsub('%[%[(%)]].*$',\
    \ ''):gsub('%[%)]%', ''):gsub('%[%)]%', '')\n  return opening_brackets ~= closing_brackets\n\
    end", "  local opening = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n\
    \  return opening:find(closing:reverse()) == nil\nend", "  local opening_brackets\
    \ = brackets:gsub('%[(%)][(%)]', function(x)\n    return x:reverse()\n  end)\n\
    \  local closing_brackets = brackets:gsub('%[)](%)', function(x)\n    return x:reverse()\n\
    \  end)\n  return opening_brackets:len() == closing_brackets:len() and\n    opening_brackets:all()\
    \ ~= closing_brackets:all()\nend", "  local opening_brackets = brackets:gsub('%[(%)].*$',\
    \ '\\0')\n  local closing_brackets = brackets:gsub('%[)]%', '\\0')\n  return opening_brackets:len()\
    \ == closing_brackets:len()\nend", "  local opening = brackets:sub(1,1)\n  local\
    \ closing = brackets:sub(2,2)\n  return opening and closing and opening:sub(1,1)\
    \ == closing:sub(1,1)\nend", "  local opening_brackets = brackets:gsub('%[(%)].*$',\
    \ '%%1'):gsub('%[(%)]$', '%%1')\n  local closing_brackets = brackets:gsub('%[)](%)',\
    \ '%%1'):gsub('%[)]$', '%%1')\n  return opening_brackets:gsub('%%1', '('):gsub('%%1',\
    \ ')') == closing_brackets\nend", "  brackets = brackets:gsub('%[(%)]+', function(x)\n\
    \    local opening = x:sub(1, 1)\n    local closing = x:sub(2)\n    if opening:sub(1,\
    \ 1) ~= closing:sub(1, 1) then\n      return false\n    end\n    return true\n\
    \  end)\n  return brackets:sub(1, 1) == '(' and brackets:sub(brackets:len()-1,\
    \ 1) == ')'\nend", "  local opening_brackets = brackets:gsub('%[(%)%]', function(x)\n\
    \    return x:reverse()\n  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]',\
    \ function(x)\n    return x:reverse()\n  end)\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  local opening_brackets_index = opening_brackets:sub(1, opening_brackets_count):find(')')\n\
    \  local closing_brackets_index = closing_brackets:sub(1, closing_brackets_count):find(')')\n\
    \  local opening_brackets_open = opening_brackets:sub(1, opening_brackets_index)\n\
    \  local closing_brackets_open = closing_brackets:sub(1, closing_brackets_index)\n\
    \  return opening_brackets_open ~= closing_brackets_open\nend", "  local opening_brackets\
    \ = brackets:gsub('%[(%)].*$', '%%1'):gsub('%[%)]%%2', '%1')\n  local closing_brackets\
    \ = brackets:gsub('%[(%)].*$', '%%2'):gsub('%[%)]%%1', '%2')\n  return opening_brackets\
    \ ~= closing_brackets\nend", "  local opening = brackets:sub(1,1)\n  local closing\
    \ = brackets:sub(2,2)\n  return opening ~= closing and opening ~= '(' and closing\
    \ ~= ')'\nend", "  local opening_brackets = brackets:gsub('%[(%)%]', function(x)\n\
    \    return x:reverse()\n  end)\n  local closing_brackets = brackets:gsub('%[%[(%)]%]',\
    \ function(x)\n    return x:reverse()\n  end)\n  return opening_brackets:len()\
    \ == closing_brackets:len()\nend", "  local open_brackets = brackets:gsub('%[(%)][(%)]',\
    \ '%s*%1*%s*'):gsub('%s*%1*%s*', '%s*%1*%s*'):gsub('%s*%1*%s*', '%s*%1*%s*'):gsub('%s*%1*%s*',\
    \ '%s*%1*%s*')\n  local close_brackets = brackets:gsub('%[(%)](%)', '%s*%1*%s*'):gsub('%s*%1*%s*',\
    \ '%s*%1*%s*'):gsub('%s*%1*%s*', '%s*%1*%s*'):gsub('%s*%1*%s*', '%s*%1*%s*')\n\
    \  return open_brackets:len() == close_brackets:len() and open_brackets:sub(1,\
    \ open_brackets:len()) == close_brackets:sub(1, close_brackets:len())\nend", " \
    \ local opening = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n  return\
    \ opening and closing and opening:sub(1,1) == closing:sub(1,1)\nend", "  local\
    \ opening_brackets = brackets:gsub('%[(%)].*$', '%%1'):gsub('%%%1', '()')\n  local\
    \ closing_brackets = brackets:gsub('%[)]%$', '%%1'):gsub('%%%1', '()')\n  return\
    \ opening_brackets ~= closing_brackets\nend", "  local opening = brackets:sub(1,1)\n\
    \  local closing = brackets:sub(2,2)\n  return opening and closing and opening:sub(1,1)\
    \ == closing:sub(1,1)\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

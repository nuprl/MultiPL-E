language: lua
name: HumanEval_27_flip_case
results:
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c:lower() ~= c then\n      result = string.sub(i,\
    \ j):upper() .. string.sub(i, j):lower()\n      i = i + 1\n      j = j - 1\n \
    \   else\n      i = i + 1\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprpy_jjpd.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmprpy_jjpd.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.upper(char) then\n      result\
    \ = string.sub(i, j - 1) .. string.lower(char)\n      i = i + 1\n    elseif char\
    \ == string.lower(char) then\n      result = string.sub(i, j - 1) .. string.upper(char)\n\
    \      i = i + 1\n    else\n      i = i + 1\n    end\n    j = j - 1\n  end\n \
    \ return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp72hwzitx.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp72hwzitx.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750273
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    if\
    \ string.sub(i, 1, 1) == string.sub(i, 1, 1) then\n      result = string.sub(i,\
    \ 1, 1):upper() .. string.sub(i, 2):lower()\n    else\n      result = string.sub(i,\
    \ 1, 1):lower() .. string.sub(i, 2):upper()\n    end\n    i = i + 1\n    j = j\
    \ - 1\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpklw7cv8u.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"3\"\nstack traceback:\n\t/tmp/tmpklw7cv8u.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750273
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local length = #string\n  for i = 1, length do\n \
    \   local char = string.sub(i, i)\n    local upper = string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpavosmrd5.lua:10: '')'' expected (to close ''('' at line 9)
    near ''lu''

    '
  stdout: ''
  timestamp: 1659750273
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = {}\n  for _, c in ipairs(string) do\n    local upper = string.match(c,\
    \ \"^%l+$\")\n    local lower = string.match(c, \"^%l\")\n    if upper and lower\
    \ then\n      result[#result + 1] = string.sub(upper, 1, #upper-1) + string.sub(lower,\
    \ 1, #lower-1)\n    elseif upper then\n      result[#result + 1] = string.sub(upper,\
    \ 1, #upper-1)\n    elseif lower then\n      result[#result + 1] = string.sub(lower,\
    \ 1, #lower-1)\n    else\n      result[#result + 1] = c\n    end\n  end\n  return\
    \ table.concat(result)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpiqgtasuo.lua:6:\
    \ bad argument #1 to 'ipairs' (table expected, got string)\nstack traceback:\n\
    \t/tmp/tmpiqgtasuo.lua:6: in function 'candidate'\n\t/tmp/tmpiqgtasuo.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1659750273
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = {}\n  for i = 1, #string do\n    local char = string.sub(i,\
    \ i)\n    local upper = char:upper()\n    local lower = char:lower()\n    result[#result\
    \ + 1] = upper .. lower\n  end\n  return table.concat(result, \"\")\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprkb4ldq7.lua:19:\
    \ expected: \"hELLO!\"\nactual: \"11\"\nstack traceback:\n\t/tmp/tmprkb4ldq7.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750273
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: -1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.upper(char) then\n      result\
    \ = string.sub(i, j) .. string.lower(char)\n      i = i + 1\n    elseif char ==\
    \ string.lower(char) then\n      result = string.sub(i, j) .. string.upper(char)\n\
    \      i = i + 1\n    else\n      result = result .. char\n      i = i + 1\n \
    \   end\n    j = j + 1\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750278
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    if\
    \ string.sub(i, 1, 1) ~= '^' then\n      result = string.sub(result, 1, i) + string.sub(result,\
    \ i + 1, j) + string.sub(result, 1, j - 1)\n      i = i + 1\n      j = j - 1\n\
    \    else\n      i = i + 1\n      j = j - 1\n    end\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpmh8wzxk6.lua:9:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmpmh8wzxk6.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpmh8wzxk6.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750273
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: -1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, 2) .. string.sub(i, 2, 2)\n\
    \    end\n    i = i + 1\n    j = j + 1\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750247
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc0bmeubf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpc0bmeubf.lua:7:\
    \ in function </tmp/tmpc0bmeubf.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpc0bmeubf.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpc0bmeubf.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750242
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = {}\n  for _, c in ipairs(string) do\n    result[#result + 1]\
    \ = c:upper()\n  end\n  return table.concat(result)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3pa1v26q.lua:6:\
    \ bad argument #1 to 'ipairs' (table expected, got string)\nstack traceback:\n\
    \t/tmp/tmp3pa1v26q.lua:6: in function 'candidate'\n\t/tmp/tmp3pa1v26q.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1659750242
- exit_code: -1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c == \"a\" then\n      result = string.sub(i, j):upper()\n\
    \      i = i + 1\n    elseif c == \"A\" then\n      result = string.sub(i, j):lower()\n\
    \      i = i + 1\n    else\n      result = result .. c\n      i = i + 1\n    end\n\
    \    j = j + 1\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750278
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i = 1, #string do\n        if string.sub(i,\
    \ 1, 1) == 'a' then\n            string.sub(i, 1, 2) = string.sub(i, 2, 1)\n \
    \       end\n        if string.sub(i, #string, 1) == 'A' then\n            string.sub(i,\
    \ #string, 2) = string.sub(i, #string, 2)\n        end\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpzusth2bj.lua:8: unexpected symbol near ''=''

    '
  stdout: ''
  timestamp: 1659750273

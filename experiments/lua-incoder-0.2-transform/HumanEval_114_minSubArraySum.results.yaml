language: lua
name: HumanEval_114_minSubArraySum
results:
- exit_code: 1
  program: "-- Given an array of integers nums, find the minimum sum of any non-empty\
    \ sub-array\n-- of nums.\n-- Example\n-- >>> minSubArraySum({2, 3, 4, 1, 2, 4})\n\
    -- 1\n-- >>> minSubArraySum({-1, -2, -3})\n-- -6\nlocal function minSubArraySum(nums)\n\
    \  local minSum = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums do\n \
    \   local currentSum = nums[i]\n    for j = i + 1, #nums do\n      currentSum\
    \ = currentSum + nums[j]\n      if currentSum < minSum then\n        minSum =\
    \ currentSum\n        minSumIndex = j\n      end\n    end\n  end\n  return minSum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = minSubArraySum\n\
    \    lu.assertEquals(candidate({2, 3, 4, 1, 2, 4}), 1)\n    lu.assertEquals(candidate({-1,\
    \ -2, -3}), -6)\n    lu.assertEquals(candidate({-1, -2, -3, 2, -10}), -14)\n \
    \   lu.assertEquals(candidate({-9999999999999999}), -9999999999999999)\n    lu.assertEquals(candidate({0,\
    \ 10, 20, 1000000}), 0)\n    lu.assertEquals(candidate({-1, -2, -3, 10, -5}),\
    \ -6)\n    lu.assertEquals(candidate({100, -1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({10,\
    \ 11, 13, 8, 3, 4}), 3)\n    lu.assertEquals(candidate({100, -33, 32, -1, 0, -2}),\
    \ -33)\n    lu.assertEquals(candidate({-10}), -10)\n    lu.assertEquals(candidate({7}),\
    \ 7)\n    lu.assertEquals(candidate({1, -1}), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp885suilf.lua:15:\
    \ attempt to compare number with nil\nstack traceback:\n\t/tmp/tmp885suilf.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmp885suilf.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750590
- exit_code: 1
  program: "-- Given an array of integers nums, find the minimum sum of any non-empty\
    \ sub-array\n-- of nums.\n-- Example\n-- >>> minSubArraySum({2, 3, 4, 1, 2, 4})\n\
    -- 1\n-- >>> minSubArraySum({-1, -2, -3})\n-- -6\nlocal function minSubArraySum(nums)\n\
    \  local minSum = math.inf\n  for i = 1, #nums do\n    local sum = 0\n    for\
    \ j = 1, i do\n      sum = sum + nums[j]\n    end\n    if sum < minSum then\n\
    \      minSum = sum\n    end\n  end\n  return minSum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = minSubArraySum\n    lu.assertEquals(candidate({2,\
    \ 3, 4, 1, 2, 4}), 1)\n    lu.assertEquals(candidate({-1, -2, -3}), -6)\n    lu.assertEquals(candidate({-1,\
    \ -2, -3, 2, -10}), -14)\n    lu.assertEquals(candidate({-9999999999999999}),\
    \ -9999999999999999)\n    lu.assertEquals(candidate({0, 10, 20, 1000000}), 0)\n\
    \    lu.assertEquals(candidate({-1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({100,\
    \ -1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({10, 11, 13, 8, 3,\
    \ 4}), 3)\n    lu.assertEquals(candidate({100, -33, 32, -1, 0, -2}), -33)\n  \
    \  lu.assertEquals(candidate({-10}), -10)\n    lu.assertEquals(candidate({7}),\
    \ 7)\n    lu.assertEquals(candidate({1, -1}), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwg609ube.lua:15:\
    \ attempt to compare number with nil\nstack traceback:\n\t/tmp/tmpwg609ube.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpwg609ube.lua:25: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750590
- exit_code: 1
  program: "-- Given an array of integers nums, find the minimum sum of any non-empty\
    \ sub-array\n-- of nums.\n-- Example\n-- >>> minSubArraySum({2, 3, 4, 1, 2, 4})\n\
    -- 1\n-- >>> minSubArraySum({-1, -2, -3})\n-- -6\nlocal function minSubArraySum(nums)\n\
    \  local sum = 0\n  local minSum = math.inf\n  for i = 1, #nums do\n    sum =\
    \ sum + nums[i]\n    if sum < minSum then\n      minSum = sum\n    end\n  end\n\
    \  return minSum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = minSubArraySum\n    lu.assertEquals(candidate({2, 3, 4, 1, 2,\
    \ 4}), 1)\n    lu.assertEquals(candidate({-1, -2, -3}), -6)\n    lu.assertEquals(candidate({-1,\
    \ -2, -3, 2, -10}), -14)\n    lu.assertEquals(candidate({-9999999999999999}),\
    \ -9999999999999999)\n    lu.assertEquals(candidate({0, 10, 20, 1000000}), 0)\n\
    \    lu.assertEquals(candidate({-1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({100,\
    \ -1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({10, 11, 13, 8, 3,\
    \ 4}), 3)\n    lu.assertEquals(candidate({100, -33, 32, -1, 0, -2}), -33)\n  \
    \  lu.assertEquals(candidate({-10}), -10)\n    lu.assertEquals(candidate({7}),\
    \ 7)\n    lu.assertEquals(candidate({1, -1}), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwqa1uoh2.lua:13:\
    \ attempt to compare number with nil\nstack traceback:\n\t/tmp/tmpwqa1uoh2.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpwqa1uoh2.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750590
- exit_code: 1
  program: "-- Given an array of integers nums, find the minimum sum of any non-empty\
    \ sub-array\n-- of nums.\n-- Example\n-- >>> minSubArraySum({2, 3, 4, 1, 2, 4})\n\
    -- 1\n-- >>> minSubArraySum({-1, -2, -3})\n-- -6\nlocal function minSubArraySum(nums)\n\
    \  local min = math.min(unpack(nums))\n  local sum = 0\n  for i = 1, #nums do\n\
    \    sum = sum + nums[i]\n    if sum < min then\n      min = sum\n    end\n  end\n\
    \  return min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = minSubArraySum\n    lu.assertEquals(candidate({2, 3, 4, 1, 2, 4}),\
    \ 1)\n    lu.assertEquals(candidate({-1, -2, -3}), -6)\n    lu.assertEquals(candidate({-1,\
    \ -2, -3, 2, -10}), -14)\n    lu.assertEquals(candidate({-9999999999999999}),\
    \ -9999999999999999)\n    lu.assertEquals(candidate({0, 10, 20, 1000000}), 0)\n\
    \    lu.assertEquals(candidate({-1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({100,\
    \ -1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({10, 11, 13, 8, 3,\
    \ 4}), 3)\n    lu.assertEquals(candidate({100, -33, 32, -1, 0, -2}), -33)\n  \
    \  lu.assertEquals(candidate({-10}), -10)\n    lu.assertEquals(candidate({7}),\
    \ 7)\n    lu.assertEquals(candidate({1, -1}), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfey8dqqx.lua:29:\
    \ expected: -6, actual: -5\nstack traceback:\n\t/tmp/tmpfey8dqqx.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750590
- exit_code: 1
  program: "-- Given an array of integers nums, find the minimum sum of any non-empty\
    \ sub-array\n-- of nums.\n-- Example\n-- >>> minSubArraySum({2, 3, 4, 1, 2, 4})\n\
    -- 1\n-- >>> minSubArraySum({-1, -2, -3})\n-- -6\nlocal function minSubArraySum(nums)\n\
    \  -- Base case\n  if #nums == 0 then\n    return 0\n  end\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = minSubArraySum\n    lu.assertEquals(candidate({2,\
    \ 3, 4, 1, 2, 4}), 1)\n    lu.assertEquals(candidate({-1, -2, -3}), -6)\n    lu.assertEquals(candidate({-1,\
    \ -2, -3, 2, -10}), -14)\n    lu.assertEquals(candidate({-9999999999999999}),\
    \ -9999999999999999)\n    lu.assertEquals(candidate({0, 10, 20, 1000000}), 0)\n\
    \    lu.assertEquals(candidate({-1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({100,\
    \ -1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({10, 11, 13, 8, 3,\
    \ 4}), 3)\n    lu.assertEquals(candidate({100, -33, 32, -1, 0, -2}), -33)\n  \
    \  lu.assertEquals(candidate({-10}), -10)\n    lu.assertEquals(candidate({7}),\
    \ 7)\n    lu.assertEquals(candidate({1, -1}), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpywyn0we0.lua:31: ''end'' expected (to close ''function'' at
    line 8) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750590
- exit_code: 1
  program: "-- Given an array of integers nums, find the minimum sum of any non-empty\
    \ sub-array\n-- of nums.\n-- Example\n-- >>> minSubArraySum({2, 3, 4, 1, 2, 4})\n\
    -- 1\n-- >>> minSubArraySum({-1, -2, -3})\n-- -6\nlocal function minSubArraySum(nums)\n\
    \  local sum = 0\n  local minSum = math.inf\n  for i = 1, #nums do\n    sum =\
    \ sum + nums[i]\n    if sum < minSum then\n      minSum = sum\n    end\n  end\n\
    \  return minSum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = minSubArraySum\n    lu.assertEquals(candidate({2, 3, 4, 1, 2,\
    \ 4}), 1)\n    lu.assertEquals(candidate({-1, -2, -3}), -6)\n    lu.assertEquals(candidate({-1,\
    \ -2, -3, 2, -10}), -14)\n    lu.assertEquals(candidate({-9999999999999999}),\
    \ -9999999999999999)\n    lu.assertEquals(candidate({0, 10, 20, 1000000}), 0)\n\
    \    lu.assertEquals(candidate({-1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({100,\
    \ -1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({10, 11, 13, 8, 3,\
    \ 4}), 3)\n    lu.assertEquals(candidate({100, -33, 32, -1, 0, -2}), -33)\n  \
    \  lu.assertEquals(candidate({-10}), -10)\n    lu.assertEquals(candidate({7}),\
    \ 7)\n    lu.assertEquals(candidate({1, -1}), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwqa1uoh2.lua:13:\
    \ attempt to compare number with nil\nstack traceback:\n\t/tmp/tmpwqa1uoh2.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpwqa1uoh2.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750590
- exit_code: 1
  program: "-- Given an array of integers nums, find the minimum sum of any non-empty\
    \ sub-array\n-- of nums.\n-- Example\n-- >>> minSubArraySum({2, 3, 4, 1, 2, 4})\n\
    -- 1\n-- >>> minSubArraySum({-1, -2, -3})\n-- -6\nlocal function minSubArraySum(nums)\n\
    \  local minSum = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums do\n \
    \   local sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n    end\n \
    \   if sum < minSum then\n      minSum = sum\n      minSumIndex = i\n    end\n\
    \  end\n  return minSumIndex\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = minSubArraySum\n    lu.assertEquals(candidate({2, 3, 4, 1, 2,\
    \ 4}), 1)\n    lu.assertEquals(candidate({-1, -2, -3}), -6)\n    lu.assertEquals(candidate({-1,\
    \ -2, -3, 2, -10}), -14)\n    lu.assertEquals(candidate({-9999999999999999}),\
    \ -9999999999999999)\n    lu.assertEquals(candidate({0, 10, 20, 1000000}), 0)\n\
    \    lu.assertEquals(candidate({-1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({100,\
    \ -1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({10, 11, 13, 8, 3,\
    \ 4}), 3)\n    lu.assertEquals(candidate({100, -33, 32, -1, 0, -2}), -33)\n  \
    \  lu.assertEquals(candidate({-10}), -10)\n    lu.assertEquals(candidate({7}),\
    \ 7)\n    lu.assertEquals(candidate({1, -1}), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpufbh19ei.lua:16:\
    \ attempt to compare number with nil\nstack traceback:\n\t/tmp/tmpufbh19ei.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmpufbh19ei.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750590
- exit_code: 1
  program: "-- Given an array of integers nums, find the minimum sum of any non-empty\
    \ sub-array\n-- of nums.\n-- Example\n-- >>> minSubArraySum({2, 3, 4, 1, 2, 4})\n\
    -- 1\n-- >>> minSubArraySum({-1, -2, -3})\n-- -6\nlocal function minSubArraySum(nums)\n\
    \  local minSum = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums do\n \
    \   local currentSum = nums[i]\n    for j = i + 1, #nums do\n      currentSum\
    \ = currentSum + nums[j]\n      if currentSum < minSum then\n        minSum =\
    \ currentSum\n        minSumIndex = j\n      end\n    end\n  end\n  return minSumIndex\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = minSubArraySum\n\
    \    lu.assertEquals(candidate({2, 3, 4, 1, 2, 4}), 1)\n    lu.assertEquals(candidate({-1,\
    \ -2, -3}), -6)\n    lu.assertEquals(candidate({-1, -2, -3, 2, -10}), -14)\n \
    \   lu.assertEquals(candidate({-9999999999999999}), -9999999999999999)\n    lu.assertEquals(candidate({0,\
    \ 10, 20, 1000000}), 0)\n    lu.assertEquals(candidate({-1, -2, -3, 10, -5}),\
    \ -6)\n    lu.assertEquals(candidate({100, -1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({10,\
    \ 11, 13, 8, 3, 4}), 3)\n    lu.assertEquals(candidate({100, -33, 32, -1, 0, -2}),\
    \ -33)\n    lu.assertEquals(candidate({-10}), -10)\n    lu.assertEquals(candidate({7}),\
    \ 7)\n    lu.assertEquals(candidate({1, -1}), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbmmoguj5.lua:15:\
    \ attempt to compare number with nil\nstack traceback:\n\t/tmp/tmpbmmoguj5.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpbmmoguj5.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750590
- exit_code: 1
  program: "-- Given an array of integers nums, find the minimum sum of any non-empty\
    \ sub-array\n-- of nums.\n-- Example\n-- >>> minSubArraySum({2, 3, 4, 1, 2, 4})\n\
    -- 1\n-- >>> minSubArraySum({-1, -2, -3})\n-- -6\nlocal function minSubArraySum(nums)\n\
    \  local minSum = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums do\n \
    \   local sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n    end\n \
    \   if sum < minSum then\n      minSum = sum\n      minSumIndex = i\n    end\n\
    \  end\n  return minSumIndex\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = minSubArraySum\n    lu.assertEquals(candidate({2, 3, 4, 1, 2,\
    \ 4}), 1)\n    lu.assertEquals(candidate({-1, -2, -3}), -6)\n    lu.assertEquals(candidate({-1,\
    \ -2, -3, 2, -10}), -14)\n    lu.assertEquals(candidate({-9999999999999999}),\
    \ -9999999999999999)\n    lu.assertEquals(candidate({0, 10, 20, 1000000}), 0)\n\
    \    lu.assertEquals(candidate({-1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({100,\
    \ -1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({10, 11, 13, 8, 3,\
    \ 4}), 3)\n    lu.assertEquals(candidate({100, -33, 32, -1, 0, -2}), -33)\n  \
    \  lu.assertEquals(candidate({-10}), -10)\n    lu.assertEquals(candidate({7}),\
    \ 7)\n    lu.assertEquals(candidate({1, -1}), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpufbh19ei.lua:16:\
    \ attempt to compare number with nil\nstack traceback:\n\t/tmp/tmpufbh19ei.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmpufbh19ei.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750590
- exit_code: 1
  program: "-- Given an array of integers nums, find the minimum sum of any non-empty\
    \ sub-array\n-- of nums.\n-- Example\n-- >>> minSubArraySum({2, 3, 4, 1, 2, 4})\n\
    -- 1\n-- >>> minSubArraySum({-1, -2, -3})\n-- -6\nlocal function minSubArraySum(nums)\n\
    \  -- Base case\n  if #nums == 0 then\n    return 0\n  end\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = minSubArraySum\n    lu.assertEquals(candidate({2,\
    \ 3, 4, 1, 2, 4}), 1)\n    lu.assertEquals(candidate({-1, -2, -3}), -6)\n    lu.assertEquals(candidate({-1,\
    \ -2, -3, 2, -10}), -14)\n    lu.assertEquals(candidate({-9999999999999999}),\
    \ -9999999999999999)\n    lu.assertEquals(candidate({0, 10, 20, 1000000}), 0)\n\
    \    lu.assertEquals(candidate({-1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({100,\
    \ -1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({10, 11, 13, 8, 3,\
    \ 4}), 3)\n    lu.assertEquals(candidate({100, -33, 32, -1, 0, -2}), -33)\n  \
    \  lu.assertEquals(candidate({-10}), -10)\n    lu.assertEquals(candidate({7}),\
    \ 7)\n    lu.assertEquals(candidate({1, -1}), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpywyn0we0.lua:31: ''end'' expected (to close ''function'' at
    line 8) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750590
- exit_code: 1
  program: "-- Given an array of integers nums, find the minimum sum of any non-empty\
    \ sub-array\n-- of nums.\n-- Example\n-- >>> minSubArraySum({2, 3, 4, 1, 2, 4})\n\
    -- 1\n-- >>> minSubArraySum({-1, -2, -3})\n-- -6\nlocal function minSubArraySum(nums)\n\
    \  local minSum = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums do\n \
    \   local sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n    end\n \
    \   if sum < minSum then\n      minSum = sum\n      minSumIndex = i\n    end\n\
    \  end\n  return minSum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = minSubArraySum\n    lu.assertEquals(candidate({2, 3, 4, 1, 2,\
    \ 4}), 1)\n    lu.assertEquals(candidate({-1, -2, -3}), -6)\n    lu.assertEquals(candidate({-1,\
    \ -2, -3, 2, -10}), -14)\n    lu.assertEquals(candidate({-9999999999999999}),\
    \ -9999999999999999)\n    lu.assertEquals(candidate({0, 10, 20, 1000000}), 0)\n\
    \    lu.assertEquals(candidate({-1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({100,\
    \ -1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({10, 11, 13, 8, 3,\
    \ 4}), 3)\n    lu.assertEquals(candidate({100, -33, 32, -1, 0, -2}), -33)\n  \
    \  lu.assertEquals(candidate({-10}), -10)\n    lu.assertEquals(candidate({7}),\
    \ 7)\n    lu.assertEquals(candidate({1, -1}), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp10c0uz6h.lua:16:\
    \ attempt to compare number with nil\nstack traceback:\n\t/tmp/tmp10c0uz6h.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmp10c0uz6h.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750590
- exit_code: 1
  program: "-- Given an array of integers nums, find the minimum sum of any non-empty\
    \ sub-array\n-- of nums.\n-- Example\n-- >>> minSubArraySum({2, 3, 4, 1, 2, 4})\n\
    -- 1\n-- >>> minSubArraySum({-1, -2, -3})\n-- -6\nlocal function minSubArraySum(nums)\n\
    \  local minSum = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums do\n \
    \   local sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n    end\n \
    \   if sum < minSum then\n      minSum = sum\n      minSumIndex = i\n    end\n\
    \  end\n  return minSumIndex\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = minSubArraySum\n    lu.assertEquals(candidate({2, 3, 4, 1, 2,\
    \ 4}), 1)\n    lu.assertEquals(candidate({-1, -2, -3}), -6)\n    lu.assertEquals(candidate({-1,\
    \ -2, -3, 2, -10}), -14)\n    lu.assertEquals(candidate({-9999999999999999}),\
    \ -9999999999999999)\n    lu.assertEquals(candidate({0, 10, 20, 1000000}), 0)\n\
    \    lu.assertEquals(candidate({-1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({100,\
    \ -1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({10, 11, 13, 8, 3,\
    \ 4}), 3)\n    lu.assertEquals(candidate({100, -33, 32, -1, 0, -2}), -33)\n  \
    \  lu.assertEquals(candidate({-10}), -10)\n    lu.assertEquals(candidate({7}),\
    \ 7)\n    lu.assertEquals(candidate({1, -1}), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpufbh19ei.lua:16:\
    \ attempt to compare number with nil\nstack traceback:\n\t/tmp/tmpufbh19ei.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmpufbh19ei.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750590
- exit_code: 1
  program: "-- Given an array of integers nums, find the minimum sum of any non-empty\
    \ sub-array\n-- of nums.\n-- Example\n-- >>> minSubArraySum({2, 3, 4, 1, 2, 4})\n\
    -- 1\n-- >>> minSubArraySum({-1, -2, -3})\n-- -6\nlocal function minSubArraySum(nums)\n\
    \  local minSum = math.inf\n  for i = 1, #nums do\n    local sum = nums[i]\n \
    \   for j = i + 1, #nums do\n      sum = sum + nums[j]\n      if sum < minSum\
    \ then\n        minSum = sum\n      end\n    end\n  end\n  return minSum\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = minSubArraySum\n\
    \    lu.assertEquals(candidate({2, 3, 4, 1, 2, 4}), 1)\n    lu.assertEquals(candidate({-1,\
    \ -2, -3}), -6)\n    lu.assertEquals(candidate({-1, -2, -3, 2, -10}), -14)\n \
    \   lu.assertEquals(candidate({-9999999999999999}), -9999999999999999)\n    lu.assertEquals(candidate({0,\
    \ 10, 20, 1000000}), 0)\n    lu.assertEquals(candidate({-1, -2, -3, 10, -5}),\
    \ -6)\n    lu.assertEquals(candidate({100, -1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({10,\
    \ 11, 13, 8, 3, 4}), 3)\n    lu.assertEquals(candidate({100, -33, 32, -1, 0, -2}),\
    \ -33)\n    lu.assertEquals(candidate({-10}), -10)\n    lu.assertEquals(candidate({7}),\
    \ 7)\n    lu.assertEquals(candidate({1, -1}), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp95asg2kk.lua:14:\
    \ attempt to compare number with nil\nstack traceback:\n\t/tmp/tmp95asg2kk.lua:14:\
    \ in function 'candidate'\n\t/tmp/tmp95asg2kk.lua:25: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750590
- exit_code: 1
  program: "-- Given an array of integers nums, find the minimum sum of any non-empty\
    \ sub-array\n-- of nums.\n-- Example\n-- >>> minSubArraySum({2, 3, 4, 1, 2, 4})\n\
    -- 1\n-- >>> minSubArraySum({-1, -2, -3})\n-- -6\nlocal function minSubArraySum(nums)\n\
    \  local min = math.inf\n  local sum = 0\n  for i = 1, #nums do\n    sum = sum\
    \ + nums[i]\n    if sum < min then\n      min = sum\n    end\n  end\n  return\
    \ min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = minSubArraySum\n    lu.assertEquals(candidate({2, 3, 4, 1, 2, 4}), 1)\n  \
    \  lu.assertEquals(candidate({-1, -2, -3}), -6)\n    lu.assertEquals(candidate({-1,\
    \ -2, -3, 2, -10}), -14)\n    lu.assertEquals(candidate({-9999999999999999}),\
    \ -9999999999999999)\n    lu.assertEquals(candidate({0, 10, 20, 1000000}), 0)\n\
    \    lu.assertEquals(candidate({-1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({100,\
    \ -1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({10, 11, 13, 8, 3,\
    \ 4}), 3)\n    lu.assertEquals(candidate({100, -33, 32, -1, 0, -2}), -33)\n  \
    \  lu.assertEquals(candidate({-10}), -10)\n    lu.assertEquals(candidate({7}),\
    \ 7)\n    lu.assertEquals(candidate({1, -1}), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2ersqde8.lua:13:\
    \ attempt to compare number with nil\nstack traceback:\n\t/tmp/tmp2ersqde8.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmp2ersqde8.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750590
- exit_code: 1
  program: "-- Given an array of integers nums, find the minimum sum of any non-empty\
    \ sub-array\n-- of nums.\n-- Example\n-- >>> minSubArraySum({2, 3, 4, 1, 2, 4})\n\
    -- 1\n-- >>> minSubArraySum({-1, -2, -3})\n-- -6\nlocal function minSubArraySum(nums)\n\
    \  local minSum = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums do\n \
    \   local sum = 0\n    for j = 1, #nums do\n      if j == i then\n        sum\
    \ = sum + nums[j]\n      else\n        sum = sum + nums[j] - nums[i]\n      end\n\
    \    end\n    if sum < minSum then\n      minSum = sum\n      minSumIndex = i\n\
    \    end\n  end\n  return minSumIndex\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = minSubArraySum\n    lu.assertEquals(candidate({2,\
    \ 3, 4, 1, 2, 4}), 1)\n    lu.assertEquals(candidate({-1, -2, -3}), -6)\n    lu.assertEquals(candidate({-1,\
    \ -2, -3, 2, -10}), -14)\n    lu.assertEquals(candidate({-9999999999999999}),\
    \ -9999999999999999)\n    lu.assertEquals(candidate({0, 10, 20, 1000000}), 0)\n\
    \    lu.assertEquals(candidate({-1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({100,\
    \ -1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({10, 11, 13, 8, 3,\
    \ 4}), 3)\n    lu.assertEquals(candidate({100, -33, 32, -1, 0, -2}), -33)\n  \
    \  lu.assertEquals(candidate({-10}), -10)\n    lu.assertEquals(candidate({7}),\
    \ 7)\n    lu.assertEquals(candidate({1, -1}), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9akxxrh5.lua:20:\
    \ attempt to compare number with nil\nstack traceback:\n\t/tmp/tmp9akxxrh5.lua:20:\
    \ in function 'candidate'\n\t/tmp/tmp9akxxrh5.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750590
- exit_code: 1
  program: "-- Given an array of integers nums, find the minimum sum of any non-empty\
    \ sub-array\n-- of nums.\n-- Example\n-- >>> minSubArraySum({2, 3, 4, 1, 2, 4})\n\
    -- 1\n-- >>> minSubArraySum({-1, -2, -3})\n-- -6\nlocal function minSubArraySum(nums)\n\
    \  local minSum = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums do\n \
    \   local currentSum = nums[i]\n    for j = i + 1, #nums do\n      currentSum\
    \ = currentSum + nums[j]\n      if currentSum < minSum then\n        minSum =\
    \ currentSum\n        minSumIndex = j\n      end\n    end\n  end\n  return minSum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = minSubArraySum\n\
    \    lu.assertEquals(candidate({2, 3, 4, 1, 2, 4}), 1)\n    lu.assertEquals(candidate({-1,\
    \ -2, -3}), -6)\n    lu.assertEquals(candidate({-1, -2, -3, 2, -10}), -14)\n \
    \   lu.assertEquals(candidate({-9999999999999999}), -9999999999999999)\n    lu.assertEquals(candidate({0,\
    \ 10, 20, 1000000}), 0)\n    lu.assertEquals(candidate({-1, -2, -3, 10, -5}),\
    \ -6)\n    lu.assertEquals(candidate({100, -1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({10,\
    \ 11, 13, 8, 3, 4}), 3)\n    lu.assertEquals(candidate({100, -33, 32, -1, 0, -2}),\
    \ -33)\n    lu.assertEquals(candidate({-10}), -10)\n    lu.assertEquals(candidate({7}),\
    \ 7)\n    lu.assertEquals(candidate({1, -1}), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp885suilf.lua:15:\
    \ attempt to compare number with nil\nstack traceback:\n\t/tmp/tmp885suilf.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmp885suilf.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750590
- exit_code: 1
  program: "-- Given an array of integers nums, find the minimum sum of any non-empty\
    \ sub-array\n-- of nums.\n-- Example\n-- >>> minSubArraySum({2, 3, 4, 1, 2, 4})\n\
    -- 1\n-- >>> minSubArraySum({-1, -2, -3})\n-- -6\nlocal function minSubArraySum(nums)\n\
    \  -- Base case: empty array\n  if #nums == 0 then\n    return 0\n  end\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = minSubArraySum\n\
    \    lu.assertEquals(candidate({2, 3, 4, 1, 2, 4}), 1)\n    lu.assertEquals(candidate({-1,\
    \ -2, -3}), -6)\n    lu.assertEquals(candidate({-1, -2, -3, 2, -10}), -14)\n \
    \   lu.assertEquals(candidate({-9999999999999999}), -9999999999999999)\n    lu.assertEquals(candidate({0,\
    \ 10, 20, 1000000}), 0)\n    lu.assertEquals(candidate({-1, -2, -3, 10, -5}),\
    \ -6)\n    lu.assertEquals(candidate({100, -1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({10,\
    \ 11, 13, 8, 3, 4}), 3)\n    lu.assertEquals(candidate({100, -33, 32, -1, 0, -2}),\
    \ -33)\n    lu.assertEquals(candidate({-10}), -10)\n    lu.assertEquals(candidate({7}),\
    \ 7)\n    lu.assertEquals(candidate({1, -1}), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpclg0j__u.lua:31: ''end'' expected (to close ''function'' at
    line 8) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750590
- exit_code: 1
  program: "-- Given an array of integers nums, find the minimum sum of any non-empty\
    \ sub-array\n-- of nums.\n-- Example\n-- >>> minSubArraySum({2, 3, 4, 1, 2, 4})\n\
    -- 1\n-- >>> minSubArraySum({-1, -2, -3})\n-- -6\nlocal function minSubArraySum(nums)\n\
    \  -- Base case\n  if #nums == 0 then\n    return 0\n  end\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = minSubArraySum\n    lu.assertEquals(candidate({2,\
    \ 3, 4, 1, 2, 4}), 1)\n    lu.assertEquals(candidate({-1, -2, -3}), -6)\n    lu.assertEquals(candidate({-1,\
    \ -2, -3, 2, -10}), -14)\n    lu.assertEquals(candidate({-9999999999999999}),\
    \ -9999999999999999)\n    lu.assertEquals(candidate({0, 10, 20, 1000000}), 0)\n\
    \    lu.assertEquals(candidate({-1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({100,\
    \ -1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({10, 11, 13, 8, 3,\
    \ 4}), 3)\n    lu.assertEquals(candidate({100, -33, 32, -1, 0, -2}), -33)\n  \
    \  lu.assertEquals(candidate({-10}), -10)\n    lu.assertEquals(candidate({7}),\
    \ 7)\n    lu.assertEquals(candidate({1, -1}), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpywyn0we0.lua:31: ''end'' expected (to close ''function'' at
    line 8) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750590
- exit_code: 1
  program: "-- Given an array of integers nums, find the minimum sum of any non-empty\
    \ sub-array\n-- of nums.\n-- Example\n-- >>> minSubArraySum({2, 3, 4, 1, 2, 4})\n\
    -- 1\n-- >>> minSubArraySum({-1, -2, -3})\n-- -6\nlocal function minSubArraySum(nums)\n\
    \  -- Base case\n  if #nums == 0 then\n    return 0\n  end\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = minSubArraySum\n    lu.assertEquals(candidate({2,\
    \ 3, 4, 1, 2, 4}), 1)\n    lu.assertEquals(candidate({-1, -2, -3}), -6)\n    lu.assertEquals(candidate({-1,\
    \ -2, -3, 2, -10}), -14)\n    lu.assertEquals(candidate({-9999999999999999}),\
    \ -9999999999999999)\n    lu.assertEquals(candidate({0, 10, 20, 1000000}), 0)\n\
    \    lu.assertEquals(candidate({-1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({100,\
    \ -1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({10, 11, 13, 8, 3,\
    \ 4}), 3)\n    lu.assertEquals(candidate({100, -33, 32, -1, 0, -2}), -33)\n  \
    \  lu.assertEquals(candidate({-10}), -10)\n    lu.assertEquals(candidate({7}),\
    \ 7)\n    lu.assertEquals(candidate({1, -1}), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpywyn0we0.lua:31: ''end'' expected (to close ''function'' at
    line 8) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750590
- exit_code: 1
  program: "-- Given an array of integers nums, find the minimum sum of any non-empty\
    \ sub-array\n-- of nums.\n-- Example\n-- >>> minSubArraySum({2, 3, 4, 1, 2, 4})\n\
    -- 1\n-- >>> minSubArraySum({-1, -2, -3})\n-- -6\nlocal function minSubArraySum(nums)\n\
    \  local minSum = math.inf\n  for _, v in ipairs(nums) do\n    if v > 0 then\n\
    \      local sum = v\n      for i = 1, v do\n        sum = sum + nums[#nums -\
    \ i]\n      end\n      if sum < minSum then\n        minSum = sum\n      end\n\
    \    end\n  end\n  return minSum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = minSubArraySum\n    lu.assertEquals(candidate({2, 3, 4, 1, 2,\
    \ 4}), 1)\n    lu.assertEquals(candidate({-1, -2, -3}), -6)\n    lu.assertEquals(candidate({-1,\
    \ -2, -3, 2, -10}), -14)\n    lu.assertEquals(candidate({-9999999999999999}),\
    \ -9999999999999999)\n    lu.assertEquals(candidate({0, 10, 20, 1000000}), 0)\n\
    \    lu.assertEquals(candidate({-1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({100,\
    \ -1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({10, 11, 13, 8, 3,\
    \ 4}), 3)\n    lu.assertEquals(candidate({100, -33, 32, -1, 0, -2}), -33)\n  \
    \  lu.assertEquals(candidate({-10}), -10)\n    lu.assertEquals(candidate({7}),\
    \ 7)\n    lu.assertEquals(candidate({1, -1}), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb35f9l1a.lua:16:\
    \ attempt to compare number with nil\nstack traceback:\n\t/tmp/tmpb35f9l1a.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmpb35f9l1a.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750590

name: HumanEval_18_how_many_times
language: lua
prompt: "-- Find how many times a given substring can be found in the original string.\
  \ Count overlaping cases.\n-- >>> how_many_times('', 'a')\n-- 0\n-- >>> how_many_times('aaa',\
  \ 'a')\n-- 3\n-- >>> how_many_times('aaaa', 'aa')\n-- 3\nlocal function how_many_times(string,\
  \ substring)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = how_many_times\n\
  \    lu.assertEquals(candidate('', 'x'), 0)\n    lu.assertEquals(candidate('xyxyxyx',\
  \ 'x'), 4)\n    lu.assertEquals(candidate('cacacacac', 'cac'), 4)\n    lu.assertEquals(candidate('john\
  \ doe', 'john'), 1)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local count = 0\n    for _, c in string.gmatch(string, \"%S\")\
    \ do\n        if c == substring then\n            count = count + 1\n        end\n\
    \    end\n    return count\nend", "    local count = 0\n    for i = 1, #string\
    \ do\n        if string.sub(i, #string) == substring then\n            count =\
    \ count + 1\n        end\n    end\n    return count\nend", "  if string == nil\
    \ then return 0 end\n  if substring == nil then return 0 end\n  local count =\
    \ 0\n  for i = 1, #string do\n    if string.sub(i, #string) == substring then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend", "  local count\
    \ = 0\n  for _, c in string.gfind(string, \"^\" .. substring .. \"$\") do\n  \
    \  count = count + 1\n  end\n  return count\nend", "\tlocal count = 0\n\tfor i\
    \ = 1, #string do\n\t\tif string.sub(i, #string - #substring) == substring then\n\
    \t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend", "\tlocal count\
    \ = 0\n\tfor i = 1, #string do\n\t\tif string.sub(i, i, #substring) == substring\
    \ then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend", "    local\
    \ count = 0\n    for i = 1, #string do\n        if string.sub(i, #string) == substring\
    \ then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "  local count = 0\n  for _, c in string.gfind(string, \"^\" .. substring\
    \ .. \"$\") do\n    count = count + 1\n  end\n  return count\nend", "  local count\
    \ = 0\n  for i = 1, #string do\n    if string.sub(i, #string) == substring then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend", "  local count\
    \ = 0\n  for i = 1, #string do\n    if string.sub(i, #string) == substring then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend", "    local count\
    \ = 0\n    for i = 1, #string do\n        if string.sub(i, #string) == substring\
    \ then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "  if string == nil or substring == nil then\n    return 0\n  end\n  local\
    \ count = 0\n  for i = 1, #string do\n    if string.sub(i, #string) == substring\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend", "    local\
    \ count = 0\n    for c in string.gmatch(string, \"%S\") do\n        if string.find(substring,\
    \ c) then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "  local count = 0\n  for i = 1, #string do\n    if string.sub(i, #string)\
    \ == substring then\n      count = count + 1\n    end\n  end\n  return count\n\
    end", "    local count = 0\n    for i = 1, #string do\n        if string.sub(i,\
    \ #string) == substring then\n            count = count + 1\n        end\n   \
    \ end\n    return count\nend", "  local count = 0\n  for i = 1, #string do\n \
    \   if string.sub(i, #string) == substring then\n      count = count + 1\n   \
    \ end\n  end\n  return count\nend", "    local count = 0\n    for i = 1, #string\
    \ do\n        if string.sub(i, #string - #substring) == substring then\n     \
    \       count = count + 1\n        end\n    end\n    return count\nend", "   \
    \ local count = 0\n    for i = 1, #string do\n        if string.sub(i, #string)\
    \ == substring then\n            count = count + 1\n        end\n    end\n   \
    \ return count\nend", "  local count = 0\n  for _, c in string.gmatch(string,\
    \ \"%a\") do\n    if c == substring then\n      count = count + 1\n    end\n \
    \ end\n  return count\nend", "  local count = 0\n  for _, c in string.gmatch(string,\
    \ \"%S\") do\n    if c == substring then\n      count = count + 1\n    end\n \
    \ end\n  return count\nend", "  local count = 0\n  for i = 1, #string do\n   \
    \ if string.sub(i, #string) == substring then\n      count = count + 1\n    end\n\
    \  end\n  return count\nend", "  local count = 0\n  for i = 1, #string do\n  \
    \  if string.sub(i, #string) == substring then\n      count = count + 1\n    end\n\
    \  end\n  return count\nend", "\tlocal count = 0\n\tfor i = 1, #string do\n\t\t\
    if string.sub(i, #string) == substring then\n\t\t\tcount = count + 1\n\t\tend\n\
    \tend\n\treturn count\nend", "  if string == nil then\n    return 0\n  end\n \
    \ if substring == nil then\n    return 1\n  end\n  local count = 0\n  for i =\
    \ 1, #string do\n    if string.sub(i, #string) == substring then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend", "    local count = 0\n  \
    \  for i = 1, #string do\n        if string.sub(i, #string) == substring then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "    local count = 0\n    for i = 1, #string do\n        if string.sub(i, #string)\
    \ == substring then\n            count = count + 1\n        end\n    end\n   \
    \ return count\nend", "    local count = 0\n    for i = 1, #string do\n      \
    \  if string.sub(i, #string) == substring then\n            count = count + 1\n\
    \        end\n    end\n    return count\nend", "  local count = 0\n  for i = 1,\
    \ #string do\n    if string.sub(i, #string) == substring then\n      count = count\
    \ + 1\n    end\n  end\n  return count\nend", "  local count = 0\n  for i = 1,\
    \ #string do\n    if string.sub(i, #string) == substring then\n      count = count\
    \ + 1\n    end\n  end\n  return count\nend", "    local count = 0\n    for c in\
    \ string.gmatch(string, \"%S+\") do\n        if string.find(substring, c) then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "  local count = 0\n  for i = 1, #string do\n    if string.sub(i, #string) == substring\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend", "\tlocal\
    \ count = 0\n\tfor _, c in string.gmatch(string, \"%S+\") do\n\t\tif c == substring\
    \ then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend", "    local\
    \ count = 0\n    for c in string.gmatch(string, \"%a\") do\n        if string.find(substring,\
    \ c) then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "    local count = 0\n    for i = 1, #string do\n        if string.sub(i,\
    \ #string) == substring then\n            count = count + 1\n        end\n   \
    \ end\n    return count\nend", "    local count = 0\n    for i = 1, #string do\n\
    \        if string.sub(i, #string) == substring then\n            count = count\
    \ + 1\n        end\n    end\n    return count\nend", "    local count = 0\n  \
    \  for i = 1, #string do\n        if string.sub(i, #string) == substring then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "  if string == nil then return 0 end\n  if substring == nil then return 0 end\n\
    \  local count = 0\n  for i = 1, #string do\n    if string.sub(i, #string) ==\
    \ substring then\n      count = count + 1\n    end\n  end\n  return count\nend",
  "    local count = 0\n    for c in string.gmatch(string, \"%a\") do\n        if\
    \ string.find(substring, c) then\n            count = count + 1\n        end\n\
    \    end\n    return count\nend", "  local count = 0\n  for i = 1, #string do\n\
    \    if string.sub(i, #string) == substring then\n      count = count + 1\n  \
    \  end\n  end\n  return count\nend", "    local count = 0\n    for c in string.gmatch(string,\
    \ \"%S\") do\n        if c == substring then\n            count = count + 1\n\
    \        end\n    end\n    return count\nend", "  local count = 0\n  for i = 1,\
    \ #string do\n    if string.sub(i, #string) == substring then\n      count = count\
    \ + 1\n    end\n  end\n  return count\nend", "  local count = 0\n  for i = 1,\
    \ #string do\n    if string.sub(i, #string) == substring then\n      count = count\
    \ + 1\n    end\n  end\n  return count\nend", "\tlocal count = 0\n\tfor _, c in\
    \ string.gmatch(string, \"%S\") do\n\t\tif c == substring then\n\t\t\tcount =\
    \ count + 1\n\t\tend\n\tend\n\treturn count\nend", "  local count = 0\n  for i\
    \ = 1, #string do\n    if string.sub(i, #string) == substring then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend", "\tlocal count = 0\n\tfor\
    \ i = 1, #string do\n\t\tif string.sub(i, #string) == substring then\n\t\t\tcount\
    \ = count + 1\n\t\tend\n\tend\n\treturn count\nend", "  local count = 0\n  for\
    \ i = 1, #string do\n    if string.sub(i, #string) == substring then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend", "    local count = 0\n  \
    \  for i = 1, #string do\n        if string.sub(i, #string) == substring then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "    local count = 0\n    for c in string.gmatch(string, \"%S\") do\n        if\
    \ string.find(substring, c) then\n            count = count + 1\n        end\n\
    \    end\n    return count\nend", "\tlocal count = 0\n\tfor i = 1, #string do\n\
    \t\tif string.sub(i, #string) == substring then\n\t\t\tcount = count + 1\n\t\t\
    end\n\tend\n\treturn count\nend", "  local count = 0\n  for i = 1, #string do\n\
    \    if string.sub(i, #string) == substring then\n      count = count + 1\n  \
    \  end\n  end\n  return count\nend", "  if string == nil then return 0 end\n \
    \ if substring == nil then return 0 end\n  local count = 0\n  for i = 1, #string\
    \ do\n    if string.sub(i, #string) == substring then\n      count = count + 1\n\
    \    end\n  end\n  return count\nend", "  local count = 0\n  for i = 1, #string\
    \ do\n    if string.sub(i, #string) == substring then\n      count = count + 1\n\
    \    end\n  end\n  return count\nend", "  local count = 0\n  for i = 1, #string\
    \ do\n    if string.sub(i, #string) == substring then\n      count = count + 1\n\
    \    end\n  end\n  return count\nend", "  local count = 0\n  for _, c in string.gfind(string,\
    \ \"^\" .. substring .. \"$\") do\n    count = count + 1\n  end\n  return count\n\
    end", "    local count = 0\n    for i = 1, #string do\n        if string.sub(i,\
    \ #string) == substring then\n            count = count + 1\n        end\n   \
    \ end\n    return count\nend", "  local count = 0\n  for _, c in string.gfind(string,\
    \ \"^\" .. substring .. \"$\") do\n    count = count + 1\n  end\n  return count\n\
    end", "    local count = 0\n    for i = 1, #string do\n        if string.sub(i,\
    \ #string) == substring then\n            count = count + 1\n        end\n   \
    \ end\n    return count\nend", "  local count = 0\n  for i = 1, #string do\n \
    \   if string.sub(i, #string) == substring then\n      count = count + 1\n   \
    \ end\n  end\n  return count\nend", "  if string == nil then return 0 end\n  if\
    \ substring == nil then return 0 end\n  local count = 0\n  for i = 1, #string\
    \ do\n    if string.sub(i, #string) == substring then\n      count = count + 1\n\
    \    end\n  end\n  return count\nend", "    local count = 0\n    for i = 1, #string\
    \ do\n        if string.sub(i, #string) == substring then\n            count =\
    \ count + 1\n        end\n    end\n    return count\nend", "  local count = 0\n\
    \  for i = 1, #string do\n    if string.sub(i, #string) == substring then\n  \
    \    count = count + 1\n    end\n  end\n  return count\nend", "  local count =\
    \ 0\n  for i = 1, #string do\n    if string.sub(i, #string) == substring then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend", "  local count\
    \ = 0\n  for _, c in string.gmatch(string, \"%S+\") do\n    if c == substring\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend", "  local\
    \ count = 0\n  for i = 1, #string do\n    if string.sub(i, #string) == substring\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend", "  local\
    \ count = 0\n  for i = 1, #string do\n    if string.sub(i, #string) == substring\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend", "  local\
    \ count = 0\n  for i = 1, #string do\n    if string.sub(i, #string) == substring\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend", "  local\
    \ count = 0\n  for i = 1, #string do\n    if string.sub(i, #string) == substring\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend", "    local\
    \ count = 0\n    for _, c in string.gmatch(string, \"%S\") do\n        if c ==\
    \ substring then\n            count = count + 1\n        end\n    end\n    return\
    \ count\nend", "    local count = 0\n    for _, c in string.gmatch(string, \"\
    %S+\") do\n        if c == substring then\n            count = count + 1\n   \
    \     end\n    end\n    return count\nend", "  local count = 0\n  for _, c in\
    \ string.gmatch(string, \"%S\") do\n    if c == substring then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend", "  if string == nil then return\
    \ 0 end\n  if substring == nil then return 0 end\n  local count = 0\n  for i =\
    \ 1, #string do\n    if string.sub(i, #string) == substring then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend", "    local count = 0\n  \
    \  for i = 1, #string do\n        if string.sub(i, #string) == substring then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "    local count = 0\n    for i = 1, #string do\n        if string.sub(i, #string\
    \ + 1) ~= substring then\n            count = count + 1\n        else\n      \
    \      count = count + 1\n        end\n    end\n    return count\nend", "  local\
    \ count = 0\n  for i = 1, #string do\n    if string.sub(i, #string) == substring\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend", "\tlocal\
    \ count = 0\n\tfor i = 1, #string do\n\t\tif string.sub(i, #string) == substring\
    \ then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend", "  local\
    \ count = 0\n  for i = 1, #string do\n    if string.sub(i, #string) == substring\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend", "  local\
    \ count = 0\n  for i = 1, #string do\n    if string.sub(i, #string) == substring\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend", "    local\
    \ count = 0\n    for i = 1, #string do\n        if string.sub(i, #string) == substring\
    \ then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "    local count = 0\n    for _, c in string.gmatch(string, \"%S\") do\n\
    \        if c == substring then\n            count = count + 1\n        end\n\
    \    end\n    return count\nend", "  local count = 0\n  for _, c in string.gfind(string,\
    \ \"^\" .. substring .. \"$\") do\n    count = count + 1\n  end\n  return count\n\
    end", "  local count = 0\n  for i = 1, #string do\n    if string.sub(i, #string)\
    \ == substring then\n      count = count + 1\n    end\n  end\n  return count\n\
    end", "    local count = 0\n    for i = 1, #string do\n        if string.sub(i,\
    \ #string) == substring then\n            count = count + 1\n        end\n   \
    \ end\n    return count\nend", "  local count = 0\n  for i = 1, #string do\n \
    \   if string.sub(i, #string) == substring then\n      count = count + 1\n   \
    \ end\n  end\n  return count\nend", "  if string == nil then return 0 end\n  if\
    \ substring == nil then return 0 end\n  local count = 0\n  for i = 1, #string\
    \ do\n    if string.sub(i, #string) == substring then\n      count = count + 1\n\
    \    end\n  end\n  return count\nend", "    local count = 0\n    for i = 1, #string\
    \ do\n        if string.sub(i, #string) == substring then\n            count =\
    \ count + 1\n        end\n    end\n    return count\nend", "  local count = 0\n\
    \  for i = 1, #string do\n    if string.sub(i, #string) == substring then\n  \
    \    count = count + 1\n    end\n  end\n  return count\nend", "\tlocal count =\
    \ 0\n\tfor _, c in string.gmatch(string, \"%a\") do\n\t\tif c == substring then\n\
    \t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend", "\tlocal count\
    \ = 0\n\tfor i = 1, #string do\n\t\tif string.sub(i, #string) == substring then\n\
    \t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend", "  if string ==\
    \ nil or substring == nil then\n    return 0\n  end\n  local count = 0\n  local\
    \ pos = 1\n  while pos <= #string do\n    local found = string.find(substring,\
    \ string, pos)\n    if found ~= nil then\n      count = count + 1\n      pos =\
    \ found + #substring\n    else\n      pos = pos + 1\n    end\n  end\n  return\
    \ count\nend", "\tlocal count = 0\n\tfor i = 1, #string do\n\t\tif string.sub(i,\
    \ #string) == substring then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn\
    \ count\nend", "  local count = 0\n  for _, c in string.gfind(string, \"^\" ..\
    \ substring .. \"$\") do\n    count = count + 1\n  end\n  return count\nend",
  "  local count = 0\n  for i = 1, #string do\n    if string.sub(i, #string) == substring\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend", "\tlocal\
    \ count = 0\n\tlocal pos = 1\n\twhile pos <= #string do\n\t\tcount = count + 1\n\
    \t\tpos = string.find(substring, string, pos)\n\tend\n\treturn count\nend", " \
    \   local count = 0\n    for i = 1, #string do\n        if string.sub(i, #string)\
    \ == substring then\n            count = count + 1\n        end\n    end\n   \
    \ return count\nend", "    local count = 0\n    for c in string.gmatch(string,\
    \ \"%S+\") do\n        if string.find(substring, c) then\n            count =\
    \ count + 1\n        end\n    end\n    return count\nend", "    local count =\
    \ 0\n    for i = 1, #string do\n        if string.sub(i, #string) == substring\
    \ then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "  local count = 0\n  for i = 1, #string do\n    if string.sub(i, #string)\
    \ == substring then\n      count = count + 1\n    end\n  end\n  return count\n\
    end", "    local count = 0\n    for i = 1, #string do\n        if string.sub(i,\
    \ #string) == substring then\n            count = count + 1\n        end\n   \
    \ end\n    return count\nend", "  local count = 0\n  for i = 1, #string do\n \
    \   if string.sub(i, #string) == substring then\n      count = count + 1\n   \
    \ end\n  end\n  return count\nend", "    local count = 0\n    for c in string.gmatch(string,\
    \ \"%a\") do\n        if string.find(substring, c) then\n            count = count\
    \ + 1\n        end\n    end\n    return count\nend", "    local count = 0\n  \
    \  for i = 1, #string do\n        if string.sub(i, #string) == substring then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "\tlocal count = 0\n\tlocal pos = 1\n\twhile pos <= #string do\n\t\tcount = count\
    \ + string.find(substring, string, pos) or 0\n\t\tpos = pos + 1\n\tend\n\treturn\
    \ count\nend", "  local count = 0\n  for i = 1, #string do\n    if string.sub(i,\
    \ #string) == substring then\n      count = count + 1\n    end\n  end\n  return\
    \ count\nend", "    local count = 0\n    for i = 1, #string do\n        if string.sub(i,\
    \ #string) == substring then\n            count = count + 1\n        end\n   \
    \ end\n    return count\nend", "  local count = 0\n  for i = 1, #string do\n \
    \   if string.sub(i, #string) == substring then\n      count = count + 1\n   \
    \ end\n  end\n  return count\nend", "  local count = 0\n  for i = 1, #string do\n\
    \    if string.sub(i, #string) == substring then\n      count = count + 1\n  \
    \  end\n  end\n  return count\nend", "  local count = 0\n  for i = 1, #string\
    \ do\n    if string.sub(i, #string) == substring then\n      count = count + 1\n\
    \    end\n  end\n  return count\nend", "\tlocal count = 0\n\tlocal pos = 1\n\t\
    while pos <= #string do\n\t\tcount = count + string.find(substring, string, pos)\
    \ ~= nil\n\t\tpos = pos + 1\n\tend\n\treturn count\nend", "\tlocal count = 0\n\
    \tfor i = 1, #string do\n\t\tif string.sub(i, #string) == substring then\n\t\t\
    \tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend", "    local count =\
    \ 0\n    for c in string:gmatch(\"(.-)\"..substring..\"(.-)\") do\n        count\
    \ = count + 1\n    end\n    return count\nend", "  local count = 0\n  for _, c\
    \ in string.gmatch(string, \"%S+\") do\n    if c == substring then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend", "\tlocal count = 0\n\tfor\
    \ _, c in string.gmatch(string, \"%S+\") do\n\t\tif c == substring then\n\t\t\t\
    count = count + 1\n\t\tend\n\tend\n\treturn count\nend", "  local count = 0\n\
    \  for i = 1, #string do\n    if string.sub(i, #string) == substring then\n  \
    \    count = count + 1\n    end\n  end\n  return count\nend", "  local count =\
    \ 0\n  for i = 1, #string do\n    if string.sub(i, #string) == substring then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend", "  local count\
    \ = 0\n  for i = 1, #string do\n    if string.sub(i, #string) == substring then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend", "  local count\
    \ = 0\n  for i = 1, #string do\n    if string.sub(i, #string) == substring then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend", "    local count\
    \ = 0\n    for c in string.gmatch(string, \"%S+\") do\n        if c == substring\
    \ then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "    local count = 0\n    for i = 1, #string do\n        if string.sub(i,\
    \ #string) == substring then\n            count = count + 1\n        end\n   \
    \ end\n    return count\nend", "    local count = 0\n    for i = 1, #string do\n\
    \        if string.sub(i, #string) == substring then\n            count = count\
    \ + 1\n        end\n    end\n    return count\nend", "\tlocal count = 0\n\tfor\
    \ i = 1, #string do\n\t\tif string.sub(i, #string) == substring then\n\t\t\tcount\
    \ = count + 1\n\t\tend\n\tend\n\treturn count\nend", "    local count = 0\n  \
    \  for i = 1, #string do\n        if string.sub(i, #string + 1) ~= substring then\n\
    \            count = count + 1\n        elseif string.sub(i, #string + 1) ~= string.sub(i\
    \ - 1, #string) then\n            count = count + 1\n        end\n    end\n  \
    \  return count\nend", "  local count = 0\n  for i = 1, #string do\n    if string.sub(i,\
    \ #string) == substring then\n      count = count + 1\n    end\n  end\n  return\
    \ count\nend", "  local count = 0\n  for i = 1, #string do\n    if string.sub(i,\
    \ #string) == substring then\n      count = count + 1\n    end\n  end\n  return\
    \ count\nend", "  local count = 0\n  for i = 1, #string do\n    if string.sub(i,\
    \ #string) == substring then\n      count = count + 1\n    end\n  end\n  return\
    \ count\nend", "\tlocal count = 0\n\tfor i = 1, #string do\n\t\tif string.sub(i,\
    \ i, #substring) == substring then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\t\
    return count\nend", "    local count = 0\n    for i = 1, #string do\n        if\
    \ string.sub(i, #string) == substring then\n            count = count + 1\n  \
    \      end\n    end\n    return count\nend", "  local count = 0\n  for i = 1,\
    \ #string do\n    if string.sub(i, #string) == substring then\n      count = count\
    \ + 1\n    end\n  end\n  return count\nend", "    local count = 0\n    for i =\
    \ 1, #string do\n        if string.sub(i, #string) == substring then\n       \
    \     count = count + 1\n        end\n    end\n    return count\nend", "    local\
    \ count = 0\n    for i = 1, #string do\n        if string.sub(i, #string) == substring\
    \ then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "  if string == nil or substring == nil then\n    return 0\n  end\n  local\
    \ count = 0\n  for i = 1, #string do\n    if string.sub(i, #substring) == substring\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend", "    local\
    \ count = 0\n    for _, c in string.gmatch(string, \"%a\") do\n        if c ==\
    \ substring then\n            count = count + 1\n        end\n    end\n    return\
    \ count\nend", "  local count = 0\n  for _, c in string.gmatch(string, \"%S\"\
    ) do\n    if c == substring then\n      count = count + 1\n    end\n  end\n  return\
    \ count\nend", "  if string == nil then return 0 end\n  if substring == nil then\
    \ return 0 end\n  local count = 0\n  for i = 1, #string do\n    if string.sub(i,\
    \ #substring) == substring then\n      count = count + 1\n    end\n  end\n  return\
    \ count\nend", "  if string == nil then return 0 end\n  if substring == nil then\
    \ return 0 end\n  local count = 0\n  for i = 1, #string do\n    if string.sub(i,\
    \ #string) == substring then\n      count = count + 1\n    end\n  end\n  return\
    \ count\nend", "  local count = 0\n  for i = 1, #string do\n    if string.sub(i,\
    \ #string) == substring then\n      count = count + 1\n    end\n  end\n  return\
    \ count\nend", "    local count = 0\n    for c in string.gmatch(string, \"%S\"\
    ) do\n        if string.find(substring, c) then\n            count = count + 1\n\
    \        end\n    end\n    return count\nend", "  local count = 0\n  for i = 1,\
    \ #string do\n    if string.sub(i, #string) == substring then\n      count = count\
    \ + 1\n    end\n  end\n  return count\nend", "  local count = 0\n  for _, c in\
    \ string.gfind(string, \"^\" .. substring .. \"$\") do\n    count = count + 1\n\
    \  end\n  return count\nend", "  if string == nil then return 0 end\n  if substring\
    \ == nil then return 0 end\n  local count = 0\n  for i = 1, #string do\n    if\
    \ string.sub(i, #string) == substring then\n      count = count + 1\n    end\n\
    \  end\n  return count\nend", "    local count = 0\n    for i = 1, #string do\n\
    \        if string.sub(i, #string) == substring then\n            count = count\
    \ + 1\n        end\n    end\n    return count\nend", "    local count = 0\n  \
    \  for i = 1, #string do\n        if string.sub(i, #string) == substring then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "\tlocal count = 0\n\tlocal pos = 1\n\twhile pos <= #string do\n\t\tif string.sub(string,pos,pos)\
    \ == substring then\n\t\t\tcount = count + 1\n\t\tend\n\t\tpos = pos + 1\n\tend\n\
    \treturn count\nend", "  local count = 0\n  for i = 1, #string do\n    if string.sub(i,\
    \ #string) == substring then\n      count = count + 1\n    end\n  end\n  return\
    \ count\nend", "    local count = 0\n    for i = 1, #string do\n        if string.sub(i,\
    \ #string) == substring then\n            count = count + 1\n        end\n   \
    \ end\n    return count\nend", "    local count = 0\n    for i = 1, #string do\n\
    \        if string.sub(i, #string) == substring then\n            count = count\
    \ + 1\n        end\n    end\n    return count\nend", "    local count = 0\n  \
    \  for _, c in string.gmatch(string, \"%S+\") do\n        if c == substring then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "    local count = 0\n    for i = 1, #string do\n        if string.sub(i, #string)\
    \ == substring then\n            count = count + 1\n        end\n    end\n   \
    \ return count\nend", "    local count = 0\n    for i = 1, #string do\n      \
    \  if string.sub(i, #string) == substring then\n            count = count + 1\n\
    \        end\n    end\n    return count\nend", "  local count = 0\n  for i = 1,\
    \ #string do\n    if string.sub(i, #string) == substring then\n      count = count\
    \ + 1\n    end\n  end\n  return count\nend", "    local count = 0\n    for i =\
    \ 1, #string do\n        if string.sub(i, #string) == substring then\n       \
    \     count = count + 1\n        end\n    end\n    return count\nend", "  local\
    \ count = 0\n  for i = 1, #string do\n    if string.sub(i, #string) == substring\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend", "  local\
    \ count = 0\n  for i = 1, #string do\n    if string.sub(i, #string) == substring\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend", "    local\
    \ count = 0\n    for i = 1, #string do\n        if string.sub(i, #string) == substring\
    \ then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "  local count = 0\n  for i = 1, #string do\n    if string.sub(i, #string)\
    \ == substring then\n      count = count + 1\n    end\n  end\n  return count\n\
    end", "  local count = 0\n  for i = 1, #string do\n    if string.sub(i, #string)\
    \ == substring then\n      count = count + 1\n    end\n  end\n  return count\n\
    end", "    local count = 0\n    for _, c in string.gfind(string, \"[^\" .. substring\
    \ .. \"]\") do\n        count = count + 1\n    end\n    return count\nend", " \
    \   local count = 0\n    for c in string.gmatch(string, \"%S\") do\n        if\
    \ string.find(substring, c) then\n            count = count + 1\n        end\n\
    \    end\n    return count\nend", "    local count = 0\n    for i = 1, #string\
    \ do\n        if string.sub(i, #string) == substring then\n            count =\
    \ count + 1\n        end\n    end\n    return count\nend", "    local count =\
    \ 0\n    for i = 1, #string do\n        if string.sub(i, #string) == substring\
    \ then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "    local count = 0\n    for _, c in string.gfind(string, \"^\" .. substring\
    \ .. \"$\") do\n        count = count + 1\n    end\n    return count\nend", " \
    \ local count = 0\n  for i = 1, #string do\n    if string.sub(i, #string) == substring\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend", "  if string\
    \ == nil then return 0 end\n  if substring == nil then return 0 end\n  if #string\
    \ == 0 then return 0 end\n  if #substring == 0 then return 0 end\n  local count\
    \ = 0\n  for i = 1, #string do\n    if string.sub(i, #string) == substring then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend", "    local count\
    \ = 0\n    for i = 1, #string do\n        if string.sub(i, #string) == substring\
    \ then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "    local count = 0\n    for i = 1, #string do\n        if string.sub(i,\
    \ #string) == substring then\n            count = count + 1\n        end\n   \
    \ end\n    return count\nend", "  if string == nil then return 0 end\n  if substring\
    \ == nil then return 0 end\n  local count = 0\n  for i = 1, #string do\n    if\
    \ string.sub(i, #string) == substring then\n      count = count + 1\n    end\n\
    \  end\n  return count\nend", "    local count = 0\n    for i = 1, #string do\n\
    \        if string.sub(i, #string) == substring then\n            count = count\
    \ + 1\n        end\n    end\n    return count\nend", "    local count = 0\n  \
    \  for i = 1, #string do\n        if string.sub(i, #string) == substring then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "    local count = 0\n    for c in string.gmatch(string, \"%a\") do\n        if\
    \ string.find(substring, c) then\n            count = count + 1\n        end\n\
    \    end\n    return count\nend", "  if string == nil then return 0 end\n  if\
    \ substring == nil then return 0 end\n  local count = 0\n  for i = 1, #string\
    \ do\n    if string.sub(i, #string) == substring then\n      count = count + 1\n\
    \    end\n  end\n  return count\nend", "  local count = 0\n  for i = 1, #string\
    \ do\n    if string.sub(i, #string) == substring then\n      count = count + 1\n\
    \    end\n  end\n  return count\nend", "  local count = 0\n  for _, c in string.gmatch(string,\
    \ \"%a\") do\n    if c == substring then count = count + 1 end\n  end\n  return\
    \ count\nend", "  local count = 0\n  for _, c in string.gfind(string, \"[^\" ..\
    \ substring .. \"]+\") do\n    count = count + 1\n  end\n  return count\nend",
  "    local count = 0\n    for _, c in string.gmatch(string, \"%a\") do\n       \
    \ if c == substring then\n            count = count + 1\n        end\n    end\n\
    \    return count\nend", "  local count = 0\n  for i = 1, #string do\n    if string.sub(i,\
    \ #string) == substring then\n      count = count + 1\n    end\n  end\n  return\
    \ count\nend", "  local count = 0\n  for i = 1, #string do\n    if string.sub(i,\
    \ #string) == substring then\n      count = count + 1\n    end\n  end\n  return\
    \ count\nend", "\tlocal count = 0\n\tfor i = 1, #string do\n\t\tif string.sub(i,\
    \ #string) == substring then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn\
    \ count\nend", "  local count = 0\n  for _, c in string.gmatch(string, \"%S\"\
    ) do\n    if c == substring then\n      count = count + 1\n    end\n  end\n  return\
    \ count\nend", "    local count = 0\n    for i = 1, #string do\n        if string.sub(i,\
    \ #string) == substring then\n            count = count + 1\n        end\n   \
    \ end\n    return count\nend", "  local count = 0\n  for i = 1, #string do\n \
    \   if string.sub(i, #string) == substring then\n      count = count + 1\n   \
    \ end\n  end\n  return count\nend", "  if string == nil or substring == nil then\n\
    \    return 0\n  end\n  local count = 0\n  local pos = 1\n  while pos <= #string\
    \ do\n    count = count + 1\n    pos = string.find(substring, pos, #string) +\
    \ 1\n  end\n  return count\nend", "    local count = 0\n    for i = 1, #string\
    \ do\n        if string.sub(i, #string) == substring then\n            count =\
    \ count + 1\n        end\n    end\n    return count\nend", "    local count =\
    \ 0\n    for i = 1, #string do\n        if string.sub(i, #string) == substring\
    \ then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "    local count = 0\n    for i = 1, #string do\n        if string.sub(i,\
    \ #string) == substring then\n            count = count + 1\n        end\n   \
    \ end\n    return count\nend", "    local count = 0\n    for c in string.gmatch(string,\
    \ \"%a\") do\n        if string.find(substring, c) then\n            count = count\
    \ + 1\n        end\n    end\n    return count\nend", "  local count = 0\n  for\
    \ i = 1, #string do\n    if string.sub(i, #string) == substring then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend", "  if string == nil then\
    \ return 0 end\n  if substring == nil then return 0 end\n  local count = 0\n \
    \ for i = 1, #string do\n    if string.sub(i, #string) == substring then\n   \
    \   count = count + 1\n    end\n  end\n  return count\nend", "  local count =\
    \ 0\n  for _, c in string.gmatch(string, \"%S\") do\n    if c == substring then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend", "    local count\
    \ = 0\n    for i = 1, #string do\n        if string.sub(i, #string) == substring\
    \ then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "  local count = 0\n  for _, c in string.gmatch(string, \"%S+\") do\n  \
    \  if c == substring then\n      count = count + 1\n    end\n  end\n  return count\n\
    end", "  local count = 0\n  for i = 1, #string do\n    if string.sub(i, #string)\
    \ == substring then\n      count = count + 1\n    end\n  end\n  return count\n\
    end", "  local count = 0\n  for i = 1, #string do\n    if string.sub(i, #string)\
    \ == substring then\n      count = count + 1\n    end\n  end\n  return count\n\
    end", "\tlocal count = 0\n\tfor i = 1, #string do\n\t\tif string.sub(i, #string)\
    \ == substring then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\n\
    end", "\t-- If the substring is not in the string, return 0.\n\tif string.find(string)\
    \ == nil then\n\t\treturn 0\n\tend", "  local count = 0\n  for i = 1, #string\
    \ do\n    if string.sub(i, #string) == substring then\n      count = count + 1\n\
    \    end\n  end\n  return count\nend", "    local count = 0\n    for i = 1, #string\
    \ do\n        if string.sub(i, #string) == substring then\n            count =\
    \ count + 1\n        end\n    end\n    return count\nend", "    local count =\
    \ 0\n    for i = 1, #string do\n        if string.sub(i, #string) == substring\
    \ then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "    local count = 0\n    for i = 1, #string do\n        if string.sub(i,\
    \ #string) == substring then\n            count = count + 1\n        end\n   \
    \ end\n    return count\nend", "  local count = 0\n  for _, c in string.gmatch(string,\
    \ \"%S+\") do\n    if c == substring then\n      count = count + 1\n    end\n\
    \  end\n  return count\nend", "  local count = 0\n  for i = 1, #string do\n  \
    \  if string.sub(i, #string) == substring then\n      count = count + 1\n    end\n\
    \  end\n  return count\nend", "\tlocal count = 0\n\tlocal pos = 1\n\twhile pos\
    \ <= #string do\n\t\tcount = count + 1\n\t\tif string.sub(string, pos, pos) ==\
    \ substring then\n\t\t\tbreak\n\t\tend\n\t\tpos = pos + 1\n\tend\n\treturn count\n\
    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

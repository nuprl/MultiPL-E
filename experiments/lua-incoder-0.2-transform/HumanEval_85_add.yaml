name: HumanEval_85_add
language: lua
prompt: "-- Given a non-empty list of integers lst. add the even elements that are\
  \ at odd indices..\n-- Examples:\n-- >>> add({4, 2, 6, 7})\n-- 2\nlocal function\
  \ add(lst)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = add\n\
  \    lu.assertEquals(candidate({4, 88}), 88)\n    lu.assertEquals(candidate({4,\
  \ 5, 6, 7, 2, 122}), 122)\n    lu.assertEquals(candidate({4, 0, 6, 7}), 0)\n   \
  \ lu.assertEquals(candidate({4, 4, 6, 8}), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local even = 0\n  local odd = 0\n  for i = 1, #lst do\n    if i %\
    \ 2 == 0 then\n      even = even + lst[i]\n    else\n      odd = odd + lst[i]\n\
    \    end\n  end\n  return even, odd\nend", "    local even = 0\n    local odd\
    \ = 0\n    for i = 1, #lst do\n        if i % 2 == 0 then\n            even =\
    \ even + lst[i]\n        else\n            odd = odd + lst[i]\n        end\n \
    \   end\n    return even, odd\nend", "  local even = 0\n  local odd = 0\n  for\
    \ i = 1, #lst do\n    if i % 2 == 0 then\n      even = even + lst[i]\n    else\n\
    \      odd = odd + lst[i]\n    end\n  end\n  return even, odd\nend", "  local\
    \ even = 0\n  local odd = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n  \
    \    even = even + lst[i]\n    else\n      odd = odd + lst[i]\n    end\n  end\n\
    \  return even, odd\nend", "  local even = 0\n  local odd = 0\n  for i = 1, #lst\
    \ do\n    if i % 2 == 0 then\n      even = even + lst[i]\n    else\n      odd\
    \ = odd + lst[i]\n    end\n  end\n  return even, odd\nend", "  local even = 0\n\
    \  local odd = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      even = even\
    \ + lst[i]\n    else\n      odd = odd + lst[i]\n    end\n  end\n  return even,\
    \ odd\nend", "  local even = lst:sub(1, #lst)\n  local odd = lst:sub(2, #lst)\n\
    \  return even:add(odd)\nend", "  local even, odd = {}, {}\n  for i = 1, #lst\
    \ do\n    if i % 2 == 0 then\n      even[#even+1] = lst[i]\n    else\n      odd[#odd+1]\
    \ = lst[i]\n    end\n  end\n  return even, odd\nend", "  local even = 0\n  local\
    \ odd = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      even = even + lst[i]\n\
    \    else\n      odd = odd + lst[i]\n    end\n  end\n  return even, odd\nend",
  "  if #lst == 0 then return 0 end\n  local even = add(lst:sub(1, #lst))\n  local\
    \ odd = add(lst:sub(2, #lst))\n  return even + odd\nend", "  local even, odd =\
    \ {}, {}\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      even[#even+1] =\
    \ lst[i]\n    else\n      odd[#odd+1] = lst[i]\n    end\n  end\n  return even[#even]\
    \ + odd[#odd]\nend", "  local even = 0\n  local odd = 0\n  for i = 1, #lst do\n\
    \    if i % 2 == 0 then\n      even = even + lst[i]\n    else\n      odd = odd\
    \ + lst[i]\n    end\n  end\n  return even, odd\nend", "  local even, odd = {},\
    \ {}\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      table.insert(even, lst[i])\n\
    \    else\n      table.insert(odd, lst[i])\n    end\n  end\n  return table.concat(even)\
    \ + table.concat(odd)\nend", "  local even, odd = {}, {}\n  for i = 1, #lst do\n\
    \    if i % 2 == 0 then\n      even[#even+1] = lst[i]\n    else\n      odd[#odd+1]\
    \ = lst[i]\n    end\n  end\n  return even[#even] + odd[#odd]\nend", "  local even,\
    \ odd = {}, {}\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      even[#even+1]\
    \ = lst[i]\n    else\n      odd[#odd+1] = lst[i]\n    end\n  end\n  return even,\
    \ odd\nend", "  local even = lst:sub(1, #lst)\n  local odd = lst:sub(2, #lst)\n\
    \  return even:add(odd)\nend", "  local even = 0\n  local odd = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 then\n      even = even + lst[i]\n    else\n    \
    \  odd = odd + lst[i]\n    end\n  end\n  return even, odd\nend", "  local even\
    \ = 0\n  local odd = 0\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      even\
    \ = even + lst[i]\n    else\n      odd = odd + lst[i]\n    end\n  end\n  return\
    \ even, odd\nend", "  if #lst == 0 then return 0 end\n  local even = add(lst:sub(1,\
    \ #lst))\n  local odd = add(lst:sub(2, #lst))\n  return even + odd\nend", "  local\
    \ even, odd = {}, {}\n  for i = 1, #lst do\n    if i % 2 == 0 then\n      even[#even+1]\
    \ = lst[i]\n    else\n      odd[#odd+1] = lst[i]\n    end\n  end\n  local sum\
    \ = 0\n  for i = 1, #even do\n    sum = sum + even[i]\n  end\n  for i = 1, #odd\
    \ do\n    sum = sum + odd[i]\n  end\n  return sum\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

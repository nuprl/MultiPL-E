name: HumanEval_161_solve
language: lua
prompt: "-- You are given a string s.\n-- if s[i] is a letter, reverse its case from\
  \ lower to upper or vise versa, \n-- otherwise keep it as it is.\n-- If the string\
  \ contains no letters, reverse the string.\n-- The function should return the resulted\
  \ string.\n-- Examples\n-- >>> solve('1234')\n-- '4321'\n-- >>> solve('ab')\n--\
  \ 'AB'\n-- >>> solve('#a@C')\n-- '#A@c'\nlocal function solve(s)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = solve\n\
  \    lu.assertEquals(candidate('AsDf'), 'aSdF')\n    lu.assertEquals(candidate('1234'),\
  \ '4321')\n    lu.assertEquals(candidate('ab'), 'AB')\n    lu.assertEquals(candidate('#a@C'),\
  \ '#A@c')\n    lu.assertEquals(candidate('#AsdfW^45'), '#aSDFw^45')\n    lu.assertEquals(candidate('#6@2'),\
  \ '2@6#')\n    lu.assertEquals(candidate('#$a^D'), '#$A^d')\n    lu.assertEquals(candidate('#ccc'),\
  \ '#CCC')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local t = {}\n    for i,v in ipairs(s) do\n        if v:match('^[a-zA-Z]')\
    \ then\n            t[#t+1] = v:lower()\n        else\n            t[#t+1] = v\n\
    \        end\n    end\n    table.sort(t)\n    local s = ''\n    for i,v in ipairs(t)\
    \ do\n        if i ~= #t then\n            s = s .. v\n        else\n        \
    \    s = s .. v\n        end\n    end\n    return s\nend", "    local ret = \"\
    \"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n         \
    \   ret = string.sub(s,i,i)\n        else\n            ret = string.sub(s,i,#s)\n\
    \        end\n    end\n    return ret\nend", "  local result = \"\"\n  for i =\
    \ 1, #s do\n    if string.sub(s,i,i) ~= \"\" then\n      result = string.sub(s,i,i)\n\
    \    else\n      result = string.sub(s,i,#s)\n    end\n  end\n  return result\n\
    end", "  local s = string.lower(s)\n  local len = string.len(s)\n  local i = 0\n\
    \  while i < len do\n    if string.sub(s,i,i) ~= nil then\n      local c = string.sub(s,i,i)\n\
    \      if string.sub(c,1,1) ~= nil then\n        local t = string.sub(c,1,1)\n\
    \        string.sub(c,1,1) = string.sub(c,2,2)\n        string.sub(c,2,2) = t\n\
    \      else\n        string.sub(c,1,1) = string.sub(c,2,2)\n        string.sub(c,2,2)\
    \ = string.sub(c,3,3)\n        string.sub(c,3,3) = string.sub(c,1,1)\n      end\n\
    \    end\n    i = i + 1\n  end\n  return s\nend", "  local result = \"\"\n  for\
    \ i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      if string.sub(s,i,i)\
    \ ~= string.sub(s,i,i) then\n        result = string.sub(s,i,i)..result\n    \
    \  else\n        result = string.sub(s,i,i)..result\n      end\n    else\n   \
    \   result = string.sub(s,i,i)..result\n    end\n  end\n  return result\nend",
  "    local new_s = ''\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil\
    \ then\n            if string.sub(s,i,i) ~= string.sub(s,i,i) then\n         \
    \       new_s = string.sub(s,i,i)\n            else\n                new_s = string.upper(string.sub(s,i,i))\n\
    \            end\n        else\n            new_s = string.sub(s,i,i)\n      \
    \  end\n    end\n    return new_s\nend", "  local result = \"\"\n  for i = 1,\
    \ #s do\n    local c = string.sub(s,i,i)\n    if string.find(string.char(c),\"\
    a\") then\n      c = string.upper(c)\n    elseif string.find(string.char(c),\"\
    A\") then\n      c = string.lower(c)\n    end\n    result = result .. c\n  end\n\
    \  return result\nend", "  local s = string.lower(s)\n  local t = {}\n  for i\
    \ = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      table.insert(t,string.upper(string.sub(s,i,i)))\n\
    \    else\n      table.insert(t,string.lower(string.sub(s,i,i)))\n    end\n  end\n\
    \  return table.concat(t, \"\")\nend", "  s = string.lower(s)\n  local new_s =\
    \ ''\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      new_s =\
    \ string.sub(s,i,i) + new_s\n    else\n      new_s = string.sub(s,i,i) + new_s\n\
    \    end\n  end\n  return new_s\nend", "    local s = string.lower(s)\n    local\
    \ new_s = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n\
    \            local c = string.sub(s,i,i)\n            if string.sub(c,1,1) ~=\
    \ nil then\n                c = string.upper(c)\n            else\n          \
    \      c = string.lower(c)\n            end\n            new_s = new_s .. c\n\
    \        else\n            new_s = new_s .. string.sub(s,i,i)\n        end\n \
    \   end\n    return new_s\nend", "    local result = \"\"\n    for i = 1, #s do\n\
    \        if string.sub(s,i,i) ~= \"\" then\n            local char = string.sub(s,i,i)\n\
    \            if string.sub(char,1,1) ~= \"\" then\n                local lower\
    \ = string.lower(char)\n                local upper = string.upper(char)\n   \
    \             if lower ~= upper then\n                    result = result .. upper\n\
    \                else\n                    result = result .. lower\n        \
    \        end\n            else\n                result = result .. char\n    \
    \        end\n        end\n    end\n    return result\nend", "    local str =\
    \ ''\n    for i=1,#s do\n        if string.sub(s,i,i) ~= nil then\n          \
    \  str = str .. string.sub(s,i,i)\n        else\n            str = str .. string.sub(s,i,#s)\n\
    \        end\n    end\n    return str\nend", "  local result = \"\"\n  for i =\
    \ 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      result = string.sub(s,i,i)\n\
    \    else\n      result = string.sub(s,i,#s)\n    end\n  end\n  return result\n\
    end", "  local result = ''\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n\
    \    if string.find(string.char(c),'a') then\n      result = string.gsub(string.gsub(c,'a','A'),'b','B')\n\
    \    elseif string.find(string.char(c),'b') then\n      result = string.gsub(string.gsub(c,'b','B'),'a','A')\n\
    \    else\n      result = c\n    end\n  end\n  return result\nend", "  local result\
    \ = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      result\
    \ = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n    end\n\
    \  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #s do\n  \
    \  if string.sub(s,i,i) ~= nil then\n      if string.sub(s,i,i) ~= string.sub(s,i,i)\
    \ then\n        result = string.sub(s,i,i)\n      else\n        result = string.sub(s,i,i):lower()\
    \ + result\n      end\n    else\n      result = string.sub(s,i,i):lower() + result\n\
    \    end\n  end\n  return result\nend", "    local result = \"\"\n    for i =\
    \ 1, #s do\n        local char = string.sub(s,i,i)\n        if char:match(\"^[%aA]$\"\
    ) then\n            char = string.upper(char)\n        else\n            char\
    \ = string.lower(char)\n        end\n        result = result .. char\n    end\n\
    \    return result\nend", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ ~= nil then\n      result = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n\
    \    end\n  end\n  return result\nend", "  local result = ''\n  for i = 1, #s\
    \ do\n    if string.sub(s,i,i) ~= nil then\n      local char = string.sub(s,i,i)\n\
    \      if string.sub(s,i,i) ~= char then\n        char = string.upper(char)\n\
    \      else\n        char = string.lower(char)\n      end\n      result = result\
    \ .. char\n    end\n  end\n  return result\nend", "  local function helper(s)\n\
    \    local t = {}\n    for i = 1, #s do\n      local c = string.sub(s,i,i)\n \
    \     if string.find(string.chars(),c) then\n        table.insert(t,string.upper(c))\n\
    \      else\n        table.insert(t,c)\n      end\n    end\n    return table.concat(t,\
    \ \"\")\n  end\n  return helper(s)\nend", "    local newS = ''\n    for i = 1,\
    \ #s do\n        if string.sub(s,i,i) ~= '' then\n            if string.sub(s,i,i)\
    \ ~= string.sub(s,i,i) then\n                newS = newS..string.sub(s,i,i)\n\
    \            else\n                newS = newS..string.upper(string.sub(s,i,i))\n\
    \            end\n        else\n            newS = newS..string.upper(string.sub(s,i,i))\n\
    \        end\n    end\n    return newS\nend", "  local s = s:gsub(\"%l\", string.upper)\n\
    \  s = s:gsub(\"%L\", string.lower)\n  return s:gsub(\"%a\", \"a\")\nend\nprint(solve(\"\
    1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"a\"))\n\
    print(solve(\"b\"))\nprint(solve(\"c\"))\nprint(solve(\"d\"))\nprint(solve(\"\
    e\"))\nprint(solve(\"f\"))\nprint(solve(\"g\"))\nprint(solve(\"h\"))\nprint(solve(\"\
    i\"))\nprint(solve(\"j\"))\nprint(solve(\"k\"))\nprint(solve(\"l\"))\nprint(solve(\"\
    m\"))\nprint(solve(\"n\"))\nprint(solve(\"o\"))\nprint(solve(\"p\"))\nprint(solve(\"\
    q\"))\nprint(solve(\"r\"))\nprint(solve(\"s\"))\nprint(solve(\"t\"))\nprint(solve(\"\
    u\"))\nprint(solve(\"v\"))\nprint(solve(\"w\"))\nprint(solve(\"x\"))\nprint(solve(\"\
    y\"))\nprint(solve(\"z\"))\nprint(solve(\"A\"))\nprint(solve(\"B\"))\nprint(solve(\"\
    C\"))\nprint(solve(\"D\"))\nprint(solve(\"E\"))\nprint(solve(\"F\"))\nprint(solve(\"\
    G\"))\nprint(solve(\"H\"))\nprint(solve(\"I\"))\nprint(solve(\"J\"))\nprint(solve(\"\
    K\"))\nprint(solve(\"L\"))\nprint(solve(\"M\"))\nprint(solve(\"N\"))\nprint(solve(\"\
    O\"))\nprint(solve(\"P\"))\nprint(solve(\"Q\"))\nprint(solve(\"R\"))\nprint(solve(\"\
    S\"))\nprint(solve(\"T\"))\nprint(solve(\"U\"))\nprint(solve(\"V\"))\nprint(solve(\"\
    W\"))\nprint(solve(\"X\"))\nprint(solve(\"Y\"))\nprint(solve(\"Z\"))\nprint(solve(\"\
    a\"))\nprint(solve(\"b\"))\nprint(solve(\"c\"))\nprint(solve(\"d\"))\nprint(solve(\"\
    e\"))\nprint(solve(\"f\"))\nprint(solve(\"g\"))\nprint(solve(\"h\"))\nprint(solve(\"\
    i\"))\nprint(solve(\"j\"))\nprint(solve(\"k\"))\nprint(solve(\"l\"))\nprint(solve(\"\
    m\"))\nprint(solve(\"n\"))\nprint(solve(\"o\"))\nprint(solve(\"p\"))\nprint(solve(\"\
    q\"))\nprint(solve(\"r\"))\nprint(solve(\"s\"))\nprint(solve(\"t\"))\nprint(solve(\"\
    u\"))\nprint(solve(\"v\"))\nprint(solve(\"w\"))\nprint(solve(\"x", "  s = string.gsub(s,\
    \ '[%a]', function(c) return string.upper(c) end)\n  if s == '' then return s\
    \ end\n  local t = {}\n  for i = 1, #s do\n    if s[i] ~= string.sub(s,i,i) then\
    \ t[#t + 1] = string.sub(s,i,i) end\n  end\n  return table.concat(t, \"\")\nend",
  "    local str = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil\
    \ then\n            str = str .. string.sub(s,i,i)\n        else\n           \
    \ str = str .. string.sub(s,i,i)\n        end\n    end\n    return str\nend",
  "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n\
    \      local c = string.sub(s,i,i)\n      if string.sub(c,1,1) ~= nil then\n \
    \       c = string.upper(c)\n      else\n        c = string.lower(c)\n      end\n\
    \      result = result .. c\n    end\n  end\n  return result\nend", "  local result\
    \ = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      local\
    \ char = string.sub(s,i,i)\n      if string.find(char, \"[A-Z]\") then\n     \
    \   char = string.upper(char)\n      elseif string.find(char, \"[a-z]\") then\n\
    \        char = string.lower(char)\n      end\n      result = result .. char\n\
    \    end\n  end\n  return result\nend", "    local s = string.lower(s)\n    for\
    \ i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n            if string.sub(s,i,i)\
    \ ~= string.sub(s,i,i) then\n                s = string.sub(s,i,i)\n         \
    \   else\n                s = string.upper(string.sub(s,i,i))\n            end\n\
    \        else\n            s = string.upper(s)\n        end\n    end\n    return\
    \ s\nend", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ ~= nil then\n      result = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n\
    \    end\n  end\n  return result\nend", "  local newS = \"\"\n  for i = 1, #s\
    \ do\n    local c = string.sub(s,i,i)\n    if string.match(c, \"^[%w]$\") then\n\
    \      newS = newS..string.upper(c)\n    else\n      newS = newS..c\n    end\n\
    \  end\n  return newS\nend", "    local result = \"\"\n    for i = 1, #s do\n\
    \        if string.sub(s,i,i) ~= nil then\n            local char = string.sub(s,i,i)\n\
    \            if string.find(string.upper(char), string.upper(char)) then\n   \
    \             result = string.sub(string.upper(char), 1, string.find(string.upper(char),\
    \ string.upper(char))-1) + result + string.sub(string.upper(char), string.find(string.upper(char),\
    \ string.upper(char))+1)\n            elseif string.find(string.lower(char), string.lower(char))\
    \ then\n                result = string.sub(string.lower(char), 1, string.find(string.lower(char),\
    \ string.lower(char))-1) + result + string.sub(string.lower(char), string.find(string.lower(char),\
    \ string.lower(char))+1)\n            else\n                result = char + result\n\
    \            end\n        end\n    end\n    return result\nend", "    local s\
    \ = string.lower(s)\n    local i = #s\n    local j = 0\n    while i ~= 0 do\n\
    \        if string.sub(s, j, j + 1) ~= string.sub(s, i, i) then\n            s\
    \ = string.sub(s, j, j + 1) .. string.sub(s, i, i)\n        else\n           \
    \ j = j + 1\n        end\n        i = i - 1\n    end\n    return s\nend", "  local\
    \ newS = \"\"\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n    if string.find(c,\
    \ \"[a-z]\") then\n      newS = string.gsub(string.lower(c), string.upper, string.upper)\n\
    \    else\n      newS = c\n    end\n  end\n  return newS\nend", "  local t = {}\n\
    \  for i = 1, #s do\n    local c = string.sub(s,i,i)\n    if string.match(c,\"\
    ^[%a]\") then\n      c = string.upper(c)\n    elseif string.match(c,\"^[%A]\"\
    ) then\n      c = string.lower(c)\n    end\n    t[i] = c\n  end\n  return table.concat(t,\
    \ \"\")\nend", "  local result = \"\"\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n\
    \    if string.match(\"^[%a]\", c) then\n      result = string.gsub(string.upper(c),\"\
    a\",string.lower(c))\n    else\n      result = string.gsub(c,\"a\",string.upper(c))\n\
    \    end\n  end\n  return result\nend", "  s = s:gsub(\"%l\", function(c) return\
    \ string.char(tonumber(c)) end)\n  if #s == 0 then return s end\n  local t = {}\n\
    \  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i) then t[#t+1]\
    \ = string.sub(s,i,i) end\n  end\n  if #t > 0 then\n    local s = t[1]\n    for\
    \ i = 2, #t do\n      s = s .. t[i]\n    end\n    return s\n  end\n  return s\n\
    end", "  local result = \"\"\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n\
    \    if string.match(\"^[%w]$\", c) then\n      c = string.upper(c)\n    else\n\
    \      c = string.lower(c)\n    end\n    result = result .. c\n  end\n  return\
    \ result\nend", "    local newS = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ == string.sub(s,i,i) then\n            newS = string.sub(s,i,i) + newS\n   \
    \     else\n            newS = string.sub(s,i,i) + newS\n        end\n    end\n\
    \    return newS\nend", "    local result = ''\n    for i = 1, #s do\n       \
    \ if string.sub(s,i,i) ~= nil then\n            if string.sub(s,i,i) ~= string.sub(s,i,i)\
    \ then\n                result = string.sub(s,i,i)\n            else\n       \
    \         result = string.sub(s,i,i) + result\n            end\n        else\n\
    \            result = string.sub(s,i,i) + result\n        end\n    end\n    return\
    \ result\nend", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ ~= nil then\n      result = string.sub(s,i,i):upper..result\n    else\n    \
    \  result = string.sub(s,i,i):lower..result\n    end\n  end\n  return result\n\
    end", "    local s = string.lower(s)\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ ~= nil then\n            local c = string.sub(s,i,i)\n            if string.sub(c,1,1)\
    \ ~= nil then\n                c = string.sub(c,1,1)..string.sub(c,2,#c)\n   \
    \         end\n            s = string.sub(s,i,i)..c\n        end\n    end\n  \
    \  return string.lower(s)\nend", "    local s = string.lower(s)\n    local t =\
    \ \"\"\n    for i = 1, #s do\n        if s[i] ~= nil then\n            if string.find(string.upper(s[i]),\
    \ string.upper(s[i])) == 1 then\n                t = t .. string.upper(s[i])\n\
    \            else\n                t = t .. s[i]\n            end\n        else\n\
    \            t = t .. s[i]\n        end\n    end\n    return t\nend", "  local\
    \ result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n  \
    \    local char = string.sub(s,i,i)\n      if string.find(string.lower(char),\
    \ string.upper(char)) then\n        char = string.upper(char)\n      else\n  \
    \      char = string.lower(char)\n      end\n      result = result .. char\n \
    \   else\n      result = result .. string.sub(s,i,i)\n    end\n  end\n  return\
    \ result\nend", "  local new_s = ''\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ ~= nil then\n      new_s = string.sub(s,i,i)\n    else\n      new_s = string.sub(s,i,#s)\n\
    \    end\n  end\n  return new_s\nend", "  local str=s:gsub(\"%l\",function(x)\n\
    \    if x:match(\"^%l\") then\n      return x:upper()\n    else\n      return\
    \ x:lower()\n    end\n  end)\n  if str:match(\"^%l\") then\n    return str:upper()\n\
    \  else\n    return str:lower()\n  end\nend", "  local function helper(s,i,j)\n\
    \    if j > i then\n      local c = string.sub(s,i,j)\n      if string.find(c,'[A-Z]')\
    \ then\n        return helper(s,i,j-1)..string.upper(c)\n      elseif string.find(c,'[a-z]')\
    \ then\n        return helper(s,i,j-1)..string.lower(c)\n      else\n        return\
    \ helper(s,i,j)\n      end\n    end\n    return s\n  end\n  return helper(s,1,#s)\n\
    end", "    local result = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ ~= \"\" then\n            local char = string.sub(s,i,i)\n            if string.sub(char,1,1)\
    \ ~= \"\" then\n                local upper = string.upper(char)\n           \
    \     local lower = string.lower(char)\n                if upper ~= \"\" then\n\
    \                    char = upper\n                elseif lower ~= \"\" then\n\
    \                    char = lower\n                end\n            end\n    \
    \        result = result .. char\n        else\n            result = result ..\
    \ string.sub(s,i,i)\n        end\n    end\n    return result\nend", "  s = string.lower(s)\n\
    \  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      s = string.upper(string.sub(s,i,i))\n\
    \    else\n      s = string.upper(string.sub(s,i,i))\n    end\n  end\n  return\
    \ s\nend", "  s = string.gsub(s, '[%a]', function(c) \n    if string.byte(c) then\
    \ \n      return string.char(tonumber(c)) \n    else \n      return c \n    end\
    \ \n  end)\n  if #s == 0 then \n    return s \n  end \n  local t = {}\n  for i\
    \ = 1, #s do \n    t[#t + 1] = string.sub(s,i,i) \n  end \n  table.sort(t)\n \
    \ local result = \"\"\n  for i = 1, #t do \n    if t[i] ~= \"\" then \n      result\
    \ = result .. t[i] \n    end \n  end \n  return result \nend", "  local result\
    \ = ''\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      if string.sub(s,i,i)\
    \ ~= string.sub(s,i,i) then\n        result = string.sub(s,i,i)\n      else\n\
    \        result = string.sub(s,i,i) + result\n      end\n    else\n      result\
    \ = string.sub(s,i,i) + result\n    end\n  end\n  return result\nend", "  s =\
    \ string.gsub(s, '[%a]', function(c) return string.upper(c) end)\n  s = string.gsub(s,\
    \ '[%A]', function(c) return string.upper(c) end)\n  s = string.gsub(s, '[%c]',\
    \ function(c) return string.lower(c) end)\n  s = string.gsub(s, '[%C]', function(c)\
    \ return string.lower(c) end)\n  return s\nend", "  local result = \"\"\n  for\
    \ i = 1, #s do\n    local char = string.sub(s,i,i)\n    if string.find(string.lower(char),\
    \ string.upper(char)) then\n      result = string.sub(string.upper(char),1,1)..result\n\
    \    else\n      result = char..result\n    end\n  end\n  return result\nend",
  "    local result = \"\"\n    for i = 1, #s do\n        local c = string.sub(s,i,i)\n\
    \        if string.find(string.char(c),\"a\") then\n            local upper =\
    \ string.upper(c)\n            local lower = string.lower(c)\n            if upper\
    \ ~= lower then\n                result = result .. upper\n            else\n\
    \                result = result .. c\n            end\n        else\n       \
    \     result = result .. c\n        end\n    end\n    return result\nend", " \
    \ local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n\
    \      result = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n\
    \    end\n  end\n  return result\nend", "  local function helper(s,i,j)\n    if\
    \ i == j then\n      return s\n    end\n    if s[i] ~= nil then\n      if s[i]\
    \ >= 'a' and s[i] <= 'z' then\n        return helper(s,i,j-1) + toupper(s[i])\n\
    \      else\n        return helper(s,i,j-1) + s[i]\n      end\n    end\n    return\
    \ helper(s,i+1,j)\n  end\n  return helper(s,1,#s)\nend", "  local str = ''\n \
    \ for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      if string.sub(s,i,i)\
    \ ~= string.sub(s,i,i) then\n        str = string.sub(s,i,i) + str\n      else\n\
    \        str = string.upper(string.sub(s,i,i)) + str\n      end\n    else\n  \
    \    str = string.upper(string.sub(s,i,i)) + str\n    end\n  end\n  return str\n\
    end", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~=\
    \ nil then\n      result = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n\
    \    end\n  end\n  return result\nend", "  local newS = \"\"\n  for i = 1, #s\
    \ do\n    if string.sub(s,i,i) ~= nil then\n      newS = newS .. string.sub(s,i,i)\n\
    \    else\n      newS = newS .. string.sub(s,i,i)\n    end\n  end\n  return newS\n\
    end", "    local str = ''\n    for i=1,#s do\n        if string.sub(s,i,i) ~=\
    \ nil then\n            str = str .. string.sub(s,i,i)\n        else\n       \
    \     str = str .. string.sub(s,i,#s)\n        end\n    end\n    return str\n\
    end", "  local str = ''\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n\
    \      str = str .. string.sub(s,i,i)\n    else\n      str = str .. string.sub(s,i,i)\n\
    \    end\n  end\n  return str:reverse()\nend", "  local result = \"\"\n  for i\
    \ = 1, #s do\n    local c = string.sub(s,i,i)\n    if string.match(c, \"^[%w]$\"\
    ) then\n      c = string.upper(c)\n    else\n      c = string.lower(c)\n    end\n\
    \    result = result .. c\n  end\n  return result\nend", "  local result = \"\"\
    \n  for i = 1, #s do\n    if string.sub(s,i,i) ~= \"\" then\n      if string.sub(s,i,i)\
    \ ~= string.sub(s,i,i) then\n        result = string.sub(s,i,i)..result\n    \
    \  else\n        result = string.sub(s,i,i)..result\n      end\n    end\n  end\n\
    \  return result\nend", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ ~= nil then\n      local c = string.sub(s,i,i)\n      if string.sub(c,1,1) ~=\
    \ nil then\n        c = string.upper(c)\n      else\n        c = string.lower(c)\n\
    \      end\n      result = result .. c\n    end\n  end\n  return result\nend",
  "  local newS = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n\
    \      if string.sub(s,i,i) ~= string.sub(s,i,i) then\n        newS = newS ..\
    \ string.sub(s,i,i)\n      else\n        newS = newS .. string.upper(string.sub(s,i,i))\n\
    \      end\n    else\n      newS = newS .. string.sub(s,i,i)\n    end\n  end\n\
    \  return newS\nend", "    local result = \"\"\n    for i = 1, #s do\n       \
    \ if string.sub(s,i,i) ~= nil then\n            local c = string.sub(s,i,i)\n\
    \            if string.sub(c,1,1) ~= nil then\n                c = string.upper(c)\n\
    \            else\n                c = string.lower(c)\n            end\n    \
    \        result = result .. c\n        else\n            result = result .. string.sub(s,i,i)\n\
    \        end\n    end\n    return result\nend", "  local result = ''\n  for i\
    \ = 1, #s do\n    local c = string.sub(s,i,i)\n    if string.match(c, '^[%a]')\
    \ then\n      c = string.upper(c)\n    elseif string.match(c, '^[%A]') then\n\
    \      c = string.lower(c)\n    end\n    result = result .. c\n  end\n  return\
    \ result\nend", "  local result = \"\"\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n\
    \    if string.find(string.char(c),\"a\") then\n      result = string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(",
  "    local str = ''\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n\
    \            str = str .. string.sub(s,i,i)\n        else\n            str = str\
    \ .. string.sub(s,i,i)\n        end\n    end\n    return str\nend", "  local result\
    \ = \"\"\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n    if string.find(string.chars(c),\"\
    ^[%a%d]+$\") then\n      c = string.upper(c)\n    else\n      c = string.lower(c)\n\
    \    end\n    result = result .. c\n  end\n  return result\nend", "  local str\
    \ = ''\n  local i = 0\n  while i < #s do\n    if string.sub(s,i,i) ~= nil then\n\
    \      str = str .. string.sub(s,i,i)\n    else\n      str = str .. string.sub(s,i,i)\n\
    \    end\n    i = i + 1\n  end\n  str = str:reverse()\n  return str\nend", " \
    \ local function helper(s)\n    local ret = \"\"\n    for i = 1, #s do\n     \
    \ if s[i] ~= nil then\n        if s[i] ~= s[i] then\n          ret = ret .. toupper(s[i])\n\
    \        else\n          ret = ret .. tolower(s[i])\n        end\n      else\n\
    \        ret = ret .. s[i]\n      end\n    end\n    return ret\n  end\n  return\
    \ helper(s)\nend", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ ~= nil then\n      result = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n\
    \    end\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #s\
    \ do\n    if string.sub(s,i,i) ~= nil then\n      result = string.sub(s,i,i)\n\
    \    else\n      result = string.sub(s,i,#s)\n    end\n  end\n  return result\n\
    end", "  s = string.gsub(s, '[%a]', function(c) return string.char(tonumber(c))\
    \ end)\n  if s == '' then return s end\n  local t = {}\n  for i = 1, #s do\n \
    \   t[#t + 1] = string.sub(s,i,i)\n  end\n  table.sort(t)\n  local s = ''\n  for\
    \ i = 1, #t do\n    if t[i] ~= s[i] then s = t[i] end\n  end\n  return s\nend",
  "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n\
    \      result = string.sub(s,i,i) + result\n    else\n      result = string.sub(s,i,i)\
    \ + result\n    end\n  end\n  return result\nend", "    local s = string.lower(s)\n\
    \    local t = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil\
    \ then\n            if string.sub(s,i,i) ~= string.sub(s,i,i) then\n         \
    \       t = string.sub(s,i,i)\n            else\n                t = string.sub(s,i,i)..t\n\
    \            end\n        else\n            t = string.sub(s,i,i)..t\n       \
    \ end\n    end\n    return t\nend", "  local s = string.lower(s)\n  local t =\
    \ {}\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      table.insert(t,\
    \ string.sub(s,i,i))\n    end\n  end\n  if #t == 0 then\n    return s\n  end\n\
    \  local res = ''\n  for i = 1, #t do\n    local c = string.upper(t[i])\n    if\
    \ c ~= nil then\n      res = res .. c\n    else\n      res = res .. t[i]\n   \
    \ end\n  end\n  return res\nend", "    local result = \"\"\n    for i = 1, #s\
    \ do\n        if string.sub(s,i,i) ~= nil then\n            local char = string.sub(s,i,i)\n\
    \            if string.find(string.lower(char),string.upper(char)) then\n    \
    \            result = string.upper(result)..string.lower(char)\n            else\n\
    \                result = string.upper(result)..char\n            end\n      \
    \  end\n    end\n    return result\nend", "  local s = string.lower(s)\n  local\
    \ result = s\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n     \
    \ result = string.sub(s,i,i)\n      break\n    end\n  end\n  return result\nend",
  "  local result = ''\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n\
    \      if string.sub(s,i,i) ~= string.sub(s,i,i) then\n        result = string.sub(s,i,i)\n\
    \      else\n        result = string.sub(s,i,i):lower() + result\n      end\n\
    \    else\n      result = string.sub(s,i,i):lower() + result\n    end\n  end\n\
    \  return result\nend", "    local t = {}\n    for _, v in ipairs(s) do\n    \
    \    if v:byte() ~= nil then\n            table.insert(t, v:lower())\n       \
    \ else\n            table.insert(t, v)\n        end\n    end\n    table.sort(t)\n\
    \    local s = ''\n    for _, v in ipairs(t) do\n        if v:byte() ~= nil then\n\
    \            s = s .. v:upper()\n        else\n            s = s .. v\n      \
    \  end\n    end\n    return s\nend", "  local str = ''\n  for i = 1, #s do\n \
    \   if string.sub(s,i,i) ~= nil then\n      if string.sub(s,i,i) ~= string.sub(s,i,i)\
    \ then\n        str = string.sub(s,i,i)\n      else\n        str = string.upper(str)\n\
    \      end\n    end\n  end\n  return str\nend", "  local result = \"\"\n  for\
    \ i = 1, #s do\n    local char = string.sub(s,i,i)\n    if string.find(char, \"\
    [A-Za-z]\") then\n      result = string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.",
  "  s = string.lower(s)\n  local n = #s\n  if n == 0 then\n    return s\n  end\n\
    \  local t = {}\n  local i = 0\n  while i < n do\n    local c = string.sub(s,i,i)\n\
    \    if string.find(string.letters,c) then\n      t[#t+1] = string.upper(c)\n\
    \    else\n      t[#t+1] = c\n    end\n    i = i + 1\n  end\n  return table.concat(t)\n\
    end", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~=\
    \ nil then\n      local char = string.sub(s,i,i)\n      if string.sub(char,1,1)\
    \ ~= nil then\n        char = string.upper(char)\n      else\n        char = string.lower(char)\n\
    \      end\n      result = result .. char\n    end\n  end\n  return result\nend",
  "    local str=s:gsub(\"%l\",function(x)\n        if x~=nil then\n            if\
    \ x>='a' and x<='z' then\n                return string.upper(x)\n           \
    \ else\n                return string.lower(x)\n            end\n        end\n\
    \    end)\n    if str==nil then\n        return str\n    end\n    return str\n\
    end", "    local s = string.lower(s)\n    local t = \"\"\n    for i = 1, #s do\n\
    \        if string.sub(s,i,i) ~= \"\" then\n            local c = string.sub(s,i,i)\n\
    \            if string.find(string.upper(c),string.upper(c)) then\n          \
    \      c = string.upper(c)\n            elseif string.find(string.lower(c),string.lower(c))\
    \ then\n                c = string.lower(c)\n            end\n            table.insert(t,c)\n\
    \        else\n            table.insert(t,string.sub(s,i,i))\n        end\n  \
    \  end\n    return table.concat(t, \"\")\nend", "  local result = ''\n  for i\
    \ = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      result = string.sub(s,i,i)\n\
    \    else\n      result = string.sub(s,i,#s)\n    end\n  end\n  return result\n\
    end", "  local s = s:gsub(\"%l\", string.upper)\n  s = s:gsub(\"%u\", string.lower)\n\
    \  return s:gsub(\"%p\", string.upper)\nend", "  local newS = \"\"\n  for i =\
    \ 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      if string.sub(s,i,i) ~=\
    \ string.sub(s,i,i) then\n        newS = newS..string.sub(s,i,i)\n      else\n\
    \        newS = newS..string.upper(string.sub(s,i,i))\n      end\n    else\n \
    \     newS = newS..string.sub(s,i,i)\n    end\n  end\n  return newS\nend", " \
    \ local function lower(c)\n    if c then\n      if c >= 'a' and c <= 'z' then\n\
    \        return c - 'a'\n      elseif c >= 'A' and c <= 'Z' then\n        return\
    \ c - 'A'\n      else\n        return c\n      end\n    end\n  end\n  \n  local\
    \ function upper(c)\n    if c then\n      if c >= 'a' and c <= 'z' then\n    \
    \    return c + ('a' - 'A')\n      elseif c >= 'A' and c <= 'Z' then\n       \
    \ return c + ('A' - 'a')\n      else\n        return c\n      end\n    end\n \
    \ end\n  \n  local function toUpper(c)\n    if c then\n      if c >= 'a' and c\
    \ <= 'z' then\n        return c + ('a' - 'A')\n      elseif c >= 'A' and c <=\
    \ 'Z' then\n        return c + ('A' - 'a')\n      else\n        return c\n   \
    \   end\n    end\n  end\n  \n  local function toLower(c)\n    if c then\n    \
    \  if c >= 'a' and c <= 'z' then\n        return c - 'a'\n      elseif c >= 'A'\
    \ and c <= 'Z' then\n        return c - 'A'\n      else\n        return c\n  \
    \    end\n    end\n  end\n  \n  local function toUpperOrLower(c)\n    if c then\n\
    \      if c >= 'a' and c <= 'z' then\n        return toUpper(c)\n      elseif\
    \ c >= 'A' and c <= 'Z' then\n        return toLower(c)\n      else\n        return\
    \ c\n      end\n    end\n  end\n  \n  local function toUpperOrLowerOrNot(c)\n\
    \    if c then\n      if c >= 'a' and c <= 'z' then\n        return toUpperOrLower(c)\n\
    \      elseif c >= 'A' and c <= 'Z' then\n        return toUpperOrLower(c)\n \
    \     else\n        return toUpperOrLower(toLower(c))\n      end\n    end\n  end\n\
    \  \n  local function toLowerOrNot(c)\n    if c then\n      if c >= 'a' and c\
    \ <= 'z' then\n        return toLower(c)\n      elseif c >= 'A' and c <= 'Z' then\n\
    \        return toLower(c)\n      else\n        return toLower(toUpper(c))\n \
    \     end\n    end\n  end\n  \n  local function toUpperOrLowerOrNotOrNot(c)\n\
    \    if c then\n", "    local t = {}\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ ~= nil then\n            table.insert(t,string.sub(s,i,i))\n        else\n \
    \           table.insert(t,string.sub(s,i,#s))\n        end\n    end\n    table.sort(t)\n\
    \    local s = ''\n    for i = 1, #t do\n        if t[i] == 'a' then\n       \
    \     s = s .. string.sub(s,1,i)\n            s = s .. string.sub(s,i+1,#s)\n\
    \        elseif t[i] == 'A' then\n            s = s .. string.sub(s,1,i)\n   \
    \         s = s .. string.sub(s,i+1,#s)\n        elseif t[i] == 'b' then\n   \
    \         s = s .. string.sub(s,1,i)\n            s = s .. string.sub(s,i+1,#s)\n\
    \        elseif t[i] == 'B' then\n            s = s .. string.sub(s,1,i)\n   \
    \         s = s .. string.sub(s,i+1,#s)\n        elseif t[i] == 'c' then\n   \
    \         s = s .. string.sub(s,1,i)\n            s = s .. string.sub(s,i+1,#s)\n\
    \        elseif t[i] == 'C' then\n            s = s .. string.sub(s,1,i)\n   \
    \         s = s .. string.sub(s,i+1,#s)\n        elseif t[i] == '#' then\n   \
    \         s = s .. string.sub(s,1,i)\n            s = s .. string.sub(s,i+1,#s)\n\
    \        elseif t[i] == '@' then\n            s = s .. string.sub(s,1,i)\n   \
    \         s = s .. string.sub(s,i+1,#s)\n        elseif t[i] == '$' then\n   \
    \         s = s .. string.sub(s,1,i)\n            s = s .. string.sub(s,i+1,#s)\n\
    \        elseif t[i] == '%' then\n            s = s .. string.sub(s,1,i)\n   \
    \         s = s .. string.sub(s,i+1,#s)\n        elseif t[i] == '^' then\n   \
    \         s = s .. string.sub(s,1,i)\n            s = s .. string.sub(s,i+1,#s)\n\
    \        elseif t[i] == '&' then\n            s = s .. string.sub(s,1,i)\n   \
    \         s = s .. string.sub(s,i+1,#s)\n        elseif t[i] == '*' then\n   \
    \         s = s .. string.sub(s,1,i)\n            s = s .. string.sub(s,i+1,#s)\n\
    \        elseif t[i] == '-' then\n            s = s .. string.sub(s,1,i)\n   \
    \         s = s .. string.sub(s,i+1,#s)\n        elseif t[i] == '+' then\n   \
    \         s = s .. string.sub(s,1,i)\n            s = s .. string.sub(s,i+1,#s)\n\
    \        elseif t[i] == '=' then\n            s = s ", "  local s = s:gsub(\"\
    %l\", string.upper)\n  s = s:gsub(\"%U\", string.lower)\n  s = s:gsub(\"%l\",\
    \ string.lower)\n  s = s:gsub(\"%u\", string.upper)\n  return s\nend", "  local\
    \ str = ''\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      if\
    \ string.sub(s,i,i) ~= string.sub(s,i,i) then\n        str = str .. string.sub(s,i,i)\n\
    \      else\n        str = str .. string.upper(string.sub(s,i,i))\n      end\n\
    \    else\n      str = str .. string.sub(s,i,i)\n    end\n  end\n  return str\n\
    end", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~=\
    \ nil then\n      result = string.sub(s,i,i) or result\n    else\n      result\
    \ = string.sub(s,i,#s)\n    end\n  end\n  return result\nend", "  local result\
    \ = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      local\
    \ c = string.sub(s,i,i)\n      if string.sub(c,1,1) ~= nil then\n        c = string.upper(c)\n\
    \      else\n        c = string.lower(c)\n      end\n      result = result ..\
    \ c\n    end\n  end\n  if #result == 0 then\n    result = s\n  end\n  return result\n\
    end", "  local function helper(s)\n    local t = {}\n    for i = 1, #s do\n  \
    \    if s[i] ~= nil then\n        if s[i] >= 'a' and s[i] <= 'z' then\n      \
    \    t[#t+1] = s[i]:toupper():sub(1)\n        elseif s[i] >= 'A' and s[i] <= 'Z'\
    \ then\n          t[#t+1] = s[i]:tolower():sub(1)\n        else\n          t[#t+1]\
    \ = s[i]\n        end\n      end\n    end\n    return table.concat(t, \"\")\n\
    \  end\n  return helper(s)\nend", "  s = string.lower(s)\n  local t = {}\n  for\
    \ i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      t[#t+1] = string.sub(s,i,i)\n\
    \    end\n  end\n  if #t > 0 then\n    return table.concat(t, \"\")\n  else\n\
    \    return s\n  end\nend", "  local result = ''\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ ~= nil then\n      result = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n\
    \    end\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #s\
    \ do\n    if string.sub(s,i,i) ~= \"\" then\n      result = string.sub(s,i,i)\n\
    \    else\n      result = string.sub(s,i,#s)\n    end\n  end\n  return result\n\
    end", "  local result = \"\"\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n\
    \    if string.match(c, \"^[%a%A]\") then\n      c = string.upper(c)\n    elseif\
    \ string.match(c, \"^[%w%W]\") then\n      c = string.lower(c)\n    end\n    result\
    \ = result .. c\n  end\n  return result\nend", "  local s = s:gsub(\"%l\", string.upper)\n\
    \  s = s:gsub(\"%u\", string.lower)\n  return s:gsub(\"%p\", string.upper)\nend",
  "  local ret = ''\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n  \
    \    ret = string.gsub(string.sub(s,i,i),'([a-z])',function(x)\n        if string.sub(x,1,1)\
    \ ~= nil then\n          return string.upper(string.sub(x,1,1))..string.lower(string.sub(x,2,#x))\n\
    \        else\n          return x\n        end\n      end)\n    else\n      ret\
    \ = string.gsub(string.sub(s,i,i),'([a-z])',function(x)\n        if string.sub(x,1,1)\
    \ ~= nil then\n          return string.upper(x)\n        else\n          return\
    \ x\n        end\n      end)\n    end\n  end\n  return ret\nend", "  local result\
    \ = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      local\
    \ c = string.sub(s,i,i)\n      if string.sub(c,1,1) ~= nil then\n        c = string.upper(c)\n\
    \      else\n        c = string.lower(c)\n      end\n      result = result ..\
    \ c\n    else\n      result = result .. string.sub(s,i,i)\n    end\n  end\n  return\
    \ result\nend", "    local result = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ ~= nil then\n            if string.sub(s,i,i) ~= string.sub(s,i,i) then\n  \
    \              result = string.sub(s,i,i)\n            else\n                result\
    \ = string.upper(string.sub(s,i,i))\n            end\n        else\n         \
    \   result = string.sub(s,i,i)\n        end\n    end\n    return result\nend",
  "    local t = {}\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n\
    \            table.insert(t,string.sub(s,i,i))\n        else\n            table.insert(t,string.sub(s,i,#s))\n\
    \        end\n    end\n    return table.concat(t, \"\")\nend", "  local s = string.lower(s)\n\
    \  local i, j = 1, #s\n  while i < j do\n    if s[i] ~= nil then\n      if s[i]\
    \ >= 'a' and s[i] <= 'z' then\n        s[i] = string.upper(s[i])\n      elseif\
    \ s[i] >= 'A' and s[i] <= 'Z' then\n        s[i] = string.lower(s[i])\n      else\n\
    \        s[i] = s[i]\n      end\n    end\n    i = i + 1\n  end\n  return s\nend",
  "    local newS = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil\
    \ then\n            if string.sub(s,i,i) ~= \"\" then\n                if string.sub(s,i,i)\
    \ ~= string.sub(s,i,i) then\n                    newS = string.sub(s,i,i)..newS\n\
    \                else\n                    newS = string.upper(string.sub(s,i,i))..newS\n\
    \                end\n            else\n                newS = string.upper(string.sub(s,i,i))..newS\n\
    \            end\n        else\n            newS = string.upper(string.sub(s,i,i))..newS\n\
    \        end\n    end\n    return newS\nend", "    local result = \"\"\n    for\
    \ i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n            local char\
    \ = string.sub(s,i,i)\n            if string.find(char, \"a\") then\n        \
    \        char = string.upper(char)\n            elseif string.find(char, \"A\"\
    ) then\n                char = string.lower(char)\n            end\n         \
    \   result = result .. char\n        else\n            result = result .. string.sub(s,i,i)\n\
    \        end\n    end\n    return result\nend", "  local s = string.lower(s)\n\
    \  local i, j = 1, #s\n  while i <= j do\n    if s[i] ~= nil then\n      if s[i]\
    \ ~= s[i] then\n        s[i] = string.upper(s[i])\n      else\n        s[i] =\
    \ string.lower(s[i])\n      end\n    end\n    i = i + 1\n    j = j - 1\n  end\n\
    \  return s\nend", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ ~= nil then\n      result = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n\
    \    end\n  end\n  return result\nend", "    local result = \"\"\n    for i =\
    \ 1, #s do\n        if string.sub(s,i,i) ~= nil then\n            local char =\
    \ string.sub(s,i,i)\n            if string.find(string.lower(char),string.lower(char))\
    \ then\n                char = string.upper(char)\n            else\n        \
    \        char = string.lower(char)\n            end\n            result = result\
    \ .. char\n        else\n            result = result .. string.sub(s,i,i)\n  \
    \      end\n    end\n    return result\nend", "    local result = \"\"\n    for\
    \ i = 1, #s do\n        local char = string.sub(s,i,i)\n        if char:match(\"\
    ^[%a]$\") then\n            char = string.upper(char)\n        else\n        \
    \    char = string.lower(char)\n        end\n        result = result .. char\n\
    \    end\n    return result\nend", "  local result = \"\"\n  for i = 1, #s do\n\
    \    if string.sub(s,i,i) ~= \"\" then\n      result = string.sub(s,i,i)\n   \
    \ else\n      result = string.sub(s,i,i) + result\n    end\n  end\n  return result\n\
    end", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~=\
    \ nil then\n      result = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n\
    \    end\n  end\n  return result\nend", "  s = string.lower(s)\n  local result\
    \ = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      result\
    \ = string.sub(s,i,i)\n    else\n      result = result .. string.sub(s,i,#s)\n\
    \    end\n  end\n  return string.lower(result)\nend", "  local result = ''\n \
    \ for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      if string.sub(s,i,i)\
    \ ~= string.sub(s,i,i) then\n        result = string.sub(s,i,i)\n      else\n\
    \        result = string.sub(s,i,i) + result\n      end\n    else\n      result\
    \ = string.sub(s,i,i) + result\n    end\n  end\n  return result\nend", "  local\
    \ result = \"\"\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n    if string.find(string.char(c),\"\
    a\") == 1 then\n      result = string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.g",
  "    local result = ''\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil\
    \ then\n            if string.sub(s,i,i) ~= string.sub(s,i,i) then\n         \
    \       local c = string.sub(s,i,i)\n                local u = string.upper(c)\n\
    \                local l = string.lower(c)\n                if u == l then\n \
    \                   result = result .. string.sub(s,i,i)\n                else\n\
    \                    result = result .. string.sub(s,i,i)\n                end\n\
    \            else\n                result = result .. string.sub(s,i,i)\n    \
    \        end\n        else\n            result = result .. string.sub(s,i,i)\n\
    \        end\n    end\n    return result\nend", "    local result = \"\"\n   \
    \ for i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n            local\
    \ c = string.sub(s,i,i)\n            if string.sub(c,1,1) ~= nil then\n      \
    \          c = string.upper(c)\n            else\n                c = string.lower(c)\n\
    \            end\n            result = result .. c\n        else\n           \
    \ result = result .. string.sub(s,i,i)\n        end\n    end\n    return result\n\
    end", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~=\
    \ nil then\n      if string.sub(s,i,i) ~= string.sub(s,i,i) then\n        result\
    \ = string.sub(s,i,i)\n      else\n        result = string.sub(s,i,i):upper..string.sub(s,i,i+1)\n\
    \      end\n    else\n      result = string.sub(s,i,i):upper..result\n    end\n\
    \  end\n  return result\nend", "    local str = ''\n    for i = 1, #s do\n   \
    \     if string.sub(s,i,i) ~= nil then\n            str = str .. string.sub(s,i,i)\n\
    \        else\n            str = str .. string.sub(s,i,i)\n        end\n    end\n\
    \    return str\nend", "  local result = \"\"\n  for i = 1, #s do\n    local c\
    \ = string.sub(s,i,i)\n    if string.find(string.chars(c),\"a\") then\n      result\
    \ = string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.g",
  "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n\
    \      local char = string.sub(s,i,i)\n      if string.find(char, \"a\") then\n\
    \        char = string.upper(char)\n      elseif string.find(char, \"A\") then\n\
    \        char = string.lower(char)\n      end\n      result = result .. char\n\
    \    end\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #s\
    \ do\n    if string.sub(s,i,i) ~= nil then\n      result = string.sub(s,i,i)\n\
    \    else\n      result = string.sub(s,i,#s)\n    end\n  end\n  return result\n\
    end", "  s = string.gsub(s, '[%a]', function(c) return string.upper(c) end)\n\
    \  s = string.gsub(s, '[%A]', function(c) return string.upper(c) end)\n  s = string.gsub(s,\
    \ '[%#a@]', function(c) return string.upper(c) end)\n  return s\nend", "  local\
    \ result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n  \
    \    if string.sub(s,i,i) ~= string.sub(s,i,i) then\n        result = string.sub(s,i,i)..result\n\
    \      else\n        result = string.sub(s,i,i)..result\n      end\n    else\n\
    \      result = string.sub(s,i,i)..result\n    end\n  end\n  return result\nend",
  "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n\
    \      local c = string.sub(s,i,i)\n      if string.sub(c,1,1) ~= nil then\n \
    \       c = string.upper(c)\n      else\n        c = string.lower(c)\n      end\n\
    \      result = result .. c\n    end\n  end\n  if #result == 0 then\n    result\
    \ = s\n  end\n  return result\nend", "    local t = {}\n    for i = 1, #s do\n\
    \        local c = string.sub(s,i,i)\n        if string.find(string.char(c),\"\
    a\") then\n            table.insert(t,string.char(c):lower())\n        else\n\
    \            table.insert(t,string.char(c))\n        end\n    end\n    return\
    \ table.concat(t, \"\")\nend", "    local str = ''\n    for i = 1, #s do\n   \
    \     if string.sub(s,i,i) ~= nil then\n            str = str .. string.sub(s,i,i)\n\
    \        else\n            str = str .. string.sub(s,i,i)\n        end\n    end\n\
    \    return str\nend", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ ~= nil then\n      result = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n\
    \    end\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #s\
    \ do\n    local c = string.sub(s,i,i)\n    if string.match(c, \"^[%a]\") then\n\
    \      c = string.upper(c)\n    elseif string.match(c, \"^[%A]\") then\n     \
    \ c = string.lower(c)\n    end\n    result = result .. c\n  end\n  return result\n\
    end", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~=\
    \ nil then\n      if string.sub(s,i,i) ~= string.sub(s,i,i) then\n        local\
    \ char = string.sub(s,i,i)\n        local upper = string.sub(s,i,i)\n        local\
    \ lower = string.sub(s,i,i)\n        upper = string.sub(upper,1,1)\n        lower\
    \ = string.sub(lower,1,1)\n        upper = string.sub(upper,1,1)\n        lower\
    \ = string.sub(lower,1,1)\n        result = result .. string.sub(s,i,i) .. upper\n\
    \        result = result .. string.sub(s,i,i) .. lower\n      else\n        result\
    \ = result .. string.sub(s,i,i)\n      end\n    end\n  end\n  return result\n\
    end", "  local function is_letter(s)\n    return s:sub(1,1) == 'a'\n  end\n  local\
    \ function is_upper(s)\n    return s:sub(1,1) == 'A'\n  end\n  local function\
    \ is_lower(s)\n    return s:sub(1,1) == 'a'\n  end\n  local function is_number(s)\n\
    \    return s:sub(1,1) == '#'\n  end\n  local function is_symbol(s)\n    return\
    \ s:sub(1,1) == '#'\n  end\n  local function is_string(s)\n    return s:sub(1,1)\
    \ == '\"'\n  end\n  local function is_symbol(s)\n    return s:sub(1,1) == '#'\n\
    \  end\n  local function is_string(s)\n    return s:sub(1,1) == '\"'\n  end\n\
    \  local function is_symbol(s)\n    return s:sub(1,1) == '#'\n  end\n  local function\
    \ is_string(s)\n    return s:sub(1,1) == '\"'\n  end\n  local function is_string(s)\n\
    \    return s:sub(1,1) == '\"'\n  end\n  local function is_string(s)\n    return\
    \ s:sub(1,1) == '\"'\n  end\n  local function is_string(s)\n    return s:sub(1,1)\
    \ == '\"'\n  end\n  local function is_string(s)\n    return s:sub(1,1) == '\"\
    '\n  end\n  local function is_string(s)\n    return s:sub(1,1) == '\"'\n  end\n\
    \  local function is_string(s)\n    return s:sub(1,1) == '\"'\n  end\n  local\
    \ function is_string(s)\n    return s:sub(1,1) == '\"'\n  end\n  local function\
    \ is_string(s)\n    return s:sub(1,1) == '\"'\n  end\n  local function is_string(s)\n\
    \    return s:sub(1,1) == '\"'\n  end\n  local function is_string(s)\n    return\
    \ s:sub(1,1) == '\"'\n  end\n  local function is_string(s)\n    return s:sub(1,1)\
    \ == '\"'\n  end\n  local function is_string(s)\n    return s:sub(1,1) == '\"\
    '\n  end\n  local function is_string(s)\n    return s:sub(1,1) == '\"'\n  end\n\
    \  local function is_string(s)\n    return s:sub(1,1) == '\"'\n  end\n  local\
    \ function is_string(s)\n    return s:sub(1,1) == '\"'\n  end\n  local function\
    \ is_string(s)\n    return s:sub(1,1) == '\"'\n  end\n  local function is_string(s)\n\
    \    return s:sub(1,1) == '\"'\n  end\n  local function is_string(s)\n    return\
    \ s:sub(1,1) == '\"'\n  end\n  local function is_string(s)\n    return s:sub(1,1)\
    \ == '\"'\n  end\n  local function is_string(s)\n    return s:sub(1,1) == '\"\
    '\n  end\n", "  local str = ''\n  for i = 1, #s do\n    if string.sub(s,i,i) ~=\
    \ nil then\n      str = str .. string.sub(s,i,i)\n    else\n      str = str ..\
    \ string.sub(s,i,i)\n    end\n  end\n  return str:reverse()\nend", "    local\
    \ s = s:gsub(\"%l\", string.upper)\n    local s = s:gsub(\"%u\", string.lower)\n\
    \    return s:gsub(\"%a\", string.char):gsub(\"%c\", \"%c\"):gsub(\"%b\", \"%b\"\
    )\nend", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ ~= nil then\n      if string.sub(s,i,i) ~= string.sub(s,i,i) then\n        result\
    \ = string.sub(s,i,i)\n      else\n        result = string.upper(string.sub(s,i,i))\
    \ + result\n      end\n    else\n      result = string.upper(string.sub(s,i,i))\
    \ + result\n    end\n  end\n  return result\nend", "  local result = \"\"\n  for\
    \ i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      if string.sub(s,i,i)\
    \ ~= \"\" then\n        local char = string.sub(s,i,i)\n        if string.sub(char,1,1)\
    \ ~= nil then\n          char = string.upper(char)\n        else\n          char\
    \ = string.lower(char)\n        end\n      end\n    end\n    result = result ..\
    \ char\n  end\n  return result\nend", "  local function toUpper(str)\n    local\
    \ newStr = ''\n    for i = 1, #str do\n      if str:sub(i, i) ~= nil then\n  \
    \      newStr = newStr .. toupper(str:sub(i, i))\n      end\n    end\n    return\
    \ newStr\n  end\n  local function toLower(str)\n    local newStr = ''\n    for\
    \ i = 1, #str do\n      if str:sub(i, i) ~= nil then\n        newStr = newStr\
    \ .. tolower(str:sub(i, i))\n      end\n    end\n    return newStr\n  end\n  local\
    \ function toUpperLower(str)\n    local newStr = ''\n    for i = 1, #str do\n\
    \      if str:sub(i, i) ~= nil then\n        newStr = newStr .. toupper(str:sub(i,\
    \ i)) .. tolower(str:sub(i, i))\n      end\n    end\n    return newStr\n  end\n\
    \  local function toLowerUpper(str)\n    local newStr = ''\n    for i = 1, #str\
    \ do\n      if str:sub(i, i) ~= nil then\n        newStr = newStr .. tolower(str:sub(i,\
    \ i)) .. toupper(str:sub(i, i))\n      end\n    end\n    return newStr\n  end\n\
    \  local function toUpperUpperLower(str)\n    local newStr = ''\n    for i = 1,\
    \ #str do\n      if str:sub(i, i) ~= nil then\n        newStr = newStr .. toupper(str:sub(i,\
    \ i)) .. tolower(str:sub(i, i)) .. toupper(str:sub(i, i))\n      end\n    end\n\
    \    return newStr\n  end\n  local function toLowerLowerUpper(str)\n    local\
    \ newStr = ''\n    for i = 1, #str do\n      if str:sub(i, i) ~= nil then\n  \
    \      newStr = newStr .. tolower(str:sub(i, i)) .. toupper(str:sub(i, i)) ..\
    \ tolower(str:sub(i, i)) .. toupper(str:sub(i, i))\n      end\n    end\n    return\
    \ newStr\n  end\n  local function toUpperLowerUpperLower(str)\n    local newStr\
    \ = ''\n    for i = 1, #str do\n      if str:sub(i, i) ~= nil then\n        newStr\
    \ = newStr .. toupper(str:sub(i, i)) .. tolower(str:sub(i, i)) .. toupper(str:sub(i,\
    \ i)) .. tolower(str:sub(i, i)) .. toupper(str:sub(i, i))\n      end\n    end\n\
    \    return newStr\n  end\n  local function toLowerUpperUpperLower(str)\n    local ",
  "  local s = string.lower(s)\n  local new_s = ''\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ ~= nil then\n      if string.sub(s,i,i) ~= string.sub(s,i,i) then\n        new_s\
    \ = string.sub(s,i,i)\n      else\n        new_s = string.upper(string.sub(s,i,i))\n\
    \      end\n    end\n  end\n  return new_s\nend", "  local result = \"\"\n  for\
    \ i = 1, #s do\n    if string.sub(s,i,i) ~= \"\" then\n      result = string.sub(s,i,i)\n\
    \    else\n      result = string.sub(s,i,#s)\n    end\n  end\n  return result\n\
    end", "  local result = ''\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil\
    \ then\n      result = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n\
    \    end\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #s\
    \ do\n    if string.sub(s,i,i) ~= nil then\n      local c = string.sub(s,i,i)\n\
    \      if string.sub(c,1,1) ~= nil then\n        c = string.sub(c,1,1)..string.sub(c,2,#c)\n\
    \      end\n      result = string.sub(s,i,i)..c\n    else\n      result = string.sub(s,i,i)\n\
    \    end\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #s\
    \ do\n    if string.sub(s,i,i) ~= nil then\n      local char = string.sub(s,i,i)\n\
    \      if string.sub(char,1,1) ~= nil then\n        char = string.upper(char)\n\
    \      else\n        char = string.lower(char)\n      end\n      result = result\
    \ .. char\n    else\n      result = result .. string.sub(s,i,i)\n    end\n  end\n\
    \  return result\nend", "    local str = \"\"\n    for i = 1, #s do\n        local\
    \ c = string.sub(s,i,i)\n        if string.find(string.char(c),\"a\") then\n \
    \           str = string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(",
  "  local result = \"\"\n  for i = 1, #s do\n    local char = string.sub(s,i,i)\n\
    \    if string.match(char, \"^[%w]$\") then\n      result = string.gsub(string.lower(char),\
    \ char, function(c)\n        return string.upper(c) or c\n      end)\n    else\n\
    \      result = result .. char\n    end\n  end\n  return result\nend", "  local\
    \ s = string.lower(s)\n  local n = #s\n  local i = 0\n  while i < n do\n    if\
    \ s[i] ~= nil then\n      if s[i] ~= string.upper(s[i]) then\n        s[i] = string.upper(s[i])\n\
    \      else\n        s[i] = string.lower(s[i])\n      end\n    end\n    i = i\
    \ + 1\n  end\n  return s\nend", "  local str = ''\n  for i = 1, #s do\n    if\
    \ string.sub(s,i,i) ~= nil then\n      if string.sub(s,i,i) ~= string.sub(s,i,i)\
    \ then\n        str = string.sub(s,i,i)\n      else\n        str = string.upper(string.sub(s,i,i))\n\
    \      end\n    else\n      str = string.sub(s,i,i)\n    end\n  end\n  return\
    \ str\nend", "  local str=s:gsub(\"%l\",\"%l\")\n  local res=str:gsub(\"%l\",\"\
    %l\")\n  local res=res:gsub(\"%l\",\"%l\")\n  local res=res:gsub(\"%l\",\"%l\"\
    )\n  local res=res:gsub(\"%l\",\"%l\")\n  local res=res:gsub(\"%l\",\"%l\")\n\
    \  local res=res:gsub(\"%l\",\"%l\")\n  local res=res:gsub(\"%l\",\"%l\")\n  local\
    \ res=res:gsub(\"%l\",\"%l\")\n  local res=res:gsub(\"%l\",\"%l\")\n  local res=res:gsub(\"\
    %l\",\"%l\")\n  local res=res:gsub(\"%l\",\"%l\")\n  local res=res:gsub(\"%l\"\
    ,\"%l\")\n  local res=res:gsub(\"%l\",\"%l\")\n  local res=res:gsub(\"%l\",\"\
    %l\")\n  local res=res:gsub(\"%l\",\"%l\")\n  local res=res:gsub(\"%l\",\"%l\"\
    )\n  local res=res:gsub(\"%l\",\"%l\")\n  local res=res:gsub(\"%l\",\"%l\")\n\
    \  local res=res:gsub(\"%l\",\"%l\")\n  local res=res:gsub(\"%l\",\"%l\")\n  local\
    \ res=res:gsub(\"%l\",\"%l\")\n  local res=res:gsub(\"%l\",\"%l\")\n  local res=res:gsub(\"\
    %l\",\"%l\")\n  local res=res:gsub(\"%l\",\"%l\")\n  local res=res:gsub(\"%l\"\
    ,\"%l\")\n  local res=res:gsub(\"%l\",\"%l\")\n  local res=res:gsub(\"%l\",\"\
    %l\")\n  local res=res:gsub(\"%l\",\"%l\")\n  local res=res:gsub(\"%l\",\"%l\"\
    )\n  local res=res:gsub(\"%l\",\"%l\")\n  local res=res:gsub(\"%l\",\"%l\")\n\
    \  local res=res:gsub(\"%l\",\"%l\")\n  local res=res:gsub(\"%l\",\"%l\")\n  local ",
  "  local str=s:gsub(\"%l\",function(x)\n    if x:match(\"^%l\") then\n      return\
    \ x:upper()\n    else\n      return x:lower()\n    end\n  end)\n  if str:match(\"\
    ^%l\") then\n    return str:upper()\n  else\n    return str:lower()\n  end\nend",
  "  local str = ''\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n  \
    \    if string.sub(s,i,i) ~= string.sub(s,i,i) then\n        str = str .. string.sub(s,i,i)\n\
    \      else\n        str = str .. string.upper(string.sub(s,i,i))\n      end\n\
    \    else\n      str = str .. string.sub(s,i,i)\n    end\n  end\n  return str\n\
    end", "    local new_s = ''\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ ~= nil then\n            if string.sub(s,i,i) ~= string.sub(s,i,i) then\n  \
    \              new_s = string.sub(s,i,i)\n            else\n                new_s\
    \ = string.upper(string.sub(s,i,i))\n            end\n        else\n         \
    \   new_s = string.upper(string.sub(s,i,i))\n        end\n    end\n    return\
    \ new_s\nend", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ ~= nil then\n      result = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n\
    \    end\n  end\n  return result\nend", "    local result = \"\"\n    for i =\
    \ 1, #s do\n        if string.sub(s,i,i) ~= nil then\n            local char =\
    \ string.sub(s,i,i)\n            if string.find(string.lower(char),string.upper(char))\
    \ then\n                result = string.upper(result)..string.lower(char)\n  \
    \          else\n                result = string.upper(result)..char\n       \
    \     end\n        else\n            result = string.upper(result)..string.sub(s,i,i)\n\
    \        end\n    end\n    return result\nend", "  local s = string.lower(s)\n\
    \  local new_s = ''\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= '' then\n\
    \      new_s = new_s .. string.sub(s,i,i)\n    else\n      new_s = new_s .. string.sub(s,i,i)\n\
    \    end\n  end\n  return new_s\nend", "  local result = \"\"\n  for i = 1, #s\
    \ do\n    local c = string.sub(s,i,i)\n    if string.match(\"^[%a]\", c) then\n\
    \      c = string.upper(c)\n    else\n      c = string.lower(c)\n    end\n   \
    \ result = result .. c\n  end\n  return result\nend", "    local str = ''\n  \
    \  for i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n            str\
    \ = str .. string.sub(s,i,i)\n        else\n            str = str .. string.sub(s,i,#s)\n\
    \        end\n    end\n    return str\nend", "  local s = string.lower(s)\n  local\
    \ i, j = 1, #s\n  while i <= j do\n    if s[i] ~= nil then\n      if s[i] ~= s[i]\
    \ then\n        s[i] = string.upper(s[i])\n      else\n        s[i] = string.lower(s[i])\n\
    \      end\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return s\nend", " \
    \ local str = ''\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n \
    \     str = str .. string.sub(s,i,i)\n    else\n      str = str .. string.sub(s,i,i)\n\
    \    end\n  end\n  return str:reverse()\nend", "  local result = \"\"\n  for i\
    \ = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      if string.sub(s,i,i)\
    \ ~= string.sub(s,i,i) then\n        result = string.sub(s,i,i)\n      else\n\
    \        result = string.upper(string.sub(s,i,i)) + result\n      end\n    else\n\
    \      result = string.upper(string.sub(s,i,i)) + result\n    end\n  end\n  return\
    \ result\nend", "  local str = ''\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ ~= nil then\n      str = str .. string.sub(s,i,i)\n    else\n      str = str\
    \ .. string.sub(s,i,i)\n    end\n  end\n  return str:reverse()\nend", "  local\
    \ result = \"\"\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n    if string.match(\"\
    ^[%w]\", c) then\n      result = string.gsub(string.upper(c), string.upper, string.lower)\n\
    \    else\n      result = c\n    end\n  end\n  return result\nend", "  local result\
    \ = \"\"\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n    if string.find(string.char(c),\"\
    a\") then\n      c = string.upper(c)\n    elseif string.find(string.char(c),\"\
    A\") then\n      c = string.lower(c)\n    end\n    result = result .. c\n  end\n\
    \  return result\nend", "  local result = ''\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ ~= nil then\n      if string.sub(s,i,i) ~= string.sub(s,i,i) then\n        result\
    \ = string.sub(s,i,i)\n      else\n        result = string.upper(string.sub(s,i,i))\n\
    \      end\n    else\n      result = string.upper(string.sub(s,i,i))\n    end\n\
    \  end\n  return result\nend", "    local s = string.lower(s)\n    local t = {}\n\
    \    for i = 1, #s do\n        local c = string.sub(s,i,i)\n        if string.find(string.letters,c)\
    \ then\n            table.insert(t,string.upper(c))\n        else\n          \
    \  table.insert(t,c)\n        end\n    end\n    return table.concat(t, \"\")\n\
    end", "  local result = ''\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n\
    \    if string.find(c,'a') then\n      c = string.upper(c)\n    elseif string.find(c,'A')\
    \ then\n      c = string.lower(c)\n    end\n    result = result .. c\n  end\n\
    \  return result\nend", "  local result = \"\"\n  for i = 1, #s do\n    local\
    \ char = string.sub(s,i,i)\n    if string.match(char, \"^[%w]$\") then\n     \
    \ result = string.gsub(string.lower(char), string.upper, string.upper, result)\n\
    \    else\n      result = string.gsub(string.lower(char), string.upper, string.upper,\
    \ result)\n    end\n  end\n  return result\nend", "  local s = string.lower(s)\n\
    \  local i, j = 1, #s\n  while i <= j do\n    if s[i] ~= nil then\n      if s[i]\
    \ >= 'a' and s[i] <= 'z' then\n        s[i] = s[i] + 32\n      elseif s[i] >=\
    \ 'A' and s[i] <= 'Z' then\n        s[i] = s[i] - 32\n      else\n        s[i]\
    \ = s[i]\n      end\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return s\n\
    end", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~=\
    \ nil then\n      if string.sub(s,i,i) ~= string.sub(s,i,i) then\n        result\
    \ = string.sub(s,i,i)\n      else\n        result = string.upper(string.sub(s,i,i))\
    \ + result\n      end\n    else\n      result = string.upper(string.sub(s,i,i))\
    \ + result\n    end\n  end\n  return result\nend", "  local result = \"\"\n  for\
    \ i = 1, #s do\n    local c = string.sub(s,i,i)\n    if string.find(string.char(c),\"\
    a\") then\n      c = string.upper(c)\n    elseif string.find(string.char(c),\"\
    A\") then\n      c = string.lower(c)\n    end\n    result = result .. c\n  end\n\
    \  return result\nend", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ ~= \"\" then\n      result = string.sub(s,i,i) + result\n    else\n      result\
    \ = string.sub(s,i,i) + result\n    end\n  end\n  return result\nend", "  local\
    \ result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n  \
    \    local char = string.sub(s,i,i)\n      if string.sub(s,i,i) ~= char then\n\
    \        char = string.upper(char)\n      else\n        char = string.lower(char)\n\
    \      end\n      result = result .. char\n    end\n  end\n  return result\nend",
  "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n\
    \      result = string.sub(s,i,i) + result\n    else\n      result = string.sub(s,i,i)\
    \ + result\n    end\n  end\n  return result\nend", "  local newS = ''\n  for i\
    \ = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      newS = string.sub(s,i,i)\n\
    \    else\n      newS = string.sub(s,i,#s)\n    end\n  end\n  return newS\nend",
  "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= \"\" then\n\
    \      result = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n\
    \    end\n  end\n  return result\nend", "    local result = \"\"\n    for i =\
    \ 1, #s do\n        if string.sub(s,i,i) ~= nil then\n            if string.sub(s,i,i)\
    \ ~= string.sub(s,i,i) then\n                result = string.sub(s,i,i)\n    \
    \        else\n                result = string.upper(string.sub(s,i,i)) + result\n\
    \            end\n        else\n            result = string.upper(string.sub(s,i,i))\
    \ + result\n        end\n    end\n    return result\nend", "  local result = \"\
    \"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      result = string.sub(s,i,i)\n\
    \    else\n      result = string.sub(s,i,#s)\n    end\n  end\n  return result\n\
    end", "    local s = string.lower(s)\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ ~= nil then\n            local c = string.sub(s,i,i)\n            if string.sub(c,1,1)\
    \ ~= nil then\n                c = string.upper(c)\n            else\n       \
    \         c = string.lower(c)\n            end\n            s = string.sub(s,i,i..i-1)..c\n\
    \        end\n    end\n    return s\nend", "    local result = \"\"\n    for i\
    \ = 1, #s do\n        if string.sub(s,i,i) == string.sub(s,i,i) then\n       \
    \     i = i - 1\n        else\n            result = result .. string.sub(s,i,i)\n\
    \        end\n    end\n    if #result == 0 then\n        result = s\n    end\n\
    \    return result\nend", "  local result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ ~= nil then\n      result = string.sub(s,i,i) + result\n    else\n      result\
    \ = string.sub(s,i,i) + result\n    end\n  end\n  return result\nend", "  local\
    \ t = {}\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      table.insert(t,string.sub(s,i,i))\n\
    \    end\n  end\n  table.sort(t)\n  if #t == 0 then\n    return s\n  end\n  local\
    \ newS = ''\n  for i = 1, #t do\n    if string.sub(t,i,i) ~= nil then\n      newS\
    \ = newS .. string.sub(t,i,i)\n    end\n  end\n  return newS\nend", "  local result\
    \ = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      result\
    \ = string.sub(s,i,i):upper..result\n    else\n      result = string.sub(s,i,i):lower..result\n\
    \    end\n  end\n  return result\nend", "  local str=s:gsub(\"%l\",function(x)\n\
    \    if x:match(\"^[%a%A]\") then\n      return x:lower()\n    else\n      return\
    \ x\n    end\n  end)\n  if str:match(\"^[%a%A]\") then\n    return str:upper()\n\
    \  else\n    return str\n  end\nend", "  s = string.gsub(s, '[%a]', function(c)\
    \ return string.upper(c) end)\n  if s == '' then return '' end\n  local t = {}\n\
    \  for i = 1, #s do\n    local c = string.sub(s,i,i)\n    if string.find(string.lower(c),\
    \ string.upper(c)) then\n      table.insert(t, string.upper(c))\n    else\n  \
    \    table.insert(t, c)\n    end\n  end\n  return table.concat(t, \"\")\nend",
  "  local str = ''\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n  \
    \    str = str .. string.sub(s,i,i)\n    else\n      str = str .. string.sub(s,i,i)\n\
    \    end\n  end\n  return str\nend", "  local result = \"\"\n  for i = 1, #s do\n\
    \    local char = string.sub(s,i,i)\n    if string.find(string.lower(char), string.upper(char))\
    \ then\n      result = string.upper(result)..string.lower(char)\n    else\n  \
    \    result = string.upper(result)..char\n    end\n  end\n  return result\nend",
  "  local t = {}\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n    if string.match(c,'^[%a]')\
    \ then\n      c = string.upper(c)\n    elseif string.match(c,'^[%A]') then\n \
    \     c = string.lower(c)\n    end\n    t[i] = c\n  end\n  return table.concat(t,\
    \ \"\")\nend", "  local result = \"\"\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n\
    \    if string.match(c, \"^[a-zA-Z]+$\") then\n      c = string.upper(c)\n   \
    \ else\n      c = string.lower(c)\n    end\n    result = result .. c\n  end\n\
    \  return result\nend", "  local result = \"\"\n  for i = 1, #s do\n    local\
    \ c = string.sub(s,i,i)\n    if string.match(\"^[%a]\", c) then\n      c = string.upper(c)\n\
    \    else\n      c = string.lower(c)\n    end\n    result = result .. c\n  end\n\
    \  return result\nend", "  local newS = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ ~= nil then\n      newS = newS..string.upper(string.sub(s,i,i))\n    else\n\
    \      newS = newS..string.lower(string.sub(s,i,i))\n    end\n  end\n  return\
    \ newS\nend", "  local s = string.lower(s)\n  local t = {}\n  for i = 1, #s do\n\
    \    if s[i] ~= nil then\n      t[#t + 1] = string.upper(s[i])\n    else\n   \
    \   t[#t + 1] = s[i]\n    end\n  end\n  return table.concat(t)\nend", "  local\
    \ str=s:gsub(\"%l\",function(x)\n    if x~=nil then\n      if x~=string.lower(x)\
    \ then\n        return string.upper(x)\n      else\n        return string.lower(x)\n\
    \      end\n    end\n  end)\n  if str==nil then\n    return s\n  else\n    return\
    \ str\n  end\nend", "  local result = \"\"\n  for i = 1, #s do\n    local c =\
    \ string.sub(s,i,i)\n    if string.match(c, \"^[%w]$\") then\n      result = string.gsub(string.upper(c),\"\
    [%w]\",string.upper)\n    else\n      result = string.gsub(string.lower(c),\"\
    [%w]\",string.lower)\n    end\n  end\n  return result\nend", "    local str =\
    \ ''\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n       \
    \     str = str .. string.sub(s,i,i)\n        else\n            str = str .. string.sub(s,i,i)\n\
    \        end\n    end\n    return str\nend", "  local result = \"\"\n  for i =\
    \ 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      if string.sub(s,i,i) ~=\
    \ string.sub(s,i,i) then\n        result = string.sub(s,i,i)..result\n      else\n\
    \        result = string.sub(s,i,i)..result\n      end\n    else\n      result\
    \ = string.sub(s,i,i)..result\n    end\n  end\n  return result\nend", "  local\
    \ result = \"\"\n  for i = 1, #s do\n    local c = string.sub(s,i,i)\n    if string.match(c,\
    \ \"^[%w]$\") then\n      c = string.upper(c)\n    elseif string.match(c, \"^[%W]$\"\
    ) then\n      c = string.lower(c)\n    end\n    result = result .. c\n  end\n\
    \  return result\nend", "    local result = \"\"\n    for i = 1, #s do\n     \
    \   if string.sub(s,i,i) ~= nil then\n            local c = string.sub(s,i,i)\n\
    \            if string.sub(c,1,1) ~= nil then\n                c = string.upper(c)\n\
    \            else\n                c = string.lower(c)\n            end\n    \
    \        result = result .. c\n        else\n            result = result .. string.sub(s,i,i)\n\
    \        end\n    end\n    return result\nend", "  local result = ''\n  for i\
    \ = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      if string.sub(s,i,i)\
    \ ~= string.sub(s,i,i) then\n        result = string.sub(s,i,i)\n      else\n\
    \        result = string.sub(s,i,i) + result\n      end\n    else\n      result\
    \ = string.sub(s,i,i) + result\n    end\n  end\n  return result\nend", "    local\
    \ result = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n\
    \            local char = string.sub(s,i,i)\n            if string.find(char,\
    \ \"a\") then\n                char = string.upper(char)\n            elseif string.find(char,\
    \ \"A\") then\n                char = string.lower(char)\n            end\n  \
    \          result = result .. char\n        else\n            result = result\
    \ .. string.sub(s,i,i)\n        end\n    end\n    return result\nend", "  local\
    \ result = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n  \
    \    result = string.sub(s,i,i)\n    else\n      result = string.sub(s,i,#s)\n\
    \    end\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #s\
    \ do\n    if string.sub(s,i,i) ~= nil then\n      if string.sub(s,i,i) ~= string.sub(s,i,i)\
    \ then\n        result = string.sub(s,i,i)\n      else\n        result = string.sub(s,i,i)..string.sub(s,i,i+1)\n\
    \      end\n    else\n      result = string.sub(s,i,i)\n    end\n  end\n  return\
    \ result\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

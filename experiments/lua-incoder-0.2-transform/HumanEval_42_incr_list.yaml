name: HumanEval_42_incr_list
language: lua
prompt: "-- Return list with elements incremented by 1.\n-- >>> incr_list({1, 2, 3})\n\
  -- {2, 3, 4}\n-- >>> incr_list({5, 3, 5, 2, 3, 3, 9, 0, 123})\n-- {6, 4, 6, 3, 4,\
  \ 4, 10, 1, 124}\nlocal function incr_list(l)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = incr_list\n\
  \    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({3, 2, 1}),\
  \ {4, 3, 2})\n    lu.assertEquals(candidate({5, 2, 5, 2, 3, 3, 9, 0, 123}), {6,\
  \ 3, 6, 3, 4, 4, 10, 1, 124})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local new_list = {}\n  for i = 1, #l do\n    new_list[#new_list +\
    \ 1] = l[i]\n  end\n  return new_list\nend", "  local new_list = {}\n  for i =\
    \ 1, #l do\n    new_list[#new_list + 1] = l[i] + 1\n  end\n  return new_list\n\
    end", "  local new_l = {}\n  for i = 1, #l do\n    new_l[i] = l[i] + 1\n  end\n\
    \  return new_l\nend", "  local result = {}\n  for i = 1, #l do\n    result[#result\
    \ + 1] = l[i]\n  end\n  return result\nend", "  local new_list = {}\n  for i =\
    \ 1, #l do\n    new_list[#new_list + 1] = l[i]\n  end\n  return new_list\nend",
  "  local result = {}\n  for i = 1, #l do\n    result[i - 1] = l[i] + 1\n  end\n\
    \  return result\nend", "  local result = {}\n  for i = 1, #l do\n    result[#result\
    \ + 1] = l[i]\n  end\n  return result\nend", "  local new_list = {}\n  for i =\
    \ 1, #l do\n    new_list[#new_list + 1] = l[i]\n  end\n  return new_list\nend",
  "  local new_list = {}\n  for i = 1, #l do\n    new_list[#new_list + 1] = l[i]\n\
    \  end\n  return new_list\nend", "  local new_l = {}\n  for i = 1, #l do\n   \
    \ new_l[i] = l[i] + 1\n  end\n  return new_l\nend", "  local result = {}\n  for\
    \ i = 1, #l do\n    result[#result + 1] = l[i]\n  end\n  return result\nend",
  "  local new_list = {}\n  for i = 1, #l do\n    new_list[#new_list + 1] = l[i]\n\
    \  end\n  return new_list\nend", "  local new_list = {}\n  for i = 1, #l do\n\
    \    new_list[#new_list + 1] = l[i] + 1\n  end\n  return new_list\nend", "  local\
    \ result = {}\n  for i = 1, #l do\n    result[#result + 1] = l[i]\n  end\n  return\
    \ result\nend", "  local new_list = {}\n  for i = 1, #l do\n    new_list[#new_list\
    \ + 1] = l[i] + 1\n  end\n  return new_list\nend", "  local result = {}\n  for\
    \ i = 1, #l do\n    result[i] = l[i] + 1\n  end\n  return result\nend", "  local\
    \ result = {}\n  for i = 1, #l do\n    result[i] = l[i] + 1\n  end\n  return result\n\
    end", "  local new_list = {}\n  for i = 1, #l do\n    new_list[#new_list + 1]\
    \ = l[i] + 1\n  end\n  return new_list\nend", "  local new_l = {}\n  for i = 1,\
    \ #l do\n    new_l[i] = l[i] + 1\n  end\n  return new_l\nend", "  local result\
    \ = {}\n  for i = 1, #l do\n    result[#result + 1] = l[i]\n  end\n  return result\n\
    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

language: lua
name: HumanEval_162_string_to_md5
results:
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpopcyc03o.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then return end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,\
    \ md5:len()-1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpiqoehpwz.lua:7:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpiqoehpwz.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpiqoehpwz.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750433
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5hash = ngx.md5(text)\n \
    \ return md5hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpilcrdf7y.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpilcrdf7y.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpilcrdf7y.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\n    local md5 = ngx.md5(text)\n\
    \    return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprt0numnu.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmprt0numnu.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmprt0numnu.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  local md5 = ngx.md5(text)\n    if md5 ~= nil then\n        return md5:sub(1,\
    \ 8)\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp07p977p1.lua:6:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp07p977p1.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp07p977p1.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750433
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\n    local md5 = ngx.md5(text)\n\
    \    return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprt0numnu.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmprt0numnu.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmprt0numnu.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5\n  md5 = ngx.md5(text)\n\
    \  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0m_dfazg.lua:10:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp0m_dfazg.lua:10:\
    \ in function 'candidate'\n\t/tmp/tmp0m_dfazg.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  else\n    md5 = ''\n\
    \  end\n  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9npob9s3.lua:8:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp9npob9s3.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp9npob9s3.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5sum\n  if text:len() > 0 then\n    md5sum = ngx.md5(text)\n  else\n    md5sum\
    \ = \"\"\n  end\n  return md5sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2yjbigdx.lua:8:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp2yjbigdx.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2yjbigdx.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  else\n    md5 = ''\n\
    \  end\n  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9npob9s3.lua:8:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp9npob9s3.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp9npob9s3.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then return end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,\
    \ md5:len() - 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0mju6s5y.lua:7:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp0mju6s5y.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmp0mju6s5y.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750433
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5()\n  local len = #text\n  local i = 1\n  while i <= len do\n \
    \   md5:update(ngx.encode_base64(ngx.md5(text)))\n    i = i + 1\n  end\n  return\
    \ md5:final()\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpd5vk5wpm.lua:6:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpd5vk5wpm.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpd5vk5wpm.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text == nil then\n    return nil\n  end\n  local md5_hash = ngx.md5(text)\n\
    \  md5 = string.sub(md5_hash, 1, 8)\n  return md5\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbi4nbn9c.lua:10:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpbi4nbn9c.lua:10:\
    \ in function 'candidate'\n\t/tmp/tmpbi4nbn9c.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750433
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then return end\n  local hash = ngx.md5(text)\n  return hash\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpop928p6v.lua:7:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpop928p6v.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpop928p6v.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750433
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\n    local md5 = ngx.md5(text)\n\
    \    return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp19s7_fho.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp19s7_fho.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp19s7_fho.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5hash = ngx.md5(text)\n \
    \ return md5hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpilcrdf7y.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpilcrdf7y.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpilcrdf7y.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5sum\n  local md5sum_hex\n\
    \  local md5sum_base64\n  local md5sum_base64_hex\n  local md5sum_base64_utf8\n\
    \  local md5sum_base64_utf8_hex\n  local md5sum_base64_utf8_hex\n  local md5sum_base64_utf8_hex\n\
    \  local md5sum_base64_utf8_hex\n  local md5sum_base64_utf8_hex\n  local md5sum_base64_utf8_hex\n\
    \  local md5sum_base64_utf8_hex\n  local md5sum_base64_utf8_hex\n  local md5sum_base64_utf8_hex\n\
    \  local md5sum_base64_utf8_hex\n  local md5sum_base64_utf8_hex\n  local md5sum_base64_utf8_hex\n\
    \  local md5sum_base64_utf8_hex\n  local md5sum_base64_utf8_hex\n  local md5sum_base64_utf8_hex\n\
    \  local md5sum_base64_utf8_hex\n  local md5sum_base64_utf8_hex\n  local md5sum_base64_utf8_hex\n\
    \  local md5sum_base64_utf8_hex\n  local md5sum_base64_utf8_hex\n  local md5sum_base64_utf8_hex\n\
    \  local md5sum_base64_utf8_hex\n  local md5sum_base64_utf8_hex\n  local md5sum_base64_utf8_hex\n\
    \  local md5sum_base64_utf8_hex\n  local md5sum_base64_utf8_hex\n  local md5sum_base64_utf8_hex\n\
    \  local md5sum_base64_utf8_hex\n  local md5sum_base64_utf8_hex\n  local md5sum_base64_utf8_hex\n\
    \  local md5sum_base64_utf8_hex\n  local md5sum_base64_utf8_hex\n  local md5sum_base64_utf8_hex\n\
    \  local md5sum_base64_utf8_hex\n  local md5sum_base64_utf8_hex\n  local md5sum_base64_utf8_hex\n\
    \  local md5sum_base64_utf8_hex\n  local md5sum_base64_utf8_hex\n  local md5sum_base64_utf8_hex\n\
    \  local md5sum_base64_utf8_hex\n  local md5sum_base64_utf8_hex\n  local md5sum_base64_utf8_hex\n\
    \  local md5sum_base64_utf8_hex\n  local md5sum_base64_utf8_hex\n  local md5sum_base64_utf8_hex\n\
    \  local md5sum_base64_utf8_hex\n  local md5sum_base64_utf8\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpx75i_6ac.lua:71: ''end'' expected (to close ''function'' at
    line 5) near <eof>

    '
  stdout: ''
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  else\n    md5 = ''\n\
    \  end\n  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9npob9s3.lua:8:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp9npob9s3.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp9npob9s3.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4t2i9dk_.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp4t2i9dk_.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp4t2i9dk_.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  if md5 ~= nil then\n    return md5:sub(1, md5:len())\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4iqq43gd.lua:6:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp4iqq43gd.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmp4iqq43gd.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5sum = ngx.md5(text)\n  return\
    \ md5sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpcwbcv5d6.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpcwbcv5d6.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpcwbcv5d6.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  end\n  return md5\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppa114pe4.lua:8:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmppa114pe4.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmppa114pe4.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5()\n  md5:update(text)\n\
    \  return md5:final()\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpivy7fh91.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpivy7fh91.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpivy7fh91.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local hash = ngx.md5(text)\n  return\
    \ hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfoli5jsr.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpfoli5jsr.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpfoli5jsr.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text ~= '' then\n    md5 = ngx.md5(text)\n  end\n  return md5\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprthrkp3i.lua:8:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmprthrkp3i.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmprthrkp3i.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4t2i9dk_.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp4t2i9dk_.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp4t2i9dk_.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text ~= '' then\n    md5 = ngx.md5(text)\n  end\n  return md5\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprthrkp3i.lua:8:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmprthrkp3i.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmprthrkp3i.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4t2i9dk_.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp4t2i9dk_.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp4t2i9dk_.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text == nil then\n    return nil\n  else\n    local md5_hash = md5.new()\n\
    \    md5_hash:update(text)\n    md5 = md5_hash:digest()\n  end\n  return tostring(md5)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp71dzm0a4.lua:10:\
    \ attempt to index a nil value (local 'md5')\nstack traceback:\n\t/tmp/tmp71dzm0a4.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmp71dzm0a4.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5()\n  md5:update(text)\n\
    \  return md5:final()\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpivy7fh91.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpivy7fh91.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpivy7fh91.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5sum, err = io.open(\"/dev/urandom\", \"r\").read(16)\n  if md5sum == nil\
    \ then\n    return nil, err\n  end\n  local md5 = md5sum:sub(1, 16)\n  local sha1\
    \ = sha1(text)\n  local sha1_hash = sha1:sub(1, 20)\n  local sha1_hash_hex = sha1_hash:sub(1,\
    \ 32)\n  local sha1_hash_hex_upper = sha1_hash_hex:upper()\n  local sha1_hash_hex_lower\
    \ = sha1_hash_hex:lower()\n  local sha1_hash_hex_upper = sha1_hash_hex_upper:sub(1,\
    \ 32)\n  local sha1_hash_hex_lower = sha1_hash_hex_lower:sub(1, 32)\n  local sha1_hash_hex_upper\
    \ = sha1_hash_hex_upper:sub(1, 32)\n  local sha1_hash_hex_lower = sha1_hash_hex_lower:sub(1,\
    \ 32)\n  local sha1_hash_hex_upper = sha1_hash_hex_upper:sub(1, 32)\n  local sha1_hash_hex_lower\
    \ = sha1_hash_hex_lower:sub(1, 32)\n  local sha1_hash_hex_upper = sha1_hash_hex_upper:sub(1,\
    \ 32)\n  local sha1_hash_hex_lower = sha1_hash_hex_lower:sub(1, 32)\n  local sha1_hash_hex_upper\
    \ = sha1_hash_hex_upper:sub(1, 32)\n  local sha1_hash_hex_lower = sha1_hash_hex_lower:sub(1,\
    \ 32)\n  local sha1_hash_hex_upper = sha1_hash_hex_upper:sub(1, 32)\n  local sha1_hash_hex_lower\
    \ = sha1_hash_hex_lower:sub(1, 32)\n  local sha1_hash_hex_upper = sha1_hash_hex_upper:sub(1,\
    \ 32)\n  local sha1_hash_hex_lower = sha1_hash_hex_lower:sub(1, 32)\n  local sha1_hash_hex_upper\
    \ = sha1_hash_hex_upper:sub(1, 32)\n  local sha1_hash_hex_lower = sha1_hash_hex_lower:sub(1,\
    \ 32)\n  local sha1_hash_hex_upper = sha1_hash_hex_upper:sub(1, 32)\n  local sha1_hash_hex_lower\
    \ = sha1_hash_hex_lower:sub(1, 32)\n  local sha1_hash_hex_upper = sha1_hash_hex_upper:sub(1,\
    \ 32)\n  local sha1_hash_hex_lower = sha1_hash_hex_lower:sub(1, 32)\n  local sha1_hash_hex_upper\
    \ = sha1_hash_hex_upper:sub(1, 32)\n  local sha1_hash_hex_lower = sha1_hash_hex_lower:sub(1,\
    \ 32)\n  local sha1_hash_hex_upper = \nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpw25j0rpj.lua:39: unexpected symbol near ''=''

    '
  stdout: ''
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5\n  md5 = ngx.md5(text)\n\
    \  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0m_dfazg.lua:10:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp0m_dfazg.lua:10:\
    \ in function 'candidate'\n\t/tmp/tmp0m_dfazg.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4t2i9dk_.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp4t2i9dk_.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp4t2i9dk_.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then return end\n  local hash = ngx.md5(text)\n  return hash\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpop928p6v.lua:7:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpop928p6v.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpop928p6v.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750433
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5sum\n  if text:len() > 0 then\n    md5sum = ngx.md5(text)\n  else\n    md5sum\
    \ = \"\"\n  end\n  return md5sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2yjbigdx.lua:8:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp2yjbigdx.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2yjbigdx.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local hash = ngx.md5(text)\n  return\
    \ hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfoli5jsr.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpfoli5jsr.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpfoli5jsr.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5()\n  local len = #text\n  if len == 0 then\n    return nil\n \
    \ end\n  md5:update(text)\n  return md5:final()\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpkjmlkxwj.lua:6:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpkjmlkxwj.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpkjmlkxwj.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text == nil then\n    return nil\n  elseif text:len() == 0 then\n\
    \    return nil\n  else\n    md5 = ngx.md5(text)\n  end\n  return md5\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb90kgrot.lua:12:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpb90kgrot.lua:12:\
    \ in local 'candidate'\n\t/tmp/tmpb90kgrot.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4t2i9dk_.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp4t2i9dk_.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp4t2i9dk_.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then return end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,\
    \ md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpz7pyqjtt.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpz7pyqjtt.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpz7pyqjtt.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\n    local md5 = ngx.md5()\n\
    \    md5:update(text)\n    return md5:final()\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpstv8grxl.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpstv8grxl.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpstv8grxl.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text == nil then\n    return nil\n  elseif text:len() == 0 then\n\
    \    return nil\n  else\n    md5 = ngx.md5(text)\n  end\n  return md5\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb90kgrot.lua:12:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpb90kgrot.lua:12:\
    \ in local 'candidate'\n\t/tmp/tmpb90kgrot.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text == nil then\n    return nil\n  else\n    md5 = ngx.md5(text)\n\
    \  end\n  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpld7wg2qm.lua:10:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpld7wg2qm.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmpld7wg2qm.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  if md5 ~= ngx.null then\n    return md5\n  end\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpno2_a5ch.lua:6:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpno2_a5ch.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpno2_a5ch.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  if md5 ~= nil then\n    return md5:sub(1, 32)\n  else\n\
    \    return nil\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppfo4ypb4.lua:6:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmppfo4ypb4.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmppfo4ypb4.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  return md5:sub(1, md5:len() - 2)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvxfe6jas.lua:6:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpvxfe6jas.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpvxfe6jas.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4t2i9dk_.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp4t2i9dk_.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp4t2i9dk_.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text == nil then\n    return nil\n  else\n    md5 = ngx.md5(text)\n\
    \  end\n  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpld7wg2qm.lua:10:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpld7wg2qm.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmpld7wg2qm.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text ~= '' then\n    md5 = ngx.md5(text)\n  end\n  return md5\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprthrkp3i.lua:8:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmprthrkp3i.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmprthrkp3i.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  local md5 = ngx.md5(text)\n    if md5 ~= nil then\n        return md5:sub(1,\
    \ 16)\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpo7xutdow.lua:6:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpo7xutdow.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpo7xutdow.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4t2i9dk_.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp4t2i9dk_.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp4t2i9dk_.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local hash = ngx.md5(text)\n  return\
    \ hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfoli5jsr.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpfoli5jsr.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpfoli5jsr.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text == nil then\n    md5 = ''\n  else\n    md5 = ngx.md5(text)\n\
    \  end\n  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0auiriyp.lua:10:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp0auiriyp.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmp0auiriyp.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4t2i9dk_.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp4t2i9dk_.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp4t2i9dk_.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  end\n  return md5\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppa114pe4.lua:8:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmppa114pe4.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmppa114pe4.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5()\n  md5:update(text)\n\
    \  return md5:final()\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpivy7fh91.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpivy7fh91.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpivy7fh91.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text ~= '' then\n    md5 = ngx.md5(text)\n  end\n  return md5\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprthrkp3i.lua:8:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmprthrkp3i.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmprthrkp3i.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4t2i9dk_.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp4t2i9dk_.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp4t2i9dk_.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\n    local md5 = ngx.md5(text)\n\
    \    return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp19s7_fho.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp19s7_fho.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp19s7_fho.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then return nil end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,\
    \ md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnl1donor.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpnl1donor.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpnl1donor.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5sum\n  local md5sum_hex\n\
    \  local md5sum_base64\n  local md5sum_base64_hex\n  local md5sum_base64_utf8\n\
    \  local md5sum_base64_utf8_hex\n  local md5sum_base64_utf8_unicode\n  local md5sum_base64_utf8_unicode_hex\n\
    \  local md5sum_base64_utf8_unicode_big5\n  local md5sum_base64_utf8_unicode_big5_hex\n\
    \  local md5sum_base64_utf8_unicode_big5_b\n  local md5sum_base64_utf8_unicode_big5_b_hex\n\
    \  local md5sum_base64_utf8_unicode_big5_b_hex\n  local md5sum_base64_utf8_unicode_big5_b_hex\n\
    \  local md5sum_base64_utf8_unicode_big5_b_hex\n  local md5sum_base64_utf8_unicode_big5_b_hex\n\
    \  local md5sum_base64_utf8_unicode_big5_b_hex\n  local md5sum_base64_utf8_unicode_big5_b_hex\n\
    \  local md5sum_base64_utf8_unicode_big5_b_hex\n  local md5sum_base64_utf8_unicode_big5_b_hex\n\
    \  local md5sum_base64_utf8_unicode_big5_b_hex\n  local md5sum_base64_utf8_unicode_big5_b_hex\n\
    \  local md5sum_base64_utf8_unicode_big5_b_hex\n  local md5sum_base64_utf8_unicode_big5_b_hex\n\
    \  local md5sum_base64_utf8_unicode_big5_b_hex\n  local md5sum_base64_utf8_unicode_big5_b_hex\n\
    \  local md5sum_base64_utf8_unicode_big5_b_hex\n  local md5sum_base64_utf8_unicode_big5_b_hex\n\
    \  local md5sum_base64_utf8_unicode_big5_b_hex\n  local md5sum_base64_utf8_unicode_big5_b_hex\n\
    \  local md5sum_base64_utf8_unicode_big5_b_hex\n  local md5sum_base64_utf8_unicode_big5_b_hex\n\
    \  local md5sum_base64_utf8_unicode_big5_b_hex\n  local md5sum_base64_utf8_unicode_big5_b_hex\n\
    \  local md5sum_base64_utf8_unicode_big5_b_hex\n  local md5sum_base64_utf8_unicode_big\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbxbz_tde.lua:55: ''end'' expected (to close ''function'' at
    line 5) near <eof>

    '
  stdout: ''
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  if md5 ~= nil then\n    return md5:sub(1, 16)\n  else\n\
    \    return nil\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9eymjtx5.lua:6:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp9eymjtx5.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmp9eymjtx5.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5\n  do\n    local md5_hash\
    \ = md5.new()\n    md5_hash:update(text)\n    md5 = md5_hash:digest()\n  end\n\
    \  return tostring(md5)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwmlagn1d.lua:11:\
    \ attempt to index a nil value (local 'md5')\nstack traceback:\n\t/tmp/tmpwmlagn1d.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmpwmlagn1d.lua:21: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4t2i9dk_.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp4t2i9dk_.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp4t2i9dk_.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  local md5 = ngx.md5(text)\n    if md5 ~= '' then\n        return md5\n    end\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplwq3oaas.lua:6:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmplwq3oaas.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmplwq3oaas.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4t2i9dk_.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp4t2i9dk_.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp4t2i9dk_.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  else\n    md5 = ''\n\
    \  end\n  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9npob9s3.lua:8:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp9npob9s3.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp9npob9s3.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5sum, err = io.open(\"/dev/urandom\", \"r\").read()\n  if err then\n    return\
    \ nil\n  end\n  local md5 = md5sum:sub(1, 16)\n  return md5:sub(1, 32)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpmdyp2hap.lua:6:\
    \ bad argument #1 to 'read' (FILE* expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpmdyp2hap.lua:6: in local 'candidate'\n\t/tmp/tmpmdyp2hap.lua:17: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5()\n  md5:update(text)\n\
    \  return md5:final()\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpivy7fh91.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpivy7fh91.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpivy7fh91.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5\n  md5 = ngx.md5(text)\n\
    \  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0m_dfazg.lua:10:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp0m_dfazg.lua:10:\
    \ in function 'candidate'\n\t/tmp/tmp0m_dfazg.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  if md5 ~= nil then\n    return md5\n  end\n  return nil\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvuirxwt.lua:6:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpzvuirxwt.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpzvuirxwt.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\n    local md5 = ngx.md5(text)\n\
    \    if md5 ~= nil then\n        return md5\n    end\n    return nil\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxg3jneh9.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpxg3jneh9.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpxg3jneh9.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  end\n  return md5\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppa114pe4.lua:8:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmppa114pe4.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmppa114pe4.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4t2i9dk_.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp4t2i9dk_.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp4t2i9dk_.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text:len() == 0 then\n    return nil\n  end\n  local function md5_char(c1,\
    \ c2)\n    local hex = string.char(c1 ^ c2)\n    return string.sub(hex, 1, 2):upper()\
    \ .. string.sub(hex, 3)\n  end\n  local function md5_chars(s)\n    local t = {}\n\
    \    for i = 1, #s do\n      t[#t + 1] = md5_char(s[i - 1], s[i])\n    end\n \
    \   return table.concat(t)\n  end\n  md5 = md5_chars(text)\n  return md5:lower()\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbh675grz.lua:11:\
    \ attempt to perform arithmetic on a nil value (local 'c1')\nstack traceback:\n\
    \t/tmp/tmpbh675grz.lua:11: in upvalue 'md5_char'\n\t/tmp/tmpbh675grz.lua:17: in\
    \ local 'md5_chars'\n\t/tmp/tmpbh675grz.lua:21: in local 'candidate'\n\t/tmp/tmpbh675grz.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then return end\n  local hash = ngx.md5(text)\n  return hash\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpop928p6v.lua:7:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpop928p6v.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpop928p6v.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750433
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  end\n  return md5\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppa114pe4.lua:8:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmppa114pe4.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmppa114pe4.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5sum\n  if text:len() > 0 then\n    md5sum = ngx.md5(text)\n  else\n    md5sum\
    \ = \"\"\n  end\n  return md5sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2yjbigdx.lua:8:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp2yjbigdx.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2yjbigdx.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5()\n  local len = #text\n  local i = 1\n  while i <= len do\n \
    \   md5:update(text:sub(i, i))\n    i = i + 1\n  end\n  return md5:final()\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpexzhyhrr.lua:6:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpexzhyhrr.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpexzhyhrr.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  local md5 = ngx.md5(text)\n    if md5 ~= nil then\n        return md5:sub(1,\
    \ 8)\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp07p977p1.lua:6:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp07p977p1.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp07p977p1.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750433
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4t2i9dk_.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp4t2i9dk_.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp4t2i9dk_.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  else\n    md5 = ''\n\
    \  end\n  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9npob9s3.lua:8:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp9npob9s3.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp9npob9s3.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  if md5 ~= '' then\n    return md5\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphioo77gh.lua:6:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmphioo77gh.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmphioo77gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  if md5 ~= nil then\n    return md5:sub(1, md5:len())\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4iqq43gd.lua:6:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp4iqq43gd.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmp4iqq43gd.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local hash = ngx.md5(text)\n  return\
    \ hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfoli5jsr.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpfoli5jsr.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpfoli5jsr.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5hash = ngx.md5(text)\n \
    \ return md5hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpilcrdf7y.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpilcrdf7y.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpilcrdf7y.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5sum\n  md5sum = ngx.md5(text)\n\
    \  return md5sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1noh5wsf.lua:10:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp1noh5wsf.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmp1noh5wsf.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5()\n  local len = #text\n  local i = 1\n  while i < len do\n  \
    \  md5:update(ngx.encode_base64(text[i]))\n    i = i + 1\n  end\n  return md5:final()\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgv0x4ic7.lua:6:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpgv0x4ic7.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpgv0x4ic7.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  end\n  return md5\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppa114pe4.lua:8:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmppa114pe4.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmppa114pe4.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  end\n  return md5\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppa114pe4.lua:8:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmppa114pe4.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmppa114pe4.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text ~= '' then\n    md5 = ngx.md5(text)\n  end\n  return md5\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprthrkp3i.lua:8:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmprthrkp3i.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmprthrkp3i.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then return end\n  local hash = ngx.md5(text)\n  return hash\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpop928p6v.lua:7:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpop928p6v.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpop928p6v.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750433
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpopcyc03o.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5hash = ngx.md5(text)\n \
    \ return md5hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpilcrdf7y.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpilcrdf7y.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpilcrdf7y.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9lbrl4zy.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp9lbrl4zy.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp9lbrl4zy.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4t2i9dk_.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp4t2i9dk_.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp4t2i9dk_.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp98sr__ua.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp98sr__ua.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp98sr__ua.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpopcyc03o.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then return end\n  local md5 = ngx.md5()\n  md5:update(text)\n \
    \ return md5:final()\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7847ojkw.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp7847ojkw.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp7847ojkw.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5hash = ngx.md5(text)\n \
    \ return md5hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpilcrdf7y.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpilcrdf7y.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpilcrdf7y.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4t2i9dk_.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp4t2i9dk_.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp4t2i9dk_.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  else\n    md5 = ''\n\
    \  end\n  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9npob9s3.lua:8:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp9npob9s3.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp9npob9s3.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5sum, err = io.open(\"/dev/urandom\", \"r\").read(\"*all\")\n  if md5sum ==\
    \ nil then\n    md5sum, err = io.open(\"/dev/random\", \"r\").read(\"*all\")\n\
    \  end\n  if md5sum == nil then\n    return nil\n  end\n  local hash = md5.new()\n\
    \  hash:update(text)\n  return hash:digest()\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxd1q5pz6.lua:6:\
    \ bad argument #1 to 'read' (FILE* expected, got string)\nstack traceback:\n\t\
    /tmp/tmpxd1q5pz6.lua:6: in local 'candidate'\n\t/tmp/tmpxd1q5pz6.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  local md5 = ngx.md5(text)\n    if md5 ~= nil then\n        return md5:sub(1,\
    \ 16)\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpo7xutdow.lua:6:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpo7xutdow.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpo7xutdow.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text ~= '' then\n    md5 = ngx.md5(text)\n  else\n    md5 = ''\n \
    \ end\n  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb6vawzvg.lua:8:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpb6vawzvg.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmpb6vawzvg.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local hash = ngx.md5(text)\n  return\
    \ hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfoli5jsr.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpfoli5jsr.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpfoli5jsr.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\n    local md5 = ngx.md5(text)\n\
    \    if md5 ~= nil then\n        return md5\n    end\n    return nil\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxg3jneh9.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpxg3jneh9.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpxg3jneh9.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5sum\n  if text:len() > 0 then\n    md5sum = ngx.md5(text)\n  end\n  return\
    \ md5sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdn0nrrv4.lua:8:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpdn0nrrv4.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmpdn0nrrv4.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5sum\n  if text:len() > 0 then\n    md5sum = ngx.md5(text)\n  else\n    md5sum\
    \ = \"\"\n  end\n  return md5sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2yjbigdx.lua:8:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp2yjbigdx.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2yjbigdx.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4t2i9dk_.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp4t2i9dk_.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp4t2i9dk_.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5\n  md5 = ngx.md5(text)\n\
    \  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0m_dfazg.lua:10:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp0m_dfazg.lua:10:\
    \ in function 'candidate'\n\t/tmp/tmp0m_dfazg.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4t2i9dk_.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp4t2i9dk_.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp4t2i9dk_.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpopcyc03o.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local hash = ngx.md5(text)\n  return\
    \ hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfoli5jsr.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpfoli5jsr.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpfoli5jsr.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5sum\n  local md5_hash =\
    \ ngx.md5()\n  md5_hash:update(text)\n  md5sum = md5_hash:hexdigest()\n  return\
    \ md5sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpeo7na40p.lua:10:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpeo7na40p.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmpeo7na40p.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\n    local md5 = ngx.md5(text)\n\
    \    return md5:sub(1, md5:len() - 2)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1ma6ppox.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp1ma6ppox.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp1ma6ppox.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\n    local md5 = ngx.md5(text)\n\
    \    return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp19s7_fho.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp19s7_fho.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp19s7_fho.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\n    local md5 = ngx.md5(text)\n\
    \    return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzkkt1gy2.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpzkkt1gy2.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpzkkt1gy2.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text ~= '' then\n    md5 = ngx.md5(text)\n  end\n  return md5\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprthrkp3i.lua:8:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmprthrkp3i.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmprthrkp3i.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  if md5 ~= ngx.null then\n    return md5:sub(1, md5:len())\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvxc83fgq.lua:6:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpvxc83fgq.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpvxc83fgq.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len()-1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpd70wb0wv.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpd70wb0wv.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpd70wb0wv.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local hash = ngx.md5(text)\n  return\
    \ hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfoli5jsr.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpfoli5jsr.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpfoli5jsr.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\n    local md5 = ngx.md5(text)\n\
    \    return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp19s7_fho.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp19s7_fho.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp19s7_fho.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  local md5 = ngx.md5(text)\n    if md5 ~= nil then\n        return md5:sub(1,\
    \ 8)\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp07p977p1.lua:6:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp07p977p1.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp07p977p1.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750433
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5()\n  md5:update(text)\n\
    \  return md5:final()\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpivy7fh91.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpivy7fh91.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpivy7fh91.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  end\n  return md5\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppa114pe4.lua:8:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmppa114pe4.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmppa114pe4.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local hash = ngx.md5(text)\n  return\
    \ hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfoli5jsr.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpfoli5jsr.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpfoli5jsr.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4t2i9dk_.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp4t2i9dk_.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp4t2i9dk_.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\n    local md5 = ngx.md5(text)\n\
    \    return md5:sub(1, 16)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpln8av60w.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpln8av60w.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpln8av60w.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4t2i9dk_.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp4t2i9dk_.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp4t2i9dk_.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  if md5 ~= nil then\n    return md5:sub(1, md5:len())\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4iqq43gd.lua:6:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp4iqq43gd.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmp4iqq43gd.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: -1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5sum, err = io.open(\"/dev/urandom\"\
    , \"r\")\n  if md5sum == nil then\n    return nil\n  end\n  local md5sum_bytes\
    \ = md5sum:read(\"*all\")\n  md5sum:close()\n  return md5sum_bytes\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659822881
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5sum, err = io.open(\"/dev/urandom\", \"r\").read(\"*all\")\n  if md5sum ==\
    \ nil then\n    return nil\n  end\n  local md5sum_bytes = md5sum:bytes()\n  local\
    \ md5 = md5sum_bytes:sub(1,16)\n  local md5_hex = md5:gsub(\"%z\", tohex)\n  return\
    \ md5_hex\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1mnjs2pv.lua:6:\
    \ bad argument #1 to 'read' (FILE* expected, got string)\nstack traceback:\n\t\
    /tmp/tmp1mnjs2pv.lua:6: in local 'candidate'\n\t/tmp/tmp1mnjs2pv.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5()\n  md5:update(text)\n\
    \  return md5:final()\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpivy7fh91.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpivy7fh91.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpivy7fh91.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  if md5 ~= ngx.null then\n    return md5:sub(1, 16)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpy0lfkgli.lua:6:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpy0lfkgli.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpy0lfkgli.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  else\n    md5 = ''\n\
    \  end\n  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9npob9s3.lua:8:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp9npob9s3.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp9npob9s3.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local hash = ngx.md5(text)\n  return\
    \ hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfoli5jsr.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpfoli5jsr.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpfoli5jsr.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text ~= '' then\n    md5 = ngx.md5(text)\n  else\n    md5 = ''\n \
    \ end\n  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb6vawzvg.lua:8:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpb6vawzvg.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmpb6vawzvg.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  return md5 ~= nil and md5:sub(1, 8)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_1w7hlwt.lua:6:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp_1w7hlwt.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmp_1w7hlwt.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local hash = ngx.md5(text)\n  return\
    \ hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfoli5jsr.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpfoli5jsr.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpfoli5jsr.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5sum\n  if text == nil then\n    return nil\n  end\n  md5sum = ngx.md5(text)\n\
    \  return md5sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9z7n2gg4.lua:10:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp9z7n2gg4.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmp9z7n2gg4.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5\n  do\n    local md5_hash\
    \ = ngx.md5(text)\n    md5 = md5_hash:sub(1, md5_hash:len()-1)\n  end\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsoya8cag.lua:11:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpsoya8cag.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmpsoya8cag.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text == nil then\n    return nil\n  else\n    md5 = ngx.md5(text)\n\
    \  end\n  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpld7wg2qm.lua:10:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpld7wg2qm.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmpld7wg2qm.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  end\n  return md5\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppa114pe4.lua:8:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmppa114pe4.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmppa114pe4.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  else\n    md5 = ''\n\
    \  end\n  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9npob9s3.lua:8:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp9npob9s3.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp9npob9s3.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then return end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,\
    \ md5:len() - 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0mju6s5y.lua:7:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp0mju6s5y.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmp0mju6s5y.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750433
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpopcyc03o.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  if md5 ~= '' then\n    return md5\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphioo77gh.lua:6:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmphioo77gh.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmphioo77gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text == nil then\n    return nil\n  end\n  md5 = ngx.md5(text)\n \
    \ return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmptrz05do3.lua:10:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmptrz05do3.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmptrz05do3.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  if md5 ~= nil then\n    return md5\n  else\n    return\
    \ nil\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppbp8osgr.lua:6:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmppbp8osgr.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmppbp8osgr.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  end\n  return md5\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppa114pe4.lua:8:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmppa114pe4.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmppa114pe4.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  if md5 ~= '' then\n    return md5\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphioo77gh.lua:6:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmphioo77gh.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmphioo77gh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  local md5 = ngx.md5(text)\n    if md5 ~= nil then\n        return md5\n   \
    \ end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnexzhw4w.lua:6:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpnexzhw4w.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpnexzhw4w.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5hash = ngx.md5(text)\n \
    \ return md5hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpilcrdf7y.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpilcrdf7y.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpilcrdf7y.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  local i = 1\n  local len = #text\n  local block\n  local tmp\n  local\
    \ i\n  local j\n  local k\n  local l\n  local n\n  local c\n  local h\n  local\
    \ s\n  local t\n  local z\n  local i\n  local j\n  local k\n  local l\n  local\
    \ n\n  local c\n  local h\n  local s\n  local t\n  local z\n  local i\n  local\
    \ j\n  local k\n  local l\n  local n\n  local c\n  local h\n  local s\n  local\
    \ t\n  local z\n  local i\n  local j\n  local k\n  local l\n  local n\n  local\
    \ c\n  local h\n  local s\n  local t\n  local z\n  local i\n  local j\n  local\
    \ k\n  local l\n  local n\n  local c\n  local h\n  local s\n  local t\n  local\
    \ z\n  local i\n  local j\n  local k\n  local l\n  local n\n  local c\n  local\
    \ h\n  local s\n  local t\n  local z\n  local i\n  local j\n  local k\n  local\
    \ l\n  local n\n  local c\n  local h\n  local s\n  local t\n  local z\n  local\
    \ i\n  local j\n  local k\n  local l\n  local n\n  local c\n  local h\n  local\
    \ s\n  local t\n  local z\n  local i\n  local j\n  local k\n  local l\n  local\
    \ n\n  local c\n  local h\n  local s\n  local t\n  local z\n  local i\n  local\
    \ j\n  local k\n  local l\n  local n\n  local c\n  local h\n  local s\n  local\
    \ t\n  local z\n  local i\n  local j\n  local k\n  local l\n  local n\n  local\
    \ c\n  local h\n  local s\n  local t\n  local z\n  local i\n  local j\n  local\
    \ k\n  local l\n  local n\n  local c\n  local h\n  local s\n  local t\n  local\
    \ z\n  local i\n  local j\n  \nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpu1yc1qcv.lua:144: ''end'' expected (to close ''function''
    at line 5) near <eof>

    '
  stdout: ''
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  local md5 = ngx.md5(text)\n    if md5 ~= nil then\n        return md5:sub(1,\
    \ 16)\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpo7xutdow.lua:6:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpo7xutdow.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpo7xutdow.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxrstln50.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmpxrstln50.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpxrstln50.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  if text ~= '' then\n    md5 = ngx.md5(text)\n  end\n  return md5\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprthrkp3i.lua:8:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmprthrkp3i.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmprthrkp3i.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n  return\
    \ md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4t2i9dk_.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp4t2i9dk_.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp4t2i9dk_.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: -1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5\n  local f = io.open('/dev/urandom', 'rb')\n  if f then\n    md5 = f:read(\"\
    *all\")\n    f:close()\n  else\n    md5 = os.date(\"%m%d%H%M%S\"):gsub(\"%z\"\
    , \"\")\n  end\n  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659822881
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5()\n  md5:update(text)\n  return md5:final()\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb24mg1gr.lua:6:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpb24mg1gr.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpb24mg1gr.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5sum, err = ngx.md5(text)\n  if err then\n    return nil, err\n  end\n  return\
    \ md5sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgy5eotf4.lua:6:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpgy5eotf4.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpgy5eotf4.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\n    local md5 = ngx.md5(text)\n\
    \    return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp19s7_fho.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp19s7_fho.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp19s7_fho.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil then\n        return nil\n    end\n    local md5 = ngx.md5(text)\n\
    \    return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprt0numnu.lua:9:\
    \ attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmprt0numnu.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmprt0numnu.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  local\
    \ md5 = ngx.md5(text)\n  if md5 ~= nil then\n    return md5:sub(1, 32)\n  end\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplhqh1xkz.lua:6:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmplhqh1xkz.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmplhqh1xkz.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyjwm4tea.lua:19: ''end'' expected (to close ''function'' at
    line 5) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750403
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  if\
    \ text == nil then\n    return nil\n  end\n  local hash = ngx.md5(text)\n  return\
    \ hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfoli5jsr.lua:9:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpfoli5jsr.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpfoli5jsr.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822876

name: HumanEval_78_hex_key
language: lua
prompt: "-- You have been tasked to write a function that receives \n-- a hexadecimal\
  \ number as a string and counts the number of hexadecimal \n-- digits that are primes\
  \ (prime number, or a prime, is a natural number \n-- greater than 1 that is not\
  \ a product of two smaller natural numbers).\n-- Hexadecimal digits are 0, 1, 2,\
  \ 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n-- Prime numbers are 2, 3, 5, 7, 11, 13,\
  \ 17,...\n-- So you have to determine a number of the following digits: 2, 3, 5,\
  \ 7, \n-- B (=decimal 11), D (=decimal 13).\n-- Note: you may assume the input is\
  \ always correct or empty string, \n-- and symbols A,B,C,D,E,F are always uppercase.\n\
  -- Examples:\n-- >>> hex_key('AB')\n-- 1\n-- >>> hex_key('1077E')\n-- 2\n-- >>>\
  \ hex_key('ABED1A33')\n-- 4\n-- >>> hex_key('123456789ABCDEF0')\n-- 6\n-- >>> hex_key('2020')\n\
  -- 2\nlocal function hex_key(num)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = hex_key\n\
  \    lu.assertEquals(candidate('AB'), 1)\n    lu.assertEquals(candidate('1077E'),\
  \ 2)\n    lu.assertEquals(candidate('ABED1A33'), 4)\n    lu.assertEquals(candidate('2020'),\
  \ 2)\n    lu.assertEquals(candidate('123456789ABCDEF0'), 6)\n    lu.assertEquals(candidate('112233445566778899AABBCCDDEEFF00'),\
  \ 12)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local num_str = tonumber(num)\n    if num_str == nil then\n   \
    \     return 0\n    end\n    local num_str = tostring(num_str)\n    local num_len\
    \ = #num_str\n    local num_digits = #num_str\n    local num_primes = 0\n    local\
    \ num_primes_count = 0\n    local num_primes_sum = 0\n    local num_primes_sum2\
    \ = 0\n    local num_primes_sum3 = 0\n    local num_primes_sum4 = 0\n    local\
    \ num_primes_sum5 = 0\n    local num_primes_sum6 = 0\n    local num_primes_sum7\
    \ = 0\n    local num_primes_sum8 = 0\n    local num_primes_sum9 = 0\n    local\
    \ num_primes_sum10 = 0\n    local num_primes_sum11 = 0\n    local num_primes_sum12\
    \ = 0\n    local num_primes_sum13 = 0\n    local num_primes_sum14 = 0\n    local\
    \ num_primes_sum15 = 0\n    local num_primes_sum16 = 0\n    local num_primes_sum17\
    \ = 0\n    local num_primes_sum18 = 0\n    local num_primes_sum19 = 0\n    local\
    \ num_primes_sum20 = 0\n    local num_primes_sum21 = 0\n    local num_primes_sum22\
    \ = 0\n    local num_primes_sum23 = 0\n    local num_primes_sum24 = 0\n    local\
    \ num_primes_sum25 = 0\n    local num_primes_sum26 = 0\n    local num_primes_sum27\
    \ = 0\n    local num_primes_sum28 = 0\n    local num_primes_sum29 = 0\n    local\
    \ num_primes_sum30 = 0\n    local num_primes_sum31 = 0\n    local num_primes_sum32\
    \ = 0\n    local num_primes_sum33 = 0\n    local num_primes_sum34 = 0\n    local\
    \ num_primes_sum35 = 0\n    local num_primes_sum36 = 0\n    local num_primes_sum37\
    \ = 0\n    local num_primes_sum38 = 0\n    local num_primes_sum39 = 0\n    local\
    \ num_primes_sum40 = 0\n    local num_primes_sum41 = 0\n    local num_primes_sum42\
    \ = 0\n    local num_primes_sum43 = 0\n    local num_primes_sum44 = 0\n    local\
    \ num_primes_sum45 = 0\n    local num_primes_sum46 = 0\n    local num_primes_sum47\
    \ = 0\n    local num_primes_sum48 = 0\n    local num_primes_sum49 = 0\n    local\
    \ num_primes_sum50 = 0\n    local num_", "  local num_str = tonumber(num)\n  local\
    \ num_len = #num_str\n  local num_digits = math.floor(math.log(num_str, 16))\n\
    \  local num_primes = 0\n  local num_primes_digits = 0\n  local num_primes_digits_count\
    \ = 0\n  local num_primes_digits_count_max = 2\n  local num_primes_digits_count_min\
    \ = num_digits - num_primes_digits_count_max\n  local num_primes_digits_count_min\
    \ = num_digits - num_primes_digits_count_max\n  local num_primes_digits_count_max\
    \ = num_digits - num_primes_digits_count_max\n  local num_primes_digits_count_min\
    \ = num_digits - num_primes_digits_count_max\n  local num_primes_digits_count_max\
    \ = num_digits - num_primes_digits_count_max\n  local num_primes_digits_count_min\
    \ = num_digits - num_primes_digits_count_max\n  local num_primes_digits_count_max\
    \ = num_digits - num_primes_digits_count_max\n  local num_primes_digits_count_min\
    \ = num_digits - num_primes_digits_count_max\n  local num_primes_digits_count_max\
    \ = num_digits - num_primes_digits_count_max\n  local num_primes_digits_count_min\
    \ = num_digits - num_primes_digits_count_max\n  local num_primes_digits_count_max\
    \ = num_digits - num_primes_digits_count_max\n  local num_primes_digits_count_min\
    \ = num_digits - num_primes_digits_count_max\n  local num_primes_digits_count_max\
    \ = num_digits - num_primes_digits_count_max\n  local num_primes_digits_count_min\
    \ = num_digits - num_primes_digits_count_max\n  local num_primes_digits_count_max\
    \ = num_digits - num_primes_digits_count_max\n  local num_primes_digits_count_min\
    \ = num_digits - num_primes_digits_count_max\n  local num_primes_digits_count_max\
    \ = num_digits - num_primes_digits_count_max\n  local num_primes_digits_count_min\
    \ = num_digits - num_primes_digits_count_max\n  local num_primes_digits_count_max\
    \ = num_digits - num_primes_digits_count_max\n  local num_primes_digits_count_min\
    \ = num_digits - num_primes_digits_count_max\n  local num_primes_digits_count_max\
    \ = num_digits - num_primes_digits_count_max\n  local num_primes_digits_count_min\
    \ = num_digits - num_primes_digits_count_max\n  local num_primes_digits_count_",
  "  local primes = {}\n  local digits = {}\n  local prime = 0\n  local count = 0\n\
    \  local digit = 0\n  local hexadecimal = 0\n  local hexadecimal_digit = 0\n \
    \ local hexadecimal_digit_count = 0\n  local hexadecimal_digit_count_max = 0\n\
    \  local hexadecimal_digit_count_min = 0\n  local hexadecimal_digit_count_max\
    \ = 0\n  local hexadecimal_digit_count_min = 0\n  local hexadecimal_digit_count_max\
    \ = 0\n  local hexadecimal_digit_count_min = 0\n  local hexadecimal_digit_count_max\
    \ = 0\n  local hexadecimal_digit_count_min = 0\n  local hexadecimal_digit_count_max\
    \ = 0\n  local hexadecimal_digit_count_min = 0\n  local hexadecimal_digit_count_max\
    \ = 0\n  local hexadecimal_digit_count_min = 0\n  local hexadecimal_digit_count_max\
    \ = 0\n  local hexadecimal_digit_count_min = 0\n  local hexadecimal_digit_count_max\
    \ = 0\n  local hexadecimal_digit_count_min = 0\n  local hexadecimal_digit_count_max\
    \ = 0\n  local hexadecimal_digit_count_min = 0\n  local hexadecimal_digit_count_max\
    \ = 0\n  local hexadecimal_digit_count_min = 0\n  local hexadecimal_digit_count_max\
    \ = 0\n  local hexadecimal_digit_count_min = 0\n  local hexadecimal_digit_count_max\
    \ = 0\n  local hexadecimal_digit_count_min = 0\n  local hexadecimal_digit_count_max\
    \ = 0\n  local hexadecimal_digit_count_min = 0\n  local hexadecimal_digit_count_max\
    \ = 0\n  local hexadecimal_digit_count_min = 0\n  local hexadecimal_digit_count_max\
    \ = 0\n  local hexadecimal_digit_count_min = 0\n  local hexadecimal_digit_count_max\
    \ = 0\n  local hexadecimal_digit_count_min = 0\n  local hexadecimal_digit_count_max\
    \ = 0\n  local hexadecimal_digit_count_min = 0\n  local hexadecimal_digit_count_max\
    \ = 0\n  local hexadecimal_digit_count_min = 0\n  local hexadecimal_digit_count_max\
    \ = 0\n  local hexadecimal_digit_count_min = 0\n  local hexadecimal_digit_count_max\
    \ = 0\n  local hexadecimal_digit_count_min = 0\n  local hexadecimal_digit_count_max\
    \ = 0\n  local hexadecimal_digit_count_min = 0\n  local hexadecimal_digit_count_max\
    \ = 0\n  local hexadecimal_digit_count_min = 0\n  local hexadecimal_digit_count_max\
    \ = 0\n  local hexadecimal_digit_count_min = 0\n  local hexadecimal_", "    local\
    \ count = 0\n    local digits = string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(",
  "    local num_str = string.gsub(tostring(num), '[^0-9a-fA-F]', '')\n    local num_str\
    \ = string.gsub(num_str, '[a-fA-F]', '')\n    local num_str = string.gsub(num_str,\
    \ '[a-fA-F0-9]', '')\n    local num_str = string.gsub(num_str, '[a-fA-F0-9]',\
    \ '')\n    local num_str = string.gsub(num_str, '[a-fA-F0-9]', '')\n    local\
    \ num_str = string.gsub(num_str, '[a-fA-F0-9]', '')\n    local num_str = string.gsub(num_str,\
    \ '[a-fA-F0-9]', '')\n    local num_str = string.gsub(num_str, '[a-fA-F0-9]',\
    \ '')\n    local num_str = string.gsub(num_str, '[a-fA-F0-9]', '')\n    local\
    \ num_str = string.gsub(num_str, '[a-fA-F0-9]', '')\n    local num_str = string.gsub(num_str,\
    \ '[a-fA-F0-9]', '')\n    local num_str = string.gsub(num_str, '[a-fA-F0-9]',\
    \ '')\n    local num_str = string.gsub(num_str, '[a-fA-F0-9]', '')\n    local\
    \ num_str = string.gsub(num_str, '[a-fA-F0-9]', '')\n    local num_str = string.gsub(num_str,\
    \ '[a-fA-F0-9]', '')\n    local num_str = string.gsub(num_str, '[a-fA-F0-9]',\
    \ '')\n    local num_str = string.gsub(num_str, '[a-fA-F0-9]', '')\n    local\
    \ num_str = string.gsub(num_str, '[a-fA-F0-9]', '')\n    local num_str = string.gsub(num_str,\
    \ '[a-fA-F0-9]', '')\n    local num_str = string.gsub(num_str, '[a-fA-F0-9]',\
    \ '')\n    local num_str = string.gsub(num_str, '[a-fA-F0-9]', '')\n    local\
    \ num_str = string.gsub(num_str, '[a-fA-F0-9]', '')\n    local num_str = string.gsub(num_str,\
    \ '[a-fA-F0-9]', '')\n    local num_str = string.gsub(num_str, '[a-fA-F0-9]',\
    \ '')\n    local num_str = string.gsub(num_str, '[a-fA-F0-9]', '')\n    local\
    \ num_str = string.gsub(num_str, '[a-fA-F0-9]', '')\n    local num_str = string.gsub(num_str,\
    \ '[a-fA-F0-9]', '')\n    local num_str = string.gsub(num_str, '[a-fA-F0-9]',\
    \ '')\n    local num_str = string.gsub(num_str, '[a-fA-F0-9]', '')\n    local\
    \ num_str = string.gsub(num_str, '[a-fA-F0-9]', '')\n    local num_str = string.gsub(num_str,\
    \ '[a-fA-F0-9]', '')\n    local num_str = string.gsub(num_str, '[a-fA-F0-9]',\
    \ '')\n", "  local primes = {}\n  local primes_count = 0\n  local digits = ''\n\
    \  local digits_count = 0\n  local digits_sum = 0\n  local digits_sum2 = 0\n \
    \ local digits_sum3 = 0\n  local digits_sum4 = 0\n  local digits_sum5 = 0\n  local\
    \ digits_sum6 = 0\n  local digits_sum7 = 0\n  local digits_sum8 = 0\n  local digits_sum9\
    \ = 0\n  local digits_sum10 = 0\n  local digits_sum11 = 0\n  local digits_sum12\
    \ = 0\n  local digits_sum13 = 0\n  local digits_sum14 = 0\n  local digits_sum15\
    \ = 0\n  local digits_sum16 = 0\n  local digits_sum17 = 0\n  local digits_sum18\
    \ = 0\n  local digits_sum19 = 0\n  local digits_sum20 = 0\n  local digits_sum21\
    \ = 0\n  local digits_sum22 = 0\n  local digits_sum23 = 0\n  local digits_sum24\
    \ = 0\n  local digits_sum25 = 0\n  local digits_sum26 = 0\n  local digits_sum27\
    \ = 0\n  local digits_sum28 = 0\n  local digits_sum29 = 0\n  local digits_sum30\
    \ = 0\n  local digits_sum31 = 0\n  local digits_sum32 = 0\n  local digits_sum33\
    \ = 0\n  local digits_sum34 = 0\n  local digits_sum35 = 0\n  local digits_sum36\
    \ = 0\n  local digits_sum37 = 0\n  local digits_sum38 = 0\n  local digits_sum39\
    \ = 0\n  local digits_sum40 = 0\n  local digits_sum41 = 0\n  local digits_sum42\
    \ = 0\n  local digits_sum43 = 0\n  local digits_sum44 = 0\n  local digits_sum45\
    \ = 0\n  local digits_sum46 = 0\n  local digits_sum47 = 0\n  local digits_sum48\
    \ = 0\n  local digits_sum49 = 0\n  local digits_sum50 = 0\n  local digits_sum51\
    \ = 0\n  local digits_sum52 = 0\n  local digits_sum53 = 0\n  local digits_sum54\
    \ = 0\n  local digits_sum55 = 0\n  local digits_sum56 = 0\n  local digits_sum57\
    \ = 0\n  local digits_sum58 = 0\n  local digits_sum59 = 0\n  local digits_sum60\
    \ = 0\n  local digits_sum61 = 0\n  local ", "    local primes = {}\n    local\
    \ primes_count = 0\n    local digits = ''\n    local digits_count = 0\n    local\
    \ hexadecimal = ''\n    local hexadecimal_count = 0\n    local hex_digit = ''\n\
    \    local hex_digit_count = 0\n    local hex_digit_prime = ''\n    local hex_digit_prime_count\
    \ = 0\n    local hex_digit_prime_hex = ''\n    local hex_digit_prime_hex_count\
    \ = 0\n    local hex_digit_prime_hex_hex = ''\n    local hex_digit_prime_hex_hex_count\
    \ = 0\n    local hex_digit_prime_hex_hex_hex = ''\n    local hex_digit_prime_hex_hex_hex_count\
    \ = 0\n    local hex_digit_prime_hex_hex_hex_hex = ''\n    local hex_digit_prime_hex_hex_hex_hex_count\
    \ = 0\n    local hex_digit_prime_hex_hex_hex_hex_hex = ''\n    local hex_digit_prime_hex_hex_hex_hex_hex_count\
    \ = 0\n    local hex_digit_prime_hex_hex_hex_hex_hex_hex = ''\n    local hex_digit_prime_hex_hex_hex_hex_hex_hex_count\
    \ = 0\n    local hex_digit_prime_hex_hex_hex_hex_hex_hex_hex = ''\n    local hex_digit_prime_hex_hex_hex_hex_hex_hex_hex_hex_count\
    \ = 0\n    local hex_digit_prime_hex_hex_hex_hex_hex_hex_hex_hex = ''\n    local\
    \ hex_digit_prime_hex_hex_hex_hex_hex_hex_hex_hex_hex_count = 0\n    local hex_digit_prime_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex\
    \ = ''\n    local hex_digit_prime_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_count\
    \ = 0\n    local hex_digit_prime_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex = ''\n\
    \    local hex_digit_prime_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_count =\
    \ 0\n    local hex_digit_prime_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex\
    \ = ''\n    local hex_digit_prime_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_count\
    \ = 0\n    local hex_digit_prime_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex\
    \ = ''\n    local hex_digit_prime_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_count\
    \ = 0\n    local hex_digit_prime_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex\
    \ = ''\n    local hex_digit_prime_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_count\
    \ = 0\n    local hex_digit_prime_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_hex_",
  "  local primes = {2,3,5,7,11,13,17,19}\n  local hexadecimals = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31}\n\
    \  local hexadecimal_digits = {}\n  local prime_digits = {}\n  local prime_digit_count\
    \ = 0\n  local prime_digit_count_max = 0\n  local prime_digit_count_min = 0\n\
    \  local prime_digit_count_sum = 0\n  local prime_digit_count_sum2 = 0\n  local\
    \ prime_digit_count_sum3 = 0\n  local prime_digit_count_sum4 = 0\n  local prime_digit_count_sum5\
    \ = 0\n  local prime_digit_count_sum6 = 0\n  local prime_digit_count_sum7 = 0\n\
    \  local prime_digit_count_sum8 = 0\n  local prime_digit_count_sum9 = 0\n  local\
    \ prime_digit_count_sum10 = 0\n  local prime_digit_count_sum11 = 0\n  local prime_digit_count_sum12\
    \ = 0\n  local prime_digit_count_sum13 = 0\n  local prime_digit_count_sum14 =\
    \ 0\n  local prime_digit_count_sum15 = 0\n  local prime_digit_count_sum16 = 0\n\
    \  local prime_digit_count_sum17 = 0\n  local prime_digit_count_sum18 = 0\n  local\
    \ prime_digit_count_sum19 = 0\n  local prime_digit_count_sum20 = 0\n  local prime_digit_count_sum21\
    \ = 0\n  local prime_digit_count_sum22 = 0\n  local prime_digit_count_sum23 =\
    \ 0\n  local prime_digit_count_sum24 = 0\n  local prime_digit_count_sum25 = 0\n\
    \  local prime_digit_count_sum26 = 0\n  local prime_digit_count_sum27 = 0\n  local\
    \ prime_digit_count_sum28 = 0\n  local prime_digit_count_sum29 = 0\n  local prime_digit_count_sum30\
    \ = 0\n  local prime_digit_count_sum31 = 0\n  local prime_digit_count_sum32 =\
    \ 0\n  local prime_digit_count_sum33 = 0\n  local prime_digit_count_sum34 = 0\n\
    \  local prime_digit_count_sum35 = 0\n  local prime_digit_count_sum36 = 0\n  local\
    \ prime_digit_count_sum37 = 0\n  local prime_digit_count_sum38 = 0\n  local prime_digit_count_sum39\
    \ = 0\n  local prime_digit_count_sum40 = 0\n  local prime_digit_count_sum41 =\
    \ 0\n  local prime_digit_count_sum42 = 0\n  ", "  local hex = {}\n  local count\
    \ = 0\n  for i = 1, #num do\n    local c = string.sub(num, i, i)\n    hex[c] =\
    \ hex[c] or 0\n    hex[c] = hex[c] + 1\n    if hex[c] == 2 then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend", "\tlocal hex = {}\n\tlocal\
    \ count = 0\n\tfor i = 1, #num do\n\t\tlocal c = string.sub(num, i, i)\n\t\tif\
    \ c ~= '0' and c ~= 'A' and c ~= 'B' and c ~= 'C' and c ~= 'D' and c ~= 'E' and\
    \ c ~= 'F' then\n\t\t\tcount = count + 1\n\t\tend\n\t\thex[string.byte(num)] =\
    \ hex[string.byte(num)] or 1\n\tend\n\tlocal primes = {}\n\tfor i = 2, #hex do\n\
    \t\tif hex[i] ~= 0 then\n\t\t\tprimes[#primes + 1] = i\n\t\tend\n\tend\n\tlocal\
    \ prime_count = 0\n\tfor i = 1, #primes do\n\t\tif primes[prime_count] == primes[i]\
    \ then\n\t\t\tprime_count = prime_count + 1\n\t\tend\n\tend\n\treturn prime_count\n\
    end", "  local hex_key = {}\n  local num_str = tonumber(num)\n  local num_len\
    \ = #num_str\n  local num_digits = math.floor(math.log(num_str, 16))\n  local\
    \ num_digits_str = string.format(\"%0*d\", num_len, num_digits)\n  local num_digits_hex\
    \ = string.format(\"%0*x\", num_len, num_digits)\n  local num_digits_hex = num_digits_hex:upper()\n\
    \  local num_digits_hex = num_digits_hex:gsub(\"0\",\"%x\"):gsub(\"x\",\"%0\"\
    ):gsub(\"%0\",\"0\")\n  local num_digits_hex = num_digits_hex:gsub(\"%x\",\"%0\"\
    ):gsub(\"%0\",\"0\")\n  local num_digits_hex = num_digits_hex:gsub(\"%x\",\"%0\"\
    ):gsub(\"%0\",\"0\")\n  local num_digits_hex = num_digits_hex:gsub(\"%x\",\"%0\"\
    ):gsub(\"%0\",\"0\")\n  local num_digits_hex = num_digits_hex:gsub(\"%x\",\"%0\"\
    ):gsub(\"%0\",\"0\")\n  local num_digits_hex = num_digits_hex:gsub(\"%x\",\"%0\"\
    ):gsub(\"%0\",\"0\")\n  local num_digits_hex = num_digits_hex:gsub(\"%x\",\"%0\"\
    ):gsub(\"%0\",\"0\")\n  local num_digits_hex = num_digits_hex:gsub(\"%x\",\"%0\"\
    ):gsub(\"%0\",\"0\")\n  local num_digits_hex = num_digits_hex:gsub(\"%x\",\"%0\"\
    ):gsub(\"%0\",\"0\")\n  local num_digits_hex = num_digits_hex:gsub(\"%x\",\"%0\"\
    ):gsub(\"%0\",\"0\")\n  local num_digits_hex = num_digits_hex:gsub(\"%x\",\"%0\"\
    ):gsub(\"%0\",\"0\")\n  local num_digits_hex = num_digits_hex:gsub(\"%x\",\"%0\"\
    ):gsub(\"%0\",\"0\")\n  local num_digits_hex = num_digits_hex:gsub(\"%x\",\"%0\"\
    ):gsub(\"%0\",\"0\")\n  local num_digits_hex = num_digits_hex:gsub(\"%x\",\"%0\"\
    ):gsub(\"%0\",\"0\")\n  local num_digits_hex = num_digits_hex:", "    local num_str\
    \ = tonumber(num)\n    if num_str == nil then\n        return nil\n    end\n \
    \   local num_str = num_str:upper()\n    local num_str = num_str:gsub('%a+','')\n\
    \    local num_str = num_str:gsub('%b+','')\n    local num_str = num_str:gsub('%d+','')\n\
    \    local num_str = num_str:gsub('%c+','')\n    local num_str = num_str:gsub('%e+','')\n\
    \    local num_str = num_str:gsub('%f+','')\n    local num_str = num_str:gsub('%g+','')\n\
    \    local num_str = num_str:gsub('%h+','')\n    local num_str = num_str:gsub('%i+','')\n\
    \    local num_str = num_str:gsub('%j+','')\n    local num_str = num_str:gsub('%k+','')\n\
    \    local num_str = num_str:gsub('%l+','')\n    local num_str = num_str:gsub('%m+','')\n\
    \    local num_str = num_str:gsub('%n+','')\n    local num_str = num_str:gsub('%o+','')\n\
    \    local num_str = num_str:gsub('%p+','')\n    local num_str = num_str:gsub('%q+','')\n\
    \    local num_str = num_str:gsub('%r+','')\n    local num_str = num_str:gsub('%s+','')\n\
    \    local num_str = num_str:gsub('%t+','')\n    local num_str = num_str:gsub('%u+','')\n\
    \    local num_str = num_str:gsub('%v+','')\n    local num_str = num_str:gsub('%w+','')\n\
    \    local num_str = num_str:gsub('%x+','')\n    local num_str = num_str:gsub('%y+','')\n\
    \    local num_str = num_str:gsub('%z+','')\n    local num_str = num_str:gsub('%0+','')\n\
    \    local num_str = num_str:gsub('%0+','')\n    local num_str = num_str:gsub('%0+','')\n\
    \    local num_str = num_str:gsub('%0+','')\n    local num_str = num_str:gsub('%0+','')\n\
    \    local num_str = num_str:gsub('%0+','')\n    local num_str = num_str:gsub('%0+','')\n\
    \    local num_str = num_str:", '  local hex = string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.',
  '  local hexadecimal = string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.g',
  '    local hexadecimal = string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.g',
  "\tlocal num_str = tonumber(num)\n\tif num_str == nil then\n\t\treturn nil\n\tend\n\
    \tlocal num_len = #num_str\n\tlocal num_digits = math.floor(math.log(num_str +\
    \ 1, 2))\n\tlocal num_primes = 0\n\tlocal num_primes_digits = 0\n\tlocal num_primes_digits_count\
    \ = 0\n\tlocal num_primes_digits_count_max = 0\n\tlocal num_primes_digits_count_max_count\
    \ = 0\n\tlocal num_primes_digits_count_min = 0\n\tlocal num_primes_digits_count_min_count\
    \ = 0\n\tlocal num_primes_digits_count_max = 0\n\tlocal num_primes_digits_count_max_count\
    \ = 0\n\tlocal num_primes_digits_count_min = 0\n\tlocal num_primes_digits_count_min_count\
    \ = 0\n\tlocal num_primes_digits_count_max = 0\n\tlocal num_primes_digits_count_max_count\
    \ = 0\n\tlocal num_primes_digits_count_min = 0\n\tlocal num_primes_digits_count_min_count\
    \ = 0\n\tlocal num_primes_digits_count_max = 0\n\tlocal num_primes_digits_count_max_count\
    \ = 0\n\tlocal num_primes_digits_count_min = 0\n\tlocal num_primes_digits_count_min_count\
    \ = 0\n\tlocal num_primes_digits_count_max = 0\n\tlocal num_primes_digits_count_max_count\
    \ = 0\n\tlocal num_primes_digits_count_min = 0\n\tlocal num_primes_digits_count_min_count\
    \ = 0\n\tlocal num_primes_digits_count_max = 0\n\tlocal num_primes_digits_count_max_count\
    \ = 0\n\tlocal num_primes_digits_count_min = 0\n\tlocal num_primes_digits_count_min_count\
    \ = 0\n\tlocal num_primes_digits_count_max = 0\n\tlocal num_primes_digits_count_max_count\
    \ = 0\n\tlocal num_primes_digits_count_min = 0\n\tlocal num_primes_digits_count_min_count\
    \ = 0\n\tlocal num_primes_digits_count_max = 0\n\tlocal num_primes_digits_count_max_count\
    \ = 0\n\tlocal num_primes_digits_count_min = 0\n\tlocal num_primes_digits_count_min_count\
    \ = 0\n\tlocal num_primes_digits_count_max = 0\n\tlocal num_primes_digits_count_max_count\
    \ = 0\n\tlocal num_primes_digits_count_min = 0\n\tlocal num_primes_digits_count_min_count\
    \ = 0\n\tlocal num_primes_digits_count_max = 0\n\tlocal num_primes_digits_count_max_count\
    \ = 0\n\tlocal num_primes_digits_count_min = 0\n\tlocal num_primes_digits_count_min_count\
    \ = 0\n\tlocal num_primes_", "\tlocal hex = string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.",
  "\tlocal primes = {}\n\tlocal primes_count = 0\n\tlocal digits = 0\n\tlocal digits_count\
    \ = 0\n\tlocal digits_sum = 0\n\tlocal digits_sum2 = 0\n\tlocal digits_sum3 =\
    \ 0\n\tlocal digits_sum4 = 0\n\tlocal digits_sum5 = 0\n\tlocal digits_sum6 = 0\n\
    \tlocal digits_sum7 = 0\n\tlocal digits_sum8 = 0\n\tlocal digits_sum9 = 0\n\t\
    local digits_sum10 = 0\n\tlocal digits_sum11 = 0\n\tlocal digits_sum12 = 0\n\t\
    local digits_sum13 = 0\n\tlocal digits_sum14 = 0\n\tlocal digits_sum15 = 0\n\t\
    local digits_sum16 = 0\n\tlocal digits_sum17 = 0\n\tlocal digits_sum18 = 0\n\t\
    local digits_sum19 = 0\n\tlocal digits_sum20 = 0\n\tlocal digits_sum21 = 0\n\t\
    local digits_sum22 = 0\n\tlocal digits_sum23 = 0\n\tlocal digits_sum24 = 0\n\t\
    local digits_sum25 = 0\n\tlocal digits_sum26 = 0\n\tlocal digits_sum27 = 0\n\t\
    local digits_sum28 = 0\n\tlocal digits_sum29 = 0\n\tlocal digits_sum30 = 0\n\t\
    local digits_sum31 = 0\n\tlocal digits_sum32 = 0\n\tlocal digits_sum33 = 0\n\t\
    local digits_sum34 = 0\n\tlocal digits_sum35 = 0\n\tlocal digits_sum36 = 0\n\t\
    local digits_sum37 = 0\n\tlocal digits_sum38 = 0\n\tlocal digits_sum39 = 0\n\t\
    local digits_sum40 = 0\n\tlocal digits_sum41 = 0\n\tlocal digits_sum42 = 0\n\t\
    local digits_sum43 = 0\n\tlocal digits_sum44 = 0\n\tlocal digits_sum45 = 0\n\t\
    local digits_sum46 = 0\n\tlocal digits_sum47 = 0\n\tlocal digits_sum48 = 0\n\t\
    local digits_sum49 = 0\n\tlocal digits_sum50 = 0\n\tlocal digits_sum51 = 0\n\t\
    local digits_sum52 = 0\n\tlocal digits_sum53 = 0\n\tlocal digits_sum54 = 0\n\t\
    local digits_sum55 = 0\n\tlocal digits_sum56 = 0\n\tlocal digits_sum57 = 0\n\t\
    local digits_sum58 = 0\n\tlocal digits_sum59 = 0\n\tlocal digits_sum60 = 0\n\t\
    local digits_sum61 = 0\n\tlocal digit", "  local count = 0\n  local digits = string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(",
  "  local num_str = tonumber(num)\n  if num_str == nil then\n    return nil\n  end\n\
    \  local num_str = tostring(num_str)\n  local num_len = #num_str\n  local num_digits\
    \ = #num_str\n  local num_primes = 0\n  local num_primes_count = 0\n  local num_primes_sum\
    \ = 0\n  local num_primes_sum2 = 0\n  local num_primes_sum3 = 0\n  local num_primes_sum4\
    \ = 0\n  local num_primes_sum5 = 0\n  local num_primes_sum6 = 0\n  local num_primes_sum7\
    \ = 0\n  local num_primes_sum8 = 0\n  local num_primes_sum9 = 0\n  local num_primes_sum10\
    \ = 0\n  local num_primes_sum11 = 0\n  local num_primes_sum12 = 0\n  local num_primes_sum13\
    \ = 0\n  local num_primes_sum14 = 0\n  local num_primes_sum15 = 0\n  local num_primes_sum16\
    \ = 0\n  local num_primes_sum17 = 0\n  local num_primes_sum18 = 0\n  local num_primes_sum19\
    \ = 0\n  local num_primes_sum20 = 0\n  local num_primes_sum21 = 0\n  local num_primes_sum22\
    \ = 0\n  local num_primes_sum23 = 0\n  local num_primes_sum24 = 0\n  local num_primes_sum25\
    \ = 0\n  local num_primes_sum26 = 0\n  local num_primes_sum27 = 0\n  local num_primes_sum28\
    \ = 0\n  local num_primes_sum29 = 0\n  local num_primes_sum30 = 0\n  local num_primes_sum31\
    \ = 0\n  local num_primes_sum32 = 0\n  local num_primes_sum33 = 0\n  local num_primes_sum34\
    \ = 0\n  local num_primes_sum35 = 0\n  local num_primes_sum36 = 0\n  local num_primes_sum37\
    \ = 0\n  local num_primes_sum38 = 0\n  local num_primes_sum39 = 0\n  local num_primes_sum40\
    \ = 0\n  local num_primes_sum41 = 0\n  local num_primes_sum42 = 0\n  local num_primes_sum43\
    \ = 0\n  local num_primes_sum44 = 0\n  local num_primes_sum45 = 0\n  local num_primes_sum46\
    \ = 0\n  local num_primes_sum47 = 0\n  local num_primes_sum48 = 0\n  local num_primes_sum49\
    \ = 0\n  local num_primes_sum50 = 0\n  local "]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

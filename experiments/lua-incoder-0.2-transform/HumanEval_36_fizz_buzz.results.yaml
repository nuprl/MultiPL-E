language: lua
name: HumanEval_36_fizz_buzz
results:
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    if n % 11 == 1 then\n      count = count + 1\n    end\n\
    \    if n % 13 == 1 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc44q20k2.lua:26:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpc44q20k2.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1\n \
    \ elseif n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1\n  else\n    return\
    \ fizz_buzz(n / 10) + 1\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfsg49i4_.lua:23:\
    \ expected: 0, actual: 6\nstack traceback:\n\t/tmp/tmpfsg49i4_.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1\n \
    \ elseif n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1\n  else\n    return\
    \ fizz_buzz(n / 10) + 1\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfsg49i4_.lua:23:\
    \ expected: 0, actual: 6\nstack traceback:\n\t/tmp/tmpfsg49i4_.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpubruno1z.lua:22:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpubruno1z.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    count = count + 1\n    if n % 11 == 0 then\n      count\
    \ = count + 1\n    end\n    if n % 13 == 0 then\n      count = count + 1\n   \
    \ end\n    n = math.floor(n/10)\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpinm53s64.lua:26:\
    \ expected: 0, actual: 2\nstack traceback:\n\t/tmp/tmpinm53s64.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 0 then\
    \ return nil end\n  if n < 10 then return n end\n  if n % 11 == 0 then return\
    \ n end\n  if n % 13 == 0 then return n end\n  return fizz_buzz(n - 10)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3zwdkrsr.lua:20:\
    \ expected: 2, actual: 78\nstack traceback:\n\t/tmp/tmp3zwdkrsr.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    if n % 11 == 0 then\n      count = count + 1\n    end\n\
    \    if n % 13 == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkqw2wclg.lua:26:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpkqw2wclg.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    count = count + 1\n    if n % 11 == 0 then\n      count\
    \ = count + 1\n    end\n    if n % 13 == 0 then\n      count = count + 1\n   \
    \ end\n    n = math.floor(n/10)\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpinm53s64.lua:26:\
    \ expected: 0, actual: 2\nstack traceback:\n\t/tmp/tmpinm53s64.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 0 then\n\
    \    return 0\n  end\n  if n < 10 then\n    return 1\n  end\n  if n % 11 == 0\
    \ and n % 13 == 0 then\n    return 2\n  end\n  if n % 11 == 0 then\n    return\
    \ 3\n  end\n  if n % 13 == 0 then\n    return 4\n  end\n  return 5\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn0vw249w.lua:30:\
    \ expected: 0, actual: 5\nstack traceback:\n\t/tmp/tmpn0vw249w.lua:30: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 0 then\n\
    \    return nil\n  end\n  if n < 11 then\n    return 0\n  end\n  if n < 13 then\n\
    \    return 1\n  end\n  if n % 11 == 0 then\n    return 2\n  end\n  if n % 13\
    \ == 0 then\n    return 3\n  end\n  return fizz_buzz(n - 1)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4z3zrvb6.lua:30:\
    \ expected: 0, actual: 2\nstack traceback:\n\t/tmp/tmp4z3zrvb6.lua:30: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  elseif n < 100 then\n    return fizz_buzz(n/10) + 1 -- Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\n  elseif n < 1000 then\n    return fizz_buzz(n/100) + 1 -- Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\n  elseif n < 10000 then\n    return fizz_buzz(n/1000) + 1 -- Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\n  elseif n < 100000 then\n    return fizz_buzz(n/10000) + 1 --\
    \ Return the number of times the digit 7 appears in integers less than n which\
    \ are divisible by 11 or 13.\n  elseif n < 1000000 then\n    return fizz_buzz(n/100000)\
    \ + 1 -- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n  elseif n < 10000000 then\n    return fizz_buzz(n/1000000)\
    \ + 1 -- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n  elseif n < 100000000 then\n    return\
    \ fizz_buzz(n/10000000) + 1 -- Return the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13.\n  elseif n < 1000000000\
    \ then\n    return fizz_buzz(n/100000000) + 1 -- Return the number of times the\
    \ digit 7 appears in integers less than n which are divisible by 11 or 13.\n \
    \ elseif n < 10000000000 then\n    return fizz_buzz(n/1000000000) + 1 -- Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\n  elseif n < 100000000000 then\n    return fizz_buzz(n/10000000000)\
    \ + 1 -- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n  elseif n < 1000000000000 then\n    return\
    \ fizz_buzz(n/100000000000) + 1 -- Return the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13.\n  elseif n < 10000000000000\
    \ then\n    return fizz_buzz(n/1000000000000) + 1 -- Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    \  elseif n < 100000000000000 then\n    return fizz_\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp5ecer9wr.lua:37: ''end'' expected (to close ''if'' at line
    9) near ''lu''

    '
  stdout: ''
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1\n \
    \ elseif n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1\n  else\n    return\
    \ fizz_buzz(n / 10) + 1\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfsg49i4_.lua:23:\
    \ expected: 0, actual: 6\nstack traceback:\n\t/tmp/tmpfsg49i4_.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  end\n  if n % 11 == 0 and n % 13 == 0 then\n    return 0\n  end\n\
    \  if n % 11 == 1 then\n    return 1\n  end\n  if n % 13 == 1 then\n    return\
    \ 2\n  end\n  return 3\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1t_ecfur.lua:27:\
    \ expected: 0, actual: 3\nstack traceback:\n\t/tmp/tmp1t_ecfur.lua:27: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  end\n  if n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1\n\
    \  end\n  if n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1\n  end\n  return\
    \ 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmqbb9fpg.lua:25:\
    \ expected: 2, actual: 7\nstack traceback:\n\t/tmp/tmpmqbb9fpg.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  elseif n < 100 then\n    if n % 11 == 0 then\n      return n\n\
    \    elseif n % 13 == 0 then\n      return n\n    else\n      return fizz_buzz(n\
    \ / 10) * 10 + n % 10\n    end\n  else\n    return fizz_buzz(n / 100) * 100 +\
    \ fizz_buzz(n % 100)\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpybb5mapp.lua:27:\
    \ expected: 0, actual: 50\nstack traceback:\n\t/tmp/tmpybb5mapp.lua:27: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  end\n  if n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1\n\
    \  end\n  if n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1\n  end\n  return\
    \ 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmqbb9fpg.lua:25:\
    \ expected: 2, actual: 7\nstack traceback:\n\t/tmp/tmpmqbb9fpg.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  end\n  if n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1\n\
    \  end\n  if n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1\n  end\n  return\
    \ 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmqbb9fpg.lua:25:\
    \ expected: 2, actual: 7\nstack traceback:\n\t/tmp/tmpmqbb9fpg.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    count = count + 1\n    if n % 11 == 0 then count =\
    \ count + 1 end\n    if n % 13 == 0 then count = count + 1 end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm3rokp1z.lua:22:\
    \ expected: 0, actual: 2\nstack traceback:\n\t/tmp/tmpm3rokp1z.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpubruno1z.lua:22:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpubruno1z.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    if n % 11 == 0 then count = count + 1 end\n    if n\
    \ % 13 == 0 then count = count + 1 end\n    n = math.floor(n/10)\n  end\n  return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjkfs23se.lua:22:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpjkfs23se.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    count = count + 1\n    local remainder = n % 11\n \
    \   if remainder == 0 or remainder == 13 then\n      n = n / 11\n    else\n  \
    \    n = n / 13\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0iqg81tq.lua:25:\
    \ expected: 0, actual: 293\nstack traceback:\n\t/tmp/tmp0iqg81tq.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    count = count + 1\n    if n % 11 == 0 then\n      count\
    \ = count + 1\n    end\n    if n % 13 == 0 then\n      count = count + 1\n   \
    \ end\n    n = math.floor(n/10)\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpinm53s64.lua:26:\
    \ expected: 0, actual: 2\nstack traceback:\n\t/tmp/tmpinm53s64.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 0 then\n\
    \    return nil\n  end\n  if n < 10 then\n    return n\n  end\n  if n % 11 ==\
    \ 0 then\n    return fizz_buzz(n / 11) + 1\n  end\n  if n % 13 == 0 then\n   \
    \ return fizz_buzz(n / 13) + 1\n  end\n  return nil\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmph9kesvmg.lua:27:\
    \ expected: 0, actual: nil\nstack traceback:\n\t/tmp/tmph9kesvmg.lua:27: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpubruno1z.lua:22:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpubruno1z.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 0 then\n\
    \    return nil\n  end\n  if n < 10 then\n    return n\n  end\n  if n % 11 ==\
    \ 0 then\n    return fizz_buzz(n / 11) + 1\n  end\n  if n % 13 == 0 then\n   \
    \ return fizz_buzz(n / 13) + 1\n  end\n  return nil\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmph9kesvmg.lua:27:\
    \ expected: 0, actual: nil\nstack traceback:\n\t/tmp/tmph9kesvmg.lua:27: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 0 then\n\
    \    return 0\n  end\n  if n < 10 then\n    return n\n  end\n  if n % 11 == 0\
    \ and n % 13 == 0 then\n    return 1\n  end\n  if n % 11 == 0 then\n    return\
    \ 2\n  end\n  if n % 13 == 0 then\n    return 3\n  end\n  return 0\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpi3_bvhx4.lua:31:\
    \ expected: 2, actual: 3\nstack traceback:\n\t/tmp/tmpi3_bvhx4.lua:31: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    count = count + 1\n    if n % 11 == 0 then\n      count\
    \ = count + 1\n    end\n    if n % 13 == 0 then\n      count = count + 1\n   \
    \ end\n    n = math.floor(n/10)\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpinm53s64.lua:26:\
    \ expected: 0, actual: 2\nstack traceback:\n\t/tmp/tmpinm53s64.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    if n % 11 == 0 then count = count + 1 end\n    if n\
    \ % 13 == 0 then count = count + 1 end\n    n = math.floor(n/10)\n  end\n  return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjkfs23se.lua:22:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpjkfs23se.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpubruno1z.lua:22:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpubruno1z.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 0 then\n\
    \    return 0\n  end\n  if n % 11 == 0 and n % 13 == 0 then\n    return 1\n  end\n\
    \  if n % 11 == 1 then\n    return 2\n  end\n  if n % 13 == 1 then\n    return\
    \ 3\n  end\n  return 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnrww4_ws.lua:30:\
    \ expected: 3, actual: 2\nstack traceback:\n\t/tmp/tmpnrww4_ws.lua:30: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    if n % 11 == 0 then\n      count = count + 1\n    end\n\
    \    if n % 13 == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkqw2wclg.lua:26:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpkqw2wclg.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  elseif n < 100 then\n    if n % 11 == 0 then\n      return n\n\
    \    elseif n % 13 == 0 then\n      return n\n    else\n      return nil\n   \
    \ end\n  else\n    return fizz_buzz(n / 10) * 10 + n % 10\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5ichbdmk.lua:27:\
    \ expected: 0, actual: nil\nstack traceback:\n\t/tmp/tmp5ichbdmk.lua:27: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  elseif n < 100 then\n    if n % 11 == 0 then\n      return n\n\
    \    elseif n % 13 == 0 then\n      return n\n    else\n      return fizz_buzz(n\
    \ - 10)\n    end\n  else\n    return fizz_buzz(n - 100)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpy00ml0v8.lua:28:\
    \ expected: 2, actual: 78\nstack traceback:\n\t/tmp/tmpy00ml0v8.lua:28: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpubruno1z.lua:22:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpubruno1z.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpubruno1z.lua:22:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpubruno1z.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    if n % 11 == 0 then\n      count = count + 1\n    end\n\
    \    if n % 13 == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkqw2wclg.lua:26:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpkqw2wclg.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  end\n  if n % 11 == 0 and n % 13 == 0 then\n    return n\n  end\n\
    \  return fizz_buzz(n - 10) + fizz_buzz(n - 9)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp4ai0874.lua:21:\
    \ expected: 0, actual: 80\nstack traceback:\n\t/tmp/tmpp4ai0874.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1\n \
    \ elseif n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1\n  else\n    return\
    \ fizz_buzz(n / 10) + 1\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfsg49i4_.lua:23:\
    \ expected: 0, actual: 6\nstack traceback:\n\t/tmp/tmpfsg49i4_.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1 --\
    \ Return the number of times the digit 7 appears in integers less than n which\
    \ are divisible by 11.\n  elseif n % 13 == 0 then\n    return fizz_buzz(n / 13)\
    \ + 1 -- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 13.\n  else\n    return fizz_buzz(n / 10) + 1 -- Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 10 and 11.\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyw6lk_as.lua:23:\
    \ expected: 0, actual: 6.0\nstack traceback:\n\t/tmp/tmpyw6lk_as.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 0 then\n\
    \    return nil\n  end\n  if n < 10 then\n    return n\n  end\n  if n % 11 ==\
    \ 0 and n % 13 == 0 then\n    return n\n  end\n  return fizz_buzz(n - 10)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1j_k_wir.lua:25:\
    \ expected: 2, actual: 8\nstack traceback:\n\t/tmp/tmp1j_k_wir.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local div = math.floor(n/11)\n  if div == 0 then\n    count = count + 1\n\
    \  end\n  n = n - div * 11\n  div = math.floor(n/13)\n  if div == 0 then\n   \
    \ count = count + 1\n  end\n  n = n - div * 13\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_67b4ho_.lua:26:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmp_67b4ho_.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  elseif n % 11 == 0 and n % 13 == 0 then\n    return n\n  elseif\
    \ n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1\n  elseif n % 13 == 0 then\n\
    \    return fizz_buzz(n / 13) + 1\n  else\n    return fizz_buzz(n / 11) + 1\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf6neq1_1.lua:25:\
    \ expected: 0, actual: 5.5454545454545\nstack traceback:\n\t/tmp/tmpf6neq1_1.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 0 then\n\
    \    return nil\n  end\n  if n < 10 then\n    return n\n  end\n  if n % 11 ==\
    \ 0 and n % 13 == 0 then\n    return n\n  end\n  local count = 0\n  local i =\
    \ 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count =\
    \ count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnvciuuj3.lua:33:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpnvciuuj3.lua:33: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpubruno1z.lua:22:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpubruno1z.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    if n % 11 == 0 then\n      count = count + 1\n    end\n\
    \    if n % 13 == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkqw2wclg.lua:26:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpkqw2wclg.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n >= 11 or n >= 13 do\n    count = count + 1\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmput5f0nsd.lua:20:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmput5f0nsd.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpubruno1z.lua:22:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpubruno1z.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    if n % 11 == 0 then\n      count = count + 1\n    end\n\
    \    if n % 13 == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkqw2wclg.lua:26:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpkqw2wclg.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 0 then\n\
    \    return nil\n  end\n  if n < 10 then\n    return n\n  end\n  if n % 11 ==\
    \ 0 then\n    return fizz_buzz(n / 11) + 1\n  end\n  if n % 13 == 0 then\n   \
    \ return fizz_buzz(n / 13) + 1\n  end\n  return nil\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmph9kesvmg.lua:27:\
    \ expected: 0, actual: nil\nstack traceback:\n\t/tmp/tmph9kesvmg.lua:27: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 0 then\n\
    \    return 0\n  end\n  if n % 11 == 0 and n % 13 == 0 then\n    return 1\n  end\n\
    \  if n % 11 == 1 then\n    return 2\n  end\n  if n % 13 == 1 then\n    return\
    \ 3\n  end\n  return 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnrww4_ws.lua:30:\
    \ expected: 3, actual: 2\nstack traceback:\n\t/tmp/tmpnrww4_ws.lua:30: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if n % i == 0 and n % 11 == 0 and n\
    \ % 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n  return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_z9h660i.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp_z9h660i.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    if n % 11 == 1 then\n      count = count + 1\n    end\n\
    \    if n % 13 == 1 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc44q20k2.lua:26:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpc44q20k2.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  elseif n % 11 == 0 and n % 13 == 0 then\n    return n\n  elseif\
    \ n % 11 == 1 then\n    return fizz_buzz(n / 11) + 1\n  elseif n % 13 == 1 then\n\
    \    return fizz_buzz(n / 13) + 1\n  else\n    return fizz_buzz(n / 10) + 1\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6ilx0q6f.lua:25:\
    \ expected: 0, actual: 6.0\nstack traceback:\n\t/tmp/tmp6ilx0q6f.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    count = count + 1\n    local remainder = n % 11\n \
    \   if remainder == 0 then\n      count = count + 1\n      remainder = n % 13\n\
    \    end\n    n = math.floor(n/10)\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzgr8hf3v.lua:25:\
    \ expected: 0, actual: 2\nstack traceback:\n\t/tmp/tmpzgr8hf3v.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 0 then\n\
    \    return 0\n  end\n  if n % 11 == 0 then\n    return 1\n  end\n  if n % 13\
    \ == 0 then\n    return 2\n  end\n  return fizz_buzz(n - 1)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqtbqkc9u.lua:24:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpqtbqkc9u.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpubruno1z.lua:22:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpubruno1z.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n >= 11 or n >= 13 do\n    count = count + 1\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmput5f0nsd.lua:20:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmput5f0nsd.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpubruno1z.lua:22:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpubruno1z.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpubruno1z.lua:22:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpubruno1z.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1 --\
    \ Add 1 because we count the digit 7 twice.\n  elseif n % 13 == 0 then\n    return\
    \ fizz_buzz(n / 13) + 1 -- Add 1 because we count the digit 7 twice.\n  else\n\
    \    return fizz_buzz(n / 10) + 1 -- Add 1 because we count the digit 7 twice.\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw6a3o7so.lua:23:\
    \ expected: 0, actual: 6.0\nstack traceback:\n\t/tmp/tmpw6a3o7so.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpubruno1z.lua:22:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpubruno1z.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1 --\
    \ Return the number of times the digit 7 appears in integers less than n which\
    \ are divisible by 11.\n  elseif n % 13 == 0 then\n    return fizz_buzz(n / 13)\
    \ + 1 -- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 13.\n  else\n    return fizz_buzz(n / 10) + 1 -- Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 10 and 11.\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyw6lk_as.lua:23:\
    \ expected: 0, actual: 6.0\nstack traceback:\n\t/tmp/tmpyw6lk_as.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1 --\
    \ Add 1 because fizz buzz starts at 1.\n  elseif n % 13 == 0 then\n    return\
    \ fizz_buzz(n / 13) + 1 -- Add 1 because fizz buzz starts at 1.\n  else\n    return\
    \ fizz_buzz(n / 10) + 1 -- Add 1 because fizz buzz starts at 1.\n  end\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf8ofk_l9.lua:23:\
    \ expected: 0, actual: 6.0\nstack traceback:\n\t/tmp/tmpf8ofk_l9.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    if n % 11 == 0 then\n      count = count + 1\n    end\n\
    \    if n % 13 == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkqw2wclg.lua:26:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpkqw2wclg.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 0 then\n\
    \    return 0\n  end\n  if n % 11 == 0 and n % 13 == 0 then\n    return 1\n  end\n\
    \  if n % 11 == 0 then\n    return 2\n  end\n  if n % 13 == 0 then\n    return\
    \ 3\n  end\n  return 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe97nk1zx.lua:28:\
    \ expected: 2, actual: 3\nstack traceback:\n\t/tmp/tmpe97nk1zx.lua:28: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    if n % 11 == 0 then count = count + 1 end\n    if n\
    \ % 13 == 0 then count = count + 1 end\n    n = math.floor(n/10)\n  end\n  return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjkfs23se.lua:22:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpjkfs23se.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if n % i == 0 and n % 11 == 0 and n\
    \ % 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n  return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_z9h660i.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp_z9h660i.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpubruno1z.lua:22:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpubruno1z.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1\n \
    \ elseif n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1\n  else\n    return\
    \ 0\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpik932hgx.lua:24:\
    \ expected: 2, actual: 7.0\nstack traceback:\n\t/tmp/tmpik932hgx.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpubruno1z.lua:22:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpubruno1z.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 0 then\n\
    \    return 0\n  end\n  if n < 11 then\n    return 1\n  end\n  if n < 13 then\n\
    \    return 2\n  end\n  if n < 21 then\n    return 3\n  end\n  if n < 37 then\n\
    \    return 4\n  end\n  if n < 53 then\n    return 5\n  end\n  if n < 61 then\n\
    \    return 6\n  end\n  if n < 67 then\n    return 7\n  end\n  if n < 71 then\n\
    \    return 8\n  end\n  if n < 77 then\n    return 9\n  end\n  if n < 81 then\n\
    \    return 10\n  end\n  if n < 87 then\n    return 11\n  end\n  if n < 91 then\n\
    \    return 12\n  end\n  if n < 97 then\n    return 13\n  end\n  return 0\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj6b1etgx.lua:57:\
    \ expected: 0, actual: 5\nstack traceback:\n\t/tmp/tmpj6b1etgx.lua:57: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  elseif n < 100 then\n    if n % 11 == 0 then\n      return n\n\
    \    elseif n % 13 == 0 then\n      return n\n    else\n      return n\n    end\n\
    \  else\n    return fizz_buzz(n / 10) * 10 + n % 10\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpky7qr6tu.lua:27:\
    \ expected: 0, actual: 50\nstack traceback:\n\t/tmp/tmpky7qr6tu.lua:27: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpubruno1z.lua:22:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpubruno1z.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 0 then\n\
    \    return 0\n  end\n  local count = 0\n  while n > 0 do\n    count = count +\
    \ 1\n    local remainder = n % 11\n    if remainder == 0 or remainder == 13 then\n\
    \      count = count + 1\n    end\n    n = n / 11\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu0y0zz1g.lua:27:\
    \ expected: 0, actual: 313\nstack traceback:\n\t/tmp/tmpu0y0zz1g.lua:27: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpubruno1z.lua:22:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpubruno1z.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  elseif n % 11 == 0 and n % 13 == 0 then\n    return fizz_buzz(n\
    \ / 11) + fizz_buzz(n / 13)\n  elseif n % 11 == 0 then\n    return fizz_buzz(n\
    \ / 11) + 1\n  elseif n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1\n  else\n\
    \    return fizz_buzz(n / 11) + fizz_buzz(n / 13)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpupo_6uns.lua:25:\
    \ expected: 0, actual: 8.3916083916084\nstack traceback:\n\t/tmp/tmpupo_6uns.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1 --\
    \ Add 1 because we count the digit 7 twice.\n  elseif n % 13 == 0 then\n    return\
    \ fizz_buzz(n / 13) + 1 -- Add 1 because we count the digit 7 twice.\n  else\n\
    \    return fizz_buzz(n / 10) + 1 -- Add 1 because we count the digit 7 twice.\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw6a3o7so.lua:23:\
    \ expected: 0, actual: 6.0\nstack traceback:\n\t/tmp/tmpw6a3o7so.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    count = count + 1\n    local remainder = n % 11\n \
    \   if remainder == 7 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj_bwxqsf.lua:24:\
    \ expected: 0, actual: 2\nstack traceback:\n\t/tmp/tmpj_bwxqsf.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if n % i == 0 and n % 11 == 0 and n\
    \ % 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n  return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_z9h660i.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp_z9h660i.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 0 then\n\
    \    return 0\n  end\n  if n < 10 then\n    return n\n  end\n  if n % 11 == 0\
    \ and n % 13 == 0 then\n    return 0\n  end\n  if n % 11 == 1 then\n    return\
    \ 1\n  end\n  if n % 13 == 1 then\n    return 2\n  end\n  return 3\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkfvx9nyb.lua:30:\
    \ expected: 0, actual: 3\nstack traceback:\n\t/tmp/tmpkfvx9nyb.lua:30: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  elseif n < 100 then\n    if n % 11 == 0 and n % 13 == 0 then\n\
    \      return n\n    else\n      return fizz_buzz(n / 10) + 1\n    end\n  else\n\
    \    return fizz_buzz(n / 100) + 1\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpi39ny4mw.lua:25:\
    \ expected: 0, actual: 6.0\nstack traceback:\n\t/tmp/tmpi39ny4mw.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1 --\
    \ Return the number of times the digit 7 appears in integers less than n which\
    \ are divisible by 11.\n  elseif n % 13 == 0 then\n    return fizz_buzz(n / 13)\
    \ + 1 -- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 13.\n  else\n    return fizz_buzz(n / 10) + 1 -- Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 10 and 11.\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyw6lk_as.lua:23:\
    \ expected: 0, actual: 6.0\nstack traceback:\n\t/tmp/tmpyw6lk_as.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    count = count + 1\n    local remainder = n % 11\n \
    \   if remainder == 0 or remainder == 13 then\n      n = n / 11\n    else\n  \
    \    n = n / 13\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0iqg81tq.lua:25:\
    \ expected: 0, actual: 293\nstack traceback:\n\t/tmp/tmp0iqg81tq.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 0 then\n\
    \    return 0\n  end\n  if n % 11 == 0 then\n    return 1\n  end\n  if n % 13\
    \ == 0 then\n    return 2\n  end\n  return fizz_buzz(n - 1)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqtbqkc9u.lua:24:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpqtbqkc9u.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    local remainder = n % 11\n    if remainder == 0 then\n\
    \      count = count + 1\n    end\n    local remainder2 = n % 13\n    if remainder2\
    \ == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n  end\n\
    \  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpua8__yg_.lua:28:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpua8__yg_.lua:28: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 0 then\n\
    \    return 0\n  end\n  if n % 11 == 0 then\n    return 1\n  end\n  if n % 13\
    \ == 0 then\n    return 2\n  end\n  return fizz_buzz(n - 1)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqtbqkc9u.lua:24:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpqtbqkc9u.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    count = count + 1\n    if n % 11 == 0 then count =\
    \ count + 1 end\n    if n % 13 == 0 then count = count + 1 end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm3rokp1z.lua:22:\
    \ expected: 0, actual: 2\nstack traceback:\n\t/tmp/tmpm3rokp1z.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpubruno1z.lua:22:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpubruno1z.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 0 then\n\
    \    return 0\n  end\n  if n < 10 then\n    return n\n  end\n  if n % 11 == 0\
    \ then\n    return n + fizz_buzz(n / 11)\n  end\n  if n % 13 == 0 then\n    return\
    \ n + fizz_buzz(n / 13)\n  end\n  return n\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf42l3wsf.lua:27:\
    \ expected: 0, actual: 50\nstack traceback:\n\t/tmp/tmpf42l3wsf.lua:27: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if n % i == 0 and n / i ~= 11 and n\
    \ / i ~= 13 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n  return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp272tvbpg.lua:23:\
    \ expected: 0, actual: 6\nstack traceback:\n\t/tmp/tmp272tvbpg.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 0 then\n\
    \    return nil\n  end\n  if n < 10 then\n    return n\n  end\n  if n % 11 ==\
    \ 0 and n % 13 == 0 then\n    return 0\n  end\n  if n % 11 == 1 then\n    return\
    \ 1\n  end\n  if n % 13 == 1 then\n    return 2\n  end\n  return 3\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw0ovemhm.lua:30:\
    \ expected: 0, actual: 3\nstack traceback:\n\t/tmp/tmpw0ovemhm.lua:30: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 0 then\n\
    \    return nil\n  end\n  if n < 11 then\n    return n\n  end\n  if n % 11 ==\
    \ 0 then\n    return fizz_buzz(n / 11) + 1\n  end\n  if n % 13 == 0 then\n   \
    \ return fizz_buzz(n / 13) + 1\n  end\n  return nil\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg7owq8lt.lua:27:\
    \ expected: 0, actual: nil\nstack traceback:\n\t/tmp/tmpg7owq8lt.lua:27: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpubruno1z.lua:22:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpubruno1z.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1\n \
    \ elseif n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1\n  else\n    return\
    \ fizz_buzz(n / 10) + 1\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfsg49i4_.lua:23:\
    \ expected: 0, actual: 6\nstack traceback:\n\t/tmp/tmpfsg49i4_.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpubruno1z.lua:22:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpubruno1z.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    if n % 11 == 0 and n % 13 == 0 then\n      count =\
    \ count + 1\n    end\n    n = math.floor(n/10)\n  end\n  return count\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprkapuyr2.lua:23:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmprkapuyr2.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    if n % 11 == 0 then\n      count = count + 1\n    end\n\
    \    if n % 13 == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkqw2wclg.lua:26:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpkqw2wclg.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1 --\
    \ FizzBuzz\n  elseif n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1 -- FizzBuzz\n\
    \  else\n    return fizz_buzz(n / 10) + 1 -- Fizz\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm6cc_58e.lua:23:\
    \ expected: 0, actual: 6.0\nstack traceback:\n\t/tmp/tmpm6cc_58e.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    if n % 11 == 0 then\n      count = count + 1\n    end\n\
    \    if n % 13 == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkqw2wclg.lua:26:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpkqw2wclg.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  for i = 1, n do\n    if n % 11 == 0 and n % 13 == 0 then\n      count =\
    \ count + 1\n    end\n    n = math.floor(n/10)\n  end\n  return count\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjr_qr89l.lua:22:\
    \ expected: 0, actual: 48\nstack traceback:\n\t/tmp/tmpjr_qr89l.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 0 then\n\
    \    return nil\n  end\n  if n < 10 then\n    return n\n  end\n  if n % 11 ==\
    \ 0 and n % 13 == 0 then\n    return n\n  end\n  return fizz_buzz(n - 10)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1j_k_wir.lua:25:\
    \ expected: 2, actual: 8\nstack traceback:\n\t/tmp/tmp1j_k_wir.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    if n % 11 == 0 then\n      count = count + 1\n    end\n\
    \    if n % 13 == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkqw2wclg.lua:26:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpkqw2wclg.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1 --\
    \ Add 1 to the result because we found a multiple of 11.\n  elseif n % 13 == 0\
    \ then\n    return fizz_buzz(n / 13) + 1 -- Add 1 to the result because we found\
    \ a multiple of 13.\n  else\n    return fizz_buzz(n / 10) + 1 -- Add 1 to the\
    \ result because we found a multiple of 10.\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpit58xekh.lua:23:\
    \ expected: 0, actual: 6.0\nstack traceback:\n\t/tmp/tmpit58xekh.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1 --\
    \ Return the number of times the digit 7 appears in integers less than n which\
    \ are divisible by 11.\n  elseif n % 13 == 0 then\n    return fizz_buzz(n / 13)\
    \ + 1 -- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 13.\n  else\n    return fizz_buzz(n / 10) + 1 -- Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 10 and 11.\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyw6lk_as.lua:23:\
    \ expected: 0, actual: 6.0\nstack traceback:\n\t/tmp/tmpyw6lk_as.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpubruno1z.lua:22:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpubruno1z.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpubruno1z.lua:22:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpubruno1z.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1\n \
    \ elseif n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1\n  else\n    return\
    \ 0\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpik932hgx.lua:24:\
    \ expected: 2, actual: 7.0\nstack traceback:\n\t/tmp/tmpik932hgx.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    count = count + 1\n    local remainder = n % 11\n \
    \   if remainder == 0 then\n      count = count + 1\n      remainder = n % 13\n\
    \    end\n    n = math.floor(n/10)\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzgr8hf3v.lua:25:\
    \ expected: 0, actual: 2\nstack traceback:\n\t/tmp/tmpzgr8hf3v.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpubruno1z.lua:22:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpubruno1z.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local div = math.floor(n/11)\n  if div == 0 then\n    count = count + 1\n\
    \  elseif div == 1 then\n    count = count + 2\n  elseif div == 2 then\n    count\
    \ = count + 3\n  elseif div == 3 then\n    count = count + 4\n  elseif div ==\
    \ 4 then\n    count = count + 5\n  elseif div == 5 then\n    count = count + 6\n\
    \  elseif div == 6 then\n    count = count + 7\n  elseif div == 7 then\n    count\
    \ = count + 8\n  elseif div == 8 then\n    count = count + 9\n  elseif div ==\
    \ 9 then\n    count = count + 10\n  elseif div == 10 then\n    count = count +\
    \ 11\n  elseif div == 11 or div == 13 then\n    count = count + 1\n  else\n  \
    \  count = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkkogfdxb.lua:44:\
    \ expected: 0, actual: 5\nstack traceback:\n\t/tmp/tmpkkogfdxb.lua:44: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  elseif n % 11 == 0 and n % 13 == 0 then\n    return n\n  else\n\
    \    return fizz_buzz(n - 10) + fizz_buzz(n - 9)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_43czihc.lua:21:\
    \ expected: 0, actual: 80\nstack traceback:\n\t/tmp/tmp_43czihc.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1 --\
    \ Add 1 to the result because we found a multiple of 11.\n  elseif n % 13 == 0\
    \ then\n    return fizz_buzz(n / 13) + 1 -- Add 1 to the result because we found\
    \ a multiple of 13.\n  else\n    return fizz_buzz(n / 10) + 1 -- Add 1 to the\
    \ result because we found a multiple of 10.\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpit58xekh.lua:23:\
    \ expected: 0, actual: 6.0\nstack traceback:\n\t/tmp/tmpit58xekh.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    if n % 11 == 0 then count = count + 1 end\n    if n\
    \ % 13 == 0 then count = count + 1 end\n    n = math.floor(n/10)\n  end\n  return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjkfs23se.lua:22:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpjkfs23se.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    local remainder = n % 11\n    if remainder == 0 then\n\
    \      count = count + 1\n    end\n    local remainder2 = n % 13\n    if remainder2\
    \ == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n  end\n\
    \  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpua8__yg_.lua:28:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpua8__yg_.lua:28: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    count = count + 1\n    if n % 11 == 0 then\n      count\
    \ = count + 1\n    end\n    if n % 13 == 0 then\n      count = count + 1\n   \
    \ end\n    n = math.floor(n/10)\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpinm53s64.lua:26:\
    \ expected: 0, actual: 2\nstack traceback:\n\t/tmp/tmpinm53s64.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1 --\
    \ Add 1 to the result because we found a multiple of 11.\n  elseif n % 13 == 0\
    \ then\n    return fizz_buzz(n / 13) + 1 -- Add 1 to the result because we found\
    \ a multiple of 13.\n  else\n    return 0\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu6td6vat.lua:24:\
    \ expected: 2, actual: 7.0\nstack traceback:\n\t/tmp/tmpu6td6vat.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 0 then\n\
    \    return 0\n  end\n  if n % 11 == 0 and n % 13 == 0 then\n    return 1\n  end\n\
    \  if n % 11 == 1 then\n    return 2\n  end\n  if n % 13 == 1 then\n    return\
    \ 3\n  end\n  return 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnrww4_ws.lua:30:\
    \ expected: 3, actual: 2\nstack traceback:\n\t/tmp/tmpnrww4_ws.lua:30: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local div = math.floor(n/11)\n  if div == 0 or div == 13 then return 0\
    \ end\n  while n >= div do\n    if n % div == 0 then count = count + 1 end\n \
    \   div = div - 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3jipzya4.lua:10:\
    \ attempt to perform 'n%0'\nstack traceback:\n\t/tmp/tmp3jipzya4.lua:10: in local\
    \ 'candidate'\n\t/tmp/tmp3jipzya4.lua:22: in function 'test_humaneval'\n\nRan\
    \ 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    count = count + 1\n    if n % 11 == 0 then count =\
    \ count + 1 end\n    if n % 13 == 0 then count = count + 1 end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm3rokp1z.lua:22:\
    \ expected: 0, actual: 2\nstack traceback:\n\t/tmp/tmpm3rokp1z.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    if n % 11 == 0 then\n      count = count + 1\n    end\n\
    \    if n % 13 == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkqw2wclg.lua:26:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpkqw2wclg.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  elseif n % 11 == 0 and n % 13 == 0 then\n    return 0\n  elseif\
    \ n % 11 == 1 then\n    return 1\n  elseif n % 13 == 1 then\n    return 2\n  else\n\
    \    return 3\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6t2u7nnj.lua:25:\
    \ expected: 0, actual: 3\nstack traceback:\n\t/tmp/tmp6t2u7nnj.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 0 then\n\
    \    return 0\n  elseif n < 10 then\n    return n\n  elseif n < 100 then\n   \
    \ if n % 11 == 0 then\n      return n\n    elseif n % 13 == 0 then\n      return\
    \ n\n    else\n      return fizz_buzz(n - 10)\n    end\n  else\n    if n % 11\
    \ == 0 then\n      return fizz_buzz(n / 11)\n    elseif n % 13 == 0 then\n   \
    \   return fizz_buzz(n / 13)\n    else\n      return fizz_buzz(n / 100) + fizz_buzz(n\
    \ / 10)\n    end\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjjr33o1j.lua:36:\
    \ expected: 2, actual: 78\nstack traceback:\n\t/tmp/tmpjjr33o1j.lua:36: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  end\n  if n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1\n\
    \  end\n  if n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1\n  end\n  return\
    \ 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmqbb9fpg.lua:25:\
    \ expected: 2, actual: 7\nstack traceback:\n\t/tmp/tmpmqbb9fpg.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpubruno1z.lua:22:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpubruno1z.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1 --\
    \ Return the number of times the digit 7 appears in integers less than n which\
    \ are divisible by 11.\n  elseif n % 13 == 0 then\n    return fizz_buzz(n / 13)\
    \ + 1 -- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 13.\n  else\n    return fizz_buzz(n / 10) + 1 -- Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 10 and 11.\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyw6lk_as.lua:23:\
    \ expected: 0, actual: 6.0\nstack traceback:\n\t/tmp/tmpyw6lk_as.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  end\n  if n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1\n\
    \  end\n  if n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1\n  end\n  return\
    \ 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmqbb9fpg.lua:25:\
    \ expected: 2, actual: 7\nstack traceback:\n\t/tmp/tmpmqbb9fpg.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1 --\
    \ Add 1 because we count the digit 7 twice.\n  elseif n % 13 == 0 then\n    return\
    \ fizz_buzz(n / 13) + 1 -- Add 1 because we count the digit 7 twice.\n  else\n\
    \    return fizz_buzz(n / 10) + 1 -- Add 1 because we count the digit 7 twice.\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw6a3o7so.lua:23:\
    \ expected: 0, actual: 6.0\nstack traceback:\n\t/tmp/tmpw6a3o7so.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    count = count + 1\n    if n % 11 == 0 then\n      count\
    \ = count + 1\n    end\n    if n % 13 == 0 then\n      count = count + 1\n   \
    \ end\n    n = math.floor(n/10)\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpinm53s64.lua:26:\
    \ expected: 0, actual: 2\nstack traceback:\n\t/tmp/tmpinm53s64.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1\n \
    \ elseif n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1\n  else\n    return\
    \ fizz_buzz(n / 10) + 1\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfsg49i4_.lua:23:\
    \ expected: 0, actual: 6\nstack traceback:\n\t/tmp/tmpfsg49i4_.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 0 then\n\
    \    return nil\n  end\n  if n < 10 then\n    return n\n  end\n  if n % 11 ==\
    \ 0 and n % 13 == 0 then\n    return n\n  end\n  return fizz_buzz(n - 10)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1j_k_wir.lua:25:\
    \ expected: 2, actual: 8\nstack traceback:\n\t/tmp/tmp1j_k_wir.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n > 0 do\n    if n % 11 == 1 then count = count + 1 end\n    if n\
    \ % 13 == 1 then count = count + 1 end\n    n = math.floor(n/10)\n  end\n  return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3kh_j_1y.lua:22:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmp3kh_j_1y.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 10 then\n\
    \    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1 --\
    \ Add 1 because we count the digit 7 twice.\n  elseif n % 13 == 0 then\n    return\
    \ fizz_buzz(n / 13) + 1 -- Add 1 because we count the digit 7 twice.\n  else\n\
    \    return fizz_buzz(n / 10) + 1 -- Add 1 because we count the digit 7 twice.\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw6a3o7so.lua:23:\
    \ expected: 0, actual: 6.0\nstack traceback:\n\t/tmp/tmpw6a3o7so.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  while n >= 11 do\n    count = count + 1\n    n = math.floor(n/10)\n  end\n\
    \  while n >= 13 do\n    count = count + 1\n    n = math.floor(n/10)\n  end\n\
    \  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2aks5o2s.lua:24:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmp2aks5o2s.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 0 then\n\
    \    return 0\n  end\n  if n < 10 then\n    return 1\n  end\n  if n % 11 == 0\
    \ and n % 13 == 0 then\n    return 2\n  end\n  if n % 11 == 0 then\n    return\
    \ 3\n  end\n  if n % 13 == 0 then\n    return 4\n  end\n  return 5\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn0vw249w.lua:30:\
    \ expected: 0, actual: 5\nstack traceback:\n\t/tmp/tmpn0vw249w.lua:30: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  if n < 0 then\n\
    \    return nil\n  end\n  if n % 11 == 0 then\n    return 1\n  end\n  if n % 13\
    \ == 0 then\n    return 2\n  end\n  return 0\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8aghc9cu.lua:26:\
    \ expected: 3, actual: 0\nstack traceback:\n\t/tmp/tmp8aghc9cu.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659822303
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
    -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n  local count =\
    \ 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppbe6c5v6.lua:24:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmppbe6c5v6.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750554

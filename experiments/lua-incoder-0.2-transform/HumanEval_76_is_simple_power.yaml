name: HumanEval_76_is_simple_power
language: lua
prompt: "-- Your task is to write a function that returns true if a number x is a\
  \ simple\n-- power of n and false in other cases.\n-- x is a simple power of n if\
  \ n**int=x\n-- For example:\n-- >>> is_simple_power(1, 4)\n-- true\n-- >>> is_simple_power(2,\
  \ 2)\n-- true\n-- >>> is_simple_power(8, 2)\n-- true\n-- >>> is_simple_power(3,\
  \ 2)\n-- false\n-- >>> is_simple_power(3, 1)\n-- false\n-- >>> is_simple_power(5,\
  \ 3)\n-- false\nlocal function is_simple_power(x, n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_simple_power\n\
  \    lu.assertEquals(candidate(16, 2), true)\n    lu.assertEquals(candidate(143214,\
  \ 16), false)\n    lu.assertEquals(candidate(4, 2), true)\n    lu.assertEquals(candidate(9,\
  \ 3), true)\n    lu.assertEquals(candidate(16, 4), true)\n    lu.assertEquals(candidate(24,\
  \ 2), false)\n    lu.assertEquals(candidate(128, 4), false)\n    lu.assertEquals(candidate(12,\
  \ 6), false)\n    lu.assertEquals(candidate(1, 1), true)\n    lu.assertEquals(candidate(1,\
  \ 12), true)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  if x == n then\n    return true\n  elseif x < n then\n    return\
    \ false\n  else\n    return is_simple_power(x, n-1)\n  end\nend", "  if x == n\
    \ then\n    return true\n  elseif x < n then\n    return false\n  else\n    return\
    \ is_simple_power(x, n-1)\n  end\nend", "  -- Base case\n  if x == 1 then return\
    \ true end\n  -- If x is even, check if n is even\n  if x % 2 == 0 then\n    if\
    \ n % 2 == 0 then return true end\n  end\n  -- If x is odd, check if n is odd\n\
    \  if x % 2 ~= 0 then\n    if n % 2 == 1 then return true end\n  end\n  -- If\
    \ x is even, check if n is odd\n  if x % 2 == 0 then\n    if n % 2 == 1 then return\
    \ true end\n  end\n  -- If x is odd, check if n is even\n  if x % 2 ~= 0 then\n\
    \    if n % 2 == 0 then return true end\n  end\n  return false\nend", "  if n\
    \ == 1 then\n    return x == 1\n  else\n    return x == n^int(x)\n  end\nend",
  "  -- Base case\n  if n==1 then\n    return true\n  end\n  -- Recursive case\n \
    \ if x==n then\n    return true\n  end\n  if x%n==0 then\n    return false\n \
    \ end\n  return is_simple_power(x//n, n)\nend", "  if x == 1 then\n    return\
    \ true\n  end\n  if x == 0 then\n    return false\n  end\n  if n == 0 then\n \
    \   return false\n  end\n  if n < 0 then\n    return false\n  end\n  if n == 1\
    \ then\n    return true\n  end\n  if x == n then\n    return true\n  end\n  if\
    \ x ~= n then\n    return false\n  end\n  if n % 2 == 1 then\n    return false\n\
    \  end\n  if n % 3 == 0 then\n    return true\n  end\n  if n % 5 == 0 then\n \
    \   return false\n  end\n  if n % 7 == 0 then\n    return false\n  end\n  if n\
    \ % 11 == 0 then\n    return false\n  end\n  if n % 13 == 0 then\n    return false\n\
    \  end\n  if n % 17 == 0 then\n    return false\n  end\n  if n % 19 == 0 then\n\
    \    return false\n  end\n  if n % 23 == 0 then\n    return false\n  end\n  if\
    \ n % 29 == 0 then\n    return false\n  end\n  if n % 31 == 0 then\n    return\
    \ false\n  end\n  if n % 37 == 0 then\n    return false\n  end\n  if n % 41 ==\
    \ 0 then\n    return false\n  end\n  if n % 47 == 0 then\n    return false\n \
    \ end\n  if n % 53 == 0 then\n    return false\n  end\n  if n % 59 == 0 then\n\
    \    return false\n  end\n  if n % 61 == 0 then\n    return false\n  end\n  if\
    \ n % 67 == 0 then\n    return false\n  end\n  if n % 71 == 0 then\n    return\
    \ false\n  end\n  if n % 73 == 0 then\n    return false\n  end\n  if n % 79 ==\
    \ 0 then\n    return false\n  end\n  if n % 83 == 0 then\n    return false\n \
    \ end\n  if n % 89 == 0 then\n    return false\n  end\n  if n % 97 == 0 then\n\
    \    return false\n  end\n  if n % 101 == 0 then\n    return false\n  end\n  if\
    \ n % 103 == 0 then\n    return false\n  end\n  if n % 107 == 0 then\n    return\
    \ false\n  end\n  if n % 111 == 0 then\n    return false\n  end\n  if n % 117\
    \ == 0 then\n    return false\n  end\n  if n % 121 == 0 then\n    return false\n\
    \  end\n  if n % 127 == 0 then\n    return false\n  end\n  if n % 131 == 0 then\n\
    \    return false\n  end\n  if n % 137 == 0 then\n    return false\n  end\n  if\
    \ n % 141 == 0 then\n    return false\n  end\n  if n % 147 == 0 then\n    return\
    \ false\n  end\n  if n % 151 == 0 then\n    return false\n  end\n  if n % 157\
    \ == 0 then\n    return false\n", "  if n == 1 then return true end\n  if x ==\
    \ 1 then return false end\n  if x == 0 then return false end\n  if n == 0 then\
    \ return false end\n  if x == x then return true end\n  if n % 2 == 0 then return\
    \ is_simple_power(x / 2, n) end\n  return false\nend", "  if x == 1 then return\
    \ true end\n  if n == 0 then return false end\n  if n < 0 then return false end\n\
    \  if n == 1 then return x == n end\n  if x == x then return true end\n  if x\
    \ % n == 0 then return true end\n  return false\nend", "  if n == 1 then\n   \
    \ return x == 1\n  else\n    return x % n == 0 and is_simple_power(x / n, n)\n\
    \  end\nend", "  if n == 0 then return true end\n  if n == 1 then return x ==\
    \ 1 end\n  if n % 2 == 0 then return not is_simple_power(x, n / 2) end\n  if x\
    \ % n == 0 then return true end\n  return false\nend", "  if x == n then\n   \
    \ return true\n  elseif x < n then\n    return false\n  else\n    return is_simple_power(x,\
    \ n-1)\n  end\nend", "  if n == 1 then\n    return true\n  end\n  if x ~= n then\n\
    \    return false\n  end\n  if n == 1 then\n    return true\n  end\n  if x ~=\
    \ n then\n    return false\n  end\n  if n == 1 then\n    return true\n  end\n\
    \  if x ~= n then\n    return false\n  end\n  if n == 1 then\n    return true\n\
    \  end\n  if x ~= n then\n    return false\n  end\n  if n == 1 then\n    return\
    \ true\n  end\n  if x ~= n then\n    return false\n  end\n  if n == 1 then\n \
    \   return true\n  end\n  if x ~= n then\n    return false\n  end\n  if n == 1\
    \ then\n    return true\n  end\n  if x ~= n then\n    return false\n  end\n  if\
    \ n == 1 then\n    return true\n  end\n  if x ~= n then\n    return false\n  end\n\
    \  if n == 1 then\n    return true\n  end\n  if x ~= n then\n    return false\n\
    \  end\n  if n == 1 then\n    return true\n  end\n  if x ~= n then\n    return\
    \ false\n  end\n  if n == 1 then\n    return true\n  end\n  if x ~= n then\n \
    \   return false\n  end\n  if n == 1 then\n    return true\n  end\n  if x ~= n\
    \ then\n    return false\n  end\n  if n == 1 then\n    return true\n  end\n  if\
    \ x ~= n then\n    return false\n  end\n  if n == 1 then\n    return true\n  end\n\
    \  if x ~= n then\n    return false\n  end\n  if n == 1 then\n    return true\n\
    \  end\n  if x ~= n then\n    return false\n  end\n  if n == 1 then\n    return\
    \ true\n  end\n  if x ~= n then\n    return false\n  end\n  if n == 1 then\n \
    \   return true\n  end\n  if x ~= n then\n    return false\n  end\n  if n == 1\
    \ then\n    return true\n  end\n  if x ~= n then\n    return false\n  end\n  if\
    \ n == 1 then\n    return true\n  end\n  if x ~= n then\n    return false\n  end\n\
    \  if n == 1 then\n    return true\n  end\n  if x ~= n then\n    return false\n\
    \  end\n  if n == 1 then\n    return true\n  end\n  if x ~= n then\n    return\
    \ false\n  end\n  if n == 1 then\n    return true\n  end\n  if x ~= n then\n \
    \   return false\n  end\n  if n == 1 then\n    return true\n  end\n  if x ~= n\
    \ then\n    return false\n  end\n  if n == 1 then\n    return ", "  if n == 1\
    \ then\n    return x == 1\n  else\n    return x == n*n\n  end\nend", "  -- Base\
    \ case\n  if n==1 then\n    return true\n  end\n  -- Recursive case\n  if x%n==0\
    \ then\n    return true\n  end\n  return false\nend", "  if x == n then\n    return\
    \ true\n  elseif x < n then\n    return false\n  else\n    return is_simple_power(x,\
    \ n-1)\n  end\nend", "  if n == 1 then\n    return x == 1\n  else\n    return\
    \ x == n*n\n  end\nend", "  if x == 1 then return true end\n  if n == 0 then return\
    \ false end\n  if n == 1 then return x == n end\n  if n % 2 == 0 then return is_simple_power(x\
    \ * x, n / 2) end\n  return is_simple_power(x * x, (n - 1) / 2)\nend", "  if n\
    \ == 0 then return false end\n  if n == 1 then return x == 1 end\n  if n == 2\
    \ then return x == 1 end\n  if n % 2 == 0 then return x == (x * x) or is_simple_power(x,\
    \ n / 2) end\n  return false\nend", "  if n == 1 then return true end\n  if x\
    \ == 1 then return false end\n  if x == n then return true end\n  if x % n ==\
    \ 0 then return true end\n  return false\nend", "  if n == 0 then return false\
    \ end\n  if n == 1 then return x == 1 end\n  if n == 2 then return x == x end\n\
    \  if n % 2 == 0 then\n    return is_simple_power(x, n / 2) and\n           is_simple_power(x,\
    \ n / 2)\n  else\n    return is_simple_power(x, n / 2) and\n           is_simple_power(x,\
    \ (n - 1) / 2)\n  end\nend", "  -- Base case\n  if n == 1 then\n    return x ==\
    \ 1\n  else\n    -- Recursive case\n    return is_simple_power(x^n, n-1)\n  end\n\
    end", "  if x == n then\n    return true\n  end\n  if x < n then\n    return false\n\
    \  end\n  local i = 1\n  while i * i <= n do\n    if x * i == n then\n      return\
    \ true\n    end\n    i = i + 1\n  end\n  return false\nend", "  if n == 0 then\
    \ return false end\n  if n == 1 then return x == 1 end\n  if n == 2 then return\
    \ x == x end\n  if n % 2 == 0 then return x == (x * x) or x == (x * x * x) or\
    \ x == (x * x * x * x) end\n  return x == (x * x * x * x * x) or x == (x * x *\
    \ x * x * x * x) or x == (x * x * x * x * x * x * x)\nend", "  if n == 1 then\n\
    \    return x == 1\n  elseif n ~= 0 then\n    return x == n^x\n  else\n    return\
    \ false\n  end\nend", "  if n == 1 then\n    return true\n  end\n  if x == 1 then\n\
    \    return false\n  end\n  if x ~= n then\n    return false\n  end\n  local power\
    \ = 1\n  while n > power do\n    power = power * 2\n  end\n  local result = true\n\
    \  for i = 1, power do\n    if x % i == 0 then\n      result = false\n      break\n\
    \    end\n  end\n  return result\nend", "  if n == 1 then\n    return x == 1\n\
    \  else\n    return x % n == 0 and is_simple_power(x / n, n)\n  end\nend", " \
    \ if x == n then\n    return true\n  elseif x < n then\n    return false\n  else\n\
    \    return is_simple_power(x%n, n)\n  end\nend", "  if n == 1 then\n    return\
    \ true\n  end\n  if n == 0 then\n    return false\n  end\n  if n == -1 then\n\
    \    return false\n  end\n  if x == 0 then\n    return false\n  end\n  if x ==\
    \ 1 then\n    return true\n  end\n  if x == -1 then\n    return false\n  end\n\
    \  if x == n then\n    return true\n  end\n  if x > n then\n    return false\n\
    \  end\n  if x < -n then\n    return false\n  end\n  if x == n * n then\n    return\
    \ true\n  end\n  if x == n * n / 2 then\n    return true\n  end\n  if x == n *\
    \ n / 3 then\n    return true\n  end\n  if x == n * n / 4 then\n    return true\n\
    \  end\n  if x == n * n / 5 then\n    return true\n  end\n  if x == n * n / 6\
    \ then\n    return true\n  end\n  if x == n * n / 7 then\n    return true\n  end\n\
    \  if x == n * n / 8 then\n    return true\n  end\n  if x == n * n / 9 then\n\
    \    return true\n  end\n  if x == n * n / 10 then\n    return true\n  end\n \
    \ if x == n * n / 11 then\n    return true\n  end\n  if x == n * n / 12 then\n\
    \    return true\n  end\n  if x == n * n / 13 then\n    return true\n  end\n \
    \ if x == n * n / 14 then\n    return true\n  end\n  if x == n * n / 15 then\n\
    \    return true\n  end\n  if x == n * n / 16 then\n    return true\n  end\n \
    \ if x == n * n / 17 then\n    return true\n  end\n  if x == n * n / 18 then\n\
    \    return true\n  end\n  if x == n * n / 19 then\n    return true\n  end\n \
    \ if x == n * n / 20 then\n    return true\n  end\n  if x == n * n / 21 then\n\
    \    return true\n  end\n  if x == n * n / 22 then\n    return true\n  end\n \
    \ if x == n * n / 23 then\n    return true\n  end\n  if x == n * n / 24 then\n\
    \    return true\n  end\n  if x == n * n / 25 then\n    return true\n  end\n \
    \ if x == n * n / 26 then\n    return true\n  end\n  if x == n * n / 27 then\n\
    \    return true\n  end\n  if x == n * n / 28 then\n    return true\n  end\n \
    \ if x == n * n / 29 then\n    return true\n  end\n  if x == n * n / 30 then\n\
    \    return true\n  end\n  if x == n * n / 31 then\n    return true\n  end\n \
    \ if x == n * n / 32 then\n    return true\n  end\n  if x == n * n / 33 ", " \
    \ if n == 1 then\n    return true\n  end\n  if x == 1 then\n    return false\n\
    \  end\n  if n == 0 then\n    return false\n  end\n  if x == 0 then\n    return\
    \ false\n  end\n  if n % 2 == 0 then\n    return is_simple_power(x, n / 2)\n \
    \ end\n  return is_simple_power(x * x, n / 2)\nend", "  if x == 1 then return\
    \ true end\n  if x == 0 then return false end\n  if n == 0 then return false end\n\
    \  if n == 1 then return x == n end\n  if n % 2 == 0 then return is_simple_power(x\
    \ * x, n / 2) end\n  return false\nend", "  if x == n then\n    return true\n\
    \  elseif x < n then\n    return false\n  else\n    return is_simple_power(x,\
    \ n-1)\n  end\nend", "  if x == n then\n    return true\n  elseif x < n then\n\
    \    return false\n  else\n    return is_simple_power(x, n-1)\n  end\nend", " \
    \ if x == n then\n    return true\n  elseif x < n then\n    return false\n  else\n\
    \    return is_simple_power(x, n-1)\n  end\nend", "  if n == 0 then return false\
    \ end\n  if n == 1 then return x == 1 end\n  if n == 2 then return x == x end\n\
    \  if n % 2 == 0 then return x == x^n end\n  return false\nend", "  -- base case\n\
    \  if n == 1 then\n    return true\n  end\n  -- recursive case\n  if x % n ==\
    \ 0 then\n    return false\n  end\n  -- recursive case\n  return is_simple_power(x\
    \ / n, n)\nend", "  if n == 1 then\n    return true\n  end\n  if n == 0 then\n\
    \    return false\n  end\n  if n == -1 then\n    return false\n  end\n  if n ==\
    \ -2 then\n    return false\n  end\n  if n == -3 then\n    return false\n  end\n\
    \  if n == -4 then\n    return false\n  end\n  if n == -5 then\n    return false\n\
    \  end\n  if n == -6 then\n    return false\n  end\n  if n == -7 then\n    return\
    \ false\n  end\n  if n == -8 then\n    return false\n  end\n  if n == -9 then\n\
    \    return false\n  end\n  if n == -10 then\n    return false\n  end\n  if n\
    \ == -11 then\n    return false\n  end\n  if n == -12 then\n    return false\n\
    \  end\n  if n == -13 then\n    return false\n  end\n  if n == -14 then\n    return\
    \ false\n  end\n  if n == -15 then\n    return false\n  end\n  if n == -16 then\n\
    \    return false\n  end\n  if n == -17 then\n    return false\n  end\n  if n\
    \ == -18 then\n    return false\n  end\n  if n == -19 then\n    return false\n\
    \  end\n  if n == -20 then\n    return false\n  end\n  if n == -21 then\n    return\
    \ false\n  end\n  if n == -22 then\n    return false\n  end\n  if n == -23 then\n\
    \    return false\n  end\n  if n == -24 then\n    return false\n  end\n  if n\
    \ == -25 then\n    return false\n  end\n  if n == -26 then\n    return false\n\
    \  end\n  if n == -27 then\n    return false\n  end\n  if n == -28 then\n    return\
    \ false\n  end\n  if n == -29 then\n    return false\n  end\n  if n == -30 then\n\
    \    return false\n  end\n  if n == -31 then\n    return false\n  end\n  if n\
    \ == -32 then\n    return false\n  end\n  if n == -33 then\n    return false\n\
    \  end\n  if n == -34 then\n    return false\n  end\n  if n == -35 then\n    return\
    \ false\n  end\n  if n == -36 then\n    return false\n  end\n  if n == -37 then\n\
    \    return false\n  end\n  if n == -38 then\n    return false\n  end\n  if n\
    \ == -39 then\n    return false\n  end\n  if n == -40 then\n    return false\n\
    \  end\n  if n == -41 then\n    return false\n  end\n  if n == -42 then\n    return\
    \ false\n  end\n  if n == -43 then\n    return false\n  end\n  if n == -44 then\n\
    \    return false\n  end\n  if n == -45 then\n", "  if x == 1 then return true\
    \ end\n  if n == 1 then return true end\n  if n == 0 then return false end\n \
    \ if x < 0 then return false end\n  if x > n then return false end\n  if x ==\
    \ n then return true end\n  if x % n == 0 then return true end\n  return false\n\
    end", "  if n == 0 then return false end\n  if n == 1 then return x == 1 end\n\
    \  if x == 1 then return true end\n  if n % 2 == 0 then return is_simple_power(x,\
    \ n / 2) end\n  if n % 3 == 0 then return is_simple_power(x, n / 3) end\n  return\
    \ false\nend", "  if x == n then\n    return true\n  elseif x < n then\n    return\
    \ false\n  else\n    return is_simple_power(x, n-1)\n  end\nend", "  if n == 1\
    \ then\n    return x == 1\n  else\n    return x % n == 0 and is_simple_power(x\
    \ / n, n)\n  end\nend", "  if x == n then\n    return true\n  elseif x < n then\n\
    \    return false\n  else\n    return is_simple_power(x, n-1)\n  end\nend", " \
    \ if n == 1 then\n    return x == 1\n  elseif n == 0 then\n    return x == 0\n\
    \  elseif n <= 0 then\n    return false\n  else\n    return is_simple_power(x,\
    \ n-1) and is_simple_power(x*x, n)\n  end\nend", "  if n == 0 then\n    return\
    \ true\n  end\n  if n == 1 then\n    return x == 1\n  end\n  if n % 2 == 0 then\n\
    \    return is_simple_power(x, n / 2)\n  end\n  return is_simple_power(x * x,\
    \ n / 2)\nend", "  -- Base case\n  if n == 1 then\n    return x == 1\n  else\n\
    \    -- Recursive case\n    return is_simple_power(x^n, n-1)\n  end\nend", " \
    \ if n == 1 then\n    return true\n  end\n  if n == 0 then\n    return false\n\
    \  end\n  if n == -1 then\n    return false\n  end\n  if n == -2 then\n    return\
    \ false\n  end\n  if n == -3 then\n    return false\n  end\n  if n == -4 then\n\
    \    return false\n  end\n  if n == -5 then\n    return false\n  end\n  if n ==\
    \ -6 then\n    return false\n  end\n  if n == -7 then\n    return false\n  end\n\
    \  if n == -8 then\n    return false\n  end\n  if n == -9 then\n    return false\n\
    \  end\n  if n == -10 then\n    return false\n  end\n  if n == -11 then\n    return\
    \ false\n  end\n  if n == -12 then\n    return false\n  end\n  if n == -13 then\n\
    \    return false\n  end\n  if n == -14 then\n    return false\n  end\n  if n\
    \ == -15 then\n    return false\n  end\n  if n == -16 then\n    return false\n\
    \  end\n  if n == -17 then\n    return false\n  end\n  if n == -18 then\n    return\
    \ false\n  end\n  if n == -19 then\n    return false\n  end\n  if n == -20 then\n\
    \    return false\n  end\n  if n == -21 then\n    return false\n  end\n  if n\
    \ == -22 then\n    return false\n  end\n  if n == -23 then\n    return false\n\
    \  end\n  if n == -24 then\n    return false\n  end\n  if n == -25 then\n    return\
    \ false\n  end\n  if n == -26 then\n    return false\n  end\n  if n == -27 then\n\
    \    return false\n  end\n  if n == -28 then\n    return false\n  end\n  if n\
    \ == -29 then\n    return false\n  end\n  if n == -30 then\n    return false\n\
    \  end\n  if n == -31 then\n    return false\n  end\n  if n == -32 then\n    return\
    \ false\n  end\n  if n == -33 then\n    return false\n  end\n  if n == -34 then\n\
    \    return false\n  end\n  if n == -35 then\n    return false\n  end\n  if n\
    \ == -36 then\n    return false\n  end\n  if n == -37 then\n    return false\n\
    \  end\n  if n == -38 then\n    return false\n  end\n  if n == -39 then\n    return\
    \ false\n  end\n  if n == -40 then\n    return false\n  end\n  if n == -41 then\n\
    \    return false\n  end\n  if n == -42 then\n    return false\n  end\n  if n\
    \ == -43 then\n    return false\n  end\n  if n == -44 then\n    return false\n\
    \  end\n  if n == -45 then\n", "  if x == 1 then return true end\n  if x == 0\
    \ then return false end\n  if n == 0 then return false end\n  if n < 0 then return\
    \ false end\n  if n == 1 then return true end\n  if x == x then return true end\n\
    \  if x == x*x then return true end\n  if x == x*x*x then return true end\n  if\
    \ x == x*x*x*x then return true end\n  return false\nend", "  if n == 0 then return\
    \ false end\n  if n == 1 then return x == 1 end\n  if n % 2 == 0 then return is_simple_power(x,\
    \ n / 2) end\n  return is_simple_power(x * x, n / 2)\nend", "  if n == 1 then\n\
    \    return true\n  end\n  if n == 0 then\n    return false\n  end\n  if n ==\
    \ -1 then\n    return false\n  end\n  if n % 2 == 0 then\n    return is_simple_power(x,\
    \ n / 2)\n  end\n  return is_simple_power(x * x, n / 2)\nend", "  -- Base case\n\
    \  if n == 1 then\n    return true\n  end\n  -- Recursive case\n  if x % n ==\
    \ 0 then\n    return is_simple_power(x / n, n)\n  end\n  return false\nend", " \
    \ if x == n then\n    return true\n  elseif x < n then\n    return false\n  else\n\
    \    return is_simple_power(x, n-1)\n  end\nend", "  if n == 1 then\n    return\
    \ true\n  end\n  if n == 0 then\n    return false\n  end\n  if n % 2 == 0 then\n\
    \    return is_simple_power(x, n / 2)\n  end\n  return is_simple_power(x * x,\
    \ n / 2)\nend", "  if x == n then\n    return true\n  elseif x < n then\n    return\
    \ false\n  else\n    return is_simple_power(x, n-1)\n  end\nend", "  if x == n\
    \ then\n    return true\n  else\n    return false\n  end\nend", "  if n == 0 then\
    \ return true end\n  if n == 1 then return x == 1 end\n  if n == 2 then return\
    \ x == x end\n  if n % 2 == 0 then return x == (x * x) or is_simple_power(x, n\
    \ / 2) end\n  return false\nend", "  if n == 1 then\n    return x == 1\n  else\n\
    \    return x % n == 0 and is_simple_power(x / n, n)\n  end\nend", "  if n ==\
    \ 1 then\n    return x == 1\n  else\n    return x % n == 0 and is_simple_power(x\
    \ / n, n)\n  end\nend", "  if n == 1 then\n    return true\n  end\n  if x == 1\
    \ then\n    return false\n  end\n  if x < n then\n    return false\n  end\n  if\
    \ n % x == 0 then\n    return false\n  end\n  local i = 1\n  while i * i <= n\
    \ do\n    if x % i == 0 then\n      return false\n    end\n    i = i * i\n  end\n\
    \  return true\nend", "  if x == 1 then return true end\n  if x == 0 then return\
    \ false end\n  if n == 0 then return false end\n  if n == 1 then return x == n\
    \ end\n  if n == 2 then return x == n*n end\n  if n % 2 == 0 then return x ==\
    \ n*n end\n  if n % 3 == 0 then return x == n*n*n end\n  return false\nend", " \
    \ -- Base case\n  if n == 1 then\n    return x == 1\n  else\n    -- Recursive\
    \ case\n    return is_simple_power(x^n, n-1)\n  end\nend", "  if n == 1 then\n\
    \    return true\n  end\n  if x == 1 then\n    return false\n  end\n  if x % n\
    \ ~= 0 then\n    return false\n  end\n  return is_simple_power(x / n, n)\nend",
  "  if x == 1 then return true end\n  if x == 0 then return false end\n  if n ==\
    \ 0 then return false end\n  if n == 1 then return x == n end\n  if n % 2 == 0\
    \ then return is_simple_power(x//2, n-1) or is_simple_power(x//2, n) end\n  return\
    \ false\nend", "  if n == 1 then\n    return x == 1\n  else\n    return x == n^x\n\
    \  end\nend", "  if n == 1 then return true end\n  if n == 0 then return false\
    \ end\n  if n == -1 then return false end\n  if x == 0 then return false end\n\
    \  if x == 1 then return true end\n  if x == -1 then return true end\n  if x ==\
    \ -2 then return true end\n  if x == -3 then return true end\n  if x == -4 then\
    \ return true end\n  if x == -5 then return true end\n  if x == -6 then return\
    \ true end\n  if x == -7 then return true end\n  if x == -8 then return true end\n\
    \  if x == -9 then return true end\n  if x == -10 then return true end\n  if x\
    \ == -11 then return true end\n  if x == -12 then return true end\n  if x == -13\
    \ then return true end\n  if x == -14 then return true end\n  if x == -15 then\
    \ return true end\n  if x == -16 then return true end\n  if x == -17 then return\
    \ true end\n  if x == -18 then return true end\n  if x == -19 then return true\
    \ end\n  if x == -20 then return true end\n  if x == -21 then return true end\n\
    \  if x == -22 then return true end\n  if x == -23 then return true end\n  if\
    \ x == -24 then return true end\n  if x == -25 then return true end\n  if x ==\
    \ -26 then return true end\n  if x == -27 then return true end\n  if x == -28\
    \ then return true end\n  if x == -29 then return true end\n  if x == -30 then\
    \ return true end\n  if x == -31 then return true end\n  if x == -32 then return\
    \ true end\n  if x == -33 then return true end\n  if x == -34 then return true\
    \ end\n  if x == -35 then return true end\n  if x == -36 then return true end\n\
    \  if x == -37 then return true end\n  if x == -38 then return true end\n  if\
    \ x == -39 then return true end\n  if x == -40 then return true end\n  if x ==\
    \ -41 then return true end\n  if x == -42 then return true end\n  if x == -43\
    \ then return true end\n  if x == -44 then return true end\n  if x == -45 then\
    \ return true end\n  if x == -46 then return true end\n  if x == -47 then return\
    \ true end\n  if x == -48 then return true end\n  if x == -49 then return true\
    \ end\n  if x == -50 then return true end\n  if x == -51 then return true end\n\
    \  if x == -52 then return true ", "  if x == n then\n    return true\n  elseif\
    \ x < n then\n    return false\n  else\n    return is_simple_power(x, n-1)\n \
    \ end\nend", "  if x == n then\n    return true\n  end\n  if x < n then\n    return\
    \ false\n  end\n  local i = 1\n  while i <= n do\n    local t = x\n    x = x *\
    \ x\n    if x == t then\n      return true\n    end\n    i = i + 1\n  end\n  return\
    \ false\nend", "  if x == n then\n    return true\n  elseif x < n then\n    return\
    \ false\n  else\n    return is_simple_power(x, n-1)\n  end\nend", "  if x == n\
    \ then\n    return true\n  elseif x < n then\n    return false\n  else\n    return\
    \ is_simple_power(x, n-1)\n  end\nend", "  if n == 1 then\n    return true\n \
    \ end\n  if x == 1 then\n    return false\n  end\n  if x ~= n then\n    return\
    \ false\n  end\n  if n % 2 == 0 then\n    return is_simple_power(x, n / 2)\n \
    \ end\n  return is_simple_power(x, n / 2) or is_simple_power(x, n / 4)\nend",
  "  -- Base case\n  if n == 1 then\n    return x == 1\n  end\n  -- Recursive case\n\
    \  if x < n then\n    return false\n  else\n    return is_simple_power(x%n, n-1)\n\
    \  end\nend", "  if n == 1 then return true end\n  if n == 0 then return false\
    \ end\n  if x < 0 then return false end\n  if x > n then return false end\n  local\
    \ function is_simple_power_of_n(x)\n    if x == 1 then return true end\n    if\
    \ x == 0 then return false end\n    if x < 0 then return false end\n    if x >\
    \ n then return false end\n    local function is_simple_power_of_n_aux(x)\n  \
    \    if x == 1 then return true end\n      if x == 0 then return false end\n \
    \     if x < 0 then return false end\n      if x > n then return false end\n \
    \     local function is_simple_power_of_n_aux(x2)\n        if x2 == 1 then return\
    \ true end\n        if x2 == 0 then return false end\n        if x2 < 0 then return\
    \ false end\n        if x2 > n then return false end\n        return is_simple_power_of_n_aux(x2\
    \ * x)\n      end\n      return is_simple_power_of_n_aux(x)\n    end\n    return\
    \ is_simple_power_of_n_aux(x)\n  end\n  return is_simple_power_of_n(x)\nend",
  "  if n == 1 then return true end\n  if n == 0 then return false end\n  if n ==\
    \ -1 then return is_simple_power(x, n+1) end\n  if x < 0 then return false end\n\
    \  if x ~= x then return false end\n  if n >= #x then return false end\n  local\
    \ i = 1\n  while i <= n do\n    local tmp = x\n    x = x * x\n    if x ~= tmp\
    \ then return false end\n    i = i + 1\n  end\n  return true\nend", "  if x ==\
    \ n then\n    return true\n  elseif x < n then\n    return false\n  else\n   \
    \ return is_simple_power(x, n-1)\n  end\nend", "  if x == n then\n    return true\n\
    \  elseif x < n then\n    return false\n  else\n    return is_simple_power(x,\
    \ n-1)\n  end\nend", "  -- Base case\n  if n == 1 then\n    return x == 1\n  end",
  "  if n == 1 then return true end\n  if n == 0 then return false end\n  if n % 2\
    \ == 0 then return is_simple_power(x, n / 2) end\n  return is_simple_power(x *\
    \ x, n / 2)\nend", "  if x == n then\n    return true\n  end\n  if x < n then\n\
    \    return false\n  end\n  local i = 1\n  while i * i <= n do\n    if x * i ==\
    \ n then\n      return true\n    end\n    i = i + 1\n  end\n  return false\nend",
  "  if n == 1 then\n    return x == 1\n  else\n    return x % n == 0 and is_simple_power(x\
    \ / n, n)\n  end\nend", "  if n == 1 then return true end\n  if n == 0 then return\
    \ false end\n  if n == -1 then return is_simple_power(x, n+1) end\n  if x == 1\
    \ then return true end\n  if x == 0 then return false end\n  if x == -1 then return\
    \ is_simple_power(x, n-1) end\n  if x == n then return true end\n  if x % n ==\
    \ 0 then return true end\n  return false\nend", "  if n == 1 then\n    return\
    \ x == 1\n  else\n    return x % n == 0 and is_simple_power(x / n, n)\n  end\n\
    end", "  if x == n then\n    return true\n  end\n  if x < n then\n    return false\n\
    \  end\n  local i = 1\n  while i <= n do\n    if x%n == 0 then\n      return false\n\
    \    end\n    x = x/n\n    i = i + 1\n  end\n  return true\nend", "  if n == 1\
    \ then\n    return x == 1\n  else\n    return x % n == 0 and is_simple_power(x\
    \ / n, n)\n  end\nend", "  if x == n then\n    return true\n  elseif x < n then\n\
    \    return false\n  else\n    return is_simple_power(x^n, n)\n  end\nend", " \
    \ -- Base case\n  if n == 1 then\n    return x == 1\n  else\n    -- Recursive\
    \ case\n    return is_simple_power(x^n, n-1)\n  end\nend", "  if n == 1 then\n\
    \    return x == 1\n  else\n    return x % n == 0 and is_simple_power(x / n, n)\n\
    \  end\nend", "  if x == n then\n    return true\n  elseif x < n then\n    return\
    \ false\n  else\n    return is_simple_power(x, n-1)\n  end\nend", "  if x == n\
    \ then\n    return true\n  elseif x < n then\n    return false\n  else\n    return\
    \ is_simple_power(x, n-1)\n  end\nend", "  if x == n then\n    return true\n \
    \ elseif x < n then\n    return false\n  else\n    return is_simple_power(x, n-1)\n\
    \  end\nend", "  if n == 0 then return false end\n  if n == 1 then return x ==\
    \ 1 end\n  if x == 1 then return true end\n  if n % 2 == 0 then return is_simple_power(x,\
    \ n / 2) end\n  if x % n == 0 then return is_simple_power(x, n / 2) end\n  return\
    \ false\nend", "  if x == 1 then return true end\n  if x == 0 then return false\
    \ end\n  if n == 0 then return false end\n  if n == 1 then return x == n end\n\
    \  if n % 2 == 0 then return not is_simple_power(x, n / 2) end\n  if x % n ==\
    \ 0 then return not is_simple_power(x, n / n) end\n  return false\nend", "  --\
    \ Base case\n  if n == 1 then\n    return true\n  end\n  -- Recursive case\n \
    \ if x % n == 0 then\n    return true\n  end\n  return false\nend", "  if n ==\
    \ 1 then return true end\n  if x == n then return true end\n  if x < n then return\
    \ false end\n  if x > n then return false end\n  local i = 1\n  while i <= n do\n\
    \    if x%n == 0 then return false end\n    x = x*n\n    i = i + 1\n  end\n  return\
    \ true\nend", "  if n == 1 then\n    return x == 1\n  else\n    return x % n ==\
    \ 0 and is_simple_power(x / n, n)\n  end\nend", "  if n == 1 then\n    return\
    \ x == 1\n  else\n    return x % n == 0 and is_simple_power(x / n, n)\n  end\n\
    end", "  if x == 1 then return true end\n  if x == 0 then return false end\n \
    \ if n == 0 then return false end\n  if n == 1 then return x == n end\n  if n\
    \ % 2 == 0 then return is_simple_power(x * x, n / 2) end\n  return false\nend",
  "  if x == n then\n    return true\n  elseif x < n then\n    return false\n  else\n\
    \    return is_simple_power(x^n, n)\n  end\nend", "  if x == n then\n    return\
    \ true\n  end\n  if x < n then\n    return false\n  end\n  local i = 1\n  while\
    \ i <= n do\n    if x%n == 0 then\n      return false\n    end\n    x = x/n\n\
    \    i = i + 1\n  end\n  return true\nend", "  if n == 1 then\n    return x ==\
    \ 1\n  else\n    return x % n == 0 and is_simple_power(x / n, n)\n  end\nend",
  "  if x == 1 then return true end\n  if n == 0 then return false end\n  if n ==\
    \ 1 then return x == n end\n  if n % 2 == 0 then return is_simple_power(x * x,\
    \ n / 2) end\n  return is_simple_power(x * x, (n - 1) / 2)\nend", "  if x == n\
    \ then\n    return true\n  end\n  if x < n then\n    return false\n  end\n  if\
    \ n == 1 then\n    return true\n  end\n  if n == 2 then\n    return x == 1\n \
    \ end\n  if n % 2 == 0 then\n    return is_simple_power(x, n / 2)\n  end\n  return\
    \ is_simple_power(x, (n / 2) + 1)\nend", "  if n == 1 then\n    return x == 1\n\
    \  else\n    return x % n == 0 and is_simple_power(x / n, n)\n  end\nend", " \
    \ if x == n then\n    return true\n  elseif x < n then\n    return false\n  else\n\
    \    return is_simple_power(x, n-1)\n  end\nend", "  if n == 1 then return true\
    \ end\n  if x == 1 then return false end\n  if x == 0 then return false end\n\
    \  if n == 0 then return false end\n  if n == -1 then return false end\n  if x\
    \ == -1 then return false end\n  if x == -n then return true end\n  if n == -n\
    \ then return true end\n  if x == -x then return true end\n  if n == -n then return\
    \ true end\n  if n == -x then return true end\n  if x == -x then return true end\n\
    \  if n == -n then return true end\n  if x == -x then return true end\n  if n\
    \ == -n then return true end\n  if x == -x then return true end\n  if n == -n\
    \ then return true end\n  if x == -x then return true end\n  if n == -n then return\
    \ true end\n  if x == -x then return true end\n  if n == -n then return true end\n\
    \  if x == -x then return true end\n  if n == -n then return true end\n  if x\
    \ == -x then return true end\n  if n == -n then return true end\n  if x == -x\
    \ then return true end\n  if n == -n then return true end\n  if x == -x then return\
    \ true end\n  if n == -n then return true end\n  if x == -x then return true end\n\
    \  if n == -n then return true end\n  if x == -x then return true end\n  if n\
    \ == -n then return true end\n  if x == -x then return true end\n  if n == -n\
    \ then return true end\n  if x == -x then return true end\n  if n == -n then return\
    \ true end\n  if x == -x then return true end\n  if n == -n then return true end\n\
    \  if x == -x then return true end\n  if n == -n then return true end\n  if x\
    \ == -x then return true end\n  if n == -n then return true end\n  if x == -x\
    \ then return true end\n  if n == -n then return true end\n  if x == -x then return\
    \ true end\n  if n == -n then return true end\n  if x == -x then return true end\n\
    \  if n == -n then return true end\n  if x == -x then return true end\n  if n\
    \ == -n then return true end\n  if x == -x then return true end\n  if n == -n\
    \ then return true end\n  if x == -x then return true end\n  if n == -n then return\
    \ true end\n  if x == -x then return true end\n  if n == -n then return true end\n\
    \  if x == -x then ", "  if n == 1 then\n    return true\n  end\n  if x ~= x or\
    \ n == 0 then\n    return false\n  end\n  if n ~= 1 then\n    return is_simple_power(x\
    \ / n, n-1)\n  end\n  return true\nend", "  if n == 1 then return true end\n \
    \ if n == 0 then return false end\n  if n == -1 then return false end\n  if n\
    \ == -2 then return true end\n  if n == -3 then return false end\n  if n == -4\
    \ then return true end\n  if n == -5 then return false end\n  if n == -6 then\
    \ return true end\n  if n == -7 then return false end\n  if n == -8 then return\
    \ true end\n  if n == -9 then return false end\n  if n == -10 then return true\
    \ end\n  if n == -11 then return false end\n  if n == -12 then return true end\n\
    \  if n == -13 then return false end\n  if n == -14 then return true end\n  if\
    \ n == -15 then return false end\n  if n == -16 then return true end\n  if n ==\
    \ -17 then return false end\n  if n == -18 then return true end\n  if n == -19\
    \ then return false end\n  if n == -20 then return true end\n  if n == -21 then\
    \ return false end\n  if n == -22 then return true end\n  if n == -23 then return\
    \ false end\n  if n == -24 then return true end\n  if n == -25 then return false\
    \ end\n  if n == -26 then return true end\n  if n == -27 then return false end\n\
    \  if n == -28 then return true end\n  if n == -29 then return false end\n  if\
    \ n == -30 then return true end\n  if n == -31 then return false end\n  if n ==\
    \ -32 then return true end\n  if n == -33 then return false end\n  if n == -34\
    \ then return true end\n  if n == -35 then return false end\n  if n == -36 then\
    \ return true end\n  if n == -37 then return false end\n  if n == -38 then return\
    \ true end\n  if n == -39 then return false end\n  if n == -40 then return true\
    \ end\n  if n == -41 then return false end\n  if n == -42 then return true end\n\
    \  if n == -43 then return false end\n  if n == -44 then return true end\n  if\
    \ n == -45 then return false end\n  if n == -46 then return true end\n  if n ==\
    \ -47 then return false end\n  if n == -48 then return true end\n  if n == -49\
    \ then return false end\n  if n == -50 then return true end\n  if n == -51 then\
    \ return false end\n  if n == -52 then return true end\n  if n == -53 then return\
    \ false end\n  if n == -54 then return true end\n  if n == -", "  if x == n then\n\
    \    return true\n  end\n  if x < n then\n    return false\n  end\n  if n == 1\
    \ then\n    return true\n  end\n  if n % 2 == 0 then\n    return is_simple_power(x,\
    \ n / 2)\n  end\n  return is_simple_power(x, n / 2) or\n         is_simple_power(x,\
    \ (n / 2) ^ 2)\nend", "  if n == 0 then return true end\n  if n == 1 then return\
    \ x == 1 end\n  if n == 2 then return x == x end\n  if n % 2 == 0 then return\
    \ x == (x * x) or is_simple_power(x, n / 2) end\n  return false\nend", "  if n\
    \ == 0 then\n    return true\n  end\n  if n == 1 then\n    return x == 1\n  end\n\
    \  if n % 2 == 0 then\n    return is_simple_power(x, n / 2)\n  end\n  return is_simple_power(x\
    \ * x, n / 2)\nend", "  if n == 1 then\n    return true\n  end\n  if x ~= n then\n\
    \    return false\n  end\n  if n <= 1 then\n    return true\n  end\n  if x ==\
    \ 1 then\n    return true\n  end\n  if x == n then\n    return true\n  end\n \
    \ if x ~= 1 then\n    return false\n  end\n  if n >= 2 then\n    return is_simple_power(x,\
    \ n-1)\n  end\n  return false\nend", "  if x == n then\n    return true\n  end\n\
    \  if x < n then\n    return false\n  end\n  local i = 1\n  while i < n do\n \
    \   if x % n == 0 then\n      return false\n    end\n    x = x * x\n    i = i\
    \ + 1\n  end\n  return true\nend", "  if n == 1 then return true end\n  if n ==\
    \ 0 then return false end\n  if n == -1 then return false end\n  if n == -2 then\
    \ return false end\n  if n == -3 then return false end\n  if n == -4 then return\
    \ false end\n  if n == -5 then return false end\n  if n == -6 then return false\
    \ end\n  if n == -7 then return false end\n  if n == -8 then return false end\n\
    \  if n == -9 then return false end\n  if n == -10 then return false end\n  if\
    \ n == -11 then return false end\n  if n == -12 then return false end\n  if n\
    \ == -13 then return false end\n  if n == -14 then return false end\n  if n ==\
    \ -15 then return false end\n  if n == -16 then return false end\n  if n == -17\
    \ then return false end\n  if n == -18 then return false end\n  if n == -19 then\
    \ return false end\n  if n == -20 then return false end\n  if n == -21 then return\
    \ false end\n  if n == -22 then return false end\n  if n == -23 then return false\
    \ end\n  if n == -24 then return false end\n  if n == -25 then return false end\n\
    \  if n == -26 then return false end\n  if n == -27 then return false end\n  if\
    \ n == -28 then return false end\n  if n == -29 then return false end\n  if n\
    \ == -30 then return false end\n  if n == -31 then return false end\n  if n ==\
    \ -32 then return false end\n  if n == -33 then return false end\n  if n == -34\
    \ then return false end\n  if n == -35 then return false end\n  if n == -36 then\
    \ return false end\n  if n == -37 then return false end\n  if n == -38 then return\
    \ false end\n  if n == -39 then return false end\n  if n == -40 then return false\
    \ end\n  if n == -41 then return false end\n  if n == -42 then return false end\n\
    \  if n == -43 then return false end\n  if n == -44 then return false end\n  if\
    \ n == -45 then return false end\n  if n == -46 then return false end\n  if n\
    \ == -47 then return false end\n  if n == -48 then return false end\n  if n ==\
    \ -49 then return false end\n  if n == -50 then return false end\n  if n == -51\
    \ then return false end\n  if n == -52 then return false end\n  if n == -53 then\
    \ return false end\n  if n == -54 then return false end\n  if n == -", "  if n\
    \ == 1 then\n    return true\n  else\n    return (x == n) and (not is_simple_power(x,\
    \ n-1))\n  end\nend", "  if x == n then\n    return true\n  end\n  if x < n then\n\
    \    return false\n  end\n  local i = 1\n  while i < n do\n    if x%n == 0 then\n\
    \      return false\n    end\n    x = x/n\n    i = i + 1\n  end\n  return true\n\
    end", "  if x == 1 then\n    return true\n  elseif x == 0 then\n    return false\n\
    \  elseif n <= 0 then\n    return false\n  elseif n == 1 then\n    return x ==\
    \ n\n  else\n    return is_simple_power(x, n-1) and is_simple_power(x*x, n)\n\
    \  end\nend", "  if n == 0 then return false end\n  if n == 1 then return x ==\
    \ 1 end\n  if n % 2 == 0 then return x == (x * x) or is_simple_power(x * x, n\
    \ / 2) end\n  return x == (x * x) or is_simple_power(x * x, (n - 1) / 2)\nend",
  "  if n == 0 then return false end\n  if n == 1 then return x == 1 end\n  if x ~=\
    \ x then return false end\n  if n == 1 then return true end\n  if n % 2 == 0 then\
    \ return is_simple_power(x, n / 2) end\n  if n % 3 == 0 then return is_simple_power(x,\
    \ n / 3) end\n  return false\nend", "  if x == n then\n    return true\n  elseif\
    \ x < n then\n    return false\n  else\n    return is_simple_power(x, n-1)\n \
    \ end\nend", "  if n == 0 then return true end\n  if n == 1 then return x == 1\
    \ end\n  if n % 2 == 0 then return x == (x * x) or is_simple_power(x, n / 2) end\n\
    \  return false\nend", "  if n == 1 then\n    return x == 1\n  else\n    return\
    \ x % n == 0 and is_simple_power(x / n, n)\n  end\nend", "  if x == n then\n \
    \   return true\n  elseif n < 0 then\n    return false\n  elseif n == 0 then\n\
    \    return false\n  else\n    return is_simple_power(x, n-1)\n  end\nend", " \
    \ if x == n then\n    return true\n  elseif x < n then\n    return false\n  else\n\
    \    return is_simple_power(x, n-1)\n  end\nend", "  if n == 1 then\n    return\
    \ x == 1\n  else\n    return x % n == 0 and is_simple_power(x / n, n)\n  end\n\
    end", "  if n == 1 then\n    return x == 1\n  else\n    return x % n == 0 and\
    \ is_simple_power(x / n, n)\n  end\nend", "  if x == n then\n    return true\n\
    \  elseif x < n then\n    return false\n  else\n    return is_simple_power(x,\
    \ n-1)\n  end\nend", "  if x == 1 then\n    return n == 1\n  else\n    return\
    \ ((n-1) * x) % n == 0\n  end\nend", "  if x == 1 then return true end\n  if x\
    \ == 0 then return false end\n  if n == 0 then return false end\n  if n == 1 then\
    \ return x == n end\n  if n % 2 == 0 then return is_simple_power(x, n / 2) end\n\
    \  return is_simple_power(x * x, n / 2)\nend", "  -- Base cases\n  if x == 1 then\
    \ return true end\n  if x == 0 then return false end\n  if n == 0 then return\
    \ false end\n  if n == 1 then return true end", "  if x == 1 then\n    return\
    \ true\n  end\n  if n == 0 then\n    return false\n  end\n  if n == 1 then\n \
    \   return x == n\n  end\n  if n % 2 == 0 then\n    return is_simple_power(x,\
    \ n / 2)\n  end\n  return is_simple_power(x * x, n / 2)\nend", "  if x == n then\n\
    \    return true\n  end\n  if x < n then\n    return false\n  end\n  local r =\
    \ 1\n  while n > 1 do\n    r = r * x\n    n = n - 1\n  end\n  return r == x\n\
    end", "  if n == 0 then return false end\n  if n == 1 then return x == 1 end\n\
    \  if x == 1 then return true end\n  if n % 2 == 0 then return is_simple_power(x,\
    \ n / 2) end\n  if x % n == 0 then return true end\n  return false\nend", "  if\
    \ x == n then\n    return true\n  else\n    return false\n  end\nend", "  if x\
    \ == n then\n    return true\n  elseif x < n then\n    return false\n  else\n\
    \    return is_simple_power(x, n-1)\n  end\nend", "  if n == 1 then\n    return\
    \ true\n  end\n  if n == 0 then\n    return false\n  end\n  if n == -1 then\n\
    \    return false\n  end\n  if n == -2 then\n    return false\n  end\n  if n ==\
    \ -3 then\n    return false\n  end\n  if n == -4 then\n    return false\n  end\n\
    \  if n == -5 then\n    return false\n  end\n  if n == -6 then\n    return false\n\
    \  end\n  if n == -7 then\n    return false\n  end\n  if n == -8 then\n    return\
    \ false\n  end\n  if n == -9 then\n    return false\n  end\n  if n == -10 then\n\
    \    return false\n  end\n  if n == -11 then\n    return false\n  end\n  if n\
    \ == -12 then\n    return false\n  end\n  if n == -13 then\n    return false\n\
    \  end\n  if n == -14 then\n    return false\n  end\n  if n == -15 then\n    return\
    \ false\n  end\n  if n == -16 then\n    return false\n  end\n  if n == -17 then\n\
    \    return false\n  end\n  if n == -18 then\n    return false\n  end\n  if n\
    \ == -19 then\n    return false\n  end\n  if n == -20 then\n    return false\n\
    \  end\n  if n == -21 then\n    return false\n  end\n  if n == -22 then\n    return\
    \ false\n  end\n  if n == -23 then\n    return false\n  end\n  if n == -24 then\n\
    \    return false\n  end\n  if n == -25 then\n    return false\n  end\n  if n\
    \ == -26 then\n    return false\n  end\n  if n == -27 then\n    return false\n\
    \  end\n  if n == -28 then\n    return false\n  end\n  if n == -29 then\n    return\
    \ false\n  end\n  if n == -30 then\n    return false\n  end\n  if n == -31 then\n\
    \    return false\n  end\n  if n == -32 then\n    return false\n  end\n  if n\
    \ == -33 then\n    return false\n  end\n  if n == -34 then\n    return false\n\
    \  end\n  if n == -35 then\n    return false\n  end\n  if n == -36 then\n    return\
    \ false\n  end\n  if n == -37 then\n    return false\n  end\n  if n == -38 then\n\
    \    return false\n  end\n  if n == -39 then\n    return false\n  end\n  if n\
    \ == -40 then\n    return false\n  end\n  if n == -41 then\n    return false\n\
    \  end\n  if n == -42 then\n    return false\n  end\n  if n == -43 then\n    return\
    \ false\n  end\n  if n == -44 then\n    return false\n  end\n  if n == -45 then\n",
  "  if x == 1 then\n    return true\n  end\n  if n == 0 then\n    return false\n\
    \  end\n  if n == 1 then\n    return x == 1\n  end\n  if n % 2 == 0 then\n   \
    \ return is_simple_power(x, n / 2)\n  end\n  return is_simple_power(x * x, n /\
    \ 2)\nend", "  if x == n then\n    return true\n  end\n  if x ~= n then\n    return\
    \ false\n  end\n  if n == 1 then\n    return true\n  end\n  if n == 0 then\n \
    \   return false\n  end\n  if n % 2 == 1 then\n    return false\n  end\n  local\
    \ m = math.floor(n/2)\n  if n % 2 == 0 then\n    return is_simple_power(x, m)\
    \ or is_simple_power(x, m+1)\n  end\n  return false\nend", "  if n == 1 then\n\
    \    return true\n  end\n  if x == 1 then\n    return false\n  end\n  if x ==\
    \ 0 then\n    return false\n  end\n  if n % 2 == 1 then\n    return false\n  end\n\
    \  if n % 3 == 0 then\n    return false\n  end\n  if n % 5 == 0 then\n    return\
    \ false\n  end\n  if n % 7 == 0 then\n    return false\n  end\n  if n % 9 == 0\
    \ then\n    return false\n  end\n  if n % 11 == 0 then\n    return false\n  end\n\
    \  if n % 13 == 0 then\n    return false\n  end\n  if n % 17 == 0 then\n    return\
    \ false\n  end\n  if n % 19 == 0 then\n    return false\n  end\n  if n % 23 ==\
    \ 0 then\n    return false\n  end\n  if n % 29 == 0 then\n    return false\n \
    \ end\n  if n % 31 == 0 then\n    return false\n  end\n  if n % 37 == 0 then\n\
    \    return false\n  end\n  if n % 41 == 0 then\n    return false\n  end\n  if\
    \ n % 43 == 0 then\n    return false\n  end\n  if n % 47 == 0 then\n    return\
    \ false\n  end\n  if n % 53 == 0 then\n    return false\n  end\n  if n % 59 ==\
    \ 0 then\n    return false\n  end\n  if n % 61 == 0 then\n    return false\n \
    \ end\n  if n % 67 == 0 then\n    return false\n  end\n  if n % 71 == 0 then\n\
    \    return false\n  end\n  if n % 73 == 0 then\n    return false\n  end\n  if\
    \ n % 79 == 0 then\n    return false\n  end\n  if n % 83 == 0 then\n    return\
    \ false\n  end\n  if n % 89 == 0 then\n    return false\n  end\n  if n % 97 ==\
    \ 0 then\n    return false\n  end\n  if n % 101 == 0 then\n    return false\n\
    \  end\n  if n % 103 == 0 then\n    return false\n  end\n  if n % 107 == 0 then\n\
    \    return false\n  end\n  if n % 109 == 0 then\n    return false\n  end\n  if\
    \ n % 111 == 0 then\n    return false\n  end\n  if n % 113 == 0 then\n    return\
    \ false\n  end\n  if n % 117 == 0 then\n    return false\n  end\n  if n % 121\
    \ == 0 then\n    return false\n  end\n  if n % 123 == 0 then\n    return false\n\
    \  end\n  if n % 127 == 0 then\n    return false\n  end\n  if n % 131 == 0 then\n\
    \    return false\n  end\n  if n % 133 == 0 then\n    return false\n  end\n  if\
    \ n % 137 == 0 then\n    return false\n  end\n  if n % 141 == 0 then\n    return\
    \ false\n  end\n  if n % 143 == ", "  if n == 1 then return true end\n  if n ==\
    \ 0 then return false end\n  if n == -1 then return false end\n  if n == -2 then\
    \ return true end\n  if n == -3 then return false end\n  if n == -4 then return\
    \ true end\n  if n == -5 then return false end\n  if n == -6 then return true\
    \ end\n  if n == -7 then return false end\n  if n == -8 then return true end\n\
    \  if n == -9 then return false end\n  if n == -10 then return true end\n  if\
    \ n == -11 then return false end\n  if n == -12 then return true end\n  if n ==\
    \ -13 then return false end\n  if n == -14 then return true end\n  if n == -15\
    \ then return false end\n  if n == -16 then return true end\n  if n == -17 then\
    \ return false end\n  if n == -18 then return true end\n  if n == -19 then return\
    \ false end\n  if n == -20 then return true end\n  if n == -21 then return false\
    \ end\n  if n == -22 then return true end\n  if n == -23 then return false end\n\
    \  if n == -24 then return true end\n  if n == -25 then return false end\n  if\
    \ n == -26 then return true end\n  if n == -27 then return false end\n  if n ==\
    \ -28 then return true end\n  if n == -29 then return false end\n  if n == -30\
    \ then return true end\n  if n == -31 then return false end\n  if n == -32 then\
    \ return true end\n  if n == -33 then return false end\n  if n == -34 then return\
    \ true end\n  if n == -35 then return false end\n  if n == -36 then return true\
    \ end\n  if n == -37 then return false end\n  if n == -38 then return true end\n\
    \  if n == -39 then return false end\n  if n == -40 then return true end\n  if\
    \ n == -41 then return false end\n  if n == -42 then return true end\n  if n ==\
    \ -43 then return false end\n  if n == -44 then return true end\n  if n == -45\
    \ then return false end\n  if n == -46 then return true end\n  if n == -47 then\
    \ return false end\n  if n == -48 then return true end\n  if n == -49 then return\
    \ false end\n  if n == -50 then return true end\n  if n == -51 then return false\
    \ end\n  if n == -52 then return true end\n  if n == -53 then return false end\n\
    \  if n == -54 then return true end\n  if n == -", "  if n == 1 then\n    return\
    \ true\n  end\n  if n == 0 then\n    return false\n  end\n  if n == -1 then\n\
    \    return false\n  end\n  if n == -2 then\n    return false\n  end\n  if n ==\
    \ -3 then\n    return false\n  end\n  if n == -4 then\n    return false\n  end\n\
    \  if n == -5 then\n    return false\n  end\n  if n == -6 then\n    return false\n\
    \  end\n  if n == -7 then\n    return false\n  end\n  if n == -8 then\n    return\
    \ false\n  end\n  if n == -9 then\n    return false\n  end\n  if n == -10 then\n\
    \    return false\n  end\n  if n == -11 then\n    return false\n  end\n  if n\
    \ == -12 then\n    return false\n  end\n  if n == -13 then\n    return false\n\
    \  end\n  if n == -14 then\n    return false\n  end\n  if n == -15 then\n    return\
    \ false\n  end\n  if n == -16 then\n    return false\n  end\n  if n == -17 then\n\
    \    return false\n  end\n  if n == -18 then\n    return false\n  end\n  if n\
    \ == -19 then\n    return false\n  end\n  if n == -20 then\n    return false\n\
    \  end\n  if n == -21 then\n    return false\n  end\n  if n == -22 then\n    return\
    \ false\n  end\n  if n == -23 then\n    return false\n  end\n  if n == -24 then\n\
    \    return false\n  end\n  if n == -25 then\n    return false\n  end\n  if n\
    \ == -26 then\n    return false\n  end\n  if n == -27 then\n    return false\n\
    \  end\n  if n == -28 then\n    return false\n  end\n  if n == -29 then\n    return\
    \ false\n  end\n  if n == -30 then\n    return false\n  end\n  if n == -31 then\n\
    \    return false\n  end\n  if n == -32 then\n    return false\n  end\n  if n\
    \ == -33 then\n    return false\n  end\n  if n == -34 then\n    return false\n\
    \  end\n  if n == -35 then\n    return false\n  end\n  if n == -36 then\n    return\
    \ false\n  end\n  if n == -37 then\n    return false\n  end\n  if n == -38 then\n\
    \    return false\n  end\n  if n == -39 then\n    return false\n  end\n  if n\
    \ == -40 then\n    return false\n  end\n  if n == -41 then\n    return false\n\
    \  end\n  if n == -42 then\n    return false\n  end\n  if n == -43 then\n    return\
    \ false\n  end\n  if n == -44 then\n    return false\n  end\n  if n == -45 then\n",
  "  if x == 1 then return true end\n  if x == 0 then return false end\n  if n ==\
    \ 0 then return false end\n  if n == 1 then return x == n end\n  if n % 2 == 0\
    \ then return is_simple_power(x, n / 2) end\n  if n % 3 == 0 then return is_simple_power(x,\
    \ n / 3) end\n  return false\nend", "  if x == n then\n    return true\n  elseif\
    \ x < n then\n    return false\n  else\n    return is_simple_power(x, n-1)\n \
    \ end\nend", "  if n == 0 then return false end\n  if n == 1 then return x ==\
    \ 1 end\n  if n == 2 then return x == x end\n  if n % 2 == 0 then return x ==\
    \ (x * x) or is_simple_power(x, n / 2) end\n  return x == (x * x) or is_simple_power(x,\
    \ n / 2) end\nend", "  if n == 1 then\n    return x == 1\n  else\n    return x\
    \ % n == 0 and is_simple_power(x / n, n)\n  end\nend", "  if n == 1 then\n   \
    \ return x == 1\n  else\n    return x % n == 0 and is_simple_power(x / n, n)\n\
    \  end\nend", "  -- base case\n  if n == 1 then\n    return true\n  end", "  if\
    \ x == n then\n    return true\n  elseif x < n then\n    return false\n  else\n\
    \    return is_simple_power(x, n-1)\n  end\nend", "  if n == 1 then return true\
    \ end\n  if x == 1 then return false end\n  if x == 0 then return false end\n\
    \  if n % 2 == 0 then return is_simple_power(x / 2, n) end\n  if n % 3 == 0 then\
    \ return is_simple_power(x / 3, n) end\n  return false\nend", "  if n == 1 then\n\
    \    return x == 1\n  else\n    return x % n == 0 and is_simple_power(x / n, n)\n\
    \  end\nend", "  if n == 1 then\n    return true\n  end\n  if x ~= x or n ~= n\
    \ then\n    return false\n  end\n  if n <= 1 then\n    return true\n  end\n  if\
    \ x == 1 then\n    return true\n  end\n  if x == 0 then\n    return false\n  end\n\
    \  if n % 2 == 1 then\n    return false\n  end\n  local i = 1\n  while i * i <=\
    \ n do\n    if x % i == 0 then\n      return false\n    end\n    i = i * 2\n \
    \ end\n  return true\nend", "  if n == 1 then return true end\n  if x == 1 then\
    \ return false end\n  if x == 0 then return false end\n  if n == 0 then return\
    \ false end\n  if n % 2 == 0 then return is_simple_power(x, n / 2) end\n  if x\
    \ % n == 0 then return true end\n  return false\nend", "  if n == 1 then\n   \
    \ return true\n  end\n  if n == 0 then\n    return false\n  end\n  if n == -1\
    \ then\n    return false\n  end\n  if x == 1 then\n    return true\n  end\n  if\
    \ x == 0 then\n    return false\n  end\n  if x == -1 then\n    return false\n\
    \  end\n  if x == -2 then\n    return false\n  end\n  if x == -3 then\n    return\
    \ false\n  end\n  if x == -4 then\n    return false\n  end\n  if x == -5 then\n\
    \    return false\n  end\n  if x == -6 then\n    return false\n  end\n  if x ==\
    \ -7 then\n    return false\n  end\n  if x == -8 then\n    return false\n  end\n\
    \  if x == -9 then\n    return false\n  end\n  if x == -10 then\n    return false\n\
    \  end\n  if x == -11 then\n    return false\n  end\n  if x == -12 then\n    return\
    \ false\n  end\n  if x == -13 then\n    return false\n  end\n  if x == -14 then\n\
    \    return false\n  end\n  if x == -15 then\n    return false\n  end\n  if x\
    \ == -16 then\n    return false\n  end\n  if x == -17 then\n    return false\n\
    \  end\n  if x == -18 then\n    return false\n  end\n  if x == -19 then\n    return\
    \ false\n  end\n  if x == -20 then\n    return false\n  end\n  if x == -21 then\n\
    \    return false\n  end\n  if x == -22 then\n    return false\n  end\n  if x\
    \ == -23 then\n    return false\n  end\n  if x == -24 then\n    return false\n\
    \  end\n  if x == -25 then\n    return false\n  end\n  if x == -26 then\n    return\
    \ false\n  end\n  if x == -27 then\n    return false\n  end\n  if x == -28 then\n\
    \    return false\n  end\n  if x == -29 then\n    return false\n  end\n  if x\
    \ == -30 then\n    return false\n  end\n  if x == -31 then\n    return false\n\
    \  end\n  if x == -32 then\n    return false\n  end\n  if x == -33 then\n    return\
    \ false\n  end\n  if x == -34 then\n    return false\n  end\n  if x == -35 then\n\
    \    return false\n  end\n  if x == -36 then\n    return false\n  end\n  if x\
    \ == -37 then\n    return false\n  end\n  if x == -38 then\n    return false\n\
    \  end\n  if x == -39 then\n    return false\n  end\n  if x == -40 then\n    return\
    \ false\n  end\n  if x == -41 then\n    return false\n  end\n  if x == -42 then\n\
    \    return false\n", "  if n == 1 then\n    return x == 1\n  else\n    return\
    \ x % n == 0 and is_simple_power(x / n, n)\n  end\nend", "  if x == n then\n \
    \   return true\n  elseif x < n then\n    return false\n  else\n    return is_simple_power(x\
    \ * x, n)\n  end\nend", "  if n == 0 then return true end\n  if n == 1 then return\
    \ x == 1 end\n  if x ~= x then return false end\n  if n <= 1 then return true\
    \ end\n  if n % 2 == 1 then return false end\n  if n % 3 == 0 then return false\
    \ end\n  if n % 5 == 0 then return false end\n  if n % 7 == 0 then return false\
    \ end\n  if n % 9 == 0 then return false end\n  if n % 11 == 0 then return false\
    \ end\n  if n % 13 == 0 then return false end\n  if n % 17 == 0 then return false\
    \ end\n  if n % 19 == 0 then return false end\n  if n % 23 == 0 then return false\
    \ end\n  if n % 29 == 0 then return false end\n  if n % 31 == 0 then return false\
    \ end\n  if n % 37 == 0 then return false end\n  if n % 41 == 0 then return false\
    \ end\n  if n % 47 == 0 then return false end\n  if n % 53 == 0 then return false\
    \ end\n  if n % 59 == 0 then return false end\n  if n % 61 == 0 then return false\
    \ end\n  if n % 67 == 0 then return false end\n  if n % 71 == 0 then return false\
    \ end\n  if n % 73 == 0 then return false end\n  if n % 79 == 0 then return false\
    \ end\n  if n % 83 == 0 then return false end\n  if n % 89 == 0 then return false\
    \ end\n  if n % 97 == 0 then return false end\n  if n % 101 == 0 then return false\
    \ end\n  if n % 103 == 0 then return false end\n  if n % 107 == 0 then return\
    \ false end\n  if n % 109 == 0 then return false end\n  if n % 113 == 0 then return\
    \ false end\n  if n % 117 == 0 then return false end\n  if n % 121 == 0 then return\
    \ false end\n  if n % 123 == 0 then return false end\n  if n % 127 == 0 then return\
    \ false end\n  if n % 131 == 0 then return false end\n  if n % 133 == 0 then return\
    \ false end\n  if n % 137 == 0 then return false end\n  if n % 141 == 0 then return\
    \ false end\n  if n % 143 == 0 then return false end\n  if n % 147 == 0 then return\
    \ false end\n  if n % 151 == 0 then return false end\n  if n % 153 == 0 then return\
    \ false end\n  if n % 157 == 0 then return false end\n  if n % 161 == 0 then return\
    \ false end\n  if n % 163 == 0 then return false end\n  if n % 167 == 0 then return\
    \ false end\n  if n % 171 == 0 then return false end\n  if n % 173 == 0 then return\
    \ false ", "  if x == 1 then\n    return true\n  elseif n == 0 then\n    return\
    \ false\n  elseif n ~= 1 then\n    return is_simple_power(x^n, n-1)\n  else\n\
    \    return false\n  end\nend", "  if n == 1 then\n    return x == 1\n  else\n\
    \    return x == n^x\n  end\nend", "  if n == 1 then\n    return true\n  else\n\
    \    return (x == n) or (x % n == 0)\n  end\nend", "  if n == 1 then\n    return\
    \ x == 1\n  else\n    return x % n == 0 and is_simple_power(x / n, n)\n  end\n\
    end", "  if n == 1 then\n    return x == 1\n  else\n    return x % n == 0 and\
    \ is_simple_power(x / n, n)\n  end\nend", "  if n == 1 then return true end\n\
    \  if x == 1 then return false end\n  if x ~= n then return false end\n  local\
    \ i = 1\n  while i <= n do\n    i = i * 2\n    if x ~= i then return false end\n\
    \  end\n  return true\nend", "  if x == n then\n    return true\n  elseif x <\
    \ n then\n    return false\n  else\n    return is_simple_power(x, n-1)\n  end\n\
    end", "  if n == 1 then\n    return x == 1\n  else\n    return x == n*n\n  end\n\
    end", "  if x == n then\n    return true\n  end\n  if x ~= n then\n    return\
    \ false\n  end\n  local i = 1\n  while i <= n do\n    if x ~= n^i then\n     \
    \ return false\n    end\n    i = i + 1\n  end\n  return true\nend", "  if n ==\
    \ 1 then\n    return x == 1\n  else\n    return x % n == 0 and is_simple_power(x\
    \ / n, n)\n  end\nend", "  if n == 1 then\n    return x == 1\n  else\n    return\
    \ x % n == 0 and is_simple_power(x / n, n)\n  end\nend", "  if n == 1 then return\
    \ true end\n  if x == 1 then return false end\n  if x % n == 0 then return is_simple_power(x\
    \ / n, n) end\n  return false\nend", "  if n == 1 then\n    return x == 1\n  else\n\
    \    return x % n == 0 and is_simple_power(x / n, n)\n  end\nend", "  if x ==\
    \ 1 then return true end\n  if x == 0 then return false end\n  if n == 0 then\
    \ return false end\n  if n == 1 then return x == n end\n  if n % 2 == 0 then return\
    \ is_simple_power(x * x, n / 2) end\n  return false\nend", "  if x == 1 then return\
    \ true end\n  if x == 0 then return false end\n  if n == 0 then return false end\n\
    \  if n == 1 then return x == n end\n  if n % 2 == 0 then return is_simple_power(x,\
    \ n / 2) end\n  return is_simple_power(x * x, n / 2)\nend", "  if x == 1 then\
    \ return true end\n  if x == 0 then return false end\n  if n == 0 then return\
    \ false end\n  if n == 1 then return x == n end\n  if n % 2 == 0 then return is_simple_power(x,\
    \ n / 2) end\n  return is_simple_power(x * x, n / 2)\nend", "  if n == 0 then\
    \ return true end\n  if n == 1 then return x == 1 end\n  if n == 2 then return\
    \ x == x end\n  if n % 2 == 0 then return x == (x * x) or x == (x * x * x) or\
    \ x == (x * x * x * x) end\n  return x == (x * x * x * x) or x == (x * x * x *\
    \ x * x) or x == (x * x * x * x * x * x)\nend", "  if x == n then\n    return\
    \ true\n  elseif x < n then\n    return false\n  else\n    return is_simple_power(x,\
    \ n-1)\n  end\nend", "  if x == n then\n    return true\n  elseif x < n then\n\
    \    return false\n  else\n    return is_simple_power(x * x, n)\n  end\nend",
  "  if n == 1 then return true end\n  if n == 0 then return false end\n  if n ==\
    \ -1 then return false end\n  if n == -2 then return true end\n  if n == -3 then\
    \ return false end\n  if n == -4 then return true end\n  if n == -5 then return\
    \ false end\n  if n == -6 then return true end\n  if n == -7 then return false\
    \ end\n  if n == -8 then return true end\n  if n == -9 then return false end\n\
    \  if n == -10 then return true end\n  if n == -11 then return false end\n  if\
    \ n == -12 then return true end\n  if n == -13 then return false end\n  if n ==\
    \ -14 then return true end\n  if n == -15 then return false end\n  if n == -16\
    \ then return true end\n  if n == -17 then return false end\n  if n == -18 then\
    \ return true end\n  if n == -19 then return false end\n  if n == -20 then return\
    \ true end\n  if n == -21 then return false end\n  if n == -22 then return true\
    \ end\n  if n == -23 then return false end\n  if n == -24 then return true end\n\
    \  if n == -25 then return false end\n  if n == -26 then return true end\n  if\
    \ n == -27 then return false end\n  if n == -28 then return true end\n  if n ==\
    \ -29 then return false end\n  if n == -30 then return true end\n  if n == -31\
    \ then return false end\n  if n == -32 then return true end\n  if n == -33 then\
    \ return false end\n  if n == -34 then return true end\n  if n == -35 then return\
    \ false end\n  if n == -36 then return true end\n  if n == -37 then return false\
    \ end\n  if n == -38 then return true end\n  if n == -39 then return false end\n\
    \  if n == -40 then return true end\n  if n == -41 then return false end\n  if\
    \ n == -42 then return true end\n  if n == -43 then return false end\n  if n ==\
    \ -44 then return true end\n  if n == -45 then return false end\n  if n == -46\
    \ then return true end\n  if n == -47 then return false end\n  if n == -48 then\
    \ return true end\n  if n == -49 then return false end\n  if n == -50 then return\
    \ true end\n  if n == -51 then return false end\n  if n == -52 then return true\
    \ end\n  if n == -53 then return false end\n  if n == -54 then return true end\n\
    \  if n == -", "  if x == n then\n    return true\n  end\n  if x < n then\n  \
    \  return false\n  end\n  local i = 1\n  while i * i <= n do\n    if x * i ==\
    \ n then\n      return true\n    end\n    i = i + 1\n  end\n  return false\nend",
  "  if n == 1 then return true end\n  if x == 1 then return false end\n  if x ==\
    \ 0 then return false end\n  if n == 0 then return false end\n  if n % 2 == 0\
    \ then return false end\n  if n % 4 == 0 then return false end\n  if n % 8 ==\
    \ 0 then return false end\n  if n % 16 == 0 then return false end\n  if n % 32\
    \ == 0 then return false end\n  if n % 64 == 0 then return false end\n  if n %\
    \ 128 == 0 then return false end\n  if n % 256 == 0 then return false end\n  if\
    \ n % 512 == 0 then return false end\n  if n % 1024 == 0 then return false end\n\
    \  if n % 2048 == 0 then return false end\n  if n % 4096 == 0 then return false\
    \ end\n  if n % 8192 == 0 then return false end\n  if n % 16384 == 0 then return\
    \ false end\n  if n % 32768 == 0 then return false end\n  if n % 65536 == 0 then\
    \ return false end\n  if n % 131072 == 0 then return false end\n  if n % 262144\
    \ == 0 then return false end\n  if n % 524288 == 0 then return false end\n  if\
    \ n % 1048576 == 0 then return false end\n  if n % 2097152 == 0 then return false\
    \ end\n  if n % 4194304 == 0 then return false end\n  if n % 8388608 == 0 then\
    \ return false end\n  if n % 16777216 == 0 then return false end\n  if n % 33554432\
    \ == 0 then return false end\n  if n % 67108864 == 0 then return false end\n \
    \ if n % 134217728 == 0 then return false end\n  if n % 268435456 == 0 then return\
    \ false end\n  if n % 536870912 == 0 then return false end\n  if n % 1073741824\
    \ == 0 then return false end\n  if n % 2147483648 == 0 then return false end\n\
    \  if n % 4294967296 == 0 then return false end\n  if n % 8589934592 == 0 then\
    \ return false end\n  if n % 17179869184 == 0 then return false end\n  if n %\
    \ 34359738368 == 0 then return false end\n  if n % 68719476736 == 0 then return\
    \ false end\n  if n % 137438953472 == 0 then return false end\n  if n % 274877906944\
    \ == 0 then return false end\n  if n % 549755813888 == 0 then return false end\n\
    \  if n % 1099511627776 == 0 then return false end\n  if n % ", "  if x == n then\n\
    \    return true\n  elseif x < n then\n    return false\n  else\n    return is_simple_power(x,\
    \ n-1)\n  end\nend", "  if x == n then\n    return true\n  elseif x < n then\n\
    \    return false\n  else\n    return is_simple_power(x, n-1)\n  end\nend", " \
    \ if n == 1 then\n    return true\n  end\n  if n == 0 then\n    return false\n\
    \  end\n  if n ~= math.floor(n) then\n    return false\n  end\n  local power =\
    \ math.pow(n, math.floor(n))\n  return x == power\nend", "  if x == n then\n \
    \   return true\n  end\n  if x < n then\n    return false\n  end\n  if n == 1\
    \ then\n    return true\n  end\n  if n == 2 then\n    return x == n\n  end\n \
    \ if n % 2 == 0 then\n    return is_simple_power(x, n / 2)\n  end\n  return is_simple_power(x,\
    \ n / 2) or\n         is_simple_power(x, (n / 2) ^ 2)\nend", "  if n == 0 then\
    \ return false end\n  if n == 1 then return x == 1 end\n  if n == 2 then return\
    \ x == x end\n  if n % 2 == 0 then return x == (x * x) or is_simple_power(x, n\
    \ / 2) end\n  return false\nend", "  if n == 1 then\n    return true\n  end\n\
    \  if n == 0 then\n    return false\n  end\n  if n == -1 then\n    return not\
    \ is_simple_power(x, n-1)\n  end\n  if x < 0 then\n    return not is_simple_power(x,\
    \ n+1)\n  end\n  return is_simple_power(x, n-1) and is_simple_power(x, n-1)\n\
    end", "  if n == 1 then return true end\n  if x == 1 then return false end\n \
    \ if x == 0 then return false end\n  if n == 0 then return false end\n  if n %\
    \ 2 == 0 then return is_simple_power(x, n / 2) end\n  if n % 3 == 0 then return\
    \ is_simple_power(x, n / 3) end\n  if n % 5 == 0 then return is_simple_power(x,\
    \ n / 5) end\n  return false\nend", "  if n == 1 then\n    return x == 1\n  else\n\
    \    return x % n == 0 and is_simple_power(x / n, n)\n  end\nend", "  if x ==\
    \ 1 then return true end\n  if x == 0 then return false end\n  if n == 0 then\
    \ return false end\n  if n == 1 then return x == n end\n  if n % 2 == 0 then return\
    \ is_simple_power(x, n / 2) end\n  if n % 3 == 0 then return is_simple_power(x,\
    \ n / 3) end\n  return false\nend", "  if x == n then\n    return true\n  end\n\
    \  if x < n then\n    return false\n  end\n  local i = 1\n  while i * i <= n do\n\
    \    if x * i == n then\n      return true\n    end\n    i = i + 1\n  end\n  return\
    \ false\nend", "  -- base case\n  if x == 1 then\n    return true\n  end\n  --\
    \ recursive case\n  if x % n == 0 then\n    return true\n  end\n  return false\n\
    end", "  if x == n then\n    return true\n  elseif x < n then\n    return false\n\
    \  else\n    return is_simple_power(x, n-1)\n  end\nend", "  if n == 1 then\n\
    \    return x == 1\n  else\n    return x % n == 0 and is_simple_power(x / n, n)\n\
    \  end\nend", "  if x == n then\n    return true\n  elseif x < n then\n    return\
    \ false\n  else\n    return is_simple_power(x, n-1)\n  end\nend", "  if x == n\
    \ then\n    return true\n  elseif x < n then\n    return false\n  else\n    return\
    \ is_simple_power(x, n-1)\n  end\nend", "  if x == 1 then return true end\n  if\
    \ x == 0 then return false end\n  if n == 0 then return false end\n  if n == 1\
    \ then return x == n end\n  if n % 2 == 0 then return is_simple_power(x, n / 2)\
    \ end\n  return false\nend", "  if n == 1 then\n    return true\n  end\n  if n\
    \ == 0 then\n    return false\n  end\n  if n == -1 then\n    return false\n  end\n\
    \  if n == -2 then\n    return false\n  end\n  if n == -3 then\n    return false\n\
    \  end\n  if n == -4 then\n    return false\n  end\n  if n == -5 then\n    return\
    \ false\n  end\n  if n == -6 then\n    return false\n  end\n  if n == -7 then\n\
    \    return false\n  end\n  if n == -8 then\n    return false\n  end\n  if n ==\
    \ -9 then\n    return false\n  end\n  if n == -10 then\n    return false\n  end\n\
    \  if n == -11 then\n    return false\n  end\n  if n == -12 then\n    return false\n\
    \  end\n  if n == -13 then\n    return false\n  end\n  if n == -14 then\n    return\
    \ false\n  end\n  if n == -15 then\n    return false\n  end\n  if n == -16 then\n\
    \    return false\n  end\n  if n == -17 then\n    return false\n  end\n  if n\
    \ == -18 then\n    return false\n  end\n  if n == -19 then\n    return false\n\
    \  end\n  if n == -20 then\n    return false\n  end\n  if n == -21 then\n    return\
    \ false\n  end\n  if n == -22 then\n    return false\n  end\n  if n == -23 then\n\
    \    return false\n  end\n  if n == -24 then\n    return false\n  end\n  if n\
    \ == -25 then\n    return false\n  end\n  if n == -26 then\n    return false\n\
    \  end\n  if n == -27 then\n    return false\n  end\n  if n == -28 then\n    return\
    \ false\n  end\n  if n == -29 then\n    return false\n  end\n  if n == -30 then\n\
    \    return false\n  end\n  if n == -31 then\n    return false\n  end\n  if n\
    \ == -32 then\n    return false\n  end\n  if n == -33 then\n    return false\n\
    \  end\n  if n == -34 then\n    return false\n  end\n  if n == -35 then\n    return\
    \ false\n  end\n  if n == -36 then\n    return false\n  end\n  if n == -37 then\n\
    \    return false\n  end\n  if n == -38 then\n    return false\n  end\n  if n\
    \ == -39 then\n    return false\n  end\n  if n == -40 then\n    return false\n\
    \  end\n  if n == -41 then\n    return false\n  end\n  if n == -42 then\n    return\
    \ false\n  end\n  if n == -43 then\n    return false\n  end\n  if n == -44 then\n\
    \    return false\n  end\n  if n == -45 then\n", "  if n == 0 then return false\
    \ end\n  if n == 1 then return x == 1 end\n  if n % 2 == 0 then return x == (x\
    \ * x) or is_simple_power(x, n / 2) end\n  return false\nend", "  if n == 1 then\
    \ return true end\n  if n == 0 then return false end\n  if n == -1 then return\
    \ false end\n  if n == -2 then return true end\n  if n == -3 then return false\
    \ end\n  if n == -4 then return true end\n  if n == -5 then return false end\n\
    \  if n == -6 then return true end\n  if n == -7 then return false end\n  if n\
    \ == -8 then return true end\n  if n == -9 then return false end\n  if n == -10\
    \ then return true end\n  if n == -11 then return false end\n  if n == -12 then\
    \ return true end\n  if n == -13 then return false end\n  if n == -14 then return\
    \ true end\n  if n == -15 then return false end\n  if n == -16 then return true\
    \ end\n  if n == -17 then return false end\n  if n == -18 then return true end\n\
    \  if n == -19 then return false end\n  if n == -20 then return true end\n  if\
    \ n == -21 then return false end\n  if n == -22 then return true end\n  if n ==\
    \ -23 then return false end\n  if n == -24 then return true end\n  if n == -25\
    \ then return false end\n  if n == -26 then return true end\n  if n == -27 then\
    \ return false end\n  if n == -28 then return true end\n  if n == -29 then return\
    \ false end\n  if n == -30 then return true end\n  if n == -31 then return false\
    \ end\n  if n == -32 then return true end\n  if n == -33 then return false end\n\
    \  if n == -34 then return true end\n  if n == -35 then return false end\n  if\
    \ n == -36 then return true end\n  if n == -37 then return false end\n  if n ==\
    \ -38 then return true end\n  if n == -39 then return false end\n  if n == -40\
    \ then return true end\n  if n == -41 then return false end\n  if n == -42 then\
    \ return true end\n  if n == -43 then return false end\n  if n == -44 then return\
    \ true end\n  if n == -45 then return false end\n  if n == -46 then return true\
    \ end\n  if n == -47 then return false end\n  if n == -48 then return true end\n\
    \  if n == -49 then return false end\n  if n == -50 then return true end\n  if\
    \ n == -51 then return false end\n  if n == -52 then return true end\n  if n ==\
    \ -53 then return false end\n  if n == -54 then return true end\n  if n == -",
  "  if n == 1 then\n    return true\n  end\n  if x == 1 then\n    return false\n\
    \  end\n  if n % 2 == 0 then\n    return is_simple_power(x * x, n / 2)\n  end\n\
    \  return is_simple_power(x * x, (n - 1) / 2)\nend", "  if n == 1 then\n    return\
    \ true\n  end\n  if n == 0 then\n    return false\n  end\n  if n == -1 then\n\
    \    return false\n  end\n  if n == -2 then\n    return false\n  end\n  if n ==\
    \ -3 then\n    return false\n  end\n  if n == -4 then\n    return false\n  end\n\
    \  if n == -5 then\n    return false\n  end\n  if n == -6 then\n    return false\n\
    \  end\n  if n == -7 then\n    return false\n  end\n  if n == -8 then\n    return\
    \ false\n  end\n  if n == -9 then\n    return false\n  end\n  if n == -10 then\n\
    \    return false\n  end\n  if n == -11 then\n    return false\n  end\n  if n\
    \ == -12 then\n    return false\n  end\n  if n == -13 then\n    return false\n\
    \  end\n  if n == -14 then\n    return false\n  end\n  if n == -15 then\n    return\
    \ false\n  end\n  if n == -16 then\n    return false\n  end\n  if n == -17 then\n\
    \    return false\n  end\n  if n == -18 then\n    return false\n  end\n  if n\
    \ == -19 then\n    return false\n  end\n  if n == -20 then\n    return false\n\
    \  end\n  if n == -21 then\n    return false\n  end\n  if n == -22 then\n    return\
    \ false\n  end\n  if n == -23 then\n    return false\n  end\n  if n == -24 then\n\
    \    return false\n  end\n  if n == -25 then\n    return false\n  end\n  if n\
    \ == -26 then\n    return false\n  end\n  if n == -27 then\n    return false\n\
    \  end\n  if n == -28 then\n    return false\n  end\n  if n == -29 then\n    return\
    \ false\n  end\n  if n == -30 then\n    return false\n  end\n  if n == -31 then\n\
    \    return false\n  end\n  if n == -32 then\n    return false\n  end\n  if n\
    \ == -33 then\n    return false\n  end\n  if n == -34 then\n    return false\n\
    \  end\n  if n == -35 then\n    return false\n  end\n  if n == -36 then\n    return\
    \ false\n  end\n  if n == -37 then\n    return false\n  end\n  if n == -38 then\n\
    \    return false\n  end\n  if n == -39 then\n    return false\n  end\n  if n\
    \ == -40 then\n    return false\n  end\n  if n == -41 then\n    return false\n\
    \  end\n  if n == -42 then\n    return false\n  end\n  if n == -43 then\n    return\
    \ false\n  end\n  if n == -44 then\n    return false\n  end\n  if n == -45 then\n",
  "  if x == n then\n    return true\n  elseif x < n then\n    return false\n  else\n\
    \    return is_simple_power(x, n-1)\n  end\nend", "  if n == 1 then return true\
    \ end\n  if n == 0 then return false end\n  if x < n then return false end\n \
    \ if x == n then return true end\n  if x ~= n then\n    local r = 1\n    while\
    \ r < n do\n      if x % n == 0 then\n        return false\n      end\n      r\
    \ = r * 2\n    end\n  end\n  return true\nend", "  if n == 1 then\n    return\
    \ true\n  end\n  if x == 1 then\n    return false\n  end\n  if x == 0 then\n \
    \   return false\n  end\n  if n == 0 then\n    return false\n  end\n  if n % 2\
    \ == 0 then\n    return false\n  end\n  if n % 3 == 0 then\n    return false\n\
    \  end\n  if n % 5 == 0 then\n    return false\n  end\n  if n % 7 == 0 then\n\
    \    return false\n  end\n  if n % 9 == 0 then\n    return false\n  end\n  if\
    \ n % 11 == 0 then\n    return false\n  end\n  if n % 13 == 0 then\n    return\
    \ false\n  end\n  if n % 17 == 0 then\n    return false\n  end\n  if n % 19 ==\
    \ 0 then\n    return false\n  end\n  if n % 23 == 0 then\n    return false\n \
    \ end\n  if n % 29 == 0 then\n    return false\n  end\n  if n % 31 == 0 then\n\
    \    return false\n  end\n  if n % 37 == 0 then\n    return false\n  end\n  if\
    \ n % 41 == 0 then\n    return false\n  end\n  if n % 43 == 0 then\n    return\
    \ false\n  end\n  if n % 47 == 0 then\n    return false\n  end\n  if n % 53 ==\
    \ 0 then\n    return false\n  end\n  if n % 59 == 0 then\n    return false\n \
    \ end\n  if n % 61 == 0 then\n    return false\n  end\n  if n % 67 == 0 then\n\
    \    return false\n  end\n  if n % 71 == 0 then\n    return false\n  end\n  if\
    \ n % 73 == 0 then\n    return false\n  end\n  if n % 79 == 0 then\n    return\
    \ false\n  end\n  if n % 83 == 0 then\n    return false\n  end\n  if n % 89 ==\
    \ 0 then\n    return false\n  end\n  if n % 97 == 0 then\n    return false\n \
    \ end\n  if n % 101 == 0 then\n    return false\n  end\n  if n % 103 == 0 then\n\
    \    return false\n  end\n  if n % 107 == 0 then\n    return false\n  end\n  if\
    \ n % 109 == 0 then\n    return false\n  end\n  if n % 111 == 0 then\n    return\
    \ false\n  end\n  if n % 113 == 0 then\n    return false\n  end\n  if n % 117\
    \ == 0 then\n    return false\n  end\n  if n % 121 == 0 then\n    return false\n\
    \  end\n  if n % 123 == 0 then\n    return false\n  end\n  if n % 127 == 0 then\n\
    \    return false\n  end\n  if n % 131 == 0 then\n    return false\n  end\n  if\
    \ n % 133 == 0 then\n    return false\n  end\n  if n % 137 == 0 then\n    return\
    \ false\n  end\n  if n % 141 == 0 then", "  if x == n then\n    return true\n\
    \  end\n  if x < n then\n    return false\n  end\n  if x == 1 then\n    return\
    \ true\n  end\n  if x == n then\n    return true\n  end\n  if x % 2 == 0 then\n\
    \    return is_simple_power(x / 2, n)\n  end\n  if x % 3 == 0 then\n    return\
    \ is_simple_power(x / 3, n)\n  end\n  return false\nend", "  if n == 1 then\n\
    \    return true\n  end\n  if n == 0 then\n    return false\n  end\n  if n ==\
    \ -1 then\n    return false\n  end\n  if n == -2 then\n    return false\n  end\n\
    \  if n == -3 then\n    return false\n  end\n  if n == -4 then\n    return false\n\
    \  end\n  if n == -5 then\n    return false\n  end\n  if n == -6 then\n    return\
    \ false\n  end\n  if n == -7 then\n    return false\n  end\n  if n == -8 then\n\
    \    return false\n  end\n  if n == -9 then\n    return false\n  end\n  if n ==\
    \ -10 then\n    return false\n  end\n  if n == -11 then\n    return false\n  end\n\
    \  if n == -12 then\n    return false\n  end\n  if n == -13 then\n    return false\n\
    \  end\n  if n == -14 then\n    return false\n  end\n  if n == -15 then\n    return\
    \ false\n  end\n  if n == -16 then\n    return false\n  end\n  if n == -17 then\n\
    \    return false\n  end\n  if n == -18 then\n    return false\n  end\n  if n\
    \ == -19 then\n    return false\n  end\n  if n == -20 then\n    return false\n\
    \  end\n  if n == -21 then\n    return false\n  end\n  if n == -22 then\n    return\
    \ false\n  end\n  if n == -23 then\n    return false\n  end\n  if n == -24 then\n\
    \    return false\n  end\n  if n == -25 then\n    return false\n  end\n  if n\
    \ == -26 then\n    return false\n  end\n  if n == -27 then\n    return false\n\
    \  end\n  if n == -28 then\n    return false\n  end\n  if n == -29 then\n    return\
    \ false\n  end\n  if n == -30 then\n    return false\n  end\n  if n == -31 then\n\
    \    return false\n  end\n  if n == -32 then\n    return false\n  end\n  if n\
    \ == -33 then\n    return false\n  end\n  if n == -34 then\n    return false\n\
    \  end\n  if n == -35 then\n    return false\n  end\n  if n == -36 then\n    return\
    \ false\n  end\n  if n == -37 then\n    return false\n  end\n  if n == -38 then\n\
    \    return false\n  end\n  if n == -39 then\n    return false\n  end\n  if n\
    \ == -40 then\n    return false\n  end\n  if n == -41 then\n    return false\n\
    \  end\n  if n == -42 then\n    return false\n  end\n  if n == -43 then\n    return\
    \ false\n  end\n  if n == -44 then\n    return false\n  end\n  if n == -45 then\n"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

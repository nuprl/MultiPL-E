name: HumanEval_102_choose_num
language: lua
prompt: "-- This function takes two positive numbers x and y and returns the\n-- biggest\
  \ even integer number that is in the range [x, y] inclusive. If \n-- there's no\
  \ such number, then the function should return -1.\n-- For example:\n-- >>> choose_num(12,\
  \ 15)\n-- 14\n-- >>> choose_num(13, 12)\n-- -1\nlocal function choose_num(x, y)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = choose_num\n\
  \    lu.assertEquals(candidate(12, 15), 14)\n    lu.assertEquals(candidate(13, 12),\
  \ -1)\n    lu.assertEquals(candidate(33, 12354), 12354)\n    lu.assertEquals(candidate(5234,\
  \ 5233), -1)\n    lu.assertEquals(candidate(6, 29), 28)\n    lu.assertEquals(candidate(27,\
  \ 10), -1)\n    lu.assertEquals(candidate(7, 7), -1)\n    lu.assertEquals(candidate(546,\
  \ 546), 546)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    if x < y then\n        local tmp = x\n        x = y\n        y\
    \ = tmp\n    end\n    local max_num = x\n    for i = y, 1, -1 do\n        if max_num\
    \ % i == 0 then\n            max_num = i\n        end\n    end\n    return max_num\n\
    end", "    local xx = math.floor(x)\n    local yy = math.floor(y)\n    local xy\
    \ = math.floor(x + y)\n    local xx = math.floor(xx)\n    local yy = math.floor(yy)\n\
    \    local xy = math.floor(xy)\n    if xx < yy then\n        if xy < xx then\n\
    \            return xx\n        else\n            return yy\n        end\n   \
    \ else\n        if yy < xx then\n            return yy\n        else\n       \
    \     return xx\n        end\n    end\nend", "\tlocal function is_even(n)\n\t\t\
    return n % 2 == 0\n\tend\n\t\n\tlocal function is_odd(n)\n\t\treturn n % 2 ==\
    \ 1\n\tend\n\t\n\tlocal function is_between(x, y)\n\t\treturn x >= y and x <=\
    \ y\n\tend\n\t\n\tlocal function is_in_range(n)\n\t\treturn is_even(n) and is_between(n\
    \ - 1, n)\n\tend\n\t\n\tlocal function is_in_range_odd(n)\n\t\treturn is_odd(n)\
    \ and is_between(n - 1, n)\n\tend\n\t\n\tlocal function is_in_range_even(n)\n\t\
    \treturn is_even(n) and is_between(n - 1, n)\n\tend\n\t\n\tlocal function is_in_range_odd_even(n)\n\
    \t\treturn is_odd(n) and is_even(n) and is_between(n - 1, n)\n\tend\n\t\n\tlocal\
    \ function is_in_range_odd_odd(n)\n\t\treturn is_odd(n) and is_odd(n) and is_between(n\
    \ - 1, n)\n\tend\n\t\n\tlocal function is_in_range_odd_even_even(n)\n\t\treturn\
    \ is_odd(n) and is_even(n) and is_between(n - 1, n)\n\tend\n\t\n\tlocal function\
    \ is_in_range_odd_even_odd(n)\n\t\treturn is_odd(n) and is_odd(n) and is_even(n)\
    \ and is_between(n - 1, n)\n\tend\n\t\n\tlocal function is_in_range_odd_even_even_even(n)\n\
    \t\treturn is_odd(n) and is_even(n) and is_even(n) and is_between(n - 1, n)\n\t\
    end\n\t\n\tlocal function is_in_range_odd_even_even_odd(n)\n\t\treturn is_odd(n)\
    \ and is_even(n) and is_odd(n) and is_between(n - 1, n)\n\tend\n\t\n\tlocal function\
    \ is_in_range_odd_even_odd_even(n)\n\t\treturn is_odd(n) and is_even(n) and is_odd(n)\
    \ and is_even(n) and is_between(n - 1, n)\n\tend\n\t\n\tlocal function is_in_range_odd_even_odd_odd(n)\n\
    \t\treturn is_odd(n) and is_even(n) and is_odd(n) and is_odd(n) and is_between(n\
    \ - 1, n)\n\tend\n\t\n\tlocal function is_in_range_odd_even_odd_even_even(n)\n\
    \t\treturn is_odd(n) and is_even(n) and is_odd(n) and is_even(n) and is_between(n\
    \ - 1, n)\n\tend\n\t\n\tlocal function is_in_range_odd_even_", "   if x < y then\n\
    \      local t = x\n      x = y\n      y = t\n   end\n   if x < 1 then\n     \
    \ return -1\n   end\n   if y < 1 then\n      return -1\n   end\n   if x == y then\n\
    \      return x\n   end\n   local m = math.floor((x + y) / 2)\n   if m % 2 ==\
    \ 0 then\n      return choose_num(x, m)\n   else\n      return choose_num(m, y)\n\
    \   end\nend", "   if x < y then\n      x, y = y, x\n   end\n   for i = x, y +\
    \ 1 do\n      if i % 2 == 0 then\n         return i\n      end\n   end\n   return\
    \ -1\nend", "   if x < y then\n      local m = x\n      x = y\n      y = m\n \
    \  end\n   if x < 1 then\n      return -1\n   end\n   if y < 1 then\n      return\
    \ -1\n   end\n   if x == 1 then\n      return y\n   end\n   if y == 1 then\n \
    \     return x\n   end\n   if x % 2 == 0 then\n      return choose_num(x / 2,\
    \ y)\n   end\n   if y % 2 == 0 then\n      return choose_num(x, y / 2)\n   end\n\
    \   if x % 2 == y % 2 then\n      return choose_num(x / 2, y / 2)\n   end\n  \
    \ if x % 2 == y % 2 then\n      return choose_num(x, y / 2)\n   end\n   return\
    \ -1\nend", "  if x < y then\n    x, y = y, x\n  end\n  local max_num = x\n  local\
    \ max_num2 = y\n  local i = 1\n  while i <= max_num2 do\n    local num = max_num\
    \ * i\n    if num % 2 == 0 then\n      max_num = num\n    end\n    i = i + 1\n\
    \  end\n  return max_num\nend", "\tlocal function is_even(n)\n\t\treturn n % 2\
    \ == 0\n\tend\n\t\n\tlocal function is_odd(n)\n\t\treturn n % 2 == 1\n\tend\n\t\
    \n\tlocal function is_between(n, x, y)\n\t\treturn n >= x and n <= y\n\tend\n\t\
    \n\tlocal function is_in_range(n)\n\t\treturn is_between(n, x, y)\n\tend\n\t\n\
    \tlocal function is_in_range_odd(n)\n\t\treturn is_between(n, x, y)\n\tend\n\t\
    \n\tlocal function is_in_range_even(n)\n\t\treturn is_even(n)\n\tend\n\t\n\tlocal\
    \ function is_in_range_odd_even(n)\n\t\treturn is_odd(n) or is_even(n)\n\tend\n\
    \t\n\tlocal function is_in_range_odd_odd(n)\n\t\treturn is_odd(n) or is_odd(n)\n\
    \tend\n\t\n\tlocal function is_in_range_odd_even_even(n)\n\t\treturn is_odd(n)\
    \ or is_even(n) or is_even(n)\n\tend\n\t\n\tlocal function is_in_range_odd_even_odd(n)\n\
    \t\treturn is_odd(n) or is_odd(n) or is_odd(n)\n\tend\n\t\n\tlocal function is_in_range_odd_even_even_even(n)\n\
    \t\treturn is_odd(n) or is_even(n) or is_even(n) or is_even(n)\n\tend\n\t\n\t\
    local function is_in_range_odd_even_even_odd(n)\n\t\treturn is_odd(n) or is_odd(n)\
    \ or is_odd(n) or is_odd(n)\n\tend\n\t\n\tlocal function is_in_range_odd_even_even_even_even(n)\n\
    \t\treturn is_odd(n) or is_even(n) or is_even(n) or is_even(n) or is_even(n)\n\
    \tend\n\t\n\tlocal function is_in_range_odd_even_even_even_odd(n)\n\t\treturn\
    \ is_odd(n) or is_odd(n) or is_odd(n) or is_odd(n) or is_odd(n)\n\tend\n\t\n\t\
    local function is_in_range_odd_even_even_even_even_even(n)\n\t\treturn is_odd(n)\
    \ or is_odd(n) or is_odd(n) or is_odd(n) or is_odd(n) or is_even(n) or is_even(n)\
    \ or is_even(n)\n\tend\n\t\n\tlocal function is_in_range_odd_even_even_even_even_odd(n)\n\
    \t\treturn is_odd(n) or is_odd(n) or is_odd(n) or is_odd(n) or ", "  local function\
    \ is_even(n)\n    return n % 2 == 0\n  end\n  \n  local function is_odd(n)\n \
    \   return n % 2 == 1\n  end\n  \n  local function is_between(x, y)\n    return\
    \ x >= y and x <= y\n  end\n  \n  local function is_in_range(n)\n    return is_even(n)\
    \ and is_between(n - 2, n)\n  end\n  \n  local function is_in_range_or_not(n)\n\
    \    return is_in_range(n) or is_odd(n)\n  end\n  \n  local function is_in_range_or_not_and_is_even(n)\n\
    \    return is_in_range_or_not(n) and is_even(n)\n  end\n  \n  local function\
    \ is_in_range_or_not_and_is_odd(n)\n    return is_in_range_or_not(n) and is_odd(n)\n\
    \  end\n  \n  local function is_in_range_or_not_and_is_in_range(n)\n    return\
    \ is_in_range_or_not(n) and is_between(n, n + 2)\n  end\n  \n  local function\
    \ is_in_range_or_not_and_is_in_range_or_not(n)\n    return is_in_range_or_not(n)\
    \ and is_in_range(n) or is_in_range(n + 1)\n  end\n  \n  local function is_in_range_or_not_and_is_in_range_or_not_and_is_even(n)\n\
    \    return is_in_range_or_not_and_is_in_range(n) and is_even(n)\n  end\n  \n\
    \  local function is_in_range_or_not_and_is_in_range_or_not_and_is_odd(n)\n  \
    \  return is_in_range_or_not_and_is_in_range(n) and is_odd(n)\n  end\n  \n  local\
    \ function is_in_range_or_not_and_is_in_range_or_not_and_is_in_range(n)\n    return\
    \ is_in_range_or_not_and_is_in_range(n) and is_between(n, n + 2)\n  end\n  \n\
    \  local function is_in_range_or_not_and_is_in_range_or_not_and_is_in_range_or_not(n)\n\
    \    return is_in_range_or_not_and_is_in_range(n) and is_in_range(n) or is_in_range(n\
    \ + 1)\n  end\n  \n  local function is_in_range_or_not_and_is_in_range_or_not_and_is_in_range_or_not_and_is_even(n)\n\
    \    return is_in_range_or_not_and_is_in_range_or_not(n) and is_even(n)\n  end\n\
    \  \n  local function is_in_range_or_not_and_is_in_range_or_not_and_is_in_range_or_not_and_is_odd(n)\n\
    \    return is_in_range_or_not_and_is_in_range_or_not(n) and is_odd(n)\n  end\n\
    \  \n  local function is_in_range_or_not_and_is_in_range_or_", "  if x < y then\n\
    \    x, y = y, x\n  end\n  local max_num = x\n  local min_num = y\n  while max_num\
    \ - min_num > 1 do\n    local mid = max_num + min_num / 2\n    if mid % 2 == 0\
    \ then\n      max_num = mid\n    else\n      min_num = mid\n    end\n  end\n \
    \ return max_num\nend", "  if x > y then\n    x, y = y, x\n  end\n  local result\
    \ = x\n  local i = 1\n  while i <= y do\n    if result % 2 == 0 then\n      result\
    \ = result / 2\n    else\n      result = result * 3 + 1\n    end\n    i = i +\
    \ 1\n  end\n  return result\nend", "   if x < y then\n      return choose_num(y,\
    \ x)\n   end\n   if x == y then\n      return x\n   end\n   if x % 2 == 0 then\n\
    \      return choose_num(x / 2, y)\n   end\n   if y % 2 == 0 then\n      return\
    \ choose_num(x, y / 2)\n   end\n   if x > y then\n      return choose_num(y, x)\n\
    \   end\n   return -1\nend", "   if x < y then\n      x, y = y, x\n   end\n  \
    \ local z = 0\n   for i = x, y + 1 do\n      z = z * 2 + i\n   end\n   return\
    \ z\nend", "   if x < y then\n      local m = x\n      x = y\n      y = m\n  \
    \ end\n   local m = x\n   local n = y\n   while m % 2 == 0 and n >= m do\n   \
    \   m = m / 2\n      n = n - 1\n   end\n   return n\nend", "    local max_num\
    \ = x\n    local min_num = y\n    local max_even = 1\n    local max_odd = 0\n\
    \    local max_even2 = 0\n    local max_odd2 = 0\n    local max_even3 = 0\n  \
    \  local max_odd3 = 0\n    local max_even4 = 0\n    local max_odd4 = 0\n    local\
    \ max_even5 = 0\n    local max_odd5 = 0\n    local max_even6 = 0\n    local max_odd6\
    \ = 0\n    local max_even7 = 0\n    local max_odd7 = 0\n    local max_even8 =\
    \ 0\n    local max_odd8 = 0\n    local max_even9 = 0\n    local max_odd9 = 0\n\
    \    local max_even10 = 0\n    local max_odd10 = 0\n    local max_even11 = 0\n\
    \    local max_odd11 = 0\n    local max_even12 = 0\n    local max_odd12 = 0\n\
    \    local max_even13 = 0\n    local max_odd13 = 0\n    local max_even14 = 0\n\
    \    local max_odd14 = 0\n    local max_even15 = 0\n    local max_odd15 = 0\n\
    \    local max_even16 = 0\n    local max_odd16 = 0\n    local max_even17 = 0\n\
    \    local max_odd17 = 0\n    local max_even18 = 0\n    local max_odd18 = 0\n\
    \    local max_even19 = 0\n    local max_odd19 = 0\n    local max_even20 = 0\n\
    \    local max_odd20 = 0\n    local max_even21 = 0\n    local max_odd21 = 0\n\
    \    local max_even22 = 0\n    local max_odd22 = 0\n    local max_even23 = 0\n\
    \    local max_odd23 = 0\n    local max_even24 = 0\n    local max_odd24 = 0\n\
    \    local max_even25 = 0\n    local max_odd25 = 0\n    local max_even26 = 0\n\
    \    local max_odd26 = 0\n    local max_even27 = 0\n    local max_odd27 = 0\n\
    \    local max_even28 = 0\n    local max_odd28 = 0\n    local max_even29 = 0\n\
    \    local max_odd29 = 0\n    local max_even30 = 0\n    local max_odd30 = 0\n\
    \    local max_even31 = 0\n    local max_odd31 = 0\n    local max_even32 = 0\n\
    \    local max_odd32 = 0\n    local max_even33 = 0\n    local max_odd33 = 0\n\
    \    local max_even34 = 0\n    local max_odd34 = 0\n    local max_even35 = 0\n\
    \    local max_odd35 = 0\n    local max_even36 = 0\n    local max_odd36", "  if\
    \ x < y then\n    x, y = y, x\n  end\n  local max_num = x\n  local max_num2 =\
    \ y\n  while max_num2 > 0 do\n    local num = max_num2 + 1\n    max_num2 = max_num\
    \ % max_num2\n    max_num = num\n  end\n  return max_num\nend", "  if x < y then\n\
    \    x, y = y, x\n  end\n  local max_num = x\n  local max_num2 = y\n  local i\
    \ = 1\n  while i <= max_num2 do\n    if max_num % 2 == 0 then\n      max_num =\
    \ max_num / 2\n    else\n      max_num = max_num * 3 + 1\n    end\n    i = i +\
    \ 1\n  end\n  if max_num == max_num2 then\n    return -1\n  end\n  return max_num\n\
    end", "    if x < y then\n        x, y = y, x\n    end\n    if x > y then\n  \
    \      x, y = y, x\n    end\n    for i = x, y + 1 do\n        if i % 2 == 0 then\n\
    \            return i\n        end\n    end\n    return -1\nend", "  local function\
    \ is_even(n)\n    return n % 2 == 0\n  end\n  local function is_odd(n)\n    return\
    \ n % 2 == 1\n  end\n  local function is_between(x, y)\n    return x >= y and\
    \ x <= y\n  end\n  local function is_in_range(n)\n    return is_even(n) and is_between(n\
    \ - 2, n)\n  end\n  local function is_in_range_or_none(n)\n    return is_in_range(n)\
    \ or n\n  end\n  local function is_in_range_or_none_and_odd(n)\n    return is_in_range_or_none(n)\
    \ and is_odd(n)\n  end\n  local function is_in_range_or_none_and_even(n)\n   \
    \ return is_in_range_or_none(n) and is_even(n)\n  end\n  local function is_in_range_or_none_and_odd_and_even(n)\n\
    \    return is_in_range_or_none(n) and is_odd(n) and is_even(n)\n  end\n  local\
    \ function is_in_range_or_none_and_odd_and_odd(n)\n    return is_in_range_or_none(n)\
    \ and is_odd(n) and is_odd(n)\n  end\n  local function is_in_range_or_none_and_odd_and_odd_and_even(n)\n\
    \    return is_in_range_or_none(n) and is_odd(n) and is_odd(n) and is_even(n)\n\
    \  end\n  local function is_in_range_or_none_and_odd_and_odd_and_odd(n)\n    return\
    \ is_in_range_or_none(n) and is_odd(n) and is_odd(n) and is_odd(n)\n  end\n  local\
    \ function is_in_range_or_none_and_odd_and_odd_and_odd_and_even(n)\n    return\
    \ is_in_range_or_none(n) and is_odd(n) and is_odd(n) and is_odd(n) and is_even(n)\n\
    \  end\n  local function is_in_range_or_none_and_odd_and_odd_and_odd_and_odd(n)\n\
    \    return is_in_range_or_none(n) and is_odd(n) and is_odd(n) and is_odd(n) and\
    \ is_odd(n)\n  end\n  local function is_in_range_or_none_and_odd_and_odd_and_odd_and_odd_and_even(n)\n\
    \    return is_in_range_or_none(n) and is_odd(n) and is_odd(n) and is_odd(n) and\
    \ is_odd(n) and is_even(n)\n  end\n  local function is_in_range_or_none_and_odd_and_odd_and_odd_and_odd_and_odd_and_even(n)\n\
    \    return is_in_range_or_none(n) and is_odd(n) and is_odd(n) and is_odd(n) and\
    \ is_odd(n) and is_", "    if x < y then\n        x, y = y, x\n    end\n    if\
    \ x > y then\n        x, y = y, x\n    end\n    if x == y then\n        return\
    \ x\n    end\n    if x % 2 == 0 then\n        return choose_num(x / 2, y)\n  \
    \  end\n    if y % 2 == 0 then\n        return choose_num(x, y / 2)\n    end\n\
    \    return -1\nend", "   if x >= y then\n      return -1\n   end\n   if x ==\
    \ y then\n      return x\n   end\n   local m = math.floor((x + y) / 2)\n   return\
    \ choose_num(x, m) + choose_num(m, y)\nend", "  if x < y then\n    return choose_num(y,\
    \ x)\n  elseif x == y then\n    return x\n  else\n    return -1\n  end\nend",
  "  if x >= y then\n    return -1\n  end\n  if x < y then\n    return choose_num(y,\
    \ x)\n  end\n  local z = x\n  while z <= y do\n    if z & 1 then\n      return\
    \ z\n    end\n    z = z >> 1\n  end\n  return -1\nend", "   if x < y then\n  \
    \    x, y = y, x\n   end\n   for i = x, y + 1 do\n      if i ~= math.floor(i)\
    \ then\n         return i\n      end\n   end\n   return -1\nend", "    local x_even\
    \ = x % 2\n    local y_even = y % 2\n    if x_even and y_even then\n        return\
    \ x + (y - x)\n    elseif x_even then\n        return x - y\n    else\n      \
    \  return y - x\n    end\nend", "  if x < y then\n    x, y = y, x\n  end\n  local\
    \ max_num = x\n  local min_num = y\n  while max_num < min_num do\n    max_num\
    \ = max_num * 2 + 1\n    min_num = min_num * 2 - 1\n  end\n  return max_num\n\
    end", "   if x < y then\n      x, y = y, x\n   end\n   local max_num = x\n   for\
    \ i = y, 1, -1 do\n      if max_num % i == 0 then\n         max_num = max_num\
    \ / i\n      else\n         return -1\n      end\n   end\n   return max_num\n\
    end", "   if x < y then\n      return choose_num(y, x)\n   end\n   if x == y then\n\
    \      return x\n   end\n   if x % 2 == 0 and y % 2 == 0 then\n      return choose_num(x\
    \ / 2, y / 2)\n   end\n   return -1\nend", "    local function is_even(n)\n  \
    \      return n % 2 == 0\n    end", "  if x < y then\n    return -1\n  elseif\
    \ x == y then\n    return x\n  else\n    return y\n  end\nend", "  if x < y then\n\
    \    return -1\n  elseif x == y then\n    return x\n  else\n    local m = (x +\
    \ y) / 2\n    if m % 2 == 0 then\n      return choose_num(x, y)\n    else\n  \
    \    return m\n    end\n  end\nend", "\tlocal max_num = x\n\tlocal min_num = y\n\
    \tlocal max_even = 1\n\tlocal max_odd = 0\n\tlocal max_even_in_range = 0\n\tlocal\
    \ max_odd_in_range = 0\n\tlocal max_even_in_range_plus_one = 0\n\tlocal max_odd_in_range_plus_one\
    \ = 0\n\tlocal max_even_in_range_plus_two = 0\n\tlocal max_odd_in_range_plus_two\
    \ = 0\n\tlocal max_even_in_range_plus_three = 0\n\tlocal max_odd_in_range_plus_three\
    \ = 0\n\tlocal max_even_in_range_plus_four = 0\n\tlocal max_odd_in_range_plus_four\
    \ = 0\n\tlocal max_even_in_range_plus_five = 0\n\tlocal max_odd_in_range_plus_five\
    \ = 0\n\tlocal max_even_in_range_plus_six = 0\n\tlocal max_odd_in_range_plus_six\
    \ = 0\n\tlocal max_even_in_range_plus_seven = 0\n\tlocal max_odd_in_range_plus_seven\
    \ = 0\n\tlocal max_even_in_range_plus_eight = 0\n\tlocal max_odd_in_range_plus_eight\
    \ = 0\n\tlocal max_even_in_range_plus_nine = 0\n\tlocal max_odd_in_range_plus_nine\
    \ = 0\n\tlocal max_even_in_range_plus_ten = 0\n\tlocal max_odd_in_range_plus_ten\
    \ = 0\n\tlocal max_even_in_range_plus_eleven = 0\n\tlocal max_odd_in_range_plus_eleven\
    \ = 0\n\tlocal max_even_in_range_plus_twelve = 0\n\tlocal max_odd_in_range_plus_twelve\
    \ = 0\n\tlocal max_even_in_range_plus_thirteen = 0\n\tlocal max_odd_in_range_plus_thirteen\
    \ = 0\n\tlocal max_even_in_range_plus_fourteen = 0\n\tlocal max_odd_in_range_plus_fourteen\
    \ = 0\n\tlocal max_even_in_range_plus_fifteen = 0\n\tlocal max_odd_in_range_plus_fifteen\
    \ = 0\n\tlocal max_even_in_range_plus_sixteen = 0\n\tlocal max_odd_in_range_plus_sixteen\
    \ = 0\n\tlocal max_even_in_range_plus_seventeen = 0\n\tlocal max_odd_in_range_plus_seventeen\
    \ = 0\n\tlocal max_even_in_range_plus_eighteen = 0\n\tlocal max_odd_in_range_plus_eighteen\
    \ = 0\n\tlocal max_even_in_range_plus_nineteen = 0\n\tlocal max_odd_in_range_plus_nineteen\
    \ = 0\n\tlocal max_even_in_range_plus_twenty = 0\n\tlocal max_odd_in_range_plus_twenty\
    \ = 0\n\tlocal max_even_in_range_plus_twenty_one = 0\n", "  local function is_even(n)\n\
    \    return n % 2 == 0\n  end\n  \n  local function is_odd(n)\n    return n %\
    \ 2 == 1\n  end\n  \n  local function is_between(x, y)\n    return x >= y and\
    \ x <= y\n  end\n  \n  local function is_in_range(n)\n    return is_even(n) and\
    \ is_between(n - 2, n)\n  end\n  \n  local function is_in_range_or_none(n)\n \
    \   return is_even(n) and is_in_range(n) or nil\n  end\n  \n  local function is_in_range_or_none2(n)\n\
    \    return is_even(n) and is_in_range_or_none(n) or nil\n  end\n  \n  local function\
    \ is_in_range_or_none3(n)\n    return is_even(n) and is_in_range_or_none2(n) or\
    \ nil\n  end\n  \n  local function is_in_range_or_none4(n)\n    return is_even(n)\
    \ and is_in_range_or_none3(n) or nil\n  end\n  \n  local function is_in_range_or_none5(n)\n\
    \    return is_even(n) and is_in_range_or_none4(n) or nil\n  end\n  \n  local\
    \ function is_in_range_or_none6(n)\n    return is_even(n) and is_in_range_or_none5(n)\
    \ or nil\n  end\n  \n  local function is_in_range_or_none7(n)\n    return is_even(n)\
    \ and is_in_range_or_none6(n) or nil\n  end\n  \n  local function is_in_range_or_none8(n)\n\
    \    return is_even(n) and is_in_range_or_none7(n) or nil\n  end\n  \n  local\
    \ function is_in_range_or_none9(n)\n    return is_even(n) and is_in_range_or_none8(n)\
    \ or nil\n  end\n  \n  local function is_in_range_or_none10(n)\n    return is_even(n)\
    \ and is_in_range_or_none9(n) or nil\n  end\n  \n  local function is_in_range_or_none11(n)\n\
    \    return is_even(n) and is_in_range_or_none10(n) or nil\n  end\n  \n  local\
    \ function is_in_range_or_none12(n)\n    return is_even(n) and is_in_range_or_none11(n)\
    \ or nil\n  end\n  \n  local function is_in_range_or_none13(n)\n    return is_even(n)\
    \ and is_in_range_or_none12(n) or nil\n  end\n  \n  local function is_in_range_or_none14(n)\n\
    \    return is_even(n) and is_in_range_or_none13(n) or nil\n  end\n  \n  local\
    \ function is_in_range_or_none15(n)\n    return is_even(n) and is_in_range_or_none14(n",
  "    if x < y then\n        local t = x\n        x = y\n        y = t\n    end\n\
    \    local max_num = x\n    local min_num = y\n    while max_num - min_num > 1\
    \ do\n        local mid = (max_num + min_num) / 2\n        if mid % 2 == 0 then\n\
    \            max_num = mid\n        else\n            min_num = mid\n        end\n\
    \    end\n    return max_num\nend", "  if x < y then\n    return -1\n  end\n \
    \ local max_num\n  local max_num_pos\n  local max_num_neg\n  local max_num_neg2\n\
    \  local max_num_neg3\n  local max_num_neg4\n  local max_num_neg5\n  local max_num_neg6\n\
    \  local max_num_neg7\n  local max_num_neg8\n  local max_num_neg9\n  local max_num_neg10\n\
    \  local max_num_neg11\n  local max_num_neg12\n  local max_num_neg13\n  local\
    \ max_num_neg14\n  local max_num_neg15\n  local max_num_neg16\n  local max_num_neg17\n\
    \  local max_num_neg18\n  local max_num_neg19\n  local max_num_neg20\n  local\
    \ max_num_neg21\n  local max_num_neg22\n  local max_num_neg23\n  local max_num_neg24\n\
    \  local max_num_neg25\n  local max_num_neg26\n  local max_num_neg27\n  local\
    \ max_num_neg28\n  local max_num_neg29\n  local max_num_neg30\n  local max_num_neg31\n\
    \  local max_num_neg32\n  local max_num_neg33\n  local max_num_neg34\n  local\
    \ max_num_neg35\n  local max_num_neg36\n  local max_num_neg37\n  local max_num_neg38\n\
    \  local max_num_neg39\n  local max_num_neg40\n  local max_num_neg41\n  local\
    \ max_num_neg42\n  local max_num_neg43\n  local max_num_neg44\n  local max_num_neg45\n\
    \  local max_num_neg46\n  local max_num_neg47\n  local max_num_neg48\n  local\
    \ max_num_neg49\n  local max_num_neg50\n  local max_num_neg51\n  local max_num_neg52\n\
    \  local max_num_neg53\n  local max_num_neg54\n  local max_num_neg55\n  local\
    \ max_num_neg56\n  local max_num_neg57\n  local max_num_neg58\n  local max_num_neg59\n\
    \  local max_num_neg60\n  local max_num_neg61\n  local max_num_neg62\n  local\
    \ max_num_neg63\n  local max_num_neg64\n  local max_num_neg65\n  local max_num_neg66\n\
    \  local max_num_neg67\n  local max_num_neg68\n  local max_num_neg69\n  local\
    \ max_num_neg70\n  local ", "  if x < y then\n    return choose_num(y, x)\n  elseif\
    \ x == y then\n    return x\n  else\n    return choose_num(x + 1, y)\n  end\n\
    end", "  if x < y then\n    return choose_num(y, x)\n  end\n  if x == y then\n\
    \    return x\n  end\n  if x % 2 == 0 then\n    return choose_num(x / 2, y)\n\
    \  end\n  if y % 2 == 0 then\n    return choose_num(x, y / 2)\n  end\n  if x >\
    \ y then\n    return choose_num(y / 2, x)\n  end\n  return -1\nend", "  if x <\
    \ y then\n    return choose_num(y, x)\n  elseif x == y then\n    return x\n  else\n\
    \    return choose_num(y - 1, x + 1)\n  end\nend", "  if x < y then\n    x, y\
    \ = y, x\n  end\n  local max_num = x\n  local min_num = y\n  while max_num < min_num\
    \ do\n    max_num = max_num * 2 + 1\n    min_num = min_num * 2 - 1\n  end\n  if\
    \ max_num > y then\n    return -1\n  end\n  return max_num\nend", "\tlocal function\
    \ is_even(n)\n\t\treturn n % 2 == 0\n\tend", "   if x < y then\n      x, y = y,\
    \ x\n   end\n   local max_num = x\n   for i = y, 1, -1 do\n      if max_num %\
    \ i == 0 then\n         max_num = max_num / i\n      else\n         return -1\n\
    \      end\n   end\n   return max_num\nend", "  if x < y then\n    x, y = y, x\n\
    \  end\n  local max_num = x\n  local max_num_pos = 1\n  local max_num_neg = 1\n\
    \  local max_num_even = 1\n  local max_num_odd = 1\n  for i = x, y + 1 do\n  \
    \  if i % 2 == 0 then\n      if max_num_even < i then\n        max_num_even =\
    \ i\n      else\n        max_num_odd = i\n      end\n    else\n      if max_num_neg\
    \ < i then\n        max_num_neg = i\n      else\n        max_num = i\n      end\n\
    \    end\n  end\n  if max_num_even > max_num_odd then\n    return max_num_even\n\
    \  else\n    return max_num_odd\n  end\nend", "   if x < y then\n      local m\
    \ = math.max(x, y)\n      return m % 2 == 0 and m or -1\n   end\n   if x > y then\n\
    \      local m = math.min(x, y)\n      return m % 2 == 0 and m or -1\n   end\n\
    \   return -1\nend", "  local function is_even(n)\n    return n % 2 == 0\n  end\n\
    \  \n  local function is_odd(n)\n    return n % 2 == 1\n  end\n  \n  local function\
    \ is_between(n, x, y)\n    return n >= x and n <= y\n  end\n  \n  local function\
    \ is_in_range(n)\n    return is_between(n, x, y)\n  end\n  \n  local function\
    \ is_in_range_or_even(n)\n    return is_in_range(n) or is_even(n)\n  end\n  \n\
    \  local function is_in_range_or_odd(n)\n    return is_in_range(n) or is_odd(n)\n\
    \  end\n  \n  local function is_in_range_or_even_in_range(n)\n    return is_in_range_or_even(n)\
    \ or is_in_range_or_odd(n)\n  end\n  \n  local function is_in_range_or_odd_in_range(n)\n\
    \    return is_in_range_or_odd(n) or is_in_range_or_even(n)\n  end\n  \n  local\
    \ function is_in_range_or_even_in_range_or_odd(n)\n    return is_in_range_or_even_in_range(n)\
    \ or is_in_range_or_odd_in_range(n)\n  end\n  \n  local function is_in_range_or_odd_in_range_or_even(n)\n\
    \    return is_in_range_or_odd_in_range(n) or is_in_range_or_even_in_range(n)\n\
    \  end\n  \n  local function is_in_range_or_even_in_range_or_odd_in_range(n)\n\
    \    return is_in_range_or_even_in_range(n) or is_in_range_or_odd_in_range(n)\n\
    \  end\n  \n  local function is_in_range_or_odd_in_range_or_even_in_range(n)\n\
    \    return is_in_range_or_odd_in_range(n) or is_in_range_or_even_in_range(n)\n\
    \  end\n  \n  local function is_in_range_or_even_in_range_or_odd_in_range_or_even(n)\n\
    \    return is_in_range_or_even_in_range(n) or is_in_range_or_odd_in_range(n)\
    \ or is_in_range_or_even_in_range(n)\n  end\n  \n  local function is_in_range_or_odd_in_range_or_even_in_range_or_odd(n)\n\
    \    return is_in_range_or_odd_in_range(n) or is_in_range_or_even_in_range(n)\
    \ or is_in_range_or_odd(n)\n  end\n  \n  local function is_in_range_or_even_in_range_or_odd_in_range_or_even(n)\n\
    \    return is_in_range_or_even_in_range(n) or is_in_range_or_odd_in_range(n)\
    \ or is_in_range_or_even_in_range(n)\n  end\n  \n  local function is_in_range_or_odd_in_",
  "    if x < y then\n        x, y = y, x\n    end\n    if x > y then\n        x,\
    \ y = y, x\n    end\n    if x == y then\n        return -1\n    end\n    if x\
    \ % 2 == 0 then\n        return choose_num(x / 2, y)\n    else\n        return\
    \ choose_num(x / 2 + 1, y)\n    end\nend", "  local function is_even(n)\n    return\
    \ n % 2 == 0\n  end\n  \n  local function is_odd(n)\n    return n % 2 == 1\n \
    \ end\n  \n  local function is_between(lower, upper)\n    return lower <= upper\
    \ and lower >= 0 and upper >= 0\n  end\n  \n  local function is_in_range(lower,\
    \ upper)\n    return lower <= x and x <= upper\n  end\n  \n  local function is_in_range_or_none(lower,\
    \ upper)\n    return is_in_range(lower, upper) or nil\n  end\n  \n  local function\
    \ is_in_range_or_zero(lower, upper)\n    return is_in_range(lower, upper) or 0\n\
    \  end\n  \n  local function is_in_range_or_one(lower, upper)\n    return is_in_range(lower,\
    \ upper) or 1\n  end\n  \n  local function is_in_range_or_zero(lower, upper)\n\
    \    return is_in_range(lower, upper) or 0\n  end\n  \n  local function is_in_range_or_one(lower,\
    \ upper)\n    return is_in_range(lower, upper) or 1\n  end\n  \n  local function\
    \ is_in_range_or_zero(lower, upper)\n    return is_in_range(lower, upper) or 0\n\
    \  end\n  \n  local function is_in_range_or_one(lower, upper)\n    return is_in_range(lower,\
    \ upper) or 1\n  end\n  \n  local function is_in_range_or_zero(lower, upper)\n\
    \    return is_in_range(lower, upper) or 0\n  end\n  \n  local function is_in_range_or_one(lower,\
    \ upper)\n    return is_in_range(lower, upper) or 1\n  end\n  \n  local function\
    \ is_in_range_or_zero(lower, upper)\n    return is_in_range(lower, upper) or 0\n\
    \  end\n  \n  local function is_in_range_or_one(lower, upper)\n    return is_in_range(lower,\
    \ upper) or 1\n  end\n  \n  local function is_in_range_or_zero(lower, upper)\n\
    \    return is_in_range(lower, upper) or 0\n  end\n  \n  local function is_in_range_or_one(lower,\
    \ upper)\n    return is_in_range(lower, upper) or 1\n  end\n  \n  local function\
    \ is_in_range_or_zero(lower, upper)\n    return is_in_range(lower, upper) or 0\n\
    \  end\n  \n  local function is_in_range_or_one(lower, upper)\n    return is_in_range(lower,\
    \ upper) or 1\n  end\n  \n  local function is_in_range_or_zero(lower, upper)\n\
    \    return is_in_", "    if x < y then\n        x, y = y, x\n    end\n    local\
    \ max_num = x\n    local max_num2 = y\n    local i = 1\n    while i <= max_num2\
    \ do\n        if max_num % 2 == 0 then\n            max_num = max_num / 2\n  \
    \      else\n            max_num = max_num * 3 + 1\n        end\n        i = i\
    \ + 1\n    end\n    return max_num\nend", "\tlocal x_even = x % 2\n\tlocal y_even\
    \ = y % 2\n\tlocal x_odd = x % 2 + 1\n\tlocal y_odd = y % 2 + 1\n\tlocal biggest_even\
    \ = -1\n\t\n\tif x_even > y_even then\n\t\tif x_even > biggest_even then\n\t\t\
    \tbiggest_even = x_even\n\t\tend\n\t\tif y_even > biggest_even then\n\t\t\tbiggest_even\
    \ = y_even\n\t\tend\n\telse\n\t\tif y_even > biggest_even then\n\t\t\tbiggest_even\
    \ = y_even\n\t\tend\n\t\tif x_even > biggest_even then\n\t\t\tbiggest_even = x_even\n\
    \t\tend\n\tend\n\t\n\tif biggest_even > -1 then\n\t\tif biggest_even > x_odd then\n\
    \t\t\tbiggest_even = x_odd\n\t\tend\n\t\tif biggest_even > y_odd then\n\t\t\t\
    biggest_even = y_odd\n\t\tend\n\tend\n\t\n\treturn biggest_even\nend", "   if\
    \ x < y then\n      local m = x\n      x = y\n      y = m\n   end\n   if x < 1\
    \ then\n      return -1\n   end\n   if y < 1 then\n      return -1\n   end\n \
    \  if x == 1 then\n      return y\n   end\n   if y == 1 then\n      return x\n\
    \   end\n   local m = math.floor((x + y) / 2)\n   return choose_num(x, m) + choose_num(m,\
    \ y)\nend", "  local function is_even(n)\n    return n % 2 == 0\n  end", "  if\
    \ x >= y then\n    return -1\n  end\n  local max_num = x\n  local max_num2 = y\n\
    \  while max_num2 > max_num do\n    max_num2 = max_num2 * 2\n  end\n  while max_num2\
    \ >= max_num do\n    max_num = max_num / 2\n  end\n  return max_num\nend", " \
    \  if x < y then\n      x, y = y, x\n   end\n   local max_num = x\n   for i =\
    \ y, 1, -1 do\n      if max_num % i == 0 then\n         max_num = max_num / i\n\
    \      else\n         return -1\n      end\n   end\n   return max_num\nend", " \
    \   if x < y then\n        x, y = y, x\n    end\n    for i = x, y + 1 do\n   \
    \     if i % 2 == 0 then\n            return i\n        end\n    end\n    return\
    \ -1\nend", "   if x < y then\n      local z = x\n      x = y\n      y = z\n \
    \  end\n   local i = 1\n   while i <= y do\n      if x % 2 == 0 then\n       \
    \  return x\n      else\n         x = x + 1\n      end\n      i = i + 1\n   end\n\
    \   return -1\nend", "   if x < y then\n      local m = math.max(x, y)\n     \
    \ if m % 2 == 0 then\n         return m\n      else\n         return -1\n    \
    \  end\n   else\n      local m = math.min(x, y)\n      if m % 2 == 0 then\n  \
    \       return m\n      else\n         return -1\n      end\n   end\nend", " \
    \   local max_num = x\n    local min_num = y\n    local max_even = 1\n    local\
    \ max_odd = 0\n    local max_even_in_range = max_even\n    local max_odd_in_range\
    \ = max_odd\n    local max_even_in_range_left = max_even\n    local max_odd_in_range_left\
    \ = max_odd\n    local max_even_in_range_right = max_even\n    local max_odd_in_range_right\
    \ = max_odd\n    local max_even_in_range_left_left = max_even\n    local max_odd_in_range_left_left\
    \ = max_odd\n    local max_even_in_range_right_right = max_even\n    local max_odd_in_range_right_right\
    \ = max_odd\n    local max_even_in_range_left_right = max_even\n    local max_odd_in_range_left_right\
    \ = max_odd\n    local max_even_in_range_right_left = max_even\n    local max_odd_in_range_right_left\
    \ = max_odd\n    local max_even_in_range_left_left = max_even\n    local max_odd_in_range_left_left\
    \ = max_odd\n    local max_even_in_range_right_right = max_even\n    local max_odd_in_range_right_right\
    \ = max_odd\n    local max_even_in_range_left_right = max_even\n    local max_odd_in_range_left_right\
    \ = max_odd\n    local max_even_in_range_right_left = max_even\n    local max_odd_in_range_right_left\
    \ = max_odd\n    local max_even_in_range_left_left = max_even\n    local max_odd_in_range_left_left\
    \ = max_odd\n    local max_even_in_range_right_right = max_even\n    local max_odd_in_range_right_right\
    \ = max_odd\n    local max_even_in_range_left_right = max_even\n    local max_odd_in_range_left_right\
    \ = max_odd\n    local max_even_in_range_right_left = max_even\n    local max_odd_in_range_right_left\
    \ = max_odd\n    local max_even_in_range_left_left = max_even\n    local max_odd_in_range_left_left\
    \ = max_odd\n    local max_even_in_range_right_right = max_even\n    local max_odd_in_range_right_right\
    \ = max_odd\n    local max_even_in_range_left_right = max_even\n    local max_odd_in_range_left_right\
    \ = max_odd\n    local max_even_in_range_right_left = max_even\n    local max_odd_in_range_right_left\
    \ = max_odd\n    local max_even_in_range_left_left = max_even\n    local max_odd_in_range_left_left\
    \ = max_odd\n    local max_even_in_range_right_right = max_even\n    local max_odd_in_range_right_right\
    \ = max_odd\n    local max_even_in_range_left_right = max_even\n    local ", " \
    \ if x < y then\n    return choose_num(y, x)\n  end\n  if x == y then\n    return\
    \ x\n  end\n  if x % 2 == 0 and y % 2 == 0 then\n    return x + (y - x)\n  end\n\
    \  if x % 2 == 0 and y % 2 ~= 0 then\n    return choose_num(x / 2, y)\n  end\n\
    \  if x % 2 ~= 0 and y % 2 == 0 then\n    return choose_num(x, y / 2)\n  end\n\
    \  if x % 2 ~= 0 and y % 2 ~= 0 then\n    return choose_num(x / 2, y / 2)\n  end\n\
    \  return -1\nend", "   if x < y then\n      local m = x\n      x = y\n      y\
    \ = m\n   end\n   if x < 1 then\n      return -1\n   end\n   if y < 1 then\n \
    \     return -1\n   end\n   if x == y then\n      return x\n   end\n   if x %\
    \ 2 == 0 then\n      return choose_num(x / 2, y)\n   end\n   if y % 2 == 0 then\n\
    \      return choose_num(x, y / 2)\n   end\n   if x % 2 == y % 2 then\n      return\
    \ choose_num(x / 2, y / 2)\n   end\n   return -1\nend", "  if x < y then\n   \
    \ return -1\n  end\n  local max_num = x\n  local min_num = y\n  while max_num\
    \ - min_num > 1 do\n    local mid = max_num + min_num / 2\n    if mid % 2 == 0\
    \ then\n      max_num = mid\n    else\n      min_num = mid\n    end\n  end\n \
    \ return max_num\nend", "  local function is_even(n)\n    return n % 2 == 0\n\
    \  end\n  local function is_odd(n)\n    return n % 2 == 1\n  end\n  local function\
    \ is_between(n1, n2)\n    return n1 <= n2 and n2 <= n1\n  end\n  local function\
    \ is_in_range(n1, n2)\n    return is_even(n1) and is_even(n2) and is_between(n1,\
    \ n2)\n  end\n  local function is_in_range_odd(n1, n2)\n    return is_odd(n1)\
    \ and is_odd(n2) and is_between(n1, n2)\n  end\n  local function is_in_range_even(n1,\
    \ n2)\n    return is_even(n1) and is_even(n2) and is_in_range(n1, n2)\n  end\n\
    \  local function is_in_range_odd_even(n1, n2)\n    return is_odd(n1) and is_odd(n2)\
    \ and is_even(n1) and is_even(n2) and is_between(n1, n2)\n  end\n  local function\
    \ is_in_range_odd_odd(n1, n2)\n    return is_odd(n1) and is_odd(n2) and is_odd(n1)\
    \ and is_odd(n2) and is_between(n1, n2)\n  end\n  local function is_in_range_odd_even_odd(n1,\
    \ n2)\n    return is_odd(n1) and is_odd(n2) and is_even(n1) and is_even(n2) and\
    \ is_in_range(n1, n2)\n  end\n  local function is_in_range_odd_even_even(n1, n2)\n\
    \    return is_odd(n1) and is_odd(n2) and is_even(n1) and is_even(n2) and is_in_range_even(n1,\
    \ n2)\n  end\n  local function is_in_range_odd_even_odd_even(n1, n2)\n    return\
    \ is_odd(n1) and is_odd(n2) and is_even(n1) and is_even(n2) and is_in_range_odd_even(n1,\
    \ n2)\n  end\n  local function is_in_range_odd_even_odd_odd(n1, n2)\n    return\
    \ is_odd(n1) and is_odd(n2) and is_odd(n1) and is_odd(n2) and is_in_range_odd_odd(n1,\
    \ n2)\n  end\n  local function is_in_range_odd_even_odd_even_even(n1, n2)\n  \
    \  return is_odd(n1) and is_odd(n2) and is_even(n1) and is_even(n2) and is_in_range_odd_even_even(n1,\
    \ n2)\n  end\n  local function is_in_range_odd_even_odd_even_odd(n", "  if x <\
    \ y then\n    return -1\n  end\n  if x == y then\n    return x\n  end\n  if x\
    \ % 2 == 0 then\n    return choose_num(x / 2, y)\n  else\n    return choose_num(3\
    \ * x + 1, y)\n  end\nend", "    local max_num = 0\n    for i = x, y + 1 do\n\
    \        if max_num < i then\n            max_num = i\n        end\n    end\n\
    \    return max_num\nend", "\tlocal x_even = x % 2\n\tlocal y_even = y % 2\n\t\
    local x_odd = x % 2 + 1\n\tlocal y_odd = y % 2 + 1\n\tlocal x_even = x_even +\
    \ y_even\n\tlocal y_even = y_even + x_even\n\tlocal x_odd = x_odd + y_odd\n\t\
    local y_odd = y_odd + x_odd\n\tif x_even > y_even then\n\t\treturn x_even\n\t\
    else\n\t\treturn y_even\n\tend\nend", "    if x < y then\n        x, y = y, x\n\
    \    end\n    if x < 2 then\n        return -1\n    end\n    if x == 2 then\n\
    \        return x\n    end\n    if y == 2 then\n        return y\n    end\n  \
    \  if x % 2 == 0 then\n        return choose_num(x / 2, y)\n    end\n    if y\
    \ % 2 == 0 then\n        return choose_num(x, y / 2)\n    end\n    if x % 2 ==\
    \ y % 2 then\n        return x\n    end\n    return -1\nend", "\tlocal function\
    \ is_even(n)\n\t\treturn n % 2 == 0\n\tend", "  if x < y then\n    return -1\n\
    \  end\n  if x == y then\n    return x\n  end\n  if x % 2 == 0 then\n    return\
    \ choose_num(x / 2, y)\n  else\n    return choose_num(3 * x + 1, y)\n  end\nend",
  "\tlocal max_num = x\n\tlocal min_num = y\n\tlocal max_even = max_num / 2\n\tlocal\
    \ max_odd = max_num - max_even\n\tlocal max_even = max_even + max_even\n\tlocal\
    \ max_odd = max_odd + max_odd\n\tlocal max_even = max_even + max_even\n\tlocal\
    \ max_odd = max_odd + max_odd\n\tlocal max_even = max_even + max_even\n\tlocal\
    \ max_odd = max_odd + max_odd\n\tlocal max_even = max_even + max_even\n\tlocal\
    \ max_odd = max_odd + max_odd\n\tlocal max_even = max_even + max_even\n\tlocal\
    \ max_odd = max_odd + max_odd\n\tlocal max_even = max_even + max_even\n\tlocal\
    \ max_odd = max_odd + max_odd\n\tlocal max_even = max_even + max_even\n\tlocal\
    \ max_odd = max_odd + max_odd\n\tlocal max_even = max_even + max_even\n\tlocal\
    \ max_odd = max_odd + max_odd\n\tlocal max_even = max_even + max_even\n\tlocal\
    \ max_odd = max_odd + max_odd\n\tlocal max_even = max_even + max_even\n\tlocal\
    \ max_odd = max_odd + max_odd\n\tlocal max_even = max_even + max_even\n\tlocal\
    \ max_odd = max_odd + max_odd\n\tlocal max_even = max_even + max_even\n\tlocal\
    \ max_odd = max_odd + max_odd\n\tlocal max_even = max_even + max_even\n\tlocal\
    \ max_odd = max_odd + max_odd\n\tlocal max_even = max_even + max_even\n\tlocal\
    \ max_odd = max_odd + max_odd\n\tlocal max_even = max_even + max_even\n\tlocal\
    \ max_odd = max_odd + max_odd\n\tlocal max_even = max_even + max_even\n\tlocal\
    \ max_odd = max_odd + max_odd\n\tlocal max_even = max_even + max_even\n\tlocal\
    \ max_odd = max_odd + max_odd\n\tlocal max_even = max_even + max_even\n\tlocal\
    \ max_odd = max_odd + max_odd\n\tlocal max_even = max_even + max_even\n\tlocal\
    \ max_odd = max_odd + max_odd\n\tlocal max_even = max_even + max_even\n\tlocal\
    \ max_odd = max_odd + max_odd\n\tlocal max_even = max_even + max_even\n\tlocal\
    \ max_odd = max_odd + max_odd\n\tlocal max_even = max_even + max_even\n\tlocal\
    \ max_odd = max_", "   if x < y then\n      x, y = y, x\n   end\n   local max_num\
    \ = x\n   for i = y, 1, -1 do\n      if max_num % i == 0 then\n         max_num\
    \ = max_num / i\n      else\n         return -1\n      end\n   end\n   return\
    \ max_num\nend", "    local x_even = x % 2 == 0\n    local y_even = y % 2 == 0\n\
    \    local x_odd = x % 2 ~= 0\n    local y_odd = y % 2 ~= 0\n    if x_even and\
    \ y_even then\n        return x + (y - x)\n    elseif x_even and y_odd then\n\
    \        return x - y\n    elseif x_odd then\n        return y\n    else\n   \
    \     return x\n    end\nend", "  if x < y then\n    x, y = y, x\n  end\n  local\
    \ result = x\n  local i = 1\n  while i <= y do\n    if result % 2 == 0 then\n\
    \      result = result / 2\n    else\n      result = result * 3 + 1\n    end\n\
    \    i = i + 1\n  end\n  return result\nend", "  local x_even = x % 2\n  local\
    \ y_even = y % 2\n  if x_even and y_even then\n    return x + (y - x)\n  elseif\
    \ x_even then\n    return x - y\n  else\n    return y\n  end\nend", "    local\
    \ x_even = x % 2\n    local y_even = y % 2\n    if x_even and y_even then\n  \
    \      if x_even > y_even then\n            return x\n        else\n         \
    \   return y\n        end\n    elseif x_even then\n        return x\n    else\n\
    \        return y\n    end\nend", "   if x < y then\n      local tmp = x\n   \
    \   x = y\n      y = tmp\n   end\n   if x < 1 then\n      return -1\n   end\n\
    \   if y < 1 then\n      return -1\n   end\n   if x == y then\n      return x\n\
    \   end\n   local m = math.floor((x + y) / 2)\n   if m % 2 == 0 then\n      return\
    \ choose_num(x, m)\n   else\n      return choose_num(m, y)\n   end\nend", "  \
    \  local function is_even(i)\n        return i % 2 == 0\n    end\n    local function\
    \ is_odd(i)\n        return i % 2 ~= 0\n    end\n    local function is_between(i,\
    \ min, max)\n        return min <= i and i <= max\n    end\n    local function\
    \ is_in_range(i, min, max)\n        return is_between(i, min, max) and is_even(i)\n\
    \    end\n    local function is_in_range_odd(i, min, max)\n        return is_between(i,\
    \ min, max) and is_odd(i)\n    end\n    local function is_in_range_even(i, min,\
    \ max)\n        return is_between(i, min, max) and is_even(i)\n    end\n    local\
    \ function is_in_range_odd_and_even(i, min, max)\n        return is_between(i,\
    \ min, max) and is_odd(i) and is_even(i)\n    end\n    local function is_in_range_odd_and_even_odd_and_even(i,\
    \ min, max)\n        return is_between(i, min, max) and is_odd(i) and is_even(i)\
    \ and is_odd(i) and is_even(i)\n    end\n    local function is_in_range_odd_and_even_odd_and_even_odd_and_even(i,\
    \ min, max)\n        return is_between(i, min, max) and is_odd(i) and is_even(i)\
    \ and is_odd(i) and is_even(i) and is_odd(i) and is_even(i)\n    end\n    local\
    \ function is_in_range_odd_and_even_odd_and_even_odd_and_even_odd_and_even(i,\
    \ min, max)\n        return is_between(i, min, max) and is_odd(i) and is_even(i)\
    \ and is_odd(i) and is_even(i) and is_odd(i) and is_even(i) and is_odd(i)\n  \
    \  end\n    local function is_in_range_odd_and_even_odd_and_even_odd_and_even_odd_and_even_odd_and_even(i,\
    \ min, max)\n        return is_between(i, min, max) and is_odd(i) and is_even(i)\
    \ and is_odd(i) and is_even(i) and is_odd(i) and is_even(i) and is_odd(i) and\
    \ is_even(i)\n    end\n    local function is_in_range_odd_and_even_odd_and_even_odd_and_even_odd_and_even_odd_and_even_odd_and_even(i,\
    \ min, max)\n        return is_between(i, min, max) and is_odd(i) and is_even(i)\
    \ and is_odd(i) and is_even(i) and is_odd(i) and is_even(i) and is_odd(i) and\
    \ is_even(i) and is_odd(i)\n    end\n    local function is_in_range_odd_and_even_odd_and_",
  "    local function is_even(x)\n        return x % 2 == 0\n    end\n    \n    local\
    \ function is_odd(x)\n        return x % 2 == 1\n    end\n    \n    local function\
    \ is_between(x, min, max)\n        return x >= min and x <= max\n    end\n   \
    \ \n    local function is_in_range(x)\n        return is_between(x, 1, x) or is_between(x,\
    \ x, x+1)\n    end\n    \n    local function is_in_range_or_even(x)\n        return\
    \ is_in_range(x) or is_even(x)\n    end\n    \n    local function is_in_range_or_odd(x)\n\
    \        return is_in_range(x) or is_odd(x)\n    end\n    \n    if is_in_range_or_even(x)\
    \ and is_in_range_or_odd(y) then\n        return x + (y-x)/2\n    elseif is_in_range_or_odd(x)\
    \ and is_in_range_or_even(y) then\n        return x - (y-x)/2\n    elseif is_in_range_or_even(y)\
    \ and is_in_range_or_odd(x) then\n        return y + (x-y)/2\n    elseif is_in_range_or_odd(y)\
    \ and is_in_range_or_even(x) then\n        return y - (x-y)/2\n    else\n    \
    \    return -1\n    end\nend", "  local x_even = x % 2\n  local y_even = y % 2\n\
    \  if x_even and y_even then\n    return x + (y - x)\n  elseif x_even then\n \
    \   return x - y\n  else\n    return y\n  end\nend", "  if x < y then\n    x,\
    \ y = y, x\n  end\n  local max_num = x\n  local max_num2 = y\n  while max_num2\
    \ > 0 do\n    local num = max_num2 + 1\n    if num % 2 == 0 then\n      max_num\
    \ = num\n    end\n    max_num2 = max_num2 - 1\n  end\n  return max_num\nend",
  "   if x < y then\n      local m = x\n      x = y\n      y = m\n   end\n   if x\
    \ < 2 then\n      return -1\n   end\n   if y < 2 then\n      return -1\n   end\n\
    \   if x == y then\n      return x\n   end\n   local m = math.floor((x + y) /\
    \ 2)\n   return choose_num(x, m) + choose_num(m, y)\nend", "  if x < y then\n\
    \    return -1\n  end\n  local max_num = x\n  local min_num = y\n  while max_num\
    \ < min_num do\n    max_num = max_num * 2 + 1\n    min_num = min_num * 2 - 1\n\
    \  end\n  return max_num\nend", "   if x < y then\n      x, y = y, x\n   end\n\
    \   local max_num = 0\n   for i = x, y + 1 do\n      if i ~= 0 then\n        \
    \ if max_num < i then\n            max_num = i\n         end\n      end\n   end\n\
    \   return max_num\nend", "   if x < y then\n      return choose_num(y, x)\n \
    \  end\n   if x == y then\n      return x\n   end\n   if x % 2 == 0 and y % 2\
    \ == 0 then\n      return choose_num(x / 2, y / 2)\n   end\n   if x % 2 == 0 and\
    \ y % 2 ~= 0 then\n      return choose_num(x / 2, y)\n   end\n   if x % 2 ~= 0\
    \ and y % 2 == 0 then\n      return choose_num(x, y / 2)\n   end\n   if x % 2\
    \ ~= 0 and y % 2 ~= 0 then\n      return choose_num(x, y)\n   end\n   return -1\n\
    end", "    local function is_even(n)\n        return n % 2 == 0\n    end\n   \
    \ local function is_odd(n)\n        return n % 2 == 1\n    end\n    local function\
    \ is_between(x, y)\n        return x >= y and x <= y\n    end\n    local function\
    \ is_in_range(n)\n        return is_even(n) and is_between(n - 2, n)\n    end\n\
    \    local function is_in_range_odd(n)\n        return is_odd(n) and is_between(n\
    \ - 2, n)\n    end\n    local function is_in_range_even(n)\n        return is_even(n)\
    \ and is_between(n, n - 2)\n    end\n    local function is_in_range_odd_even(n)\n\
    \        return is_odd(n) and is_even(n) and is_between(n - 2, n)\n    end\n \
    \   local function is_in_range_odd_odd(n)\n        return is_odd(n) and is_odd(n)\
    \ and is_between(n - 2, n)\n    end\n    local function is_in_range_odd_even_even(n)\n\
    \        return is_odd(n) and is_even(n) and is_between(n, n - 2)\n    end\n \
    \   local function is_in_range_odd_even_odd(n)\n        return is_odd(n) and is_odd(n)\
    \ and is_between(n, n - 2)\n    end\n    local function is_in_range_odd_even_even_even(n)\n\
    \        return is_odd(n) and is_even(n) and is_between(n, n - 2)\n    end\n \
    \   local function is_in_range_odd_even_even_odd(n)\n        return is_odd(n)\
    \ and is_odd(n) and is_between(n, n - 2)\n    end\n    local function is_in_range_odd_even_odd_even(n)\n\
    \        return is_odd(n) and is_even(n) and is_between(n, n - 2)\n    end\n \
    \   local function is_in_range_odd_even_odd_odd(n)\n        return is_odd(n) and\
    \ is_odd(n) and is_between(n, n - 2)\n    end\n    local function is_in_range_odd_even_odd_even_even(n)\n\
    \        return is_odd(n) and is_even(n) and is_between(n, n - 2)\n    end\n \
    \   local function is_in_range_odd_even_odd_even_odd(n)\n        return is_odd(n)\
    \ and is_odd(n) and is_between(n, n - 2)\n    end\n    local function is_in_range_odd_even_odd_even_even_even(n)\n\
    \        return is_odd(n) and is_even(n) and is_between(n, n - 2)\n    end\n \
    \   local function is_in_range_odd_even_odd_even_odd(n)\n        return is_odd(n)\
    \ and is_odd(n", "\tlocal function is_even(n)\n\t\treturn n % 2 == 0\n\tend\n\t\
    local function is_odd(n)\n\t\treturn n % 2 == 1\n\tend\n\tlocal function is_between(n,\
    \ x, y)\n\t\treturn n >= x and n <= y\n\tend\n\tlocal function is_in_range(n)\n\
    \t\treturn is_even(n) or is_odd(n)\n\tend\n\tlocal function is_in_range_or_none(n)\n\
    \t\treturn is_in_range(n) or n == nil\n\tend\n\tlocal function is_in_range_or_zero(n)\n\
    \t\treturn is_in_range(n) or n == 0\n\tend\n\tlocal function is_in_range_or_one(n)\n\
    \t\treturn is_in_range(n) or n == 1\n\tend\n\tlocal function is_in_range_or_zero(n)\n\
    \t\treturn is_in_range(n) or n == 0\n\tend\n\tlocal function is_in_range_or_one(n)\n\
    \t\treturn is_in_range(n) or n == 1\n\tend\n\tlocal function is_in_range_or_zero(n)\n\
    \t\treturn is_in_range(n) or n == 0\n\tend\n\tlocal function is_in_range_or_one(n)\n\
    \t\treturn is_in_range(n) or n == 1\n\tend\n\tlocal function is_in_range_or_zero(n)\n\
    \t\treturn is_in_range(n) or n == 0\n\tend\n\tlocal function is_in_range_or_one(n)\n\
    \t\treturn is_in_range(n) or n == 1\n\tend\n\tlocal function is_in_range_or_zero(n)\n\
    \t\treturn is_in_range(n) or n == 0\n\tend\n\tlocal function is_in_range_or_one(n)\n\
    \t\treturn is_in_range(n) or n == 1\n\tend\n\tlocal function is_in_range_or_zero(n)\n\
    \t\treturn is_in_range(n) or n == 0\n\tend\n\tlocal function is_in_range_or_one(n)\n\
    \t\treturn is_in_range(n) or n == 1\n\tend\n\tlocal function is_in_range_or_zero(n)\n\
    \t\treturn is_in_range(n) or n == 0\n\tend\n\tlocal function is_in_range_or_one(n)\n\
    \t\treturn is_in_range(n) or n == 1\n\tend\n\tlocal function is_in_range_or_zero(n)\n\
    \t\treturn is_in_range(n) or n == 0\n\tend\n\tlocal function is_in_range_or_one(n)\n\
    \t\treturn is_in_range(n) or n == 1\n\tend\n\tlocal function is_in_range_or_zero(n)\n\
    \t\treturn is_in_range(n) or n == 0\n\tend\n\tlocal function is_in_range_or_one(n)\n\
    \t\treturn is_in_range(n) or n == 1\n\tend\n\tlocal function is_in_range_or_zero(n)\n\
    \t\treturn is_in_range(n) or n == 0\n\tend\n\t", "   if x < y then\n      x, y\
    \ = y, x\n   end\n   for i = x, y + 1 do\n      if i ~= math.floor(i) then\n \
    \        return i\n      end\n   end\n   return -1\nend", "  if x < y then\n \
    \   return choose_num(y, x)\n  end\n  if x > y then\n    return choose_num(y,\
    \ x)\n  end\n  if x == y then\n    return x\n  end\n  if x % 2 == 0 and y % 2\
    \ == 0 then\n    return choose_num(x / 2, y / 2)\n  end\n  if x % 2 == 0 and y\
    \ % 2 ~= 0 then\n    return choose_num(x / 2, y)\n  end\n  if x % 2 ~= 0 and y\
    \ % 2 == 0 then\n    return choose_num(x, y / 2)\n  end\n  if x % 2 ~= 0 and y\
    \ % 2 ~= 0 then\n    return choose_num(x, y)\n  end\n  return -1\nend", "  if\
    \ x < y then\n    return choose_num(y, x)\n  elseif x == y then\n    return x\n\
    \  else\n    return choose_num(y - 1, x + 1)\n  end\nend", "  if x < y then\n\
    \    return choose_num(y, x)\n  end\n  if x > y then\n    return choose_num(x,\
    \ y)\n  end\n  if x == y then\n    return x\n  end\n  if x % 2 == 0 then\n   \
    \ return choose_num(x / 2, y)\n  end\n  if y % 2 == 0 then\n    return choose_num(x,\
    \ y / 2)\n  end\n  return -1\nend", "    if x < y then\n        x, y = y, x\n\
    \    end\n    for i = x, y + 1 do\n        if i ~= math.floor(i) then\n      \
    \      return i\n        end\n    end\n    return -1\nend", "  if x < y then\n\
    \    return choose_num(y, x)\n  elseif x == y then\n    return x\n  else\n   \
    \ return choose_num(y - 1, x + 1)\n  end\nend", "    if x < y then\n        x,\
    \ y = y, x\n    end\n    local max_num = x\n    for i = y, 1, -1 do\n        if\
    \ max_num % i == 0 then\n            max_num = max_num / i\n        else\n   \
    \         return -1\n        end\n    end\n    return max_num\nend", "  if x <\
    \ y then\n    return choose_num(y, x)\n  elseif x == y then\n    return x\n  else\n\
    \    return choose_num(y - 1, x + 1)\n  end\nend", "  if x < y then\n    x, y\
    \ = y, x\n  end\n  local result = x\n  while y > 0 do\n    if result % 2 == 0\
    \ then\n      result = result / 2\n    else\n      result = result * 3 + 1\n \
    \   end\n    y = y - 1\n  end\n  return result\nend", "  local function is_even(n)\n\
    \    return n % 2 == 0\n  end\n  local function is_odd(n)\n    return n % 2 ==\
    \ 1\n  end\n  local function is_between(n1, n2)\n    return n1 <= n2 and n2 <=\
    \ n1\n  end\n  local function is_in_range(n1, n2)\n    return is_between(n1, x)\
    \ and is_between(n2, y)\n  end\n  local function is_in_range_or_even(n1, n2)\n\
    \    return is_in_range(n1, x) or is_even(n2)\n  end\n  local function is_in_range_or_odd(n1,\
    \ n2)\n    return is_in_range(n1, x) or is_odd(n2)\n  end\n  local function is_in_range_or_odd_or_even(n1,\
    \ n2)\n    return is_in_range(n1, x) or is_odd(n2) or is_even(n2)\n  end\n  local\
    \ function is_in_range_or_odd_or_even_or_even(n1, n2)\n    return is_in_range(n1,\
    \ x) or is_odd(n2) or is_even(n2) or is_even(n1)\n  end\n  local function is_in_range_or_odd_or_even_or_even_or_even(n1,\
    \ n2)\n    return is_in_range(n1, x) or is_odd(n2) or is_even(n2) or is_even(n1)\
    \ or is_even(n2)\n  end\n  local function is_in_range_or_odd_or_even_or_even_or_even_or_even(n1,\
    \ n2)\n    return is_in_range(n1, x) or is_odd(n2) or is_even(n2) or is_even(n1)\
    \ or is_even(n2) or is_even(n3)\n  end\n  local function is_in_range_or_odd_or_even_or_even_or_even_or_even_or_even(n1,\
    \ n2)\n    return is_in_range(n1, x) or is_odd(n2) or is_even(n2) or is_even(n1)\
    \ or is_even(n2) or is_even(n3) or is_even(n4)\n  end\n  local function is_in_range_or_odd_or_even_or_even_or_even_or_even_or_even_or_even(n1,\
    \ n2)\n    return is_in_range(n1, x) or is_odd(n2) or is_even(n2) or is_even(n1)\
    \ or is_even(n2) or is_even(n3) or is_even(n4) or is_even(n5)\n  end\n  local\
    \ function is_in_range_or_odd_or_even_or_even_or_even_or_even_or_even_or_even(n1,\
    \ n2)\n    return is_in_range(", "   if x < y then\n      x, y = y, x\n   end\n\
    \   local max_num = x\n   for i = y, 1, -1 do\n      if max_num % i == 0 then\n\
    \         max_num = max_num / i\n      else\n         return -1\n      end\n \
    \  end\n   return max_num\nend", "  if x < y then\n    x, y = y, x\n  end\n  local\
    \ max_num = x\n  local max_num2 = y\n  while max_num2 > max_num do\n    max_num2\
    \ = max_num2 - 2\n  end\n  if max_num2 == 0 then\n    return max_num\n  else\n\
    \    return -1\n  end\nend", "    if x < y then\n        x, y = y, x\n    end\n\
    \    for i = x, y + 1 do\n        if i % 2 == 0 then\n            return i\n \
    \       end\n    end\n    return -1\nend", "  local function is_even(n)\n    return\
    \ n % 2 == 0\n  end\n  \n  local function is_odd(n)\n    return n % 2 == 1\n \
    \ end\n  \n  local function is_between(low, high)\n    return low <= high\n  end\n\
    \  \n  local function is_in_range(low, high)\n    return is_between(low, high)\
    \ and is_even(low) and is_even(high)\n  end\n  \n  local function is_in_range_odd(low,\
    \ high)\n    return is_between(low, high) and is_odd(low) and is_odd(high)\n \
    \ end\n  \n  local function is_in_range_even(low, high)\n    return is_between(low,\
    \ high) and is_even(low) and is_even(high)\n  end\n  \n  local function is_in_range_odd_even(low,\
    \ high)\n    return is_between(low, high) and is_odd(low) and is_even(high)\n\
    \  end\n  \n  local function is_in_range_odd_odd(low, high)\n    return is_between(low,\
    \ high) and is_odd(low) and is_odd(high)\n  end\n  \n  local function is_in_range_even(low,\
    \ high)\n    return is_between(low, high) and is_even(low) and is_even(high)\n\
    \  end\n  \n  local function is_in_range_odd_even(low, high)\n    return is_between(low,\
    \ high) and is_odd(low) and is_even(high)\n  end\n  \n  local function is_in_range_odd_odd(low,\
    \ high)\n    return is_between(low, high) and is_odd(low) and is_odd(high)\n \
    \ end\n  \n  local function is_in_range_odd_even(low, high)\n    return is_between(low,\
    \ high) and is_odd(low) and is_even(high)\n  end\n  \n  local function is_in_range_even(low,\
    \ high)\n    return is_between(low, high) and is_even(low) and is_even(high)\n\
    \  end\n  \n  local function is_in_range_odd_even(low, high)\n    return is_between(low,\
    \ high) and is_odd(low) and is_even(high)\n  end\n  \n  local function is_in_range_odd_odd(low,\
    \ high)\n    return is_between(low, high) and is_odd(low) and is_odd(high)\n \
    \ end\n  \n  local function is_in_range_odd_even(low, high)\n    return is_between(low,\
    \ high) and is_odd(low) and is_even(high)\n  end\n  \n  local function is_in_range_even(low,\
    \ high)\n    return is_between(low, high) and is_even(low) and is_even(high",
  "  if x < y then\n    x, y = y, x\n  end\n  local max_num = x\n  local min_num =\
    \ y\n  while max_num - min_num > 1 do\n    local mid = (max_num + min_num) / 2\n\
    \    if mid % 2 == 0 then\n      max_num = mid\n    else\n      min_num = mid\n\
    \    end\n  end\n  return max_num\nend", "    local x_even = x % 2\n    local\
    \ y_even = y % 2\n    if x_even > y_even then\n        return y\n    else\n  \
    \      return x\n    end\nend", "\tlocal function is_even(n)\n\t\treturn n % 2\
    \ == 0\n\tend\n\tlocal function is_odd(n)\n\t\treturn n % 2 == 1\n\tend\n\tlocal\
    \ function is_between(x, y)\n\t\treturn x >= y and x <= y\n\tend\n\tlocal function\
    \ is_in_range(n)\n\t\treturn is_even(n) and is_between(n - 1, n)\n\tend\n\tlocal\
    \ function is_in_range_odd(n)\n\t\treturn is_odd(n) and is_between(n - 1, n)\n\
    \tend\n\tlocal function is_in_range_even(n)\n\t\treturn is_even(n) and is_between(n\
    \ - 1, n)\n\tend\n\tlocal function is_in_range_odd_even(n)\n\t\treturn is_odd(n)\
    \ and is_even(n) and is_between(n - 1, n)\n\tend\n\tlocal function is_in_range_odd_odd(n)\n\
    \t\treturn is_odd(n) and is_odd(n) and is_between(n - 1, n)\n\tend\n\tlocal function\
    \ is_in_range_odd_even_odd(n)\n\t\treturn is_odd(n) and is_even(n) and is_odd(n)\
    \ and is_between(n - 1, n)\n\tend\n\tlocal function is_in_range_odd_even_even_odd(n)\n\
    \t\treturn is_odd(n) and is_even(n) and is_even(n) and is_between(n - 1, n)\n\t\
    end\n\tlocal function is_in_range_odd_even_even_even_odd(n)\n\t\treturn is_odd(n)\
    \ and is_even(n) and is_even(n) and is_odd(n) and is_between(n - 1, n)\n\tend\n\
    \tlocal function is_in_range_odd_even_even_even_even_odd(n)\n\t\treturn is_odd(n)\
    \ and is_even(n) and is_even(n) and is_odd(n) and is_even(n) and is_between(n\
    \ - 1, n)\n\tend\n\tlocal function is_in_range_odd_even_even_even_even_even_odd(n)\n\
    \t\treturn is_odd(n) and is_even(n) and is_even(n) and is_odd(n) and is_even(n)\
    \ and is_even(n) and is_between(n - 1, n)\n\tend\n\tlocal function is_in_range_odd_even_even_even_even_even_even_odd(n)\n\
    \t\treturn is_odd(n) and is_even(n) and is_even(n) and is_odd(n) and is_even(n)\
    \ and is_even(n) and is_odd(n) and is_between(n - 1, n)\n\tend\n\tlocal function\
    \ is_in_range_odd_even_even_even_even_even_even_odd(n)\n", "   if x < y then\n\
    \      local t = x\n      x = y\n      y = t\n   end\n   local m = math.floor((x\
    \ + y) / 2)\n   if m % 2 == 0 then\n      return m\n   else\n      return -1\n\
    \   end\nend", "    local function is_even(n)\n        return n % 2 == 0\n   \
    \ end\n    local function is_odd(n)\n        return n % 2 == 1\n    end\n    local\
    \ function is_between(a, b)\n        return a <= b and a >= b\n    end\n    local\
    \ function is_in_range(n)\n        return is_even(n) or is_odd(n)\n    end\n \
    \   local function is_in_range_or_not(n)\n        return is_in_range(n) or is_between(n\
    \ + 1, y)\n    end\n    local function is_in_range_or_not_and_not_in_range(n)\n\
    \        return is_in_range_or_not(n) and not is_in_range(n)\n    end\n    local\
    \ function is_in_range_or_not_and_not_in_range_or_not(n)\n        return is_in_range_or_not(n)\
    \ and not is_in_range_or_not(n)\n    end\n    local function is_in_range_or_not_and_not_in_range_or_not_and_not_in_range(n)\n\
    \        return is_in_range_or_not(n) and not is_in_range_or_not(n) and not is_in_range(n)\n\
    \    end\n    local function is_in_range_or_not_and_not_in_range_or_not_and_not_in_range_or_not(n)\n\
    \        return is_in_range_or_not(n) and not is_in_range_or_not(n) and not is_in_range_or_not(n)\n\
    \    end\n    local function is_in_range_or_not_and_not_in_range_or_not_and_not_in_range_or_not_and_not_in_range(n)\n\
    \        return is_in_range_or_not(n) and not is_in_range_or_not(n) and not is_in_range_or_not(n)\
    \ and not is_in_range(n)\n    end\n    local function is_in_range_or_not_and_not_in_range_or_not_and_not_in_range_or_not_and_not_in_range_or_not(n)\n\
    \        return is_in_range_or_not(n) and not is_in_range_or_not(n) and not is_in_range_or_not(n)\
    \ and not is_in_range_or_not(n)\n    end\n    local function is_in_range_or_not_and_not_in_range_or_not_and_not_in_range_or_not_and_not_in_range_or_not_and_not_in_range(n)\n\
    \        return is_in_range_or_not(n) and not is_in_range_or_not(n) and not is_in_range_or_not(n)\
    \ and not is_in_range_or_not(n) and not is_in_range(n)\n    end\n    local function\
    \ is_in_range_or_not_and_not_in_range_or_not_and_not_in_range_or_not_and_not_in_range_or_not_and_not_in_range_or_not(n)\n\
    \        return is_in_range_or_not(n) and not is_in_range_or_not(n) and not is_in_range_or_not(n)\
    \ and not is_in_range_or_not(n) and not is_in_range_or_not(n) and not is_in_range(n)\n\
    \    end\n    local function is_in_range_or_not_and_not_in_range_", "  if x >\
    \ y then\n    x, y = y, x\n  end\n  local max_num\n  local max_num_index\n  for\
    \ i = x, y + 1 do\n    if max_num == nil then\n      max_num = i\n      max_num_index\
    \ = i\n    else\n      if i % 2 == 0 then\n        if max_num < i then\n     \
    \     max_num = i\n          max_num_index = i\n        end\n      end\n    end\n\
    \  end\n  return max_num_index\nend", "\tlocal function is_even(n)\n\t\treturn\
    \ n % 2 == 0\n\tend\n\t\n\tlocal function is_odd(n)\n\t\treturn n % 2 == 1\n\t\
    end\n\t\n\tlocal function is_between(x, min, max)\n\t\treturn min <= x and x <=\
    \ max\n\tend\n\t\n\tlocal function is_in_range(n)\n\t\treturn is_between(n, x,\
    \ y)\n\tend\n\t\n\tlocal function is_in_range_odd(n)\n\t\treturn is_between(n,\
    \ x, y - 1)\n\tend\n\t\n\tlocal function is_in_range_even(n)\n\t\treturn is_between(n,\
    \ x, y + 1)\n\tend\n\t\n\tlocal function is_in_range_odd_even(n)\n\t\treturn is_between(n,\
    \ x - 1, y - 1)\n\tend\n\t\n\tlocal function is_in_range_odd_odd(n)\n\t\treturn\
    \ is_between(n, x - 1, y + 1)\n\tend\n\t\n\tlocal function is_in_range_odd_even_even(n)\n\
    \t\treturn is_between(n, x - 1, y + 1)\n\tend\n\t\n\tlocal function is_in_range_odd_even_odd(n)\n\
    \t\treturn is_between(n, x - 1, y - 1)\n\tend\n\t\n\tlocal function is_in_range_even_even(n)\n\
    \t\treturn is_between(n, x, y + 1)\n\tend\n\t\n\tlocal function is_in_range_even_odd(n)\n\
    \t\treturn is_between(n, x, y - 1)\n\tend\n\t\n\tlocal function is_in_range_even_even_even(n)\n\
    \t\treturn is_between(n, x, y - 1)\n\tend\n\t\n\tlocal function is_in_range_even_even_odd(n)\n\
    \t\treturn is_between(n, x, y + 1)\n\tend\n\t\n\tlocal function is_in_range_odd_even_even_even(n)\n\
    \t\treturn is_between(n, x - 1, y - 1)\n\tend\n\t\n\tlocal function is_in_range_odd_even_even_odd(n)\n\
    \t\treturn is_between(n, x - 1, y + 1)\n\tend\n\t\n\tlocal function is_in_range_even_odd_even(n)\n\
    \t\treturn is_between(n, x, y - 1)\n\tend\n\t\n\tlocal function is_in_range_even_odd_odd(n)\n\
    \t\treturn is_between(n, x, y + 1)\n\tend\n\t\n\tlocal function is_in_range_odd_even_even_even_even(n)\n\
    \t\treturn is_between(n, x - 1, y - 1)\n\tend\n\t\n\tlocal function is_in_range_odd_even_even_odd(n)\n\
    \t\treturn is_between(n, x - 1, y + 1)\n\tend\n\t\n\tlocal function is_in_range_even_odd_ev",
  "    if x < y then\n        x, y = y, x\n    end\n    local max_num = x\n    for\
    \ i = y, 1, -1 do\n        if max_num % i == 0 then\n            max_num = max_num\
    \ / i\n        else\n            return -1\n        end\n    end\n    return max_num\n\
    end", "  if x < y then\n    x, y = y, x\n  end\n  local max_num = 0\n  local max_num\
    \ = x\n  while y > 0 do\n    if max_num % 2 == 0 then\n      max_num = max_num\
    \ / 2\n    else\n      max_num = max_num - 1\n    end\n    y = y - 1\n  end\n\
    \  return max_num\nend", "  local function is_even(n)\n    return n % 2 == 0\n\
    \  end\n  \n  local function is_odd(n)\n    return n % 2 == 1\n  end\n  \n  local\
    \ function is_between(lower, upper)\n    return lower <= upper and lower % 2 ==\
    \ 0 and upper % 2 == 0\n  end\n  \n  local function is_in_range(lower, upper)\n\
    \    return lower <= x and x <= upper\n  end\n  \n  local function is_in_range_or_zero(lower,\
    \ upper)\n    return lower <= x and x <= upper or lower <= 0 and x <= 0\n  end\n\
    \  \n  local function is_in_range_or_zero(lower, upper)\n    return lower <= x\
    \ and x <= upper or lower <= 0 and x <= 0\n  end\n  \n  local function is_in_range_or_zero(lower,\
    \ upper)\n    return lower <= x and x <= upper or lower <= 0 and x <= 0\n  end\n\
    \  \n  local function is_in_range_or_zero(lower, upper)\n    return lower <= x\
    \ and x <= upper or lower <= 0 and x <= 0\n  end\n  \n  local function is_in_range_or_zero(lower,\
    \ upper)\n    return lower <= x and x <= upper or lower <= 0 and x <= 0\n  end\n\
    \  \n  local function is_in_range_or_zero(lower, upper)\n    return lower <= x\
    \ and x <= upper or lower <= 0 and x <= 0\n  end\n  \n  local function is_in_range_or_zero(lower,\
    \ upper)\n    return lower <= x and x <= upper or lower <= 0 and x <= 0\n  end\n\
    \  \n  local function is_in_range_or_zero(lower, upper)\n    return lower <= x\
    \ and x <= upper or lower <= 0 and x <= 0\n  end\n  \n  local function is_in_range_or_zero(lower,\
    \ upper)\n    return lower <= x and x <= upper or lower <= 0 and x <= 0\n  end\n\
    \  \n  local function is_in_range_or_zero(lower, upper)\n    return lower <= x\
    \ and x <= upper or lower <= 0 and x <= 0\n  end\n  \n  local function is_in_range_or_zero(lower,\
    \ upper)\n    return lower <= x and x <= upper or lower <= 0 and x <= 0\n  end\n\
    \  \n  local function is_in_range_or_zero(lower, upper)\n    return lower <= x\
    \ and x <= upper or lower <= 0 and x <= 0\n  end\n  \n  local function is_in_range_or_zero(lower,\
    \ upper)\n    return lower <= x and x <= upper or lower <= 0 and x <= 0\n  end\n\
    \  \n  local function is_in_range_or_zero(lower, upper)\n    return lower <= x\
    \ and x <= upper or lower <= 0 and x <= ", "  if x > y then\n    x, y = y, x\n\
    \  end\n  local max_num = x\n  local min_num = y\n  while max_num - min_num >\
    \ 1 do\n    local mid = (max_num + min_num) / 2\n    if mid % 2 == 0 then\n  \
    \    max_num = mid\n    else\n      min_num = mid\n    end\n  end\n  return max_num\n\
    end", "  if x < y then\n    return -1\n  else\n    local max_num = x\n    local\
    \ min_num = y\n    while max_num > min_num do\n      local num = max_num\n   \
    \   max_num = max_num - num\n      if max_num % 2 == 0 then\n        return num\n\
    \      else\n        max_num = max_num / 2\n      end\n    end\n    return -1\n\
    \  end\nend", "\tlocal function is_even(n)\n\t\treturn n % 2 == 0\n\tend", " \
    \  if x < y then\n      x, y = y, x\n   end\n   local max_num = 0\n   for i =\
    \ x, y + 1 do\n      if max_num < i then\n         max_num = i\n      end\n  \
    \ end\n   return max_num\nend", "   if x < y then\n      return -1\n   end\n \
    \  if x == y then\n      return x\n   end\n   if x % 2 == 0 then\n      return\
    \ choose_num(x / 2, y)\n   end\n   if y % 2 == 0 then\n      return choose_num(x,\
    \ y / 2)\n   end\n   if x > y then\n      return choose_num(x / 2, y / 2)\n  \
    \ end\n   return choose_num(x / 2, y)\nend", "  if x > y then\n    x, y = y, x\n\
    \  end\n  local result = x\n  while result < y do\n    if result % 2 == 0 then\n\
    \      result = result + 1\n    else\n      result = result - 1\n    end\n  end\n\
    \  return result\nend", "  if x < y then\n    return choose_num(y, x)\n  end\n\
    \  if x == y then\n    return x\n  end\n  local z = math.floor((x + y) / 2)\n\
    \  if z * z == x then\n    return z\n  else\n    return choose_num(y, z)\n  end\n\
    end", "\tlocal max_num = -1\n\tlocal max_num_index\n\tfor i = x, y do\n\t\tif\
    \ max_num < i then\n\t\t\tmax_num = i\n\t\t\tmax_num_index = i\n\t\tend\n\tend\n\
    \treturn max_num_index\nend", "\tlocal x_even = x % 2\n\tlocal y_even = y % 2\n\
    \tlocal x_odd = x % 2 + 1\n\tlocal y_odd = y % 2 + 1\n\tlocal x_even = x_even\
    \ + y_even\n\tlocal y_even = y_even + x_even\n\tlocal x_odd = x_odd + y_odd\n\t\
    local y_odd = y_odd + x_odd\n\tif x_even > y_even then\n\t\treturn x_even\n\t\
    else\n\t\treturn y_even\n\tend\nend", "   if x < y then\n      x, y = y, x\n \
    \  end\n   local max_num = x\n   for i = y, 1, -1 do\n      if max_num % i ==\
    \ 0 then\n         max_num = max_num / i\n      else\n         return -1\n   \
    \   end\n   end\n   return max_num\nend", "  if x < y then\n    x, y = y, x\n\
    \  end\n  local max_num = x\n  local max_num_pos = 1\n  for i = y, 1, -1 do\n\
    \    if max_num % i == 0 then\n      max_num = max_num / i\n      max_num_pos\
    \ = i\n    end\n  end\n  if max_num_pos == x then\n    return -1\n  end\n  return\
    \ max_num\nend", "  if x < y then\n    return choose_num(y, x)\n  else\n    if\
    \ x == y then\n      return x\n    else\n      local m = math.floor((x + y) /\
    \ 2)\n      if m % 2 == 0 then\n        return m\n      else\n        return choose_num(m,\
    \ y)\n      end\n    end\n  end\nend", "  if x < y then\n    return -1\n  elseif\
    \ x == y then\n    return x\n  else\n    local m = math.floor((x + y) / 2)\n \
    \   if m % 2 == 0 then\n      return choose_num(m, y)\n    else\n      return\
    \ choose_num(x, m)\n    end\n  end\nend", "  local x_even = x % 2 == 0\n  local\
    \ y_even = y % 2 == 0\n  if x_even and y_even then\n    return x + (y - x)\n \
    \ elseif x_even then\n    return x - y\n  else\n    return y\n  end\nend", " \
    \  if x < y then\n      return choose_num(y, x)\n   end\n   if x == y then\n \
    \     return x\n   end\n   if x % 2 == 0 then\n      return choose_num(x / 2,\
    \ y)\n   end\n   if y % 2 == 0 then\n      return choose_num(x, y / 2)\n   end\n\
    \   return -1\nend", "   if x < y then\n      x, y = y, x\n   end\n   local max_num\
    \ = x\n   local max_num2 = y\n   while max_num2 > 0 do\n      local num = max_num2\
    \ + 1\n      max_num2 = max_num2 - num\n      if num % 2 == 0 then\n         return\
    \ num\n      end\n   end\n   return -1\nend", "  if x < y then\n    return choose_num(y,\
    \ x)\n  end\n  if x > y then\n    return choose_num(x, y)\n  end\n  if x == y\
    \ then\n    return x\n  end\n  if x % 2 == 0 and y % 2 == 0 then\n    return choose_num(x\
    \ / 2, y / 2)\n  end\n  if x % 2 == 0 and y % 2 ~= 0 then\n    return choose_num(x\
    \ / 2, y)\n  end\n  if x % 2 ~= 0 and y % 2 == 0 then\n    return choose_num(x,\
    \ y / 2)\n  end\n  if x % 2 ~= 0 and y % 2 ~= 0 then\n    return choose_num(x,\
    \ y)\n  end\n  return -1\nend", "    local function is_even(n)\n        return\
    \ n % 2 == 0\n    end\n    local function is_odd(n)\n        return n % 2 == 1\n\
    \    end\n    local function is_between(n, x, y)\n        return n >= x and n\
    \ <= y\n    end\n    local function is_in_range(n, x, y)\n        return is_between(n,\
    \ x, y) or is_even(n) or is_odd(n)\n    end\n    local function is_in_range_or_even(n,\
    \ x, y)\n        return is_in_range(n, x, y) or is_even(n)\n    end\n    local\
    \ function is_in_range_or_odd(n, x, y)\n        return is_in_range(n, x, y) or\
    \ is_odd(n)\n    end\n    local function is_in_range_or_even_in_range(n, x, y)\n\
    \        return is_in_range_or_even(n, x, y) or is_in_range_or_odd(n, x, y)\n\
    \    end\n    local function is_in_range_or_odd_in_range(n, x, y)\n        return\
    \ is_in_range_or_even(n, x, y) or is_in_range_or_odd(n, x, y)\n    end\n    local\
    \ function is_in_range_or_even_in_range_or_odd(n, x, y)\n        return is_in_range_or_even(n,\
    \ x, y) or is_in_range_or_odd(n, x, y)\n    end\n    local function is_in_range_or_odd_in_range_or_even(n,\
    \ x, y)\n        return is_in_range_or_even(n, x, y) or is_in_range_or_odd(n,\
    \ x, y)\n    end\n    local function is_in_range_or_even_in_range_or_odd_in_range(n,\
    \ x, y)\n        return is_in_range_or_even(n, x, y) or is_in_range_or_odd(n,\
    \ x, y)\n    end\n    local function is_in_range_or_odd_in_range_or_even_in_range(n,\
    \ x, y)\n        return is_in_range_or_even(n, x, y) or is_in_range_or_odd(n,\
    \ x, y)\n    end\n    local function is_in_range_or_even_in_range_or_odd_in_range_or_even(n,\
    \ x, y)\n        return is_in_range_or_even(n, x, y) or is_in_range_or_odd(n,\
    \ x, y)\n    end\n    local function is_in_range_or_odd_in_range_or_even_in_range_or_odd(n,\
    \ x, y)\n        return is_in_range_or_even(n, x, y) or is_in_range_or_odd(n,\
    \ x, y)\n    end\n    local function is_in_range_or_even_in_range_or_odd_in_range_or_even(n,\
    \ x, y)\n        return is_in_range_or_even(n, x, y) or is_in_range_or_odd(n,\
    \ x, y)\n    end\n    local function is_in_range_or_odd_in_range_or_even_in_range_or_odd(n,\
    \ x, y)\n        return is_in_range_or_even(n, x, y) or is_in_range_or_odd(n,\
    \ x, y)\n    end\n    local function is_in_range_or_even_in_range_or_od", "  if\
    \ x >= y then\n    return -1\n  end\n  local z = 0\n  while x < y do\n    z =\
    \ z * 2 + x\n    x = y\n    y = z\n  end\n  return z\nend", "  if x < y then\n\
    \    return -1\n  end\n  local max_num = x\n  local min_num = y\n  while max_num\
    \ - min_num > 1 do\n    local mid = math.floor((max_num + min_num) / 2)\n    if\
    \ mid % 2 == 0 then\n      max_num = mid\n    else\n      min_num = mid\n    end\n\
    \  end\n  return max_num\nend", "   if x < y then\n      return choose_num(y,\
    \ x)\n   end\n   if x == y then\n      return x\n   end\n   if x % 2 == 0 then\n\
    \      return choose_num(x / 2, y)\n   end\n   if y % 2 == 0 then\n      return\
    \ choose_num(x, y / 2)\n   end\n   return -1\nend", "  if x < y then\n    return\
    \ choose_num(y, x)\n  elseif x == y then\n    return x\n  else\n    return -1\n\
    \  end\nend", "\tlocal function is_even(n)\n\t\treturn n % 2 == 0\n\tend\n\tlocal\
    \ function is_odd(n)\n\t\treturn n % 2 == 1\n\tend\n\tlocal function is_between(lower,\
    \ upper)\n\t\treturn lower <= upper and lower % 2 == 0 and upper % 2 == 0\n\t\
    end\n\tlocal function is_in_range(lower, upper)\n\t\treturn lower <= upper and\
    \ lower % 2 == 1\n\tend\n\tlocal function is_in_range_or_even(x, y)\n\t\treturn\
    \ is_in_range(x, y) or is_even(x)\n\tend\n\tlocal function is_in_range_or_odd(x,\
    \ y)\n\t\treturn is_in_range(x, y) or is_odd(x)\n\tend\n\tlocal function is_in_range_or_odd_or_even(x,\
    \ y)\n\t\treturn is_in_range(x, y) or is_odd(x) or is_even(x)\n\tend\n\tlocal\
    \ function is_in_range_or_odd_or_even_or_both(x, y)\n\t\treturn is_in_range(x,\
    \ y) or is_odd(x) or is_even(x) or is_in_range(x, y)\n\tend\n\tlocal function\
    \ is_in_range_or_odd_or_even_or_both_or_none(x, y)\n\t\treturn is_in_range(x,\
    \ y) or is_odd(x) or is_even(x) or is_in_range(x, y) or x == y\n\tend\n\tlocal\
    \ function is_in_range_or_odd_or_even_or_both_or_none_or_none(x, y)\n\t\treturn\
    \ is_in_range(x, y) or is_odd(x) or is_even(x) or is_in_range(x, y) or x == y\
    \ or x == nil\n\tend\n\tlocal function is_in_range_or_odd_or_even_or_both_or_none_or_none(x,\
    \ y)\n\t\treturn is_in_range(x, y) or is_odd(x) or is_even(x) or is_in_range(x,\
    \ y) or x == y or x == nil or x == nil\n\tend\n\tlocal function is_in_range_or_odd_or_even_or_both_or_none_or_none(x,\
    \ y)\n\t\treturn is_in_range(x, y) or is_odd(x) or is_even(x) or is_in_range(x,\
    \ y) or x == y or x == nil or x == nil or x == nil\n\tend\n\tlocal function is_in_range_or_odd_or_even_or_both_or_none_or_none(x,\
    \ y)\n\t\treturn is_in_range(x, y) or is_odd(x) or is_even(x) or is_in_range(x,\
    \ y) or x == y or x == nil or x == nil or x == nil or x == nil\n\tend\n\tlocal\
    \ function is_in_range_or_odd_or_even_or_both_or_none_or_none(x, y)\n\t\treturn\
    \ is_in_range(x, y) or is_odd(x) or is_even(x) or is_in_range(x, y) or x == y\
    \ or x == nil or x == ", "   if x < y then\n      local m = x\n      x = y\n \
    \     y = m\n   end\n   if x < 2 then\n      return -1\n   end\n   if y < 2 then\n\
    \      return -1\n   end\n   if x == 2 then\n      return y\n   end\n   if y ==\
    \ 2 then\n      return x\n   end\n   if x % 2 == 0 then\n      return choose_num(x\
    \ / 2, y)\n   end\n   if y % 2 == 0 then\n      return choose_num(x, y / 2)\n\
    \   end\n   if x % 2 == y % 2 then\n      return choose_num(x / 2, y / 2)\n  \
    \ end\n   return -1\nend", "  if x < y then\n    x, y = y, x\n  end\n  local max_num\
    \ = x\n  local min_num = y\n  while max_num < y do\n    max_num = max_num * 2\
    \ + 1\n  end\n  while min_num > x do\n    min_num = min_num / 2\n  end\n  if max_num\
    \ > min_num then\n    return max_num\n  else\n    return -1\n  end\nend", "  \
    \  if x < y then\n        local x_even = x % 2\n        local x_odd = x % 2 +\
    \ 1\n        local y_even = y % 2\n        local y_odd = y % 2 + 1\n        if\
    \ x_even > y_even then\n            return x_even\n        else\n            return\
    \ y_even\n        end\n    else\n        local x_even = x % 2\n        local x_odd\
    \ = x % 2 + 1\n        local y_even = y % 2\n        local y_odd = y % 2 + 1\n\
    \        if x_odd > y_odd then\n            return x_odd\n        else\n     \
    \       return y_odd\n        end\n    end\nend", "    local x_even = x % 2\n\
    \    local y_even = y % 2\n    if x_even and y_even then\n        if x_even >\
    \ y_even then\n            return x\n        else\n            return y\n    \
    \    end\n    elseif x_even then\n        return x\n    else\n        return y\n\
    \    end\nend", "  if x < y then\n    x, y = y, x\n  end\n  local max_num = x\n\
    \  local min_num = y\n  while true do\n    local num = max_num + 1\n    if num\
    \ % 2 == 0 then\n      if num > max_num then\n        max_num = num\n      else\n\
    \        return num\n      end\n    else\n      if num < min_num then\n      \
    \  min_num = num\n      else\n        return -1\n      end\n    end\n  end\nend",
  "\tlocal x_even = x % 2\n\tlocal y_even = y % 2\n\tlocal x_odd = x % 2 + 1\n\tlocal\
    \ y_odd = y % 2 + 1\n\tlocal x_even = x_even + y_even\n\tlocal y_even = y_even\
    \ + x_even\n\tlocal x_odd = x_odd + y_odd\n\tlocal y_odd = y_odd + x_odd\n\tif\
    \ x_even > y_even then\n\t\treturn x_even\n\telse\n\t\treturn y_even\n\tend\n\
    end", "  local function is_even(n)\n    return n % 2 == 0\n  end\n  local function\
    \ is_odd(n)\n    return n % 2 == 1\n  end\n  local function is_between(a, b)\n\
    \    return a <= b and a >= b\n  end\n  local function is_in_range(n)\n    return\
    \ is_even(n) or is_odd(n)\n  end\n  local function is_in_range_or_not(n)\n   \
    \ return is_in_range(n) or is_between(n + 1, y)\n  end\n  local function is_in_range_or_not_and_in_range(n)\n\
    \    return is_in_range_or_not(n) and is_in_range(n)\n  end\n  local function\
    \ is_in_range_or_not_and_in_range_or_not(n)\n    return is_in_range_or_not(n)\
    \ or is_between(n + 1, y)\n  end\n  local function is_in_range_or_not_and_in_range_or_not_and_in_range(n)\n\
    \    return is_in_range_or_not(n) or is_between(n + 1, y) or is_in_range(n)\n\
    \  end\n  local function is_in_range_or_not_and_in_range_or_not_and_in_range_or_not(n)\n\
    \    return is_in_range_or_not(n) or is_between(n + 1, y) or is_in_range(n) or\
    \ is_between(n + 1, y)\n  end\n  local function is_in_range_or_not_and_in_range_or_not_and_in_range_or_not_and_in_range(n)\n\
    \    return is_in_range_or_not(n) or is_between(n + 1, y) or is_in_range(n) or\
    \ is_between(n + 1, y) or is_in_range(n)\n  end\n  local function is_in_range_or_not_and_in_range_or_not_and_in_range_or_not_and_in_range_or_not(n)\n\
    \    return is_in_range_or_not(n) or is_between(n + 1, y) or is_in_range(n) or\
    \ is_between(n + 1, y) or is_in_range(n) or is_between(n + 1, y)\n  end\n  local\
    \ function is_in_range_or_not_and_in_range_or_not_and_in_range_or_not_and_in_range_or_not_and_in_range(n)\n\
    \    return is_in_range_or_not(n) or is_between(n + 1, y) or is_in_range(n) or\
    \ is_between(n + 1, y) or is_in_range(n) or is_between(n + 1, y) or is_in_range(n)\n\
    \  end\n  local function is_in_range_or_not_and_in_range_or_not_and_in_range_or_not_and_in_range_or_not_and_in_range_or_not(n)\n\
    \    return is_in_range_or_not(n) or is_between(n + 1, y) or is_in_range(n) or\
    \ is_between(n + 1, y) or is_in_range(n) or is_between(n + 1, y) or is_in_range(n)\
    \ or is_between(n + 1, y)\n  end\n  local function is_in_range_or_not_", "\tlocal\
    \ function is_even(n)\n\t\treturn n % 2 == 0\n\tend", "\tlocal x_even = x % 2\n\
    \tlocal y_even = y % 2\n\tlocal x_odd = (x - x_even) / 2\n\tlocal y_odd = (y -\
    \ y_even) / 2\n\tlocal x_even = x_even + x_odd\n\tlocal y_even = y_even + y_odd\n\
    \tif x_even > y_even then\n\t\treturn x_even\n\telse\n\t\treturn y_even\n\tend\n\
    end", "   if x < y then\n      return choose_num(y, x)\n   end\n   if x == y then\n\
    \      return x\n   end\n   if x % 2 == 0 then\n      return choose_num(x / 2,\
    \ y)\n   end\n   if y % 2 == 0 then\n      return choose_num(x, y / 2)\n   end\n\
    \   return -1\nend", "    local x_even = x % 2\n    local y_even = y % 2\n   \
    \ if x_even and y_even then\n        return x + (y - x)\n    elseif x_even then\n\
    \        return -1\n    else\n        return y\n    end\nend", "  if x < y then\n\
    \    return choose_num(y, x)\n  elseif x == y then\n    return x\n  else\n   \
    \ return choose_num(y - 1, x + 1)\n  end\nend", "  if x < y then\n    return choose_num(y,\
    \ x)\n  end\n  if x == y then\n    return x\n  end\n  if x % 2 == 0 then\n   \
    \ return choose_num(x / 2, y)\n  end\n  if y % 2 == 0 then\n    return choose_num(x,\
    \ y / 2)\n  end\n  if x > y then\n    return choose_num(y / 2, x)\n  end\n  return\
    \ -1\nend", "  if x < y then\n    return choose_num(y, x)\n  else\n    local max_num\n\
    \    for i = x, 1, -1 do\n      if max_num == nil then\n        max_num = i\n\
    \      else\n        if i % 2 == 0 then\n          max_num = i\n        end\n\
    \      end\n    end\n    return max_num\n  end\nend", "  if x < y then\n    return\
    \ choose_num(y, x)\n  else\n    local max_num = 0\n    local max_num = max_num\
    \ + x % 2\n    max_num = max_num + y % 2\n    return max_num\n  end\nend", "\t\
    local x_even = x % 2 == 0\n\tlocal y_even = y % 2 == 0\n\tlocal x_odd = x % 2\
    \ ~= 0\n\tlocal y_odd = y % 2 ~= 0\n\tlocal x_even = x_even and x ~= 0\n\tlocal\
    \ y_even = y_even and y ~= 0\n\tlocal x_odd = x_odd and x ~= 0\n\tlocal y_odd\
    \ = y_odd and y ~= 0\n\tif x_even and y_even then\n\t\treturn x\n\telseif x_even\
    \ and y_odd then\n\t\treturn y\n\telseif x_odd then\n\t\treturn x\n\telseif y_even\
    \ then\n\t\treturn y\n\telse\n\t\treturn -1\n\tend\nend", "    if x < y then\n\
    \        x, y = y, x\n    end\n    for i = x, y + 1 do\n        if i % 2 == 0\
    \ then\n            return i\n        end\n    end\n    return -1\nend", "   \
    \ if x < y then\n        x, y = y, x\n    end\n    local even = 1\n    local odd\
    \ = 0\n    while even < y do\n        even = even + 2\n    end\n    while odd\
    \ < x do\n        odd = odd + 2\n    end\n    if even > y then\n        return\
    \ even\n    elseif odd > x then\n        return -1\n    else\n        return even\n\
    \    end\nend", "\tlocal function is_even(n)\n\t\treturn n % 2 == 0\n\tend", " \
    \  if x < y then\n      return choose_num(y, x)\n   end\n   if x == y then\n \
    \     return x\n   end\n   if x % 2 == 0 then\n      return choose_num(x / 2,\
    \ y)\n   else\n      return choose_num(x / 2 + 1, y)\n   end\nend", "   if x <\
    \ y then\n      x, y = y, x\n   end\n   for i = x, y + 1 do\n      if i ~= math.floor(i)\
    \ then\n         return i\n      end\n   end\n   return -1\nend", "  local max_num\n\
    \  local min_num\n  local max_num_in_range\n  local min_num_in_range\n  \n  --\
    \ If the range is empty, return -1\n  if x < y then\n    return -1\n  end\n  \n\
    \  -- If the range is empty, return -1\n  if x == y then\n    return x\n  end\n\
    \  \n  -- If the range is empty, return -1\n  if x == 1 then\n    return y\n \
    \ end\n  \n  -- If the range is empty, return -1\n  if y == 1 then\n    return\
    \ x\n  end\n  \n  -- If the range is empty, return -1\n  if x > y then\n    return\
    \ -1\n  end\n  \n  -- If the range is empty, return -1\n  if x == y then\n   \
    \ return x\n  end\n  \n  -- If the range is empty, return -1\n  if x == 1 then\n\
    \    return y\n  end\n  \n  -- If the range is empty, return -1\n  if y == 1 then\n\
    \    return x\n  end\n  \n  -- If the range is empty, return -1\n  if x > y then\n\
    \    return -1\n  end\n  \n  -- If the range is empty, return -1\n  if x == y\
    \ then\n    return x\n  end\n  \n  -- If the range is empty, return -1\n  if x\
    \ == 1 then\n    return y\n  end\n  \n  -- If the range is empty, return -1\n\
    \  if y == 1 then\n    return x\n  end\n  \n  -- If the range is empty, return\
    \ -1\n  if x > y then\n    return -1\n  end\n  \n  -- If the range is empty, return\
    \ -1\n  if x == y then\n    return x\n  end\n  \n  -- If the range is empty, return\
    \ -1\n  if x == 1 then\n    return y\n  end\n  \n  -- If the range is empty, return\
    \ -1\n  if y == 1 then\n    return x\n  end\n  \n  -- If the range is empty, return\
    \ -1\n  if x > y then\n    return -1\n  end\n  \n  -- If the range is empty, return\
    \ -1\n  if x == y then\n    return x\n  end\n  \n  -- If the range is empty, return\
    \ -1\n  if x == 1 then\n    return y\n  end\n  \n  -- If the range is empty, return\
    \ -1\n  if y == 1 then\n    return x\n  end\n  \n  -- If the range is empty, return\
    \ -1\n  if x > y then\n    return -1\n  end\n  \n  -- If the range is empty, return\
    \ -1\n  if x == y then\n    return x\n  end\n  \n  -- If the range is empty, return\
    \ -1\n  if x == 1 then\n    return y\n  end\n  \n  -- If the range is empty, return\
    \ -1\n  if y == 1 then\n", "  if x < y then\n    x, y = y, x\n  end\n  local max_num\
    \ = x\n  local max_num2 = y\n  local i = 1\n  while i <= max_num2 do\n    local\
    \ num = max_num + i\n    if num % 2 == 0 then\n      max_num = num\n    end\n\
    \    i = i + 1\n  end\n  return max_num\nend", "  local function is_even(n)\n\
    \    return n % 2 == 0\n  end\n  \n  local function is_odd(n)\n    return n %\
    \ 2 == 1\n  end\n  \n  local function is_between(a, b)\n    return a <= b and\
    \ a >= b\n  end\n  \n  local function is_in_range(n)\n    return is_even(n) and\
    \ is_between(x - 1, n) or is_odd(n) and is_between(n + 1, x)\n  end\n  \n  local\
    \ function is_in_range_or_none(n)\n    return is_in_range(n) or n\n  end\n  \n\
    \  local function is_in_range_or_none_and_not_even(n)\n    return is_in_range_or_none(n)\
    \ and is_even(n)\n  end\n  \n  local function is_in_range_or_none_and_not_odd(n)\n\
    \    return is_in_range_or_none(n) and is_odd(n)\n  end\n  \n  local function\
    \ is_in_range_or_none_and_not_between(a, b)\n    return is_in_range_or_none(n)\
    \ and is_between(a, b)\n  end\n  \n  local function is_in_range_or_none_and_not_in_range(n)\n\
    \    return is_in_range_or_none(n) and is_in_range(n)\n  end\n  \n  local function\
    \ is_in_range_or_none_and_not_in_range_or_none(n)\n    return is_in_range_or_none(n)\
    \ and is_in_range_or_none(n)\n  end\n  \n  local function is_in_range_or_none_and_not_in_range_or_none_and_not_even(n)\n\
    \    return is_in_range_or_none(n) and is_in_range_or_none(n) and is_even(n)\n\
    \  end\n  \n  local function is_in_range_or_none_and_not_in_range_or_none_and_not_odd(n)\n\
    \    return is_in_range_or_none(n) and is_in_range_or_none(n) and is_odd(n)\n\
    \  end\n  \n  local function is_in_range_or_none_and_not_in_range_or_none_and_not_between(a,\
    \ b)\n    return is_in_range_or_none(n) and is_in_range_or_none(n) and is_between(a,\
    \ b)\n  end\n  \n  local function is_in_range_or_none_and_not_in_range_or_none_and_not_in_range(n)\n\
    \    return is_in_range_or_none(n) and is_in_range_or_none(n) and is_in_range(n)\n\
    \  end\n  \n  local function is_in_range_or_none_and_not_in_range_or_none_and_not_in_range_or_none(n)\n\
    \    return is_in_range_or_none(n) and is_in_range_or_none(n) and is_in_range_or_none(n)\n\
    \  end\n  \n  local function is_in_range_or_none_and_not_in_range_or_none_and_not_in_range_or_none_and_not_even(n)\n\
    \    return is_", "   if x < y then\n      x, y = y, x\n   end\n   local max_num\
    \ = x\n   local min_num = y\n   while max_num < y do\n      max_num = max_num\
    \ * 2 + 1\n   end\n   while min_num > x do\n      min_num = min_num / 2\n   end\n\
    \   return max_num\nend", "  if x < y then\n    x, y = y, x\n  end\n  local m\
    \ = math.floor((x + y) / 2)\n  if m % 2 == 0 then\n    return m\n  else\n    return\
    \ -1\n  end\nend", "  if x > y then\n    x, y = y, x\n  end\n  local max_num =\
    \ x\n  local min_num = y\n  while max_num - min_num > 1 do\n    local mid = (max_num\
    \ + min_num) / 2\n    if mid % 2 == 0 then\n      max_num = mid\n    else\n  \
    \    min_num = mid\n    end\n  end\n  return max_num\nend", "\tlocal function\
    \ is_even(n)\n\t\treturn n % 2 == 0\n\tend\n\t\n\tlocal function is_odd(n)\n\t\
    \treturn n % 2 == 1\n\tend\n\t\n\tlocal function is_between(lower, upper)\n\t\t\
    return lower <= upper and lower < upper\n\tend\n\t\n\tlocal function is_in_range(lower,\
    \ upper)\n\t\treturn lower <= x and x < upper\n\tend\n\t\n\tlocal function is_in_range_or_equal(lower,\
    \ upper)\n\t\treturn lower <= x and x <= upper\n\tend\n\t\n\tlocal function is_in_range_or_equal_or_zero(lower,\
    \ upper)\n\t\treturn lower <= x and x >= upper\n\tend\n\t\n\tlocal function is_in_range_or_equal_or_zero(lower,\
    \ upper)\n\t\treturn lower <= x and x >= upper\n\tend\n\t\n\tlocal function is_in_range_or_equal_or_zero(lower,\
    \ upper)\n\t\treturn lower <= x and x >= upper\n\tend\n\t\n\tlocal function is_in_range_or_equal_or_zero(lower,\
    \ upper)\n\t\treturn lower <= x and x >= upper\n\tend\n\t\n\tlocal function is_in_range_or_equal_or_zero(lower,\
    \ upper)\n\t\treturn lower <= x and x >= upper\n\tend\n\t\n\tlocal function is_in_range_or_equal_or_zero(lower,\
    \ upper)\n\t\treturn lower <= x and x >= upper\n\tend\n\t\n\tlocal function is_in_range_or_equal_or_zero(lower,\
    \ upper)\n\t\treturn lower <= x and x >= upper\n\tend\n\t\n\tlocal function is_in_range_or_equal_or_zero(lower,\
    \ upper)\n\t\treturn lower <= x and x >= upper\n\tend\n\t\n\tlocal function is_in_range_or_equal_or_zero(lower,\
    \ upper)\n\t\treturn lower <= x and x >= upper\n\tend\n\t\n\tlocal function is_in_range_or_equal_or_zero(lower,\
    \ upper)\n\t\treturn lower <= x and x >= upper\n\tend\n\t\n\tlocal function is_in_range_or_equal_or_zero(lower,\
    \ upper)\n\t\treturn lower <= x and x >= upper\n\tend\n\t\n\tlocal function is_in_range_or_equal_or_zero(lower,\
    \ upper)\n\t\treturn lower <= x and x >= upper\n\tend\n\t\n\tlocal function is_in_range_or_equal_or_zero(lower,\
    \ upper)\n\t\treturn lower <= x and x >= upper\n\tend\n\t\n\tlocal function is_in_range_or_equal_or_zero(lower,\
    \ upper)\n\t\treturn lower <= x and x >= upper\n\tend\n\t\n\tlocal function is_in_range_or_equal_or_zero(low",
  "    local x_even = x % 2\n    local y_even = y % 2\n    if x_even and y_even then\n\
    \        if x_even > y_even then\n            return x\n        else\n       \
    \     return y\n        end\n    elseif x_even then\n        return x\n    else\n\
    \        return y\n    end\nend", "    local max_num = x\n    local min_num =\
    \ y\n    local i = 1\n    while i <= y do\n        if max_num % 2 == 0 then\n\
    \            max_num = max_num / 2\n        else\n            max_num = max_num\
    \ * 3 + 1\n        end\n        i = i + 1\n    end\n    while i <= x do\n    \
    \    if min_num % 2 == 0 then\n            min_num = min_num / 2\n        else\n\
    \            min_num = min_num * 3 + 1\n        end\n        i = i + 1\n    end\n\
    \    if max_num > min_num then\n        return max_num\n    else\n        return\
    \ -1\n    end\nend", "  if x < y then\n    x, y = y, x\n  end\n  local max_num\
    \ = x\n  local max_num2 = y\n  local i = 1\n  while i <= max_num2 do\n    if max_num\
    \ % 2 == 0 then\n      max_num = max_num / 2\n    else\n      max_num = max_num\
    \ * 3 + 1\n    end\n    i = i + 1\n  end\n  return max_num\nend", "    local max_num\
    \ = -1\n    local max_num_index = 0\n    for i = x, y do\n        if i % 2 ==\
    \ 0 then\n            if max_num < i then\n                max_num = i\n     \
    \           max_num_index = i\n            end\n        end\n    end\n    return\
    \ max_num_index\nend", "  if x < y then\n    x, y = y, x\n  end\n  local x_even\
    \ = x % 2\n  local y_even = y % 2\n  if x_even and y_even then\n    return y\n\
    \  elseif x_even then\n    return y\n  else\n    return x\n  end\nend", "  if\
    \ x < y then\n    return choose_num(y, x)\n  end\n  if x > y then\n    return\
    \ choose_num(x, y - 1)\n  end\n  if x == y then\n    return -1\n  end\n  if x\
    \ % 2 == 0 and y % 2 == 0 then\n    return choose_num(x / 2, y / 2)\n  end\n \
    \ if x % 2 == 0 and y % 2 == 1 then\n    return choose_num(x / 2, y)\n  end\n\
    \  if x % 2 == 1 and y % 2 == 0 then\n    return choose_num(x, y / 2)\n  end\n\
    \  if x % 2 == 1 and y % 2 == 1 then\n    return x\n  end\nend", "   if x < y\
    \ then\n      x, y = y, x\n   end\n   if x < 2 then\n      return -1\n   end\n\
    \   if y < 2 then\n      return -1\n   end\n   local z = math.floor((x + y) /\
    \ 2)\n   if z * z == x then\n      return z\n   else\n      return choose_num(z,\
    \ y)\n   end\nend", "   if x < y then\n      x, y = y, x\n   end\n   if x == y\
    \ then\n      return x\n   end\n   if x % 2 == 0 then\n      return choose_num(x\
    \ / 2, y)\n   else\n      return choose_num(3 * x + 1, y)\n   end\nend", "  if\
    \ x < y then\n    return choose_num(y, x)\n  elseif x == y then\n    return x\n\
    \  else\n    return -1\n  end\nend", "    local function is_even(n)\n        return\
    \ n % 2 == 0\n    end\n    \n    local function is_odd(n)\n        return n %\
    \ 2 == 1\n    end\n    \n    local function is_between(a, b)\n        return a\
    \ <= b and b >= a\n    end\n    \n    local function is_in_range(n)\n        return\
    \ is_even(n) or is_odd(n)\n    end\n    \n    local function is_in_range_or_not(n)\n\
    \        return is_in_range(n) or is_between(n + 1, y)\n    end\n    \n    local\
    \ function is_in_range_or_not_and_is_even(n)\n        return is_in_range_or_not(n)\
    \ and is_even(n)\n    end\n    \n    local function is_in_range_or_not_and_is_odd(n)\n\
    \        return is_in_range_or_not(n) and is_odd(n)\n    end\n    \n    local\
    \ function is_in_range_or_not_and_is_between(a, b)\n        return is_in_range_or_not(n)\
    \ and is_between(a, b)\n    end\n    \n    local function is_in_range_or_not_and_is_in_range(n)\n\
    \        return is_in_range_or_not(n) and is_in_range(n)\n    end\n    \n    local\
    \ function is_in_range_or_not_and_is_in_range_or_not(n)\n        return is_in_range_or_not(n)\
    \ and is_in_range_or_not(n)\n    end\n    \n    local function is_in_range_or_not_and_is_in_range_or_not_and_is_even(n)\n\
    \        return is_in_range_or_not_and_is_in_range(n) and is_even(n)\n    end\n\
    \    \n    local function is_in_range_or_not_and_is_in_range_or_not_and_is_odd(n)\n\
    \        return is_in_range_or_not_and_is_in_range(n) and is_odd(n)\n    end\n\
    \    \n    local function is_in_range_or_not_and_is_in_range_or_not_and_is_between(a,\
    \ b)\n        return is_in_range_or_not_and_is_in_range(n) and is_between(a, b)\n\
    \    end\n    \n    local function is_in_range_or_not_and_is_in_range_or_not_and_is_in_range(n)\n\
    \        return is_in_range_or_not_and_is_in_range(n) and is_in_range(n)\n   \
    \ end\n    \n    local function is_in_range_or_not_and_is_in_range_or_not_and_is_in_range_or_not(n)\n\
    \        return is_in_range_or_not_and_is_in_range(n) and is_in_range_or_not(n)\n\
    \    end\n    \n    local function is_in_range_or_not_and_is_in_range_or_not_and_is_in_range_or_not_and_is_even(n)\n\
    \        return is_in_range_or_not_and_is_in_range_or_not(n) and is_even(n)\n\
    \    end\n    \n    local function is_in_", "\tlocal function is_even(n)\n\t\t\
    return n % 2 == 0\n\tend", "  if x < y then\n    x, y = y, x\n  end\n  local x_even\
    \ = x % 2 == 0\n  local y_even = y % 2 == 0\n  if x_even and y_even then\n   \
    \ return x + (y / 2)\n  elseif x_even then\n    return y\n  else\n    return x\n\
    \  end\nend", "   if x < y then\n      x, y = y, x\n   end\n   local max_num =\
    \ x\n   for i = y, 1, -1 do\n      if max_num % i == 0 then\n         max_num\
    \ = max_num / i\n      else\n         return -1\n      end\n   end\n   return\
    \ max_num\nend", "    local function is_even(n)\n        return n % 2 == 0\n \
    \   end\n    local function is_odd(n)\n        return n % 2 == 1\n    end\n  \
    \  local function is_between(a, b)\n        return a <= b and b >= a\n    end\n\
    \    local function is_in_range(n)\n        return is_even(n) or is_odd(n)\n \
    \   end\n    local function is_in_range_or_not(n)\n        return is_in_range(n)\
    \ or is_between(n + 1, y)\n    end\n    local function is_in_range_or_not_and_not_between(a,\
    \ b)\n        return is_in_range_or_not(a) and is_in_range_or_not(b) and not is_between(a,\
    \ b)\n    end\n    local function is_in_range_or_not_and_not_between2(a, b)\n\
    \        return is_in_range_or_not(a) and is_in_range_or_not(b) and not is_between2(a,\
    \ b)\n    end\n    local function is_in_range_or_not_and_not_between3(a, b)\n\
    \        return is_in_range_or_not(a) and is_in_range_or_not(b) and not is_between3(a,\
    \ b)\n    end\n    local function is_in_range_or_not_and_not_between4(a, b)\n\
    \        return is_in_range_or_not(a) and is_in_range_or_not(b) and not is_between4(a,\
    \ b)\n    end\n    local function is_in_range_or_not_and_not_between5(a, b)\n\
    \        return is_in_range_or_not(a) and is_in_range_or_not(b) and not is_between5(a,\
    \ b)\n    end\n    local function is_in_range_or_not_and_not_between6(a, b)\n\
    \        return is_in_range_or_not(a) and is_in_range_or_not(b) and not is_between6(a,\
    \ b)\n    end\n    local function is_in_range_or_not_and_not_between7(a, b)\n\
    \        return is_in_range_or_not(a) and is_in_range_or_not(b) and not is_between7(a,\
    \ b)\n    end\n    local function is_in_range_or_not_and_not_between8(a, b)\n\
    \        return is_in_range_or_not(a) and is_in_range_or_not(b) and not is_between8(a,\
    \ b)\n    end\n    local function is_in_range_or_not_and_not_between9(a, b)\n\
    \        return is_in_range_or_not(a) and is_in_range_or_not(b) and not is_between9(a,\
    \ b)\n    end\n    local function is_in_range_or_not_and_not_between10(a, b)\n\
    \        return is_in_range_or_not(a) and is_in_range_or_not(b) and not is_between10(a,\
    \ b)\n    end\n    local function is_in_range_or_not_and_not_between11(a, b)\n\
    \        return is_in_range_or_not(a) and is_in_range_or_not(b) and not is_between11(a,\
    \ b)\n    end\n    local function is_in_range_or_not_and_not_between12(a, b)\n\
    \        return is_in_range_or_not(a) and is_in_range_or_not(b", "   if x < y\
    \ then\n      x, y = y, x\n   end\n   local max_num = x\n   local max_num2 = y\n\
    \   while max_num2 ~= 0 do\n      if max_num2 % 2 == 0 then\n         max_num\
    \ = max_num2\n      else\n         max_num2 = max_num2 >> 1\n      end\n   end\n\
    \   return max_num\nend", "   if x >= y then\n      return -1\n   end\n   if x\
    \ <= 1 then\n      return 1\n   end\n   local max_num = 1\n   for i = 2, y do\n\
    \      if x % i == 0 then\n         max_num = i\n         break\n      end\n \
    \  end\n   return max_num\nend", "  if x < y then\n    return choose_num(y, x)\n\
    \  end\n  if x == y then\n    return x\n  end\n  if x % 2 == 0 then\n    return\
    \ choose_num(x / 2, y)\n  end\n  if y % 2 == 0 then\n    return choose_num(x,\
    \ y / 2)\n  end\n  if x > y then\n    return choose_num(y / 2, x)\n  end\n  return\
    \ -1\nend", "\tlocal num = x\n\twhile num < y do\n\t\tif num % 2 == 0 then\n\t\
    \t\tnum = num + 1\n\t\telse\n\t\t\tnum = num - 1\n\t\tend\n\tend\n\treturn num\n\
    end", "\tlocal x_even = x % 2\n\tlocal y_even = y % 2\n\tlocal x_odd = x % 2 +\
    \ 1\n\tlocal y_odd = y % 2 + 1\n\tif x_even == y_even then\n\t\tif x_even > y_even\
    \ then\n\t\t\treturn x_even\n\t\telse\n\t\t\treturn y_even\n\t\tend\n\telse\n\t\
    \tif x_odd > y_odd then\n\t\t\treturn x_odd\n\t\telse\n\t\t\treturn y_odd\n\t\t\
    end\n\tend\nend", "    if x < y then\n        return choose_num(y, x)\n    end\n\
    \    if x == y then\n        return x\n    end\n    if x % 2 == 0 then\n     \
    \   return choose_num(x / 2, y)\n    end\n    if y % 2 == 0 then\n        return\
    \ choose_num(x, y / 2)\n    end\n    return -1\nend", "  if x < y then\n    x,\
    \ y = y, x\n  end\n  local x_even = x % 2\n  local y_even = y % 2\n  if x_even\
    \ > y_even then\n    return y\n  else\n    return x\n  end\nend", "  if x < y\
    \ then\n    return choose_num(y, x)\n  end\n  if x == y then\n    return x\n \
    \ end\n  if x % 2 == 0 then\n    return choose_num(x / 2, y)\n  end\n  if y %\
    \ 2 == 0 then\n    return choose_num(x, y / 2)\n  end\n  return -1\nend", "  if\
    \ x < y then\n    return choose_num(y, x)\n  end\n  if x == y then\n    return\
    \ x\n  end\n  if x % 2 == 0 then\n    return choose_num(x / 2, y)\n  end\n  if\
    \ y % 2 == 0 then\n    return choose_num(x, y / 2)\n  end\n  if x > y then\n \
    \   return choose_num(y / 2, x)\n  end\n  return -1\nend", "    if x < y then\n\
    \        return choose_num(y, x)\n    elseif x == y then\n        return x\n \
    \   else\n        return -1\n    end\nend", "   if x < y then\n      x, y = y,\
    \ x\n   end\n   local max_num = x\n   for i = y, 1, -1 do\n      if max_num %\
    \ i == 0 then\n         max_num = max_num / i\n      else\n         return -1\n\
    \      end\n   end\n   return max_num\nend", "   if x < y then\n      return choose_num(y,\
    \ x)\n   end\n   if x == y then\n      return x\n   end\n   if x % 2 == 0 then\n\
    \      return choose_num(x / 2, y)\n   end\n   if y % 2 == 0 then\n      return\
    \ choose_num(x, y / 2)\n   end\n   return -1\nend", "  if x < y then\n    return\
    \ choose_num(y, x)\n  elseif x == y then\n    return x\n  else\n    return choose_num(y\
    \ - 1, x)\n  end\nend", "    local function is_even(n)\n        return n % 2 ==\
    \ 0\n    end", "  if x < y then\n    return choose_num(y, x)\n  elseif x == y\
    \ then\n    return x\n  else\n    return choose_num(y - 1, x + 1)\n  end\nend",
  "   if x >= y then\n      return -1\n   end\n   if x == y then\n      return x\n\
    \   end\n   if x % 2 == 0 then\n      return choose_num(x / 2, y)\n   end\n  \
    \ if y % 2 == 0 then\n      return choose_num(x, y / 2)\n   end\n   if x > y then\n\
    \      return choose_num(x - y, y)\n   end\n   if x < y then\n      return choose_num(x,\
    \ y - x)\n   end\nend", "  if x < y then\n    return choose_num(y, x)\n  elseif\
    \ x == y then\n    return x\n  else\n    return choose_num(y - 1, x + 1)\n  end\n\
    end", "  local function is_even(n)\n    return n % 2 == 0\n  end\n  local function\
    \ is_odd(n)\n    return n % 2 == 1\n  end\n  local function is_between(n1, n2)\n\
    \    return n1 <= n2 and n2 <= n1\n  end\n  local function is_in_range(n1, n2)\n\
    \    return is_even(n1) and is_even(n2) and is_between(n1, n2)\n  end\n  local\
    \ function is_in_range_or_not(n1, n2)\n    return is_even(n1) and is_even(n2)\
    \ and is_in_range(n1, n2) or is_odd(n1) \n      and is_odd(n2)\n  end\n  local\
    \ function is_in_range_or_not_between(n1, n2)\n    return is_even(n1) and is_even(n2)\
    \ and is_in_range_or_not(n1, n2) or \n      is_odd(n1) and is_odd(n2)\n  end\n\
    \  local function is_in_range_or_not_even(n1, n2)\n    return is_even(n1) and\
    \ is_even(n2) and is_in_range_or_not(n1, n2) or \n      is_odd(n1)\n  end\n  local\
    \ function is_in_range_or_not_odd(n1, n2)\n    return is_even(n1) and is_even(n2)\
    \ and is_in_range_or_not(n1, n2) or \n      is_odd(n1)\n  end\n  local function\
    \ is_in_range_or_not_even_between(n1, n2)\n    return is_even(n1) and is_even(n2)\
    \ and is_in_range_or_not(n1, n2) or \n      is_odd(n1) and is_odd(n2)\n  end\n\
    \  local function is_in_range_or_not_odd_between(n1, n2)\n    return is_even(n1)\
    \ and is_even(n2) and is_in_range_or_not(n1, n2) or \n      is_odd(n1)\n  end\n\
    \  local function is_in_range_or_not_even_between_or_not(n1, n2)\n    return is_even(n1)\
    \ and is_even(n2) and is_in_range_or_not(n1, n2) or \n      is_odd(n1) and is_odd(n2)\n\
    \  end\n  local function is_in_range_or_not_odd_between_or_not(n1, n2)\n    return\
    \ is_even(n1) and is_even(n2) and is_in_range_or_not(n1, n2) or \n      is_odd(n1)\n\
    \  end\n  local function is_in_range_or_not_even_between_or_not_between(n1, n2)\n\
    \    return is_even(n1) and is_even(n2) and is_in_range_or_not(n1, ", "    local\
    \ xmin = math.min(x, y)\n    local xmax = math.max(x, y)\n    local ymin = math.min(y,\
    \ xmax)\n    local ymax = math.max(y, xmax)\n    local xmid = (xmax + xmin) /\
    \ 2\n    local ymid = (ymax + ymin) / 2\n    local xdiff = xmax - xmin\n    local\
    \ ydiff = ymax - ymin\n    local xdiff2 = xdiff / 2\n    local ydiff2 = ydiff\
    \ / 2\n    local xdiff3 = xdiff2 / 3\n    local ydiff3 = ydiff2 / 3\n    local\
    \ xdiff4 = xdiff3 / 4\n    local ydiff4 = ydiff3 / 4\n    local xdiff5 = xdiff4\
    \ / 5\n    local ydiff5 = ydiff4 / 5\n    local xdiff6 = xdiff5 / 6\n    local\
    \ ydiff6 = ydiff5 / 6\n    local xdiff7 = xdiff6 / 7\n    local ydiff7 = ydiff6\
    \ / 7\n    local xdiff8 = xdiff7 / 8\n    local ydiff8 = ydiff7 / 8\n    local\
    \ xdiff9 = xdiff8 / 9\n    local ydiff9 = ydiff8 / 9\n    local xdiff10 = xdiff9\
    \ / 10\n    local ydiff10 = ydiff9 / 10\n    local xdiff11 = xdiff10 / 11\n  \
    \  local ydiff11 = ydiff10 / 11\n    local xdiff12 = xdiff11 / 12\n    local ydiff12\
    \ = ydiff11 / 12\n    local xdiff13 = xdiff12 / 13\n    local ydiff13 = ydiff12\
    \ / 13\n    local xdiff14 = xdiff13 / 14\n    local ydiff14 = ydiff13 / 14\n \
    \   local xdiff15 = xdiff14 / 15\n    local ydiff15 = ydiff14 / 15\n    local\
    \ xdiff16 = xdiff15 / 16\n    local ydiff16 = ydiff15 / 16\n    local xdiff17\
    \ = xdiff16 / 17\n    local ydiff17 = ydiff16 / 17\n    local xdiff18 = xdiff17\
    \ / 18\n    local ydiff18 = ydiff17 / 18\n    local xdiff19 = xdiff18 / 19\n \
    \   local ydiff19 = ydiff18 / 19\n    local xdiff20 = xdiff19 / 20\n    local\
    \ ydiff20 = ydiff19 / 20\n    local xdiff21 = xdiff20 / 21\n    local ", "  if\
    \ x < y then\n    return choose_num(y, x)\n  end\n  if x == y then\n    return\
    \ x\n  end\n  if x % 2 == 0 then\n    return choose_num(x / 2, y)\n  end\n  if\
    \ y % 2 == 0 then\n    return choose_num(x, y / 2)\n  end\n  return -1\nend",
  "    if x < y then\n        x, y = y, x\n    end\n    for i = x, y + 1 do\n    \
    \    if i % 2 == 0 then\n            return i\n        end\n    end\n    return\
    \ -1\nend", "   if x < y then\n      x, y = y, x\n   end\n   local ans = -1\n\
    \   for i = x, y + 1 do\n      if i ~= 0 then\n         if ans == -1 then\n  \
    \          ans = i\n         else\n            if i % 2 == 0 then\n          \
    \     ans = i\n            end\n         end\n      end\n   end\n   return ans\n\
    end", "\tlocal function is_even(n)\n\t\treturn n % 2 == 0\n\tend\n\tlocal function\
    \ is_odd(n)\n\t\treturn n % 2 == 1\n\tend\n\tlocal function is_between(a, b)\n\
    \t\treturn a <= b and a >= b\n\tend\n\tlocal function is_in_range(n)\n\t\treturn\
    \ is_between(x, n) and is_between(y, n)\n\tend\n\tlocal function is_in_range_or_even(n)\n\
    \t\treturn is_in_range(n) or is_even(n)\n\tend\n\tlocal function is_in_range_or_odd(n)\n\
    \t\treturn is_in_range(n) or is_odd(n)\n\tend\n\tlocal function is_in_range_or_odd_or_even(n)\n\
    \t\treturn is_in_range_or_odd(n) or is_even(n)\n\tend\n\tlocal function is_in_range_or_odd_or_even(n)\n\
    \t\treturn is_in_range_or_odd(n) or is_odd(n)\n\tend\n\tlocal function is_in_range_or_odd_or_even_or_even(n)\n\
    \t\treturn is_in_range_or_odd_or_even(n) or is_even(n)\n\tend\n\tlocal function\
    \ is_in_range_or_odd_or_even_or_even(n)\n\t\treturn is_in_range_or_odd_or_even(n)\
    \ or is_odd(n)\n\tend\n\tlocal function is_in_range_or_odd_or_even_or_even(n)\n\
    \t\treturn is_in_range_or_odd_or_even(n) or is_even(n)\n\tend\n\tlocal function\
    \ is_in_range_or_odd_or_even_or_even(n)\n\t\treturn is_in_range_or_odd_or_even(n)\
    \ or is_odd(n)\n\tend\n\tlocal function is_in_range_or_odd_or_even_or_even(n)\n\
    \t\treturn is_in_range_or_odd_or_even(n) or is_even(n)\n\tend\n\tlocal function\
    \ is_in_range_or_odd_or_even_or_even(n)\n\t\treturn is_in_range_or_odd_or_even(n)\
    \ or is_odd(n)\n\tend\n\tlocal function is_in_range_or_odd_or_even_or_even(n)\n\
    \t\treturn is_in_range_or_odd_or_even(n) or is_even(n)\n\tend\n\tlocal function\
    \ is_in_range_or_odd_or_even_or_even(n)\n\t\treturn is_in_range_or_odd_or_even(n)\
    \ or is_odd(n)\n\tend\n\tlocal function is_in_range_or_odd_or_even_or_even(n)\n\
    \t\treturn is_in_range_or_odd_or_even(n) or is_even(n)\n\tend\n\tlocal function\
    \ is_in_range_or_odd_or_even_or_even(n)\n\t\treturn is_in_range_or_odd_", "  \
    \ if x < y then\n      return -1\n   end\n   if x == y then\n      return x\n\
    \   end\n   if x % 2 == 0 then\n      return choose_num(x / 2, y)\n   end\n  \
    \ if y % 2 == 0 then\n      return choose_num(x, y / 2)\n   end\n   if x > y then\n\
    \      return choose_num(x / 2, y / 2)\n   end\n   return -1\nend", "    local\
    \ function is_even(n)\n        return n % 2 == 0\n    end\n    local function\
    \ is_odd(n)\n        return n % 2 == 1\n    end\n    local function is_between(n1,\
    \ n2)\n        return n1 <= n2 and n2 <= n1\n    end\n    local function is_in_range(n1,\
    \ n2)\n        return is_even(n1) and is_even(n2) and is_between(n1, n2)\n   \
    \ end\n    local function is_in_range_odd(n1, n2)\n        return is_odd(n1) and\
    \ is_odd(n2) and is_between(n1, n2)\n    end\n    local function is_in_range_even(n1,\
    \ n2)\n        return is_even(n1) and is_even(n2) and is_between(n1, n2)\n   \
    \ end\n    local function is_in_range_odd_even(n1, n2)\n        return is_odd(n1)\
    \ and is_even(n2) and is_between(n1, n2)\n    end\n    local function is_in_range_odd_odd(n1,\
    \ n2)\n        return is_odd(n1) and is_odd(n2) and is_between(n1, n2)\n    end\n\
    \    local function is_in_range_odd_even_even(n1, n2)\n        return is_odd(n1)\
    \ and is_even(n2) and is_between(n1, n2)\n    end\n    local function is_in_range_odd_even_odd(n1,\
    \ n2)\n        return is_odd(n1) and is_odd(n2) and is_between(n1, n2)\n    end\n\
    \    local function is_in_range_odd_even_even_even(n1, n2)\n        return is_odd(n1)\
    \ and is_even(n2) and is_between(n1, n2)\n    end\n    local function is_in_range_odd_even_even_odd(n1,\
    \ n2)\n        return is_odd(n1) and is_odd(n2) and is_between(n1, n2)\n    end\n\
    \    local function is_in_range_odd_even_odd_even(n1, n2)\n        return is_odd(n1)\
    \ and is_odd(n2) and is_between(n1, n2)\n    end\n    local function is_in_range_odd_even_odd_odd(n1,\
    \ n2)\n        return is_odd(n1) and is_odd(n2) and is_between(n1, n2)\n    end\n\
    \    local function is_in_range_odd_even_odd_even_even(n1, n2)\n        return\
    \ is_odd(n1) and is_odd(n2) and is_between(n1, n2)\n    end\n    local function\
    \ is_in_range_odd_even_odd_even_odd(n1, n2)\n        return is_odd(n1) and is_od",
  "\tlocal max_num = x\n\tlocal min_num = y\n\tlocal max_num_in_range = max_num\n\t\
    local min_num_in_range = min_num\n\tlocal max_even = 1\n\tlocal min_even = 1\n\
    \tlocal max_odd = 1\n\tlocal min_odd = 1\n\tlocal max_even_in_range = max_even\n\
    \tlocal min_even_in_range = min_even\n\tlocal max_odd_in_range = max_odd\n\tlocal\
    \ min_odd_in_range = min_odd\n\tlocal i = 1\n\twhile i <= y do\n\t\tlocal num\
    \ = i\n\t\tlocal even = 1\n\t\tlocal odd = 1\n\t\tlocal even_in_range = even\n\
    \t\tlocal odd_in_range = odd\n\t\tlocal j = 1\n\t\twhile j <= x do\n\t\t\tlocal\
    \ num2 = j\n\t\t\tif num2 % 2 == 0 then\n\t\t\t\teven = even + 1\n\t\t\telse\n\
    \t\t\t\todd = odd + 1 \n\t\t\tend\n\t\t\tj = j + 1\n\t\tend\n\t\tif even > max_even\
    \ then\n\t\t\tmax_even = even\n\t\t\tmax_even_in_range = max_even\n\t\tend\n\t\
    \tif odd > max_odd then\n\t\t\tmax_odd = odd\n\t\t\tmax_odd_in_range = max_odd\n\
    \t\tend\n\t\tif even < min_even then\n\t\t\tmin_even = even\n\t\t\tmin_even_in_range\
    \ = min_even\n\t\tend\n\t\tif odd < min_odd then\n\t\t\tmin_odd = odd\n\t\t\t\
    min_odd_in_range = min_odd\n\t\tend\n\t\ti = i + 1\n\tend\n\tif max_even > max_odd\
    \ then\n\t\treturn max_even_in_range\n\telse\n\t\treturn max_odd_in_range\n\t\
    end\nend", "  if x < y then\n    return choose_num(y, x)\n  elseif x == y then\n\
    \    return x\n  else\n    return choose_num(y - 1, x + 1)\n  end\nend", "  if\
    \ x < y then\n    return choose_num(y, x)\n  end\n  if x == y then\n    return\
    \ x\n  end\n  if x % 2 == 0 then\n    return choose_num(x / 2, y)\n  end\n  if\
    \ y % 2 == 0 then\n    return choose_num(x, y / 2)\n  end\n  return -1\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

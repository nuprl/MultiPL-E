name: HumanEval_102_choose_num
language: lua
prompt: "-- This function takes two positive numbers x and y and returns the\n-- biggest\
  \ even integer number that is in the range [x, y] inclusive. If \n-- there's no\
  \ such number, then the function should return -1.\n-- For example:\n-- >>> choose_num(12,\
  \ 15)\n-- 14\n-- >>> choose_num(13, 12)\n-- -1\nlocal function choose_num(x, y)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = choose_num\n\
  \    lu.assertEquals(candidate(12, 15), 14)\n    lu.assertEquals(candidate(13, 12),\
  \ -1)\n    lu.assertEquals(candidate(33, 12354), 12354)\n    lu.assertEquals(candidate(5234,\
  \ 5233), -1)\n    lu.assertEquals(candidate(6, 29), 28)\n    lu.assertEquals(candidate(27,\
  \ 10), -1)\n    lu.assertEquals(candidate(7, 7), -1)\n    lu.assertEquals(candidate(546,\
  \ 546), 546)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    if x < y then\n        local tmp = x\n        x = y\n        y\
    \ = tmp\n    end\n    local max_num = x\n    for i = y, 1, -1 do\n        if max_num\
    \ % i == 0 then\n            max_num = i\n        end\n    end\n    return max_num\n\
    end", "    local xx = math.floor(x)\n    local yy = math.floor(y)\n    local xy\
    \ = math.floor(x + y)\n    local xx = math.floor(xx)\n    local yy = math.floor(yy)\n\
    \    local xy = math.floor(xy)\n    if xx < yy then\n        if xy < xx then\n\
    \            return xx\n        else\n            return yy\n        end\n   \
    \ else\n        if yy < xx then\n            return yy\n        else\n       \
    \     return xx\n        end\n    end\nend", "\tlocal function is_even(n)\n\t\t\
    return n % 2 == 0\n\tend\n\t\n\tlocal function is_odd(n)\n\t\treturn n % 2 ==\
    \ 1\n\tend\n\t\n\tlocal function is_between(x, y)\n\t\treturn x >= y and x <=\
    \ y\n\tend\n\t\n\tlocal function is_in_range(n)\n\t\treturn is_even(n) and is_between(n\
    \ - 1, n)\n\tend\n\t\n\tlocal function is_in_range_odd(n)\n\t\treturn is_odd(n)\
    \ and is_between(n - 1, n)\n\tend\n\t\n\tlocal function is_in_range_even(n)\n\t\
    \treturn is_even(n) and is_between(n - 1, n)\n\tend\n\t\n\tlocal function is_in_range_odd_even(n)\n\
    \t\treturn is_odd(n) and is_even(n) and is_between(n - 1, n)\n\tend\n\t\n\tlocal\
    \ function is_in_range_odd_odd(n)\n\t\treturn is_odd(n) and is_odd(n) and is_between(n\
    \ - 1, n)\n\tend\n\t\n\tlocal function is_in_range_odd_even_even(n)\n\t\treturn\
    \ is_odd(n) and is_even(n) and is_between(n - 1, n)\n\tend\n\t\n\tlocal function\
    \ is_in_range_odd_even_odd(n)\n\t\treturn is_odd(n) and is_odd(n) and is_even(n)\
    \ and is_between(n - 1, n)\n\tend\n\t\n\tlocal function is_in_range_odd_even_even_even(n)\n\
    \t\treturn is_odd(n) and is_even(n) and is_even(n) and is_between(n - 1, n)\n\t\
    end\n\t\n\tlocal function is_in_range_odd_even_even_odd(n)\n\t\treturn is_odd(n)\
    \ and is_even(n) and is_odd(n) and is_between(n - 1, n)\n\tend\n\t\n\tlocal function\
    \ is_in_range_odd_even_odd_even(n)\n\t\treturn is_odd(n) and is_even(n) and is_odd(n)\
    \ and is_even(n) and is_between(n - 1, n)\n\tend\n\t\n\tlocal function is_in_range_odd_even_odd_odd(n)\n\
    \t\treturn is_odd(n) and is_even(n) and is_odd(n) and is_odd(n) and is_between(n\
    \ - 1, n)\n\tend\n\t\n\tlocal function is_in_range_odd_even_odd_even_even(n)\n\
    \t\treturn is_odd(n) and is_even(n) and is_odd(n) and is_even(n) and is_between(n\
    \ - 1, n)\n\tend\n\t\n\tlocal function is_in_range_odd_even_", "   if x < y then\n\
    \      local t = x\n      x = y\n      y = t\n   end\n   if x < 1 then\n     \
    \ return -1\n   end\n   if y < 1 then\n      return -1\n   end\n   if x == y then\n\
    \      return x\n   end\n   local m = math.floor((x + y) / 2)\n   if m % 2 ==\
    \ 0 then\n      return choose_num(x, m)\n   else\n      return choose_num(m, y)\n\
    \   end\nend", "   if x < y then\n      x, y = y, x\n   end\n   for i = x, y +\
    \ 1 do\n      if i % 2 == 0 then\n         return i\n      end\n   end\n   return\
    \ -1\nend", "   if x < y then\n      local m = x\n      x = y\n      y = m\n \
    \  end\n   if x < 1 then\n      return -1\n   end\n   if y < 1 then\n      return\
    \ -1\n   end\n   if x == 1 then\n      return y\n   end\n   if y == 1 then\n \
    \     return x\n   end\n   if x % 2 == 0 then\n      return choose_num(x / 2,\
    \ y)\n   end\n   if y % 2 == 0 then\n      return choose_num(x, y / 2)\n   end\n\
    \   if x % 2 == y % 2 then\n      return choose_num(x / 2, y / 2)\n   end\n  \
    \ if x % 2 == y % 2 then\n      return choose_num(x, y / 2)\n   end\n   return\
    \ -1\nend", "  if x < y then\n    x, y = y, x\n  end\n  local max_num = x\n  local\
    \ max_num2 = y\n  local i = 1\n  while i <= max_num2 do\n    local num = max_num\
    \ * i\n    if num % 2 == 0 then\n      max_num = num\n    end\n    i = i + 1\n\
    \  end\n  return max_num\nend", "\tlocal function is_even(n)\n\t\treturn n % 2\
    \ == 0\n\tend\n\t\n\tlocal function is_odd(n)\n\t\treturn n % 2 == 1\n\tend\n\t\
    \n\tlocal function is_between(n, x, y)\n\t\treturn n >= x and n <= y\n\tend\n\t\
    \n\tlocal function is_in_range(n)\n\t\treturn is_between(n, x, y)\n\tend\n\t\n\
    \tlocal function is_in_range_odd(n)\n\t\treturn is_between(n, x, y)\n\tend\n\t\
    \n\tlocal function is_in_range_even(n)\n\t\treturn is_even(n)\n\tend\n\t\n\tlocal\
    \ function is_in_range_odd_even(n)\n\t\treturn is_odd(n) or is_even(n)\n\tend\n\
    \t\n\tlocal function is_in_range_odd_odd(n)\n\t\treturn is_odd(n) or is_odd(n)\n\
    \tend\n\t\n\tlocal function is_in_range_odd_even_even(n)\n\t\treturn is_odd(n)\
    \ or is_even(n) or is_even(n)\n\tend\n\t\n\tlocal function is_in_range_odd_even_odd(n)\n\
    \t\treturn is_odd(n) or is_odd(n) or is_odd(n)\n\tend\n\t\n\tlocal function is_in_range_odd_even_even_even(n)\n\
    \t\treturn is_odd(n) or is_even(n) or is_even(n) or is_even(n)\n\tend\n\t\n\t\
    local function is_in_range_odd_even_even_odd(n)\n\t\treturn is_odd(n) or is_odd(n)\
    \ or is_odd(n) or is_odd(n)\n\tend\n\t\n\tlocal function is_in_range_odd_even_even_even_even(n)\n\
    \t\treturn is_odd(n) or is_even(n) or is_even(n) or is_even(n) or is_even(n)\n\
    \tend\n\t\n\tlocal function is_in_range_odd_even_even_even_odd(n)\n\t\treturn\
    \ is_odd(n) or is_odd(n) or is_odd(n) or is_odd(n) or is_odd(n)\n\tend\n\t\n\t\
    local function is_in_range_odd_even_even_even_even_even(n)\n\t\treturn is_odd(n)\
    \ or is_odd(n) or is_odd(n) or is_odd(n) or is_odd(n) or is_even(n) or is_even(n)\
    \ or is_even(n)\n\tend\n\t\n\tlocal function is_in_range_odd_even_even_even_even_odd(n)\n\
    \t\treturn is_odd(n) or is_odd(n) or is_odd(n) or is_odd(n) or ", "  local function\
    \ is_even(n)\n    return n % 2 == 0\n  end\n  \n  local function is_odd(n)\n \
    \   return n % 2 == 1\n  end\n  \n  local function is_between(x, y)\n    return\
    \ x >= y and x <= y\n  end\n  \n  local function is_in_range(n)\n    return is_even(n)\
    \ and is_between(n - 2, n)\n  end\n  \n  local function is_in_range_or_not(n)\n\
    \    return is_in_range(n) or is_odd(n)\n  end\n  \n  local function is_in_range_or_not_and_is_even(n)\n\
    \    return is_in_range_or_not(n) and is_even(n)\n  end\n  \n  local function\
    \ is_in_range_or_not_and_is_odd(n)\n    return is_in_range_or_not(n) and is_odd(n)\n\
    \  end\n  \n  local function is_in_range_or_not_and_is_in_range(n)\n    return\
    \ is_in_range_or_not(n) and is_between(n, n + 2)\n  end\n  \n  local function\
    \ is_in_range_or_not_and_is_in_range_or_not(n)\n    return is_in_range_or_not(n)\
    \ and is_in_range(n) or is_in_range(n + 1)\n  end\n  \n  local function is_in_range_or_not_and_is_in_range_or_not_and_is_even(n)\n\
    \    return is_in_range_or_not_and_is_in_range(n) and is_even(n)\n  end\n  \n\
    \  local function is_in_range_or_not_and_is_in_range_or_not_and_is_odd(n)\n  \
    \  return is_in_range_or_not_and_is_in_range(n) and is_odd(n)\n  end\n  \n  local\
    \ function is_in_range_or_not_and_is_in_range_or_not_and_is_in_range(n)\n    return\
    \ is_in_range_or_not_and_is_in_range(n) and is_between(n, n + 2)\n  end\n  \n\
    \  local function is_in_range_or_not_and_is_in_range_or_not_and_is_in_range_or_not(n)\n\
    \    return is_in_range_or_not_and_is_in_range(n) and is_in_range(n) or is_in_range(n\
    \ + 1)\n  end\n  \n  local function is_in_range_or_not_and_is_in_range_or_not_and_is_in_range_or_not_and_is_even(n)\n\
    \    return is_in_range_or_not_and_is_in_range_or_not(n) and is_even(n)\n  end\n\
    \  \n  local function is_in_range_or_not_and_is_in_range_or_not_and_is_in_range_or_not_and_is_odd(n)\n\
    \    return is_in_range_or_not_and_is_in_range_or_not(n) and is_odd(n)\n  end\n\
    \  \n  local function is_in_range_or_not_and_is_in_range_or_", "  if x < y then\n\
    \    x, y = y, x\n  end\n  local max_num = x\n  local min_num = y\n  while max_num\
    \ - min_num > 1 do\n    local mid = max_num + min_num / 2\n    if mid % 2 == 0\
    \ then\n      max_num = mid\n    else\n      min_num = mid\n    end\n  end\n \
    \ return max_num\nend", "  if x > y then\n    x, y = y, x\n  end\n  local result\
    \ = x\n  local i = 1\n  while i <= y do\n    if result % 2 == 0 then\n      result\
    \ = result / 2\n    else\n      result = result * 3 + 1\n    end\n    i = i +\
    \ 1\n  end\n  return result\nend", "   if x < y then\n      return choose_num(y,\
    \ x)\n   end\n   if x == y then\n      return x\n   end\n   if x % 2 == 0 then\n\
    \      return choose_num(x / 2, y)\n   end\n   if y % 2 == 0 then\n      return\
    \ choose_num(x, y / 2)\n   end\n   if x > y then\n      return choose_num(y, x)\n\
    \   end\n   return -1\nend", "   if x < y then\n      x, y = y, x\n   end\n  \
    \ local z = 0\n   for i = x, y + 1 do\n      z = z * 2 + i\n   end\n   return\
    \ z\nend", "   if x < y then\n      local m = x\n      x = y\n      y = m\n  \
    \ end\n   local m = x\n   local n = y\n   while m % 2 == 0 and n >= m do\n   \
    \   m = m / 2\n      n = n - 1\n   end\n   return n\nend", "    local max_num\
    \ = x\n    local min_num = y\n    local max_even = 1\n    local max_odd = 0\n\
    \    local max_even2 = 0\n    local max_odd2 = 0\n    local max_even3 = 0\n  \
    \  local max_odd3 = 0\n    local max_even4 = 0\n    local max_odd4 = 0\n    local\
    \ max_even5 = 0\n    local max_odd5 = 0\n    local max_even6 = 0\n    local max_odd6\
    \ = 0\n    local max_even7 = 0\n    local max_odd7 = 0\n    local max_even8 =\
    \ 0\n    local max_odd8 = 0\n    local max_even9 = 0\n    local max_odd9 = 0\n\
    \    local max_even10 = 0\n    local max_odd10 = 0\n    local max_even11 = 0\n\
    \    local max_odd11 = 0\n    local max_even12 = 0\n    local max_odd12 = 0\n\
    \    local max_even13 = 0\n    local max_odd13 = 0\n    local max_even14 = 0\n\
    \    local max_odd14 = 0\n    local max_even15 = 0\n    local max_odd15 = 0\n\
    \    local max_even16 = 0\n    local max_odd16 = 0\n    local max_even17 = 0\n\
    \    local max_odd17 = 0\n    local max_even18 = 0\n    local max_odd18 = 0\n\
    \    local max_even19 = 0\n    local max_odd19 = 0\n    local max_even20 = 0\n\
    \    local max_odd20 = 0\n    local max_even21 = 0\n    local max_odd21 = 0\n\
    \    local max_even22 = 0\n    local max_odd22 = 0\n    local max_even23 = 0\n\
    \    local max_odd23 = 0\n    local max_even24 = 0\n    local max_odd24 = 0\n\
    \    local max_even25 = 0\n    local max_odd25 = 0\n    local max_even26 = 0\n\
    \    local max_odd26 = 0\n    local max_even27 = 0\n    local max_odd27 = 0\n\
    \    local max_even28 = 0\n    local max_odd28 = 0\n    local max_even29 = 0\n\
    \    local max_odd29 = 0\n    local max_even30 = 0\n    local max_odd30 = 0\n\
    \    local max_even31 = 0\n    local max_odd31 = 0\n    local max_even32 = 0\n\
    \    local max_odd32 = 0\n    local max_even33 = 0\n    local max_odd33 = 0\n\
    \    local max_even34 = 0\n    local max_odd34 = 0\n    local max_even35 = 0\n\
    \    local max_odd35 = 0\n    local max_even36 = 0\n    local max_odd36", "  if\
    \ x < y then\n    x, y = y, x\n  end\n  local max_num = x\n  local max_num2 =\
    \ y\n  while max_num2 > 0 do\n    local num = max_num2 + 1\n    max_num2 = max_num\
    \ % max_num2\n    max_num = num\n  end\n  return max_num\nend", "  if x < y then\n\
    \    x, y = y, x\n  end\n  local max_num = x\n  local max_num2 = y\n  local i\
    \ = 1\n  while i <= max_num2 do\n    if max_num % 2 == 0 then\n      max_num =\
    \ max_num / 2\n    else\n      max_num = max_num * 3 + 1\n    end\n    i = i +\
    \ 1\n  end\n  if max_num == max_num2 then\n    return -1\n  end\n  return max_num\n\
    end", "    if x < y then\n        x, y = y, x\n    end\n    if x > y then\n  \
    \      x, y = y, x\n    end\n    for i = x, y + 1 do\n        if i % 2 == 0 then\n\
    \            return i\n        end\n    end\n    return -1\nend", "  local function\
    \ is_even(n)\n    return n % 2 == 0\n  end\n  local function is_odd(n)\n    return\
    \ n % 2 == 1\n  end\n  local function is_between(x, y)\n    return x >= y and\
    \ x <= y\n  end\n  local function is_in_range(n)\n    return is_even(n) and is_between(n\
    \ - 2, n)\n  end\n  local function is_in_range_or_none(n)\n    return is_in_range(n)\
    \ or n\n  end\n  local function is_in_range_or_none_and_odd(n)\n    return is_in_range_or_none(n)\
    \ and is_odd(n)\n  end\n  local function is_in_range_or_none_and_even(n)\n   \
    \ return is_in_range_or_none(n) and is_even(n)\n  end\n  local function is_in_range_or_none_and_odd_and_even(n)\n\
    \    return is_in_range_or_none(n) and is_odd(n) and is_even(n)\n  end\n  local\
    \ function is_in_range_or_none_and_odd_and_odd(n)\n    return is_in_range_or_none(n)\
    \ and is_odd(n) and is_odd(n)\n  end\n  local function is_in_range_or_none_and_odd_and_odd_and_even(n)\n\
    \    return is_in_range_or_none(n) and is_odd(n) and is_odd(n) and is_even(n)\n\
    \  end\n  local function is_in_range_or_none_and_odd_and_odd_and_odd(n)\n    return\
    \ is_in_range_or_none(n) and is_odd(n) and is_odd(n) and is_odd(n)\n  end\n  local\
    \ function is_in_range_or_none_and_odd_and_odd_and_odd_and_even(n)\n    return\
    \ is_in_range_or_none(n) and is_odd(n) and is_odd(n) and is_odd(n) and is_even(n)\n\
    \  end\n  local function is_in_range_or_none_and_odd_and_odd_and_odd_and_odd(n)\n\
    \    return is_in_range_or_none(n) and is_odd(n) and is_odd(n) and is_odd(n) and\
    \ is_odd(n)\n  end\n  local function is_in_range_or_none_and_odd_and_odd_and_odd_and_odd_and_even(n)\n\
    \    return is_in_range_or_none(n) and is_odd(n) and is_odd(n) and is_odd(n) and\
    \ is_odd(n) and is_even(n)\n  end\n  local function is_in_range_or_none_and_odd_and_odd_and_odd_and_odd_and_odd_and_even(n)\n\
    \    return is_in_range_or_none(n) and is_odd(n) and is_odd(n) and is_odd(n) and\
    \ is_odd(n) and is_", "    if x < y then\n        x, y = y, x\n    end\n    if\
    \ x > y then\n        x, y = y, x\n    end\n    if x == y then\n        return\
    \ x\n    end\n    if x % 2 == 0 then\n        return choose_num(x / 2, y)\n  \
    \  end\n    if y % 2 == 0 then\n        return choose_num(x, y / 2)\n    end\n\
    \    return -1\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

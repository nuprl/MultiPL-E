name: HumanEval_134_check_if_last_char_is_a_letter
language: lua
prompt: "-- Create a function that returns True if the last character\n-- of a given\
  \ string is an alphabetical character and is not\n-- a part of a word, and False\
  \ otherwise.\n-- Note: \"word\" is a group of characters separated by space.\n--\
  \ Examples:\n-- >>> check_if_last_char_is_a_letter('apple pie')\n-- false\n-- >>>\
  \ check_if_last_char_is_a_letter('apple pi e')\n-- true\n-- >>> check_if_last_char_is_a_letter('apple\
  \ pi e ')\n-- false\n-- >>> check_if_last_char_is_a_letter('')\n-- false\nlocal\
  \ function check_if_last_char_is_a_letter(txt)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = check_if_last_char_is_a_letter\n\
  \    lu.assertEquals(candidate('apple'), false)\n    lu.assertEquals(candidate('apple\
  \ pi e'), true)\n    lu.assertEquals(candidate('eeeee'), false)\n    lu.assertEquals(candidate('A'),\
  \ true)\n    lu.assertEquals(candidate('Pumpkin pie '), false)\n    lu.assertEquals(candidate('Pumpkin\
  \ pie 1'), false)\n    lu.assertEquals(candidate(''), false)\n    lu.assertEquals(candidate('eeeee\
  \ e '), false)\n    lu.assertEquals(candidate('apple pie'), false)\n    lu.assertEquals(candidate('apple\
  \ pi e '), false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local last_char = txt:sub((#txt), 1)\n  local is_letter = last_char:match('^[%a%A]+$')\n\
    \  return not is_letter\nend", "  local last_char = txt:sub(1,#txt)\n  return\
    \ last_char == ' ' or last_char == '.' or last_char == ',' or last_char == '?'\
    \ or last_char == '!' or last_char == '-' or last_char == '_' or last_char ==\
    \ '/' or last_char == '(' or last_char == ')' or last_char == '[' or last_char\
    \ == ']' or last_char == '{' or last_char == '}' or last_char == '\\\\' or last_char\
    \ == '^' or last_char == '~' or last_char == '`' or last_char == '!' or last_char\
    \ == '$' or last_char == '%' or last_char == '&' or last_char == '*' or last_char\
    \ == '(' or last_char == ')' or last_char == '+' or last_char == ',' or last_char\
    \ == '-' or last_char == '.' or last_char == '/' or last_char == '0' or last_char\
    \ == '1' or last_char == '2' or last_char == '3' or last_char == '4' or last_char\
    \ == '5' or last_char == '6' or last_char == '7' or last_char == '8' or last_char\
    \ == '9' or last_char == ':' or last_char == ';' or last_char == '<' or last_char\
    \ == '=' or last_char == '>' or last_char == '?' or last_char == '@' or last_char\
    \ == '[' or last_char == ']' or last_char == '^' or last_char == '_' or last_char\
    \ == '`' or last_char == '{' or last_char == '}' or last_char == '~' or last_char\
    \ == '+' or last_char == '-' or last_char == '.' or last_char == '/' or last_char\
    \ == '[' or last_char == ']' or last_char == '%' or last_char == '&' or last_char\
    \ == '*' or last_char == '(' or last_char == ')' or last_char == '+' or last_char\
    \ == ',' or last_char == '-' or last_char == '.' or last_char == '/' or last_char\
    \ == '0' or last_char == '1' or last_char == '2' or last_char == '3' or last_char\
    \ == '4' or last_char == '5' or last_char == '6' or last_char == '7' or last_char\
    \ == '8' or last_char == '9' or last_char == ':' or last_char == ';' or last_char\
    \ == '<' or last_char == '=' or last_char == '>' or last_char == '?' or last_char\
    \ == '@' or last_char == '[' or last_char == ']' or last_char == '^' or last_char\
    \ == '_' or last_char == '`' or last_char == '{' or last_char == '}' or last_char\
    \ == '~' or last_char == '+' or last_char == '-' or last_char == '.' or last_char\
    \ == '/", "  local last_char = txt:sub(1, #txt)\n  return last_char:match('^[%w-]+$')\n\
    end", "  return string.sub(txt, -1, 1) ~= ' ' and string.sub(txt, -1, 1) ~= '-'\
    \ and string.sub(txt, -1, 1) ~= '_'\nend", "  local last_char = txt:sub(1, #txt)\n\
    \  return last_char:match('^[%w]$')\nend", "  return string.sub(txt, -1, string.len(txt))\
    \ == ' ' and string.sub(txt, -1, string.len(txt)) == ' ' and\n    string.sub(txt,\
    \ -1, string.len(txt)) == ' ' and\n    string.sub(txt, -1, string.len(txt)) ==\
    \ ' ' and\n    string.sub(txt, -1, string.len(txt)) == ' ' and\n    string.sub(txt,\
    \ -1, string.len(txt)) == ' ' and\n    string.sub(txt, -1, string.len(txt)) ==\
    \ ' ' and\n    string.sub(txt, -1, string.len(txt)) == ' ' and\n    string.sub(txt,\
    \ -1, string.len(txt)) == ' ' and\n    string.sub(txt, -1, string.len(txt)) ==\
    \ ' ' and\n    string.sub(txt, -1, string.len(txt)) == ' ' and\n    string.sub(txt,\
    \ -1, string.len(txt)) == ' ' and\n    string.sub(txt, -1, string.len(txt)) ==\
    \ ' ' and\n    string.sub(txt, -1, string.len(txt)) == ' ' and\n    string.sub(txt,\
    \ -1, string.len(txt)) == ' ' and\n    string.sub(txt, -1, string.len(txt)) ==\
    \ ' ' and\n    string.sub(txt, -1, string.len(txt)) == ' ' and\n    string.sub(txt,\
    \ -1, string.len(txt)) == ' ' and\n    string.sub(txt, -1, string.len(txt)) ==\
    \ ' ' and\n    string.sub(txt, -1, string.len(txt)) == ' ' and\n    string.sub(txt,\
    \ -1, string.len(txt)) == ' ' and\n    string.sub(txt, -1, string.len(txt)) ==\
    \ ' ' and\n    string.sub(txt, -1, string.len(txt)) == ' ' and\n    string.sub(txt,\
    \ -1, string.len(txt)) == ' ' and\n    string.sub(txt, -1, string.len(txt)) ==\
    \ ' ' and\n    string.sub(txt, -1, string.len(txt)) == ' ' and\n    string.sub(txt,\
    \ -1, string.len(txt)) == ' ' and\n    string.sub(txt, -1, string.len(txt)) ==\
    \ ' ' and\n    string.sub(txt, -1, string.len(txt)) == ' ' and\n    string.sub(txt,\
    \ -1, string.len(txt)) == ' ' and\n    string.sub(txt, -1, string.len(txt)) ==\
    \ ' ' and\n    string.sub(txt, -1, string.len(txt)) == ' ' and\n    string.sub(txt,\
    \ -1, string.len(txt)) == ' ' and\n    string.sub(txt, -1, string.len(txt)) ==\
    \ ' ' and\n    string.sub(txt, ", "  local last_char = string.sub(txt, -1)\n \
    \ local last_char_lower = string.lower(last_char)\n  local last_char_upper = string.upper(last_char)\n\
    \  local last_char_not_a_word = last_char_lower == 'a' or last_char_lower == 'e'\
    \ or last_char_lower == 'i' or last_char_lower == 'o' or last_char_lower == 'u'\n\
    \  local last_char_not_a_word_or_space = last_char_upper == 'A' or last_char_upper\
    \ == 'E' or last_char_upper == 'I' or last_char_upper == 'O' or last_char_upper\
    \ == 'U'\n  return last_char_not_a_word or last_char_not_a_word_or_space\nend",
  "    local last_char = txt:sub(1, #txt)\n    return last_char:match('^[%a%p]+$')\
    \ ~= nil\nend", "  local last_char = txt:sub(1, #txt)\n  local last_char_lower\
    \ = last_char:lower()\n  local last_char_upper = last_char:upper()\n  local last_char_lower\
    \ = last_char_lower:gsub('%w+', '')\n  local last_char_upper = last_char_upper:gsub('%w+',\
    \ '')\n  local last_char_lower = last_char_lower:gsub('%w+', '')\n  local last_char_upper\
    \ = last_char_upper:gsub('%w+', '')\n  local last_char_lower = last_char_lower:gsub('%w+',\
    \ '')\n  local last_char_upper = last_char_upper:gsub('%w+', '')\n  local last_char_lower\
    \ = last_char_lower:gsub('%w+', '')\n  local last_char_upper = last_char_upper:gsub('%w+',\
    \ '')\n  local last_char_lower = last_char_lower:gsub('%w+', '')\n  local last_char_upper\
    \ = last_char_upper:gsub('%w+', '')\n  local last_char_lower = last_char_lower:gsub('%w+',\
    \ '')\n  local last_char_upper = last_char_upper:gsub('%w+', '')\n  local last_char_lower\
    \ = last_char_lower:gsub('%w+', '')\n  local last_char_upper = last_char_upper:gsub('%w+',\
    \ '')\n  local last_char_lower = last_char_lower:gsub('%w+', '')\n  local last_char_upper\
    \ = last_char_upper:gsub('%w+', '')\n  local last_char_lower = last_char_lower:gsub('%w+',\
    \ '')\n  local last_char_upper = last_char_upper:gsub('%w+', '')\n  local last_char_lower\
    \ = last_char_lower:gsub('%w+', '')\n  local last_char_upper = last_char_upper:gsub('%w+',\
    \ '')\n  local last_char_lower = last_char_lower:gsub('%w+', '')\n  local last_char_upper\
    \ = last_char_upper:gsub('%w+', '')\n  local last_char_lower = last_char_lower:gsub('%w+',\
    \ '')\n  local last_char_upper = last_char_upper:gsub('%w+', '')\n  local last_char_lower\
    \ = last_char_lower:gsub('%w+', '')\n  local last_char_upper = last_char_upper:gsub('%w+',\
    \ '')\n  local last_char_lower = last_char_lower:gsub('%w+', '')\n  local last_char_upper\
    \ = last_char_upper:gsub('%w+', '')\n  local ", "  local last_char = txt:sub((#txt),\
    \ 1)\n  local is_letter = last_char:match('^[%w]$')\n  return not is_letter\n\
    end", "    local last_char = string.sub(txt, -1)\n    local last_char_lower =\
    \ string.lower(last_char)\n    local last_char_upper = string.upper(last_char)\n\
    \    local last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_", "  local last_char = txt:sub((#txt),\
    \ 1)\n  return last_char == ' ' or last_char == '.' or last_char == ',' or last_char\
    \ == '?' or last_char == '!' or last_char == '-' or last_char == '_' or last_char\
    \ == '%' or last_char == '&' or last_char == '(' or last_char == ')' or last_char\
    \ == '[' or last_char == ']' or last_char == '{' or last_char == '}' or last_char\
    \ == '\\\\' or last_char == '^' or last_char == '~' or last_char == '`' or last_char\
    \ == '<' or last_char == '>' or last_char == '|' or last_char == '~' or last_char\
    \ == '`' or last_char == '<' or last_char == '>' or last_char == '|' or last_char\
    \ == '~' or last_char == '`' or last_char == '<' or last_char == '>' or last_char\
    \ == '|' or last_char == '~' or last_char == '`' or last_char == '<' or last_char\
    \ == '>' or last_char == '|' or last_char == '~' or last_char == '`' or last_char\
    \ == '<' or last_char == '>' or last_char == '|' or last_char == '~' or last_char\
    \ == '`' or last_char == '<' or last_char == '>' or last_char == '|' or last_char\
    \ == '~' or last_char == '`' or last_char == '<' or last_char == '>' or last_char\
    \ == '|' or last_char == '~' or last_char == '`' or last_char == '<' or last_char\
    \ == '>' or last_char == '|' or last_char == '~' or last_char == '`' or last_char\
    \ == '<' or last_char == '>' or last_char == '|' or last_char == '~' or last_char\
    \ == '`' or last_char == '<' or last_char == '>' or last_char == '|' or last_char\
    \ == '~' or last_char == '`' or last_char == '<' or last_char == '>' or last_char\
    \ == '|' or last_char == '~' or last_char == '`' or last_char == '<' or last_char\
    \ == '>' or last_char == '|' or last_char == '~' or last_char == '`' or last_char\
    \ == '<' or last_char == '>' or last_char == '|' or last_char == '~' or last_char\
    \ == '`' or last_char == '<' or last_char == '>' or last_char == '|' or last_char\
    \ == '~' or last_char == '`' or last_char == '<' or last_char == '>' or last_char\
    \ == '|' or last_char == '~' or last_char == '`' or last_char == '<' or last_char\
    \ == '>' or last_char == '|' or last_char == '~' or last_char == '`' or last_char\
    \ == '<", "   if txt == '' then\n      return false\n   end\n   local last_char\
    \ = txt:sub(1, #txt)\n   if last_char == '' then\n      return false\n   end\n\
    \   if last_char:sub(1, 1) == 'a' or last_char:sub(1, 1) == 'e' or last_char:sub(1,\
    \ 1) == 'i' or last_char:sub(1, 1) == 'o' or last_char:sub(1, 1) == 'u' then\n\
    \      return false\n   end\n   return true\nend", "    local last_char = string.sub(txt,\
    \ -1)\n    local last_char_lower = string.lower(last_char)\n    local last_char_upper\
    \ = string.upper(last_char)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_", "  local last_char = string.sub(txt, -1)\n  local is_letter = string.sub(txt,\
    \ 1, 1) == 'a'\n  return not is_letter and last_char ~= 'w'\nend", "  local last_char\
    \ = string.sub(txt, -1)\n  return last_char == ' ' or last_char == '.' or last_char\
    \ == '-' or last_char == '_' or last_char == '/' or last_char == '\\\\' or last_char\
    \ == '^' or last_char == '~' or last_char == '!' or last_char == '@' or last_char\
    \ == '%' or last_char == '$' or last_char == '&' or last_char == '*' or last_char\
    \ == '(' or last_char == ')' or last_char == '+' or last_char == ',' or last_char\
    \ == ':' or last_char == '-' or last_char == '.' or last_char == '/' or last_char\
    \ == '\\\\' or last_char == '^' or last_char == '~' or last_char == '!' or last_char\
    \ == '@' or last_char == '%' or last_char == '$' or last_char == '&' or last_char\
    \ == '*' or last_char == '(' or last_char == ')' or last_char == '+' or last_char\
    \ == ',' or last_char == ':' or last_char == '-' or last_char == '.' or last_char\
    \ == '/' or last_char == '\\\\' or last_char == '^' or last_char == '~' or last_char\
    \ == '!' or last_char == '@' or last_char == '%' or last_char == '$' or last_char\
    \ == '&' or last_char == '*' or last_char == '(' or last_char == ')' or last_char\
    \ == '+' or last_char == ',' or last_char == ':' or last_char == '-' or last_char\
    \ == '.' or last_char == '/' or last_char == '\\\\' or last_char == '^' or last_char\
    \ == '~' or last_char == '!' or last_char == '@' or last_char == '%' or last_char\
    \ == '$' or last_char == '&' or last_char == '*' or last_char == '(' or last_char\
    \ == ')' or last_char == '+' or last_char == ',' or last_char == ':' or last_char\
    \ == '-' or last_char == '.' or last_char == '/' or last_char == '\\\\' or last_char\
    \ == '^' or last_char == '~' or last_char == '!' or last_char == '@' or last_char\
    \ == '%' or last_char == '$' or last_char == '&' or last_char == '*' or last_char\
    \ == '(' or last_char == ')' or last_char == '+' or last_char == ',' or last_char\
    \ == ':' or last_char == '-' or last_char == '.' or last_char == '/' or last_char\
    \ == '\\\\' or last_char == '^' or last_char == '~' or last_char == '!' or last_char\
    \ == '@' or last_char == '%' or last_char == '$' or last_char == '&' or last_char\
    \ == '*' or last_char == '(' or last_", "  -- Check for empty string.\n  if txt\
    \ == '' then\n    return false\n  end", "  local last_char = txt:sub(1, #txt)\n\
    \  return last_char:match('^[%w]$')\nend", "  return txt:sub((#txt), 1):match('[a-zA-Z]')\n\
    end", "  -- Check for empty string\n  if txt == '' then return false end\n  --\
    \ Check for non-alphabetical character\n  if txt:sub(1, 1) ~= string.char(string.byte('a','z','A','Z'))\
    \ then return false end\n  -- Check for word boundary\n  if string.find(txt, '\
    \ ') ~= nil then return false end\n  return true\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

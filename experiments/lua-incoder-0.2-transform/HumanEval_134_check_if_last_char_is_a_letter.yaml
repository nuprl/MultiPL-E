name: HumanEval_134_check_if_last_char_is_a_letter
language: lua
prompt: "-- Create a function that returns True if the last character\n-- of a given\
  \ string is an alphabetical character and is not\n-- a part of a word, and False\
  \ otherwise.\n-- Note: \"word\" is a group of characters separated by space.\n--\
  \ Examples:\n-- >>> check_if_last_char_is_a_letter('apple pie')\n-- false\n-- >>>\
  \ check_if_last_char_is_a_letter('apple pi e')\n-- true\n-- >>> check_if_last_char_is_a_letter('apple\
  \ pi e ')\n-- false\n-- >>> check_if_last_char_is_a_letter('')\n-- false\nlocal\
  \ function check_if_last_char_is_a_letter(txt)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = check_if_last_char_is_a_letter\n\
  \    lu.assertEquals(candidate('apple'), false)\n    lu.assertEquals(candidate('apple\
  \ pi e'), true)\n    lu.assertEquals(candidate('eeeee'), false)\n    lu.assertEquals(candidate('A'),\
  \ true)\n    lu.assertEquals(candidate('Pumpkin pie '), false)\n    lu.assertEquals(candidate('Pumpkin\
  \ pie 1'), false)\n    lu.assertEquals(candidate(''), false)\n    lu.assertEquals(candidate('eeeee\
  \ e '), false)\n    lu.assertEquals(candidate('apple pie'), false)\n    lu.assertEquals(candidate('apple\
  \ pi e '), false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local last_char = txt:sub((#txt), 1)\n  local is_letter = last_char:match('^[%a%A]+$')\n\
    \  return not is_letter\nend", "  local last_char = txt:sub(1,#txt)\n  return\
    \ last_char == ' ' or last_char == '.' or last_char == ',' or last_char == '?'\
    \ or last_char == '!' or last_char == '-' or last_char == '_' or last_char ==\
    \ '/' or last_char == '(' or last_char == ')' or last_char == '[' or last_char\
    \ == ']' or last_char == '{' or last_char == '}' or last_char == '\\\\' or last_char\
    \ == '^' or last_char == '~' or last_char == '`' or last_char == '!' or last_char\
    \ == '$' or last_char == '%' or last_char == '&' or last_char == '*' or last_char\
    \ == '(' or last_char == ')' or last_char == '+' or last_char == ',' or last_char\
    \ == '-' or last_char == '.' or last_char == '/' or last_char == '0' or last_char\
    \ == '1' or last_char == '2' or last_char == '3' or last_char == '4' or last_char\
    \ == '5' or last_char == '6' or last_char == '7' or last_char == '8' or last_char\
    \ == '9' or last_char == ':' or last_char == ';' or last_char == '<' or last_char\
    \ == '=' or last_char == '>' or last_char == '?' or last_char == '@' or last_char\
    \ == '[' or last_char == ']' or last_char == '^' or last_char == '_' or last_char\
    \ == '`' or last_char == '{' or last_char == '}' or last_char == '~' or last_char\
    \ == '+' or last_char == '-' or last_char == '.' or last_char == '/' or last_char\
    \ == '[' or last_char == ']' or last_char == '%' or last_char == '&' or last_char\
    \ == '*' or last_char == '(' or last_char == ')' or last_char == '+' or last_char\
    \ == ',' or last_char == '-' or last_char == '.' or last_char == '/' or last_char\
    \ == '0' or last_char == '1' or last_char == '2' or last_char == '3' or last_char\
    \ == '4' or last_char == '5' or last_char == '6' or last_char == '7' or last_char\
    \ == '8' or last_char == '9' or last_char == ':' or last_char == ';' or last_char\
    \ == '<' or last_char == '=' or last_char == '>' or last_char == '?' or last_char\
    \ == '@' or last_char == '[' or last_char == ']' or last_char == '^' or last_char\
    \ == '_' or last_char == '`' or last_char == '{' or last_char == '}' or last_char\
    \ == '~' or last_char == '+' or last_char == '-' or last_char == '.' or last_char\
    \ == '/", "  local last_char = txt:sub(1, #txt)\n  return last_char:match('^[%w-]+$')\n\
    end", "  return string.sub(txt, -1, 1) ~= ' ' and string.sub(txt, -1, 1) ~= '-'\
    \ and string.sub(txt, -1, 1) ~= '_'\nend", "  local last_char = txt:sub(1, #txt)\n\
    \  return last_char:match('^[%w]$')\nend", "  return string.sub(txt, -1, string.len(txt))\
    \ == ' ' and string.sub(txt, -1, string.len(txt)) == ' ' and\n    string.sub(txt,\
    \ -1, string.len(txt)) == ' ' and\n    string.sub(txt, -1, string.len(txt)) ==\
    \ ' ' and\n    string.sub(txt, -1, string.len(txt)) == ' ' and\n    string.sub(txt,\
    \ -1, string.len(txt)) == ' ' and\n    string.sub(txt, -1, string.len(txt)) ==\
    \ ' ' and\n    string.sub(txt, -1, string.len(txt)) == ' ' and\n    string.sub(txt,\
    \ -1, string.len(txt)) == ' ' and\n    string.sub(txt, -1, string.len(txt)) ==\
    \ ' ' and\n    string.sub(txt, -1, string.len(txt)) == ' ' and\n    string.sub(txt,\
    \ -1, string.len(txt)) == ' ' and\n    string.sub(txt, -1, string.len(txt)) ==\
    \ ' ' and\n    string.sub(txt, -1, string.len(txt)) == ' ' and\n    string.sub(txt,\
    \ -1, string.len(txt)) == ' ' and\n    string.sub(txt, -1, string.len(txt)) ==\
    \ ' ' and\n    string.sub(txt, -1, string.len(txt)) == ' ' and\n    string.sub(txt,\
    \ -1, string.len(txt)) == ' ' and\n    string.sub(txt, -1, string.len(txt)) ==\
    \ ' ' and\n    string.sub(txt, -1, string.len(txt)) == ' ' and\n    string.sub(txt,\
    \ -1, string.len(txt)) == ' ' and\n    string.sub(txt, -1, string.len(txt)) ==\
    \ ' ' and\n    string.sub(txt, -1, string.len(txt)) == ' ' and\n    string.sub(txt,\
    \ -1, string.len(txt)) == ' ' and\n    string.sub(txt, -1, string.len(txt)) ==\
    \ ' ' and\n    string.sub(txt, -1, string.len(txt)) == ' ' and\n    string.sub(txt,\
    \ -1, string.len(txt)) == ' ' and\n    string.sub(txt, -1, string.len(txt)) ==\
    \ ' ' and\n    string.sub(txt, -1, string.len(txt)) == ' ' and\n    string.sub(txt,\
    \ -1, string.len(txt)) == ' ' and\n    string.sub(txt, -1, string.len(txt)) ==\
    \ ' ' and\n    string.sub(txt, -1, string.len(txt)) == ' ' and\n    string.sub(txt,\
    \ -1, string.len(txt)) == ' ' and\n    string.sub(txt, -1, string.len(txt)) ==\
    \ ' ' and\n    string.sub(txt, ", "  local last_char = string.sub(txt, -1)\n \
    \ local last_char_lower = string.lower(last_char)\n  local last_char_upper = string.upper(last_char)\n\
    \  local last_char_not_a_word = last_char_lower == 'a' or last_char_lower == 'e'\
    \ or last_char_lower == 'i' or last_char_lower == 'o' or last_char_lower == 'u'\n\
    \  local last_char_not_a_word_or_space = last_char_upper == 'A' or last_char_upper\
    \ == 'E' or last_char_upper == 'I' or last_char_upper == 'O' or last_char_upper\
    \ == 'U'\n  return last_char_not_a_word or last_char_not_a_word_or_space\nend",
  "    local last_char = txt:sub(1, #txt)\n    return last_char:match('^[%a%p]+$')\
    \ ~= nil\nend", "  local last_char = txt:sub(1, #txt)\n  local last_char_lower\
    \ = last_char:lower()\n  local last_char_upper = last_char:upper()\n  local last_char_lower\
    \ = last_char_lower:gsub('%w+', '')\n  local last_char_upper = last_char_upper:gsub('%w+',\
    \ '')\n  local last_char_lower = last_char_lower:gsub('%w+', '')\n  local last_char_upper\
    \ = last_char_upper:gsub('%w+', '')\n  local last_char_lower = last_char_lower:gsub('%w+',\
    \ '')\n  local last_char_upper = last_char_upper:gsub('%w+', '')\n  local last_char_lower\
    \ = last_char_lower:gsub('%w+', '')\n  local last_char_upper = last_char_upper:gsub('%w+',\
    \ '')\n  local last_char_lower = last_char_lower:gsub('%w+', '')\n  local last_char_upper\
    \ = last_char_upper:gsub('%w+', '')\n  local last_char_lower = last_char_lower:gsub('%w+',\
    \ '')\n  local last_char_upper = last_char_upper:gsub('%w+', '')\n  local last_char_lower\
    \ = last_char_lower:gsub('%w+', '')\n  local last_char_upper = last_char_upper:gsub('%w+',\
    \ '')\n  local last_char_lower = last_char_lower:gsub('%w+', '')\n  local last_char_upper\
    \ = last_char_upper:gsub('%w+', '')\n  local last_char_lower = last_char_lower:gsub('%w+',\
    \ '')\n  local last_char_upper = last_char_upper:gsub('%w+', '')\n  local last_char_lower\
    \ = last_char_lower:gsub('%w+', '')\n  local last_char_upper = last_char_upper:gsub('%w+',\
    \ '')\n  local last_char_lower = last_char_lower:gsub('%w+', '')\n  local last_char_upper\
    \ = last_char_upper:gsub('%w+', '')\n  local last_char_lower = last_char_lower:gsub('%w+',\
    \ '')\n  local last_char_upper = last_char_upper:gsub('%w+', '')\n  local last_char_lower\
    \ = last_char_lower:gsub('%w+', '')\n  local last_char_upper = last_char_upper:gsub('%w+',\
    \ '')\n  local last_char_lower = last_char_lower:gsub('%w+', '')\n  local last_char_upper\
    \ = last_char_upper:gsub('%w+', '')\n  local ", "  local last_char = txt:sub((#txt),\
    \ 1)\n  local is_letter = last_char:match('^[%w]$')\n  return not is_letter\n\
    end", "    local last_char = string.sub(txt, -1)\n    local last_char_lower =\
    \ string.lower(last_char)\n    local last_char_upper = string.upper(last_char)\n\
    \    local last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_", "  local last_char = txt:sub((#txt),\
    \ 1)\n  return last_char == ' ' or last_char == '.' or last_char == ',' or last_char\
    \ == '?' or last_char == '!' or last_char == '-' or last_char == '_' or last_char\
    \ == '%' or last_char == '&' or last_char == '(' or last_char == ')' or last_char\
    \ == '[' or last_char == ']' or last_char == '{' or last_char == '}' or last_char\
    \ == '\\\\' or last_char == '^' or last_char == '~' or last_char == '`' or last_char\
    \ == '<' or last_char == '>' or last_char == '|' or last_char == '~' or last_char\
    \ == '`' or last_char == '<' or last_char == '>' or last_char == '|' or last_char\
    \ == '~' or last_char == '`' or last_char == '<' or last_char == '>' or last_char\
    \ == '|' or last_char == '~' or last_char == '`' or last_char == '<' or last_char\
    \ == '>' or last_char == '|' or last_char == '~' or last_char == '`' or last_char\
    \ == '<' or last_char == '>' or last_char == '|' or last_char == '~' or last_char\
    \ == '`' or last_char == '<' or last_char == '>' or last_char == '|' or last_char\
    \ == '~' or last_char == '`' or last_char == '<' or last_char == '>' or last_char\
    \ == '|' or last_char == '~' or last_char == '`' or last_char == '<' or last_char\
    \ == '>' or last_char == '|' or last_char == '~' or last_char == '`' or last_char\
    \ == '<' or last_char == '>' or last_char == '|' or last_char == '~' or last_char\
    \ == '`' or last_char == '<' or last_char == '>' or last_char == '|' or last_char\
    \ == '~' or last_char == '`' or last_char == '<' or last_char == '>' or last_char\
    \ == '|' or last_char == '~' or last_char == '`' or last_char == '<' or last_char\
    \ == '>' or last_char == '|' or last_char == '~' or last_char == '`' or last_char\
    \ == '<' or last_char == '>' or last_char == '|' or last_char == '~' or last_char\
    \ == '`' or last_char == '<' or last_char == '>' or last_char == '|' or last_char\
    \ == '~' or last_char == '`' or last_char == '<' or last_char == '>' or last_char\
    \ == '|' or last_char == '~' or last_char == '`' or last_char == '<' or last_char\
    \ == '>' or last_char == '|' or last_char == '~' or last_char == '`' or last_char\
    \ == '<", "   if txt == '' then\n      return false\n   end\n   local last_char\
    \ = txt:sub(1, #txt)\n   if last_char == '' then\n      return false\n   end\n\
    \   if last_char:sub(1, 1) == 'a' or last_char:sub(1, 1) == 'e' or last_char:sub(1,\
    \ 1) == 'i' or last_char:sub(1, 1) == 'o' or last_char:sub(1, 1) == 'u' then\n\
    \      return false\n   end\n   return true\nend", "    local last_char = string.sub(txt,\
    \ -1)\n    local last_char_lower = string.lower(last_char)\n    local last_char_upper\
    \ = string.upper(last_char)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_char_lower = string.sub(last_char_lower, -1)\n    local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n    local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n    local last_char_upper = string.sub(last_char_upper, -1)\n    local\
    \ last_", "  local last_char = string.sub(txt, -1)\n  local is_letter = string.sub(txt,\
    \ 1, 1) == 'a'\n  return not is_letter and last_char ~= 'w'\nend", "  local last_char\
    \ = string.sub(txt, -1)\n  return last_char == ' ' or last_char == '.' or last_char\
    \ == '-' or last_char == '_' or last_char == '/' or last_char == '\\\\' or last_char\
    \ == '^' or last_char == '~' or last_char == '!' or last_char == '@' or last_char\
    \ == '%' or last_char == '$' or last_char == '&' or last_char == '*' or last_char\
    \ == '(' or last_char == ')' or last_char == '+' or last_char == ',' or last_char\
    \ == ':' or last_char == '-' or last_char == '.' or last_char == '/' or last_char\
    \ == '\\\\' or last_char == '^' or last_char == '~' or last_char == '!' or last_char\
    \ == '@' or last_char == '%' or last_char == '$' or last_char == '&' or last_char\
    \ == '*' or last_char == '(' or last_char == ')' or last_char == '+' or last_char\
    \ == ',' or last_char == ':' or last_char == '-' or last_char == '.' or last_char\
    \ == '/' or last_char == '\\\\' or last_char == '^' or last_char == '~' or last_char\
    \ == '!' or last_char == '@' or last_char == '%' or last_char == '$' or last_char\
    \ == '&' or last_char == '*' or last_char == '(' or last_char == ')' or last_char\
    \ == '+' or last_char == ',' or last_char == ':' or last_char == '-' or last_char\
    \ == '.' or last_char == '/' or last_char == '\\\\' or last_char == '^' or last_char\
    \ == '~' or last_char == '!' or last_char == '@' or last_char == '%' or last_char\
    \ == '$' or last_char == '&' or last_char == '*' or last_char == '(' or last_char\
    \ == ')' or last_char == '+' or last_char == ',' or last_char == ':' or last_char\
    \ == '-' or last_char == '.' or last_char == '/' or last_char == '\\\\' or last_char\
    \ == '^' or last_char == '~' or last_char == '!' or last_char == '@' or last_char\
    \ == '%' or last_char == '$' or last_char == '&' or last_char == '*' or last_char\
    \ == '(' or last_char == ')' or last_char == '+' or last_char == ',' or last_char\
    \ == ':' or last_char == '-' or last_char == '.' or last_char == '/' or last_char\
    \ == '\\\\' or last_char == '^' or last_char == '~' or last_char == '!' or last_char\
    \ == '@' or last_char == '%' or last_char == '$' or last_char == '&' or last_char\
    \ == '*' or last_char == '(' or last_", "  -- Check for empty string.\n  if txt\
    \ == '' then\n    return false\n  end", "  local last_char = txt:sub(1, #txt)\n\
    \  return last_char:match('^[%w]$')\nend", "  return txt:sub((#txt), 1):match('[a-zA-Z]')\n\
    end", "  -- Check for empty string\n  if txt == '' then return false end\n  --\
    \ Check for non-alphabetical character\n  if txt:sub(1, 1) ~= string.char(string.byte('a','z','A','Z'))\
    \ then return false end\n  -- Check for word boundary\n  if string.find(txt, '\
    \ ') ~= nil then return false end\n  return true\nend", "  local last_char = string.sub(txt,\
    \ -1)\n  local last_char_lower = string.lower(last_char)\n  local last_char_upper\
    \ = string.upper(last_char)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_", "   -- Check for empty string.\n   if txt == '' then\n\
    \      return false\n   end", "  local last_char = txt:sub(1, #txt)\n  return\
    \ last_char == ' ' or last_char == '.' or last_char == ',' or last_char == '?'\
    \ or last_char == '!' or last_char == ';' or last_char == '-' or last_char ==\
    \ '_' or last_char == '~' or last_char == '!' or last_char == '@' or last_char\
    \ == '$' or last_char == '%' or last_char == '^' or last_char == '&' or last_char\
    \ == '*' or last_char == '(' or last_char == ')' or last_char == '[' or last_char\
    \ == ']' or last_char == '{' or last_char == '}' or last_char == '\\\\' or last_char\
    \ == '|' or last_char == '<' or last_char == '>' or last_char == '\"' or last_char\
    \ == '\\'' or last_char == '{' or last_char == '}' or last_char == '[' or last_char\
    \ == ']' or last_char == '<' or last_char == '>' or last_char == '{' or last_char\
    \ == '}' or last_char == '(' or last_char == ')' or last_char == '[' or last_char\
    \ == ']' or last_char == '<' or last_char == '>' or last_char == '\"' or last_char\
    \ == '\\'' or last_char == ';' or last_char == '-' or last_char == '_' or last_char\
    \ == '~' or last_char == '!' or last_char == '@' or last_char == '$' or last_char\
    \ == '%' or last_char == '^' or last_char == '&' or last_char == '*' or last_char\
    \ == '(' or last_char == ')' or last_char == '[' or last_char == ']' or last_char\
    \ == '{' or last_char == '}' or last_char == '\\\\' or last_char == '|' or last_char\
    \ == '<' or last_char == '>' or last_char == '\"' or last_char == '\\'' or last_char\
    \ == ';' or last_char == '-' or last_char == '_' or last_char == '~' or last_char\
    \ == '!' or last_char == '@' or last_char == '$' or last_char == '%' or last_char\
    \ == '^' or last_char == '&' or last_char == '*' or last_char == '(' or last_char\
    \ == ')' or last_char == '[' or last_char == ']' or last_char == '<' or last_char\
    \ == '>' or last_char == '\"' or last_char == '\\'' or last_char == ';' or last_char\
    \ == '-' or last_char == '_' or last_char == '~' or last_char == '!' or last_char\
    \ == '@' or last_char == '$' or last_char == '%' or last_char == '^' or last_char\
    \ == '&' or last_char == '*' or last_char == '(' or last_char == ')' or last_char\
    \ == '['", "  return string.sub(txt, -1, 1) ~= ' ' and string.sub(txt, -1, 1)\
    \ ~= '-' and string.sub(txt, -1, 1) ~= '_'\nend", "   local last_char = txt:sub(1,1)\n\
    \   return last_char ~= ' ' and last_char ~= '-' and last_char ~= '_' and last_char\
    \ ~= '.' and last_char ~= '!' and last_char ~= '?' and last_char ~= '$' and last_char\
    \ ~= '&' and last_char ~= '(' and last_char ~= ')' and last_char ~= '[' and last_char\
    \ ~= ']' and last_char ~= '{' and last_char ~= '}' and last_char ~= '|' and last_char\
    \ ~= '+' and last_char ~= '^' and last_char ~= '~' and last_char ~= '`' and last_char\
    \ ~= '|' and last_char ~= ';' and last_char ~= ':' and last_char ~= '<' and last_char\
    \ ~= '>' and last_char ~= '=' and last_char ~= '@' and last_char ~= '#' and last_char\
    \ ~= '$' and last_char ~= '%' and last_char ~= '&' and last_char ~= '*' and last_char\
    \ ~= '%' and last_char ~= '!' and last_char ~= '^' and last_char ~= '&' and last_char\
    \ ~= '(' and last_char ~= ')' and last_char ~= '[' and last_char ~= ']' and last_char\
    \ ~= '{' and last_char ~= '}' and last_char ~= '|' and last_char ~= '+' and last_char\
    \ ~= '^' and last_char ~= '~' and last_char ~= '`' and last_char ~= '|' and last_char\
    \ ~= ';' and last_char ~= ':' and last_char ~= '<' and last_char ~= '>' and last_char\
    \ ~= '=' and last_char ~= '@' and last_char ~= '#' and last_char ~= '$' and last_char\
    \ ~= '%' and last_char ~= '&' and last_char ~= '*' and last_char ~= '%' and last_char\
    \ ~= '!' and last_char ~= '^' and last_char ~= '&' and last_char ~= '(' and last_char\
    \ ~= ')' and last_char ~= '[' and last_char ~= ']' and last_char ~= '{' and last_char\
    \ ~= '}' and last_char ~= '|' and last_char ~= '+' and last_char ~= '^' and last_char\
    \ ~= '~' and last_char ~= '`' and last_char ~= '|' and last_char ~= ';' and last_char\
    \ ~= ':' and last_char ~= '<' and last_char ~= '>' and last_char ~= '=' and last_char\
    \ ~= '@' and last_char ~= '#' and last_char ~= '$' and last_char ~= '%' and last_char\
    \ ~", "   local last_char = string.sub(txt, #txt, -1)\n   return last_char ==\
    \ ' ' or last_char == '.' or last_char == ',' or last_char == '?' or last_char\
    \ == '!' or last_char == ';' or last_char == '-' or last_char == '_' or last_char\
    \ == '/' or last_char == '[' or last_char == ']' or last_char == '{' or last_char\
    \ == '}' or last_char == '(' or last_char == ')' or last_char == '<' or last_char\
    \ == '>' or last_char == '/' or last_char == '@' or last_char == '$' or last_char\
    \ == '%' or last_char == '^' or last_char == '&' or last_char == '*' or last_char\
    \ == '(' or last_char == ')' or last_char == '+' or last_char == '-' or last_char\
    \ == '.' or last_char == '/' or last_char == '=' or last_char == '?' or last_char\
    \ == '!' or last_char == ';' or last_char == '-' or last_char == '_' or last_char\
    \ == '[' or last_char == ']' or last_char == '{' or last_char == '}' or last_char\
    \ == '(' or last_char == ')' or last_char == '<' or last_char == '>' or last_char\
    \ == '/' or last_char == '@' or last_char == '$' or last_char == '%' or last_char\
    \ == '^' or last_char == '&' or last_char == '*' or last_char == '(' or last_char\
    \ == ')' or last_char == '+' or last_char == '-' or last_char == '.' or last_char\
    \ == '/' or last_char == '=' or last_char == '?' or last_char == '!' or last_char\
    \ == ';' or last_char == '-' or last_char == '_' or last_char == '[' or last_char\
    \ == ']' or last_char == '{' or last_char == '}' or last_char == '(' or last_char\
    \ == ')' or last_char == '<' or last_char == '>' or last_char == '/' or last_char\
    \ == '@' or last_char == '$' or last_char == '%' or last_char == '^' or last_char\
    \ == '&' or last_char == '*' or last_char == '(' or last_char == ')' or last_char\
    \ == '+' or last_char == '-' or last_char == '.' or last_char == '/' or last_char\
    \ == '=' or last_char == '?' or last_char == '!' or last_char == ';' or last_char\
    \ == '-' or last_char == '_' or last_char == '[' or last_char == ']' or last_char\
    \ == '{' or last_char == '}' or last_char == '(' or last_char == ')' or last_char\
    \ == '<' or last_char == '>' or last_char == '/' or last_char == '", "  local\
    \ last_char = txt:sub(1, #txt)\n  return last_char:match('^[%w]$')\nend", "  \
    \ local last_char = string.sub(txt, -1)\n   if last_char == ' ' then\n      return\
    \ true\n   elseif last_char ~= ' ' then\n      return false\n   else\n      return\
    \ true\n   end\nend", "  local last_char = string.sub(txt, -1, 1)\n  local is_letter\
    \ = string.sub(txt, 1, 1) ~= '\\a'\n  return last_char == ' ' and is_letter\n\
    end", "   local last_char = string.sub(txt, -1, 1)\n   return last_char and last_char\
    \ ~= '\\a' and last_char ~= '\\A'\nend", "  local last_char = txt:sub(1, #txt)\n\
    \  return last_char:match('[A-Za-z]') ~= nil\nend", "  local last_char = string.sub(txt,\
    \ #txt, -1)\n  local is_letter = last_char ~= ' ' and last_char ~= '-' and last_char\
    \ ~= '_'\n  return is_letter\nend", "  local last_char = txt:sub(1,1)\n  local\
    \ is_last_letter = last_char ~= ' ' and last_char ~= '-' and last_char ~= '_'\n\
    \  return is_last_letter and not (last_char:sub(1,1) ~= '-' and last_char:sub(1,1)\
    \ ~= '_')\nend", "  local last_char = txt:sub(1, #txt)\n  return last_char ==\
    \ ' ' or last_char:match('[A-Za-z]')\nend", "  local last_char = string.sub(txt,\
    \ -1)\n  local is_letter = last_char >= 'a' and last_char <= 'z'\n  return not\
    \ is_letter\nend", "  local last_char = string.sub(txt, #txt, -1)\n  return last_char\
    \ == ' ' or last_char == '.' or last_char == ',' or last_char == '?' or last_char\
    \ == '!' or last_char == ';' or last_char == '-' or last_char == '_' or last_char\
    \ == '(' or last_char == ')' or last_char == '[' or last_char == ']' or last_char\
    \ == '{' or last_char == '}' or last_char == '%' or last_char == '$' or last_char\
    \ == '@' or last_char == '^' or last_char == '&' or last_char == '*' or last_char\
    \ == '(' or last_char == ')' or last_char == '+' or last_char == '-' or last_char\
    \ == '=' or last_char == '|' or last_char == '}' or last_char == '~' or last_char\
    \ == '`' or last_char == '\"' or last_char == '<' or last_char == '>' or last_char\
    \ == '?' or last_char == '!' or last_char == '.' or last_char == ',' or last_char\
    \ == ';' or last_char == '-' or last_char == '_' or last_char == '(' or last_char\
    \ == ')' or last_char == '[' or last_char == ']' or last_char == '{' or last_char\
    \ == '}' or last_char == '%' or last_char == '$' or last_char == '@' or last_char\
    \ == '^' or last_char == '&' or last_char == '*' or last_char == '(' or last_char\
    \ == ')' or last_char == '+' or last_char == '-' or last_char == '=' or last_char\
    \ == '|' or last_char == '}' or last_char == '~' or last_char == '`' or last_char\
    \ == '\"' or last_char == '<' or last_char == '>' or last_char == '?' or last_char\
    \ == '!' or last_char == '.' or last_char == ',' or last_char == ';' or last_char\
    \ == '-' or last_char == '_' or last_char == '(' or last_char == ')' or last_char\
    \ == '[' or last_char == ']' or last_char == '{' or last_char == '}' or last_char\
    \ == '%' or last_char == '$' or last_char == '@' or last_char == '^' or last_char\
    \ == '&' or last_char == '*' or last_char == '(' or last_char == ')' or last_char\
    \ == '+' or last_char == '-' or last_char == '=' or last_char == '|' or last_char\
    \ == '}' or last_char == '~' or last_char == '`' or last_char == '\"' or last_char\
    \ == '<' or last_char == '>' or last_char == '?' or last_char == '!' or last_char\
    \ == '.' or last_char == ',' or last_char == ';' or last_char == '", "  local\
    \ last_char = string.sub(txt, -1)\n  local is_letter = string.sub(txt, 1, 1) ~=\
    \ '\\a'\n  return last_char == ' ' and is_letter\nend", "  return string.sub(txt,\
    \ -1, 1) ~= ' ' and string.sub(txt, -1, 1) ~= '-' and string.sub(txt, -1, 1) ~=\
    \ '_'\nend", "   -- Check for empty string\n   if txt == '' then\n      return\
    \ false\n   end\n   -- Check for non-alphabetical characters\n   if string.sub(txt,\
    \ #txt, 1) ~= 'a' and string.sub(txt, #txt, 1) ~= 'e' and string.sub(txt, #txt,\
    \ 1) ~= 'i' and string.sub(txt, #txt, 1) ~= 'o' and string.sub(txt, #txt, 1) ~=\
    \ 'u' then\n      return false\n   end\n   -- Check for word\n   if string.sub(txt,\
    \ #txt, 1) ~= 'a' and string.sub(txt, #txt, 1) ~= 'e' and string.sub(txt, #txt,\
    \ 1) ~= 'i' and string.sub(txt, #txt, 1) ~= 'o' and string.sub(txt, #txt, 1) ~=\
    \ 'u' and string.sub(txt, #txt, 1) ~= 'y' then\n      return true\n   end\n  \
    \ return false\nend", "    local last_char = txt:sub(1, #txt)\n    return last_char:match('^[%w]$')\n\
    end", "    local last_char = txt:sub(1, #txt)\n    return last_char:match('^[%w]$')\n\
    end", "  return string.sub(txt, -1, 1) ~= ' ' and string.sub(txt, -1, 1) ~= '-'\
    \ and string.sub(txt, -1, 1) ~= '_' and string.sub(txt, -1, 1) ~= '$' and string.sub(txt,\
    \ -1, 1) ~= '^' and string.sub(txt, -1, 1) ~= '&' and string.sub(txt, -1, 1) ~=\
    \ '*' and string.sub(txt, -1, 1) ~= '(' and string.sub(txt, -1, 1) ~= ')' and\
    \ string.sub(txt, -1, 1) ~= '[' and string.sub(txt, -1, 1) ~= ']' and string.sub(txt,\
    \ -1, 1) ~= '{' and string.sub(txt, -1, 1) ~= '}' and string.sub(txt, -1, 1) ~=\
    \ '|' and string.sub(txt, -1, 1) ~= ';' and string.sub(txt, -1, 1) ~= '<' and\
    \ string.sub(txt, -1, 1) ~= '>' and string.sub(txt, -1, 1) ~= '?' and string.sub(txt,\
    \ -1, 1) ~= '!' and string.sub(txt, -1, 1) ~= '@' and string.sub(txt, -1, 1) ~=\
    \ '#' and string.sub(txt, -1, 1) ~= '$' and string.sub(txt, -1, 1) ~= '%' and\
    \ string.sub(txt, -1, 1) ~= '^' and string.sub(txt, -1, 1) ~= '&' and string.sub(txt,\
    \ -1, 1) ~= '*' and string.sub(txt, -1, 1) ~= '(' and string.sub(txt, -1, 1) ~=\
    \ ')' and string.sub(txt, -1, 1) ~= '[' and string.sub(txt, -1, 1) ~= ']' and\
    \ string.sub(txt, -1, 1) ~= '{' and string.sub(txt, -1, 1) ~= '}' and string.sub(txt,\
    \ -1, 1) ~= '|' and string.sub(txt, -1, 1) ~= ';' and string.sub(txt, -1, 1) ~=\
    \ '<' and string.sub(txt, -1, 1) ~= '>' and string.sub(txt, -1, 1) ~= '?' and\
    \ string.sub(txt, -1, 1) ~= '!' and string.sub(txt, -1, 1) ~= '@' and string.sub(txt,\
    \ -1, 1) ~= '#' and string.sub(txt, -1, 1) ~= '$' and string.sub(txt, -1, 1) ~=\
    \ '%' and string.sub(txt, -1, 1) ~= '^' and string.sub(txt, -1, 1) ~= '&' and\
    \ string.sub(txt, -1, 1) ~= '*' and string.sub(txt, -1, 1) ~= '(' and string.sub(txt,\
    \ -1, 1) ~= ')' and string.sub(txt, -1, 1) ~= '[' and string.sub(txt, -1, 1) ~=\
    \ ']' and string.sub(txt, -1, 1) ~= '{' and string.sub(txt, -1, 1) ~= '}' and\
    \ string.", "  local last_char = string.sub(txt, #txt, -1)\n  local last_char_lower\
    \ = string.lower(last_char)\n  return last_char_lower ~= 'a' and last_char_lower\
    \ ~= 'e' and last_char_lower ~= 'i' and last_char_lower ~= 'o' and last_char_lower\
    \ ~= 'u'\nend", "  local last_char = txt:sub(1, #txt)\n  local last_char_lower\
    \ = last_char:lower()\n  local last_char_upper = last_char:upper()\n  local last_char_not_a_word\
    \ = last_char_lower ~= 'a' and\n    last_char_upper ~= 'A'\n  return last_char_not_a_word\n\
    end", "  local last_char = txt:sub(1, #txt)\n  local is_letter = last_char:match('^[%w]$')\n\
    \  return not is_letter\nend", "   -- Check for empty string.\n   if txt == ''\
    \ then return false end", "  local last_char = string.sub(txt, -1)\n  local last_char_lower\
    \ = string.lower(last_char)\n  local last_char_upper = string.upper(last_char)\n\
    \  local last_char_lower = string.lower(last_char_lower)\n  local last_char_upper\
    \ = string.upper(last_char_upper)\n  local last_char_lower = string.lower(last_char_lower)\n\
    \  local last_char_upper = string.upper(last_char_upper)\n  local last_char_lower\
    \ = string.lower(last_char_lower)\n  local last_char_upper = string.upper(last_char_upper)\n\
    \  local last_char_lower = string.lower(last_char_lower)\n  local last_char_upper\
    \ = string.upper(last_char_upper)\n  local last_char_lower = string.lower(last_char_lower)\n\
    \  local last_char_upper = string.upper(last_char_upper)\n  local last_char_lower\
    \ = string.lower(last_char_lower)\n  local last_char_upper = string.upper(last_char_upper)\n\
    \  local last_char_lower = string.lower(last_char_lower)\n  local last_char_upper\
    \ = string.upper(last_char_upper)\n  local last_char_lower = string.lower(last_char_lower)\n\
    \  local last_char_upper = string.upper(last_char_upper)\n  local last_char_lower\
    \ = string.lower(last_char_lower)\n  local last_char_upper = string.upper(last_char_upper)\n\
    \  local last_char_lower = string.lower(last_char_lower)\n  local last_char_upper\
    \ = string.upper(last_char_upper)\n  local last_char_lower = string.lower(last_char_lower)\n\
    \  local last_char_upper = string.upper(last_char_upper)\n  local last_char_lower\
    \ = string.lower(last_char_lower)\n  local last_char_upper = string.upper(last_char_upper)\n\
    \  local last_char_lower = string.lower(last_char_lower)\n  local last_char_upper\
    \ = string.upper(last_char_upper)\n  local last_char_lower = string.lower(last_char_lower)\n\
    \  local last_char_upper = string.upper(last_char_upper)\n  local last_char_lower\
    \ = string.lower(last_char_lower)\n  local last_char_upper = string.upper(last_char_upper)\n\
    \  local last_char_lower = string.lower(last_char_lower)\n  local last_char_upper\
    \ = string.upper(last_char_upper)\n  local last_char_lower = string.lower(last_char_lower)\n\
    \  local last_char_upper = string.upper(last_char_upper)\n  local last_char_lower\
    \ = string.lower(last_char_lower)\n  local last_char_upper = string.", "   local\
    \ last_char = txt:sub(1, #txt)\n   return last_char:match('^[%w]$')\nend", " \
    \ return txt:sub(1, #txt) ~= ' ' and txt:sub((#txt), 1) ~= '\\a'\nend", "  --\
    \ Check for empty string.\n  if txt == '' then\n    return false\n  end", "  local\
    \ last_char = string.sub(txt, -1)\n  local last_char_lower = string.lower(last_char)\n\
    \  local last_char_upper = string.upper(last_char)\n  local last_char_lower =\
    \ string.lower(last_char_lower)\n  local last_char_upper = string.upper(last_char_upper)\n\
    \  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_", "  local last_char =\
    \ txt:sub(1, #txt)\n  local is_letter = last_char:match('^[%w]+$')\n  return not\
    \ is_letter\nend", "  local last_char = string.sub(txt, -1, 1)\n  local is_letter\
    \ = string.byte(last_char) ~= 0\n  local is_word = string.sub(txt, 1, string.len(txt)\
    \ - 1) ~= '\\0' and string.sub(txt, 1, string.len(txt) - 1) ~= ' '\n  return is_letter\
    \ and not is_word\nend", "  local last_char = string.sub(txt, #txt, -1)\n  return\
    \ last_char ~= ' ' and last_char ~= '-' and last_char ~= '_'\nend", "  local last_char\
    \ = string.sub(txt, -1)\n  local last_char_lower = string.lower(last_char)\n \
    \ local last_char_upper = string.upper(last_char)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_", "  local last_char = string.sub(txt, -1)\n  local last_char_lower\
    \ = string.lower(last_char)\n  local last_char_upper = string.upper(last_char)\n\
    \  local last_char_lower = string.lower(last_char)\n  local last_char_upper =\
    \ string.upper(last_char)\n  local last_char_lower = string.lower(last_char)\n\
    \  local last_char_upper = string.upper(last_char)\n  local last_char_lower =\
    \ string.lower(last_char)\n  local last_char_upper = string.upper(last_char)\n\
    \  local last_char_lower = string.lower(last_char)\n  local last_char_upper =\
    \ string.upper(last_char)\n  local last_char_lower = string.lower(last_char)\n\
    \  local last_char_upper = string.upper(last_char)\n  local last_char_lower =\
    \ string.lower(last_char)\n  local last_char_upper = string.upper(last_char)\n\
    \  local last_char_lower = string.lower(last_char)\n  local last_char_upper =\
    \ string.upper(last_char)\n  local last_char_lower = string.lower(last_char)\n\
    \  local last_char_upper = string.upper(last_char)\n  local last_char_lower =\
    \ string.lower(last_char)\n  local last_char_upper = string.upper(last_char)\n\
    \  local last_char_lower = string.lower(last_char)\n  local last_char_upper =\
    \ string.upper(last_char)\n  local last_char_lower = string.lower(last_char)\n\
    \  local last_char_upper = string.upper(last_char)\n  local last_char_lower =\
    \ string.lower(last_char)\n  local last_char_upper = string.upper(last_char)\n\
    \  local last_char_lower = string.lower(last_char)\n  local last_char_upper =\
    \ string.upper(last_char)\n  local last_char_lower = string.lower(last_char)\n\
    \  local last_char_upper = string.upper(last_char)\n  local last_char_lower =\
    \ string.lower(last_char)\n  local last_char_upper = string.upper(last_char)\n\
    \  local last_char_lower = string.lower(last_char)\n  local last_char_upper =\
    \ string.upper(last_char)\n  local last_char_lower = string.lower(last_char)\n\
    \  local last_char_upper = string.upper(last_char)\n  local last_char_lower =\
    \ string.lower(last_char)\n  local last_char_upper = string.upper(last_char)\n\
    \  local last_char_lower = string.lower(last_char)\n  local last_char_upper =\
    \ string.upper(last_char)\n  local last_char_lower = string.lower(last_char)\n\
    \  local last_char_upper = string.upper(last_char)\n  local last_char_lower =\
    \ string.lower(last_char)\n  local last_char_upper = string.upper", "  local last_char\
    \ = txt:sub(1, #txt)\n  return last_char:match('^[%w]$')\nend", "  -- Check for\
    \ empty string.\n  if txt == '' then\n    return false\n  end", "  local last_char\
    \ = string.sub(txt, -1)\n  local is_letter = last_char ~= nil and last_char ~=\
    \ ' ' and last_char ~= '\\t'\n  return is_letter\nend", "   if txt == '' then\
    \ return false end\n   local last_char = txt:sub(1,1)\n   if last_char == ' '\
    \ then return false end\n   if last_char == '.' or last_char == ',' or last_char\
    \ == ':' then\n      return false\n   end\n   if last_char == '-' or last_char\
    \ == '_' or last_char == '!' or last_char == '?' then\n      return false\n  \
    \ end\n   if last_char == '\"' or last_char == '\\'' or last_char == '(' or last_char\
    \ == ')' then\n      return false\n   end\n   if last_char == '[' or last_char\
    \ == ']' or last_char == '{' or last_char == '}' or last_char == '<' or last_char\
    \ == '>' then\n      return false\n   end\n   if last_char == '%' or last_char\
    \ == '&' or last_char == '*' or last_char == '+' or last_char == '-' or last_char\
    \ == '.' or last_char == '/' or last_char == '^' or last_char == '~' or last_char\
    \ == '`' or last_char == '|' or last_char == '~' then\n      return false\n  \
    \ end\n   if last_char == '`' or last_char == '~' then\n      return false\n \
    \  end\n   if last_char == '{' or last_char == '}' then\n      return false\n\
    \   end\n   if last_char == '[' or last_char == ']' then\n      return false\n\
    \   end\n   if last_char == '<' or last_char == '>' then\n      return false\n\
    \   end\n   if last_char == '|' then\n      return false\n   end\n   if last_char\
    \ == '%' then\n      return false\n   end\n   if last_char == '&' then\n     \
    \ return false\n   end\n   if last_char == '*' then\n      return false\n   end\n\
    \   if last_char == '+' then\n      return false\n   end\n   if last_char == '-'\
    \ then\n      return false\n   end\n   if last_char == '.' then\n      return\
    \ false\n   end\n   if last_char == '/' then\n      return false\n   end\n   if\
    \ last_char == '^' then\n      return false\n   end\n   if last_char == '~' then\n\
    \      return false\n   end\n   if last_char == '`' then\n      return false\n\
    \   end\n   if last_char == '|' then\n      return false\n   end\n   if last_char\
    \ == '~' then\n      return false\n   end\n   if last_char == '`' then\n     \
    \ return false\n", "  local last_char = txt:sub(1,1)\n  local is_letter = false\n\
    \  for w in word:gmatch('[^ ]+') do\n    if w == last_char then\n      is_letter\
    \ = true\n    end\n  end\n  return is_letter\nend", "  -- Check for empty string.\n\
    \  if txt == '' then\n    return false\n  end\n  -- Check for only spaces.\n \
    \ if txt:sub(1, 1) == ' ' then\n    return false\n  end\n  -- Check for only alphabetical\
    \ characters.\n  for i = 1, #txt do\n    if string.sub(txt, i, i) ~= string.sub(txt,\
    \ i - 1, i) then\n      return false\n    end\n  end\n  return true\nend", " \
    \  -- Check for empty string.\n   if txt == '' then\n      return false\n   end",
  "  local last_char = txt:sub(1, #txt)\n  local is_letter = last_char:match('^[%w-]+$')\n\
    \  return not is_letter\nend", "  local last_char = string.sub(txt, -1)\n  local\
    \ is_letter = last_char ~= ' ' and last_char ~= '\\t'\n  return not is_letter\n\
    end", "  local last_char = txt:sub(1, #txt)\n  return last_char:match('^[%w-]+$')\n\
    end", "  -- If the string is empty, return False\n  if txt == '' then return false\
    \ end\n  -- If the last character is a letter, return True\n  if txt:sub(1, #txt)\
    \ == txt:sub(1, #txt:len()) then return true end\n  -- Otherwise, return False\n\
    \  return false\nend", "  local last_char = string.sub(txt, -1)\n  return last_char\
    \ == ' ' or last_char == '.' or last_char == '-' or last_char == '_' or last_char\
    \ == '/' or last_char == '\\\\' or last_char == '@' or last_char == '$' or last_char\
    \ == '%' or last_char == '^' or last_char == '&' or last_char == '*' or last_char\
    \ == '(' or last_char == ')' or last_char == '[' or last_char == ']' or last_char\
    \ == '{' or last_char == '}' or last_char == '|' or last_char == '~' or last_char\
    \ == '`' or last_char == '<' or last_char == '>' or last_char == '?' or last_char\
    \ == '!' or last_char == '.' or last_char == ',' or last_char == ':' or last_char\
    \ == ';' or last_char == '\"' or last_char == '\\'' or last_char == '/' or last_char\
    \ == '\\\\' or last_char == '@' or last_char == '$' or last_char == '%' or last_char\
    \ == '^' or last_char == '&' or last_char == '*' or last_char == '(' or last_char\
    \ == ')' or last_char == '[' or last_char == ']' or last_char == '{' or last_char\
    \ == '}' or last_char == '|' or last_char == '~' or last_char == '`' or last_char\
    \ == '<' or last_char == '>' or last_char == '?' or last_char == '!' or last_char\
    \ == '.' or last_char == ',' or last_char == ':' or last_char == ';' or last_char\
    \ == '\"' or last_char == '\\'' or last_char == '/' or last_char == '\\\\' or\
    \ last_char == '@' or last_char == '$' or last_char == '%' or last_char == '^'\
    \ or last_char == '&' or last_char == '*' or last_char == '(' or last_char ==\
    \ ')' or last_char == '[' or last_char == ']' or last_char == '{' or last_char\
    \ == '}' or last_char == '|' or last_char == '~' or last_char == '`' or last_char\
    \ == '<' or last_char == '>' or last_char == '?' or last_char == '!' or last_char\
    \ == '.' or last_char == ',' or last_char == ':' or last_char == ';' or last_char\
    \ == '\"' or last_char == '\\'' or last_char == '/' or last_char == '\\\\' or\
    \ last_char == '@' or last_char == '$' or last_char == '%' or last_char == '^'\
    \ or last_char == '&' or last_char == '*' or last_char == '(' or last_char ==\
    \ ')' or last_char == '[' or last_char == ']' or last_char == '{' or last_char\
    \ == '}' or last_char == '|' or last_", "  local last_char = string.sub(txt, #txt,\
    \ -1)\n  return last_char == ' ' or last_char == '.' or last_char == '-' or last_char\
    \ == '_' or last_char == '?' or last_char == '!' or last_char == '$' or last_char\
    \ == '%' or last_char == '&' or last_char == '(' or last_char == ')' or last_char\
    \ == '[' or last_char == ']' or last_char == '{' or last_char == '}' or last_char\
    \ == '\\\\' or last_char == '^' or last_char == '~' or last_char == '`' or last_char\
    \ == '!' or last_char == '@' or last_char == '#' or last_char == '$' or last_char\
    \ == '%' or last_char == '^' or last_char == '&' or last_char == '*' or last_char\
    \ == '(' or last_char == ')' or last_char == '+' or last_char == ',' or last_char\
    \ == ':' or last_char == ';' or last_char == '<' or last_char == '>' or last_char\
    \ == '?' or last_char == '[' or last_char == ']' or last_char == '{' or last_char\
    \ == '}' or last_char == '|' or last_char == '\\\\' or last_char == '`' or last_char\
    \ == '~' or last_char == '-' or last_char == '_' or last_char == '.' or last_char\
    \ == '?' or last_char == '!' or last_char == '$' or last_char == '%' or last_char\
    \ == '&' or last_char == '*' or last_char == '(' or last_char == ')' or last_char\
    \ == '+' or last_char == ',' or last_char == ':' or last_char == ';' or last_char\
    \ == '<' or last_char == '>' or last_char == '?' or last_char == '[' or last_char\
    \ == ']' or last_char == '{' or last_char == '}' or last_char == '|' or last_char\
    \ == '\\\\' or last_char == '`' or last_char == '~' or last_char == '-' or last_char\
    \ == '_' or last_char == '.' or last_char == '?' or last_char == '!' or last_char\
    \ == '$' or last_char == '%' or last_char == '&' or last_char == '*' or last_char\
    \ == '(' or last_char == ')' or last_char == '+' or last_char == ',' or last_char\
    \ == ':' or last_char == ';' or last_char == '<' or last_char == '>' or last_char\
    \ == '?' or last_char == '[' or last_char == ']' or last_char == '{' or last_char\
    \ == '}' or last_char == '|' or last_char == '\\\\' or last_char == '`' or last_char\
    \ == '~' or last_char == '-' or last_char == '_' or last_char == '.' or last_char\
    \ == '", "  local last_char = txt:sub(1, #txt)\n  return last_char:match('^[%w]$')\n\
    end", "  local last_char = string.sub(txt, -1)\n  local last_char_lower = string.lower(last_char)\n\
    \  local last_char_upper = string.upper(last_char)\n  local last_char_not_a_word\
    \ = last_char_lower == 'a' or last_char_lower == 'e' or last_char_lower == 'i'\
    \ or last_char_lower == 'o' or last_char_lower == 'u'\n  return last_char_not_a_word\
    \ and last_char_upper ~= 'A' and last_char_upper ~= 'E' and last_char_upper ~=\
    \ 'I' and last_char_upper ~= 'O' and last_char_upper ~= 'U'\nend", "  local last_char\
    \ = txt:sub((#txt), 1)\n  return last_char == ' ' or last_char == '.' or last_char\
    \ == ',' or last_char == '?' or last_char == '!' or last_char == ';' or last_char\
    \ == '-' or last_char == '_' or last_char == '%' or last_char == '$' or last_char\
    \ == '&' or last_char == '(' or last_char == ')' or last_char == '[' or last_char\
    \ == ']' or last_char == '{' or last_char == '}' or last_char == '\\\\' or last_char\
    \ == '^' or last_char == '~' or last_char == '*' or last_char == '+' or last_char\
    \ == ':' or last_char == '<' or last_char == '>' or last_char == '?' or last_char\
    \ == '!' or last_char == '|' or last_char == '`' or last_char == '\"' or last_char\
    \ == '{' or last_char == '}' or last_char == '~' or last_char == '`' or last_char\
    \ == '~' or last_char == '`' or last_char == '~' or last_char == '`' or last_char\
    \ == '~' or last_char == '`' or last_char == '~' or last_char == '`' or last_char\
    \ == '~' or last_char == '`' or last_char == '~' or last_char == '`' or last_char\
    \ == '~' or last_char == '`' or last_char == '~' or last_char == '`' or last_char\
    \ == '~' or last_char == '`' or last_char == '~' or last_char == '`' or last_char\
    \ == '~' or last_char == '`' or last_char == '~' or last_char == '`' or last_char\
    \ == '~' or last_char == '`' or last_char == '~' or last_char == '`' or last_char\
    \ == '~' or last_char == '`' or last_char == '~' or last_char == '`' or last_char\
    \ == '~' or last_char == '`' or last_char == '~' or last_char == '`' or last_char\
    \ == '~' or last_char == '`' or last_char == '~' or last_char == '`' or last_char\
    \ == '~' or last_char == '`' or last_char == '~' or last_char == '`' or last_char\
    \ == '~' or last_char == '`' or last_char == '~' or last_char == '`' or last_char\
    \ == '~' or last_char == '`' or last_char == '~' or last_char == '`' or last_char\
    \ == '~' or last_char == '`' or last_char == '~' or last_char == '`' or last_char\
    \ == '~' or last_char == '`' or last_char == '~' or last_char == '`' or last_char\
    \ == '~' or last_char == '`' or last_char == '~' or last_char == '`' or last_char\
    \ == '~' or last_char == '`", "  return string.sub(txt, -1, 1) ~= ' ' and string.sub(txt,\
    \ -1, 1) ~= '-' and string.sub(txt, -1, 1) ~= '_' and string.sub(txt, -1, 1) ~=\
    \ '$' and string.sub(txt, -1, 1) ~= '^' and string.sub(txt, -1, 1) ~= '&' and\
    \ string.sub(txt, -1, 1) ~= '*' and string.sub(txt, -1, 1) ~= '(' and string.sub(txt,\
    \ -1, 1) ~= ')' and string.sub(txt, -1, 1) ~= '[' and string.sub(txt, -1, 1) ~=\
    \ ']' and string.sub(txt, -1, 1) ~= '{' and string.sub(txt, -1, 1) ~= '}' and\
    \ string.sub(txt, -1, 1) ~= '|' and string.sub(txt, -1, 1) ~= ';' and string.sub(txt,\
    \ -1, 1) ~= '<' and string.sub(txt, -1, 1) ~= '>' and string.sub(txt, -1, 1) ~=\
    \ '?' and string.sub(txt, -1, 1) ~= '!' and string.sub(txt, -1, 1) ~= '@' and\
    \ string.sub(txt, -1, 1) ~= '#' and string.sub(txt, -1, 1) ~= '$' and string.sub(txt,\
    \ -1, 1) ~= '%' and string.sub(txt, -1, 1) ~= '^' and string.sub(txt, -1, 1) ~=\
    \ '&' and string.sub(txt, -1, 1) ~= '*' and string.sub(txt, -1, 1) ~= '(' and\
    \ string.sub(txt, -1, 1) ~= ')' and string.sub(txt, -1, 1) ~= '[' and string.sub(txt,\
    \ -1, 1) ~= ']' and string.sub(txt, -1, 1) ~= '{' and string.sub(txt, -1, 1) ~=\
    \ '}' and string.sub(txt, -1, 1) ~= '|' and string.sub(txt, -1, 1) ~= ';' and\
    \ string.sub(txt, -1, 1) ~= '<' and string.sub(txt, -1, 1) ~= '>' and string.sub(txt,\
    \ -1, 1) ~= '?' and string.sub(txt, -1, 1) ~= '!' and string.sub(txt, -1, 1) ~=\
    \ '@' and string.sub(txt, -1, 1) ~= '#' and string.sub(txt, -1, 1) ~= '$' and\
    \ string.sub(txt, -1, 1) ~= '%' and string.sub(txt, -1, 1) ~= '^' and string.sub(txt,\
    \ -1, 1) ~= '&' and string.sub(txt, -1, 1) ~= '*' and string.sub(txt, -1, 1) ~=\
    \ '(' and string.sub(txt, -1, 1) ~= ')' and string.sub(txt, -1, 1) ~= '[' and\
    \ string.sub(txt, -1, 1) ~= ']' and string.sub(txt, -1, 1) ~= '{' and string.sub(txt,\
    \ -1, 1) ~= '}' and string.", "  local last_char = string.sub(txt, -1)\n  local\
    \ last_char_lower = string.lower(last_char)\n  local last_char_upper = string.upper(last_char)\n\
    \  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_",
  "  local last_char = txt:sub(1, #txt)\n  return last_char:match('^[%w]$')\nend",
  "  local last_char = txt:sub(1, #txt)\n  return last_char == ' ' or last_char ==\
    \ '.' or last_char == ',' or last_char == '?' or last_char == '!' or last_char\
    \ == ';' or last_char == '-' or last_char == '_' or last_char == '(' or last_char\
    \ == ')' or last_char == '[' or last_char == ']' or last_char == '{' or last_char\
    \ == '}' or last_char == '\"' or last_char == '\\'' or last_char == '\\\\' or\
    \ last_char == '@' or last_char == '$' or last_char == '%' or last_char == '^'\
    \ or last_char == '&' or last_char == '*' or last_char == '(' or last_char ==\
    \ ')' or last_char == '+' or last_char == '-' or last_char == '_' or last_char\
    \ == '=' or last_char == '<' or last_char == '>' or last_char == '[' or last_char\
    \ == ']' or last_char == '{' or last_char == '}' or last_char == '\"' or last_char\
    \ == '\\'' or last_char == '\\\\' or last_char == '@' or last_char == '$' or last_char\
    \ == '%' or last_char == '^' or last_char == '&' or last_char == '*' or last_char\
    \ == '(' or last_char == ')' or last_char == '+' or last_char == '-' or last_char\
    \ == '_' or last_char == '=' or last_char == '<' or last_char == '>' or last_char\
    \ == '[' or last_char == ']' or last_char == '{' or last_char == '}' or last_char\
    \ == '\"' or last_char == '\\'' or last_char == '\\\\' or last_char == '@' or\
    \ last_char == '$' or last_char == '%' or last_char == '^' or last_char == '&'\
    \ or last_char == '*' or last_char == '(' or last_char == ')' or last_char ==\
    \ '+' or last_char == '-' or last_char == '_' or last_char == '=' or last_char\
    \ == '<' or last_char == '>' or last_char == '[' or last_char == ']' or last_char\
    \ == '{' or last_char == '}' or last_char == '\"' or last_char == '\\'' or last_char\
    \ == '\\\\' or last_char == '@' or last_char == '$' or last_char == '%' or last_char\
    \ == '^' or last_char == '&' or last_char == '*' or last_char == '(' or last_char\
    \ == ')' or last_char == '+' or last_char == '-' or last_char == '_' or last_char\
    \ == '=' or last_char == '<' or last_char == '>' or last_char == '[' or last_char\
    \ == ']' or last_char == '{' or last_char == '}' or last_char == '\"' or last_char\
    \ == '\\'", "   -- Check for empty string.\n   if txt == '' then\n      return\
    \ false\n   end", "    local last_char = txt:sub(1, #txt)\n    return last_char:match('^[%w]$')\n\
    end", "    local last_char = string.sub(txt, #txt, -1)\n    return last_char ==\
    \ ' ' or last_char ~= '%w' and last_char ~= '%d' and last_char ~= '\\''\nend",
  "  local last_char = txt:sub((#txt), 1)\n  local last_char_lower = last_char:lower()\n\
    \  local last_char_upper = last_char:upper()\n  local last_char_lower = last_char_lower:gsub('%W+',\
    \ '')\n  local last_char_upper = last_char_upper:gsub('%W+', '')\n  local last_char_lower\
    \ = last_char_lower:gsub('%w+', '')\n  local last_char_upper = last_char_upper:gsub('%w+',\
    \ '')\n  local last_char_lower = last_char_lower:gsub('%w+', '')\n  local last_char_upper\
    \ = last_char_upper:gsub('%w+', '')\n  local last_char_lower = last_char_lower:gsub('%w+',\
    \ '')\n  local last_char_upper = last_char_upper:gsub('%w+', '')\n  local last_char_lower\
    \ = last_char_lower:gsub('%w+', '')\n  local last_char_upper = last_char_upper:gsub('%w+',\
    \ '')\n  local last_char_lower = last_char_lower:gsub('%w+', '')\n  local last_char_upper\
    \ = last_char_upper:gsub('%w+', '')\n  local last_char_lower = last_char_lower:gsub('%w+',\
    \ '')\n  local last_char_upper = last_char_upper:gsub('%w+', '')\n  local last_char_lower\
    \ = last_char_lower:gsub('%w+', '')\n  local last_char_upper = last_char_upper:gsub('%w+',\
    \ '')\n  local last_char_lower = last_char_lower:gsub('%w+', '')\n  local last_char_upper\
    \ = last_char_upper:gsub('%w+', '')\n  local last_char_lower = last_char_lower:gsub('%w+',\
    \ '')\n  local last_char_upper = last_char_upper:gsub('%w+', '')\n  local last_char_lower\
    \ = last_char_lower:gsub('%w+', '')\n  local last_char_upper = last_char_upper:gsub('%w+',\
    \ '')\n  local last_char_lower = last_char_lower:gsub('%w+', '')\n  local last_char_upper\
    \ = last_char_upper:gsub('%w+', '')\n  local last_char_lower = last_char_lower:gsub('%w+',\
    \ '')\n  local last_char_upper = last_char_upper:gsub('%w+', '')\n  local last_char_lower\
    \ = last_char_lower:gsub('%w+', '')\n  local last_char_upper = last_char_upper:gsub('%w+',\
    \ '')\n", "  local last_char = string.sub(txt, -1)\n  local is_letter = last_char\
    \ ~= ' ' and last_char ~= '-' and last_char ~= '_'\n  return is_letter\nend",
  "  local last_char = txt:sub(1, #txt)\n  return last_char:match('^[%w-]+$')\nend",
  "  local last_char = string.sub(txt, -1, 1)\n  local last_char_is_a_letter = last_char\
    \ ~= '\\0' and last_char ~= '\\' and last_char ~= ' ' and last_char ~= '-'\n \
    \ return last_char_is_a_letter\nend", "  local last_char = string.sub(txt, -1)\n\
    \  local last_char_lower = string.lower(last_char)\n  local last_char_upper =\
    \ string.upper(last_char)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_", "  local last_char = string.sub(txt, -1)\n  local is_letter\
    \ = string.byte(last_char) ~= nil\n  return not is_letter\nend", "  return string.sub(txt,\
    \ -1, string.len(txt)) == ' ' and\n    string.sub(txt, -1, string.len(txt)) ==\
    \ string.sub(txt, string.len(txt), string.len(txt))\nend", "  local last_char\
    \ = txt:sub(1, #txt)\n  local last_char_lower = last_char:lower()\n  local last_char_upper\
    \ = last_char:upper()\n  local last_char_lower = last_char_lower:gsub('%w+', '')\n\
    \  local last_char_upper = last_char_upper:gsub('%w+', '')\n  local last_char_lower\
    \ = last_char_lower:gsub(' ', '')\n  local last_char_upper = last_char_upper:gsub('\
    \ ', '')\n  local last_char_lower = last_char_lower:gsub('%w+', '')\n  local last_char_upper\
    \ = last_char_upper:gsub('%w+', '')\n  local last_char_lower = last_char_lower:gsub('\
    \ ', '')\n  local last_char_upper = last_char_upper:gsub(' ', '')\n  local last_char_lower\
    \ = last_char_lower:gsub('%w+', '')\n  local last_char_upper = last_char_upper:gsub('%w+',\
    \ '')\n  local last_char_lower = last_char_lower:gsub(' ', '')\n  local last_char_upper\
    \ = last_char_upper:gsub(' ', '')\n  local last_char_lower = last_char_lower:gsub('%w+',\
    \ '')\n  local last_char_upper = last_char_upper:gsub('%w+', '')\n  local last_char_lower\
    \ = last_char_lower:gsub(' ', '')\n  local last_char_upper = last_char_upper:gsub('\
    \ ', '')\n  local last_char_lower = last_char_lower:gsub('%w+', '')\n  local last_char_upper\
    \ = last_char_upper:gsub('%w+', '')\n  local last_char_lower = last_char_lower:gsub('\
    \ ', '')\n  local last_char_upper = last_char_upper:gsub(' ', '')\n  local last_char_lower\
    \ = last_char_lower:gsub('%w+', '')\n  local last_char_upper = last_char_upper:gsub('%w+',\
    \ '')\n  local last_char_lower = last_char_lower:gsub(' ', '')\n  local last_char_upper\
    \ = last_char_upper:gsub(' ', '')\n  local last_char_lower = last_char_lower:gsub('%w+',\
    \ '')\n  local last_char_upper = last_char_upper:gsub('%w+', '')\n  local last_char_lower\
    \ = last_char_lower:gsub(' ', '')\n  local last_char_upper = last_char_upper:gsub('\
    \ ', '')\n  local last_char_lower = last_char_lower:gsub('%w+', '')\n  local last_char_upper\
    \ = last_char_upper:gsub('", "  local last_char = txt:sub(1, #txt)\n  return last_char\
    \ == ' ' or last_char == ' ' or last_char == ' ' or last_char == ' ' or last_char\
    \ == ' ' or last_char == ' ' or last_char == ' ' or last_char == ' ' or last_char\
    \ == ' ' or last_char == ' ' or last_char == ' ' or last_char == ' ' or last_char\
    \ == ' ' or last_char == ' ' or last_char == ' ' or last_char == ' ' or last_char\
    \ == ' ' or last_char == ' ' or last_char == ' ' or last_char == ' ' or last_char\
    \ == ' ' or last_char == ' ' or last_char == ' ' or last_char == ' ' or last_char\
    \ == ' ' or last_char == ' ' or last_char == ' ' or last_char == ' ' or last_char\
    \ == ' ' or last_char == ' ' or last_char == ' ' or last_char == ' ' or last_char\
    \ == ' ' or last_char == ' ' or last_char == ' ' or last_char == ' ' or last_char\
    \ == ' ' or last_char == ' ' or last_char == ' ' or last_char == ' ' or last_char\
    \ == ' ' or last_char == ' ' or last_char == ' ' or last_char == ' ' or last_char\
    \ == ' ' or last_char == ' ' or last_char == ' ' or last_char == ' ' or last_char\
    \ == ' ' or last_char == ' ' or last_char == ' ' or last_char == ' ' or last_char\
    \ == ' ' or last_char == ' ' or last_char == ' ' or last_char == ' ' or last_char\
    \ == ' ' or last_char == ' ' or last_char == ' ' or last_char == ' ' or last_char\
    \ == ' ' or last_char == ' ' or last_char == ' ' or last_char == ' ' or last_char\
    \ == ' ' or last_char == ' ' or last_char == ' ' or last_char == ' ' or last_char\
    \ == ' ' or last_char == ' ' or last_char == ' ' or last_char == ' ' or last_char\
    \ == ' ' or last_char == ' ' or last_char == ' ' or last_char == ' ' or last_char\
    \ == ' ' or last_char == ' ' or last_char == ' ' or last_char == ' ' or last_char\
    \ == ' ' or last_char == ' ' or last_char == ' ' or last_char == ' ' or last_char\
    \ == ' ' or last_char == ' ' or last_char == ' ' or last_char == ' ' or last_char\
    \ == ' ' or last_char == ' ' or last_char == ' ' or last_char == ' ' or last_char\
    \ == ' ' or last_char == ' ' or last_char == ' ' or last_char == ' ' or last_char\
    \ == ' ' or last_char == ' ' or last_char == ' ' or last_char == ' ", "   -- Check\
    \ for empty string.\n   if txt == '' then\n      return false\n   end", "   local\
    \ last_char = string.sub(txt, -1)\n   if last_char == ' ' then\n      return false\n\
    \   elseif last_char ~= ' ' and last_char ~= '-' and last_char ~= '.' and last_char\
    \ ~= '!' and last_char ~= '?' and last_char ~= '!' and last_char ~= '?' and last_char\
    \ ~= '/' and last_char ~= ':' and last_char ~= '-' and last_char ~= '-' and last_char\
    \ ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char\
    \ ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char\
    \ ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char\
    \ ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char\
    \ ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char\
    \ ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char\
    \ ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char\
    \ ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char\
    \ ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char\
    \ ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char\
    \ ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char\
    \ ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char\
    \ ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char\
    \ ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char\
    \ ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char\
    \ ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char\
    \ ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char ~= '-' and last_char\
    \ ~= '-' and last_char ~= '-' and last_", "  -- Check for empty string\n  if txt\
    \ == '' then return false end\n  -- Check for non-alphabetical character\n  if\
    \ txt:sub(1, 1) ~= '' then return false end\n  -- Check for last character not\
    \ being a word\n  local words = txt:gsub(' ', ''):gsub(' ', ' '):gsub(' ', ' ')\n\
    \  if words[#words] ~= '' then return false end\n  return true\nend", "  local\
    \ last_char = txt:sub(1,1)\n  local is_last_letter = last_char:isalpha()\n  local\
    \ is_last_word = last_char:sub(1,1) ~= '\\a'\n  return is_last_letter ~= is_last_word\n\
    end", "  return string.sub(txt, -1, 1) ~= ' ' and string.sub(txt, -1, 1) ~= '-'\
    \ and string.sub(txt, -1, 1) ~= '_'\nend", "  local last_char = txt:sub(1, #txt)\n\
    \  return last_char:match('^[%a%p]+$')\nend", "  -- Check that the string is not\
    \ empty.\n  if not txt then return false end\n  -- Check that txt is a string.\n\
    \  -- If txt is not a string, return false.\n  if not type(txt) == 'string' then\
    \ return false end\n  -- Check that txt does not end with a space.\n  -- If txt\
    \ ends with a space, return false.\n  if txt:sub(1, #txt) == ' ' then return false\
    \ end\n  -- Check that txt does not end with a punctuation mark.\n  -- If txt\
    \ ends with a punctuation mark, return false.\n  local puncts = {'.', ',', '!',\
    \ '?', ';', ':', '\"', '\\'', '('}\n  for _, c in ipairs(puncts) do\n    if txt:sub(-#c,\
    \ -1) == c then return false end\n  end\n  -- Check that txt does not end with\
    \ a number.\n  -- If txt ends with a number, return false.\n  if txt:sub(-#txt,\
    \ -1) == '0' then return false end\n  -- Check that txt does not end with a letter.\n\
    \  -- If txt ends with a letter, return false.\n  local letters = {'a', 'b', 'c',\
    \ 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's',\
    \ 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  for _, c in ipairs(letters) do\n    if\
    \ txt:sub(-#c, -1) == c then return false end\n  end\n  -- Check that txt does\
    \ not end with a letter.\n  -- If txt ends with a letter, return false.\n  local\
    \ letters = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',\
    \ 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  for _, c\
    \ in ipairs(letters) do\n    if txt:sub(-#c, -1) == c then return false end\n\
    \  end\n  -- Check that txt does not end with a letter.\n  -- If txt ends with\
    \ a letter, return false.\n  local letters = {'a', 'b', 'c', 'd', 'e', 'f', 'g',\
    \ 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w',\
    \ 'x', 'y', 'z'}\n  for _, c in ipairs(letters) do\n    if txt:sub(-#c, -1) ==\
    \ c then return false end\n  end\n  -- Check that txt does not end with a letter.\n\
    \  -- If txt ends with a letter, return false.\n  local letters = {'a', 'b', 'c',\
    \ 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's',\
    \ 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  for _, c in ipair", "  local last_char\
    \ = txt:sub(1, #txt)\n  return last_char:match('^[%a%A]+$')\nend", "  local last_char\
    \ = string.sub(txt, -1)\n  return last_char == ' ' or last_char ~= ' ' and last_char\
    \ ~= '-' and last_char ~= '_'\nend", "  -- Check for empty string\n  if txt ==\
    \ '' then return false end", "  local last_char = txt:sub(1, #txt)\n  local last_char_is_a_letter\
    \ = last_char:match('^[%a%p]+$')\n  return last_char_is_a_letter\nend", "  local\
    \ last_char = string.sub(txt, -1)\n  local last_char_lower = string.lower(last_char)\n\
    \  local last_char_upper = string.upper(last_char)\n  local last_char_lower =\
    \ string.lower(last_char_lower)\n  local last_char_upper = string.upper(last_char_upper)\n\
    \  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_", "  -- Check if the last\
    \ character is a letter\n  -- Note: txt:sub(1,1) returns first character of a\
    \ string\n  -- Note: txt:sub(#txt) returns last character of a string\n  return\
    \ txt:sub(1,1) ~= ' ' and txt:sub(#txt) ~= ' ' and\n         txt:sub(#txt,1) ~=\
    \ '\\a'\nend", "  local last_char = string.sub(txt, -1)\n  return last_char ==\
    \ ' ' or last_char == ',' or last_char == '.' or last_char == '?' or last_char\
    \ == '!'\nend", "   if txt == '' then return false end\n   local last_char = txt:sub(1,\
    \ #txt)\n   return last_char == ' ' or last_char == '.' or last_char == ',' or\
    \ last_char == '?' or last_char == '!' or last_char == ';' or last_char == '-'\
    \ or last_char == '_' or last_char == '[' or last_char == ']' or last_char ==\
    \ '{' or last_char == '}' or last_char == '(' or last_char == ')' or last_char\
    \ == '\"' or last_char == '\\'' or last_char == '\\\\' or last_char == '@' or\
    \ last_char == '$' or last_char == '%' or last_char == '^' or last_char == '&'\
    \ or last_char == '*' or last_char == '(' or last_char == ')' or last_char ==\
    \ '+' or last_char == '=' or last_char == '-' or last_char == '_' or last_char\
    \ == '[' or last_char == ']' or last_char == '{' or last_char == '}' or last_char\
    \ == '(' or last_char == ')' or last_char == '\"' or last_char == '\\'' or last_char\
    \ == '\\\\' or last_char == '@' or last_char == '$' or last_char == '%' or last_char\
    \ == '^' or last_char == '&' or last_char == '*' or last_char == '(' or last_char\
    \ == ')' or last_char == '+' or last_char == '=' or last_char == '-' or last_char\
    \ == '_' or last_char == '[' or last_char == ']' or last_char == '{' or last_char\
    \ == '}' or last_char == '(' or last_char == ')' or last_char == '\"' or last_char\
    \ == '\\'' or last_char == '\\\\' or last_char == '@' or last_char == '$' or last_char\
    \ == '%' or last_char == '^' or last_char == '&' or last_char == '*' or last_char\
    \ == '(' or last_char == ')' or last_char == '+' or last_char == '=' or last_char\
    \ == '-' or last_char == '_' or last_char == '[' or last_char == ']' or last_char\
    \ == '{' or last_char == '}' or last_char == '(' or last_char == ')' or last_char\
    \ == '\"' or last_char == '\\'' or last_char == '\\\\' or last_char == '@' or\
    \ last_char == '$' or last_char == '%' or last_char == '^' or last_char == '&'\
    \ or last_char == '*' or last_char == '(' or last_char == ')' or last_char ==\
    \ '+' or last_char == '=' or last_char == '-' or last_char == '_' or last_char\
    \ == '[' or last_char == ']' or last_char == '{' or last_char == '}' or last_char\
    \ == '(' or last_char == ')", "  local last_char = txt:sub(1, #txt)\n  return\
    \ last_char == ' ' or last_char:match('[a-zA-Z]')\nend", "  local last_char =\
    \ string.sub(txt, -1)\n  local is_letter = last_char ~= ' ' and last_char ~= '?'\
    \ and last_char ~= '!' and last_char ~= '$'\n  return not is_letter\nend", " \
    \ local last_char = string.sub(txt, -1)\n  return last_char == ' ' or last_char\
    \ == ',' or last_char == '.' or last_char == ';' or last_char == '?' or last_char\
    \ == '!' or last_char == '-' or last_char == '_' or last_char == '/' or last_char\
    \ == '[' or last_char == ']' or last_char == '(' or last_char == ')' or last_char\
    \ == '{' or last_char == '}' or last_char == '.' or last_char == ':' or last_char\
    \ == '\"' or last_char == '\\'' or last_char == '\\\\' or last_char == '@' or\
    \ last_char == '$' or last_char == '%' or last_char == '^' or last_char == '&'\
    \ or last_char == '*' or last_char == '(' or last_char == ')' or last_char ==\
    \ '+' or last_char == '-' or last_char == '=' or last_char == '[' or last_char\
    \ == ']' or last_char == '{' or last_char == '}' or last_char == '|' or last_char\
    \ == '~' or last_char == '`' or last_char == '<' or last_char == '>' or last_char\
    \ == '?' or last_char == '!' or last_char == '.' or last_char == ',' or last_char\
    \ == ';' or last_char == '.' or last_char == '/' or last_char == '[' or last_char\
    \ == ']' or last_char == '(' or last_char == ')' or last_char == '{' or last_char\
    \ == '}' or last_char == '.' or last_char == ':' or last_char == '\"' or last_char\
    \ == '\\'' or last_char == '\\\\' or last_char == '@' or last_char == '$' or last_char\
    \ == '%' or last_char == '^' or last_char == '&' or last_char == '*' or last_char\
    \ == '(' or last_char == ')' or last_char == '+' or last_char == '-' or last_char\
    \ == '=' or last_char == '[' or last_char == ']' or last_char == '{' or last_char\
    \ == '}' or last_char == '|' or last_char == '~' or last_char == '`' or last_char\
    \ == '<' or last_char == '>' or last_char == '?' or last_char == '!' or last_char\
    \ == '.' or last_char == ',' or last_char == ';' or last_char == '.' or last_char\
    \ == '/' or last_char == '[' or last_char == ']' or last_char == '(' or last_char\
    \ == ')' or last_char == '{' or last_char == '}' or last_char == '|' or last_char\
    \ == '~' or last_char == '`' or last_char == '<' or last_char == '>' or last_char\
    \ == '?' or last_char == '!' or last_char == '.' or last_char == ',' or last_",
  "  local last_char = string.sub(txt, -1)\n  local last_char_lower = string.lower(last_char)\n\
    \  local last_char_upper = string.upper(last_char)\n  local last_char_lower =\
    \ string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_", "   if txt == '' then\n \
    \     return false\n   end\n   local last_char = txt:sub(1, #txt)\n   if last_char\
    \ == '' then\n      return false\n   end\n   if last_char:sub(1, 1) == 'a' or\
    \ last_char:sub(1, 1) == 'e' or last_char:sub(1, 1) == 'i' or last_char:sub(1,\
    \ 1) == 'o' or last_char:sub(1, 1) == 'u' then\n      return false\n   end\n \
    \  return true\nend", "  local last_char = string.sub(txt, -1, 1)\n  local is_letter\
    \ = string.byte(last_char) ~= nil\n  local is_word = string.sub(txt, 1, string.len(txt)\
    \ - 1) ~= nil\n  return is_letter and not is_word\nend", "  local last_char =\
    \ string.sub(txt, -1)\n  local last_char_lower = string.lower(last_char)\n  local\
    \ last_char_upper = string.upper(last_char)\n  local last_char_not_in_word = string.sub(txt,\
    \ 1, string.len(txt) - 1)\n  local last_char_not_in_word_lower = string.lower(last_char_not_in_word)\n\
    \  local last_char_not_in_word_upper = string.upper(last_char_not_in_word)\n \
    \ local last_char_not_in_word_not_in_word = string.sub(txt, 1, string.len(txt)\
    \ - 2)\n  local last_char_not_in_word_not_in_word_lower = string.lower(last_char_not_in_word_not_in_word)\n\
    \  local last_char_not_in_word_not_in_word_upper = string.upper(last_char_not_in_word_not_in_word)\n\
    \  local last_char_not_in_word_not_in_word_not_in_word = string.sub(txt, 1, string.len(txt)\
    \ - 3)\n  local last_char_not_in_word_not_in_word_not_in_word_lower = string.lower(last_char_not_in_word_not_in_word_not_in_word)\n\
    \  local last_char_not_in_word_not_in_word_not_in_word_upper = string.upper(last_char_not_in_word_not_in_word_not_in_word)\n\
    \  local last_char_not_in_word_not_in_word_not_in_word_not_in_word = string.sub(txt,\
    \ 1, string.len(txt) - 4)\n  local last_char_not_in_word_not_in_word_not_in_word_not_in_word_lower\
    \ = string.lower(last_char_not_in_word_not_in_word_not_in_word_not_in_word)\n\
    \  local last_char_not_in_word_not_in_word_not_in_word_not_in_word_upper = string.upper(last_char_not_in_word_not_in_word_not_in_word_not_in_word)\n\
    \  local last_char_not_in_word_not_in_word_not_in_word_not_in_word_not_in_word\
    \ = string.sub(txt, 1, string.len(txt) - 5)\n  local last_char_not_in_word_not_in_word_not_in_word_not_in_word_not_in_word_lower\
    \ = string.lower(last_char_not_in_word_not_in_word_not_in_word_not_in_word_not_in_word)\n\
    \  local last_char_not_in_word_not_in_word_not_in_word_not_in_word_not_in_word_upper\
    \ = string.upper(last_char_not_in_word_not_in_word_not_in_word_not_in_word_not_in_word)\n\
    \  local last_char_not_in_word_not_in_word_not_in_word_not_in_word_not_in_word_not_in_word\
    \ = string.sub(txt, 1, string.len(txt) - 6)\n  local last_char_not_in_word_not_in_word_not_in_word_not_in_word_not_in_word_not_in_word_lower\
    \ = string.lower(last_char_not_in_word_not_in_word_not_in_word_not_", "  local\
    \ last_char = string.sub(txt, -1)\n  local last_char_upper = string.upper(last_char)\n\
    \  local last_char_lower = string.lower(last_char)\n  local last_char_not_a_word\
    \ = last_char_upper ~= last_char_lower and\n    (last_char_upper ~= 'A' or last_char_upper\
    \ ~= 'E')\n  return last_char_not_a_word\nend", "  local last_char = txt:sub(1,\
    \ #txt)\n  return last_char:match('^[%w]$')\nend", "  local last_char = string.sub(txt,\
    \ -1, 1)\n  return last_char ~= ' ' and last_char ~= '-' and last_char ~= '_'\
    \ and last_char ~= '/'\nend", "   -- Check for empty string.\n   if txt == ''\
    \ then\n      return false\n   end", "  local last_char = string.sub(txt, -1,\
    \ 1)\n  return last_char == 'a' or last_char == 'e' or last_char == 'i' or last_char\
    \ == 'o' or last_char == 'u'\nend", "  -- Check for empty string\n  if txt ==\
    \ '' then\n    return false\n  end", "  local last_char = txt:sub(1,1)\n  return\
    \ last_char ~= ' ' and last_char ~= '-' and last_char ~= '_'\nend", "  local last_char\
    \ = string.sub(txt, #txt, -1)\n  return last_char == ' ' or last_char == '.' or\
    \ last_char == ',' or last_char == '?' or last_char == '!' or last_char == '-'\
    \ or last_char == '_' or last_char == '%' or last_char == '^' or last_char ==\
    \ '&' or last_char == '*' or last_char == '(' or last_char == ')' or last_char\
    \ == '[' or last_char == ']' or last_char == '{' or last_char == '}' or last_char\
    \ == '\\\\' or last_char == '|' or last_char == '<' or last_char == '>' or last_char\
    \ == '\\'' or last_char == '\"' or last_char == '~' or last_char == '`' or last_char\
    \ == '-' or last_char == '_' or last_char == '%' or last_char == '^' or last_char\
    \ == '&' or last_char == '*' or last_char == '(' or last_char == ')' or last_char\
    \ == '[' or last_char == ']' or last_char == '{' or last_char == '}' or last_char\
    \ == '\\\\' or last_char == '|' or last_char == '<' or last_char == '>' or last_char\
    \ == '\\'' or last_char == '\"' or last_char == '~' or last_char == '`' or last_char\
    \ == '-' or last_char == '_' or last_char == '%' or last_char == '^' or last_char\
    \ == '&' or last_char == '*' or last_char == '(' or last_char == ')' or last_char\
    \ == '[' or last_char == ']' or last_char == '{' or last_char == '}' or last_char\
    \ == '\\\\' or last_char == '|' or last_char == '<' or last_char == '>' or last_char\
    \ == '\\'' or last_char == '\"' or last_char == '~' or last_char == '`' or last_char\
    \ == '-' or last_char == '_' or last_char == '%' or last_char == '^' or last_char\
    \ == '&' or last_char == '*' or last_char == '(' or last_char == ')' or last_char\
    \ == '[' or last_char == ']' or last_char == '{' or last_char == '}' or last_char\
    \ == '\\\\' or last_char == '|' or last_char == '<' or last_char == '>' or last_char\
    \ == '\\'' or last_char == '\"' or last_char == '~' or last_char == '`' or last_char\
    \ == '-' or last_char == '_' or last_char == '%' or last_char == '^' or last_char\
    \ == '&' or last_char == '*' or last_char == '(' or last_char == ')' or last_char\
    \ == '[' or last_char == ']' or last_char == '{' or last_char == '}' or last_char\
    \ == '\\\\' or last_char == '|' or last_char == '", "   -- Check for empty string\n\
    \   if txt == '' then return false end\n   -- Check for non-alphabetical characters\n\
    \   if string.sub(txt, string.len(txt)-1, string.len(txt)) == txt then return\
    \ false end\n   -- Check for alphabetical characters\n   if string.sub(txt, string.len(txt)-1,\
    \ string.len(txt)) == string.sub(txt, 1, string.len(txt)-1) then return true end\n\
    \   return false\nend", "  -- Check if the last character is a letter\n  -- If\
    \ not, return false\n  -- If yes, check if the last character is a part of a word\n\
    \  -- If not, return false\n  -- If yes, return true\n  -- If no, return false\n\
    \  -- If no, return false\n  -- If no, return false\n  -- If no, return false\n\
    \  -- If no, return false\n  -- If no, return false\n  -- If no, return false\n\
    \  -- If no, return false\n  -- If no, return false\n  -- If no, return false\n\
    \  -- If no, return false\n  -- If no, return false\n  -- If no, return false\n\
    \  -- If no, return false\n  -- If no, return false\n  -- If no, return false\n\
    \  -- If no, return false\n  -- If no, return false\n  -- If no, return false\n\
    \  -- If no, return false\n  -- If no, return false\n  -- If no, return false\n\
    \  -- If no, return false\n  -- If no, return false\n  -- If no, return false\n\
    \  -- If no, return false\n  -- If no, return false\n  -- If no, return false\n\
    \  -- If no, return false\n  -- If no, return false\n  -- If no, return false\n\
    \  -- If no, return false\n  -- If no, return false\n  -- If no, return false\n\
    \  -- If no, return false\n  -- If no, return false\n  -- If no, return false\n\
    \  -- If no, return false\n  -- If no, return false\n  -- If no, return false\n\
    \  -- If no, return false\n  -- If no, return false\n  -- If no, return false\n\
    \  -- If no, return false\n  -- If no, return false\n  -- If no, return false\n\
    \  -- If no, return false\n  -- If no, return false\n  -- If no, return false\n\
    \  -- If no, return false\n  -- If no, return false\n  -- If no, return false\n\
    \  -- If no, return false\n  -- If no, return false\n  -- If no, return false\n\
    \  -- If no, return false\n  -- If no, return false\n  -- If no, return false\n\
    \  -- If no, return false\n  -- If no, return false\n  -- If no, return false\n\
    \  -- If no, return false\n  -- If no, return false\n  -- If no, return false\n\
    \  -- If no, return false\n  -- If no, return false\n  -- If no, return false\n",
  "  local last_char = txt:sub(1, #txt)\n  local is_letter = last_char:match('^[%a%A]+$')\n\
    \  return not is_letter\nend", "    local last_char = string.sub(txt, -1, 1)\n\
    \    local last_char_is_a_letter = last_char ~= nil and string.byte(last_char)\
    \ ~= nil\n    local last_char_is_not_a_word = last_char_is_a_letter and string.sub(txt,\
    \ -1, 1) ~= nil\n    return last_char_is_a_letter and not last_char_is_not_a_word\n\
    end", "  local last_char = txt:sub(1,1)\n  local is_letter = last_char ~= '\\\
    0' and last_char ~= ' ' and last_char ~= '-' and last_char ~= '_' and last_char\
    \ ~= '\\''\n  return not is_letter\nend", "  local last_char = txt:sub(1, #txt)\n\
    \  return last_char:match('^[%w]$')\nend", "   if txt == '' then return false\
    \ end\n   local last_char = txt:sub(1, #txt)\n   if last_char == '' then return\
    \ false end\n   if last_char:match('[a-zA-Z]') then return false end\n   return\
    \ true\nend", "  return string.sub(txt, -1, 1) ~= ' ' and string.sub(txt, -1,\
    \ 1) ~= '-' and string.sub(txt, -1, 1) ~= '_'\nend", "  local last_char = string.sub(txt,\
    \ -1)\n  local last_char_lower = string.lower(last_char)\n  local last_char_upper\
    \ = string.upper(last_char)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_", "  local last_char = txt:sub(1, #txt)\n  local last_char_lower\
    \ = last_char:lower()\n  local last_char_upper = last_char:upper()\n  local last_char_lower\
    \ = last_char_lower:gsub('%w+', '')\n  local last_char_upper = last_char_upper:gsub('%w+',\
    \ '')\n  local last_char_lower = last_char_lower:gsub('%w+', '')\n  local last_char_upper\
    \ = last_char_upper:gsub('%w+', '')\n  local last_char_lower = last_char_lower:gsub('%w+',\
    \ '')\n  local last_char_upper = last_char_upper:gsub('%w+', '')\n  local last_char_lower\
    \ = last_char_lower:gsub('%w+', '')\n  local last_char_upper = last_char_upper:gsub('%w+',\
    \ '')\n  local last_char_lower = last_char_lower:gsub('%w+', '')\n  local last_char_upper\
    \ = last_char_upper:gsub('%w+', '')\n  local last_char_lower = last_char_lower:gsub('%w+',\
    \ '')\n  local last_char_upper = last_char_upper:gsub('%w+', '')\n  local last_char_lower\
    \ = last_char_lower:gsub('%w+', '')\n  local last_char_upper = last_char_upper:gsub('%w+',\
    \ '')\n  local last_char_lower = last_char_lower:gsub('%w+', '')\n  local last_char_upper\
    \ = last_char_upper:gsub('%w+', '')\n  local last_char_lower = last_char_lower:gsub('%w+',\
    \ '')\n  local last_char_upper = last_char_upper:gsub('%w+', '')\n  local last_char_lower\
    \ = last_char_lower:gsub('%w+', '')\n  local last_char_upper = last_char_upper:gsub('%w+',\
    \ '')\n  local last_char_lower = last_char_lower:gsub('%w+', '')\n  local last_char_upper\
    \ = last_char_upper:gsub('%w+', '')\n  local last_char_lower = last_char_lower:gsub('%w+',\
    \ '')\n  local last_char_upper = last_char_upper:gsub('%w+', '')\n  local last_char_lower\
    \ = last_char_lower:gsub('%w+', '')\n  local last_char_upper = last_char_upper:gsub('%w+',\
    \ '')\n  local last_char_lower = last_char_lower:gsub('%w+', '')\n  local last_char_upper\
    \ = last_char_upper:gsub('%w+', '')\n  local ", "  local last_char = txt:sub((#txt),\
    \ 1)\n  return last_char:match('^[%w]$')\nend", "    local last_char = string.sub(txt,\
    \ -1)\n    local last_char_lower = string.lower(last_char)\n    return last_char_lower\
    \ ~= last_char and\n           last_char_lower ~= 'w' and\n           last_char_lower\
    \ ~= 's'\nend", "  local last_char = string.sub(txt, -1)\n  local last_char_lower\
    \ = string.lower(last_char)\n  local last_char_upper = string.upper(last_char)\n\
    \  local last_char_lower = string.lower(last_char_lower)\n  local last_char_upper\
    \ = string.upper(last_char_upper)\n  local last_char_upper = string.sub(last_char_upper,\
    \ 1, -1)\n  local last_char_lower = string.sub(last_char_lower, 1, -1)\n  local\
    \ last_char_upper = string.sub(last_char_upper, 1, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, 1, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ 1, -1)\n  local last_char_lower = string.sub(last_char_lower, 1, -1)\n  local\
    \ last_char_upper = string.sub(last_char_upper, 1, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, 1, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ 1, -1)\n  local last_char_lower = string.sub(last_char_lower, 1, -1)\n  local\
    \ last_char_upper = string.sub(last_char_upper, 1, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, 1, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ 1, -1)\n  local last_char_lower = string.sub(last_char_lower, 1, -1)\n  local\
    \ last_char_upper = string.sub(last_char_upper, 1, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, 1, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ 1, -1)\n  local last_char_lower = string.sub(last_char_lower, 1, -1)\n  local\
    \ last_char_upper = string.sub(last_char_upper, 1, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, 1, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ 1, -1)\n  local last_char_lower = string.sub(last_char_lower, 1, -1)\n  local\
    \ last_char_upper = string.sub(last_char_upper, 1, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, 1, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ 1, -1)\n  local last_char_lower = string.sub(last_char_lower, 1, -1)\n  local\
    \ last_char_upper = string.sub(last_char_upper, 1, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, 1, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ 1, -1)\n  local last_char_lower = string.sub(last_char_lower, 1, -1)\n  local\
    \ last_char_upper = string.sub(last_char_upper, 1, -1)\n  local last_", "  local\
    \ last_char = txt:sub(1, #txt)\n  local is_letter = last_char:match('^[%a%A]+$')\n\
    \  return not is_letter\nend", "   -- Check for empty string.\n   if txt == ''\
    \ then\n      return false\n   end\n   -- Check for no characters.\n   if #txt\
    \ == 0 then\n      return false\n   end\n   -- Check for only spaces.\n   if txt:sub(1,\
    \ 1) == ' ' then\n      return false\n   end\n   -- Check for only alphabetical\
    \ characters.\n   if txt:sub(1, 1) ~= string.char(string.byte('A') + string.byte('a')\
    \ ..\n      string.byte('Z') + string.byte('z')) then\n      return false\n  \
    \ end\n   -- Check for only words with one character.\n   if string.sub(txt, -1,\
    \ 1) ~= ' ' then\n      return false\n   end\n   return true\nend", "  local last_char\
    \ = txt:sub(1, #txt)\n  return last_char:match('^[%a%p]+$') ~= nil\nend", "  \
    \ local last_char = string.sub(txt, #txt, 1)\n   return last_char ~= '' and\n\
    \          last_char ~= ' ' and\n          last_char ~= '-' and\n          last_char\
    \ ~= '_' and\n          last_char ~= '!' and\n          last_char ~= '?' and\n\
    \          last_char ~= '$' and\n          last_char ~= '&' and\n          last_char\
    \ ~= '(' and last_char ~= ')' and\n          last_char ~= '[' and last_char ~=\
    \ ']' and\n          last_char ~= '{' and last_char ~= '}' and\n          last_char\
    \ ~= '<' and last_char ~= '>' and\n          last_char ~= '|' and last_char ~=\
    \ '.' and\n          last_char ~= '?'\nend", "  local last_char = string.sub(txt,\
    \ -1)\n  local last_char_upper = string.upper(last_char)\n  local last_char_lower\
    \ = string.lower(last_char)\n  local last_char_not_a_word = last_char_upper ~=\
    \ last_char_lower and\n    last_char_upper ~= '-' and last_char_lower ~= '-'\n\
    \  return last_char_not_a_word\nend", "  -- Check for empty string\n  if txt ==\
    \ '' then return false end\n  -- Check for non-alphabetical character\n  if txt:sub(1,\
    \ 1) ~= string.char(string.byte(string.sub(txt, -1, 1))) then return false end\n\
    \  -- Check for word\n  local words = string.gsub(txt, ' ', '').split(' ')\n \
    \ for _, word in ipairs(words) do\n    if string.byte(string.sub(word, -1, 1))\
    \ == string.byte(string.sub(txt, -1, 1)) then\n      return false\n    end\n \
    \ end\n  return true\nend", "   local last_char = string.sub(txt, #txt, -1)\n\
    \   return (last_char == ' ' or last_char == '.' or last_char == '-' or last_char\
    \ == '_') and\n          not (string.find(txt, \"[^\" .. string.char(string.ascii_letters)\
    \ .. \"]\"))\nend", "  local last_char = string.sub(txt, -1)\n  local last_char_lower\
    \ = string.lower(last_char)\n  local last_char_upper = string.upper(last_char)\n\
    \  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_",
  "  local last_char = txt:sub(1, #txt)\n  return last_char:match('^[%a%p]+$') ~=\
    \ nil\nend", "  return string.sub(txt, -1, 1) ~= ' ' and string.sub(txt, -1, 1)\
    \ ~= '-' and string.sub(txt, -1, 1) ~= '_' and string.sub(txt, -1, 1) ~= '$' and\
    \ string.sub(txt, -1, 1) ~= '!' and string.sub(txt, -1, 1) ~= '#' and string.sub(txt,\
    \ -1, 1) ~= '$' and string.sub(txt, -1, 1) ~= '%' and string.sub(txt, -1, 1) ~=\
    \ '&' and string.sub(txt, -1, 1) ~= '(' and string.sub(txt, -1, 1) ~= ')' and\
    \ string.sub(txt, -1, 1) ~= '-' and string.sub(txt, -1, 1) ~= '=' and string.sub(txt,\
    \ -1, 1) ~= '[' and string.sub(txt, -1, 1) ~= ']' and string.sub(txt, -1, 1) ~=\
    \ '^' and string.sub(txt, -1, 1) ~= '~' and string.sub(txt, -1, 1) ~= '|' and\
    \ string.sub(txt, -1, 1) ~= '\\\\' and string.sub(txt, -1, 1) ~= '^' and string.sub(txt,\
    \ -1, 1) ~= '~' and string.sub(txt, -1, 1) ~= '|' and string.sub(txt, -1, 1) ~=\
    \ '\\\\' and string.sub(txt, -1, 1) ~= '^' and string.sub(txt, -1, 1) ~= '~' and\
    \ string.sub(txt, -1, 1) ~= '|' and string.sub(txt, -1, 1) ~= '\\\\' and string.sub(txt,\
    \ -1, 1) ~= '^' and string.sub(txt, -1, 1) ~= '~' and string.sub(txt, -1, 1) ~=\
    \ '|' and string.sub(txt, -1, 1) ~= '\\\\' and string.sub(txt, -1, 1) ~= '^' and\
    \ string.sub(txt, -1, 1) ~= '~' and string.sub(txt, -1, 1) ~= '|' and string.sub(txt,\
    \ -1, 1) ~= '\\\\' and string.sub(txt, -1, 1) ~= '^' and string.sub(txt, -1, 1)\
    \ ~= '~' and string.sub(txt, -1, 1) ~= '|' and string.sub(txt, -1, 1) ~= '\\\\\
    ' and string.sub(txt, -1, 1) ~= '^' and string.sub(txt, -1, 1) ~= '~' and string.sub(txt,\
    \ -1, 1) ~= '|' and string.sub(txt, -1, 1) ~= '\\\\' and string.sub(txt, -1, 1)\
    \ ~= '^' and string.sub(txt, -1, 1) ~= '~' and string.sub(txt, -1, 1) ~= '|' and\
    \ string.sub(txt, -1, 1) ~= '\\\\' and string.sub(txt, -1, 1) ~= '^' and string.sub(txt,\
    \ -1, 1) ~= '~' and string.sub(txt, -1, 1) ~= '|' and string.sub(txt, -1, 1) ~=\
    \ '\\\\' and string.", "  return string.sub(txt, -1, 1) ~= ' ' and string.sub(txt,\
    \ -1, 1) ~= '-' and string.sub(txt, -1, 1) ~= '_'\nend", "    local last_char\
    \ = txt:sub(1, #txt)\n    return last_char == ' ' or last_char == '.' or last_char\
    \ == '-' or last_char == '_' or last_char == '~' or last_char == '!' or last_char\
    \ == '?' or last_char == '%' or last_char == '^' or last_char == '&' or last_char\
    \ == '*' or last_char == '(' or last_char == ')' or last_char == '[' or last_char\
    \ == ']' or last_char == '{' or last_char == '}' or last_char == '|' or last_char\
    \ == '<' or last_char == '>' or last_char == '/' or last_char == '\\\\' or last_char\
    \ == '\"' or last_char == '\\'' or last_char == '`' or last_char == '=' or last_char\
    \ == '+' or last_char == '-' or last_char == '.' or last_char == '/' or last_char\
    \ == '\\\\' or last_char == '|' or last_char == '?' or last_char == '*' or last_char\
    \ == '-' or last_char == '_' or last_char == '~' or last_char == '!' or last_char\
    \ == '%' or last_char == '^' or last_char == '&' or last_char == '*' or last_char\
    \ == '(' or last_char == ')' or last_char == '[' or last_char == ']' or last_char\
    \ == '{' or last_char == '}' or last_char == '|' or last_char == '<' or last_char\
    \ == '>' or last_char == '/' or last_char == '\\\\' or last_char == '\"' or last_char\
    \ == '\\'' or last_char == '`' or last_char == '=' or last_char == '+' or last_char\
    \ == '-' or last_char == '.' or last_char == '/' or last_char == '\\\\' or last_char\
    \ == '|' or last_char == '?' or last_char == '*' or last_char == '-' or last_char\
    \ == '_' or last_char == '~' or last_char == '!' or last_char == '%' or last_char\
    \ == '^' or last_char == '&' or last_char == '*' or last_char == '(' or last_char\
    \ == ')' or last_char == '[' or last_char == ']' or last_char == '{' or last_char\
    \ == '}' or last_char == '|' or last_char == '<' or last_char == '>' or last_char\
    \ == '/' or last_char == '\\\\' or last_char == '\"' or last_char == '\\'' or\
    \ last_char == '`' or last_char == '=' or last_char == '+' or last_char == '-'\
    \ or last_char == '.' or last_char == '/' or last_char == '\\\\' or last_char\
    \ == '|' or last_char == '?' or last_char == '*' or last_char == '-' or last_char\
    \ == '_' or last_char == '~' or last_char == '!", "  local last_char = string.sub(txt,\
    \ -1)\n  local last_char_lower = string.lower(last_char)\n  local last_char_upper\
    \ = string.upper(last_char)\n  local last_char_not_a_word = last_char_lower ==\
    \ 'a' or last_char_lower == 'e' or last_char_lower == 'i' or last_char_lower ==\
    \ 'o' or last_char_lower == 'u'\n  local last_char_not_a_word_lower = last_char_lower\
    \ == 'a' or last_char_lower == 'e' or last_char_lower == 'i' or last_char_lower\
    \ == 'o' or last_char_lower == 'u'\n  local last_char_not_a_word_upper = last_char_upper\
    \ == 'A' or last_char_upper == 'E' or last_char_upper == 'I' or last_char_upper\
    \ == 'O' or last_char_upper == 'U'\n  return last_char_not_a_word and not last_char_not_a_word_lower\
    \ and not last_char_not_a_word_upper\nend", "  -- Check for empty string.\n  if\
    \ txt == '' then\n    return false\n  end\n  -- Check for only spaces.\n  if txt\
    \ == '  ' then\n    return false\n  end\n  -- Check for only alphabetical characters.\n\
    \  local last_char = txt:sub(1, #txt)\n  return last_char:match('^[%a]+$')\nend",
  "   if txt == '' then return false end\n   local last_char = txt:sub(1,1)\n   if\
    \ last_char == '' then return false end\n   if last_char ~= ' ' and last_char\
    \ ~= '-' and last_char ~= '_' then\n      return true\n   end\n   return false\n\
    end", "    local last_char = string.sub(txt, -1)\n    return last_char == ' '\
    \ or last_char ~= ' ' and last_char ~= '-' and last_char ~= '_'\nend", "  local\
    \ last_char = txt:sub(1,1)\n  local is_letter = last_char ~= '\\0' and last_char\
    \ ~= '\\' and last_char ~= ' ' and last_char ~= '-'\n  return is_letter and not\
    \ is_a_word(txt)\nend", "  local last_char = txt:sub(1, #txt)\n  return last_char:match('^[%w]$')\n\
    end", "  local last_char = txt:sub(1, #txt)\n  local last_char_lower = last_char:lower()\n\
    \  local last_char_upper = last_char:upper()\n  local last_char_lower = last_char_lower:gsub('%w+',\
    \ '')\n  local last_char_upper = last_char_upper:gsub('%w+', '')\n  local last_char_lower\
    \ = last_char_lower:gsub(' ', '')\n  local last_char_upper = last_char_upper:gsub('\
    \ ', '')\n  local last_char_lower = last_char_lower:gsub(' ', '')\n  local last_char_upper\
    \ = last_char_upper:gsub(' ', '')\n  local last_char_lower = last_char_lower:gsub('\
    \ ', '')\n  local last_char_upper = last_char_upper:gsub(' ', '')\n  local last_char_lower\
    \ = last_char_lower:gsub(' ', '')\n  local last_char_upper = last_char_upper:gsub('\
    \ ', '')\n  local last_char_lower = last_char_lower:gsub(' ', '')\n  local last_char_upper\
    \ = last_char_upper:gsub(' ', '')\n  local last_char_lower = last_char_lower:gsub('\
    \ ', '')\n  local last_char_upper = last_char_upper:gsub(' ', '')\n  local last_char_lower\
    \ = last_char_lower:gsub(' ', '')\n  local last_char_upper = last_char_upper:gsub('\
    \ ', '')\n  local last_char_lower = last_char_lower:gsub(' ', '')\n  local last_char_upper\
    \ = last_char_upper:gsub(' ', '')\n  local last_char_lower = last_char_lower:gsub('\
    \ ', '')\n  local last_char_upper = last_char_upper:gsub(' ', '')\n  local last_char_lower\
    \ = last_char_lower:gsub(' ', '')\n  local last_char_upper = last_char_upper:gsub('\
    \ ', '')\n  local last_char_lower = last_char_lower:gsub(' ', '')\n  local last_char_upper\
    \ = last_char_upper:gsub(' ', '')\n  local last_char_lower = last_char_lower:gsub('\
    \ ', '')\n  local last_char_upper = last_char_upper:gsub(' ', '')\n  local last_char_lower\
    \ = last_char_lower:gsub(' ', '')\n  local last_char_upper = last_char_upper:gsub('\
    \ ', '')\n  local last_char_lower = last_char_lower:gsub(' ', '')\n  local last_char_upper\
    \ = last_char_upper:gsub(' ', '')\n  local last_char_lower = last_char_lower:gsub('\
    \ ', '')\n  local last_char_upper = last_char_upper", "  local last_char = string.sub(txt,\
    \ -1)\n  local is_letter = string.byte(last_char) ~= nil\n  local is_word = string.sub(txt,\
    \ 1, string.len(txt) - 1) ~= nil\n  return is_letter and not is_word\nend", " \
    \ local last_char = string.sub(txt, -1)\n  local last_char_lower = string.lower(last_char)\n\
    \  local last_char_upper = string.upper(last_char)\n  local last_char_not_a_word\
    \ = last_char_lower == 'a' or last_char_lower == 'e' or last_char_lower == 'i'\
    \ or last_char_lower == 'o' or last_char_lower == 'u'\n  return last_char_not_a_word\n\
    end", "  -- Check for empty string.\n  if txt == '' then\n    return false\n \
    \ end\n  -- Check for only spaces.\n  if txt:sub(1, 1) == ' ' then\n    return\
    \ false\n  end\n  -- Check for only alphabetical characters.\n  for i = 1, #txt\
    \ do\n    if string.sub(txt, i, i) ~= string.sub(txt, i, i) then\n      return\
    \ false\n    end\n  end\n  return true\nend", "  local last_char = string.sub(txt,\
    \ -1, 1)\n  local last_char_lower = string.lower(last_char)\n  local last_char_upper\
    \ = string.upper(last_char)\n  local last_char_not_a_word = last_char_lower ==\
    \ 'a' or last_char_lower == 'e' or last_char_lower == 'i' or last_char_lower ==\
    \ 'o' or last_char_lower == 'u'\n  return last_char_not_a_word and string.sub(txt,\
    \ -1, 1) ~= '\\a'\nend", "  -- Check if the last character is a letter\n  -- Note:\
    \ txt is a group of characters separated by space\n  -- Note: \"word\" is a group\
    \ of characters separated by space\n  -- >>> check_if_last_char_is_a_letter('apple\
    \ pie')\n  -- false\n  -- >>> check_if_last_char_is_a_letter('apple pi e')\n \
    \ -- true\n  -- >>> check_if_last_char_is_a_letter('apple pi e ')\n  -- false\n\
    \  -- >>> check_if_last_char_is_a_letter('')\n  -- false\n  if txt == '' then\
    \ return false end\n  local last_char = txt:sub((#txt), 1)\n  -- Check if the\
    \ last character is a letter\n  -- Note: txt is a group of characters separated\
    \ by space\n  -- Note: \"word\" is a group of characters separated by space\n\
    \  -- >>> check_if_last_char_is_a_letter('apple pie')\n  -- false\n  -- >>> check_if_last_char_is_a_letter('apple\
    \ pi e')\n  -- true\n  -- >>> check_if_last_char_is_a_letter('apple pi e ')\n\
    \  -- false\n  -- >>> check_if_last_char_is_a_letter('')\n  -- false\n  return\
    \ last_char:match('^[%w]$')\nend", "  local last_char = txt:sub(1, #txt)\n  local\
    \ last_char_lower = last_char:lower()\n  local last_char_upper = last_char:upper()\n\
    \  local last_char_lower = last_char_lower:gsub('%w+', '')\n  local last_char_upper\
    \ = last_char_upper:gsub('%w+', '')\n  local last_char_lower = last_char_lower:gsub('\
    \ ', '')\n  local last_char_upper = last_char_upper:gsub(' ', '')\n  local last_char_lower\
    \ = last_char_lower:gsub('%w+', '')\n  local last_char_upper = last_char_upper:gsub('%w+',\
    \ '')\n  local last_char_lower = last_char_lower:gsub(' ', '')\n  local last_char_upper\
    \ = last_char_upper:gsub(' ', '')\n  local last_char_lower = last_char_lower:gsub('%w+',\
    \ '')\n  local last_char_upper = last_char_upper:gsub('%w+', '')\n  local last_char_lower\
    \ = last_char_lower:gsub(' ', '')\n  local last_char_upper = last_char_upper:gsub('\
    \ ', '')\n  local last_char_lower = last_char_lower:gsub('%w+', '')\n  local last_char_upper\
    \ = last_char_upper:gsub('%w+', '')\n  local last_char_lower = last_char_lower:gsub('\
    \ ', '')\n  local last_char_upper = last_char_upper:gsub(' ', '')\n  local last_char_lower\
    \ = last_char_lower:gsub('%w+', '')\n  local last_char_upper = last_char_upper:gsub('%w+',\
    \ '')\n  local last_char_lower = last_char_lower:gsub(' ', '')\n  local last_char_upper\
    \ = last_char_upper:gsub(' ', '')\n  local last_char_lower = last_char_lower:gsub('%w+',\
    \ '')\n  local last_char_upper = last_char_upper:gsub('%w+', '')\n  local last_char_lower\
    \ = last_char_lower:gsub(' ', '')\n  local last_char_upper = last_char_upper:gsub('\
    \ ', '')\n  local last_char_lower = last_char_lower:gsub('%w+', '')\n  local last_char_upper\
    \ = last_char_upper:gsub('%w+', '')\n  local last_char_lower = last_char_lower:gsub('\
    \ ', '')\n  local last_char_upper = last_char_upper:gsub(' ', '')\n  local last_char_lower\
    \ = last_char_lower:gsub('%w+', '')\n  local last_char_upper = last_char_upper:gsub('",
  "  local last_char = string.sub(txt, -1)\n  return last_char == ' ' or last_char\
    \ == '.' or last_char == ',' or last_char == '?' or last_char == '!' or last_char\
    \ == ';' or last_char == ':' or last_char == '-' or last_char == '_' or last_char\
    \ == '(' or last_char == ')' or last_char == '[' or last_char == ']' or last_char\
    \ == '{' or last_char == '}' or last_char == '\"' or last_char == '\\'' or last_char\
    \ == '\\\\' or last_char == '@' or last_char == '$' or last_char == '%' or last_char\
    \ == '^' or last_char == '&' or last_char == '*' or last_char == '(' or last_char\
    \ == ')' or last_char == '+' or last_char == '-' or last_char == '=' or last_char\
    \ == '|' or last_char == '~' or last_char == '`' or last_char == '<' or last_char\
    \ == '>' or last_char == '?' or last_char == '!' or last_char == '.' or last_char\
    \ == ',' or last_char == ';' or last_char == ':' or last_char == '-' or last_char\
    \ == '_' or last_char == '(' or last_char == ')' or last_char == '[' or last_char\
    \ == ']' or last_char == '{' or last_char == '}' or last_char == '\"' or last_char\
    \ == '\\'' or last_char == '\\\\' or last_char == '@' or last_char == '$' or last_char\
    \ == '%' or last_char == '^' or last_char == '&' or last_char == '*' or last_char\
    \ == '(' or last_char == ')' or last_char == '+' or last_char == '-' or last_char\
    \ == '=' or last_char == '|' or last_char == '~' or last_char == '`' or last_char\
    \ == '<' or last_char == '>' or last_char == '?' or last_char == '!' or last_char\
    \ == '.' or last_char == ',' or last_char == ';' or last_char == ':' or last_char\
    \ == '-' or last_char == '_' or last_char == '(' or last_char == ')' or last_char\
    \ == '[' or last_char == ']' or last_char == '{' or last_char == '}' or last_char\
    \ == '\"' or last_char == '\\'' or last_char == '\\\\' or last_char == '@' or\
    \ last_char == '$' or last_char == '%' or last_char == '^' or last_char == '&'\
    \ or last_char == '*' or last_char == '(' or last_char == ')' or last_char ==\
    \ '+' or last_char == '-' or last_char == '=' or last_char == '|' or last_char\
    \ == '~' or last_char == '`' or last_char == '<' or last_char == '>' or last_",
  "   local last_char = txt:sub((#txt), 1)\n   return last_char == ' ' or last_char\
    \ == '.' or last_char == ',' or last_char == '?' or last_char == '!' or last_char\
    \ == ';' or last_char == '-' or last_char == '_' or last_char == '/' or last_char\
    \ == '[' or last_char == ']' or last_char == '{' or last_char == '}' or last_char\
    \ == '(' or last_char == ')' or last_char == '|' or last_char == '\"' or last_char\
    \ == '\\'' or last_char == '\\\\' or last_char == '@' or last_char == '^' or last_char\
    \ == '~' or last_char == '`' or last_char == '!' or last_char == '%' or last_char\
    \ == '&' or last_char == '*' or last_char == '+' or last_char == '-' or last_char\
    \ == '.' or last_char == '/' or last_char == '0' or last_char == '1' or last_char\
    \ == '2' or last_char == '3' or last_char == '4' or last_char == '5' or last_char\
    \ == '6' or last_char == '7' or last_char == '8' or last_char == '9' or last_char\
    \ == 'a' or last_char == 'b' or last_char == 'c' or last_char == 'd' or last_char\
    \ == 'e' or last_char == 'f' or last_char == 'g' or last_char == 'h' or last_char\
    \ == 'i' or last_char == 'j' or last_char == 'k' or last_char == 'l' or last_char\
    \ == 'm' or last_char == 'n' or last_char == 'o' or last_char == 'p' or last_char\
    \ == 'q' or last_char == 'r' or last_char == 's' or last_char == 't' or last_char\
    \ == 'u' or last_char == 'v' or last_char == 'w' or last_char == 'x' or last_char\
    \ == 'y' or last_char == 'z' or last_char == 'A' or last_char == 'B' or last_char\
    \ == 'C' or last_char == 'D' or last_char == 'E' or last_char == 'F' or last_char\
    \ == 'G' or last_char == 'H' or last_char == 'I' or last_char == 'J' or last_char\
    \ == 'K' or last_char == 'L' or last_char == 'M' or last_char == 'N' or last_char\
    \ == 'O' or last_char == 'P' or last_char == 'Q' or last_char == 'R' or last_char\
    \ == 'S' or last_char == 'T' or last_char == 'U' or last_char == 'V' or last_char\
    \ == 'W' or last_char == 'X' or last_char == 'Y' or last_char == 'Z' or last_char\
    \ == '0' or last_char == '1' or last_char == '2' or last_char == '3' or last_char\
    \ == '4' or last_char == '5' or last_char == '6", "  -- Check for empty string\n\
    \  if txt == '' then return false end\n  -- Check for non-alphabetical character\n\
    \  if txt:sub(1, 1) ~= string.char(string.byte('a')) then return false end\n \
    \ -- Check for word\n  local words = string.gsub(txt, '[^ ]+', ' ')\n  -- Check\
    \ for last character in word\n  if words[#words] ~= string.sub(words, #words -\
    \ 1) then return false end\n  return true\nend", "  local last_char = txt:sub(1,\
    \ #txt)\n  return last_char == ' ' or last_char:match('[A-Za-z]')\nend", "  local\
    \ last_char = string.sub(txt, -1)\n  local last_char_lower = string.lower(last_char)\n\
    \  local last_char_upper = string.upper(last_char)\n  local last_char_lower =\
    \ string.lower(last_char_lower)\n  local last_char_upper = string.upper(last_char_upper)\n\
    \  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_", "  return txt:sub(1,\
    \ #txt) ~= ' ' and txt:sub((#txt - 1), #txt) ~= '-' and txt:sub((#txt - 1), #txt)\
    \ ~= '_'\nend", "  local last_char = string.sub(txt, -1)\n  local is_letter =\
    \ string.sub(txt, 1, 1) == 'a'\n  local is_word = string.sub(txt, 1, 1) ~= 'a'\n\
    \  return is_letter and not is_word and last_char ~= 'e'\nend", "  local last_char\
    \ = txt:sub(1, #txt)\n  local is_letter = last_char:match('^[%w]+$')\n  return\
    \ not is_letter\nend", "  local last_char = string.sub(txt, -1)\n  local is_letter\
    \ = string.byte(last_char) ~= nil\n  return not is_letter\nend", "  local last_char\
    \ = txt:sub(1, #txt)\n  return last_char:match('^[%w]$')\nend", "  -- Check if\
    \ the last character is a letter\n  -- If not, return false\n  if txt:sub(1, #txt)\
    \ ~= '' then\n    if txt:sub((#txt - 1), #txt) ~= ' ' then\n      return true\n\
    \    end\n  end\n  return false\nend", "   -- Check for empty string.\n   if txt\
    \ == '' then\n      return false\n   end\n   -- Check for empty string.\n   if\
    \ txt == '' then\n      return false\n   end\n   -- Check for empty string.\n\
    \   if txt == '' then\n      return false\n   end\n   -- Check for empty string.\n\
    \   if txt == '' then\n      return false\n   end\n   -- Check for empty string.\n\
    \   if txt == '' then\n      return false\n   end\n   -- Check for empty string.\n\
    \   if txt == '' then\n      return false\n   end\n   -- Check for empty string.\n\
    \   if txt == '' then\n      return false\n   end\n   -- Check for empty string.\n\
    \   if txt == '' then\n      return false\n   end\n   -- Check for empty string.\n\
    \   if txt == '' then\n      return false\n   end\n   -- Check for empty string.\n\
    \   if txt == '' then\n      return false\n   end\n   -- Check for empty string.\n\
    \   if txt == '' then\n      return false\n   end\n   -- Check for empty string.\n\
    \   if txt == '' then\n      return false\n   end\n   -- Check for empty string.\n\
    \   if txt == '' then\n      return false\n   end\n   -- Check for empty string.\n\
    \   if txt == '' then\n      return false\n   end\n   -- Check for empty string.\n\
    \   if txt == '' then\n      return false\n   end\n   -- Check for empty string.\n\
    \   if txt == '' then\n      return false\n   end\n   -- Check for empty string.\n\
    \   if txt == '' then\n      return false\n   end\n   -- Check for empty string.\n\
    \   if txt == '' then\n      return false\n   end\n   -- Check for empty string.\n\
    \   if txt == '' then\n      return false\n   end\n   -- Check for empty string.\n\
    \   if txt == '' then\n      return false\n   end\n   -- Check for empty string.\n\
    \   if txt == '' then\n      return false\n   end\n   -- Check for empty string.\n\
    \   if txt == '' then\n      return false\n   end\n   -- Check for empty string.\n\
    \   if txt == '' then\n      return false\n   end\n   -- Check for empty string.\n\
    \   if txt == '' then\n      return false\n   end\n   -- Check for empty string.\n\
    \   if txt == '' then\n      return false\n   end\n   -- Check for empty string.\n\
    \   if txt == '' then\n      return false\n   end\n   -- Check for empty string.\n\
    \   if txt == '' then\n      return false\n   end", "  local last_char = string.sub(txt,\
    \ -1)\n  local last_char_lower = string.lower(last_char)\n  local last_char_upper\
    \ = string.upper(last_char)\n  local last_char_lower = string.lower(last_char_lower)\n\
    \  local last_char_upper = string.upper(last_char_upper)\n  local last_char_lower\
    \ = string.lower(last_char_lower)\n  local last_char_upper = string.upper(last_char_upper)\n\
    \  local last_char_lower = string.lower(last_char_lower)\n  local last_char_upper\
    \ = string.upper(last_char_upper)\n  local last_char_lower = string.lower(last_char_lower)\n\
    \  local last_char_upper = string.upper(last_char_upper)\n  local last_char_lower\
    \ = string.lower(last_char_lower)\n  local last_char_upper = string.upper(last_char_upper)\n\
    \  local last_char_lower = string.lower(last_char_lower)\n  local last_char_upper\
    \ = string.upper(last_char_upper)\n  local last_char_lower = string.lower(last_char_lower)\n\
    \  local last_char_upper = string.upper(last_char_upper)\n  local last_char_lower\
    \ = string.lower(last_char_lower)\n  local last_char_upper = string.upper(last_char_upper)\n\
    \  local last_char_lower = string.lower(last_char_lower)\n  local last_char_upper\
    \ = string.upper(last_char_upper)\n  local last_char_lower = string.lower(last_char_lower)\n\
    \  local last_char_upper = string.upper(last_char_upper)\n  local last_char_lower\
    \ = string.lower(last_char_lower)\n  local last_char_upper = string.upper(last_char_upper)\n\
    \  local last_char_lower = string.lower(last_char_lower)\n  local last_char_upper\
    \ = string.upper(last_char_upper)\n  local last_char_lower = string.lower(last_char_lower)\n\
    \  local last_char_upper = string.upper(last_char_upper)\n  local last_char_lower\
    \ = string.lower(last_char_lower)\n  local last_char_upper = string.upper(last_char_upper)\n\
    \  local last_char_lower = string.lower(last_char_lower)\n  local last_char_upper\
    \ = string.upper(last_char_upper)\n  local last_char_lower = string.lower(last_char_lower)\n\
    \  local last_char_upper = string.upper(last_char_upper)\n  local last_char_lower\
    \ = string.lower(last_char_lower)\n  local last_char_upper = string.upper(last_char_upper)\n\
    \  local last_char_lower = string.lower(last_char_lower)\n  local last_char_upper\
    \ = string.", "   local last_char = string.sub(txt, -1)\n   if last_char == '\
    \ ' then\n      return true\n   elseif last_char ~= ' ' and last_char ~= '-' and\
    \ last_char ~= '_' then\n      return false\n   else\n      return true\n   end\n\
    end", "  local last_char = txt:sub(1, #txt)\n  return last_char:match('^[%w-]+$')\n\
    end", "   -- Check for empty string.\n   if txt == '' then\n      return false\n\
    \   end", "  local last_char = string.sub(txt, -1, 1)\n  return last_char ~= '\
    \ ' and last_char ~= '-' and last_char ~= '_' and last_char ~= '.' and last_char\
    \ ~= '!' and last_char ~= '?' and last_char ~= '$' and last_char ~= '%' and last_char\
    \ ~= '&' and last_char ~= '(' and last_char ~= ')' and last_char ~= '*' and last_char\
    \ ~= '+'\nend", "   if txt ~= '' then\n      local last_char = txt:sub(1, #txt)\n\
    \      local last_char_lower = last_char:lower()\n      local last_char_upper\
    \ = last_char:upper()\n      local last_char_lower = last_char_lower:gsub('%w+',\
    \ '', 1, 1)\n      local last_char_upper = last_char_upper:gsub('%w+', '', 1,\
    \ 1)\n      local last_char_lower = last_char_lower:gsub(' ', '', 1, 1)\n    \
    \  local last_char_upper = last_char_upper:gsub(' ', '', 1, 1)\n      local last_char_lower\
    \ = last_char_lower:gsub(' ', '', 1, 1)\n      local last_char_upper = last_char_upper:gsub('\
    \ ', '', 1, 1)\n      local last_char_lower = last_char_lower:gsub(' ', '', 1,\
    \ 1)\n      local last_char_upper = last_char_upper:gsub(' ', '', 1, 1)\n    \
    \  local last_char_lower = last_char_lower:gsub(' ', '', 1, 1)\n      local last_char_upper\
    \ = last_char_upper:gsub(' ', '', 1, 1)\n      local last_char_lower = last_char_lower:gsub('\
    \ ', '', 1, 1)\n      local last_char_upper = last_char_upper:gsub(' ', '', 1,\
    \ 1)\n      local last_char_lower = last_char_lower:gsub(' ', '', 1, 1)\n    \
    \  local last_char_upper = last_char_upper:gsub(' ', '', 1, 1)\n      local last_char_lower\
    \ = last_char_lower:gsub(' ', '', 1, 1)\n      local last_char_upper = last_char_upper:gsub('\
    \ ', '', 1, 1)\n      local last_char_lower = last_char_lower:gsub(' ', '', 1,\
    \ 1)\n      local last_char_upper = last_char_upper:gsub(' ', '', 1, 1)\n    \
    \  local last_char_lower = last_char_lower:gsub(' ', '', 1, 1)\n      local last_char_upper\
    \ = last_char_upper:gsub(' ', '', 1, 1)\n      local last_char_lower = last_char_lower:gsub('\
    \ ', '', 1, 1)\n      local last_char_upper = last_char_upper:gsub(' ', '', 1,\
    \ 1)\n      local last_char_lower = last_char_lower:gsub(' ', '', 1, 1)\n    \
    \  local last_char_upper = last_char_upper:gsub(' ', '', 1, 1)\n      local last_char_lower\
    \ = last_char_lower:gsub(' ', '', 1, 1)\n      local last_char_upper = last_char_upper:gsub('\
    \ ', '', 1, 1)\n      local last_char_lower = last_char_lower:gsub(' ', '', 1,\
    \ 1)\n      local last_char_upper = last_char_upper:gsub(' ', '', 1, 1)\n    \
    \  local last_char_lower = last_char_lower:gsub(' ', '', 1, 1)\n      local ",
  "  local last_char = txt:sub(1, #txt)\n  local is_letter = last_char:match('^[%w]$')\n\
    \  return not is_letter\nend", "   -- Check for empty string.\n   if txt == ''\
    \ then\n      return false\n   end", "  local last_char = string.sub(txt, -1)\n\
    \  local last_char_lower = string.lower(last_char)\n  local last_char_upper =\
    \ string.upper(last_char)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  local last_char_lower = string.sub(last_char_lower,\
    \ -1)\n  local last_char_upper = string.sub(last_char_upper, -1)\n  local last_char_lower\
    \ = string.sub(last_char_lower, -1)\n  local last_char_upper = string.sub(last_char_upper,\
    \ -1)\n  local last_", "  local last_char = string.sub(txt, -1)\n  local last_char_lower\
    \ = string.lower(last_char)\n  local last_char_upper = string.upper(last_char)\n\
    \  local last_char_not_a_word = last_char_lower == 'a' or last_char_lower == 'e'\
    \ or last_char_lower == 'i' or last_char_lower == 'o' or last_char_lower == 'u'\n\
    \  local last_char_not_a_word_or_space = last_char_upper == 'A' or last_char_upper\
    \ == 'E' or last_char_upper == 'I' or last_char_upper == 'O' or last_char_upper\
    \ == 'U'\n  return last_char_not_a_word or last_char_not_a_word_or_space\nend",
  "  local last_char = txt:sub((#txt), 1)\n  return last_char:gsub('[^A-Za-z]', '')\
    \ ~= ''\nend", "  local last_char = txt:sub(1, #txt)\n  return last_char == '\
    \ ' or last_char == ' ' or last_char == '.' or last_char == ',' or last_char ==\
    \ '?' or last_char == '!' or last_char == '-' or last_char == '_' or last_char\
    \ == '(' or last_char == ')' or last_char == '[' or last_char == ']' or last_char\
    \ == '{' or last_char == '}' or last_char == '|' or last_char == '\"' or last_char\
    \ == '\\'' or last_char == '\\\\' or last_char == '@' or last_char == '$' or last_char\
    \ == '%' or last_char == '^' or last_char == '&' or last_char == '*' or last_char\
    \ == '(' or last_char == ')' or last_char == '+' or last_char == '-' or last_char\
    \ == '_' or last_char == '.' or last_char == ',' or last_char == '<' or last_char\
    \ == '>' or last_char == '/' or last_char == '?' or last_char == '!' or last_char\
    \ == '.' or last_char == '?' or last_char == '!' or last_char == '.' or last_char\
    \ == '?' or last_char == '!' or last_char == '.' or last_char == '?' or last_char\
    \ == '!' or last_char == '.' or last_char == '?' or last_char == '!' or last_char\
    \ == '.' or last_char == '?' or last_char == '!' or last_char == '.' or last_char\
    \ == '?' or last_char == '!' or last_char == '.' or last_char == '?' or last_char\
    \ == '!' or last_char == '.' or last_char == '?' or last_char == '!' or last_char\
    \ == '.' or last_char == '?' or last_char == '!' or last_char == '.' or last_char\
    \ == '?' or last_char == '!' or last_char == '.' or last_char == '?' or last_char\
    \ == '!' or last_char == '.' or last_char == '?' or last_char == '!' or last_char\
    \ == '.' or last_char == '?' or last_char == '!' or last_char == '.' or last_char\
    \ == '?' or last_char == '!' or last_char == '.' or last_char == '?' or last_char\
    \ == '!' or last_char == '.' or last_char == '?' or last_char == '!' or last_char\
    \ == '.' or last_char == '?' or last_char == '!' or last_char == '.' or last_char\
    \ == '?' or last_char == '!' or last_char == '.' or last_char == '?' or last_char\
    \ == '!' or last_char == '.' or last_char == '?' or last_char == '!' or last_char\
    \ == '.' or last_char == '?' or last_char == '!' or last_char == '.", "  local\
    \ last_char = txt:sub(1, #txt)\n  return last_char:match('^[%w]$')\nend", "  \
    \ if txt == '' then\n      return false\n   end\n   local last_char = txt:sub(1,\
    \ #txt)\n   return last_char:match('^[%w]$')\nend", "  local last_char = txt:sub(1,\
    \ #txt)\n  return last_char:match('^[%a%A]+$')\nend", "  local last_char = txt:sub(1,\
    \ #txt)\n  local last_char_lower = last_char:lower()\n  local last_char_upper\
    \ = last_char:upper()\n  local last_char_lower = last_char_lower:gsub(\"[^A-Za-z]\"\
    , \"\")\n  local last_char_upper = last_char_upper:gsub(\"[^A-Za-z]\", \"\")\n\
    \  local last_char_lower = last_char_lower:gsub(\"^%l\", \"\")\n  local last_char_upper\
    \ = last_char_upper:gsub(\"^%l\", \"\")\n  local last_char_lower = last_char_lower:gsub(\"\
    %l\", \"\")\n  local last_char_upper = last_char_upper:gsub(\"%l\", \"\")\n  local\
    \ last_char_lower = last_char_lower:gsub(\"%l\", \"\")\n  local last_char_upper\
    \ = last_char_upper:gsub(\"%l\", \"\")\n  local last_char_lower = last_char_lower:gsub(\"\
    %l\", \"\")\n  local last_char_upper = last_char_upper:gsub(\"%l\", \"\")\n  local\
    \ last_char_lower = last_char_lower:gsub(\"%l\", \"\")\n  local last_char_upper\
    \ = last_char_upper:gsub(\"%l\", \"\")\n  local last_char_lower = last_char_lower:gsub(\"\
    %l\", \"\")\n  local last_char_upper = last_char_upper:gsub(\"%l\", \"\")\n  local\
    \ last_char_lower = last_char_lower:gsub(\"%l\", \"\")\n  local last_char_upper\
    \ = last_char_upper:gsub(\"%l\", \"\")\n  local last_char_lower = last_char_lower:gsub(\"\
    %l\", \"\")\n  local last_char_upper = last_char_upper:gsub(\"%l\", \"\")\n  local\
    \ last_char_lower = last_char_lower:gsub(\"%l\", \"\")\n  local last_char_upper\
    \ = last_char_upper:gsub(\"%l\", \"\")\n  local last_char_lower = last_char_lower:gsub(\"\
    %l\", \"\")\n  local last_char_upper = last_char_upper:gsub(\"%l\", \"\")\n  local\
    \ last_char_lower = last_char_lower:gsub(\"%l\", \"\")\n  local last_char_upper\
    \ = last_char_upper:gsub(\"%l\", \"\")\n  local last_char_lower = last_char_lower:gsub(\"\
    %l\", \"\")\n  local last_char_upper = last_char_upper:gsub(\"%l\", \"\")\n  local\
    \ last_char_lower = last_char_lower:gsub(\"%l\", \"\")\n  local last_char_upper\
    \ = last_char_upper:gsub(\"", "  local last_char = string.sub(txt, -1)\n  local\
    \ last_char_lower = string.lower(last_char)\n  local last_char_upper = string.upper(last_char)\n\
    \  local last_char_lower = string.sub(last_char_lower, -1)\n  local last_char_upper\
    \ = string.sub(last_char_upper, -1)\n  return last_char_lower == last_char_upper\
    \ and\n         last_char_lower ~= 'a' and\n         last_char_lower ~= 'e' and\n\
    \         last_char_lower ~= 'i' and\n         last_char_lower ~= 'o' and\n  \
    \       last_char_lower ~= 'u'\nend", "   -- Check for empty string.\n   if txt\
    \ == '' then\n      return false\n   end", "    local last_char = string.sub(txt,\
    \ -1)\n    return last_char == ' ' or last_char ~= ' ' and last_char ~= '-' and\
    \ last_char ~= '_'\nend", "  -- Check for empty string.\n  if txt == '' then\n\
    \    return false\n  end\n  -- Check for no characters.\n  if #txt < 1 then\n\
    \    return false\n  end\n  -- Check for only alphabetical characters.\n  for\
    \ i = 1, #txt - 1 do\n    if string.sub(txt, i, i) ~= string.sub(txt, i, i) then\n\
    \      return false\n    end\n  end\n  -- Check for only alphabetical characters\
    \ at the end.\n  if string.sub(txt, #txt, #txt) ~= string.sub(txt, #txt, #txt)\
    \ then\n    return false\n  end\n  return true\nend", "  local last_char = txt:sub(1,\
    \ #txt)\n  local last_char_lower = last_char:lower()\n  local last_char_upper\
    \ = last_char:upper()\n  local last_char_lower = last_char_lower:gsub('%w+', '\
    \ ')\n  local last_char_upper = last_char_upper:gsub('%w+', ' ')\n  return last_char_lower\
    \ ~= last_char_upper\nend", "  local last_char = string.sub(txt, #txt, -1)\n \
    \ return last_char ~= ' ' and last_char ~= '-' and last_char ~= '_'\nend", " \
    \   local last_char = txt:sub(1,1)\n    local is_a_letter = last_char ~= '\\0'\
    \ and last_char ~= ' ' and last_char ~= '-' and last_char ~= '/'\n    return is_a_letter\n\
    end", "  local last_char = txt:sub(1,1)\n  local is_letter = last_char ~= '\\\
    0' and last_char ~= '\\9'\n  return is_letter and not is_letter(last_char)\nend",
  "   if txt == '' then\n      return false\n   end\n   local last_char = txt:sub(1,\
    \ #txt)\n   if last_char == '' then\n      return false\n   end\n   if last_char:match('^[%aA%aZ%zZ]+$')\
    \ then\n      return false\n   end\n   return true\nend", "  local last_char =\
    \ txt:sub(1, #txt)\n  return last_char:match('^[%w]$')\nend", "  local last_char\
    \ = txt:sub(1, #txt)\n  return last_char:match('^[%w]$')\nend", "   if txt ==\
    \ '' then\n      return false\n   end\n   local last_char = txt:sub(1, #txt)\n\
    \   if last_char == '' then\n      return false\n   end\n   if last_char:match('[a-zA-Z]')\
    \ then\n      return false\n   end\n   return true\nend", "  local last_char =\
    \ txt:sub(1, #txt)\n  local last_char_lower = last_char:lower()\n  local last_char_upper\
    \ = last_char:upper()\n  local last_char_lower = last_char_lower:gsub('%w+', '')\n\
    \  local last_char_upper = last_char_upper:gsub('%w+', '')\n  local last_char_lower\
    \ = last_char_lower:gsub('[^a-z]', '')\n  local last_char_upper = last_char_upper:gsub('[^a-z]',\
    \ '')\n  local last_char_lower = last_char_lower:gsub('%w+', '')\n  local last_char_upper\
    \ = last_char_upper:gsub('%w+', '')\n  local last_char_lower = last_char_lower:gsub('[^a-z]',\
    \ '')\n  local last_char_upper = last_char_upper:gsub('[^a-z]', '')\n  local last_char_lower\
    \ = last_char_lower:gsub('%w+', '')\n  local last_char_upper = last_char_upper:gsub('%w+',\
    \ '')\n  local last_char_lower = last_char_lower:gsub('[^a-z]', '')\n  local last_char_upper\
    \ = last_char_upper:gsub('[^a-z]', '')\n  local last_char_lower = last_char_lower:gsub('%w+',\
    \ '')\n  local last_char_upper = last_char_upper:gsub('%w+', '')\n  local last_char_lower\
    \ = last_char_lower:gsub('[^a-z]', '')\n  local last_char_upper = last_char_upper:gsub('[^a-z]',\
    \ '')\n  local last_char_lower = last_char_lower:gsub('%w+', '')\n  local last_char_upper\
    \ = last_char_upper:gsub('%w+', '')\n  local last_char_lower = last_char_lower:gsub('[^a-z]',\
    \ '')\n  local last_char_upper = last_char_upper:gsub('[^a-z]', '')\n  local last_char_lower\
    \ = last_char_lower:gsub('%w+', '')\n  local last_char_upper = last_char_upper:gsub('%w+',\
    \ '')\n  local last_char_lower = last_char_lower:gsub('[^a-z]', '')\n  local last_char_upper\
    \ = last_char_upper:gsub('[^a-z]', '')\n  local last_char_lower = last_char_lower:gsub('%w+',\
    \ '')\n  local last_char_upper = last_char_upper:gsub('%w+', '')\n  local last_char_lower\
    \ = last_char_lower:gsub('[^a-z]', '')\n  local last_char_upper = ", "  local\
    \ last_char = string.sub(txt, #txt, -1)\n  local last_char_lower = string.lower(last_char)\n\
    \  return last_char_lower ~= last_char and\n         last_char_lower ~= 'w' and\n\
    \         last_char_lower ~= 's'\nend", "  -- Check if txt is empty\n  if txt\
    \ == '' then return false end\n  -- Check if txt is a single space\n  if txt:sub(1,\
    \ 1) == ' ' then return false end\n  -- Check if txt is a word\n  local words\
    \ = txt:gsub(' ', ''):gsub('%a+', ' '):gsub('%a+$', '')\n  if words == txt then\
    \ return false end\n  -- Check if txt is a word\n  local words = txt:gsub(' ',\
    \ ''):gsub('%a+', ' '):gsub('%a+$', '')\n  if words == txt then return false end\n\
    \  -- Check if txt is a word\n  local words = txt:gsub(' ', ''):gsub('%a+', '\
    \ '):gsub('%a+$', '')\n  if words == txt then return false end\n  -- Check if\
    \ txt is a word\n  local words = txt:gsub(' ', ''):gsub('%a+', ' '):gsub('%a+$',\
    \ '')\n  if words == txt then return false end\n  -- Check if txt is a word\n\
    \  local words = txt:gsub(' ', ''):gsub('%a+', ' '):gsub('%a+$', '')\n  if words\
    \ == txt then return false end\n  -- Check if txt is a word\n  local words = txt:gsub('\
    \ ', ''):gsub('%a+', ' '):gsub('%a+$', '')\n  if words == txt then return false\
    \ end\n  -- Check if txt is a word\n  local words = txt:gsub(' ', ''):gsub('%a+',\
    \ ' '):gsub('%a+$', '')\n  if words == txt then return false end\n  -- Check if\
    \ txt is a word\n  local words = txt:gsub(' ', ''):gsub('%a+', ' '):gsub('%a+$',\
    \ '')\n  if words == txt then return false end\n  -- Check if txt is a word\n\
    \  local words = txt:gsub(' ', ''):gsub('%a+', ' '):gsub('%a+$', '')\n  if words\
    \ == txt then return false end\n  -- Check if txt is a word\n  local words = txt:gsub('\
    \ ', ''):gsub('%a+', ' '):gsub('%a+$', '')\n  if words == txt then return false\
    \ end\n  -- Check if txt is a word\n  local words = txt:gsub(' ', ''):gsub('%a+',\
    \ ' '):gsub('%a+$', '')\n  if words == txt then return false end\n  -- Check if\
    \ txt is a word\n  local words = txt:g", "  -- Check for empty string\n  if txt\
    \ == '' then return false end\n  -- Check for non-alphabetical characters\n  local\
    \ last_char = txt:sub(1, #txt)\n  return last_char ~= string.letters and last_char\
    \ ~= '-'\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

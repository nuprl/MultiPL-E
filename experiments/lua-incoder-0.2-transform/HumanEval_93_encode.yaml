name: HumanEval_93_encode
language: lua
prompt: "-- Write a function that takes a message, and encodes in such a \n-- way\
  \ that it swaps case of all letters, replaces all vowels in \n-- the message with\
  \ the letter that appears 2 places ahead of that \n-- vowel in the english alphabet.\
  \ \n-- Assume only letters. \n-- Examples:\n-- >>> encode('test')\n-- 'TGST'\n--\
  \ >>> encode('This is a message')\n-- 'tHKS KS C MGSSCGG'\nlocal function encode(message)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = encode\n\
  \    lu.assertEquals(candidate('TEST'), 'tgst')\n    lu.assertEquals(candidate('Mudasir'),\
  \ 'mWDCSKR')\n    lu.assertEquals(candidate('YES'), 'ygs')\n    lu.assertEquals(candidate('This\
  \ is a message'), 'tHKS KS C MGSSCGG')\n    lu.assertEquals(candidate('I DoNt KnOw\
  \ WhAt tO WrItE'), 'k dQnT kNqW wHcT Tq wRkTg')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  local vowels =\
    \ \"aeiou\"\n  local output = {}\n  for i = 1, #message do\n    local letter =\
    \ message[i]\n    local vowel = letter:sub(1, 1)\n    local index = alphabet:find(vowel)\n\
    \    if index == nil then\n      output[i] = letter\n    else\n      output[i]\
    \ = alphabet:sub(index, index + 1)\n    end\n  end\n  return table.concat(output,\
    \ \"\")\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local\
    \ vowels = \"aeiou\"\n    local output = ''\n    local index = 1\n    for i =\
    \ 1, #message do\n        if alphabet:sub(i, i) == alphabet:sub(index, index)\
    \ then\n            index = index + 1\n        else\n            index = index\
    \ + 1\n        end\n        local letter = alphabet:sub(i, i)\n        local vowel\
    \ = vowels:sub(i, i)\n        local letterIndex = alphabet:find(letter)\n    \
    \    local vowelIndex = alphabet:find(vowel)\n        if letterIndex > 0 and vowelIndex\
    \ > 0 then\n            local letter2 = alphabet:sub(letterIndex + 1, letterIndex)\n\
    \            local vowel2 = alphabet:sub(vowelIndex + 1, vowelIndex)\n       \
    \     letter2 = alphabet:sub(letterIndex + 1, letterIndex)\n            letter2\
    \ = alphabet:sub(letterIndex + 1, letterIndex)\n            letter2 = alphabet:sub(letterIndex\
    \ + 1, letterIndex)\n            letter2 = alphabet:sub(letterIndex + 1, letterIndex)\n\
    \            letter2 = alphabet:sub(letterIndex + 1, letterIndex)\n          \
    \  letter2 = alphabet:sub(letterIndex + 1, letterIndex)\n            letter2 =\
    \ alphabet:sub(letterIndex + 1, letterIndex)\n            letter2 = alphabet:sub(letterIndex\
    \ + 1, letterIndex)\n            letter2 = alphabet:sub(letterIndex + 1, letterIndex)\n\
    \            letter2 = alphabet:sub(letterIndex + 1, letterIndex)\n          \
    \  letter2 = alphabet:sub(letterIndex + 1, letterIndex)\n            letter2 =\
    \ alphabet:sub(letterIndex + 1, letterIndex)\n            letter2 = alphabet:sub(letterIndex\
    \ + 1, letterIndex)\n            letter2 = alphabet:sub(letterIndex + 1, letterIndex)\n\
    \            letter2 = alphabet:sub(letterIndex + 1, letterIndex)\n          \
    \  letter2 = alphabet:sub(letterIndex + 1, letterIndex)\n            letter2 =\
    \ alphabet:sub(letterIndex + 1, letterIndex)\n            letter2 = alphabet:sub(letterIndex\
    \ + 1, letterIndex)\n            letter2 = alphabet:sub(letterIndex + 1, letterIndex)\n\
    \            letter2 = alphabet:sub(letterIndex + 1, letterIndex)\n          \
    \  letter2 = alphabet:sub(letterIndex + 1, letterIndex)\n            letter2 =\
    \ alphabet:sub(letterIndex + 1, letterIndex)\n            letter2 = alphabet:sub(letterIndex\
    \ + 1, letterIndex)\n            letter2 = alphabet:sub(letterIndex + 1, letterIndex)\n\
    \            letter2 = alphabet:sub(letterIndex + 1, letterIndex)\n          \
    \  letter2 = alphabet:sub(letterIndex + 1, letterIndex)\n            letter2 =\
    \ alphabet:sub(letterIndex + 1, letterIndex)\n            letter2 = alphabet:sub(letterIndex\
    \ + 1, letterIndex)\n            letter2 = alphabet:sub(letterIndex + 1, letterIndex)\n\
    \            letter2 = alphabet:sub(letterIndex + 1, letterIndex)\n          \
    \  letter2 = alphabet", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    local vowels = \"aeiou\"\n    local output = ''\n    local index = 1\n  \
    \  for i = 1, #message do\n        if alphabet:sub(i,i) == alphabet:sub(index+1,index)\
    \ then\n            index = index + 1\n        else\n            output = output\
    \ .. alphabet:sub(index,index) .. alphabet:sub(index+1,index) .. alphabet:sub(index+2,index)\
    \ .. alphabet:sub(index+3,index) .. alphabet:sub(index+4,index) .. alphabet:sub(index+5,index)\
    \ .. alphabet:sub(index+6,index) .. alphabet:sub(index+7,index) .. alphabet:sub(index+8,index)\
    \ .. alphabet:sub(index+9,index) .. alphabet:sub(index+10,index) .. alphabet:sub(index+11,index)\
    \ .. alphabet:sub(index+12,index) .. alphabet:sub(index+13,index) .. alphabet:sub(index+14,index)\
    \ .. alphabet:sub(index+15,index) .. alphabet:sub(index+16,index) .. alphabet:sub(index+17,index)\
    \ .. alphabet:sub(index+18,index) .. alphabet:sub(index+19,index) .. alphabet:sub(index+20,index)\
    \ .. alphabet:sub(index+21,index) .. alphabet:sub(index+22,index) .. alphabet:sub(index+23,index)\
    \ .. alphabet:sub(index+24,index) .. alphabet:sub(index+25,index) .. alphabet:sub(index+26,index)\
    \ .. alphabet:sub(index+27,index) .. alphabet:sub(index+28,index) .. alphabet:sub(index+29,index)\
    \ .. alphabet:sub(index+30,index) .. alphabet:sub(index+31,index) .. alphabet:sub(index+32,index)\
    \ .. alphabet:sub(index+33,index) .. alphabet:sub(index+34,index) .. alphabet:sub(index+35,index)\
    \ .. alphabet:sub(index+36,index) .. alphabet:sub(index+37,index) .. alphabet:sub(index+38,index)\
    \ .. alphabet:sub(index+39,index) .. alphabet:sub(index+40,index) .. alphabet:sub(index+41,index)\
    \ .. alphabet:sub(index+42,index) .. alphabet:sub(index+43,index) .. alphabet:sub(index+44,index)\
    \ .. alphabet:sub(index+45,index) .. alphabet:sub(index+46,index) .. alphabet:sub(index+47,index)\
    \ .. alphabet:sub(index+48", "  -- Write your solution here\n  -- Hint: use string.gsub\
    \ to replace all vowels with their \n  -- position in the alphabet\n  -- Hint:\
    \ use string.gsub to replace all letters with their \n  -- position in the alphabet\n\
    \  -- Hint: use string.gsub to replace all letters with their \n  -- position\
    \ in the alphabet\n  -- Hint: use string.gsub to replace all letters with their\
    \ \n  -- position in the alphabet\n  -- Hint: use string.gsub to replace all letters\
    \ with their \n  -- position in the alphabet\n  -- Hint: use string.gsub to replace\
    \ all letters with their \n  -- position in the alphabet\n  -- Hint: use string.gsub\
    \ to replace all letters with their \n  -- position in the alphabet\n  -- Hint:\
    \ use string.gsub to replace all letters with their \n  -- position in the alphabet\n\
    \  -- Hint: use string.gsub to replace all letters with their \n  -- position\
    \ in the alphabet\n  -- Hint: use string.gsub to replace all letters with their\
    \ \n  -- position in the alphabet\n  -- Hint: use string.gsub to replace all letters\
    \ with their \n  -- position in the alphabet\n  -- Hint: use string.gsub to replace\
    \ all letters with their \n  -- position in the alphabet\n  -- Hint: use string.gsub\
    \ to replace all letters with their \n  -- position in the alphabet\n  -- Hint:\
    \ use string.gsub to replace all letters with their \n  -- position in the alphabet\n\
    \  -- Hint: use string.gsub to replace all letters with their \n  -- position\
    \ in the alphabet\n  -- Hint: use string.gsub to replace all letters with their\
    \ \n  -- position in the alphabet\n  -- Hint: use string.gsub to replace all letters\
    \ with their \n  -- position in the alphabet\n  -- Hint: use string.gsub to replace\
    \ all letters with their \n  -- position in the alphabet\n  -- Hint: use string.gsub\
    \ to replace all letters with their \n  -- position in the alphabet\n  -- Hint:\
    \ use string.gsub to replace all letters with their \n  -- position in the alphabet\n\
    \  -- Hint: use string.gsub to replace all letters with their \n  -- position\
    \ in the alphabet\n  -- Hint: use string.gsub to replace all letters with their\
    \ \n  -- position in the alphabet\n  -- Hint: use string.gsub to replace all letters\
    \ with their \n  -- position in the alphabet\n  -- Hint: use string.gsub to replace\
    \ all letters with their \n  -- position in the alphabet\n  ", "  local alphabet\
    \ = {\n    ['A'] = ['B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\
    \ 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\n    ['B']\
    \ = ['A', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P',\
    \ 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\n    ['C'] = ['A', 'B', 'D',\
    \ 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T',\
    \ 'U', 'V', 'W', 'X', 'Y', 'Z'],\n    ['D'] = ['A', 'B', 'C', 'E', 'F', 'G', 'H',\
    \ 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X',\
    \ 'Y', 'Z'],\n    ['E'] = ['A', 'B', 'C', 'D', 'F', 'G', 'H', 'I', 'J', 'K', 'L',\
    \ 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\n   \
    \ ['F'] = ['A', 'B', 'C', 'D', 'E', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\
    \ 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\n    ['G'] = ['A', 'B',\
    \ 'C', 'D', 'E', 'F', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\
    \ 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\n    ['H'] = ['A', 'B', 'C', 'D', 'E', 'F',\
    \ 'G', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W',\
    \ 'X', 'Y', 'Z'],\n    ['I'] = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'K', 'L',\
    \ 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\n   \
    \ ['J'] = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'K', 'L', 'M', 'N', 'O',\
    \ 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\n    ['K'] = ['A', 'B',\
    \ 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\
    \ 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\n    ['L'] = ['A', 'B', 'C', 'D', 'E', 'F',\
    \ 'G', 'H', 'I', 'J', '", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local vowels = \"aeiou\"\n    local output = ''\n    for i = 1, #message\
    \ do\n        local letter = message[i]\n        local index = alphabet + vowels\n\
    \        local letterIndex = alphabet:find(letter)\n        local nextLetterIndex\
    \ = letterIndex + 2\n        if letterIndex > #alphabet then\n            letterIndex\
    \ = letterIndex - #alphabet\n        end\n        if nextLetterIndex > #alphabet\
    \ then\n            nextLetterIndex = nextLetterIndex - #alphabet\n        end\n\
    \        local nextLetter = alphabet:sub(letterIndex, nextLetterIndex)\n     \
    \   output = output .. alphabet:sub(letterIndex, letterIndex + 1) .. nextLetter\n\
    \    end\n    return output\nend", "  local alphabet = {\n    ['A'] = 'A',\n \
    \   ['B'] = 'B',\n    ['C'] = 'C',\n    ['D'] = 'D',\n    ['E'] = 'E',\n    ['F']\
    \ = 'F',\n    ['G'] = 'G',\n    ['H'] = 'H',\n    ['I'] = 'I',\n    ['J'] = 'J',\n\
    \    ['K'] = 'K',\n    ['L'] = 'L',\n    ['M'] = 'M',\n    ['N'] = 'N',\n    ['O']\
    \ = 'O',\n    ['P'] = 'P',\n    ['Q'] = 'Q',\n    ['R'] = 'R',\n    ['S'] = 'S',\n\
    \    ['T'] = 'T',\n    ['U'] = 'U',\n    ['V'] = 'V',\n    ['W'] = 'W',\n    ['X']\
    \ = 'X',\n    ['Y'] = 'Y',\n    ['Z'] = 'Z',\n    ['a'] = 'a',\n    ['b'] = 'b',\n\
    \    ['c'] = 'c',\n    ['d'] = 'd',\n    ['e'] = 'e',\n    ['f'] = 'f',\n    ['g']\
    \ = 'g',\n    ['h'] = 'h',\n    ['i'] = 'i',\n    ['j'] = 'j',\n    ['k'] = 'k',\n\
    \    ['l'] = 'l',\n    ['m'] = 'm',\n    ['n'] = 'n',\n    ['o'] = 'o',\n    ['p']\
    \ = 'p',\n    ['q'] = 'q',\n    ['r'] = 'r',\n    ['s'] = 's',\n    ['t'] = 't',\n\
    \    ['u'] = 'u',\n    ['v'] = 'v',\n    ['w'] = 'w',\n    ['x'] = 'x',\n    ['y']\
    \ = 'y',\n    ['z'] = 'z',\n    [' '] = ' ',\n    ['!'] = '!',\n    ['?'] = '?',\n\
    \    ['('] = '(',\n    [')'] = ')',\n    ['-'] = '-',\n    ['.'] = '.',\n    ['/']\
    \ = '/',\n    ['\\\\'] = '\\\\',\n    [':'] = ':',\n    [';'] = ';',\n    ['\\\
    ''] = '\\'',\n    ['\"'] = '\"',\n    ['&'] = '&',\n    ['@'] = '@',\n    ['#']\
    \ = '#',\n    ['$'] = '$',\n    ['%'] = '%',\n    ['^'] = '^',\n    ['&'] = '&',\n\
    \    ['*'] = '*',\n    ['+'] = '+',\n    ['='] = '=',\n    ['|'] = '|',\n    ['~']\
    \ = '~',\n    ['`'] = '`',\n    ['_'] = '_',\n    ['{'] = '{',\n    ['}'] = '}',\n\
    \    ['['] = '[',\n    [']'] = ']',\n    ['<'] = '<',\n    ['>'] = '>',\n    ['?']\
    \ = '?',\n    ['/'] = '/',\n    ['\\\\'] = '\\\\',\n    ['|'] = '|',\n    ['\"\
    '] = '\"',", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local vowels\
    \ = 'aeiou'\n    local newMessage = ''\n    for i = 1, #message do\n        local\
    \ letter = message[i]\n        local newLetter = alphabet[#alphabet + alphabet\
    \ + #alphabet]\n        for j = 1, #vowels do\n            if letter == vowels[j]\
    \ then\n                newLetter = alphabet[#alphabet + j + 1]\n            \
    \    break\n            end\n        end\n        newMessage = newMessage .. newLetter\n\
    \    end\n    return newMessage\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local vowels = 'aeiou'\n  local output = ''\n  for i = 1, #message do\n   \
    \ local char = message[i]\n    local vowel = string.sub(alphabet, string.find(alphabet,\
    \ char) + 1)\n    local letter = string.sub(alphabet, string.find(alphabet, char)\
    \ + 2)\n    local newChar = string.sub(alphabet, string.find(alphabet, char) +\
    \ 1)\n    output = output .. string.sub(vowels, 1, string.find(vowels, vowel)-1)\
    \ .. letter\n  end\n  return output\nend", "  -- Write your solution here\n  local\
    \ alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  local vowels = \"aeiou\"\n  local\
    \ newMessage = \"\"\n  for i = 1, #message do\n    local letter = message[i]\n\
    \    local newLetter = alphabet:sub((#alphabet) + i - 2, #alphabet) + letter\n\
    \    newMessage = newMessage .. newLetter\n  end\n  for i = 1, #vowels do\n  \
    \  newMessage = newMessage .. vowels:sub((#vowels) + i - 2, #vowels) + vowels:sub((#vowels)\
    \ + i - 2, #vowels) + vowels:sub((#vowels) + i - 2, #vowels) + vowels:sub((#vowels)\
    \ + i - 2, #vowels) + vowels:sub((#vowels) + i - 2, #vowels) + vowels:sub((#vowels)\
    \ + i - 2, #vowels) + vowels:sub((#vowels) + i - 2, #vowels) + vowels:sub((#vowels)\
    \ + i - 2, #vowels) + vowels:sub((#vowels) + i - 2, #vowels) + vowels:sub((#vowels)\
    \ + i - 2, #vowels) + vowels:sub((#vowels) + i - 2, #vowels) + vowels:sub((#vowels)\
    \ + i - 2, #vowels) + vowels:sub((#vowels) + i - 2, #vowels) + vowels:sub((#vowels)\
    \ + i - 2, #vowels) + vowels:sub((#vowels) + i - 2, #vowels) + vowels:sub((#vowels)\
    \ + i - 2, #vowels) + vowels:sub((#vowels) + i - 2, #vowels) + vowels:sub((#vowels)\
    \ + i - 2, #vowels) + vowels:sub((#vowels) + i - 2, #vowels) + vowels:sub((#vowels)\
    \ + i - 2, #vowels) + vowels:sub((#vowels) + i - 2, #vowels) + vowels:sub((#vowels)\
    \ + i - 2, #vowels) + vowels:sub((#vowels) + i - 2, #vowels) + vowels:sub((#vowels)\
    \ + i - 2, #vowels) + vowels:sub((#vowels) + i - 2, #vowels) + vowels:sub((#vowels)\
    \ + i - 2, #vowels) + vowels:sub((#vowels) + i - 2, #vowels) + vowels:sub((#vowels)\
    \ + i - 2, #vowels) + vowels:sub((#vowels) + i - 2, #vowels) + vowels:sub((#vowels)\
    \ + i - 2, #vowels) + vowels:sub((#vowels) + i - 2, #vowels) + vowels:sub((#vowels)\
    \ + i - 2, #vowels) + vowels:sub((#vowels) + i - 2, #vowels) + vowels:sub((#vowels)\
    \ + i - 2, #vowels) + vowels:sub((#vowels) + i - 2, #", "  local alphabet = {\n\
    \    ['A'] = 'A', \n    ['B'] = 'B', \n    ['C'] = 'C', \n    ['D'] = 'D', \n\
    \    ['E'] = 'E', \n    ['F'] = 'F', \n    ['G'] = 'G', \n    ['H'] = 'H', \n\
    \    ['I'] = 'I', \n    ['J'] = 'J', \n    ['K'] = 'K', \n    ['L'] = 'L', \n\
    \    ['M'] = 'M', \n    ['N'] = 'N', \n    ['O'] = 'O', \n    ['P'] = 'P', \n\
    \    ['Q'] = 'Q', \n    ['R'] = 'R', \n    ['S'] = 'S', \n    ['T'] = 'T', \n\
    \    ['U'] = 'U', \n    ['V'] = 'V', \n    ['W'] = 'W', \n    ['X'] = 'X', \n\
    \    ['Y'] = 'Y', \n    ['Z'] = 'Z', \n    ['a'] = 'a', \n    ['b'] = 'b', \n\
    \    ['c'] = 'c', \n    ['d'] = 'd', \n    ['e'] = 'e', \n    ['f'] = 'f', \n\
    \    ['g'] = 'g', \n    ['h'] = 'h', \n    ['i'] = 'i', \n    ['j'] = 'j', \n\
    \    ['k'] = 'k', \n    ['l'] = 'l', \n    ['m'] = 'm', \n    ['n'] = 'n', \n\
    \    ['o'] = 'o', \n    ['p'] = 'p', \n    ['q'] = 'q', \n    ['r'] = 'r', \n\
    \    ['s'] = 's', \n    ['t'] = 't', \n    ['u'] = 'u', \n    ['v'] = 'v', \n\
    \    ['w'] = 'w', \n    ['x'] = 'x', \n    ['y'] = 'y', \n    ['z'] = 'z', \n\
    \    ['A'] = 'A', \n    ['B'] = 'B', \n    ['C'] = 'C', \n    ['D'] = 'D', \n\
    \    ['E'] = 'E', \n    ['F'] = 'F', \n    ['G'] = 'G', \n    ['H'] = 'H', \n\
    \    ['I'] = 'I', \n    ['J'] = 'J', \n    ['K'] = 'K', \n    ['L'] = 'L', \n\
    \    ['M'] = 'M', \n    ['N'] = 'N', \n    ['O'] = 'O', \n    ['P'] = 'P', \n\
    \    ['Q'] = 'Q', \n    ['R'] = 'R', \n    ['S'] = 'S', \n    ['T'] = 'T', \n\
    \    ['U'] = 'U', \n    ['V'] = 'V', \n    ['W'] = 'W', \n    ['X'] = 'X', \n\
    \    ['Y'] = 'Y', \n    ['Z'] = 'Z', \n    ['a'] = 'a', \n    ['b'] = 'b', \n\
    \    ['c'] = 'c', \n    ['d'] = 'd', \n    ['e'] = 'e', \n    ['f'] = 'f', \n\
    \    ['g'] = 'g', \n    ['h'] = 'h', \n    ['i'] = 'i', \n", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local vowels = 'aeiou'\n    local result\
    \ = \"\"\n    for i = 1, #message do\n        local char = message[i]\n      \
    \  if #alphabet > 1 then\n            local index = alphabet + char\n        \
    \    local nextIndex = alphabet:sub(1, index) + char\n            local nextIndex2\
    \ = alphabet:sub(1, index) + char:sub(2, 1)\n            local nextIndex3 = alphabet:sub(1,\
    \ index) + char:sub(3, 1)\n            local nextIndex4 = alphabet:sub(1, index)\
    \ + char:sub(4, 1)\n            local nextIndex5 = alphabet:sub(1, index) + char:sub(5,\
    \ 1)\n            local nextIndex6 = alphabet:sub(1, index) + char:sub(6, 1)\n\
    \            local nextIndex7 = alphabet:sub(1, index) + char:sub(7, 1)\n    \
    \        local nextIndex8 = alphabet:sub(1, index) + char:sub(8, 1)\n        \
    \    local nextIndex9 = alphabet:sub(1, index) + char:sub(9, 1)\n            local\
    \ nextIndex10 = alphabet:sub(1, index) + char:sub(10, 1)\n            local nextIndex11\
    \ = alphabet:sub(1, index) + char:sub(11, 1)\n            local nextIndex12 =\
    \ alphabet:sub(1, index) + char:sub(12, 1)\n            local nextIndex13 = alphabet:sub(1,\
    \ index) + char:sub(13, 1)\n            local nextIndex14 = alphabet:sub(1, index)\
    \ + char:sub(14, 1)\n            local nextIndex15 = alphabet:sub(1, index) +\
    \ char:sub(15, 1)\n            local nextIndex16 = alphabet:sub(1, index) + char:sub(16,\
    \ 1)\n            local nextIndex17 = alphabet:sub(1, index) + char:sub(17, 1)\n\
    \            local nextIndex18 = alphabet:sub(1, index) + char:sub(18, 1)\n  \
    \          local nextIndex19 = alphabet:sub(1, index) + char:sub(19, 1)\n    \
    \        local nextIndex20 = alphabet:sub(1, index) + char:sub(20, 1)\n      \
    \      local nextIndex21 = alphabet:sub(1, index) + char:sub(21, 1)\n        \
    \    local nextIndex22 = alphabet:sub(1, index) + char:sub(22, 1)\n          \
    \  local nextIndex23 = alphabet:sub(1, index) + char:sub(23, 1)\n            local\
    \ nextIndex24 = alphabet:sub(1, index) + char:sub(24, 1)\n            local nextIndex25\
    \ = alphabet:sub(1, index) + char:sub(25, 1)\n            local nextIndex26 =\
    \ alphabet:sub(1, index) + char:sub(26, 1)\n            local ", "  local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n  local vowels = 'aeiou'\n  local result = ''\n\
    \  for i = 1, #message do\n    local letter = message[i]\n    local index = alphabet\
    \ and alphabet:find(letter) or letter\n    local nextLetter = alphabet:sub(index,\
    \ index + 1)\n    local vowelIndex = vowels and vowels:find(letter) or letter\n\
    \    local nextVowel = vowels:sub(vowelIndex, vowelIndex + 1)\n    local newLetter\
    \ = nextLetter\n    if nextVowel == letter then\n      newLetter = nextLetter:sub(1,\
    \ 1)\n    end\n    result = result .. newLetter\n  end\n  return result\nend",
  "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local vowels = 'aeiou'\n  local\
    \ result = ''\n  for i = 1, #message do\n    local char = message[i]\n    if #alphabet\
    \ > i then\n      local letter = alphabet[i]\n      local vowel = vowels[i]\n\
    \      if letter == vowel then\n        letter = alphabet[(alphabet + alphabet)[i]:byte()\
    \ - 1]\n      end\n      result = result .. letter .. letter\n    else\n     \
    \ result = result .. char\n    end\n  end\n  return result\nend", "  -- Write\
    \ your code here\n  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  local vowels\
    \ = \"aeiouAEIOU\"\n  local new_message = \"\"\n  for i = 1, #message do\n   \
    \ local char = message[i]\n    local index = alphabet.find(char)\n    if index\
    \ == nil then\n      new_message = new_message .. char\n    else\n      local\
    \ vowel_index = alphabet.find(vowels, index + 1)\n      if vowel_index == nil\
    \ then\n        new_message = new_message .. char\n      else\n        local vowel_char\
    \ = alphabet[vowel_index + 1]\n        new_message = new_message .. vowel_char\n\
    \      end\n    end\n  end\n  return new_message\nend", "    local alphabet =\
    \ 'abcdefghijklmnopqrstuvwxyz'\n    local vowels = 'aeiou'\n    local message\
    \ = '' -- Initialize message to be an empty string\n    local index = 0 -- Initialize\
    \ index\n    local vowel = 0 -- Initialize vowel\n    local letter = 0 -- Initialize\
    \ letter\n    for letter, letterCode in pairs(message) do\n        if letterCode\
    \ == 'a' then\n            index = alphabet and alphabet or 0\n            vowel\
    \ = vowels and vowels or 0\n            alphabet = alphabet:sub(1, index + 1)\n\
    \            vowels = vowels:sub(1, vowel + 1)\n            message = message:sub(1,\
    \ index + 1)\n            message = message:sub(1, index + 1)\n            message\
    \ = message:sub(1, index + 1)\n            message = message:sub(1, index + 1)\n\
    \            message = message:sub(1, index + 1)\n            message = message:sub(1,\
    \ index + 1)\n            message = message:sub(1, index + 1)\n            message\
    \ = message:sub(1, index + 1)\n            message = message:sub(1, index + 1)\n\
    \            message = message:sub(1, index + 1)\n            message = message:sub(1,\
    \ index + 1)\n            message = message:sub(1, index + 1)\n            message\
    \ = message:sub(1, index + 1)\n            message = message:sub(1, index + 1)\n\
    \            message = message:sub(1, index + 1)\n            message = message:sub(1,\
    \ index + 1)\n            message = message:sub(1, index + 1)\n            message\
    \ = message:sub(1, index + 1)\n            message = message:sub(1, index + 1)\n\
    \            message = message:sub(1, index + 1)\n            message = message:sub(1,\
    \ index + 1)\n            message = message:sub(1, index + 1)\n            message\
    \ = message:sub(1, index + 1)\n            message = message:sub(1, index + 1)\n\
    \            message = message:sub(1, index + 1)\n            message = message:sub(1,\
    \ index + 1)\n            message = message:sub(1, index + 1)\n            message\
    \ = message:sub(1, index + 1)\n            message = message:sub(1, index + 1)\n\
    \            message = message:sub(1, index + 1)\n            message = message:sub(1,\
    \ index + 1)\n            message = message:sub(1, index + 1)\n            message\
    \ = message:sub(1, index + 1)\n            message = message:sub(1, index + 1)\n\
    \            message = message:sub(1, index + 1)\n            message = message:sub(1,\
    \ index + 1)\n            message = message:sub(1, index + 1)\n            message\
    \ = message:sub(1, index + 1)\n            message = message:sub(1, index + 1)\n\
    \            message = message:sub(1, index + 1)\n            message = message:sub(1,\
    \ index + 1)\n            message = message:sub(1, index + 1)\n            message\
    \ = message:sub(1, index + 1)\n            message = message:sub(1, index + 1)\n\
    \            message = message:sub(1, index + 1)\n            message = message:sub(1,\
    \ index + 1)\n            message = message:sub(1, index + 1)\n            message\
    \ = message:sub(1, index + 1)\n            message = message:sub(1, index + 1)\n",
  "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local vowels = 'aeiou'\n  local\
    \ messageLetters = string.gsub(message, '%c', function(letter)\n    local index\
    \ = alphabet.find(letter)\n    if index == nil then\n      error('invalid letter:\
    \ ' .. letter)\n    end\n    local vowelIndex = string.find(vowels, letter)\n\
    \    if vowelIndex == nil then\n      error('invalid vowel: ' .. letter)\n   \
    \ end\n    return alphabet[(index + vowelIndex) % 26]\n  end)\n  return messageLetters\n\
    end", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local vowels =\
    \ \"aeiou\"\n    local output = ''\n    local vowelIndex = 1\n    local letterIndex\
    \ = 1\n    local letter\n    \n    for letter in message:gmatch'[%a]+' do\n  \
    \      if letter:sub(1,1) ~= letter:sub(2,1) then\n            letter = alphabet[letterIndex:sub(1,1)]\n\
    \            letterIndex = letterIndex + 1\n        end\n        \n        if\
    \ vowels:sub(1,1) ~= letter:sub(1,1) then\n            letter = alphabet[vowelIndex:sub(1,1)]\n\
    \            vowelIndex = vowelIndex + 1\n        end\n        \n        output\
    \ = output .. letter\n    end\n    \n    return output\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local vowels = 'aeiou'\n    local new_message\
    \ = ''\n    for i = 1, #message do\n        local letter = message[i]\n      \
    \  if letter:sub(1, 1) ~= letter then\n            new_message = new_message ..\
    \ letter\n        else\n            local index = alphabet + alphabet:sub(1, 1)\
    \ + letter\n            local letter_index = alphabet:sub(1, 1) + letter\n   \
    \         local vowel_index = vowels:sub(1, 1) + letter\n            local new_letter\
    \ = alphabet:sub(1, 1) + alphabet:sub(2, 1) + letter\n            new_message\
    \ = new_message .. alphabet:sub(1, 1) + alphabet:sub(2, 1) + letter\n        end\n\
    \    end\n    return new_message\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local vowels = 'aeiou'\n  local newMessage = ''\n  local vowelIndex = 1\n \
    \ for i = 1, #message do\n    local letter = message[i]\n    local newLetter =\
    \ letter\n    local vowelIndex = vowelIndex + 1\n    for j = 1, #vowels do\n \
    \     if letter == vowels[j] then\n        newLetter = alphabet[vowelIndex + 1]\n\
    \      end\n    end\n    newMessage = newMessage .. newLetter\n  end\n  return\
    \ newMessage\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n   \
    \ local vowels = \"aeiou\"\n    local result = \"\"\n    for i = 1, #message do\n\
    \        local letter = message[i]\n        local pos = alphabet.find(letter)\n\
    \        if pos == nil then\n            error(\"invalid letter in message\")\n\
    \        end\n        local vowel = vowels[pos - 1]\n        local next = alphabet[pos\
    \ + 1]\n        if vowel ~= next then\n            letter = letter:lower() ..\
    \ next\n        end\n        result = result .. letter\n    end\n    return result\n\
    end", "    local alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    local vowels =\
    \ \"AEIOU\"\n    local output = ''\n    for i = 1, #message do\n        local\
    \ letter = message[i]\n        if letter:sub(1, 1) ~= letter then\n          \
    \  letter = alphabet[alphabet + letter]\n        end\n        local vowel = vowels:sub(1,\
    \ 1)\n        local index = alphabet + letter\n        local nextLetter = alphabet:sub(i\
    \ + 1, i + 2)\n        local nextIndex = alphabet + nextLetter\n        if letter\
    \ == vowel then\n            output = output .. nextIndex\n        else\n    \
    \        output = output .. index\n        end\n    end\n    return output\nend",
  "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local alphabet = {string.char(97,102,105,108,111,114,116,121,123,125,128,131,134,137,140,143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194,196,199,202,205,208,211,214,217,220,223,226,229,231,234,237,240,243,246,249,252,255)}\n\
    \  local new_message = ''\n  for i = 1, #message do\n    local letter = message[i]\n\
    \    local new_letter = letter\n    for j = 1, #vowels do\n      if letter ==\
    \ vowels[j] then\n        new_letter = alphabet[#alphabet]\n        break\n  \
    \    end\n    end\n    new_message = new_message .. new_letter\n  end\n  return\
    \ new_message\nend", "  -- Write your solution here\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  ", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local vowels = 'aeiou'\n  local output = ''\n  for i = 1, #message do\n   \
    \ local char = message[i]\n    local index = alphabet.find(char)\n    if index\
    \ == nil then\n      output = output .. char\n    else\n      local vowel = alphabet[index\
    \ + 1]\n      local replacement = alphabet[index + 2]\n      output = output ..\
    \ string.sub(vowels, 1, #vowel) .. replacement\n    end\n  end\n  return output\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local vowels = 'aeiou'\n\
    \    local newMessage = ''\n    for i = 1, #message do\n        local letter =\
    \ message[i]\n        local newLetter = alphabet:sub(1, #alphabet:sub(1, letter:lower():find(vowels))-1)\n\
    \        newMessage = newMessage .. newLetter\n    end\n    return newMessage\n\
    end", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local vowels = 'aeiou'\n\
    \  local message = '' -- Initialize message with empty string\n  for i = 1, #message\
    \ do -- Loop through each character in message\n    local char = message[i] --\
    \ Get the current character\n    local index = alphabet -- Initialize index\n\
    \    for j = 1, #vowels do -- Loop through each vowel in alphabet\n      if char\
    \ == vowels[j] then -- If the current character is the current vowel\n       \
    \ index = alphabet[j + 1] -- Set the index to the next vowel\n      end\n    end\n\
    \    message = message .. alphabet[index] -- Append the character at the current\
    \ index\n  end\n  return message\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local vowels = \"aeiou\"\n    local output = ''\n    local vowelIndex =\
    \ 0\n    local letterIndex = 0\n    for letter in message:gmatch'[%a]+' do\n \
    \       if letter:sub(1, 1) ~= letter:sub(2, 2) then\n            letterIndex\
    \ = letterIndex + 1\n        end\n        if letter:sub(1, 1) ~= alphabet:sub(letterIndex,\
    \ letterIndex + 1) then\n            letterIndex = letterIndex + 1\n        end\n\
    \        local nextVowelIndex = letterIndex + 2\n        if nextVowelIndex > #vowels\
    \ then\n            nextVowelIndex = letterIndex + 2\n        end\n        local\
    \ nextLetterIndex = letterIndex + 3\n        if nextLetterIndex > #alphabet then\n\
    \            nextLetterIndex = letterIndex + 3\n        end\n        local nextLetter\
    \ = alphabet:sub(letterIndex, nextLetterIndex)\n        local nextVowel = alphabet:sub(letterIndex,\
    \ nextVowelIndex)\n        local nextLetterIndex = letterIndex + 4\n        if\
    \ nextLetterIndex > #alphabet then\n            nextLetterIndex = letterIndex\
    \ + 4\n        end\n        local nextVowel = alphabet:sub(letterIndex, nextVowelIndex)\n\
    \        local nextLetter = alphabet:sub(letterIndex, nextLetterIndex)\n     \
    \   local nextVowel = alphabet:sub(letterIndex, nextVowelIndex)\n        local\
    \ nextLetter = alphabet:sub(letterIndex, nextLetterIndex)\n        local nextVowel\
    \ = alphabet:sub(letterIndex, nextVowelIndex)\n        local nextLetter = alphabet:sub(letterIndex,\
    \ nextLetterIndex)\n        local nextVowel = alphabet:sub(letterIndex, nextVowelIndex)\n\
    \        local nextLetter = alphabet:sub(letterIndex, nextLetterIndex)\n     \
    \   local nextVowel = alphabet:sub(letterIndex, nextVowelIndex)\n        local\
    \ nextLetter = alphabet:sub(letterIndex, nextLetterIndex)\n        local nextVowel\
    \ = alphabet:sub(letterIndex, nextVowelIndex)\n        local nextLetter = alphabet:sub(letterIndex,\
    \ nextLetterIndex)\n        local nextVowel = alphabet:sub(letterIndex, nextVowelIndex)\n\
    \        local nextLetter = alphabet:sub(letterIndex, nextLetterIndex)\n     \
    \   local nextVowel = alphabet:sub(letterIndex, nextVowelIndex)\n        local\
    \ nextLetter = alphabet:sub(letterIndex, nextLetterIndex)\n        local nextVowel\
    \ = alphabet:sub(letterIndex, nextVowelIndex)\n        local ", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local vowels = 'aeiou'\n    local output\
    \ = ''\n    for i = 1, #message do\n        local letter = message[i]\n      \
    \  local index = alphabet + alphabet:sub(1, i) + alphabet:sub(i + 1, #alphabet)\n\
    \        local replacement = alphabet:sub(i + 1, #alphabet)\n        local vowelIndex\
    \ = vowels:sub(1, i) + vowels:sub(i + 1, #vowels)\n        local vowelReplacement\
    \ = vowels:sub(i + 1, #vowels)\n        if letter:lower() ~= letter then\n   \
    \         letter = letter:lower()\n        end\n        if letter:find(vowels)\
    \ then\n            letter = letter:sub(1, letter:find(vowels)) + vowelReplacement\n\
    \        end\n        if letter:find(vowelIndex) then\n            letter = letter:sub(1,\
    \ letter:find(vowelIndex)) + vowelReplacement\n        end\n        if letter:find(index)\
    \ then\n            letter = letter:sub(1, letter:find(index)) + replacement\n\
    \        end\n        output = output .. letter\n    end\n    return output\n\
    end", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local vowels = 'aeiou'\n\
    \  local output = ''\n  for i = 1, #message do\n    local char = message[i]\n\
    \    local index = alphabet.find(char)\n    if index == nil then\n      output\
    \ = output .. char\n    else\n      local vowelIndex = alphabet.find(vowels, index\
    \ + 1)\n      if vowelIndex == nil then\n        output = output .. char\n   \
    \   else\n        output = output .. alphabet[vowelIndex + 1]\n      end\n   \
    \ end\n  end\n  return output\nend", "  -- Write your solution here\n  -- Hint:\
    \ use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  --\
    \ Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n\
    \  -- Hint: use string.gsub\n  -- Hint: use string.gsub\n  ", "    local vowels\
    \ = {'a', 'e', 'i', 'o', 'u'}\n    local alphabet = {'a', 'b', 'c', 'd', 'e',\
    \ 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u',\
    \ 'v', 'w', 'x', 'y', 'z'}\n    local alphabet2 = {'a', 'b', 'c', 'd', 'e', 'f',\
    \ 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v',\
    \ 'w', 'x', 'y', 'z'}\n    local alphabet3 = {'a', 'b', 'c', 'd', 'e', 'f', 'g',\
    \ 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w',\
    \ 'x', 'y', 'z'}\n    local alphabet4 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h',\
    \ 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x',\
    \ 'y', 'z'}\n    local alphabet5 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i',\
    \ 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y',\
    \ 'z'}\n    local alphabet6 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j',\
    \ 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n\
    \    local alphabet7 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n\
    \    local alphabet8 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n\
    \    local alphabet9 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n\
    \    local alphabet10 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n\
    \    local alphabet11 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n\
    \    local alphabet12 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n\
    \    local alphabet13 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l", "  local vowels = {'a','e','i','o','u','y'}\n  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local result = \"\"\n  for i = 1, #message do\n    local letter = message[i]\n\
    \    local vowel = letter:sub(1,1)\n    local index = alphabet:find(vowel)\n \
    \   if index == nil then\n      index = alphabet:find(vowel:sub(2))\n    end\n\
    \    if index == nil then\n      index = alphabet:find(vowel:sub(3))\n    end\n\
    \    if index == nil then\n      index = alphabet:find(vowel:sub(4))\n    end\n\
    \    if index == nil then\n      index = alphabet:find(vowel:sub(5))\n    end\n\
    \    if index == nil then\n      index = alphabet:find(vowel:sub(6))\n    end\n\
    \    if index == nil then\n      index = alphabet:find(vowel:sub(7))\n    end\n\
    \    if index == nil then\n      index = alphabet:find(vowel:sub(8))\n    end\n\
    \    if index == nil then\n      index = alphabet:find(vowel:sub(9))\n    end\n\
    \    if index == nil then\n      index = alphabet:find(vowel:sub(10))\n    end\n\
    \    if index == nil then\n      index = alphabet:find(vowel:sub(11))\n    end\n\
    \    if index == nil then\n      index = alphabet:find(vowel:sub(12))\n    end\n\
    \    if index == nil then\n      index = alphabet:find(vowel:sub(13))\n    end\n\
    \    if index == nil then\n      index = alphabet:find(vowel:sub(14))\n    end\n\
    \    if index == nil then\n      index = alphabet:find(vowel:sub(15))\n    end\n\
    \    if index == nil then\n      index = alphabet:find(vowel:sub(16))\n    end\n\
    \    if index == nil then\n      index = alphabet:find(vowel:sub(17))\n    end\n\
    \    if index == nil then\n      index = alphabet:find(vowel:sub(18))\n    end\n\
    \    if index == nil then\n      index = alphabet:find(vowel:sub(19))\n    end\n\
    \    if index == nil then\n      index = alphabet:find(vowel:sub(20))\n    end\n\
    \    if index == nil then\n      index = alphabet:find(vowel:sub(21))\n    end\n\
    \    if index == nil then\n      index = alphabet:find(vowel:sub(22))\n    end\n\
    \    if index == nil then\n      index = alphabet:find(vowel:sub(23))\n    end\n\
    \    if index == nil then\n      index = ", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local vowels = 'aeiou'\n    local output = ''\n    for i = 1, #message do\n\
    \        local letter = message[i]\n        local position = alphabet.find(letter)\n\
    \        if position == nil then\n            position = alphabet.find(vowels,\
    \ letter)\n        end\n        if position == nil then\n            position\
    \ = alphabet.find(vowels, letter + letter)\n        end\n        if position ==\
    \ nil then\n            position = alphabet.find(vowels, letter + letter + letter)\n\
    \        end\n        if position == nil then\n            position = alphabet.find(vowels,\
    \ letter + letter + letter + letter)\n        end\n        if position == nil\
    \ then\n            position = alphabet.find(vowels, letter + letter + letter\
    \ + letter + letter)\n        end\n        if position == nil then\n         \
    \   position = alphabet.find(vowels, letter + letter + letter + letter + letter\
    \ + letter)\n        end\n        if position == nil then\n            position\
    \ = alphabet.find(vowels, letter + letter + letter + letter + letter + letter\
    \ + letter)\n        end\n        if position == nil then\n            position\
    \ = alphabet.find(vowels, letter + letter + letter + letter + letter + letter\
    \ + letter + letter)\n        end\n        if position == nil then\n         \
    \   position = alphabet.find(vowels, letter + letter + letter + letter + letter\
    \ + letter + letter + letter + letter)\n        end\n        if position == nil\
    \ then\n            position = alphabet.find(vowels, letter + letter + letter\
    \ + letter + letter + letter + letter + letter + letter + letter)\n        end\n\
    \        if position == nil then\n            position = alphabet.find(vowels,\
    \ letter + letter + letter + letter + letter + letter + letter + letter + letter\
    \ + letter + letter + letter)\n        end\n        if position == nil then\n\
    \            position = alphabet.find(vowels, letter + letter + letter + letter\
    \ + letter + letter + letter + letter + letter + letter + letter + letter + letter)\n\
    \        end\n        if position == nil then\n            position = alphabet.find(vowels,\
    \ letter + letter + letter + letter + letter + letter + letter + letter + letter\
    \ + letter + letter + letter + letter)\n        end\n        if position == nil\
    \ then\n            position = alphabet.find(vowels, letter + letter + letter\
    \ + letter + letter + letter + letter + letter + letter + letter + letter + letter\
    \ + letter + letter)\n        end\n        if position == nil then\n", "  local\
    \ alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  local vowels = \"aeiou\"\n  local\
    \ result = \"\"\n  local vowelIndex = 1\n  for i = 1, #message do\n    local char\
    \ = message[i]\n    local nextVowelIndex = #vowels + vowelIndex\n    if #alphabet\
    \ > nextVowelIndex then\n      local nextVowel = alphabet[nextVowelIndex]\n  \
    \    local nextChar = alphabet[nextVowelIndex + 1]\n      result = result .. nextVowel\
    \ .. char\n      vowelIndex = nextVowelIndex + 1\n    else\n      result = result\
    \ .. char\n    end\n  end\n  return result\nend", "    local alphabet = {\n  \
    \      'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\
    \ 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n        'a', 'b', 'c',\
    \ 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's',\
    \ 't', 'u', 'v', 'w', 'x', 'y', 'z',\n        'A', 'B', 'C', 'D', 'E', 'F', 'G',\
    \ 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W',\
    \ 'X', 'Y', 'Z',\n        'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\n\
    \        'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N',\
    \ 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n        'a', 'b',\
    \ 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r',\
    \ 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\n        'A', 'B', 'C', 'D', 'E', 'F',\
    \ 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V',\
    \ 'W', 'X', 'Y', 'Z',\n        'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j',\
    \ 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\n\
    \        'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N',\
    \ 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n        'a', 'b',\
    \ 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r',\
    \ 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\n        'A', 'B', 'C', 'D', 'E', 'F',\
    \ 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V',\
    \ 'W', 'X', 'Y', 'Z',\n        'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j',\
    \ 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\n\
    \        'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N',\
    \ 'O', 'P', 'Q', '", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local\
    \ vowels = 'aeiou'\n  local output = ''\n  for i = 1, #message do\n    local letter\
    \ = message[i]\n    local vowel = letter:sub(1, 1)\n    local letter2 = letter:sub(2,\
    \ 1)\n    local index = alphabet + vowel + alphabet\n    local letter3 = letter:sub(3,\
    \ 1)\n    local letter4 = letter:sub(4, 1)\n    local letter5 = letter:sub(5,\
    \ 1)\n    local letter6 = letter:sub(6, 1)\n    local letter7 = letter:sub(7,\
    \ 1)\n    local letter8 = letter:sub(8, 1)\n    local letter9 = letter:sub(9,\
    \ 1)\n    local letter10 = letter:sub(10, 1)\n    local letter11 = letter:sub(11,\
    \ 1)\n    local letter12 = letter:sub(12, 1)\n    local letter13 = letter:sub(13,\
    \ 1)\n    local letter14 = letter:sub(14, 1)\n    local letter15 = letter:sub(15,\
    \ 1)\n    local letter16 = letter:sub(16, 1)\n    local letter17 = letter:sub(17,\
    \ 1)\n    local letter18 = letter:sub(18, 1)\n    local letter19 = letter:sub(19,\
    \ 1)\n    local letter20 = letter:sub(20, 1)\n    local letter21 = letter:sub(21,\
    \ 1)\n    local letter22 = letter:sub(22, 1)\n    local letter23 = letter:sub(23,\
    \ 1)\n    local letter24 = letter:sub(24, 1)\n    local letter25 = letter:sub(25,\
    \ 1)\n    local letter26 = letter:sub(26, 1)\n    local letter27 = letter:sub(27,\
    \ 1)\n    local letter28 = letter:sub(28, 1)\n    local letter29 = letter:sub(29,\
    \ 1)\n    local letter30 = letter:sub(30, 1, 1)\n    local letter31 = letter:sub(31,\
    \ 1, 1)\n    local letter32 = letter:sub(32, 1)\n    local letter33 = letter:sub(33,\
    \ 1)\n    local letter34 = letter:sub(34, 1)\n    local letter35 = letter:sub(35,\
    \ 1)\n    local letter36 = letter:sub(36, 1)\n    local letter37 = letter:sub(37,\
    \ 1)\n    local letter38 = letter:sub(38, 1)\n    local letter39 = letter:sub(39,\
    \ 1)\n    local letter40 = letter:sub(40, 1, 1)\n    local letter41 = letter:sub(41,\
    \ 1, 1)\n    local letter42 = letter:sub(42, 1, 1)\n    local letter", "    local\
    \ alphabet = {\n        'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l', 'm', \n        'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y',\
    \ 'z', \n        'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\
    \ \n        'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', \n\
    \        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '!', '@', '#', \n \
    \       '$', '%', '^', '&', '*', '(', ')', '-', '_', '+', '=', '{', '}', '[',\
    \ \n        ']', '|', ';', ':', '~', '?', '/', '\\\\', '|', '\\\\', '|', '\\\\\
    ', '|', \n        '\\\\', '|', '\\\\', '|', '\\\\', '|', '\\\\', '|', '\\\\',\
    \ '|', '\\\\', '|', \n        '\\\\', '|', '\\\\', '|', '\\\\', '|', '\\\\', '|',\
    \ '\\\\', '|', '\\\\', '|', \n        '\\\\', '|', '\\\\', '|', '\\\\', '|', '\\\
    \\', '|', '\\\\', '|', '\\\\', '|', \n        '\\\\', '|', '\\\\', '|', '\\\\\
    ', '|', '\\\\', '|', '\\\\', '|', '\\\\', '|', \n        '\\\\', '|', '\\\\',\
    \ '|', '\\\\', '|', '\\\\', '|', '\\\\', '|', '\\\\', '|', \n        '\\\\', '|',\
    \ '\\\\', '|', '\\\\', '|', '\\\\', '|', '\\\\', '|', '\\\\', '|', \n        '\\\
    \\', '|', '\\\\', '|', '\\\\', '|', '\\\\', '|', '\\\\', '|', '\\\\', '|', \n\
    \        '\\\\', '|', '\\\\', '|', '\\\\', '|', '\\\\', '|', '\\\\', '|', '\\\\\
    ', '|', \n        '\\\\', '|', '\\\\', '|', '\\\\', '|', '\\\\', '|', '\\\\',\
    \ '|', '\\\\', '|', \n        '\\\\', '|', '\\\\', '|', '\\\\', '|', '\\\\', '|',\
    \ '\\\\', '|', '\\\\', '|', \n        '\\\\', '|', '\\\\', '|', '\\\\', '|', '\\\
    \\', '|', '\\\\', '|', '\\\\', '|', \n        '\\\\', '|', '\\\\', '|', '\\\\\
    ', '|', '\\\\', '|', '\\\\', '|', '\\\\', '|', \n        '\\\\', '|', '\\\\',\
    \ '|', '\\\\', '|', '\\\\', '|', '\\\\', '|', '\\\\', '|', \n        '\\\\', '|',\
    \ '\\\\', '|', '\\\\', '", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local vowels = 'aeiou'\n    local new_message = ''\n    for i = 1, #message\
    \ do\n        local char = message[i]\n        if char == 'a' then\n         \
    \   new_message = new_message .. alphabet[#alphabet + alphabet + 1]\n        elseif\
    \ char == 'e' then\n            new_message = new_message .. alphabet[#alphabet\
    \ + 1]\n        elseif char == 'i' then\n            new_message = new_message\
    \ .. alphabet[#alphabet]\n        elseif char == 'o' then\n            new_message\
    \ = new_message .. alphabet[#alphabet]\n        elseif char == 'u' then\n    \
    \        new_message = new_message .. alphabet[#alphabet]\n        elseif char\
    \ == 'y' then\n            new_message = new_message .. alphabet[#alphabet]\n\
    \        elseif char in vowels then\n            new_message = new_message ..\
    \ alphabet[#alphabet + alphabet + 1]\n        end\n    end\n    return new_message\n\
    end", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local vowels = 'aeiou'\n\
    \  local vowel_positions = {}\n  for i = 1, #vowels do\n    table.insert(vowel_positions,\
    \ #alphabet)\n  end\n  \n  -- Step 1: Find all vowel positions in message\n  --\
    \ Step 2: Replace each vowel with the letter that appears 2 places \n  -- ahead\
    \ of it in the alphabet\n  -- Step 3: Replace each vowel with the letter that\
    \ appears 3 places \n  -- ahead of it in the alphabet\n  -- Step 4: Replace each\
    \ vowel with the letter that appears 4 places \n  -- ahead of it in the alphabet\n\
    \  -- Step 5: Replace each vowel with the letter that appears 5 places \n  --\
    \ ahead of it in the alphabet\n  -- Step 6: Replace each vowel with the letter\
    \ that appears 6 places \n  -- ahead of it in the alphabet\n  -- Step 7: Replace\
    \ each vowel with the letter that appears 7 places \n  -- ahead of it in the alphabet\n\
    \  -- Step 8: Replace each vowel with the letter that appears 8 places \n  --\
    \ ahead of it in the alphabet\n  -- Step 9: Replace each vowel with the letter\
    \ that appears 9 places \n  -- ahead of it in the alphabet\n  -- Step 10: Replace\
    \ each vowel with the letter that appears 10 places \n  -- ahead of it in the\
    \ alphabet\n  -- Step 11: Replace each vowel with the letter that appears 11 places\
    \ \n  -- ahead of it in the alphabet\n  -- Step 12: Replace each vowel with the\
    \ letter that appears 12 places \n  -- ahead of it in the alphabet\n  -- Step\
    \ 13: Replace each vowel with the letter that appears 13 places \n  -- ahead of\
    \ it in the alphabet\n  -- Step 14: Replace each vowel with the letter that appears\
    \ 14 places \n  -- ahead of it in the alphabet\n  -- Step 15: Replace each vowel\
    \ with the letter that appears 15 places \n  -- ahead of it in the alphabet\n\
    \  -- Step 16: Replace each vowel with the letter that appears 16 places \n  --\
    \ ahead of it in the alphabet\n  -- Step 17: Replace each vowel with the letter\
    \ that appears 17 places \n  -- ahead of it in the alphabet\n  -- Step 18: Replace\
    \ each vowel with the letter that appears 18 places \n  -- ahead of it in the\
    \ alphabet\n  -- Step 19: Replace each vowel with the letter that appears 19 places\
    \ \n  -- ahead of it in the alphabet", "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n  local vowels = \"aeiou\"\n  local messageLetters = string.gsub(message, \"\
    [^\" .. vowels .. \"]\", \"\")\n  local messageVowels = string.gsub(message, \"\
    [\" .. vowels .. \"]\", \"\")\n  local messageVowelsCount = {}\n  for i = 1, #messageVowels\
    \ do\n    table.insert(messageVowelsCount, messageVowels[i])\n  end\n  local messageVowelsCountSorted\
    \ = {}\n  for i = 1, #messageVowelsCount do\n    table.insert(messageVowelsCountSorted,\
    \ messageVowelsCount[i], i)\n  end\n  table.sort(messageVowelsCountSorted)\n \
    \ local messageVowelsCountSortedLength = #messageVowelsCountSorted\n  local messageVowelsCountSortedIndex\
    \ = 1\n  local messageVowelsCountSortedValue = messageVowelsCountSorted[1]\n \
    \ local messageVowelsCountSortedKey\n  local messageVowelsCountSortedValueIndex\
    \ = 1\n  local messageVowelsCountSortedValueKey\n  local messageVowelsCountSortedValueIndex2\n\
    \  local messageVowelsCountSortedValueKey2\n  local messageVowelsCountSortedValueIndex3\n\
    \  local messageVowelsCountSortedValueKey3\n  local messageVowelsCountSortedValueIndex4\n\
    \  local messageVowelsCountSortedValueKey4\n  local messageVowelsCountSortedValueIndex5\n\
    \  local messageVowelsCountSortedValueKey5\n  local messageVowelsCountSortedValueIndex6\n\
    \  local messageVowelsCountSortedValueKey6\n  local messageVowelsCountSortedValueIndex7\n\
    \  local messageVowelsCountSortedValueKey7\n  local messageVowelsCountSortedValueIndex8\n\
    \  local messageVowelsCountSortedValueKey8\n  local messageVowelsCountSortedValueIndex9\n\
    \  local messageVowelsCountSortedValueKey9\n  local messageVowelsCountSortedValueIndex10\n\
    \  local messageVowelsCountSortedValueKey10\n  local messageVowelsCountSortedValueIndex11\n\
    \  local messageVowelsCountSortedValueKey11\n  local messageV", "  local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n  local vowels = 'aeiou'\n  local output = ''\n\
    \  for i = 1, #message do\n    local letter = message[i]\n    local index = alphabet\
    \ == letter and\n      alphabet + vowels or letter\n    local nextLetter = alphabet:sub(i,\
    \ i + 1)\n    local nextIndex = alphabet == nextLetter and\n      alphabet + vowels\
    \ or nextLetter\n    local nextVowel = alphabet:sub(i + 1, i + 2)\n    local nextNextLetter\
    \ = alphabet:sub(i + 2, i + 3)\n    local nextNextIndex = alphabet == nextNextLetter\
    \ and\n      alphabet + vowels or nextNextLetter\n    local nextNextVowel = alphabet:sub(i\
    \ + 3, i + 4)\n    local nextNextNextLetter = alphabet:sub(i + 4, i + 5)\n   \
    \ local nextNextNextIndex = alphabet == nextNextNextLetter and\n      alphabet\
    \ + vowels or nextNextNextLetter\n    local nextNextNextVowel = alphabet:sub(i\
    \ + 5, i + 6)\n    local nextNextNextNextLetter = alphabet:sub(i + 6, i + 7)\n\
    \    local nextNextNextNextIndex = alphabet == nextNextNextNextLetter and\n  \
    \    alphabet + vowels or nextNextNextNextLetter\n    local nextNextNextNextVowel\
    \ = alphabet:sub(i + 7, i + 8)\n    local nextNextNextNextNextLetter = alphabet:sub(i\
    \ + 8, i + 9)\n    local nextNextNextNextNextIndex = alphabet == nextNextNextNextNextLetter\
    \ and\n      alphabet + vowels or nextNextNextNextNextLetter\n    local nextNextNextNextNextVowel\
    \ = alphabet:sub(i + 9, i + 10)\n    local nextNextNextNextNextNextLetter = alphabet:sub(i\
    \ + 10, i + 11)\n    local nextNextNextNextNextNextIndex = alphabet == nextNextNextNextNextNextLetter\
    \ and\n      alphabet + vowels or nextNextNextNextNextNextLetter\n    local nextNextNextNextNextNextVowel\
    \ = alphabet:sub(i + 11, i + 12)\n    local nextNextNextNextNextNextNextLetter\
    \ = alphabet:sub(i + 12, i + 13)\n    local nextNextNextNextNextNextNextIndex\
    \ = alphabet == nextNextNextNextNextNextNextLetter and\n      alphabet + vowels\
    \ or nextNextNextNextNextNextNextLetter\n    local nextNextNextNextNextNextNextVowel\
    \ = alphabet", "  -- Write your code here\n  local vowels = {'a', 'e', 'i', 'o',\
    \ 'u', 'y'}\n  local alphabet = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i',\
    \ 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y',\
    \ 'z'}\n  local vowel_map = {}\n  for i = 1, #vowels do\n    vowel_map[vowels[i]]\
    \ = alphabet[i]\n  end\n  local message_map = {}\n  for i = 1, #message do\n \
    \   local letter = message[i]\n    local vowel = letter:sub(1, 1)\n    local position\
    \ = letter:sub(2, 2)\n    local new_letter = vowel_map[vowel]\n    local new_position\
    \ = alphabet[#alphabet]\n    alphabet[#alphabet] = new_position\n    message_map[letter]\
    \ = new_letter\n  end\n  local new_message = message\n  for i = 1, #message do\n\
    \    local letter = message[i]\n    local new_letter = message_map[letter]\n \
    \   new_message = new_message:gsub('%c%c', letter, new_letter)\n  end\n  return\
    \ new_message\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local\
    \ vowels = 'aeiou'\n    local new_message = ''\n    for i = 1, #message do\n \
    \       local letter = message[i]\n        local vowel_index = alphabet == vowels\
    \ and i or alphabet == letter and i - 1 or alphabet == letter and i - 2 or alphabet\
    \ == letter and i - 3\n        local new_letter = alphabet[vowel_index]\n    \
    \    new_message = new_message .. new_letter\n    end\n    return new_message\n\
    end", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local vowels = 'aeiou'\n\
    \  local result = ''\n  for i = 1, #message do\n    local letter = message[i]\n\
    \    local index = alphabet and alphabet:find(letter)\n    if index then\n   \
    \   local vowel = vowels:sub(index, index + 1)\n      result = result .. alphabet:sub(index,\
    \ index + 1) .. vowel\n    else\n      result = result .. letter\n    end\n  end\n\
    \  return result\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    local vowels = \"aeiou\"\n    local output = ''\n    for i = 1, #message\
    \ do\n        local letter = message[i]\n        local vowel = letter:sub(1, 1)\n\
    \        local letterIndex = alphabet:find(vowel)\n        local vowelIndex =\
    \ alphabet:find(vowel, letterIndex + 1)\n        local letter2 = alphabet:sub(letterIndex\
    \ + 1, letterIndex + 2)\n        local letter3 = alphabet:sub(letterIndex + 2,\
    \ letterIndex + 3)\n        local letter4 = alphabet:sub(letterIndex + 3, letterIndex\
    \ + 4)\n        local letter5 = alphabet:sub(letterIndex + 4, letterIndex + 5)\n\
    \        local letter6 = alphabet:sub(letterIndex + 5, letterIndex + 6)\n    \
    \    local letter7 = alphabet:sub(letterIndex + 6, letterIndex + 7)\n        local\
    \ letter8 = alphabet:sub(letterIndex + 7, letterIndex + 8)\n        local letter9\
    \ = alphabet:sub(letterIndex + 8, letterIndex + 9)\n        local letter10 = alphabet:sub(letterIndex\
    \ + 9, letterIndex + 10)\n        local letter11 = alphabet:sub(letterIndex +\
    \ 10, letterIndex + 11)\n        local letter12 = alphabet:sub(letterIndex + 11,\
    \ letterIndex + 12)\n        local letter13 = alphabet:sub(letterIndex + 12, letterIndex\
    \ + 13)\n        local letter14 = alphabet:sub(letterIndex + 13, letterIndex +\
    \ 14)\n        local letter15 = alphabet:sub(letterIndex + 14, letterIndex + 15)\n\
    \        local letter16 = alphabet:sub(letterIndex + 15, letterIndex + 16)\n \
    \       local letter17 = alphabet:sub(letterIndex + 16, letterIndex + 17)\n  \
    \      local letter18 = alphabet:sub(letterIndex + 17, letterIndex + 18)\n   \
    \     local letter19 = alphabet:sub(letterIndex + 18, letterIndex + 19)\n    \
    \    local letter20 = alphabet:sub(letterIndex + 19, letterIndex + 20)\n     \
    \   local letter21 = alphabet:sub(letterIndex + 20, letterIndex + 21)\n      \
    \  local letter22 = alphabet:sub(letterIndex + 21, letterIndex + 22)\n       \
    \ local letter23 = alphabet:sub(letterIndex + 22, letterIndex + 23)\n        local\
    \ letter24 = alphabet:sub(letterIndex + 23, letterIndex + 24)\n        local letter25\
    \ = alphabet:sub(letterIndex + 24, letterIndex + 25)\n        local letter26 =\
    \ alphabet:sub(letterIndex + 25, letterIndex + 26)\n        local letter27 = alphabet:sub(letterIndex\
    \ + 26, letterIndex + 27)\n        ", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local vowels = 'aeiou'\n  local messageLetters = message:gsub('%a', alphabet)\n\
    \  local messageVowels = messageLetters:gsub('%c', vowels)\n  local messageVowelsCount\
    \ = messageVowels:gsub('%c', function() return #vowels end)\n  local messageVowelsCount2\
    \ = messageVowelsCount:gsub('%c', function() return #vowels end)\n  local messageVowelsCount3\
    \ = messageVowelsCount2:gsub('%c', function() return #vowels end)\n  local messageVowelsCount4\
    \ = messageVowelsCount3:gsub('%c', function() return #vowels end)\n  local messageVowelsCount5\
    \ = messageVowelsCount4:gsub('%c', function() return #vowels end)\n  local messageVowelsCount6\
    \ = messageVowelsCount5:gsub('%c', function() return #vowels end)\n  local messageVowelsCount7\
    \ = messageVowelsCount6:gsub('%c', function() return #vowels end)\n  local messageVowelsCount8\
    \ = messageVowelsCount7:gsub('%c', function() return #vowels end)\n  local messageVowelsCount9\
    \ = messageVowelsCount8:gsub('%c', function() return #vowels end)\n  local messageVowelsCount10\
    \ = messageVowelsCount9:gsub('%c', function() return #vowels end)\n  local messageVowelsCount11\
    \ = messageVowelsCount10:gsub('%c', function() return #vowels end)\n  local messageVowelsCount12\
    \ = messageVowelsCount11:gsub('%c', function() return #vowels end)\n  local messageVowelsCount13\
    \ = messageVowelsCount12:gsub('%c', function() return #vowels end)\n  local messageVowelsCount14\
    \ = messageVowelsCount13:gsub('%c', function() return #vowels end)\n  local messageVowelsCount15\
    \ = messageVowelsCount14:gsub('%c', function() return #vowels end)\n  local messageVowelsCount16\
    \ = messageVowelsCount15:gsub('", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local vowels = 'aeiou'\n    local output = ''\n    for i = 1, #message do\n\
    \        local letter = message[i]\n        if letter ~= ' ' then\n          \
    \  local index = alphabet + alphabet:sub(1, letter:len()) + alphabet:sub(letter:len()+1)\n\
    \            local replacement = alphabet:sub(1, index:len()) + alphabet:sub(index:len()+1)\n\
    \            letter = letter:lower()\n            letter = letter:sub(1, letter:len())\
    \ + replacement:sub(1, replacement:len())\n            letter = letter:sub(1,\
    \ letter:len()) + letter:sub(2, letter:len())\n            output = output ..\
    \ letter\n        end\n    end\n    return output\nend", "  local alphabet = \"\
    ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n  local vowels = \"AEIOU\"\n  local result = \"\"\
    \n  for i = 1, #message do\n    local letter = message[i]\n    local vowel = letter:sub(1,\
    \ 1)\n    local index = alphabet:find(vowel)\n    if index == nil then\n     \
    \ index = alphabet:find(letter)\n    end\n    if index == nil then\n      index\
    \ = alphabet:find(vowel:sub(1, 1))\n    end\n    if index == nil then\n      index\
    \ = alphabet:find(letter:sub(1, 1))\n    end\n    if index == nil then\n     \
    \ index = alphabet:find(vowel:sub(1, 1))\n    end\n    if index == nil then\n\
    \      index = alphabet:find(letter:sub(1, 1))\n    end\n    if index == nil then\n\
    \      index = alphabet:find(vowel:sub(1, 1))\n    end\n    if index == nil then\n\
    \      index = alphabet:find(letter:sub(1, 1))\n    end\n    if index == nil then\n\
    \      index = alphabet:find(vowel:sub(1, 1))\n    end\n    if index == nil then\n\
    \      index = alphabet:find(letter:sub(1, 1))\n    end\n    if index == nil then\n\
    \      index = alphabet:find(vowel:sub(1, 1))\n    end\n    if index == nil then\n\
    \      index = alphabet:find(letter:sub(1, 1))\n    end\n    if index == nil then\n\
    \      index = alphabet:find(vowel:sub(1, 1))\n    end\n    if index == nil then\n\
    \      index = alphabet:find(letter:sub(1, 1))\n    end\n    if index == nil then\n\
    \      index = alphabet:find(vowel:sub(1, 1))\n    end\n    if index == nil then\n\
    \      index = alphabet:find(letter:sub(1, 1))\n    end\n    if index == nil then\n\
    \      index = alphabet:find(vowel:sub(1, 1))\n    end\n    if index == nil then\n\
    \      index = alphabet:find(letter:sub(1, 1))\n    end\n    if index == nil then\n\
    \      index = alphabet:find(vowel:sub(1, 1))\n    end\n    if index == nil then\n\
    \      index = alphabet:find(letter:sub(1, 1))\n    end\n    if index == nil then\n\
    \      index = alphabet:find(vowel:sub(1, 1))\n    end\n    if index == nil then\n\
    \      index = alphabet:find(letter:sub(1, 1))\n    end\n    if index == nil then\n\
    \      index = alphabet:find(vowel:sub(1, 1))\n    end\n    if index == nil then\n\
    \      index = ", "    local alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    local\
    \ vowels = \"AEIOU\"\n    local result = \"\"\n    for i = 1, #message do\n  \
    \      local char = message[i]\n        local index = alphabet.find(char)\n  \
    \      if index == nil then\n            index = alphabet.find(vowels, 1, index\
    \ + 1)\n        end\n        if index == nil then\n            index = alphabet.find(vowels,\
    \ index + 1, #alphabet)\n        end\n        if index == nil then\n         \
    \   index = #alphabet\n        end\n        local nextIndex = alphabet.find(vowels,\
    \ index + 1, #alphabet)\n        if nextIndex == nil then\n            nextIndex\
    \ = #alphabet\n        end\n        local nextChar = alphabet[nextIndex]\n   \
    \     local nextCharIndex = alphabet.find(nextChar, 1, nextIndex + 1)\n      \
    \  if nextCharIndex == nil then\n            nextCharIndex = #alphabet\n     \
    \   end\n        local nextCharNextIndex = alphabet.find(nextChar, nextIndex +\
    \ 1, #alphabet)\n        if nextCharNextIndex == nil then\n            nextCharNextIndex\
    \ = #alphabet\n        end\n        local nextCharNextNextIndex = alphabet.find(nextChar,\
    \ nextIndex + 1, nextIndex + 2)\n        if nextCharNextNextIndex == nil then\n\
    \            nextCharNextNextIndex = #alphabet\n        end\n        local nextCharNextNextNextIndex\
    \ = alphabet.find(nextChar, nextIndex + 1, nextIndex + 3)\n        if nextCharNextNextNextIndex\
    \ == nil then\n            nextCharNextNextNextIndex = #alphabet\n        end\n\
    \        local nextCharNextNextNextNextIndex = alphabet.find(nextChar, nextIndex\
    \ + 1, nextIndex + 4)\n        if nextCharNextNextNextNextIndex == nil then\n\
    \            nextCharNextNextNextNextIndex = #alphabet\n        end\n        local\
    \ nextCharNextNextNextNextNextIndex = alphabet.find(nextChar, nextIndex + 1, nextIndex\
    \ + 5)\n        if nextCharNextNextNextNextNextIndex == nil then\n           \
    \ nextCharNextNextNextNextNextIndex = #alphabet\n        end\n        local nextCharNextNextNextNextNextIndex\
    \ = alphabet.find(nextChar, nextIndex + 1, nextIndex + 6)\n        if nextCharNextNextNextNextNextIndex\
    \ == nil then\n            nextCharNextNextNextNextNextIndex = #alphabet\n   \
    \     end\n        local nextCharNextNextNextNextNextNextIndex = alphabet.find(nextChar,\
    \ nextIndex + 1, nextIndex + 7)\n        if nextCharNextNextNextNextNextNextIndex\
    \ == nil then\n            nextCharNextNextNextNextNextNextIndex = #alphabet\n\
    \        end\n        ", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local\
    \ vowels = 'aeiou'\n  local result = \"\"\n  for i = 1, #message do\n    local\
    \ char = message[i]\n    local index = alphabet.find(char)\n    if index == nil\
    \ then\n      result = result .. char\n    else\n      local vowel = alphabet[index\
    \ + 1]\n      local vowelIndex = alphabet.find(vowel)\n      if vowelIndex ==\
    \ nil then\n        result = result .. char\n      else\n        local newChar\
    \ = alphabet[vowelIndex + 1]\n        result = result .. newChar\n      end\n\
    \    end\n  end\n  return result\nend", "  local alphabet = {\n    ['A'] = 'A',\n\
    \    ['B'] = 'B',\n    ['C'] = 'C',\n    ['D'] = 'D',\n    ['E'] = 'E',\n    ['F']\
    \ = 'F',\n    ['G'] = 'G',\n    ['H'] = 'H',\n    ['I'] = 'I',\n    ['J'] = 'J',\n\
    \    ['K'] = 'K',\n    ['L'] = 'L',\n    ['M'] = 'M',\n    ['N'] = 'N',\n    ['O']\
    \ = 'O',\n    ['P'] = 'P',\n    ['Q'] = 'Q',\n    ['R'] = 'R',\n    ['S'] = 'S',\n\
    \    ['T'] = 'T',\n    ['U'] = 'U',\n    ['V'] = 'V',\n    ['W'] = 'W',\n    ['X']\
    \ = 'X',\n    ['Y'] = 'Y',\n    ['Z'] = 'Z',\n    ['a'] = 'a',\n    ['b'] = 'b',\n\
    \    ['c'] = 'c',\n    ['d'] = 'd',\n    ['e'] = 'e',\n    ['f'] = 'f',\n    ['g']\
    \ = 'g',\n    ['h'] = 'h',\n    ['i'] = 'i',\n    ['j'] = 'j',\n    ['k'] = 'k',\n\
    \    ['l'] = 'l',\n    ['m'] = 'm',\n    ['n'] = 'n',\n    ['o'] = 'o',\n    ['p']\
    \ = 'p',\n    ['q'] = 'q',\n    ['r'] = 'r',\n    ['s'] = 's',\n    ['t'] = 't',\n\
    \    ['u'] = 'u',\n    ['v'] = 'v',\n    ['w'] = 'w',\n    ['x'] = 'x',\n    ['y']\
    \ = 'y',\n    ['z'] = 'z',\n    [' '] = ' ',\n    ['.'] = '.',\n    ['!'] = '!',\n\
    \    ['?'] = '?',\n    ['('] = '(',\n    [')'] = ')',\n    ['-'] = '-',\n    ['_']\
    \ = '_',\n    ['/'] = '/',\n    ['\\\\'] = '\\\\',\n    [':'] = ':',\n    [';']\
    \ = ';',\n    ['\"'] = '\"',\n    ['\\''] = '\\'',\n    ['@'] = '@',\n    ['#']\
    \ = '#',\n    ['$'] = '$',\n    ['%'] = '%',\n    ['^'] = '^',\n    ['&'] = '&',\n\
    \    ['*'] = '*',\n    ['+'] = '+',\n    ['|'] = '|',\n    ['~'] = '~',\n    ['`']\
    \ = '`',\n    ['!'] = '!',\n    ['?'] = '?',\n    ['<'] = '<',\n    ['>'] = '>',\n\
    \    ['?'] = '?',\n    ['{'] = '{',\n    ['}'] = '}',\n    ['|'] = '|',\n    ['\\\
    \\'] = '\\\\',\n    [':'] = ':',\n    [';'] = ';',\n    ['\"'] = '\"',\n    ['\\\
    ''] = '\\'',", "  -- Write your code here\n  local vowels = {'a', 'e', 'i', 'o',\
    \ 'u'}\n  local alphabet = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j',\
    \ 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n\
    \  local messages = {}\n  local vowels_count = 0\n  local vowels_positions = {}\n\
    \  for i = 1, #message do\n    if message[i] == ' ' then\n      messages[#messages\
    \ + 1] = message[i - 1]\n      messages[#messages + 1] = message[i]\n    else\n\
    \      local letter = message[i]\n      local position = alphabet.find(letter)\n\
    \      if position == nil then\n        position = alphabet.find(tolower(letter))\n\
    \      end\n      if position == nil then\n        position = alphabet.find(toupper(letter))\n\
    \      end\n      if position == nil then\n        position = alphabet.find(letter)\n\
    \      end\n      if position == nil then\n        position = alphabet.find(tolower(letter))\n\
    \      end\n      if position == nil then\n        position = alphabet.find(toupper(letter))\n\
    \      end\n      if position == nil then\n        position = alphabet.find(letter)\n\
    \      end\n      if position == nil then\n        position = alphabet.find(tolower(letter))\n\
    \      end\n      if position == nil then\n        position = alphabet.find(toupper(letter))\n\
    \      end\n      if position == nil then\n        position = alphabet.find(letter)\n\
    \      end\n      if position == nil then\n        position = alphabet.find(tolower(letter))\n\
    \      end\n      if position == nil then\n        position = alphabet.find(toupper(letter))\n\
    \      end\n      if position == nil then\n        position = alphabet.find(letter)\n\
    \      end\n      if position == nil then\n        position = alphabet.find(tolower(letter))\n\
    \      end\n      if position == nil then\n        position = alphabet.find(toupper(letter))\n\
    \      end\n      if position == nil then\n        position = alphabet.find(letter)\n\
    \      end\n      if position == nil then\n        position = alphabet.find(tolower(letter))\n\
    \      end\n      if position == nil then\n        position = alphabet.find(toupper(letter))\n\
    \      end\n      if position == nil then\n        position = alphabet.find(letter)\n\
    \      end\n      if position == nil then\n        position = alphabet.find(tolower(letter))\n\
    \      end\n      if position == nil then\n        position = ", "  -- Write your\
    \ solution here\n  -- Hint: Use a for loop to iterate over the message\n  -- Hint:\
    \ Use a dictionary to map the english letters to their \n  -- position in the\
    \ alphabet\n  -- Hint: Use a dictionary to map the vowels to the letter that \n\
    \  -- appears 2 places ahead of them\n  -- Hint: Use a dictionary to map the vowels\
    \ to the letter that \n  -- appears 3 places ahead of them\n  -- Hint: Use a dictionary\
    \ to map the vowels to the letter that \n  -- appears 4 places ahead of them\n\
    \  -- Hint: Use a dictionary to map the vowels to the letter that \n  -- appears\
    \ 5 places ahead of them\n  -- Hint: Use a dictionary to map the vowels to the\
    \ letter that \n  -- appears 6 places ahead of them\n  -- Hint: Use a dictionary\
    \ to map the vowels to the letter that \n  -- appears 7 places ahead of them\n\
    \  -- Hint: Use a dictionary to map the vowels to the letter that \n  -- appears\
    \ 8 places ahead of them\n  -- Hint: Use a dictionary to map the vowels to the\
    \ letter that \n  -- appears 9 places ahead of them\n  -- Hint: Use a dictionary\
    \ to map the vowels to the letter that \n  -- appears 10 places ahead of them\n\
    \  -- Hint: Use a dictionary to map the vowels to the letter that \n  -- appears\
    \ 11 places ahead of them\n  -- Hint: Use a dictionary to map the vowels to the\
    \ letter that \n  -- appears 12 places ahead of them\n  -- Hint: Use a dictionary\
    \ to map the vowels to the letter that \n  -- appears 13 places ahead of them\n\
    \  -- Hint: Use a dictionary to map the vowels to the letter that \n  -- appears\
    \ 14 places ahead of them\n  -- Hint: Use a dictionary to map the vowels to the\
    \ letter that \n  -- appears 15 places ahead of them\n  -- Hint: Use a dictionary\
    \ to map the vowels to the letter that \n  -- appears 16 places ahead of them\n\
    \  -- Hint: Use a dictionary to map the vowels to the letter that \n  -- appears\
    \ 17 places ahead of them\n  -- Hint: Use a dictionary to map the vowels to the\
    \ letter that \n  -- appears 18 places ahead of them\n  -- Hint: Use a dictionary\
    \ to map the vowels to the letter that \n  -- appears 19 places ahead of them\n\
    \  -- ", "    local alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    local vowels\
    \ = \"AEIOU\"\n    local result = \"\"\n    for i = 1, #message do\n        local\
    \ letter = message[i]\n        local vowel = letter:sub(1, 1)\n        local position\
    \ = alphabet + vowel:sub(1, 1)\n        local letter2 = alphabet:sub(position,\
    \ 1)\n        local letter3 = alphabet:sub(position + 1, 1)\n        local letter4\
    \ = alphabet:sub(position + 2, 1)\n        local letter5 = alphabet:sub(position\
    \ + 3, 1)\n        local letter6 = alphabet:sub(position + 4, 1)\n        local\
    \ letter7 = alphabet:sub(position + 5, 1)\n        local letter8 = alphabet:sub(position\
    \ + 6, 1)\n        local letter9 = alphabet:sub(position + 7, 1)\n        local\
    \ letter10 = alphabet:sub(position + 8, 1)\n        local letter11 = alphabet:sub(position\
    \ + 9, 1)\n        local letter12 = alphabet:sub(position + 10, 1)\n        local\
    \ letter13 = alphabet:sub(position + 11, 1)\n        local letter14 = alphabet:sub(position\
    \ + 12, 1)\n        local letter15 = alphabet:sub(position + 13, 1)\n        local\
    \ letter16 = alphabet:sub(position + 14, 1)\n        local letter17 = alphabet:sub(position\
    \ + 15, 1)\n        local letter18 = alphabet:sub(position + 16, 1)\n        local\
    \ letter19 = alphabet:sub(position + 17, 1)\n        local letter20 = alphabet:sub(position\
    \ + 18, 1)\n        local letter21 = alphabet:sub(position + 19, 1)\n        local\
    \ letter22 = alphabet:sub(position + 20, 1)\n        local letter23 = alphabet:sub(position\
    \ + 21, 1)\n        local letter24 = alphabet:sub(position + 22, 1)\n        local\
    \ letter25 = alphabet:sub(position + 23, 1)\n        local letter26 = alphabet:sub(position\
    \ + 24, 1)\n        local letter27 = alphabet:sub(position + 25, 1)\n        local\
    \ letter28 = alphabet:sub(position + 26, 1)\n        local letter29 = alphabet:sub(position\
    \ + 27, 1)\n        local letter30 = alphabet:sub(position + 28, 1)\n        local\
    \ letter31 = alphabet:sub(position + 29, 1)\n        local letter32 = alphabet:sub(position\
    \ + 30, 1)\n        local letter33 = alphabet:sub(position + 31, 1)\n        local\
    \ letter34 = alphabet:sub(position + 32, 1)\n        local letter35 = alphabet:sub(position\
    \ + 33, 1)\n        local letter36 = alphabet:sub(position + 34, 1)\n        local ",
  "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  local vowels = \"aeiou\"\n\
    \  local output = ''\n  for i = 1, #message do\n    local letter = message[i]\n\
    \    local index = alphabet and alphabet:find(letter)\n    if index then\n   \
    \   local vowel = vowels:sub(index, index + 1)\n      local letter2 = alphabet:sub(index\
    \ + 1, index + 2)\n      output = output .. letter .. letter2\n    else\n    \
    \  output = output .. letter\n    end\n  end\n  return output\nend", "  local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local vowels = 'aeiou'\n  local result\
    \ = message\n  local vowel_counter = 0\n  for i = 1, #message do\n    local char\
    \ = message[i]\n    local index = alphabet == char ? i : alphabet == char:lower()\
    \ ? i:lower() end\n    local next_char = message[index + 1]\n    local vowel_index\
    \ = vowels == next_char ? index + 1 : vowels == next_char:lower() ? index + 1:lower()\
    \ end\n    if vowel_index > #vowels then\n      vowel_index = #vowels\n    end\n\
    \    local vowel = vowels:sub(vowel_index, vowel_index + 1)\n    local new_char\
    \ = alphabet:sub(index, index + 1)\n    result = result:sub(#result - 1, #result)\
    \ .. new_char .. vowel\n    vowel_counter = vowel_counter + 1\n    if vowel_counter\
    \ > 2 then\n      result = result:sub(#result - 1, #result) .. new_char\n    end\n\
    \  end\n  return result\nend", "  local alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n  local vowels = \"AEIOU\"\n  local result = \"\"\n  for i = 1, #message do\n\
    \    local letter = message[i]\n    local index = alphabet .. vowels .. alphabet\n\
    \    local replacement = alphabet:sub(i, i + 2)\n    local newLetter = index:sub(1,\
    \ index:find(letter))\n    result = result .. newLetter\n  end\n  return result\n\
    end", "  local vowels = \"aeiouAEIOU\"\n  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n  local messageLength = #message\n  local encodedMessage = \"\"\n  local index\n\
    \  for index = 1, messageLength do\n    local letter = message[index]\n    local\
    \ vowelIndex = string.find(vowels, letter)\n    if vowelIndex > 0 then\n     \
    \ local vowel = vowels[vowelIndex]\n      local vowelIndex = string.find(vowels,\
    \ letter, vowelIndex + 1)\n      local nextLetter = alphabet[vowelIndex + 1]\n\
    \      local encodedLetter = string.sub(alphabet, vowelIndex + 1, vowelIndex +\
    \ 2)\n      encodedMessage = encodedMessage .. nextLetter .. vowel\n    else\n\
    \      encodedMessage = encodedMessage .. letter\n    end\n  end\n  return encodedMessage\n\
    end", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local vowels = 'aeiou'\n\
    \  local output = ''\n  local vowelIndex = 0\n  for i = 1, #message do\n    local\
    \ char = message[i]\n    local index = alphabet.find(char)\n    if index == nil\
    \ then\n      output = '' -- invalid character\n      break\n    end\n    local\
    \ nextVowelIndex = index + 1 -- index of next vowel\n    local nextVowel = alphabet[nextVowelIndex]\n\
    \    local nextVowelIndex = alphabet.find(nextVowel)\n    if nextVowelIndex ==\
    \ nil then\n      output = '' -- invalid character\n      break\n    end\n   \
    \ local nextVowel = alphabet[nextVowelIndex]\n    if vowelIndex == 0 then\n  \
    \    output = output .. nextVowel\n      vowelIndex = nextVowelIndex\n    elseif\
    \ vowelIndex == nextVowelIndex then\n      output = output .. nextVowel\n    \
    \  vowelIndex = nextVowelIndex\n    else\n      output = output .. nextVowel ..\
    \ alphabet[vowelIndex + 1]\n      vowelIndex = nextVowelIndex\n    end\n  end\n\
    \  return output\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local\
    \ vowels = 'aeiou'\n  local result = ''\n  for i = 1, #message do\n    local char\
    \ = message[i]\n    local index = alphabet.find(char)\n    if index == nil then\n\
    \      result = result .. char\n    else\n      local vowel = vowels[index]\n\
    \      local vowelIndex = alphabet.find(vowel)\n      local vowel2 = alphabet[vowelIndex\
    \ + 1]\n      result = result .. alphabet[vowelIndex - 2] .. vowel2\n    end\n\
    \  end\n  return result\nend", "  local alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n  local vowels = \"AEIOU\"\n  local result = \"\"\n  for i = 1, #message do\n\
    \    local char = message[i]\n    local vowel = string.sub(alphabet, string.find(alphabet,\
    \ char) + 1, string.find(alphabet, char) + 1)\n    local letter = string.sub(alphabet,\
    \ string.find(alphabet, char) + 1, string.find(alphabet, char) + 2)\n    if string.find(vowels,\
    \ vowel) then\n      result = result .. string.sub(alphabet, string.find(alphabet,\
    \ char) + 2, string.find(alphabet, char) + 3)\n    else\n      result = result\
    \ .. letter\n    end\n  end\n  return result\nend", "    local alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n    local vowels = \"AEIOU\"\n    local output = ''\n    local vowelIndex =\
    \ 1\n    for i = 1, #message do\n        local char = message[i]\n        if char\
    \ in vowels then\n            local nextVowel = alphabet[vowelIndex + 1]\n   \
    \         local nextVowelIndex = alphabet + vowelIndex\n            local nextVowelIndex\
    \ = nextVowelIndex:sub(1, 1)\n            local nextVowelIndex = nextVowelIndex:sub(2,\
    \ 2)\n            local nextVowelIndex = nextVowelIndex:sub(3, 3)\n          \
    \  local nextVowelIndex = nextVowelIndex:sub(4, 4)\n            local nextVowelIndex\
    \ = nextVowelIndex:sub(5, 5)\n            local nextVowelIndex = nextVowelIndex:sub(6,\
    \ 6)\n            local nextVowelIndex = nextVowelIndex:sub(7, 7)\n          \
    \  local nextVowelIndex = nextVowelIndex:sub(8, 8)\n            local nextVowelIndex\
    \ = nextVowelIndex:sub(9, 9)\n            local nextVowelIndex = nextVowelIndex:sub(10,\
    \ 10)\n            local nextVowelIndex = nextVowelIndex:sub(11, 11)\n       \
    \     local nextVowelIndex = nextVowelIndex:sub(12, 12)\n            local nextVowelIndex\
    \ = nextVowelIndex:sub(13, 13)\n            local nextVowelIndex = nextVowelIndex:sub(14,\
    \ 14)\n            local nextVowelIndex = nextVowelIndex:sub(15, 15)\n       \
    \     local nextVowelIndex = nextVowelIndex:sub(16, 16)\n            local nextVowelIndex\
    \ = nextVowelIndex:sub(17, 17)\n            local nextVowelIndex = nextVowelIndex:sub(18,\
    \ 18)\n            local nextVowelIndex = nextVowelIndex:sub(19, 19)\n       \
    \     local nextVowelIndex = nextVowelIndex:sub(20, 20)\n            local nextVowelIndex\
    \ = nextVowelIndex:sub(21, 21)\n            local nextVowelIndex = nextVowelIndex:sub(22,\
    \ 22)\n            local nextVowelIndex = nextVowelIndex:sub(23, 23)\n       \
    \     local nextVowelIndex = nextVowelIndex:sub(24, 24)\n            local nextVowelIndex\
    \ = nextVowelIndex:sub(25, 25)\n            ", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local vowels = \"aeiou\"\n    local output = ''\n    for i = 1, #message\
    \ do\n        local char = message[i]\n        if #alphabet > 1 then\n       \
    \     local index = alphabet.find(char)\n            if index > -1 then\n    \
    \            local vowel = vowels[index]\n                local next = alphabet[(index\
    \ + 1) % #alphabet]\n                output = output .. vowel .. next\n      \
    \      else\n                output = output .. char\n            end\n      \
    \  else\n            output = output .. char\n        end\n    end\n    return\
    \ output\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local\
    \ vowels = 'aeiou'\n    local message = '' -- Initialize message with empty string\n\
    \    for i = 1, #message do\n        local letter = message[i]\n        -- Swap\
    \ the case of the letter\n        local swap = alphabet[letter:lower()] .. alphabet[letter:upper()]\n\
    \        -- Replace the vowels with the letter that appears 2 places ahead\n \
    \       -- of the vowel in the alphabet\n        local replace = vowels[#vowels]\n\
    \        -- Replace the vowel with the letter that appears 2 places ahead\n  \
    \      -- of the vowel in the alphabet\n        local replace2 = vowels[#vowels]\n\
    \        -- Replace the vowel with the letter that appears 2 places ahead\n  \
    \      -- of the vowel in the alphabet\n        local replace3 = vowels[#vowels]\n\
    \        -- Replace the vowel with the letter that appears 2 places ahead\n  \
    \      -- of the vowel in the alphabet\n        local replace4 = vowels[#vowels]\n\
    \        -- Replace the vowel with the letter that appears 2 places ahead\n  \
    \      -- of the vowel in the alphabet\n        local replace5 = vowels[#vowels]\n\
    \        -- Replace the vowel with the letter that appears 2 places ahead\n  \
    \      -- of the vowel in the alphabet\n        local replace6 = vowels[#vowels]\n\
    \        -- Replace the vowel with the letter that appears 2 places ahead\n  \
    \      -- of the vowel in the alphabet\n        local replace7 = vowels[#vowels]\n\
    \        -- Replace the vowel with the letter that appears 2 places ahead\n  \
    \      -- of the vowel in the alphabet\n        local replace8 = vowels[#vowels]\n\
    \        -- Replace the vowel with the letter that appears 2 places ahead\n  \
    \      -- of the vowel in the alphabet\n        local replace9 = vowels[#vowels]\n\
    \        -- Replace the vowel with the letter that appears 2 places ahead\n  \
    \      -- of the vowel in the alphabet\n        local replace10 = vowels[#vowels]\n\
    \        -- Replace the vowel with the letter that appears 2 places ahead\n  \
    \      -- of the vowel in the alphabet\n        local replace11 = vowels[#vowels]\n\
    \        -- Replace the vowel with the letter that appears 2 places ahead\n  \
    \      -- of the vowel in the alphabet\n        local replace12 = vowels[#vowels]\n\
    \        -- Replace the vowel with the letter that appears 2 places ahead\n  \
    \      -- of the vowel in the alphabet\n        local replace13 = vowels[#vowels]\n\
    \        -- Replace the vowel ", "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n  local vowels = \"aeiou\"\n  local output = ''\n  local vowelIndex = 1\n  for\
    \ i = 1, #message do\n    local letter = message[i]\n    local letterIndex = alphabet.find(letter)\n\
    \    local vowelIndex = alphabet.find(vowels[letterIndex])\n    local letter2\
    \ = alphabet[letterIndex + 1]\n    local vowel2 = alphabet[vowelIndex + 1]\n \
    \   local letter3 = alphabet[letterIndex + 2]\n    local vowel3 = alphabet[vowelIndex\
    \ + 2]\n    local letter4 = alphabet[letterIndex + 3]\n    local vowel4 = alphabet[vowelIndex\
    \ + 3]\n    local letter5 = alphabet[letterIndex + 4]\n    local vowel5 = alphabet[vowelIndex\
    \ + 4]\n    local letter6 = alphabet[letterIndex + 5]\n    local vowel6 = alphabet[vowelIndex\
    \ + 5]\n    local letter7 = alphabet[letterIndex + 6]\n    local vowel7 = alphabet[vowelIndex\
    \ + 6]\n    local letter8 = alphabet[letterIndex + 7]\n    local vowel8 = alphabet[vowelIndex\
    \ + 7]\n    local letter9 = alphabet[letterIndex + 8]\n    local vowel9 = alphabet[vowelIndex\
    \ + 8]\n    local letter10 = alphabet[letterIndex + 9]\n    local vowel10 = alphabet[vowelIndex\
    \ + 9]\n    local letter11 = alphabet[letterIndex + 10]\n    local vowel11 = alphabet[vowelIndex\
    \ + 10]\n    local letter12 = alphabet[letterIndex + 11]\n    local vowel12 =\
    \ alphabet[vowelIndex + 11]\n    local letter13 = alphabet[letterIndex + 12]\n\
    \    local vowel13 = alphabet[vowelIndex + 12]\n    local letter14 = alphabet[letterIndex\
    \ + 13]\n    local vowel14 = alphabet[vowelIndex + 13]\n    local letter15 = alphabet[letterIndex\
    \ + 14]\n    local vowel15 = alphabet[vowelIndex + 14]\n    local letter16 = alphabet[letterIndex\
    \ + 15]\n    local vowel16 = alphabet[vowelIndex + 15]\n    local letter17 = alphabet[letterIndex\
    \ + 16]\n    local vowel17 = alphabet[vowelIndex + 16]\n    local letter18 = alphabet[letterIndex\
    \ + 17]\n    local vowel18 = alphabet[vowelIndex + 17]\n    local letter19 = alphabet[letterIndex\
    \ + 18]\n    local vowel19 = alphabet[vowelIndex + 18]\n    local letter20 = alphabet[letterIndex\
    \ + 19]\n    local ", "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  local\
    \ vowels = \"aeiou\"\n  local result = \"\"\n  for i = 1, #message do\n    local\
    \ letter = message[i]\n    local index = alphabet.find(letter)\n    if index ==\
    \ nil then\n      index = alphabet.find(vowels, letter)\n      if index == nil\
    \ then\n        index = alphabet.find(vowels, letter + 1)\n        if index ==\
    \ nil then\n          index = alphabet.find(vowels, letter + 2)\n        end\n\
    \      end\n    end\n    local next = alphabet[index + 1]\n    local last = alphabet[index\
    \ + 2]\n    local middle = alphabet[index + 3]\n    local middle2 = alphabet[index\
    \ + 4]\n    local middle3 = alphabet[index + 5]\n    local middle4 = alphabet[index\
    \ + 6]\n    local middle5 = alphabet[index + 7]\n    local middle6 = alphabet[index\
    \ + 8]\n    local middle7 = alphabet[index + 9]\n    local middle8 = alphabet[index\
    \ + 10]\n    local middle9 = alphabet[index + 11]\n    local middle10 = alphabet[index\
    \ + 12]\n    local middle11 = alphabet[index + 13]\n    local middle12 = alphabet[index\
    \ + 14]\n    local middle13 = alphabet[index + 15]\n    local middle14 = alphabet[index\
    \ + 16]\n    local middle15 = alphabet[index + 17]\n    local middle16 = alphabet[index\
    \ + 18]\n    local middle17 = alphabet[index + 19]\n    local middle18 = alphabet[index\
    \ + 20]\n    local middle19 = alphabet[index + 21]\n    local middle20 = alphabet[index\
    \ + 22]\n    local middle21 = alphabet[index + 23]\n    local middle22 = alphabet[index\
    \ + 24]\n    local middle23 = alphabet[index + 25]\n    local middle24 = alphabet[index\
    \ + 26]\n    local middle25 = alphabet[index + 27]\n    local middle26 = alphabet[index\
    \ + 28]\n    local middle27 = alphabet[index + 29]\n    local middle28 = alphabet[index\
    \ + 30]\n    local middle29 = alphabet[index + 31]\n    local middle30 = alphabet[index\
    \ + 32]\n    local middle31 = alphabet[index + 33]\n    local middle32 = alphabet[index\
    \ + 34]\n    local middle33 = alphabet[index + 35]\n    local middle34 = alphabet[index\
    \ + 36]\n    local middle35 = alphabet[index + 37]\n    local middle36 = alphabet[index\
    \ + 38]\n    local middle37 = alphabet[index + 39]", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local vowels = 'aeiou'\n    local output = ''\n    for i = 1, #message do\n\
    \        local letter = message[i]\n        local vowel = letter:sub(1, 1)\n \
    \       local index = alphabet:find(vowel)\n        if index == nil then\n   \
    \         -- The letter isn't a vowel, so just add it to the output\n        \
    \    output = output .. letter\n        else\n            -- The letter is a vowel,\
    \ so swap it with the letter that \n            -- appears 2 places ahead of the\
    \ vowel in the alphabet\n            output = output .. alphabet:sub(index, index\
    \ + 1)\n        end\n    end\n    return output\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local vowels = 'aeiou'\n  local output = ''\n  for i = 1, #message do\n   \
    \ local letter = message[i]\n    local index = alphabet == letter or alphabet\
    \ == letter:lower() and letter:upper() or letter\n    local vowelIndex = vowels:find(letter)\n\
    \    if vowelIndex then\n      local nextVowelIndex = vowelIndex + 2\n      local\
    \ nextVowel = alphabet:sub(1, nextVowelIndex)\n      local nextLetter = alphabet:sub(nextVowelIndex\
    \ + 1, #alphabet)\n      output = output .. nextLetter\n    else\n      output\
    \ = output .. letter\n    end\n  end\n  return output\nend", "    local vowels\
    \ = {'a', 'e', 'i', 'o', 'u'}\n    local alphabet = {string.lowercase, string.uppercase,\
    \ string.digit}\n    local result = ''\n    for i = 1, #message do\n        local\
    \ char = string.sub(message, i, i)\n        if char in alphabet then\n       \
    \     local index = alphabet.indexOf(char)\n            local vowel = string.sub(message,\
    \ i, i + 1)\n            local nextVowel = string.sub(message, i + 1, i + 2)\n\
    \            if vowel in vowels then\n                local index = vowels.indexOf(vowel)\n\
    \                local nextVowelIndex = alphabet.indexOf(nextVowel)\n        \
    \        local newChar = alphabet[index + (nextVowelIndex - index)]\n        \
    \        result = result .. newChar\n            else\n                result\
    \ = result .. char\n            end\n        end\n    end\n    return result\n\
    end", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local vowels = 'aeiou'\n\
    \  local output = ''\n  for i = 1, #message do\n    local letter = message[i]\n\
    \    local vowel = letter:sub(1, 1)\n    local index = alphabet:find(vowel)\n\
    \    if index == nil then\n      output = output .. letter\n    else\n      local\
    \ letter2 = alphabet:sub((index + 1), (index + 2))\n      output = output .. alphabet:sub(index,\
    \ index) .. letter2\n    end\n  end\n  return output\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local vowels = 'aeiou'\n    local output\
    \ = ''\n    local index = 1\n    for i = 1, #message do\n        local char =\
    \ message[i]\n        if char in vowels then\n            local index = alphabet\
    \ + alphabet:sub((index - 1), (index + 1))\n            index = index - 1\n  \
    \          local char = alphabet:sub((index - 1), (index + 1))\n            output\
    \ = output .. char\n        else\n            output = output .. char\n      \
    \  end\n    end\n    return output\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local vowels = 'aeiou'\n  local vowel_positions = {}\n  local new_message =\
    \ ''\n  for i = 1, #message do\n    local letter = message[i]\n    local position\
    \ = alphabet and alphabet:find(letter)\n    if position then\n      position =\
    \ position + 2\n      if not vowel_positions[position] then\n        vowel_positions[position]\
    \ = letter\n      else\n        local vowel = vowels:find(vowel_positions[position])\n\
    \        if vowel then\n          vowel = vowel + 2\n          new_message = new_message\
    \ .. vowel_positions[position]\n        else\n          new_message = new_message\
    \ .. vowel_positions[position]\n        end\n      end\n    else\n      new_message\
    \ = new_message .. letter\n    end\n  end\n  return new_message\nend", "    local\
    \ vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n    local alphabet = {\n        'a',\
    \ 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q',\
    \ 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'\n    }\n    local result = \"\"\n\
    \    for i = 1, #message do\n        local letter = message[i]\n        local\
    \ index = alphabet.indexOf(letter)\n        if index == nil then\n           \
    \ index = alphabet.indexOf(vowels[i])\n        end\n        if index == nil then\n\
    \            index = alphabet.indexOf(vowels[#vowels])\n        end\n        if\
    \ index == nil then\n            index = alphabet.indexOf(vowels[#vowels - 1])\n\
    \        end\n        if index == nil then\n            index = alphabet.indexOf(vowels[#vowels\
    \ - 2])\n        end\n        if index == nil then\n            index = alphabet.indexOf(vowels[#vowels\
    \ - 3])\n        end\n        if index == nil then\n            index = alphabet.indexOf(vowels[#vowels\
    \ - 4])\n        end\n        if index == nil then\n            index = alphabet.indexOf(vowels[#vowels\
    \ - 5])\n        end\n        if index == nil then\n            index = alphabet.indexOf(vowels[#vowels\
    \ - 6])\n        end\n        if index == nil then\n            index = alphabet.indexOf(vowels[#vowels\
    \ - 7])\n        end\n        if index == nil then\n            index = alphabet.indexOf(vowels[#vowels\
    \ - 8])\n        end\n        if index == nil then\n            index = alphabet.indexOf(vowels[#vowels\
    \ - 9])\n        end\n        if index == nil then\n            index = alphabet.indexOf(vowels[#vowels\
    \ - 10])\n        end\n        if index == nil then\n            index = alphabet.indexOf(vowels[#vowels\
    \ - 11])\n        end\n        if index == nil then\n            index = alphabet.indexOf(vowels[#vowels\
    \ - 12])\n        end\n        if index == nil then\n            index = alphabet.indexOf(vowels[#vowels\
    \ - 13])\n        end\n        if index == nil then\n            index = alphabet.indexOf(vowels[#vowels\
    \ - 14])\n        end\n        if index == nil then\n            index = alphabet.indexOf(vowels[#vowels\
    \ - 15])\n        end\n        if index == nil then\n            index = alphabet.indexOf(vowels[#vowels\
    \ - 16])\n        end\n        if index == nil then\n            index = alphabet.indexOf(vowels[#vowels\
    \ - 17])\n        end\n        if index == nil then\n            index = alphabet.indexOf(vowels[#vowels\
    \ - 18])\n        end\n        if ", "    local alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n    local vowels = \"AEIOU\"\n    local output = ''\n    for i = 1, #message\
    \ do\n        local char = message[i]\n        if char in vowels then\n      \
    \      local index = alphabet + char\n            local index2 = alphabet + message[i\
    \ + 2]\n            local index3 = alphabet + message[i + 3]\n            local\
    \ index4 = alphabet + message[i + 4]\n            local index5 = alphabet + message[i\
    \ + 5]\n            local index6 = alphabet + message[i + 6]\n            local\
    \ index7 = alphabet + message[i + 7]\n            local index8 = alphabet + message[i\
    \ + 8]\n            local index9 = alphabet + message[i + 9]\n            local\
    \ index10 = alphabet + message[i + 10]\n            local index11 = alphabet +\
    \ message[i + 11]\n            local index12 = alphabet + message[i + 12]\n  \
    \          local index13 = alphabet + message[i + 13]\n            local index14\
    \ = alphabet + message[i + 14]\n            local index15 = alphabet + message[i\
    \ + 15]\n            local index16 = alphabet + message[i + 16]\n            local\
    \ index17 = alphabet + message[i + 17]\n            local index18 = alphabet +\
    \ message[i + 18]\n            local index19 = alphabet + message[i + 19]\n  \
    \          local index20 = alphabet + message[i + 20]\n            local index21\
    \ = alphabet + message[i + 21]\n            local index22 = alphabet + message[i\
    \ + 22]\n            local index23 = alphabet + message[i + 23]\n            local\
    \ index24 = alphabet + message[i + 24]\n            local index25 = alphabet +\
    \ message[i + 25]\n            local index26 = alphabet + message[i + 26]\n  \
    \          local index27 = alphabet + message[i + 27]\n            local index28\
    \ = alphabet + message[i + 28]\n            local index29 = alphabet + message[i\
    \ + 29]\n            local index30 = alphabet + message[i + 30]\n            local\
    \ index31 = alphabet + message[i + 31]\n            local index32 = alphabet +\
    \ message[i + 32]\n            local index33 = alphabet + message[i + 33]\n  \
    \          local index34 = alphabet + message[i + 34]\n            local index35\
    \ = alphabet + message[i + 35]\n            local index36 = alphabet + message[i\
    \ + 36]\n            local index37 = alphabet + message[i + 37]\n            local\
    \ index38", "    local alphabet = {\n        'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P',\n\
    \        'Q','R','S','T','U','V','W','X','Y','Z','a','b','c','d','e','f',\n  \
    \      'g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v',\n    \
    \    'w','x','y','z','A','B','C','D','E','F','G','H','I','J','K','L',\n      \
    \  'M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','a','b',\n        'c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r',\n\
    \        's','t','u','v','w','x','y','z','0','1','2','3','4','5','6','7',\n  \
    \      '8','9','-','.'\n    }\n    local vowels = {\n        'a','e','i','o','u'\n\
    \    }\n    local result = \"\"\n    for i = 1, #message do\n        local letter\
    \ = message[i]\n        if letter ~= nil then\n            local index = alphabet[letter]\n\
    \            local nextLetter = alphabet[alphabet[index + 1]]\n            if\
    \ nextLetter ~= nil then\n                local vowelIndex = vowels[letter]\n\
    \                local vowel = alphabet[vowelIndex]\n                local vowelNextLetter\
    \ = alphabet[alphabet[vowelIndex + 1]]\n                if vowel ~= nil then\n\
    \                    result = result .. vowel\n                elseif vowelNextLetter\
    \ ~= nil then\n                    result = result .. vowelNextLetter\n      \
    \          end\n            end\n        end\n    end\n    return result\nend",
  "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local vowels = 'aeiou'\n  local\
    \ output = ''\n  for i = 1, #message do\n    local letter = message[i]\n    local\
    \ index = alphabet + alphabet:sub(1, i) + alphabet:sub(i + 1, #alphabet)\n   \
    \ local replacement = alphabet:sub(i + 1, #alphabet)\n    local vowelIndex = letter:find(vowels)\n\
    \    if vowelIndex > 0 then\n      letter = letter:sub(1, vowelIndex - 1) + replacement:sub(1,\
    \ #replacement)\n    end\n    output = output .. letter\n  end\n  return output\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local vowels = 'aeiou'\n\
    \    local output = ''\n    local vowelIndex = 1\n    for i = 1, #message do\n\
    \        local char = message[i]\n        if #alphabet > 1 then\n            local\
    \ index = alphabet + char\n            local nextIndex = alphabet + message[i\
    \ + 1]\n            if nextIndex == index then\n                index = nextIndex\n\
    \                vowelIndex = vowelIndex + 1\n            end\n            local\
    \ vowel = vowels[vowelIndex]\n            local nextVowel = vowels[vowelIndex\
    \ + 1]\n            local newIndex = index:sub(1, #index - #vowel) + vowel + nextVowel\n\
    \            local newIndex = newIndex:sub(1, #newIndex - #nextVowel)\n      \
    \      local newIndex = newIndex:sub(1, #newIndex - #vowel)\n            local\
    \ newIndex = newIndex:sub(1, #newIndex - #vowel)\n            local newIndex =\
    \ newIndex:sub(1, #newIndex - #vowel)\n            local newIndex = newIndex:sub(1,\
    \ #newIndex - #vowel)\n            local newIndex = newIndex:sub(1, #newIndex\
    \ - #vowel)\n            local newIndex = newIndex:sub(1, #newIndex - #vowel)\n\
    \            local newIndex = newIndex:sub(1, #newIndex - #vowel)\n          \
    \  local newIndex = newIndex:sub(1, #newIndex - #vowel)\n            local newIndex\
    \ = newIndex:sub(1, #newIndex - #vowel)\n            local newIndex = newIndex:sub(1,\
    \ #newIndex - #vowel)\n            local newIndex = newIndex:sub(1, #newIndex\
    \ - #vowel)\n            local newIndex = newIndex:sub(1, #newIndex - #vowel)\n\
    \            local newIndex = newIndex:sub(1, #newIndex - #vowel)\n          \
    \  local newIndex = newIndex:sub(1, #newIndex - #vowel)\n            local newIndex\
    \ = newIndex:sub(1, #newIndex - #vowel)\n            local newIndex = newIndex:sub(1,\
    \ #newIndex - #vowel)\n            local newIndex = newIndex:sub(1, #newIndex\
    \ - #vowel)\n            local newIndex = newIndex:sub(1, #newIndex - #vowel)\n\
    \            local newIndex = newIndex:sub(1, #newIndex - #vowel)\n          \
    \  local newIndex = newIndex:sub(1, #newIndex - #vowel)\n            local newIndex\
    \ = newIndex:sub(1, #newIndex - ", "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n  local vowels = \"aeiou\"\n  local output = ''\n  for i = 1, #message do\n\
    \    local char = message[i]\n    local vowel = string.sub(alphabet, string.find(alphabet,\
    \ char) + 1)\n    local replacement = string.sub(alphabet, string.find(alphabet,\
    \ vowel) + 1)\n    output = output .. string.sub(vowels, 1, string.find(vowels,\
    \ vowel)-1) .. replacement\n  end\n  return output\nend", "  local alphabet =\
    \ 'abcdefghijklmnopqrstuvwxyz'\n  local vowels = 'aeiou'\n  local output = ''\n\
    \  for i = 1, #message do\n    local char = message[i]\n    local index = alphabet.find(char)\n\
    \    if index == nil then\n      output = output .. char\n    else\n      local\
    \ vowel = vowels[index]\n      local vowelIndex = alphabet.find(vowel)\n     \
    \ local nextVowelIndex = index + vowelIndex\n      local nextVowel = alphabet[nextVowelIndex]\n\
    \      output = output .. nextVowel\n    end\n  end\n  return output\nend", " \
    \   local alphabet = {\n        'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P',\n\
    \        'Q','R','S','T','U','V','W','X','Y','Z','a','b','c','d','e','f',\n  \
    \      'g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v',\n    \
    \    'w','x','y','z','0','1','2','3','4','5','6','7','8','9','-',\n        '.','_','~','!','@','#','$','%','^','&','*','(',')','_','+','=',\n\
    \        '[',']','{','}',';',':','\"','\\'','<','>','?','/','\\\\','|',';',\n\
    \        '<','>','?','/','\\\\','|',';','<','>','?','/','\\\\','|',';','<','>',\n\
    \        '?','/','\\\\','|',';','<','>','?','/','\\\\','|',';','<','>','?','/',\n\
    \        '\\\\','|',';','<','>','?','/','\\\\','|',';','<','>','?','/','\\\\',\n\
    \        '|',';','<','>','?','/','\\\\','|',';','<','>','?','/','\\\\','|',\n\
    \        ';','<','>','?','/','\\\\','|',';','<','>','?','/','\\\\','|',';',\n\
    \        '<','>','?','/','\\\\','|',';','<','>','?','/','\\\\','|',';','<',\n\
    \        '>','?','/','\\\\','|',';','<','>','?','/','\\\\','|',';','<','>',\n\
    \        '?','/','\\\\','|',';','<','>','?','/','\\\\','|',';','<','>','?',\n\
    \        '/','\\\\','|',';','<','>','?','/','\\\\','|',';','<','>','?','/',\n\
    \        '\\\\','|',';','<','>','?','/','\\\\','|',';','<','", "    local alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    local vowels = \"aeiou\"\n    local result\
    \ = \"\"\n    for i = 1, #message do\n        local char = message[i]\n      \
    \  local vowel = string.sub(alphabet, string.find(alphabet, char) + 1)\n     \
    \   if string.find(vowels, vowel) then\n            local index = string.find(alphabet,\
    \ vowel)\n            local letter = alphabet[index + 1]\n            local letter2\
    \ = alphabet[index + 2]\n            local letter3 = alphabet[index + 3]\n   \
    \         local letter4 = alphabet[index + 4]\n            local letter5 = alphabet[index\
    \ + 5]\n            local letter6 = alphabet[index + 6]\n            local letter7\
    \ = alphabet[index + 7]\n            local letter8 = alphabet[index + 8]\n   \
    \         local letter9 = alphabet[index + 9]\n            local letter10 = alphabet[index\
    \ + 10]\n            local letter11 = alphabet[index + 11]\n            local\
    \ letter12 = alphabet[index + 12]\n            local letter13 = alphabet[index\
    \ + 13]\n            local letter14 = alphabet[index + 14]\n            local\
    \ letter15 = alphabet[index + 15]\n            local letter16 = alphabet[index\
    \ + 16]\n            local letter17 = alphabet[index + 17]\n            local\
    \ letter18 = alphabet[index + 18]\n            local letter19 = alphabet[index\
    \ + 19]\n            local letter20 = alphabet[index + 20]\n            local\
    \ letter21 = alphabet[index + 21]\n            local letter22 = alphabet[index\
    \ + 22]\n            local letter23 = alphabet[index + 23]\n            local\
    \ letter24 = alphabet[index + 24]\n            local letter25 = alphabet[index\
    \ + 25]\n            local letter26 = alphabet[index + 26]\n            local\
    \ letter27 = alphabet[index + 27]\n            local letter28 = alphabet[index\
    \ + 28]\n            local letter29 = alphabet[index + 29]\n            local\
    \ letter30 = alphabet[index + 30]\n            local letter31 = alphabet[index\
    \ + 31]\n            local letter32 = alphabet[index + 32]\n            local\
    \ letter33 = alphabet[index + 33]\n            local letter34 = alphabet[index\
    \ + 34]\n            local letter35 = alphabet[index + 35]\n            local\
    \ letter36 = alphabet[index + 36]\n            local letter37 = alphabet[index\
    \ + 37]\n            local letter38 = alphabet[index + 38]\n            local\
    \ letter39 = alphabet[index + 39]\n            local letter40 = alphabet[index\
    \ + 40]\n            local letter41 = alphabet[index + 41]\n            local\
    \ letter42 = alphabet", "  -- Write your code here\n  local vowels = {'a','e','i','o','u'}\n\
    \  local alphabet = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'}\n\
    \  local new_message = ''\n  for i = 1, #message do\n    local char = message[i]\n\
    \    if #new_message == 0 then\n      new_message = char\n    else\n      local\
    \ vowel_index = alphabet.find(char)\n      if vowel_index ~= nil then\n      \
    \  local vowel_position = alphabet.find(vowels[vowel_index])\n        if vowel_position\
    \ ~= nil then\n          new_message = new_message .. alphabet[vowel_index + 1]\n\
    \        end\n      else\n        new_message = new_message .. char\n      end\n\
    \    end\n  end\n  return new_message\nend", "  -- Write your solution here\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local alphabet = {'a', 'b', 'c',\
    \ 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's',\
    \ 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  local new_message = ''\n  for i = 1, #message\
    \ do\n    local letter = message[i]\n    local vowel = letter:sub(1, 1)\n    local\
    \ new_letter = letter:sub(2, 2)\n    new_message = new_message .. alphabet[alphabet:find(vowels,\
    \ letter)] .. new_letter\n  end\n  return new_message\nend", "  -- Write your\
    \ solution here\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local alphabet\
    \ = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\
    \ 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  local new_message\
    \ = ''\n  for i = 1, #message do\n    local letter = message[i]\n    local vowel\
    \ = letter:sub(1, 1)\n    local new_letter = alphabet[#alphabet + alphabet + #alphabet]\n\
    \    new_message = new_message .. new_letter .. vowel\n  end\n  return new_message\n\
    end", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local vowels = 'aeiou'\n\
    \  local vowels_index = {}\n  for i = 1, #vowels do\n    vowels_index[vowels[i]]\
    \ = i\n  end\n  local new_message = ''\n  for i = 1, #message do\n    local letter\
    \ = message[i]\n    local new_letter = letter\n    for j = 1, #letter do\n   \
    \   local vowel = letter[j]\n      local index = vowels_index[vowel]\n      if\
    \ index == nil then\n        index = #alphabet\n      end\n      new_letter =\
    \ alphabet[index + 1] .. new_letter\n    end\n    new_message = new_message ..\
    \ new_letter\n  end\n  return new_message\nend", "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n  local vowels = \"aeiou\"\n  local output = {}\n  for i = 1, #message do\n\
    \    local letter = message[i]\n    local vowel = letter:sub(1, 1)\n    local\
    \ position = alphabet:find(vowel)\n    if position == nil then\n      output[#output\
    \ + 1] = letter\n    else\n      output[#output + 1] = alphabet:sub(position +\
    \ 1, position + 2)\n    end\n  end\n  return table.concat(output)\nend", "   \
    \ local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local vowels = 'aeiou'\n\
    \    local output = ''\n    local index = 1\n    for i = 1, #message do\n    \
    \    local char = message[i]\n        if char in vowels then\n            local\
    \ vowel = alphabet:sub(index, index+1)\n            index = index + 1\n      \
    \      local letter = alphabet:sub(index, index+1)\n            output = output\
    \ .. vowel .. letter\n        else\n            output = output .. char\n    \
    \    end\n    end\n    return output\nend", "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n  local vowels = \"aeiou\"\n  local new_message = \"\"\n  for i = 1, #message\
    \ do\n    local letter = message[i]\n    local new_letter = letter\n    for j\
    \ = 1, #alphabet do\n      if alphabet[j] == letter then\n        new_letter =\
    \ alphabet[(j + #alphabet)%#alphabet]\n      end\n    end\n    for j = 1, #vowels\
    \ do\n      if vowels[j] == letter then\n        new_letter = vowels[(j + #vowels)%#vowels]\n\
    \      end\n    end\n    new_message = new_message .. new_letter\n  end\n  return\
    \ new_message\nend", "  -- Write your solution here\n  local vowels = {'a', 'e',\
    \ 'i', 'o', 'u'}\n  local alphabet = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h',\
    \ 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x',\
    \ 'y', 'z'}\n  local alphabet2 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i',\
    \ 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y',\
    \ 'z'}\n  local alphabet3 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j',\
    \ 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n\
    \  local alphabet4 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l',\
    \ 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  local\
    \ alphabet5 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',\
    \ 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  local alphabet6\
    \ = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\
    \ 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  local alphabet7 =\
    \ {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\
    \ 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  local alphabet8 =\
    \ {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\
    \ 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  local alphabet9 =\
    \ {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\
    \ 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  local alphabet10 =\
    \ {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\
    \ 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  local alphabet11 =\
    \ {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\
    \ 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  local alphabet12 =\
    \ {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\
    \ 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  local alphabet13 =\
    \ {'a', 'b', 'c', 'd', 'e', 'f', 'g', '", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local vowels = 'aeiou'\n  local output = ''\n  local index = 1\n  for char\
    \ in message:gmatch'[%a]+' do\n    local letter = alphabet:sub((index - 2):abs())\n\
    \    local vowel = vowels:sub((index - 1):abs())\n    index = index + 1\n    if\
    \ letter:sub(1, 1) ~= vowel:sub(1, 1) then\n      output = output .. letter\n\
    \    end\n  end\n  return output\nend", "    local alphabet = {\n        'A',\
    \ 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', \n        'N', 'O',\
    \ 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', \n        'a', 'b', 'c',\
    \ 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', \n        'n', 'o', 'p', 'q',\
    \ 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', \n        'A', 'B', 'C', 'D', 'E',\
    \ 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', \n        'N', 'O', 'P', 'Q', 'R', 'S',\
    \ 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', \n        'a', 'b', 'c', 'd', 'e', 'f', 'g',\
    \ 'h', 'i', 'j', 'k', 'l', 'm', \n        'n', 'o', 'p', 'q', 'r', 's', 't', 'u',\
    \ 'v', 'w', 'x', 'y', 'z', \n        'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I',\
    \ 'J', 'K', 'L', 'M', \n        'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W',\
    \ 'X', 'Y', 'Z', \n        'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l', 'm', \n        'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y',\
    \ 'z', \n        'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\
    \ \n        'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', \n\
    \        'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', \n \
    \       'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', \n  \
    \      'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', \n   \
    \     'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', \n    \
    \    'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', \n     \
    \   'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', \n      \
    \  'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', \n       \
    \ 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', \n        'a',\
    \ 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', \n        'n', 'o',\
    \ 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', \n        'A', 'B", " \
    \ local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  local vowels = \"aeiou\"\n\
    \  local messageWithVowels = message\n  local vowelIndex = 1\n  local vowelIndex2\
    \ = 1\n  local vowelIndex3 = 1\n  local vowelIndex4 = 1\n  local vowelIndex5 =\
    \ 1\n  local vowelIndex6 = 1\n  local vowelIndex7 = 1\n  local vowelIndex8 = 1\n\
    \  local vowelIndex9 = 1\n  local vowelIndex10 = 1\n  local vowelIndex11 = 1\n\
    \  local vowelIndex12 = 1\n  local vowelIndex13 = 1\n  local vowelIndex14 = 1\n\
    \  local vowelIndex15 = 1\n  local vowelIndex16 = 1\n  local vowelIndex17 = 1\n\
    \  local vowelIndex18 = 1\n  local vowelIndex19 = 1\n  local vowelIndex20 = 1\n\
    \  local vowelIndex21 = 1\n  local vowelIndex22 = 1\n  local vowelIndex23 = 1\n\
    \  local vowelIndex24 = 1\n  local vowelIndex25 = 1\n  local vowelIndex26 = 1\n\
    \  local vowelIndex27 = 1\n  local vowelIndex28 = 1\n  local vowelIndex29 = 1\n\
    \  local vowelIndex30 = 1\n  local vowelIndex31 = 1\n  local vowelIndex32 = 1\n\
    \  local vowelIndex33 = 1\n  local vowelIndex34 = 1\n  local vowelIndex35 = 1\n\
    \  local vowelIndex36 = 1\n  local vowelIndex37 = 1\n  local vowelIndex38 = 1\n\
    \  local vowelIndex39 = 1\n  local vowelIndex40 = 1\n  local vowelIndex41 = 1\n\
    \  local vowelIndex42 = 1\n  local vowelIndex43 = 1\n  local vowelIndex44 = 1\n\
    \  local vowelIndex45 = 1\n  local vowelIndex46 = 1\n  local vowelIndex47 = 1\n\
    \  local vowelIndex48 = 1\n  local vowelIndex49 = 1\n  local vowelIndex50 = 1\n\
    \  local vowelIndex51 = 1\n  local vowelIndex52 = 1\n  local vowelIndex53 = 1\n\
    \  local vowelIndex54 = 1\n  local vowelIndex55 = 1\n  local vowelIndex56 = 1\n\
    \  local vowelIndex57 = 1\n  local vowelIndex58 = 1\n  local vowelIndex59 = 1\n\
    \  local vowelIndex60 = 1\n  local vowelIndex61 = 1\n  local vowelIndex62 = 1\n\
    \  local vowelIndex63 = 1\n  local vowelIndex64 = 1\n  local vowelIndex65 = 1\n\
    \  local vowelIndex66 = 1\n  local vowel", "    local alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n    local vowels = \"AEIOU\"\n    local result = \"\"\n    for i = 1, #message\
    \ do\n        local letter = message[i]\n        if letter ~= nil then\n     \
    \       local index = alphabet + letter\n            local vowelIndex = index\n\
    \            for j = 1, #vowels do\n                local vowel = vowels[j]\n\
    \                if vowel == letter then\n                    vowelIndex = index\n\
    \                end\n            end\n            local letterIndex = alphabet\
    \ + letter\n            local letterIndex = letterIndex:sub(1, letterIndex:len()-1)\n\
    \            local letterIndex = letterIndex:sub(1, letterIndex:len()-1)\n   \
    \         local letterIndex = letterIndex:sub(1, letterIndex:len()-1)\n      \
    \      local letterIndex = letterIndex:sub(1, letterIndex:len()-1)\n         \
    \   local letterIndex = letterIndex:sub(1, letterIndex:len()-1)\n            local\
    \ letterIndex = letterIndex:sub(1, letterIndex:len()-1)\n            local letterIndex\
    \ = letterIndex:sub(1, letterIndex:len()-1)\n            local letterIndex = letterIndex:sub(1,\
    \ letterIndex:len()-1)\n            local letterIndex = letterIndex:sub(1, letterIndex:len()-1)\n\
    \            local letterIndex = letterIndex:sub(1, letterIndex:len()-1)\n   \
    \         local letterIndex = letterIndex:sub(1, letterIndex:len()-1)\n      \
    \      local letterIndex = letterIndex:sub(1, letterIndex:len()-1)\n         \
    \   local letterIndex = letterIndex:sub(1, letterIndex:len()-1)\n            local\
    \ letterIndex = letterIndex:sub(1, letterIndex:len()-1)\n            local letterIndex\
    \ = letterIndex:sub(1, letterIndex:len()-1)\n            local letterIndex = letterIndex:sub(1,\
    \ letterIndex:len()-1)\n            local letterIndex = letterIndex:sub(1, letterIndex:len()-1)\n\
    \            local letterIndex = letterIndex:sub(1, letterIndex:len()-1)\n   \
    \         local letterIndex = letterIndex:sub(1, letterIndex:len()-1)\n      \
    \      local letterIndex = letterIndex:sub(1, letterIndex:len()-1)\n         \
    \   local letterIndex = letterIndex:sub(1, letterIndex:len()-1)\n            local\
    \ letterIndex = letterIndex:sub(1, letterIndex:len()-1)\n            local letterIndex\
    \ = letterIndex:sub(1, letterIndex:len()-1)\n            local letterIndex = letterIndex:sub(1,\
    \ letterIndex:len()-1)\n            local letterIndex = letterIndex:sub(1, letterIndex:len()-1)\n\
    \            local ", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local\
    \ vowels = 'aeiou'\n  local messageLength = #message\n  local encodedMessage =\
    \ ''\n  local index = 0\n  \n  -- Iterate through message and swap case for all\
    \ letters.\n  while index < messageLength do\n    local currentChar = message[index]\n\
    \    local nextChar = message[index + 1]\n    local currentCharIndex = alphabet.indexOf(currentChar)\n\
    \    local nextCharIndex = alphabet.indexOf(nextChar)\n    \n    -- If current\
    \ and next characters are the same, swap case.\n    if currentCharIndex == nextCharIndex\
    \ then\n      local temp = alphabet[currentCharIndex]\n      alphabet[currentCharIndex]\
    \ = alphabet[nextCharIndex]\n      alphabet[nextCharIndex] = temp\n      \n  \
    \    -- If current and next characters are the same, swap case.\n      if currentCharIndex\
    \ == nextCharIndex then\n        local temp = alphabet[currentCharIndex]\n   \
    \     alphabet[currentCharIndex] = alphabet[nextCharIndex]\n        alphabet[nextCharIndex]\
    \ = temp\n      end\n    end\n    \n    -- If current character is a vowel, swap\
    \ case for 2 places ahead.\n    if vowels.indexOf(currentChar) ~= -1 then\n  \
    \    local currentCharIndex = alphabet.indexOf(currentChar)\n      local nextCharIndex\
    \ = alphabet.indexOf(alphabet[currentCharIndex + 1])\n      \n      if currentCharIndex\
    \ == nextCharIndex then\n        local temp = alphabet[currentCharIndex]\n   \
    \     alphabet[currentCharIndex] = alphabet[nextCharIndex]\n        alphabet[nextCharIndex]\
    \ = temp\n      end\n    end\n    \n    index = index + 1\n  end\n  \n  -- Iterate\
    \ through message and replace vowels with letters 2 places ahead.\n  while index\
    \ < messageLength do\n    local currentChar = message[index]\n    local nextChar\
    \ = message[index + 1]\n    local currentCharIndex = alphabet.indexOf(currentChar)\n\
    \    local nextCharIndex = alphabet.indexOf(nextChar)\n    \n    -- If current\
    \ character is a vowel, swap case for 2 places ahead.\n    if vowels.indexOf(currentChar)\
    \ ~= -1 then\n      local currentCharIndex = alphabet.indexOf(currentChar)\n \
    \     local nextCharIndex = alphabet.indexOf(alphabet[currentCharIndex + 1])\n\
    \      \n      if currentCharIndex == nextCharIndex then\n        local temp =\
    \ alphabet[currentCharIndex]\n        alphabet[currentCharIndex] = alphabet[nextCharIndex]\n\
    \        alphabet[nextCharIndex] = temp\n      ", "  -- Write your code here\n\
    \  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  local vowels = \"aeiou\"\
    \n  local newMessage = \"\"\n  for i = 1, #message do\n    local letter = message[i]\n\
    \    local newLetter = letter\n    for j = 1, #alphabet do\n      if letter ==\
    \ alphabet[j] then\n        newLetter = alphabet[(j - 2)] .. letter\n      end\n\
    \    end\n    for j = 1, #vowels do\n      if letter == vowels[j] then\n     \
    \   newLetter = alphabet[(j - 2)] .. letter\n      end\n    end\n    newMessage\
    \ = newMessage .. newLetter\n  end\n  return newMessage\nend", "  local alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n  local vowels = \"aeiou\"\n  local output\
    \ = {}\n  for i = 1, #message do\n    local char = message[i]\n    local index\
    \ = alphabet.find(char)\n    local vowelIndex = string.find(vowels, char)\n  \
    \  if index and (index > 0 and vowelIndex == nil) then\n      table.insert(output,\
    \ alphabet[string.sub(alphabet, index + 1, index + 2)])\n    else\n      table.insert(output,\
    \ char)\n    end\n  end\n  return table.concat(output)\nend", "  local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n  local vowels = 'aeiou'\n  local result = ''\n\
    \  for i = 1, #message do\n    local letter = message[i]\n    local vowel = letter:sub(1,\
    \ 1)\n    local nextLetter = letter:sub(2, 2)\n    local index = alphabet:find(vowel)\n\
    \    local nextIndex = alphabet:find(nextLetter)\n    if index and nextIndex then\n\
    \      local replacement = alphabet:sub(index, index + 2)\n      result = result\
    \ .. replacement\n    elseif index then\n      result = result .. alphabet:sub(index,\
    \ index)\n    elseif nextIndex then\n      result = result .. alphabet:sub(nextIndex,\
    \ nextIndex + 2)\n    else\n      result = result .. letter\n    end\n  end\n\
    \  return result\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    local vowels = \"aeiou\"\n    local result = \"\"\n    for i = 1, #message\
    \ do\n        local letter = message[i]\n        if letter ~= nil then\n     \
    \       local index = alphabet.find(letter)\n            if index == nil then\n\
    \                index = alphabet.find(vowels, letter)\n            end\n    \
    \        if index == nil then\n                index = alphabet.find(vowels, letter\
    \ + letter)\n            end\n            if index == nil then\n             \
    \   index = alphabet.find(vowels, letter + letter + letter)\n            end\n\
    \            if index == nil then\n                index = alphabet.find(vowels,\
    \ letter + letter + letter + letter)\n            end\n            if index ==\
    \ nil then\n                index = alphabet.find(vowels, letter + letter + letter\
    \ + letter + letter)\n            end\n            if index == nil then\n    \
    \            index = alphabet.find(vowels, letter + letter + letter + letter +\
    \ letter + letter)\n            end\n            if index == nil then\n      \
    \          index = alphabet.find(vowels, letter + letter + letter + letter + letter\
    \ + letter + letter)\n            end\n            if index == nil then\n    \
    \            index = alphabet.find(vowels, letter + letter + letter + letter +\
    \ letter + letter + letter + letter)\n            end\n            if index ==\
    \ nil then\n                index = alphabet.find(vowels, letter + letter + letter\
    \ + letter + letter + letter + letter + letter + letter)\n            end\n  \
    \          if index == nil then\n                index = alphabet.find(vowels,\
    \ letter + letter + letter + letter + letter + letter + letter + letter + letter\
    \ + letter)\n            end\n            if index == nil then\n             \
    \   index = alphabet.find(vowels, letter + letter + letter + letter + letter +\
    \ letter + letter + letter + letter + letter + letter)\n            end\n    \
    \        if index == nil then\n                index = alphabet.find(vowels, letter\
    \ + letter + letter + letter + letter + letter + letter + letter + letter + letter\
    \ + letter)\n            end\n            if index == nil then\n             \
    \   index = alphabet.find(vowels, letter + letter + letter + letter + letter +\
    \ letter + letter + letter + letter + letter + letter + letter)\n            end\n\
    \            if index == nil then\n                index = alphabet.find(vowels,\
    \ letter + letter + letter + letter + letter + letter + letter + letter + letter\
    \ + letter + letter + letter + letter", "  -- Write your code here\n  local vowels\
    \ = {'a', 'e', 'i', 'o', 'u'}\n  local alphabet = {'a', 'b', 'c', 'd', 'e', 'f',\
    \ 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v',\
    \ 'w', 'x', 'y', 'z'}\n  local alphabet2 = {'a', 'b', 'c', 'd', 'e', 'f', 'g',\
    \ 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w',\
    \ 'x', 'y', 'z'}\n  local alphabet3 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h',\
    \ 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x',\
    \ 'y', 'z'}\n  local alphabet4 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i',\
    \ 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y',\
    \ 'z'}\n  local alphabet5 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j',\
    \ 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n\
    \  local alphabet6 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l',\
    \ 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  local\
    \ alphabet7 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',\
    \ 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  local alphabet8\
    \ = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\
    \ 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  local alphabet9 =\
    \ {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\
    \ 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  local alphabet10 =\
    \ {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\
    \ 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  local alphabet11 =\
    \ {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\
    \ 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  local alphabet12 =\
    \ {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\
    \ 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  local alphabet13 =\
    \ {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local vowels = 'aeiou'\n  local newMessage = ''\n  for i = 1, #message do\n\
    \    local letter = message[i]\n    local vowelIndex = alphabet == vowels and\
    \ i or alphabet == vowels and i + 1 or alphabet == vowels and i - 1 or alphabet\
    \ == vowels and i - 2 or alphabet == vowels and i - 3 or alphabet == vowels and\
    \ i - 4 or alphabet == vowels and i - 5 or alphabet == vowels and i - 6 or alphabet\
    \ == vowels and i - 7 or alphabet == vowels and i - 8 or alphabet == vowels and\
    \ i - 9 or alphabet == vowels and i - 10 or alphabet == vowels and i - 11 or alphabet\
    \ == vowels and i - 12 or alphabet == vowels and i - 13 or alphabet == vowels\
    \ and i - 14 or alphabet == vowels and i - 15 or alphabet == vowels and i - 16\
    \ or alphabet == vowels and i - 17 or alphabet == vowels and i - 18 or alphabet\
    \ == vowels and i - 19 or alphabet == vowels and i - 20 or alphabet == vowels\
    \ and i - 21 or alphabet == vowels and i - 22 or alphabet == vowels and i - 23\
    \ or alphabet == vowels and i - 24 or alphabet == vowels and i - 25 or alphabet\
    \ == vowels and i - 26 or alphabet == vowels and i - 27 or alphabet == vowels\
    \ and i - 28 or alphabet == vowels and i - 29 or alphabet == vowels and i - 30\
    \ or alphabet == vowels and i - 31 or alphabet == vowels and i - 32 or alphabet\
    \ == vowels and i - 33 or alphabet == vowels and i - 34 or alphabet == vowels\
    \ and i - 35 or alphabet == vowels and i - 36 or alphabet == vowels and i - 37\
    \ or alphabet == vowels and i - 38 or alphabet == vowels and i - 39 or alphabet\
    \ == vowels and i - 40 or alphabet == vowels and i - 41 or alphabet == vowels\
    \ and i - 42 or alphabet == vowels and i - 43 or alphabet == vowels and i - 44\
    \ or alphabet == vowels and i - 45 or alphabet == vowels and i - 46 or alphabet\
    \ == vowels and i - 47 or alphabet == vowels and i - 48 or alphabet == vowels\
    \ and i - 49 or alphabet == vowels and i - 50 or alphabet == vowels and i - 51\
    \ or alphabet == vowels and i - 52 or alphabet == vowels and i - 53 or alphabet\
    \ == vowels and i - 54 or alphabet == vowels and i - 55 or alphabet == vowels\
    \ and i - 56 or alphab", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local\
    \ vowels = 'aeiou'\n  local result = message\n  for i = 1, #message do\n    local\
    \ letter = message[i]\n    local index = alphabet == letter and\n      alphabet\
    \ + vowels or letter\n    local nextLetter = alphabet:sub(i, i+1)\n    local nextIndex\
    \ = alphabet == nextLetter and\n      alphabet + vowels or nextLetter\n    local\
    \ newLetter = alphabet:sub(i+1, i+2)\n    local newIndex = alphabet == newLetter\
    \ and\n      alphabet + vowels or newLetter\n    local newNextLetter = alphabet:sub(i+2,\
    \ i+3)\n    local newNextIndex = alphabet == newNextLetter and\n      alphabet\
    \ + vowels or newNextLetter\n    local newResult = result:sub(i, i+1)\n    if\
    \ newIndex == letter then\n      newResult = newLetter\n    elseif newIndex ==\
    \ nextLetter then\n      newResult = newNextLetter\n    end\n    result = newResult\n\
    \  end\n  return result\nend", "  local alphabet = {\n    ['A'] = 'a',\n    ['B']\
    \ = 'b',\n    ['C'] = 'c',\n    ['D'] = 'd',\n    ['E'] = 'e',\n    ['F'] = 'f',\n\
    \    ['G'] = 'g',\n    ['H'] = 'h',\n    ['I'] = 'i',\n    ['J'] = 'j',\n    ['K']\
    \ = 'k',\n    ['L'] = 'l',\n    ['M'] = 'm',\n    ['N'] = 'n',\n    ['O'] = 'o',\n\
    \    ['P'] = 'p',\n    ['Q'] = 'q',\n    ['R'] = 'r',\n    ['S'] = 's',\n    ['T']\
    \ = 't',\n    ['U'] = 'u',\n    ['V'] = 'v',\n    ['W'] = 'w',\n    ['X'] = 'x',\n\
    \    ['Y'] = 'y',\n    ['Z'] = 'z',\n    ['a'] = 'A',\n    ['b'] = 'B',\n    ['c']\
    \ = 'C',\n    ['d'] = 'D',\n    ['e'] = 'E',\n    ['f'] = 'F',\n    ['g'] = 'G',\n\
    \    ['h'] = 'H',\n    ['i'] = 'I',\n    ['j'] = 'J',\n    ['k'] = 'K',\n    ['l']\
    \ = 'L',\n    ['m'] = 'M',\n    ['n'] = 'N',\n    ['o'] = 'O',\n    ['p'] = 'P',\n\
    \    ['q'] = 'Q',\n    ['r'] = 'R',\n    ['s'] = 'S',\n    ['t'] = 'T',\n    ['u']\
    \ = 'U',\n    ['v'] = 'V',\n    ['w'] = 'W',\n    ['x'] = 'X',\n    ['y'] = 'Y',\n\
    \    ['z'] = 'Z',\n    [' '] = '_',\n    ['!'] = '_',\n    ['?'] = '_',\n    ['(']\
    \ = '_',\n    [')'] = '_',\n    ['-'] = '_',\n    ['.'] = '_',\n    ['/'] = '_',\n\
    \    ['\\\\'] = '_',\n    [':'] = '_',\n    [';'] = '_',\n    ['\\''] = '_',\n\
    \    ['\"'] = '_',\n    ['@'] = '_',\n    ['#'] = '_',\n    ['$'] = '_',\n   \
    \ ['%'] = '_',\n    ['^'] = '_',\n    ['&'] = '_',\n    ['*'] = '_',\n    ['+']\
    \ = '_',\n    ['='] = '_',\n    ['|'] = '_',\n    ['~'] = '_',\n    ['`'] = '_',\n\
    \    ['_'] = '_',\n    ['{'] = '_',\n    ['}'] = '_',\n    ['['] = '_',\n    [']']\
    \ = '_',\n    ['<'] = '_',\n    ['>'] = '_',\n    ['?'] = '_',\n    ['/'] = '_',\n\
    \    ['\\\\'] = '_',\n    ['|'] = '_',\n", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local vowels = \"aeiou\"\n    local new_message = \"\"\n    for i = 1, #message\
    \ do\n        local letter = message[i]\n        local vowel_index = alphabet\
    \ == vowels and i or alphabet == letter and i - 1 or -1\n        local new_letter\
    \ = alphabet[vowel_index + 1]\n        new_message = new_message .. new_letter\n\
    \    end\n    return new_message\nend", "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n  local vowels = \"aeiou\"\n  local result = ''\n  for i = 1, #message do\n\
    \    local letter = message[i]\n    local index = alphabet == letter or alphabet\
    \ == letter:lower() and letter:upper() or letter\n    local nextLetter = alphabet:sub(i\
    \ + 1, i + 2)\n    local nextIndex = alphabet == nextLetter and nextLetter:upper()\
    \ or nextLetter\n    local nextVowel = vowels:sub(i + 1, i + 2)\n    local nextVowelIndex\
    \ = alphabet == nextVowel and nextVowel:upper() or nextVowel\n    local nextVowelIndex\
    \ = nextVowelIndex:sub(1, 1)\n    local nextVowelIndex = nextVowelIndex:sub(2,\
    \ 2)\n    local nextVowelIndex = nextVowelIndex:sub(3, 3)\n    local nextVowelIndex\
    \ = nextVowelIndex:sub(4, 4)\n    local nextVowelIndex = nextVowelIndex:sub(5,\
    \ 5)\n    local nextVowelIndex = nextVowelIndex:sub(6, 6)\n    local nextVowelIndex\
    \ = nextVowelIndex:sub(7, 7)\n    local nextVowelIndex = nextVowelIndex:sub(8,\
    \ 8)\n    local nextVowelIndex = nextVowelIndex:sub(9, 9)\n    local nextVowelIndex\
    \ = nextVowelIndex:sub(10, 10)\n    local nextVowelIndex = nextVowelIndex:sub(11,\
    \ 11)\n    local nextVowelIndex = nextVowelIndex:sub(12, 12)\n    local nextVowelIndex\
    \ = nextVowelIndex:sub(13, 13)\n    local nextVowelIndex = nextVowelIndex:sub(14,\
    \ 14)\n    local nextVowelIndex = nextVowelIndex:sub(15, 15)\n    local nextVowelIndex\
    \ = nextVowelIndex:sub(16, 16)\n    local nextVowelIndex = nextVowelIndex:sub(17,\
    \ 17)\n    local nextVowelIndex = nextVowelIndex:sub(18, 18)\n    local nextVowelIndex\
    \ = nextVowelIndex:sub(19, 19)\n    local nextVowelIndex = nextVowelIndex:sub(20,\
    \ 20)\n    local nextVowelIndex = nextVowelIndex:sub(21, 21)\n    local nextVowelIndex\
    \ = nextVowelIndex:sub(2, ", "  local alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n  local vowels = \"AEIOU\"\n  local output = ''\n  for i = 1, #message do\n\
    \    local letter = message[i]\n    local index = alphabet .. vowels .. alphabet:sub(i+1)\n\
    \    local nextLetter = alphabet:sub(i+2)\n    local newLetter = alphabet:sub(index)\
    \ .. letter\n    output = output .. alphabet:sub(index) .. newLetter\n  end\n\
    \  return output\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n \
    \   local vowels = 'aeiou'\n    local message = ''\n    for i = 1, #message do\n\
    \        local char = message[i]\n        local index = alphabet.find(char)\n\
    \        if index == nil then\n            index = alphabet.find(vowels, 1, index\
    \ + 1)\n        end\n        if index == nil then\n            index = alphabet.find(vowels,\
    \ index + 1, #alphabet)\n        end\n        if index == nil then\n         \
    \   index = alphabet.find(vowels, index + 1, #alphabet)\n        end\n       \
    \ if index == nil then\n            index = alphabet.find(vowels, index + 1, #alphabet)\n\
    \        end\n        if index == nil then\n            index = alphabet.find(vowels,\
    \ index + 1, #alphabet)\n        end\n        if index == nil then\n         \
    \   index = alphabet.find(vowels, index + 1, #alphabet)\n        end\n       \
    \ if index == nil then\n            index = alphabet.find(vowels, index + 1, #alphabet)\n\
    \        end\n        if index == nil then\n            index = alphabet.find(vowels,\
    \ index + 1, #alphabet)\n        end\n        if index == nil then\n         \
    \   index = alphabet.find(vowels, index + 1, #alphabet)\n        end\n       \
    \ if index == nil then\n            index = alphabet.find(vowels, index + 1, #alphabet)\n\
    \        end\n        if index == nil then\n            index = alphabet.find(vowels,\
    \ index + 1, #alphabet)\n        end\n        if index == nil then\n         \
    \   index = alphabet.find(vowels, index + 1, #alphabet)\n        end\n       \
    \ if index == nil then\n            index = alphabet.find(vowels, index + 1, #alphabet)\n\
    \        end\n        if index == nil then\n            index = alphabet.find(vowels,\
    \ index + 1, #alphabet)\n        end\n        if index == nil then\n         \
    \   index = alphabet.find(vowels, index + 1, #alphabet)\n        end\n       \
    \ if index == nil then\n            index = alphabet.find(vowels, index + 1, #alphabet)\n\
    \        end\n        if index == nil then\n            index = alphabet.find(vowels,\
    \ index + 1, #alphabet)\n        end\n        if index == nil then\n         \
    \   index = alphabet.find(vowels, index + 1, #alphabet)\n        end\n       \
    \ if index == nil then\n            index = alphabet.find(vowels, index + 1, #alphabet)\n\
    \        end\n        if index == nil then\n            index = alphabet.find(vowels,\
    \ index + 1, #alphabet)\n        end\n        if index == nil then\n         \
    \   index = alphabet.find(vowels, index + 1, #alphabet)\n        end\n       \
    \ if ", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local vowels = 'aeiou'\n\
    \  local new_message = ''\n  for i = 1, #message do\n    local letter = message[i]\n\
    \    if letter:lower() == letter then\n      new_message = new_message .. letter\n\
    \    else\n      local index = alphabet + alphabet:sub(1, letter:len()) + alphabet:sub(letter:len())\n\
    \      new_message = new_message .. alphabet:sub(letter:len(), letter:len()+index)\
    \ .. alphabet:sub(1, letter:len())\n    end\n  end\n  return new_message\nend",
  "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local vowels = 'aeiou'\n\
    \    local newMessage = ''\n    for i = 1, #message do\n        local letter =\
    \ message[i]\n        local index = alphabet + alphabet:sub(1, i) + alphabet:sub(i\
    \ + 1, #alphabet)\n        local newLetter = letter\n        for j = 1, #vowels\
    \ do\n            if letter == vowels[j] then\n                newLetter = alphabet:sub(i\
    \ + 2, j + 2)\n                break\n            end\n        end\n        newMessage\
    \ = newMessage .. newLetter\n    end\n    return newMessage\nend", "    local\
    \ alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local vowels = \"aeiou\"\n  \
    \  local output = ''\n    local vowelIndex = 1\n    for i = 1, #message do\n \
    \       local letter = message[i]\n        local nextLetter = message[i + 1]\n\
    \        if letter == 'a' then\n            letter = alphabet[vowelIndex + 1]\n\
    \            vowelIndex = vowelIndex + 2\n        elseif letter == 'e' then\n\
    \            letter = alphabet[vowelIndex + 1]\n            vowelIndex = vowelIndex\
    \ + 2\n        elseif letter == 'i' then\n            letter = alphabet[vowelIndex\
    \ + 1]\n            vowelIndex = vowelIndex + 2\n        elseif letter == 'o'\
    \ then\n            letter = alphabet[vowelIndex + 1]\n            vowelIndex\
    \ = vowelIndex + 2\n        elseif letter == 'u' then\n            letter = alphabet[vowelIndex\
    \ + 1]\n            vowelIndex = vowelIndex + 2\n        elseif letter == 'y'\
    \ then\n            letter = alphabet[vowelIndex + 1]\n            vowelIndex\
    \ = vowelIndex + 2\n        elseif letter == 'A' then\n            letter = alphabet[vowelIndex\
    \ + 1]\n            vowelIndex = vowelIndex + 2\n        elseif letter == 'E'\
    \ then\n            letter = alphabet[vowelIndex + 1]\n            vowelIndex\
    \ = vowelIndex + 2\n        elseif letter == 'I' then\n            letter = alphabet[vowelIndex\
    \ + 1]\n            vowelIndex = vowelIndex + 2\n        elseif letter == 'O'\
    \ then\n            letter = alphabet[vowelIndex + 1]\n            vowelIndex\
    \ = vowelIndex + 2\n        elseif letter == 'U' then\n            letter = alphabet[vowelIndex\
    \ + 1]\n            vowelIndex = vowelIndex + 2\n        elseif letter == 'Y'\
    \ then\n            letter = alphabet[vowelIndex + 1]\n            vowelIndex\
    \ = vowelIndex + 2\n        end\n        output = output .. letter .. alphabet[vowelIndex]\n\
    \    end\n    return output\nend", "  local alphabet = {\n    ['A'] = 'a',\n \
    \   ['B'] = 'b',\n    ['C'] = 'c',\n    ['D'] = 'd',\n    ['E'] = 'e',\n    ['F']\
    \ = 'f',\n    ['G'] = 'g',\n    ['H'] = 'h',\n    ['I'] = 'i',\n    ['J'] = 'j',\n\
    \    ['K'] = 'k',\n    ['L'] = 'l',\n    ['M'] = 'm',\n    ['N'] = 'n',\n    ['O']\
    \ = 'o',\n    ['P'] = 'p',\n    ['Q'] = 'q',\n    ['R'] = 'r',\n    ['S'] = 's',\n\
    \    ['T'] = 't',\n    ['U'] = 'u',\n    ['V'] = 'v',\n    ['W'] = 'w',\n    ['X']\
    \ = 'x',\n    ['Y'] = 'y',\n    ['Z'] = 'z',\n    ['a'] = 'A',\n    ['b'] = 'B',\n\
    \    ['c'] = 'C',\n    ['d'] = 'D',\n    ['e'] = 'E',\n    ['f'] = 'F',\n    ['g']\
    \ = 'G',\n    ['h'] = 'H',\n    ['i'] = 'I',\n    ['j'] = 'J',\n    ['k'] = 'K',\n\
    \    ['l'] = 'L',\n    ['m'] = 'M',\n    ['n'] = 'N',\n    ['o'] = 'O',\n    ['p']\
    \ = 'P',\n    ['q'] = 'Q',\n    ['r'] = 'R',\n    ['s'] = 'S',\n    ['t'] = 'T',\n\
    \    ['u'] = 'U',\n    ['v'] = 'V',\n    ['w'] = 'W',\n    ['x'] = 'X',\n    ['y']\
    \ = 'Y',\n    ['z'] = 'Z',\n    [' '] = '_',\n    ['.'] = '.',\n    ['!'] = '!',\n\
    \    ['?'] = '?',\n    ['('] = '(',\n    [')'] = ')',\n    ['-'] = '-',\n    ['_']\
    \ = '_',\n    ['~'] = '~',\n    ['@'] = '@',\n    ['#'] = '#',\n    ['$'] = '$',\n\
    \    ['%'] = '%',\n    ['^'] = '^',\n    ['&'] = '&',\n    ['*'] = '*',\n    ['(']\
    \ = '(',\n    [')'] = ')',\n    ['+'] = '+',\n    ['='] = '=',\n    ['['] = '[',\n\
    \    [']'] = ']',\n    ['{'] = '{',\n    ['}'] = '}',\n    ['|'] = '|',\n    ['\\\
    \\'] = '\\\\',\n    [':'] = ':',\n    [';'] = ';',\n    ['\"'] = '\"',\n    ['\\\
    ''] = '\\'',\n    ['<'] = '<',\n    ['>'] = '>',\n    ['?'] = '?',\n    ['/']\
    \ = '/',\n    ['\\\\'] = '\\\\',\n    ['|'] = '|',\n    ['\"'] = '\"',\n    ['.']\
    \ = '", "  local vowels = {'a','e','i','o','u'}\n  local alphabet = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'}\n\
    \  local messageLength = #message\n  local encodedMessage = \"\"\n  local vowelIndex\
    \ = 0\n  local alphabetIndex = 0\n  local currentLetter = message[1]\n  local\
    \ currentVowel = message[1]\n  local currentAlphabet = message[1]\n  local currentVowelIndex\
    \ = 1\n  local currentAlphabetIndex = 1\n  while vowelIndex < messageLength do\n\
    \    currentLetter = message[vowelIndex]\n    currentVowel = message[vowelIndex+1]\n\
    \    currentAlphabet = message[vowelIndex+2]\n    currentVowelIndex = vowelIndex+3\n\
    \    currentAlphabetIndex = vowelIndex+4\n    if currentLetter == \"a\" then\n\
    \      encodedMessage = encodedMessage .. alphabet[alphabetIndex]\n      alphabetIndex\
    \ = alphabetIndex + 1\n    elseif currentLetter == \"e\" then\n      encodedMessage\
    \ = encodedMessage .. alphabet[alphabetIndex]\n      alphabetIndex = alphabetIndex\
    \ + 1\n    elseif currentLetter == \"i\" then\n      encodedMessage = encodedMessage\
    \ .. alphabet[alphabetIndex]\n      alphabetIndex = alphabetIndex + 1\n    elseif\
    \ currentLetter == \"o\" then\n      encodedMessage = encodedMessage .. alphabet[alphabetIndex]\n\
    \      alphabetIndex = alphabetIndex + 1\n    elseif currentLetter == \"u\" then\n\
    \      encodedMessage = encodedMessage .. alphabet[alphabetIndex]\n      alphabetIndex\
    \ = alphabetIndex + 1\n    elseif currentLetter == \"y\" then\n      encodedMessage\
    \ = encodedMessage .. alphabet[alphabetIndex]\n      alphabetIndex = alphabetIndex\
    \ + 1\n    elseif currentLetter == \"a\" then\n      encodedMessage = encodedMessage\
    \ .. alphabet[alphabetIndex]\n      alphabetIndex = alphabetIndex + 1\n    elseif\
    \ currentLetter == \"e\" then\n      encodedMessage = encodedMessage .. alphabet[alphabetIndex]\n\
    \      alphabetIndex = alphabetIndex + 1\n    elseif currentLetter == \"i\" then\n\
    \      encodedMessage = encodedMessage .. alphabet[alphabetIndex]\n      alphabetIndex\
    \ = alphabetIndex + 1\n    elseif currentLetter == \"o\" then\n      encodedMessage\
    \ = encodedMessage .. alphabet[alphabetIndex]\n      alphabetIndex = alphabetIndex\
    \ + 1\n    elseif currentLetter == \"u\" then\n      encodedMessage = encodedMessage\
    \ .. alphabet[alphabetIndex]\n      alphabetIndex = alphabetIndex + 1\n", "  local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local vowels = 'aeiou'\n  local output\
    \ = ''\n  for i = 1, #message do\n    local letter = message[i]\n    local position\
    \ = alphabet.find(letter)\n    local vowel = vowels[position]\n    local nextLetter\
    \ = alphabet[position + 1]\n    local nextPosition = alphabet.find(nextLetter)\n\
    \    local nextVowel = vowels[nextPosition]\n    local newLetter = letter\n  \
    \  if nextVowel == vowel then\n      newLetter = nextLetter\n    end\n    output\
    \ = output .. newLetter\n  end\n  return output\nend", "  local alphabet = \"\
    ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n  local vowels = \"AEIOU\"\n  local result = \"\"\
    \n  for i = 1, #message do\n    local char = message[i]\n    local index = alphabet.find(char)\n\
    \    if index == nil then\n      result = result .. char\n    else\n      local\
    \ vowel = vowels[math.floor(index / 2)]\n      local vowel2 = alphabet[math.floor(index\
    \ / 2) + 1]\n      result = result .. vowel\n      result = result .. vowel2\n\
    \    end\n  end\n  return result\nend", "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n  local vowels = \"aeiou\"\n  local result = \"\"\n  for i = 1, #message do\n\
    \    local letter = message[i]\n    local index = alphabet and alphabet:find(letter)\
    \ or nil\n    if index then\n      local vowel = vowels:sub(index, index+1)\n\
    \      local letter2 = alphabet:sub(index+1, index+2)\n      result = result ..\
    \ vowel:sub(1, 1) .. letter2\n    else\n      result = result .. letter\n    end\n\
    \  end\n  return result\nend", "  -- Write your code here\n  local alphabet =\
    \ 'abcdefghijklmnopqrstuvwxyz'\n  local vowels = 'aeiou'\n  local output = ''\n\
    \  for i = 1, #message do\n    local letter = message[i]\n    local index = alphabet\
    \ == letter or alphabet == letter:lower() and #vowels or #alphabet\n    local\
    \ letter2 = alphabet:sub(1, index + 1)\n    local letter3 = alphabet:sub(index\
    \ + 1, #alphabet)\n    local letter4 = alphabet:sub(1, index + 1)\n    local letter5\
    \ = alphabet:sub(index + 1, #alphabet)\n    local letter6 = alphabet:sub(1, index\
    \ + 1)\n    local letter7 = alphabet:sub(index + 1, #alphabet)\n    local letter8\
    \ = alphabet:sub(1, index + 1)\n    local letter9 = alphabet:sub(index + 1, #alphabet)\n\
    \    local letter10 = alphabet:sub(1, index + 1)\n    local letter11 = alphabet:sub(index\
    \ + 1, #alphabet)\n    local letter12 = alphabet:sub(1, index + 1)\n    local\
    \ letter13 = alphabet:sub(index + 1, #alphabet)\n    local letter14 = alphabet:sub(1,\
    \ index + 1)\n    local letter15 = alphabet:sub(index + 1, #alphabet)\n    local\
    \ letter16 = alphabet:sub(1, index + 1)\n    local letter17 = alphabet:sub(index\
    \ + 1, #alphabet)\n    local letter18 = alphabet:sub(1, index + 1)\n    local\
    \ letter19 = alphabet:sub(index + 1, #alphabet)\n    local letter20 = alphabet:sub(1,\
    \ index + 1)\n    local letter21 = alphabet:sub(index + 1, #alphabet)\n    local\
    \ letter22 = alphabet:sub(1, index + 1)\n    local letter23 = alphabet:sub(index\
    \ + 1, #alphabet)\n    local letter24 = alphabet:sub(1, index + 1)\n    local\
    \ letter25 = alphabet:sub(index + 1, #alphabet)\n    local letter26 = alphabet:sub(1,\
    \ index + 1)\n    local letter27 = alphabet:sub(index + 1, #alphabet)\n    local\
    \ letter28 = alphabet:sub(1, index + 1)\n    local letter29 = alphabet:sub(index\
    \ + 1, #alphabet)\n    local letter30 = alphabet:sub(1, index + 1)\n    local\
    \ letter31 = alphabet:sub(index + 1, #alphabet)\n    local letter32 = alphabet:sub(1,\
    \ index + 1)\n    local letter33 = alphabet:sub(index + 1, #alphabet)\n    local\
    \ letter34 = alphabet:sub(1, index + 1)\n    local letter35 = alphabet:sub(index\
    \ + 1, #alphabet)\n    local letter36 = alphabet:sub(1, index", "  local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n  local vowels = 'aeiou'\n  local output = ''\n\
    \  local vowelIndex = 1\n  for i = 1, #message do\n    local char = message[i]\n\
    \    if char == 'a' then\n      char = alphabet[vowelIndex]\n      vowelIndex\
    \ = vowelIndex + 1\n    end\n    local vowelIndex = vowelIndex - 1\n    local\
    \ vowel = vowels[vowelIndex]\n    local letter = alphabet[#alphabet + vowelIndex]\n\
    \    output = output .. char .. letter\n  end\n  return output\nend", "    local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local vowels = 'aeiou'\n    local\
    \ newMessage = ''\n    for i = 1, #message do\n        local letter = message[i]\n\
    \        local newLetter = letter\n        for j = 1, #alphabet do\n         \
    \   local currentLetter = alphabet[j]\n            if letter == currentLetter\
    \ then\n                newLetter = alphabet[(j - 2)] \n            end\n    \
    \    end\n        newMessage = newMessage .. newLetter\n    end\n    for i = 1,\
    \ #vowels do\n        newMessage = newMessage .. alphabet[(alphabet + i) - 1]\n\
    \    end\n    return newMessage\nend", "  -- Write your solution here\n  local\
    \ vowels = {'a', 'e', 'i', 'o', 'u'}\n  local alphabet = {'a', 'b', 'c', 'd',\
    \ 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\
    \ 'u', 'v', 'w', 'x', 'y', 'z'}\n  local vowel_map = {\n    ['a'] = 'A',\n   \
    \ ['e'] = 'E',\n    ['i'] = 'I',\n    ['o'] = 'O',\n    ['u'] = 'U'\n  }\n  local\
    \ new_message = ''\n  for i = 1, #message do\n    local letter = message[i]\n\
    \    if letter == 'a' or letter == 'e' or letter == 'i' or letter == 'o' or letter\
    \ == 'u' then\n      new_message = new_message .. letter\n    elseif letter ==\
    \ 'b' then\n      new_message = new_message .. vowel_map[letter]\n    elseif letter\
    \ == 'c' then\n      new_message = new_message .. vowel_map[letter]\n    elseif\
    \ letter == 'd' then\n      new_message = new_message .. vowel_map[letter]\n \
    \   elseif letter == 'f' then\n      new_message = new_message .. vowel_map[letter]\n\
    \    elseif letter == 'g' then\n      new_message = new_message .. vowel_map[letter]\n\
    \    elseif letter == 'h' then\n      new_message = new_message .. vowel_map[letter]\n\
    \    elseif letter == 'j' then\n      new_message = new_message .. vowel_map[letter]\n\
    \    elseif letter == 'k' then\n      new_message = new_message .. vowel_map[letter]\n\
    \    elseif letter == 'l' then\n      new_message = new_message .. vowel_map[letter]\n\
    \    elseif letter == 'm' then\n      new_message = new_message .. vowel_map[letter]\n\
    \    elseif letter == 'n' then\n      new_message = new_message .. vowel_map[letter]\n\
    \    elseif letter == 'p' then\n      new_message = new_message .. vowel_map[letter]\n\
    \    elseif letter == 'q' then\n      new_message = new_message .. vowel_map[letter]\n\
    \    elseif letter == 'r' then\n      new_message = new_message .. vowel_map[letter]\n\
    \    elseif letter == 's' then\n      new_message = new_message .. vowel_map[letter]\n\
    \    elseif letter == 't' then\n      new_message = new_message .. vowel_map[letter]\n\
    \    elseif letter == 'u' then\n      new_message = new_message .. vowel_map[letter]\n\
    \    elseif letter == 'v' then\n      new_message = new_message .. vowel_map[letter]\n\
    \    elseif letter == 'w' then", "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n  local vowels = \"aeiou\"\n  local result = \"\"\n  for i = 1, #message do\n\
    \    local letter = message[i]\n    local index = alphabet + vowels\n    local\
    \ letterIndex = index(letter)\n    local vowelIndex = index(vowels)\n    if letterIndex\
    \ < vowelIndex then\n      result = result .. letter\n    else\n      result =\
    \ result .. alphabet[letterIndex + 2]\n    end\n  end\n  return result\nend",
  "  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local result = {}\n  for i = 1, #message do\n    local letter = message[i]\n\
    \    local vowel = letter:sub(1, 1)\n    local position = alphabet:find(vowel)\n\
    \    local next = alphabet:find(vowel, position + 1)\n    local newLetter = alphabet:sub(position\
    \ + 1, next)\n    result[i] = letter:sub(1, 1) .. newLetter\n  end\n  return table.concat(result)\n\
    end", "  -- Write your code here\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n\
    \  local alphabet = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l',\
    \ 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  local\
    \ new_message = ''\n  for i = 1, #message do\n    local letter = message[i]\n\
    \    local new_letter = letter\n    for j = 1, #vowels do\n      if letter ==\
    \ vowels[j] then\n        new_letter = alphabet[#alphabet]\n        break\n  \
    \    end\n    end\n    new_message = new_message .. new_letter\n  end\n  return\
    \ new_message\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local\
    \ vowels = 'aeiou'\n  local newMessage = ''\n  for i = 1, #message do\n    local\
    \ letter = message[i]\n    local newLetter = letter\n    for j = 1, #alphabet\
    \ do\n      if letter == alphabet[j] then\n        newLetter = alphabet[(j - 2)]\
    \ .. alphabet[j]\n      end\n    end\n    for j = 1, #vowels do\n      if letter\
    \ == vowels[j] then\n        newLetter = alphabet[(j + 2)] .. letter\n      end\n\
    \    end\n    newMessage = newMessage .. newLetter\n  end\n  return newMessage\n\
    end", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local vowels = 'aeiou'\n\
    \  local output = ''\n  for i = 1, #message do\n    local letter = message[i]\n\
    \    local index = alphabet and alphabet:find(letter)\n    local vowel = vowels\
    \ and vowels:find(letter)\n    if index and (index + 1) < #alphabet then\n   \
    \   local nextLetter = alphabet:sub(index + 1, index + 2)\n      output = output\
    \ .. alphabet:sub(index, index + 1) .. nextLetter\n    elseif vowel then\n   \
    \   output = output .. alphabet:sub(index + 2, index + 3)\n    end\n  end\n  return\
    \ output\nend", "  -- Write your code here\n  local vowels = {'a', 'e', 'i', 'o',\
    \ 'u'}\n  local alphabet = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j',\
    \ 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n\
    \  local messages = {}\n  local vowel_positions = {}\n  for i = 1, #message do\n\
    \    local letter = message[i]\n    local position = 1\n    local vowel_found\
    \ = false\n    for j = 1, #vowels do\n      if letter == vowels[j] then\n    \
    \    vowel_found = true\n        position = j\n        break\n      end\n    end\n\
    \    if not vowel_found then\n      position = #vowels\n    end\n    table.insert(messages,\
    \ letter)\n    table.insert(vowel_positions, position)\n  end\n  local message\
    \ = ''\n  for i = 1, #messages do\n    local letter = messages[i]\n    local vowel_position\
    \ = vowel_positions[i]\n    local letter_index = alphabet.indexOf(letter)\n  \
    \  local vowel_index = alphabet.indexOf(vowels[vowel_position])\n    local new_letter\
    \ = alphabet[letter_index + vowel_index]\n    message = message .. new_letter\n\
    \  end\n  return message\nend", "  -- Write your code here\n  local vowels = {'a',\
    \ 'e', 'i', 'o', 'u', 'y'}\n  local alphabet = {'a', 'b', 'c', 'd', 'e', 'f',\
    \ 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v',\
    \ 'w', 'x', 'y', 'z'}\n  local messageLength = #message\n  local newMessage =\
    \ ''\n  local index = 0\n  local vowelIndex = 0\n  local alphabetIndex = 0\n \
    \ local newVowel = ''\n  local newAlphabet = ''\n  local newMessageLength = 0\n\
    \  while index < messageLength do\n    if message[index] ~= 'a' and message[index]\
    \ ~= 'e' and message[index] ~= 'i' and message[index] ~= 'o' and message[index]\
    \ ~= 'u' and message[index] ~= 'y' then\n      newMessage = newMessage .. message[index]\n\
    \      index = index + 1\n    elseif message[index] == 'a' then\n      newMessage\
    \ = newMessage .. alphabet[alphabetIndex]\n      index = index + 1\n      alphabetIndex\
    \ = alphabetIndex + 1\n    elseif message[index] == 'e' then\n      newMessage\
    \ = newMessage .. alphabet[alphabetIndex]\n      index = index + 1\n      alphabetIndex\
    \ = alphabetIndex + 1\n    elseif message[index] == 'i' then\n      newMessage\
    \ = newMessage .. alphabet[alphabetIndex]\n      index = index + 1\n      alphabetIndex\
    \ = alphabetIndex + 1\n    elseif message[index] == 'o' then\n      newMessage\
    \ = newMessage .. alphabet[alphabetIndex]\n      index = index + 1\n      alphabetIndex\
    \ = alphabetIndex + 1\n    elseif message[index] == 'u' then\n      newMessage\
    \ = newMessage .. alphabet[alphabetIndex]\n      index = index + 1\n      alphabetIndex\
    \ = alphabetIndex + 1\n    elseif message[index] == 'y' then\n      newMessage\
    \ = newMessage .. alphabet[alphabetIndex]\n      index = index + 1\n      alphabetIndex\
    \ = alphabetIndex + 1\n    else\n      newMessage = newMessage .. message[index]\n\
    \      index = index + 1\n    end\n  end\n  newMessageLength = #newMessage\n \
    \ index = 0\n  while index < newMessageLength do\n    if newMessage[index] ~=\
    \ 'a' and newMessage[index] ~= 'e' and newMessage[index] ~= 'i' and newMessage[index]\
    \ ~= 'o' and newMessage[index] ~= 'u' and newMessage[index] ~= 'y' then\n    \
    \  newMessage = newMessage .. newAlphabet\n      index = index + 1\n    elseif\
    \ newMessage[index] == 'a' then\n      newMessage = newMessage .. newAlphabet\n\
    \      index = index + 1\n      alphabetIndex = alphabetIndex + 1\n    elseif ",
  "  -- Write your code here\n  local alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\
    \  local vowels = \"AEIOU\"\n  local output = ''\n  for i = 1, #message do\n \
    \   local char = message[i]\n    local index = alphabet.find(char)\n    if index\
    \ == nil then\n      -- Not a letter\n      output = output .. char\n    else\n\
    \      -- Letter\n      local vowel_index = alphabet.find(vowels, index + 1)\n\
    \      if vowel_index == nil then\n        -- Not a vowel\n        output = output\
    \ .. char\n      else\n        -- Vowel\n        output = output .. alphabet[vowel_index\
    \ + 1]\n      end\n    end\n  end\n  return output\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local vowels = 'aeiou'\n    local messageLength\
    \ = #message\n    local encodedMessage = ''\n    local index = 1\n    while index\
    \ <= messageLength do\n        local currentChar = message[index]\n        local\
    \ nextChar = message[index + 1]\n        if currentChar == nextChar then\n   \
    \         index = index + 1\n        elseif currentChar ~= ' ' then\n        \
    \    local currentCharIndex = alphabet.indexOf(currentChar)\n            local\
    \ nextCharIndex = alphabet.indexOf(nextChar)\n            if currentCharIndex\
    \ > nextCharIndex then\n                local currentCharVowelIndex = alphabet.indexOf(vowels[currentCharIndex])\n\
    \                local nextCharVowelIndex = alphabet.indexOf(vowels[nextCharIndex])\n\
    \                local currentCharVowel = vowels[currentCharVowelIndex]\n    \
    \            local nextCharVowel = vowels[nextCharVowelIndex]\n              \
    \  local currentCharIndex = alphabet.indexOf(currentCharVowel)\n             \
    \   local nextCharIndex = alphabet.indexOf(nextCharVowel)\n                local\
    \ currentChar = alphabet[currentCharIndex]\n                local nextChar = alphabet[nextCharIndex]\n\
    \                encodedMessage = encodedMessage .. currentChar\n            else\n\
    \                local currentCharIndex = alphabet.indexOf(currentChar)\n    \
    \            local nextCharIndex = alphabet.indexOf(nextChar)\n              \
    \  local currentChar = alphabet[currentCharIndex]\n                local nextChar\
    \ = alphabet[nextCharIndex]\n                encodedMessage = encodedMessage ..\
    \ nextChar\n            end\n        end\n        index = index + 1\n    end\n\
    \    return encodedMessage\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local vowels = 'aeiou'\n    local output = ''\n    local vowelCounts = {}\n\
    \    for i = 1, #message do\n        local letter = message[i]\n        if letter\
    \ == 'a' then\n            letter = alphabet[#alphabet]\n        end\n       \
    \ local vowelIndex = alphabet + letter\n        if vowelIndex in vowels then\n\
    \            vowelCounts[letter] = vowelCounts[letter] + 1\n        end\n    \
    \    local vowelIndex = alphabet[#alphabet] + letter\n        if vowelIndex in\
    \ vowels then\n            vowelCounts[letter] = vowelCounts[letter] + 1\n   \
    \     end\n    end\n    for letter, count in pairs(vowelCounts) do\n        if\
    \ count > 1 then\n            local index = alphabet + letter\n            local\
    \ letterIndex = alphabet + letter\n            local letterIndex2 = alphabet +\
    \ letter\n            local letterIndex3 = alphabet + letter\n            local\
    \ letterIndex4 = alphabet + letter\n            local letterIndex5 = alphabet\
    \ + letter\n            local letterIndex6 = alphabet + letter\n            local\
    \ letterIndex7 = alphabet + letter\n            local letterIndex8 = alphabet\
    \ + letter\n            local letterIndex9 = alphabet + letter\n            local\
    \ letterIndex10 = alphabet + letter\n            local letterIndex11 = alphabet\
    \ + letter\n            local letterIndex12 = alphabet + letter\n            local\
    \ letterIndex13 = alphabet + letter\n            local letterIndex14 = alphabet\
    \ + letter\n            local letterIndex15 = alphabet + letter\n            local\
    \ letterIndex16 = alphabet + letter\n            local letterIndex17 = alphabet\
    \ + letter\n            local letterIndex18 = alphabet + letter\n            local\
    \ letterIndex19 = alphabet + letter\n            local letterIndex20 = alphabet\
    \ + letter\n            local letterIndex21 = alphabet + letter\n            local\
    \ letterIndex22 = alphabet + letter\n            local letterIndex23 = alphabet\
    \ + letter\n            local letterIndex24 = alphabet + letter\n            local\
    \ letterIndex25 = alphabet + letter\n            local letterIndex26 = alphabet\
    \ + letter\n            local letterIndex27 = alphabet + letter\n            local\
    \ letterIndex28 = alphabet + letter\n            local letterIndex29 = alphabet\
    \ + letter\n            local letterIndex30 = alphabet + letter\n            local\
    \ letterIndex31 = alphabet + letter\n            local letterIndex32 = alphabet\
    \ + letter\n            local letterIndex33 = alphabet + letter", "    local vowels\
    \ = {'a', 'e', 'i', 'o', 'u'}\n    local alphabet = {'a', 'b', 'c', 'd', 'e',\
    \ 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u',\
    \ 'v', 'w', 'x', 'y', 'z'}\n    local alphabet2 = {'a', 'b', 'c', 'd', 'e', 'f',\
    \ 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v',\
    \ 'w', 'x', 'y', 'z'}\n    local alphabet3 = {'a', 'b', 'c', 'd', 'e', 'f', 'g',\
    \ 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w',\
    \ 'x', 'y', 'z'}\n    local alphabet4 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h',\
    \ 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x',\
    \ 'y', 'z'}\n    local alphabet5 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i',\
    \ 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y',\
    \ 'z'}\n    local alphabet6 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j',\
    \ 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n\
    \    local alphabet7 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n\
    \    local alphabet8 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n\
    \    local alphabet9 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n\
    \    local alphabet10 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n\
    \    local alphabet11 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n\
    \    local alphabet12 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n\
    \    local alphabet13 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l", "    local vowels = {'a','e','i','o','u'}\n    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local result = \"\"\n    local index = 1\n    for i = 1, #message do\n  \
    \      local letter = message[i]\n        if letter ~= nil then\n            local\
    \ vowel = letter:sub(1,1)\n            local letter2 = letter:sub(2,2)\n     \
    \       if vowel in vowels then\n                local index = alphabet:find(vowel)\n\
    \                local letter3 = alphabet:sub(1,index-1)\n                local\
    \ letter4 = alphabet:sub(index+1,index)\n                result = result .. letter3\
    \ .. letter2\n            else\n                result = result .. letter\n  \
    \          end\n        end\n    end\n    return result\nend", "  -- Write your\
    \ code here\n  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  local vowels\
    \ = \"aeiou\"\n  local message1 = message\n  local message2 = message\n  local\
    \ message3 = message\n  local message4 = message\n  local message5 = message\n\
    \  local message6 = message\n  local message7 = message\n  local message8 = message\n\
    \  local message9 = message\n  local message10 = message\n  local message11 =\
    \ message\n  local message12 = message\n  local message13 = message\n  local message14\
    \ = message\n  local message15 = message\n  local message16 = message\n  local\
    \ message17 = message\n  local message18 = message\n  local message19 = message\n\
    \  local message20 = message\n  local message21 = message\n  local message22 =\
    \ message\n  local message23 = message\n  local message24 = message\n  local message25\
    \ = message\n  local message26 = message\n  local message27 = message\n  local\
    \ message28 = message\n  local message29 = message\n  local message30 = message\n\
    \  local message31 = message\n  local message32 = message\n  local message33 =\
    \ message\n  local message34 = message\n  local message35 = message\n  local message36\
    \ = message\n  local message37 = message\n  local message38 = message\n  local\
    \ message39 = message\n  local message40 = message\n  local message41 = message\n\
    \  local message42 = message\n  local message43 = message\n  local message44 =\
    \ message\n  local message45 = message\n  local message46 = message\n  local message47\
    \ = message\n  local message48 = message\n  local message49 = message\n  local\
    \ message50 = message\n  local message51 = message\n  local message52 = message\n\
    \  local message53 = message\n  local message54 = message\n  local message55 =\
    \ message\n  local message56 = message\n  local message57 = message\n  local message58\
    \ = message\n  local message59 = message\n  local message60 = message\n  local\
    \ message61 = message\n  local message62 = message\n  local message63 = message\n\
    \  local message64 = message\n  local message65 = message\n  local message66 =\
    \ message\n  local message67 = message\n  local message68 = message\n  local message69\
    \ = message\n  local message70 = message\n  local message", "  local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n  local vowels = 'aeiou'\n  local vowels_index\
    \ = alphabet:find(vowels)\n  local message_index = 1\n  local message_length =\
    \ #message\n  local result = {}\n  local index = 1\n  while message_index <= message_length\
    \ do\n    local letter = message[message_index]\n    local vowel = letter:sub(1,\
    \ 1)\n    local next_letter = letter:sub(2, 2)\n    local new_letter = alphabet:sub(vowels_index\
    \ + vowel, vowels_index + vowel + 1)\n    result[index] = new_letter\n    index\
    \ = index + 1\n  end\n  return table.concat(result)\nend", "  local alphabet =\
    \ {\n    ['A'] = ['B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\
    \ 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\n    ['B']\
    \ = ['A', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P',\
    \ 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\n    ['C'] = ['A', 'B', 'D',\
    \ 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T',\
    \ 'U', 'V', 'W', 'X', 'Y', 'Z'],\n    ['D'] = ['A', 'B', 'C', 'E', 'F', 'G', 'H',\
    \ 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X',\
    \ 'Y', 'Z'],\n    ['E'] = ['A', 'B', 'C', 'D', 'F', 'G', 'H', 'I', 'J', 'K', 'L',\
    \ 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\n   \
    \ ['F'] = ['A', 'B', 'C', 'D', 'E', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\
    \ 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\n    ['G'] = ['A', 'B',\
    \ 'C', 'D', 'E', 'F', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\
    \ 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\n    ['H'] = ['A', 'B', 'C', 'D', 'E', 'F',\
    \ 'G', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W',\
    \ 'X', 'Y', 'Z'],\n    ['I'] = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'K', 'L',\
    \ 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\n   \
    \ ['J'] = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'K', 'L', 'M', 'N', 'O',\
    \ 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\n    ['K'] = ['A', 'B',\
    \ 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\
    \ 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\n    ['L'] = ['A', 'B', 'C', 'D', 'E', 'F',\
    \ 'G', 'H', 'I', 'J', '", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n \
    \ local vowels = 'aeiou'\n  local messageLength = #message\n  local encodedMessage\
    \ = ''\n  local index = 1\n  while index <= messageLength do\n    local currentChar\
    \ = message[index]\n    local currentCharIndex = alphabet.find(currentChar)\n\
    \    local nextCharIndex = alphabet.find(currentChar, currentCharIndex + 1)\n\
    \    local nextChar = alphabet[nextCharIndex]\n    local nextCharIndex = alphabet.find(nextChar)\n\
    \    local nextChar2 = alphabet[nextCharIndex + 1]\n    local nextCharIndex2 =\
    \ alphabet.find(nextChar2, nextCharIndex + 2)\n    local nextChar3 = alphabet[nextCharIndex2\
    \ + 1]\n    local nextCharIndex3 = alphabet.find(nextChar3, nextCharIndex + 2)\n\
    \    local nextChar4 = alphabet[nextCharIndex3 + 1]\n    local nextCharIndex4\
    \ = alphabet.find(nextChar4, nextCharIndex + 2)\n    local nextChar5 = alphabet[nextCharIndex4\
    \ + 1]\n    local nextCharIndex5 = alphabet.find(nextChar5, nextCharIndex + 2)\n\
    \    local nextChar6 = alphabet[nextCharIndex5 + 1]\n    local nextCharIndex6\
    \ = alphabet.find(nextChar6, nextCharIndex + 2)\n    local nextChar7 = alphabet[nextCharIndex6\
    \ + 1]\n    local nextCharIndex7 = alphabet.find(nextChar7, nextCharIndex + 2)\n\
    \    local nextChar8 = alphabet[nextCharIndex7 + 1]\n    local nextCharIndex8\
    \ = alphabet.find(nextChar8, nextCharIndex + 2)\n    local nextChar9 = alphabet[nextCharIndex8\
    \ + 1]\n    local nextCharIndex9 = alphabet.find(nextChar9, nextCharIndex + 2)\n\
    \    local nextChar10 = alphabet[nextCharIndex9 + 1]\n    local nextCharIndex10\
    \ = alphabet.find(nextChar10, nextCharIndex + 2)\n    local nextChar11 = alphabet[nextCharIndex10\
    \ + 1]\n    local nextCharIndex11 = alphabet.find(nextChar11, nextCharIndex +\
    \ 2)\n    local nextChar12 = alphabet[nextCharIndex11 + 1]\n    local nextCharIndex12\
    \ = alphabet.find(nextChar12, nextCharIndex + 2)\n    local nextChar13 = alphabet[nextCharIndex12\
    \ + 1]\n    local nextCharIndex13 = alphabet.find(nextChar13, nextCharIndex +\
    \ 2)\n    local nextChar14 = alphabet[nextCharIndex13 + 1]\n    local nextCharIndex14\
    \ = alphabet.find(nextChar14, next", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local vowels = 'aeiou'\n  local messageLength = #message\n  local encodedMessage\
    \ = ''\n  local i = 1\n  while i <= messageLength do\n    local letter = message[i]\n\
    \    local nextLetter = message[i + 1]\n    local index = alphabet.find(letter)\n\
    \    local nextIndex = alphabet.find(nextLetter)\n    local vowelIndex = alphabet.find(vowels)\n\
    \    if index == nil then\n      encodedMessage = encodedMessage .. letter\n \
    \     i = i + 1\n    elseif nextIndex == nil then\n      encodedMessage = encodedMessage\
    \ .. letter\n      i = i + 1\n    elseif index == vowelIndex then\n      encodedMessage\
    \ = encodedMessage .. letter\n      i = i + 1\n    elseif index > vowelIndex then\n\
    \      encodedMessage = encodedMessage .. alphabet[(index + 2) % #alphabet]\n\
    \      i = i + 1\n    elseif index == vowelIndex and nextIndex > vowelIndex then\n\
    \      encodedMessage = encodedMessage .. alphabet[(nextIndex + 2) % #alphabet]\n\
    \      i = i + 1\n    else\n      encodedMessage = encodedMessage .. alphabet[(index\
    \ + 2) % #alphabet]\n      i = i + 1\n    end\n  end\n  return encodedMessage\n\
    end", "    local vowels = \"aeiouAEIOU\"\n    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local alphabetLength = #alphabet\n    local messageLength = #message\n \
    \   local encodedMessage = \"\"\n    local currentLetter = \"\"\n    local currentVowel\
    \ = \"\"\n    local currentLetterIndex = 0\n    local currentVowelIndex = 0\n\
    \    local currentLetterIndex2 = 0\n    local currentVowelIndex2 = 0\n    local\
    \ currentLetterIndex3 = 0\n    local currentVowelIndex3 = 0\n    local currentLetterIndex4\
    \ = 0\n    local currentVowelIndex4 = 0\n    local currentLetterIndex5 = 0\n \
    \   local currentVowelIndex5 = 0\n    local currentLetterIndex6 = 0\n    local\
    \ currentVowelIndex6 = 0\n    local currentLetterIndex7 = 0\n    local currentVowelIndex7\
    \ = 0\n    local currentLetterIndex8 = 0\n    local currentVowelIndex8 = 0\n \
    \   local currentLetterIndex9 = 0\n    local currentVowelIndex9 = 0\n    local\
    \ currentLetterIndex10 = 0\n    local currentVowelIndex10 = 0\n    local currentLetterIndex11\
    \ = 0\n    local currentVowelIndex11 = 0\n    local currentLetterIndex12 = 0\n\
    \    local currentVowelIndex12 = 0\n    local currentLetterIndex13 = 0\n    local\
    \ currentVowelIndex13 = 0\n    local currentLetterIndex14 = 0\n    local currentVowelIndex14\
    \ = 0\n    local currentLetterIndex15 = 0\n    local currentVowelIndex15 = 0\n\
    \    local currentLetterIndex16 = 0\n    local currentVowelIndex16 = 0\n    local\
    \ currentLetterIndex17 = 0\n    local currentVowelIndex17 = 0\n    local currentLetterIndex18\
    \ = 0\n    local currentVowelIndex18 = 0\n    local currentLetterIndex19 = 0\n\
    \    local currentVowelIndex19 = 0\n    local currentLetterIndex20 = 0\n    local\
    \ currentVowelIndex20 = 0\n    local currentLetterIndex21 = 0\n    local currentVowelIndex21\
    \ = 0\n    local currentLetterIndex22 = 0\n    local currentVowelIndex22 = 0\n\
    \    local currentLetterIndex23 = 0\n    local currentVowelIndex23 = 0\n    local\
    \ currentLetterIndex24 = 0\n    local currentVowelIndex24 = 0\n    local currentLetterIndex25\
    \ = 0\n    local currentVowelIndex25 = 0\n    local ", "    local alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    local vowels = \"aeiou\"\n    local newMessage\
    \ = \"\"\n    for i = 1, #message do\n        local letter = message[i]\n    \
    \    local newLetter = letter\n        for j = 1, #alphabet do\n            if\
    \ letter == alphabet[j] then\n                newLetter = alphabet[(j + 2) % #alphabet]\n\
    \            end\n        end\n        for j = 1, #vowels do\n            if letter\
    \ == vowels[j] then\n                newLetter = vowels[(j + 2) % #vowels]\n \
    \           end\n        end\n        newMessage = newMessage .. newLetter\n \
    \   end\n    return newMessage\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local vowels = \"aeiou\"\n    local output = ''\n    local vowelIndex =\
    \ 1\n    for i = 1, #message do\n        local char = message[i]\n        if char\
    \ == 'a' then\n            char = alphabet[vowelIndex]\n            vowelIndex\
    \ = vowelIndex + 1\n        end\n        if char == 'e' then\n            char\
    \ = alphabet[vowelIndex + 1]\n            vowelIndex = vowelIndex + 2\n      \
    \  end\n        if char == 'i' then\n            char = alphabet[vowelIndex +\
    \ 2]\n            vowelIndex = vowelIndex + 3\n        end\n        if char ==\
    \ 'o' then\n            char = alphabet[vowelIndex + 3]\n            vowelIndex\
    \ = vowelIndex + 4\n        end\n        if char == 'u' then\n            char\
    \ = alphabet[vowelIndex + 4]\n            vowelIndex = vowelIndex + 5\n      \
    \  end\n        if char == 'y' then\n            char = alphabet[vowelIndex +\
    \ 5]\n            vowelIndex = vowelIndex + 6\n        end\n        output = output\
    \ .. char\n    end\n    return output\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local vowels = \"aeiou\"\n    local output = ''\n    for i = 1, #message\
    \ do\n        local letter = message[i]\n        if letter ~= ' ' then\n     \
    \       local index = alphabet + vowels\n            local letterIndex = index:find(letter)\n\
    \            if letterIndex == nil then\n                letterIndex = alphabet\
    \ + letter\n            end\n            local letter2 = alphabet:sub(letterIndex\
    \ + 1, letterIndex + 2)\n            local letter3 = alphabet:sub(letterIndex\
    \ + 2, letterIndex + 3)\n            local letter4 = alphabet:sub(letterIndex\
    \ + 3, letterIndex + 4)\n            local letter5 = alphabet:sub(letterIndex\
    \ + 4, letterIndex + 5)\n            local letter6 = alphabet:sub(letterIndex\
    \ + 5, letterIndex + 6)\n            local letter7 = alphabet:sub(letterIndex\
    \ + 6, letterIndex + 7)\n            local letter8 = alphabet:sub(letterIndex\
    \ + 7, letterIndex + 8)\n            local letter9 = alphabet:sub(letterIndex\
    \ + 8, letterIndex + 9)\n            local letter10 = alphabet:sub(letterIndex\
    \ + 9, letterIndex + 10)\n            local letter11 = alphabet:sub(letterIndex\
    \ + 10, letterIndex + 11)\n            local letter12 = alphabet:sub(letterIndex\
    \ + 11, letterIndex + 12)\n            local letter13 = alphabet:sub(letterIndex\
    \ + 12, letterIndex + 13)\n            local letter14 = alphabet:sub(letterIndex\
    \ + 13, letterIndex + 14)\n            local letter15 = alphabet:sub(letterIndex\
    \ + 14, letterIndex + 15)\n            local letter16 = alphabet:sub(letterIndex\
    \ + 15, letterIndex + 16)\n            local letter17 = alphabet:sub(letterIndex\
    \ + 16, letterIndex + 17)\n            local letter18 = alphabet:sub(letterIndex\
    \ + 17, letterIndex + 18)\n            local letter19 = alphabet:sub(letterIndex\
    \ + 18, letterIndex + 19)\n            local letter20 = alphabet:sub(letterIndex\
    \ + 19, letterIndex + 20)\n            local letter21 = alphabet:sub(letterIndex\
    \ + 20, letterIndex + 21)\n            local letter22 = alphabet:sub(letterIndex\
    \ + 21, letterIndex + 22)\n            local letter23 = alphabet:sub(letterIndex\
    \ + 22, letterIndex + 23)\n            local letter24 = alphabet:sub(letterIndex\
    \ + 23, letterIndex + 24)\n            local letter25 = alphabet:sub(letterIndex\
    \ + 24, letterIndex + 25)\n            local letter26 = alphabet:sub(letterIndex\
    \ + 25, letterIndex + 26)\n            local letter27 = alphabet:", "    local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local vowels = 'aeiou'\n    local\
    \ result = \"\"\n    for i = 1, #message do\n        local char = message[i]\n\
    \        local index = alphabet.find(char)\n        if index == nil then\n   \
    \         index = alphabet.find(vowels, 1, index + 1)\n        end\n        if\
    \ index == nil then\n            index = alphabet.find(vowels, index + 1, #alphabet)\n\
    \        end\n        if index == nil then\n            index = #alphabet\n  \
    \      end\n        local next = alphabet[index + 1]\n        local last = alphabet[index\
    \ - 1]\n        if last ~= char then\n            result = result .. last\n  \
    \      end\n        result = result .. next\n    end\n    return result\nend",
  "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local vowels = \"aeiou\"\
    \n    local output = ''\n    for i = 1, #message do\n        local char = message[i]\n\
    \        local index = alphabet.find(char)\n        if index == nil then\n   \
    \         -- Not a letter\n            -- TODO: Handle this case\n        elseif\
    \ index == #alphabet then\n            -- Last letter\n            -- TODO: Handle\
    \ this case\n        elseif index == #alphabet-1 then\n            -- Middle letter\n\
    \            local vowel = alphabet[index+1]\n            local vowelIndex = alphabet.find(vowel)\n\
    \            local vowel2Index = alphabet.find(vowel, index+1)\n            local\
    \ vowel3Index = alphabet.find(vowel, index+2)\n            local vowel4Index =\
    \ alphabet.find(vowel, index+3)\n            local vowel5Index = alphabet.find(vowel,\
    \ index+4)\n            local vowel6Index = alphabet.find(vowel, index+5)\n  \
    \          local vowel7Index = alphabet.find(vowel, index+6)\n            local\
    \ vowel8Index = alphabet.find(vowel, index+7)\n            local vowel9Index =\
    \ alphabet.find(vowel, index+8)\n            local vowel10Index = alphabet.find(vowel,\
    \ index+9)\n            local vowel11Index = alphabet.find(vowel, index+10)\n\
    \            local vowel12Index = alphabet.find(vowel, index+11)\n           \
    \ local vowel13Index = alphabet.find(vowel, index+12)\n            local vowel14Index\
    \ = alphabet.find(vowel, index+13)\n            local vowel15Index = alphabet.find(vowel,\
    \ index+14)\n            local vowel16Index = alphabet.find(vowel, index+15)\n\
    \            local vowel17Index = alphabet.find(vowel, index+16)\n           \
    \ local vowel18Index = alphabet.find(vowel, index+17)\n            local vowel19Index\
    \ = alphabet.find(vowel, index+18)\n            local vowel20Index = alphabet.find(vowel,\
    \ index+19)\n            local vowel21Index = alphabet.find(vowel, index+20)\n\
    \            local vowel22Index = alphabet.find(vowel, index+21)\n           \
    \ local vowel23Index = alphabet.find(vowel, index+22)\n            local vowel24Index\
    \ = alphabet.find(vowel, index+23)\n            local vowel25Index = alphabet.find(vowel,\
    \ index+24)\n            local vowel26Index = alphabet.find(vowel, index+25)\n\
    \            local vowel27Index = alphabet.find(vowel, index+26)\n           \
    \ local vowel28Index = alphabet.find(vowel, index+27)\n            local vowel29Index\
    \ = ", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local alphabet = {'a', 'b',\
    \ 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r',\
    \ 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  local new_message = ''\n  for i =\
    \ 1, #message do\n    local letter = message[i]\n    if letter == 'a' then\n \
    \     new_message = new_message .. alphabet[#alphabet + 1]\n    elseif letter\
    \ == 'e' then\n      new_message = new_message .. alphabet[#alphabet + 1]\n  \
    \  elseif letter == 'i' then\n      new_message = new_message .. alphabet[#alphabet\
    \ + 1]\n    elseif letter == 'o' then\n      new_message = new_message .. alphabet[#alphabet\
    \ + 1]\n    elseif letter == 'u' then\n      new_message = new_message .. alphabet[#alphabet\
    \ + 1]\n    else\n      new_message = new_message .. letter\n    end\n  end\n\
    \  local new_message = ''\n  for i = 1, #message do\n    local letter = message[i]\n\
    \    if letter == 'a' then\n      new_message = new_message .. alphabet[#alphabet\
    \ + 1]\n    elseif letter == 'e' then\n      new_message = new_message .. alphabet[#alphabet\
    \ + 1]\n    elseif letter == 'i' then\n      new_message = new_message .. alphabet[#alphabet\
    \ + 1]\n    elseif letter == 'o' then\n      new_message = new_message .. alphabet[#alphabet\
    \ + 1]\n    elseif letter == 'u' then\n      new_message = new_message .. alphabet[#alphabet\
    \ + 1]\n    else\n      new_message = new_message .. letter\n    end\n  end\n\
    \  new_message = new_message:gsub('a', 'A')\n  new_message = new_message:gsub('e',\
    \ 'E')\n  new_message = new_message:gsub('i', 'I')\n  new_message = new_message:gsub('o',\
    \ 'O')\n  new_message = new_message:gsub('u', 'U')\n  return new_message\nend",
  "  local alphabet = {\n    ['a'] = 'A',\n    ['b'] = 'B',\n    ['c'] = 'C',\n  \
    \  ['d'] = 'D',\n    ['e'] = 'E',\n    ['f'] = 'F',\n    ['g'] = 'G',\n    ['h']\
    \ = 'H',\n    ['i'] = 'I',\n    ['j'] = 'J',\n    ['k'] = 'K',\n    ['l'] = 'L',\n\
    \    ['m'] = 'M',\n    ['n'] = 'N',\n    ['o'] = 'O',\n    ['p'] = 'P',\n    ['q']\
    \ = 'Q',\n    ['r'] = 'R',\n    ['s'] = 'S',\n    ['t'] = 'T',\n    ['u'] = 'U',\n\
    \    ['v'] = 'V',\n    ['w'] = 'W',\n    ['x'] = 'X',\n    ['y'] = 'Y',\n    ['z']\
    \ = 'Z',\n    ['A'] = 'a',\n    ['B'] = 'b',\n    ['C'] = 'c',\n    ['D'] = 'd',\n\
    \    ['E'] = 'e',\n    ['F'] = 'f',\n    ['G'] = 'g',\n    ['H'] = 'h',\n    ['I']\
    \ = 'i',\n    ['J'] = 'j',\n    ['K'] = 'k',\n    ['L'] = 'l',\n    ['M'] = 'm',\n\
    \    ['N'] = 'n',\n    ['O'] = 'o',\n    ['P'] = 'p',\n    ['Q'] = 'q',\n    ['R']\
    \ = 'r',\n    ['S'] = 's',\n    ['T'] = 't',\n    ['U'] = 'u',\n    ['V'] = 'v',\n\
    \    ['W'] = 'w',\n    ['X'] = 'x',\n    ['Y'] = 'y',\n    ['Z'] = 'z',\n  }\n\
    \  local vowels = {\n    ['a'] = 'a',\n    ['e'] = 'e',\n    ['i'] = 'i',\n  \
    \  ['o'] = 'o',\n    ['u'] = 'u',\n  }\n  local result = \"\"\n  for i = 1, #message\
    \ do\n    local letter = message[i]\n    local letterIndex = alphabet.keys[letter]\n\
    \    local vowelIndex = vowels.keys[letter]\n    if letterIndex and letterIndex\
    \ > vowelIndex then\n      local letter2 = alphabet[alphabet[letterIndex]]\n \
    \     local letter3 = alphabet[alphabet[letterIndex + 1]]\n      result = result\
    \ .. letter2\n      result = result .. letter3\n    else\n      result = result\
    \ .. letter\n    end\n  end\n  return result\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local vowels = \"aeiou\"\n    local newMessage = \"\"\n    local vowelIndex\
    \ = 0\n    local letterIndex = 0\n    for i = 1, #message do\n        local letter\
    \ = message[i]\n        if letter:lower() == letter then\n            letterIndex\
    \ = letterIndex + 1\n        else\n            letterIndex = letterIndex - 1\n\
    \        end\n        if letterIndex == 0 then\n            newMessage = newMessage\
    \ .. alphabet[letterIndex]\n            letterIndex = 1\n        elseif letterIndex\
    \ == 1 then\n            newMessage = newMessage .. alphabet[letterIndex]\n  \
    \          letterIndex = 0\n        end\n        if letter:lower() == vowels[vowelIndex]\
    \ then\n            vowelIndex = vowelIndex + 1\n        else\n            vowelIndex\
    \ = vowelIndex - 1\n        end\n    end\n    return newMessage\nend", "    local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local vowels = 'aeiou'\n    local\
    \ messageLength = #message\n    local encodedMessage = ''\n    local index = 1\n\
    \    while index <= messageLength do\n        local letter = message:sub(1, index)\n\
    \        local vowelIndex = letter:find(vowels)\n        if vowelIndex == 0 then\n\
    \            local letterIndex = letter:find(alphabet)\n            letter = alphabet[letterIndex\
    \ + 1]\n        end\n        encodedMessage = encodedMessage .. letter\n     \
    \   index = index + 1\n    end\n    return encodedMessage\nend", "  -- Write your\
    \ solution here\n  -- Hint: Use a dictionary to map each letter to its position\n\
    \  -- Hint: Use a nested loop to iterate over the message\n  -- Hint: Use string.gsub\
    \ to replace vowels with their position\n  -- Hint: Use string.gsub to replace\
    \ vowels with their position\n  -- Hint: Use string.gsub to replace vowels with\
    \ their position\n  -- Hint: Use string.gsub to replace vowels with their position\n\
    \  -- Hint: Use string.gsub to replace vowels with their position\n  -- Hint:\
    \ Use string.gsub to replace vowels with their position\n  -- Hint: Use string.gsub\
    \ to replace vowels with their position\n  -- Hint: Use string.gsub to replace\
    \ vowels with their position\n  -- Hint: Use string.gsub to replace vowels with\
    \ their position\n  -- Hint: Use string.gsub to replace vowels with their position\n\
    \  -- Hint: Use string.gsub to replace vowels with their position\n  -- Hint:\
    \ Use string.gsub to replace vowels with their position\n  -- Hint: Use string.gsub\
    \ to replace vowels with their position\n  -- Hint: Use string.gsub to replace\
    \ vowels with their position\n  -- Hint: Use string.gsub to replace vowels with\
    \ their position\n  -- Hint: Use string.gsub to replace vowels with their position\n\
    \  -- Hint: Use string.gsub to replace vowels with their position\n  -- Hint:\
    \ Use string.gsub to replace vowels with their position\n  -- Hint: Use string.gsub\
    \ to replace vowels with their position\n  -- Hint: Use string.gsub to replace\
    \ vowels with their position\n  -- Hint: Use string.gsub to replace vowels with\
    \ their position\n  -- Hint: Use string.gsub to replace vowels with their position\n\
    \  -- Hint: Use string.gsub to replace vowels with their position\n  -- Hint:\
    \ Use string.gsub to replace vowels with their position\n  -- Hint: Use string.gsub\
    \ to replace vowels with their position\n  -- Hint: Use string.gsub to replace\
    \ vowels with their position\n  -- Hint: Use string.gsub to replace vowels with\
    \ their position\n  -- Hint: Use string.gsub to replace vowels with their position\n\
    \  -- Hint: Use string.gsub to replace vowels with their position\n  -- Hint:\
    \ Use string.gsub to replace vowels with their position\n  -- Hint: Use string.gsub\
    \ to replace vowels with their position\n  -- Hint: Use string.gsub to replace\
    \ vowels with ", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local\
    \ vowels = 'aeiou'\n    local new_message = ''\n    for i = 1, #message do\n \
    \       local letter = message[i]\n        if letter:lower() ~= letter then\n\
    \            new_message = new_message .. letter\n        else\n            local\
    \ index = alphabet:find(letter)\n            if index ~= nil then\n          \
    \      local vowel_index = alphabet:find(vowels, index + 1)\n                if\
    \ vowel_index ~= nil then\n                    local vowel_letter = alphabet:sub(vowel_index\
    \ + 1, vowel_index + 2)\n                    new_message = new_message .. vowel_letter\n\
    \                else\n                    new_message = new_message .. letter\n\
    \                end\n            else\n                new_message = new_message\
    \ .. letter\n            end\n        end\n    end\n    return new_message\nend",
  "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  local vowels = \"aeiou\"\n\
    \  local result = \"\"\n  for i = 1, #message do\n    local letter = message[i]\n\
    \    local vowel = letter:sub(1, 1)\n    local position = alphabet + vowels:sub(1,\
    \ 1)\n    local letter2 = alphabet:sub((position - 1):len())\n    local letter3\
    \ = alphabet:sub((position - 2):len())\n    local letter4 = alphabet:sub((position\
    \ - 3):len())\n    local letter5 = alphabet:sub((position - 4):len())\n    local\
    \ letter6 = alphabet:sub((position - 5):len())\n    local letter7 = alphabet:sub((position\
    \ - 6):len())\n    local letter8 = alphabet:sub((position - 7):len())\n    local\
    \ letter9 = alphabet:sub((position - 8):len())\n    local letter10 = alphabet:sub((position\
    \ - 9):len())\n    local letter11 = alphabet:sub((position - 10):len())\n    local\
    \ letter12 = alphabet:sub((position - 11):len())\n    local letter13 = alphabet:sub((position\
    \ - 12):len())\n    local letter14 = alphabet:sub((position - 13):len())\n   \
    \ local letter15 = alphabet:sub((position - 14):len())\n    local letter16 = alphabet:sub((position\
    \ - 15):len())\n    local letter17 = alphabet:sub((position - 16):len())\n   \
    \ local letter18 = alphabet:sub((position - 17):len())\n    local letter19 = alphabet:sub((position\
    \ - 18):len())\n    local letter20 = alphabet:sub((position - 19):len())\n   \
    \ local letter21 = alphabet:sub((position - 20):len())\n    local letter22 = alphabet:sub((position\
    \ - 21):len())\n    local letter23 = alphabet:sub((position - 22):len())\n   \
    \ local letter24 = alphabet:sub((position - 23):len())\n    local letter25 = alphabet:sub((position\
    \ - 24):len())\n    local letter26 = alphabet:sub((position - 25):len())\n   \
    \ local letter27 = alphabet:sub((position - 26):len())\n    local letter28 = alphabet:sub((position\
    \ - 27):len())\n    local letter29 = alphabet:sub((position - 28):len())\n   \
    \ local letter30 = alphabet:sub((position - 29):len())\n", "  local alphabet =\
    \ 'abcdefghijklmnopqrstuvwxyz'\n  local vowels = 'aeiou'\n  local output = ''\n\
    \  for i = 1, #message do\n    local letter = message[i]\n    local index = alphabet\
    \ + alphabet:sub(1, i) + alphabet:sub(i + 1, #alphabet)\n    local replacement\
    \ = alphabet:sub(i + 1, #alphabet)\n    local vowelIndex = alphabet + alphabet:sub(i,\
    \ i) + alphabet:sub(i + 1, i) + alphabet:sub(i + 2, i) + alphabet:sub(i + 3, i)\
    \ + alphabet:sub(i + 4, i) + alphabet:sub(i + 5, i) + alphabet:sub(i + 6, i) +\
    \ alphabet:sub(i + 7, i) + alphabet:sub(i + 8, i) + alphabet:sub(i + 9, i)\n \
    \   local vowelReplacement = alphabet:sub(vowelIndex, vowelIndex + #vowels)\n\
    \    local replacementIndex = alphabet + alphabet:sub(i, i) + alphabet:sub(i +\
    \ 1, i) + alphabet:sub(i + 2, i) + alphabet:sub(i + 3, i) + alphabet:sub(i + 4,\
    \ i) + alphabet:sub(i + 5, i) + alphabet:sub(i + 6, i) + alphabet:sub(i + 7, i)\
    \ + alphabet:sub(i + 8, i) + alphabet:sub(i + 9, i)\n    local replacementIndex2\
    \ = alphabet + alphabet:sub(i, i) + alphabet:sub(i + 1, i) + alphabet:sub(i +\
    \ 2, i) + alphabet:sub(i + 3, i) + alphabet:sub(i + 4, i) + alphabet:sub(i + 5,\
    \ i) + alphabet:sub(i + 6, i) + alphabet:sub(i + 7, i) + alphabet:sub(i + 8, i)\
    \ + alphabet:sub(i + 9, i)\n    local replacementIndex3 = alphabet + alphabet:sub(i,\
    \ i) + alphabet:sub(i + 1, i) + alphabet:sub(i + 2, i) + alphabet:sub(i + 3, i)\
    \ + alphabet:sub(i + 4, i) + alphabet:sub(i + 5, i) + alphabet:sub(i + 6, i) +\
    \ alphabet:sub(i + 7, i) + alphabet:sub(i + 8, i) + alphabet:sub(i + 9, i)\n \
    \   local replacementIndex4 = alphabet + alphabet:sub(i, i) + alphabet:sub(i +\
    \ 1, i) + alphabet:sub(i + 2, i) + alphabet:sub(i + 3, i) + alphabet:sub(i + 4,\
    \ i) + alphabet:sub(i + 5, i) + alphabet:sub(i + 6, i) + alphabet:sub(i + 7, i)\
    \ + alphabet:sub(i + 8, i) + alphabet", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local vowels = 'aeiou'\n  local result = message\n  local vowelIndex = 1\n\
    \  for i = 1, #message do\n    local char = message[i]\n    local nextVowel =\
    \ alphabet:sub(1, vowelIndex):lower()\n    local nextChar = alphabet:sub(1, vowelIndex\
    \ + 2):lower()\n    local newChar = char:lower()\n    if nextChar == vowels[vowelIndex]\
    \ then\n      vowelIndex = vowelIndex + 1\n      result = result:sub(1, #result):sub(1,\
    \ #result) + nextVowel\n    else\n      result = result:sub(1, #result):sub(1,\
    \ #result) + newChar\n    end\n  end\n  return result\nend", "  local alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n  local vowels = \"aeiou\"\n  local output\
    \ = ''\n  for i = 1, #message do\n    local letter = message[i]\n    local index\
    \ = alphabet and alphabet:find(letter) or letter\n    local vowel = vowels and\
    \ vowels:find(letter) or letter\n    local nextLetter = alphabet:sub(index, index\
    \ + 1)\n    local nextVowel = vowels:sub(index, index + 1)\n    local nextLetterIndex\
    \ = alphabet and alphabet:find(nextLetter) or nextLetter\n    local nextVowelIndex\
    \ = vowels and vowels:find(nextVowel) or nextVowel\n    local nextLetterLetter\
    \ = alphabet:sub(nextLetterIndex, nextLetterIndex + 1)\n    local nextVowelLetter\
    \ = vowels:sub(nextVowelIndex, nextVowelIndex + 1)\n    local nextLetterVowel\
    \ = alphabet:sub(nextLetterIndex, nextLetterIndex + 1)\n    local nextVowelVowel\
    \ = vowels:sub(nextVowelIndex, nextVowelIndex + 1)\n    local nextLetterLetterVowel\
    \ = alphabet:sub(nextLetterIndex, nextLetterIndex + 1)\n    local nextVowelLetterVowel\
    \ = vowels:sub(nextVowelIndex, nextVowelIndex + 1)\n    local nextLetterVowelVowel\
    \ = alphabet:sub(nextLetterIndex, nextLetterIndex + 1)\n    local nextVowelVowelVowel\
    \ = vowels:sub(nextVowelIndex, nextVowelIndex + 1)\n    local nextLetterVowelVowelVowel\
    \ = alphabet:sub(nextLetterIndex, nextLetterIndex + 1)\n    local nextVowelVowelVowelVowel\
    \ = vowels:sub(nextVowelIndex, nextVowelIndex + 1)\n    local nextLetterVowelVowelVowelVowel\
    \ = alphabet:sub(nextLetterIndex, nextLetterIndex + 1)\n    local nextVowelVowelVowelVowelVowel\
    \ = vowels:sub(nextVowelIndex, nextVowelIndex + 1)\n    local nextLetterVowelVowelVowelVowelVowel\
    \ = alphabet:sub(nextLetterIndex, nextLetterIndex + 1)\n    local nextVowelVowelVowelVowelVowelVowel\
    \ = vowels:sub(nextVowelIndex, nextVowelIndex + 1)\n    local nextLetterVowelVowelV",
  "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local vowels = 'aeiou'\n\
    \    local output = ''\n    for i = 1, #message do\n        local letter = message[i]\n\
    \        if letter ~= ' ' then\n            local index = alphabet + letter\n\
    \            local vowel_index = index\n            for j = 1, #vowels do\n  \
    \              local vowel = vowels[j]\n                if vowel_index == index\
    \ then\n                    vowel_index = alphabet + vowel\n                end\n\
    \            end\n            local vowel_position = alphabet + vowel_index\n\
    \            local vowel_letter = alphabet:sub(vowel_position, vowel_position\
    \ + 2)\n            local new_letter = alphabet:sub(vowel_index, vowel_index +\
    \ 2)\n            output = output .. new_letter\n        end\n    end\n    return\
    \ output\nend", "    local alphabet = {\n        ['a'] = 'A', \n        ['e']\
    \ = 'E', \n        ['i'] = 'I', \n        ['o'] = 'O', \n        ['u'] = 'U',\
    \ \n        ['y'] = 'Y', \n        ['h'] = 'H', \n        ['w'] = 'W', \n    \
    \    ['r'] = 'R', \n        ['s'] = 'S', \n        ['d'] = 'D', \n        ['c']\
    \ = 'C', \n        ['g'] = 'G', \n        ['m'] = 'M', \n        ['k'] = 'K',\
    \ \n        ['b'] = 'B', \n        ['p'] = 'P', \n        ['f'] = 'F', \n    \
    \    ['v'] = 'V', \n        ['y'] = 'Y', \n        ['x'] = 'X', \n        ['q']\
    \ = 'Q', \n        ['z'] = 'Z', \n        ['x'] = 'X', \n        ['q'] = 'Q',\
    \ \n        ['z'] = 'Z', \n        ['x'] = 'X', \n        ['q'] = 'Q', \n    \
    \    ['z'] = 'Z', \n        ['x'] = 'X', \n        ['q'] = 'Q', \n        ['z']\
    \ = 'Z', \n        ['x'] = 'X', \n        ['q'] = 'Q', \n        ['z'] = 'Z',\
    \ \n        ['x'] = 'X', \n        ['q'] = 'Q', \n        ['z'] = 'Z', \n    \
    \    ['x'] = 'X', \n        ['q'] = 'Q', \n        ['z'] = 'Z', \n        ['x']\
    \ = 'X', \n        ['q'] = 'Q', \n        ['z'] = 'Z', \n        ['x'] = 'X',\
    \ \n        ['q'] = 'Q', \n        ['z'] = 'Z', \n        ['x'] = 'X', \n    \
    \    ['q'] = 'Q', \n        ['z'] = 'Z', \n        ['x'] = 'X', \n        ['q']\
    \ = 'Q', \n        ['z'] = 'Z', \n        ['x'] = 'X', \n        ['q'] = 'Q',\
    \ \n        ['z'] = 'Z', \n        ['x'] = 'X', \n        ['q'] = 'Q', \n    \
    \    ['z'] = 'Z', \n        ['x'] = 'X', \n        ['q'] = 'Q', \n        ['z']\
    \ = 'Z', \n        ['x'] = 'X', \n        ['q'] = 'Q', \n        ['z'] = 'Z',\
    \ \n        ['x'] = 'X', \n        ['q'] = 'Q', \n        ['z'] = 'Z', \n    \
    \    ['x'] = 'X', \n        ['q'] = 'Q', \n        ['z'] = 'Z', \n        ['x']\
    \ = 'X', \n        ['q'] = 'Q', \n        ['z'] = 'Z', \n        ['x'] = 'X',\
    \ \n        ['q'] = 'Q', \n        ['z'] = 'Z', \n        ['x'] = 'X', \n    \
    \    ['q'] = 'Q', \n        ['z'] = 'Z', \n        ['x'] = 'X', \n        ['q']\
    \ = 'Q', \n        ['z'] = 'Z', \n        ['x'] = 'X', \n        ['q'] = '", " \
    \ local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local vowels = 'aeiou'\n  local\
    \ new_message = ''\n  for i = 1, #message do\n    local letter = message[i]\n\
    \    local vowel_index = alphabet == vowels and i or alphabet == letter and i\
    \ - 1 or -1\n    local new_letter = alphabet[vowel_index + 1]\n    new_message\
    \ = new_message .. new_letter\n  end\n  return new_message\nend", "  local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n  local vowels = 'aeiou'\n  local vowelsIndex\
    \ = {}\n  for i = 1, #vowels do\n    vowelsIndex[vowels[i]] = i\n  end\n  \n \
    \ local function swapCase(letter)\n    local index = alphabet.find(letter)\n \
    \   local upper = alphabet.sub(index, index+1)\n    local lower = alphabet.sub(index+1,\
    \ index+2)\n    return upper..lower\n  end\n  \n  local function replaceVowels(letter)\n\
    \    local index = vowelsIndex[letter]\n    local vowel = alphabet.sub(index,\
    \ index+1)\n    return alphabet.sub(index+1, index+2)..vowel\n  end\n  \n  local\
    \ function replaceVowels2(letter)\n    local index = vowelsIndex[letter]\n   \
    \ local vowel = alphabet.sub(index, index+1)\n    return alphabet.sub(index+1,\
    \ index+2)..vowel\n  end\n  \n  local function replaceVowels3(letter)\n    local\
    \ index = vowelsIndex[letter]\n    local vowel = alphabet.sub(index, index+1)\n\
    \    return alphabet.sub(index+1, index+2)..vowel\n  end\n  \n  local function\
    \ replaceVowels4(letter)\n    local index = vowelsIndex[letter]\n    local vowel\
    \ = alphabet.sub(index, index+1)\n    return alphabet.sub(index+1, index+2)..vowel\n\
    \  end\n  \n  local function replaceVowels5(letter)\n    local index = vowelsIndex[letter]\n\
    \    local vowel = alphabet.sub(index, index+1)\n    return alphabet.sub(index+1,\
    \ index+2)..vowel\n  end\n  \n  local function replaceVowels6(letter)\n    local\
    \ index = vowelsIndex[letter]\n    local vowel = alphabet.sub(index, index+1)\n\
    \    return alphabet.sub(index+1, index+2)..vowel\n  end\n  \n  local function\
    \ replaceVowels7(letter)\n    local index = vowelsIndex[letter]\n    local vowel\
    \ = alphabet.sub(index, index+1)\n    return alphabet.sub(index+1, index+2)..vowel\n\
    \  end\n  \n  local function replaceVowels8(letter)\n    local index = vowelsIndex[letter]\n\
    \    local vowel = alphabet.sub(index, index+1)\n    return alphabet.sub(index+1,\
    \ index+2)..vowel\n  end\n  \n  local function replaceVowels9(letter)\n    local ",
  "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local vowels = \"aeiou\"\
    \n    local output = ''\n    for i = 1, #message do\n        local letter = message[i]\n\
    \        local index = alphabet + vowels\n        local letterIndex = index:find(letter)\n\
    \        if letterIndex == nil then\n            letterIndex = alphabet + letter\n\
    \        end\n        local letter2 = alphabet:sub(letterIndex + 1, letterIndex\
    \ + 2)\n        local letter3 = alphabet:sub(letterIndex + 2, letterIndex + 3)\n\
    \        local letter4 = alphabet:sub(letterIndex + 3, letterIndex + 4)\n    \
    \    local letter5 = alphabet:sub(letterIndex + 4, letterIndex + 5)\n        local\
    \ letter6 = alphabet:sub(letterIndex + 5, letterIndex + 6)\n        local letter7\
    \ = alphabet:sub(letterIndex + 6, letterIndex + 7)\n        local letter8 = alphabet:sub(letterIndex\
    \ + 7, letterIndex + 8)\n        local letter9 = alphabet:sub(letterIndex + 8,\
    \ letterIndex + 9)\n        local letter10 = alphabet:sub(letterIndex + 9, letterIndex\
    \ + 10)\n        local letter11 = alphabet:sub(letterIndex + 10, letterIndex +\
    \ 11)\n        local letter12 = alphabet:sub(letterIndex + 11, letterIndex + 12)\n\
    \        local letter13 = alphabet:sub(letterIndex + 12, letterIndex + 13)\n \
    \       local letter14 = alphabet:sub(letterIndex + 13, letterIndex + 14)\n  \
    \      local letter15 = alphabet:sub(letterIndex + 14, letterIndex + 15)\n   \
    \     local letter16 = alphabet:sub(letterIndex + 15, letterIndex + 16)\n    \
    \    local letter17 = alphabet:sub(letterIndex + 16, letterIndex + 17)\n     \
    \   local letter18 = alphabet:sub(letterIndex + 17, letterIndex + 18)\n      \
    \  local letter19 = alphabet:sub(letterIndex + 18, letterIndex + 19)\n       \
    \ local letter20 = alphabet:sub(letterIndex + 19, letterIndex + 20)\n        local\
    \ letter21 = alphabet:sub(letterIndex + 20, letterIndex + 21)\n        local letter22\
    \ = alphabet:sub(letterIndex + 21, letterIndex + 22)\n        local letter23 =\
    \ alphabet:sub(letterIndex + 22, letterIndex + 23)\n        local letter24 = alphabet:sub(letterIndex\
    \ + 23, letterIndex + 24)\n        local letter25 = alphabet:sub(letterIndex +\
    \ 24, letterIndex + 25)\n        local letter26 = alphabet:sub(letterIndex + 25,\
    \ letterIndex + 26)\n        local letter27 = alphabet:sub(letterIndex + 26, letterIndex\
    \ + 27", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local vowels\
    \ = 'aeiou'\n    local output = ''\n    for i = 1, #message do\n        local\
    \ char = message[i]\n        local vowel = string.sub(alphabet, string.find(alphabet,\
    \ char) + 1, string.find(alphabet, char) + 1)\n        local replacement = string.sub(alphabet,\
    \ string.find(alphabet, vowel) + 1, string.find(alphabet, vowel) + 2)\n      \
    \  local newchar = string.sub(alphabet, string.find(alphabet, char) + 1, string.find(alphabet,\
    \ char) + 1)\n        output = output .. string.sub(vowels, 1, string.find(vowels,\
    \ char)) .. newchar .. replacement\n    end\n    return output\nend", "    local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local vowels = 'aeiou'\n    local\
    \ newMessage = ''\n    for i = 1, #message do\n        local letter = message[i]\n\
    \        if letter ~= ' ' then\n            local index = alphabet + alphabet:sub(1,\
    \ letter:len() - 1)\n            local letter2 = alphabet:sub((letter:len() +\
    \ 1), letter:len() + 2)\n            newMessage = newMessage .. index:sub(1, letter:len()\
    \ - 1) .. letter2\n        end\n    end\n    return newMessage\nend", "  -- Write\
    \ your code here\n  local vowels = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local alphabet\
    \ = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\
    \ 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  local vowel_positions\
    \ = {}\n  for i = 1, #message do\n    local letter = message[i]\n    local position\
    \ = alphabet.find(letter)\n    if position ~= nil then\n      vowel_positions[letter]\
    \ = position\n    end\n  end\n  local new_message = {}\n  for i = 1, #message\
    \ do\n    local letter = message[i]\n    local position = alphabet.find(letter)\n\
    \    if position ~= nil then\n      local new_letter = alphabet[position + 1]\n\
    \      new_message[i] = new_letter\n    end\n  end\n  local new_message_string\
    \ = table.concat(new_message, \" \")\n  for i = 1, #new_message_string do\n  \
    \  local letter = new_message_string[i]\n    if vowel_positions[letter] ~= nil\
    \ then\n      new_message_string[i] = alphabet[vowel_positions[letter]]\n    end\n\
    \  end\n  return new_message_string\nend", "    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local alphabet = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i',\
    \ 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y',\
    \ 'z'}\n    local alphabet2 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j',\
    \ 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n\
    \    local alphabet3 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n\
    \    local alphabet4 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n\
    \    local alphabet5 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n\
    \    local alphabet6 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n\
    \    local alphabet7 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n\
    \    local alphabet8 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n\
    \    local alphabet9 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n\
    \    local alphabet10 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n\
    \    local alphabet11 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n\
    \    local alphabet12 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n\
    \    local alphabet13 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local vowels = 'aeiou'\n\
    \  local output = ''\n  for i = 1, #message do\n    local char = message[i]\n\
    \    local vowel = string.sub(alphabet, string.find(alphabet, char) + 1, string.find(alphabet,\
    \ char) + 1)\n    local replacement = string.sub(alphabet, string.find(alphabet,\
    \ vowel) + 1, string.find(alphabet, vowel) + 2)\n    output = output .. string.sub(vowels,\
    \ 1, string.find(vowels, vowel) - 1) .. replacement .. char\n  end\n  return output\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local vowels = 'aeiou'\n\
    \    local output = ''\n    local vowelIndex = 1\n    for i = 1, #message do\n\
    \        local char = message[i]\n        if #alphabet > #vowels then\n      \
    \      local index = alphabet - vowelIndex\n            local nextVowelIndex =\
    \ alphabet - vowelIndex + 1\n            local nextVowel = alphabet[nextVowelIndex]\n\
    \            local nextChar = alphabet[index]\n            local nextIndex = alphabet\
    \ - index - 1\n            local nextChar2 = alphabet[nextIndex]\n           \
    \ local nextIndex2 = alphabet - index\n            local nextChar3 = alphabet[nextIndex2]\n\
    \            local nextIndex3 = alphabet - index - 1\n            local nextChar4\
    \ = alphabet[nextIndex3]\n            local nextIndex4 = alphabet - index\n  \
    \          local nextChar5 = alphabet[nextIndex4]\n            local nextIndex5\
    \ = alphabet - index\n            local nextChar6 = alphabet[nextIndex5]\n   \
    \         local nextIndex6 = alphabet - index\n            local nextChar7 = alphabet[nextIndex6]\n\
    \            local nextIndex7 = alphabet - index\n            local nextChar8\
    \ = alphabet[nextIndex7]\n            local nextIndex8 = alphabet - index\n  \
    \          local nextChar9 = alphabet[nextIndex8]\n            local nextIndex9\
    \ = alphabet - index\n            local nextChar10 = alphabet[nextIndex9]\n  \
    \          local nextIndex10 = alphabet - index\n            local nextChar11\
    \ = alphabet[nextIndex10]\n            local nextIndex11 = alphabet - index\n\
    \            local nextChar12 = alphabet[nextIndex11]\n            local nextIndex12\
    \ = alphabet - index\n            local nextChar13 = alphabet[nextIndex12]\n \
    \           local nextIndex13 = alphabet - index\n            local nextChar14\
    \ = alphabet[nextIndex13]\n            local nextIndex14 = alphabet - index\n\
    \            local nextChar15 = alphabet[nextIndex14]\n            local nextIndex15\
    \ = alphabet - index\n            local nextChar16 = alphabet[nextIndex15]\n \
    \           local nextIndex16 = alphabet - index\n            local nextChar17\
    \ = alphabet[nextIndex16]\n            local nextIndex17 = alphabet - index\n\
    \            local nextChar18 = alphabet[nextIndex17]\n            local nextIndex18\
    \ = alphabet - index\n            local nextChar19 = alphabet[nextIndex18]\n \
    \           local nextIndex19 = alphabet ", "  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u', 'y'}\n  local alphabet = {string.char(tonumber(string.sub(message,\
    \ i, i + 1)))\n    for i = 1, string.len(message) do \n      alphabet[i] = string.sub(message,\
    \ i, i + 1)\n    end }\n  local result = \"\"\n  for i = 1, string.len(message)\
    \ do\n    local letter = alphabet[i]\n    if letter in vowels then\n      letter\
    \ = string.sub(alphabet, i + 1, 1)\n      alphabet[i] = letter\n    end\n    result\
    \ = result .. letter\n  end\n  return result\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local vowels = 'aeiou'\n  local messageLetters = string.gsub(message, '%c',\
    \ function(letter)\n    local index = alphabet.find(letter)\n    if index == nil\
    \ then\n      return letter\n    end\n    local vowelIndex = alphabet.find(vowels,\
    \ index + 1)\n    if vowelIndex == nil then\n      return letter\n    end\n  \
    \  return alphabet[vowelIndex + 1]\n  end)\n  return messageLetters\nend", " \
    \ local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local vowels = 'aeiou'\n  local\
    \ result = message\n  local vowelIndex = 1\n  for i = 1, #message do\n    local\
    \ char = message[i]\n    local vowel = string.sub(alphabet, vowelIndex, vowelIndex\
    \ + #vowels)\n    local replacement = string.sub(alphabet, string.find(alphabet,\
    \ char) + 1, vowelIndex + #vowels)\n    vowelIndex = vowelIndex + #vowels + 1\n\
    \    result = string.gsub(result, vowel, replacement)\n  end\n  return result\n\
    end", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local vowels =\
    \ \"aeiou\"\n    local result = \"\"\n    local index = 1\n    for i = 1, #message\
    \ do\n        local char = message[i]\n        if #alphabet > index then\n   \
    \         local letter = alphabet[index]\n            index = index + 1\n    \
    \        if #vowels > index then\n                local vowel = vowels[index]\n\
    \                index = index + 1\n                local replacement = letter:sub(1,\
    \ #letter - #vowel) + vowel\n                result = result .. replacement\n\
    \            else\n                result = result .. letter\n            end\n\
    \        else\n            result = result .. char\n        end\n    end\n   \
    \ return result\nend", "  -- Write your code here\n  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n  local vowels = \"aeiou\"\n  local output = ''\n  for i = 1, #message do\n\
    \    local letter = message[i]\n    local vowel = letter:sub(1, 1)\n    local\
    \ position = alphabet:find(vowel)\n    local next_letter = alphabet:sub((position\
    \ + 1), (position + 2))\n    local new_letter = alphabet:find(next_letter)\n \
    \   local new_vowel = vowels:sub(new_letter, 1)\n    output = output .. new_vowel\n\
    \  end\n  return output\nend", "  -- Write your code here\n  local vowels = \"\
    aeiouAEIOU\"\n  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  local vowel_positions\
    \ = {}\n  for i = 1, #message do\n    local letter = message[i]\n    local position\
    \ = alphabet + letter\n    local vowel_position = vowels + letter\n    vowel_positions[letter]\
    \ = position\n    vowel_positions[vowel_position] = position\n  end\n  local new_message\
    \ = \"\"\n  for i = 1, #message do\n    local letter = message[i]\n    local position\
    \ = vowel_positions[letter]\n    local vowel_position = vowel_positions[vowels]\n\
    \    new_message = new_message .. position .. vowel_position\n  end\n  return\
    \ new_message\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  \
    \  local vowels = \"aeiou\"\n    local output = ''\n    for i = 1, #message do\n\
    \        local letter = message[i]\n        local vowel = letter:sub(1, 1)\n \
    \       local index = alphabet:find(vowel)\n        if index == nil then\n   \
    \         index = alphabet:find(vowel:sub(1, 1))\n        end\n        if index\
    \ == nil then\n            index = alphabet:find(vowel:sub(2, 1))\n        end\n\
    \        if index == nil then\n            index = alphabet:find(vowel:sub(3,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(vowel:sub(4,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(vowel:sub(5,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(vowel:sub(6,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(vowel:sub(7,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(vowel:sub(8,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(vowel:sub(9,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(vowel:sub(10,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(vowel:sub(11,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(vowel:sub(12,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(vowel:sub(13,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(vowel:sub(14,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(vowel:sub(15,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(vowel:sub(16,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(vowel:sub(17,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(vowel:sub(18,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(vowel:sub(19,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(vowel:sub(20,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(vowel:sub(21,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(vowel:sub(22,\
    \ 1))\n        end\n        if index == nil then\n            index = ", "  --\
    \ Write your code here\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local alphabet\
    \ = {string.lowercase, string.uppercase, string.digit}\n  local vowel_map = {string.lowercase,\
    \ string.uppercase, string.digit}\n  local new_message = ''\n  for i = 1, #message\
    \ do\n    local letter = message[i]\n    if letter:sub(1, 1) in vowels then\n\
    \      new_message = new_message .. letter:sub(1, 1) .. vowel_map[letter:sub(2,\
    \ 2)]\n    else\n      new_message = new_message .. letter:sub(1, 1) .. letter:sub(2,\
    \ 2)\n    end\n  end\n  return new_message\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local vowels = 'aeiou'\n  local result = ''\n  for i = 1, #message do\n   \
    \ local letter = message[i]\n    local index = alphabet + letter\n    local nextLetter\
    \ = alphabet:sub(i, i + 1)\n    local nextIndex = alphabet + nextLetter\n    if\
    \ nextIndex:sub(1, 1) == 'a' then\n      result = result .. alphabet:sub(i, i\
    \ + 1)\n    elseif nextIndex:sub(1, 1) == 'e' then\n      result = result .. alphabet:sub(i,\
    \ i + 1)\n    elseif nextIndex:sub(1, 1) == 'i' then\n      result = result ..\
    \ alphabet:sub(i, i + 1)\n    elseif nextIndex:sub(1, 1) == 'o' then\n      result\
    \ = result .. alphabet:sub(i, i + 1)\n    elseif nextIndex:sub(1, 1) == 'u' then\n\
    \      result = result .. alphabet:sub(i, i + 1)\n    elseif nextIndex:sub(1,\
    \ 1) == 'y' then\n      result = result .. alphabet:sub(i, i + 1)\n    elseif\
    \ nextIndex:sub(1, 1) == 'A' then\n      result = result .. alphabet:sub(i, i\
    \ + 1)\n    elseif nextIndex:sub(1, 1) == 'E' then\n      result = result .. alphabet:sub(i,\
    \ i + 1)\n    elseif nextIndex:sub(1, 1) == 'I' then\n      result = result ..\
    \ alphabet:sub(i, i + 1)\n    elseif nextIndex:sub(1, 1) == 'O' then\n      result\
    \ = result .. alphabet:sub(i, i + 1)\n    elseif nextIndex:sub(1, 1) == 'U' then\n\
    \      result = result .. alphabet:sub(i, i + 1)\n    elseif nextIndex:sub(1,\
    \ 1) == 'Y' then\n      result = result .. alphabet:sub(i, i + 1)\n    end\n \
    \ end\n  return result\nend", "  local vowels = {'a', 'e', 'i', 'o', 'u', 'A',\
    \ 'E', 'I', 'O', 'U'}\n  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local\
    \ result = ''\n  for i = 1, #message do\n    local letter = message[i]\n    local\
    \ index = alphabet + letter\n    local nextLetter = alphabet:sub(i, i + 1)\n \
    \   if nextLetter in vowels then\n      index = alphabet:sub(i, i + 2)\n    end\n\
    \    result = result .. index:sub(1, 1)\n  end\n  return result\nend", "  local\
    \ alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  local vowels = \"aeiou\"\n  local\
    \ result = \"\"\n  for i = 1, #message do\n    local char = message[i]\n    local\
    \ index = alphabet.find(char)\n    if index == nil then\n      result = result\
    \ .. char\n    else\n      local vowel = vowels[(index - 1) % (#vowels)]\n   \
    \   local next = alphabet[(index + 1) % (#alphabet)]\n      result = result ..\
    \ vowel .. next\n    end\n  end\n  return result\nend", "  local vowels = {'a',\
    \ 'e', 'i', 'o', 'u', 'y'}\n  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local output = ''\n  for i = 1, #message do\n    local letter = message[i]\n\
    \    local vowel = letter:sub(1, 1)\n    local index = alphabet:find(vowel)\n\
    \    if index == nil then\n      index = alphabet:find(letter)\n    end\n    if\
    \ index == nil then\n      index = alphabet:find(vowel:sub(1, 1))\n    end\n \
    \   if index == nil then\n      index = alphabet:find(letter:sub(1, 1))\n    end\n\
    \    if index == nil then\n      index = alphabet:find(vowel:sub(1, 1))\n    end\n\
    \    if index == nil then\n      index = alphabet:find(letter:sub(1, 1))\n   \
    \ end\n    if index == nil then\n      index = alphabet:find(vowel:sub(1, 1))\n\
    \    end\n    if index == nil then\n      index = alphabet:find(letter:sub(1,\
    \ 1))\n    end\n    if index == nil then\n      index = alphabet:find(vowel:sub(1,\
    \ 1))\n    end\n    if index == nil then\n      index = alphabet:find(letter:sub(1,\
    \ 1))\n    end\n    if index == nil then\n      index = alphabet:find(vowel:sub(1,\
    \ 1))\n    end\n    if index == nil then\n      index = alphabet:find(letter:sub(1,\
    \ 1))\n    end\n    if index == nil then\n      index = alphabet:find(vowel:sub(1,\
    \ 1))\n    end\n    if index == nil then\n      index = alphabet:find(letter:sub(1,\
    \ 1))\n    end\n    if index == nil then\n      index = alphabet:find(vowel:sub(1,\
    \ 1))\n    end\n    if index == nil then\n      index = alphabet:find(letter:sub(1,\
    \ 1))\n    end\n    if index == nil then\n      index = alphabet:find(vowel:sub(1,\
    \ 1))\n    end\n    if index == nil then\n      index = alphabet:find(letter:sub(1,\
    \ 1))\n    end\n    if index == nil then\n      index = alphabet:find(vowel:sub(1,\
    \ 1))\n    end\n    if index == nil then\n      index = alphabet:find(letter:sub(1,\
    \ 1))\n    end\n    if index == nil then\n      index = alphabet:find(vowel:sub(1,\
    \ 1))\n    end\n    if index == nil then\n      index = alphabet:find(letter:sub(1,\
    \ 1))\n    end\n    if index == nil then\n      index = alphabet:find(vowel:sub(1,\
    \ 1))\n    end\n    if index == nil ", "  -- Write your code here\n  local vowels\
    \ = {'a', 'e', 'i', 'o', 'u'}\n  local alphabet = {'a', 'b', 'c', 'd', 'e', 'f',\
    \ 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v',\
    \ 'w', 'x', 'y', 'z'}\n  local alphabet2 = {'a', 'b', 'c', 'd', 'e', 'f', 'g',\
    \ 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w',\
    \ 'x', 'y', 'z'}\n  local alphabet3 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h',\
    \ 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x',\
    \ 'y', 'z'}\n  local alphabet4 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i',\
    \ 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y',\
    \ 'z'}\n  local alphabet5 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j',\
    \ 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n\
    \  local alphabet6 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l',\
    \ 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  local\
    \ alphabet7 = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',\
    \ 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  local alphabet8\
    \ = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\
    \ 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  local alphabet9 =\
    \ {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\
    \ 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  local alphabet10 =\
    \ {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\
    \ 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  local alphabet11 =\
    \ {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\
    \ 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  local alphabet12 =\
    \ {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\
    \ 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  local alphabet13 =\
    \ {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h", "  -- Write your code here\n  local\
    \ vowels = \"aeiouAEIOU\"\n  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \  local new_message = \"\"\n  for i = 1, #message do\n    local letter = message[i]\n\
    \    local index = alphabet.find(letter)\n    if index == nil then\n      new_message\
    \ = new_message .. letter\n    else\n      local vowel_index = vowels.find(letter)\n\
    \      if vowel_index == nil then\n        new_message = new_message .. letter\n\
    \      else\n        local vowel_letter = alphabet[vowel_index + 1]\n        new_message\
    \ = new_message .. vowel_letter\n      end\n    end\n  end\n  return new_message\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local vowels = 'aeiou'\n\
    \    local messageLetters = {}\n    local messageVowels = {}\n    local messageLettersCount\
    \ = {}\n    local messageVowelsCount = {}\n    local messageLettersCountVowels\
    \ = {}\n    local messageVowelsCountVowels = {}\n    local messageLettersCountVowelsCount\
    \ = {}\n    local messageVowelsCountVowelsCount = {}\n    local messageLettersCountVowelsCountVowels\
    \ = {}\n    local messageVowelsCountVowelsCountVowels = {}\n    local messageLettersCountVowelsCountVowelsCount\
    \ = {}\n    local messageVowelsCountVowelsCountVowelsCount = {}\n    local messageLettersCountVowelsCountVowelsCountVowels\
    \ = {}\n    local messageVowelsCountVowelsCountVowelsCountVowels = {}\n    local\
    \ messageLettersCountVowelsCountVowelsCountVowelsCount = {}\n    local messageVowelsCountVowelsCountVowelsCountVowelsCount\
    \ = {}\n    local messageLettersCountVowelsCountVowelsCountVowelsCountVowels =\
    \ {}\n    local messageVowelsCountVowelsCountVowelsCountVowelsCountVowels = {}\n\
    \    local messageLettersCountVowelsCountVowelsCountVowelsCountVowelsCount = {}\n\
    \    local messageVowelsCountVowelsCountVowelsCountVowelsCountVowelsCount = {}\n\
    \    local messageLettersCountVowelsCountVowelsCountVowelsCountVowelsCountVowels\
    \ = {}\n    local messageVowelsCountVowelsCountVowelsCountVowelsCountVowelsCountVowels\
    \ = {}\n    local messageLettersCountVowelsCountVowelsCountVowelsCountVowelsCountVowelsCountVowels\
    \ = {}\n    local messageVowelsCountVowelsCountVowelsCountVowelsCountVowels",
  "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local vowels = 'aeiou'\n  local\
    \ output = ''\n  for i = 1, #message do\n    local char = message[i]\n    local\
    \ index = alphabet.find(char)\n    if index == nil then\n      output = '' --\
    \ Not a letter\n      break\n    end\n    local vowelIndex = alphabet.find(vowels,\
    \ index + 1)\n    if vowelIndex == nil then\n      output = '' -- Not a vowel\n\
    \      break\n    end\n    local nextVowelIndex = alphabet.find(vowels, index\
    \ + 1, vowelIndex + 1)\n    if nextVowelIndex == nil then\n      output = '' --\
    \ Not a vowel\n      break\n    end\n    local nextVowel = alphabet[nextVowelIndex]\n\
    \    local nextChar = alphabet[index]\n    output = output .. nextVowel .. nextChar\n\
    \  end\n  return output\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local vowels = 'aeiou'\n  local newMessage = ''\n  for i = 1, #message do\n\
    \    local letter = message[i]\n    local newLetter = letter\n    for j = 1, #alphabet\
    \ do\n      if alphabet[j] == letter then\n        newLetter = alphabet[(j - 1)\
    \ + #alphabet]\n      end\n    end\n    for j = 1, #vowels do\n      if vowels[j]\
    \ == letter then\n        newLetter = vowels[j + 1]\n      end\n    end\n    newMessage\
    \ = newMessage .. newLetter\n  end\n  return newMessage\nend", "  local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n  local vowels = 'aeiou'\n  local output = ''\n\
    \  for i = 1, #message do\n    local letter = message[i]\n    local index = alphabet\
    \ + alphabet:sub(1, i) + alphabet:sub(i+1, #alphabet)\n    local replacement =\
    \ alphabet:sub(i+1, #alphabet)\n    local vowelIndex = alphabet + vowels:sub(1,\
    \ i) + vowels:sub(i+1, #vowels)\n    local vowelReplacement = alphabet:sub(i+1,\
    \ #alphabet)\n    if letter ~= letter then\n      letter = letter:lower()\n  \
    \  end\n    if letter:find(vowels) then\n      letter = letter:sub(1, letter:find(vowels))\
    \ + vowelIndex\n      replacement = vowelReplacement\n    end\n    letter = letter:lower()\n\
    \    output = output .. alphabet:sub(1, index) .. letter .. replacement\n  end\n\
    \  return output\nend", "  -- Write your code here\n  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local vowels = 'aeiou'\n  local new_message = ''\n  for i = 1, #message do\n\
    \    local letter = message[i]\n    if letter:lower() ~= letter then\n      new_message\
    \ = new_message .. letter\n    else\n      local index = alphabet + letter\n \
    \     local letter_index = alphabet + letter:lower()\n      local vowel_index\
    \ = vowels + letter:lower()\n      local new_letter = alphabet:sub(1, index) ..\
    \ letter:sub((index+1):len())\n      new_message = new_message .. new_letter\n\
    \      new_message = new_message .. alphabet:sub(1, vowel_index) .. letter:sub((vowel_index+1):len())\n\
    \    end\n  end\n  return new_message\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local vowels = 'aeiou'\n  local output = ''\n  for i = 1, #message do\n   \
    \ local letter = message[i]\n    local vowel = letter:sub(1, 1)\n    local index\
    \ = alphabet:find(vowel)\n    local letter2 = alphabet:sub(1, index + 1)\n   \
    \ local letter3 = alphabet:sub((index + 1), #alphabet)\n    output = output ..\
    \ letter2 .. letter3 .. letter\n  end\n  return output\nend", "    local alphabet\
    \ = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    local vowels = \"AEIOU\"\n    local output\
    \ = ''\n    for i = 1, #message do\n        local letter = message[i]\n      \
    \  local vowel = letter:sub(1, 1)\n        local index = alphabet:find(vowel)\n\
    \        if index == nil then\n            index = alphabet:find(letter)\n   \
    \     end\n        if index == nil then\n            index = alphabet:find(vowel:sub(1,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(letter:sub(1,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(vowel:sub(1,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(letter:sub(1,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(vowel:sub(1,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(letter:sub(1,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(vowel:sub(1,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(letter:sub(1,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(vowel:sub(1,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(letter:sub(1,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(vowel:sub(1,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(letter:sub(1,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(vowel:sub(1,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(letter:sub(1,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(vowel:sub(1,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(letter:sub(1,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(vowel:sub(1,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(letter:sub(1,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(vowel:sub(1,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(letter:sub(1,\
    \ 1))\n        end\n        if index == nil then\n            index = alphabet:find(vowel:sub(1,\
    \ 1))\n        end\n        if index == nil then\n            index = ", "  local\
    \ alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  local vowels = \"aeiou\"\n  local\
    \ result = \"\"\n  for i = 1, #message do\n    local char = message[i]\n    local\
    \ index = alphabet.find(char)\n    if index == nil then\n      result = result\
    \ .. char\n    else\n      local vowel = vowels:sub(1, index)\n      local vowelIndex\
    \ = alphabet.find(vowel)\n      local nextVowelIndex = alphabet.find(vowel, index\
    \ + 1)\n      if vowelIndex == nil then\n        result = result .. vowel\n  \
    \    elseif nextVowelIndex == nil then\n        result = result .. vowel:sub(1,\
    \ vowelIndex - 1)\n      else\n        result = result .. vowel:sub(1, vowelIndex\
    \ - 1) .. vowel:sub(vowelIndex + 1, nextVowelIndex)\n      end\n    end\n  end\n\
    \  return result\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    local vowels = \"aeiou\"\n    local result = \"\"\n    for i = 1, #message\
    \ do\n        local letter = message[i]\n        if letter ~= nil then\n     \
    \       local index = alphabet + alphabet:sub(i + 1, i + 2)\n            local\
    \ replacement = index:sub(1, 1)\n            local replacementIndex = alphabet\
    \ + alphabet:sub(i + 2, i + 3)\n            local replacement2 = alphabet:sub(replacementIndex,\
    \ 1)\n            local replacement3 = alphabet:sub(replacementIndex + 1, 1)\n\
    \            local replacement4 = alphabet:sub(replacementIndex + 2, 1)\n    \
    \        local replacement5 = alphabet:sub(replacementIndex + 3, 1)\n        \
    \    local replacement6 = alphabet:sub(replacementIndex + 4, 1)\n            local\
    \ replacement7 = alphabet:sub(replacementIndex + 5, 1)\n            local replacement8\
    \ = alphabet:sub(replacementIndex + 6, 1)\n            local replacement9 = alphabet:sub(replacementIndex\
    \ + 7, 1)\n            local replacement10 = alphabet:sub(replacementIndex + 8,\
    \ 1)\n            local replacement11 = alphabet:sub(replacementIndex + 9, 1)\n\
    \            local replacement12 = alphabet:sub(replacementIndex + 10, 1)\n  \
    \          local replacement13 = alphabet:sub(replacementIndex + 11, 1)\n    \
    \        local replacement14 = alphabet:sub(replacementIndex + 12, 1)\n      \
    \      local replacement15 = alphabet:sub(replacementIndex + 13, 1)\n        \
    \    local replacement16 = alphabet:sub(replacementIndex + 14, 1)\n          \
    \  local replacement17 = alphabet:sub(replacementIndex + 15, 1)\n            local\
    \ replacement18 = alphabet:sub(replacementIndex + 16, 1)\n            local replacement19\
    \ = alphabet:sub(replacementIndex + 17, 1)\n            local replacement20 =\
    \ alphabet:sub(replacementIndex + 18, 1)\n            local replacement21 = alphabet:sub(replacementIndex\
    \ + 19, 1)\n            local replacement22 = alphabet:sub(replacementIndex +\
    \ 20, 1)\n            local replacement23 = alphabet:sub(replacementIndex + 21,\
    \ 1)\n            local replacement24 = alphabet:sub(replacementIndex + 22, 1)\n\
    \            local replacement25 = alphabet:sub(replacementIndex + 23, 1)\n  \
    \          local replacement26 = alphabet:sub(replacementIndex + 24, 1)\n    \
    \        local replacement27 = alphabet:sub(replacementIndex + 25, 1)\n      \
    \      local replacement28 = alphabet:sub(replacementIndex + 26, 1)\n        \
    \    local replacement29 = alphabet:sub(replacementIndex + 27, 1)\n          \
    \  local replacement30 = alphabet:sub(replacementIndex + 28, 1)\n            local\
    \ replacement31 = alphabet:sub(replacementIndex + 29, 1)\n            local replacement32\
    \ = alphabet:sub(replacementIndex + 30, 1)\n            ", "  local alphabet =\
    \ 'abcdefghijklmnopqrstuvwxyz'\n  local vowels = 'aeiou'\n  local newMessage =\
    \ ''\n  local vowelIndex = 1\n  for i = 1, #message do\n    local currentChar\
    \ = message[i]\n    local currentCharIndex = alphabet:find(currentChar)\n    if\
    \ currentCharIndex > 0 then\n      local nextChar = alphabet:sub(currentCharIndex\
    \ + 1, currentCharIndex + 2)\n      newMessage = newMessage .. alphabet:sub(vowelIndex,\
    \ vowelIndex + 1) .. nextChar\n      vowelIndex = vowelIndex + 2\n    end\n  end\n\
    \  return newMessage\nend", "  -- Write your code here\n  local vowels = {'a',\
    \ 'e', 'i', 'o', 'u'}\n  local alphabet = {'a', 'b', 'c', 'd', 'e', 'f', 'g',\
    \ 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w',\
    \ 'x', 'y', 'z'}\n  local messageLetters = {}\n  for i = 1, #message do\n    local\
    \ letter = message[i]\n    local vowel = letter:sub(1, 1)\n    local letterIndex\
    \ = alphabet + vowel\n    local letterIndex2 = alphabet + vowel:sub(2, 1)\n  \
    \  local letterIndex3 = alphabet + vowel:sub(3, 1)\n    local letterIndex4 = alphabet\
    \ + vowel:sub(4, 1)\n    local letterIndex5 = alphabet + vowel:sub(5, 1)\n   \
    \ local letterIndex6 = alphabet + vowel:sub(6, 1)\n    local letterIndex7 = alphabet\
    \ + vowel:sub(7, 1)\n    local letterIndex8 = alphabet + vowel:sub(8, 1)\n   \
    \ local letterIndex9 = alphabet + vowel:sub(9, 1)\n    local letterIndex10 = alphabet\
    \ + vowel:sub(10, 1)\n    local letterIndex11 = alphabet + vowel:sub(11, 1)\n\
    \    local letterIndex12 = alphabet + vowel:sub(12, 1)\n    local letterIndex13\
    \ = alphabet + vowel:sub(13, 1)\n    local letterIndex14 = alphabet + vowel:sub(14,\
    \ 1)\n    local letterIndex15 = alphabet + vowel:sub(15, 1)\n    local letterIndex16\
    \ = alphabet + vowel:sub(16, 1)\n    local letterIndex17 = alphabet + vowel:sub(17,\
    \ 1)\n    local letterIndex18 = alphabet + vowel:sub(18, 1)\n    local letterIndex19\
    \ = alphabet + vowel:sub(19, 1)\n    local letterIndex20 = alphabet + vowel:sub(20,\
    \ 1)\n    local letterIndex21 = alphabet + vowel:sub(21, 1)\n    local letterIndex22\
    \ = alphabet + vowel:sub(22, 1)\n    local letterIndex23 = alphabet + vowel:sub(23,\
    \ 1)\n    local letterIndex24 = alphabet + vowel:sub(24, 1)\n    local letterIndex25\
    \ = alphabet + vowel:sub(25, 1)\n    local letterIndex26 = alphabet + vowel:sub(26,\
    \ 1)\n    local letterIndex27 = alphabet + vowel:sub(27, 1)\n    local letterIndex28\
    \ = alphabet + vowel:sub(28, 1)\n    local letterIndex29 = alphabet + vowel:sub(29,\
    \ 1)\n    local letterIndex30 = ", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    local vowels = \"aeiou\"\n    local result = ''\n    for i = 1, #message\
    \ do\n        local letter = message[i]\n        local index = alphabet and alphabet:find(letter)\
    \ or nil\n        if index then\n            local vowel = vowels:sub(index, index\
    \ + 1)\n            local next = alphabet:sub(index + 1, index + 2)\n        \
    \    local newLetter = alphabet:sub(index + 2, index + 3)\n            local newLetter2\
    \ = alphabet:sub(index + 3, index + 4)\n            local newLetter3 = alphabet:sub(index\
    \ + 4, index + 5)\n            local newLetter4 = alphabet:sub(index + 5, index\
    \ + 6)\n            local newLetter5 = alphabet:sub(index + 6, index + 7)\n  \
    \          local newLetter6 = alphabet:sub(index + 7, index + 8)\n           \
    \ local newLetter7 = alphabet:sub(index + 8, index + 9)\n            local newLetter8\
    \ = alphabet:sub(index + 9, index + 10)\n            local newLetter9 = alphabet:sub(index\
    \ + 10, index + 11)\n            local newLetter10 = alphabet:sub(index + 11,\
    \ index + 12)\n            local newLetter11 = alphabet:sub(index + 12, index\
    \ + 13)\n            local newLetter12 = alphabet:sub(index + 13, index + 14)\n\
    \            local newLetter13 = alphabet:sub(index + 14, index + 15)\n      \
    \      local newLetter14 = alphabet:sub(index + 15, index + 16)\n            local\
    \ newLetter15 = alphabet:sub(index + 16, index + 17)\n            local newLetter16\
    \ = alphabet:sub(index + 17, index + 18)\n            local newLetter17 = alphabet:sub(index\
    \ + 18, index + 19)\n            local newLetter18 = alphabet:sub(index + 19,\
    \ index + 20)\n            local newLetter19 = alphabet:sub(index + 20, index\
    \ + 21)\n            local newLetter20 = alphabet:sub(index + 21, index + 22)\n\
    \            local newLetter21 = alphabet:sub(index + 22, index + 23)\n      \
    \      local newLetter22 = alphabet:sub(index + 23, index + 24)\n            local\
    \ newLetter23 = alphabet:sub(index + 24, index + 25)\n            local newLetter24\
    \ = alphabet:sub(index + 25, index + 26)\n            local newLetter25 = alphabet:sub(index\
    \ + 26, index + 27)\n            local newLetter26 = alphabet:sub(index + 27,\
    \ index + 28)\n            local newLetter27 = alphabet:sub(index + 28, index\
    \ + 29)\n            local newLetter28 = alphabet:sub(index + 29, index + 30)\n\
    \            local newLetter29 = alphabet:sub(index + 30, index + 31)\n      \
    \      local newLetter30 = alphabet:sub(index + 31, index + 32)\n            local\
    \ newLetter31 = alphabet:sub(index + 32, index + 33)", "  local alphabet = {\n\
    \    ['A'] = 'a',\n    ['B'] = 'b',\n    ['C'] = 'c',\n    ['D'] = 'd',\n    ['E']\
    \ = 'e',\n    ['F'] = 'f',\n    ['G'] = 'g',\n    ['H'] = 'h',\n    ['I'] = 'i',\n\
    \    ['J'] = 'j',\n    ['K'] = 'k',\n    ['L'] = 'l',\n    ['M'] = 'm',\n    ['N']\
    \ = 'n',\n    ['O'] = 'o',\n    ['P'] = 'p',\n    ['Q'] = 'q',\n    ['R'] = 'r',\n\
    \    ['S'] = 's',\n    ['T'] = 't',\n    ['U'] = 'u',\n    ['V'] = 'v',\n    ['W']\
    \ = 'w',\n    ['X'] = 'x',\n    ['Y'] = 'y',\n    ['Z'] = 'z',\n    ['a'] = 'A',\n\
    \    ['b'] = 'B',\n    ['c'] = 'C',\n    ['d'] = 'D',\n    ['e'] = 'E',\n    ['f']\
    \ = 'F',\n    ['g'] = 'G',\n    ['h'] = 'H',\n    ['i'] = 'I',\n    ['j'] = 'J',\n\
    \    ['k'] = 'K',\n    ['l'] = 'L',\n    ['m'] = 'M',\n    ['n'] = 'N',\n    ['o']\
    \ = 'O',\n    ['p'] = 'P',\n    ['q'] = 'Q',\n    ['r'] = 'R',\n    ['s'] = 'S',\n\
    \    ['t'] = 'T',\n    ['u'] = 'U',\n    ['v'] = 'V',\n    ['w'] = 'W',\n    ['x']\
    \ = 'X',\n    ['y'] = 'Y',\n    ['z'] = 'Z',\n    [' '] = '_',\n    ['!'] = '!',\n\
    \    ['?'] = '?',\n    ['('] = '(',\n    [')'] = ')',\n    ['-'] = '-',\n    ['.']\
    \ = '.',\n    ['/'] = '/',\n    ['\\\\'] = '\\\\',\n    ['|'] = '|',\n    ['@']\
    \ = '@',\n    ['$'] = '$',\n    ['%'] = '%',\n    ['^'] = '^',\n    ['&'] = '&',\n\
    \    ['*'] = '*',\n    ['('] = '(',\n    [')'] = ')',\n    ['+'] = '+',\n    ['=']\
    \ = '=',\n    ['{'] = '{',\n    ['}'] = '}',\n    ['['] = '[',\n    [']'] = ']',\n\
    \    ['~'] = '~',\n    ['?'] = '?',\n    [':'] = ':',\n    [';'] = ';',\n    [':']\
    \ = ':',\n    ['<'] = '<',\n    ['>'] = '>',\n    ['?'] = '?',\n    ['/'] = '/',\n\
    \    ['\\\\'] = '\\\\',\n    ['|'] = '|',\n    ['\"'] = '\"',\n    [' '] = '_',\n\
    \    ['!'] = '!',\n    ['", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local vowels = 'aeiou'\n    local output = ''\n    local vowel_counter =\
    \ 0\n    for i = 1, #message do\n        local letter = message[i]\n        if\
    \ letter:lower() == letter then\n            letter = alphabet[vowel_counter]\n\
    \        end\n        local vowel_index = alphabet:find(vowels, letter)\n    \
    \    if vowel_index ~= nil then\n            local vowel_letter = alphabet[vowel_index\
    \ + 1]\n            local vowel_letter_index = alphabet:find(vowels, vowel_letter)\n\
    \            if vowel_letter_index ~= nil then\n                local vowel_letter_2\
    \ = alphabet[vowel_letter_index + 1]\n                local new_letter = alphabet:sub(1,\
    \ vowel_letter_index - 1)\n                local new_letter_2 = alphabet:sub(1,\
    \ vowel_letter_2 - 1)\n                local new_letter_3 = alphabet:sub(1, vowel_letter_index\
    \ - 1)\n                local new_letter_4 = alphabet:sub(1, vowel_letter_2 -\
    \ 1)\n                local new_letter_5 = alphabet:sub(1, vowel_letter_index\
    \ - 1)\n                local new_letter_6 = alphabet:sub(1, vowel_letter_2 -\
    \ 1)\n                local new_letter_7 = alphabet:sub(1, vowel_letter_index\
    \ - 1)\n                local new_letter_8 = alphabet:sub(1, vowel_letter_2 -\
    \ 1)\n                local new_letter_9 = alphabet:sub(1, vowel_letter_index\
    \ - 1)\n                local new_letter_10 = alphabet:sub(1, vowel_letter_2 -\
    \ 1)\n                local new_letter_11 = alphabet:sub(1, vowel_letter_index\
    \ - 1)\n                local new_letter_12 = alphabet:sub(1, vowel_letter_2 -\
    \ 1)\n                local new_letter_13 = alphabet:sub(1, vowel_letter_index\
    \ - 1)\n                local new_letter_14 = alphabet:sub(1, vowel_letter_2 -\
    \ 1)\n                local new_letter_15 = alphabet:sub(1, vowel_letter_index\
    \ - 1)\n                local new_letter_16 = alphabet:sub(1, vowel_letter_2 -\
    \ 1)\n                local new_letter_17 = alphabet:sub(1, vowel_letter_index\
    \ - 1)\n                local new_letter_18 = alphabet:sub(1, vowel_letter_2 -\
    \ 1)\n                local new_letter_19 = alphabet:sub(1, vowel_letter_index\
    \ - 1)\n                local new_letter_20 = alphabet:sub(1, vowel_letter_2 -\
    \ 1)\n                local new_letter_21 = alphabet:sub(1, vowel_letter_index\
    \ - 1)\n                local new_letter_22 = alphabet:sub(1, vowel_letter_2 -\
    \ 1)\n                local new_letter_23 = alphabet:sub(1, vowel_letter_index\
    \ - 1)\n                local new_letter_24 = alphabet:sub(1, ", "  local vowels\
    \ = {'a', 'e', 'i', 'o', 'u', 'y'}\n  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local result = {}\n  for i = 1, #message do\n    local letter = message[i]\n\
    \    local pos = alphabet + alphabet:sub(1, #alphabet) + alphabet:sub(2, #alphabet)\n\
    \    local replacement = alphabet:sub((alphabet + letter):sub(1, #letter) + 1,\
    \ #letter)\n    for j = 1, #pos do\n      if vowels[letter] == pos[j] then\n \
    \       result[i] = letter\n        break\n      end\n    end\n  end\n  return\
    \ table.concat(result, '') \nend", "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n  local vowels = \"aeiou\"\n  local messageWithVowels = message\n  local vowelIndex\
    \ = 1\n  local messageWithVowelsWithoutVowels = message\n  local vowelIndexWithVowels\
    \ = 1\n  local vowelIndexWithVowelsWithoutVowels = 1\n  local newMessage = \"\"\
    \n  local newMessageWithVowels = \"\"\n  local newMessageWithVowelsWithoutVowels\
    \ = \"\"\n  for i = 1, #message do\n    local letter = message[i]\n    if letter\
    \ == letter then\n      newMessage = newMessage .. letter\n    elseif letter ==\
    \ vowels[vowelIndex] then\n      newMessageWithVowels = newMessageWithVowels ..\
    \ letter\n      vowelIndex = vowelIndex + 1\n    elseif letter == vowels[vowelIndexWithVowels]\
    \ then\n      newMessageWithVowelsWithoutVowels = newMessageWithVowelsWithoutVowels\
    \ .. letter\n      vowelIndexWithVowels = vowelIndexWithVowels + 1\n    elseif\
    \ letter == vowels[vowelIndexWithVowelsWithoutVowels] then\n      newMessageWithVowelsWithoutVowels\
    \ = newMessageWithVowelsWithoutVowels .. letter\n      vowelIndexWithVowelsWithoutVowels\
    \ = vowelIndexWithVowelsWithoutVowels + 1\n    end\n  end\n  return newMessage\n\
    end", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local vowels =\
    \ \"aeiou\"\n    local output = ''\n    for i = 1, #message do\n        local\
    \ letter = message[i]\n        local index = alphabet and alphabet:find(letter)\n\
    \        if index then\n            local vowel = vowels:sub(index, index + 1)\n\
    \            local letter2 = alphabet:sub(index + 2, index + 3)\n            local\
    \ letter3 = alphabet:sub(index + 4, index + 5)\n            local letter4 = alphabet:sub(index\
    \ + 6, index + 7)\n            local letter5 = alphabet:sub(index + 8, index +\
    \ 9)\n            local letter6 = alphabet:sub(index + 10, index + 11)\n     \
    \       local letter7 = alphabet:sub(index + 12, index + 13)\n            local\
    \ letter8 = alphabet:sub(index + 14, index + 15)\n            local letter9 =\
    \ alphabet:sub(index + 16, index + 17)\n            local letter10 = alphabet:sub(index\
    \ + 18, index + 19)\n            local letter11 = alphabet:sub(index + 20, index\
    \ + 21)\n            local letter12 = alphabet:sub(index + 22, index + 23)\n \
    \           local letter13 = alphabet:sub(index + 24, index + 25)\n          \
    \  local letter14 = alphabet:sub(index + 26, index + 27)\n            local letter15\
    \ = alphabet:sub(index + 28, index + 29)\n            local letter16 = alphabet:sub(index\
    \ + 30, index + 31)\n            local letter17 = alphabet:sub(index + 32, index\
    \ + 33)\n            local letter18 = alphabet:sub(index + 34, index + 35)\n \
    \           local letter19 = alphabet:sub(index + 36, index + 37)\n          \
    \  local letter20 = alphabet:sub(index + 38, index + 39)\n            local letter21\
    \ = alphabet:sub(index + 40, index + 41)\n            local letter22 = alphabet:sub(index\
    \ + 42, index + 43)\n            local letter23 = alphabet:sub(index + 44, index\
    \ + 45)\n            local letter24 = alphabet:sub(index + 46, index + 47)\n \
    \           local letter25 = alphabet:sub(index + 48, index + 49)\n          \
    \  local letter26 = alphabet:sub(index + 50, index + 51)\n            local letter27\
    \ = alphabet:sub(index + 52, index + 53)\n            local letter28 = alphabet:sub(index\
    \ + 54, index + 55)\n            local letter29 = alphabet:sub(index + 56, index\
    \ + 57)\n            local letter30 = alphabet:sub(index + 58, index + 59)\n \
    \           local letter31 = alphabet:sub(index + 60, index + 61)\n          \
    \  local letter32 = alphabet:sub(index + 62, index + 63)\n            local letter33\
    \ = alphabet:sub(index + 64, index + 65)\n            local letter34 = alphabet:sub(index\
    \ + 66, index + ", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local\
    \ vowels = 'aeiou'\n    local output = ''\n    local index = 1\n    for i = 1,\
    \ #message do\n        local char = message[i]\n        if char in vowels then\n\
    \            local nextVowel = alphabet:sub((index - 2), index)\n            local\
    \ nextChar = alphabet:sub((index), index)\n            output = output .. nextVowel\
    \ .. nextChar\n            index = index + 1\n        else\n            output\
    \ = output .. char\n        end\n    end\n    return output\nend", "    local\
    \ alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    local vowels = \"aeiou\"\n  \
    \  local output = ''\n    for i = 1, #message do\n        local letter = message[i]\n\
    \        if letter:lower() == letter then\n            letter = alphabet[alphabet\
    \ + alphabet + letter]\n        end\n        local vowel = vowels:find(letter)\n\
    \        if vowel ~= nil then\n            letter = alphabet[alphabet + alphabet\
    \ + vowel + 1]\n        end\n        output = output .. letter\n    end\n    return\
    \ output\nend", "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  local vowels\
    \ = \"aeiou\"\n  local output = ''\n  for i = 1, #message do\n    local char =\
    \ message[i]\n    local index = alphabet.find(char)\n    if index == nil then\n\
    \      output = output .. char\n    else\n      local vowel = vowels[index]\n\
    \      local vowelIndex = alphabet.find(vowel)\n      local vowel2 = alphabet[vowelIndex\
    \ + 1]\n      output = output .. vowel\n      output = output .. vowel2\n    end\n\
    \  end\n  return output\nend", "  local vowels = {'a', 'e', 'i', 'o', 'u'}\n \
    \ local alphabet = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l',\
    \ 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  local\
    \ vowel_positions = {}\n  local new_message = ''\n  for i = 1, #message do\n \
    \   local letter = message[i]\n    local position = alphabet.find(letter)\n  \
    \  if position ~= nil then\n      local vowel_position = vowel_positions[letter]\n\
    \      if vowel_position == nil then\n        vowel_positions[letter] = position\n\
    \      else\n        vowel_positions[letter] = position + 1\n      end\n    end\n\
    \  end\n  for i = 1, #message do\n    local letter = message[i]\n    local position\
    \ = alphabet.find(letter)\n    if position ~= nil then\n      local vowel_position\
    \ = vowel_positions[letter]\n      if vowel_position == nil then\n        new_message\
    \ = new_message .. letter\n      else\n        local vowel = vowels[vowel_position]\n\
    \        new_message = new_message .. vowel\n      end\n    end\n  end\n  return\
    \ new_message\nend", "    local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  \
    \  local vowels = \"aeiou\"\n    local output = ''\n    for i = 1, #message do\n\
    \        local letter = message[i]\n        local index = alphabet + vowels\n\
    \        local letterIndex = alphabet:find(letter)\n        if letterIndex ==\
    \ nil then\n            letterIndex = alphabet:find(letter:lower())\n        end\n\
    \        if letterIndex == nil then\n            letterIndex = alphabet:find(letter:upper())\n\
    \        end\n        if letterIndex == nil then\n            letterIndex = alphabet:find(letter:capitalize())\n\
    \        end\n        if letterIndex == nil then\n            letterIndex = alphabet:find(letter:reverse())\n\
    \        end\n        if letterIndex == nil then\n            letterIndex = alphabet:find(letter:reverse():lower())\n\
    \        end\n        if letterIndex == nil then\n            letterIndex = alphabet:find(letter:reverse():upper())\n\
    \        end\n        if letterIndex == nil then\n            letterIndex = alphabet:find(letter:reverse():capitalize())\n\
    \        end\n        if letterIndex == nil then\n            letterIndex = alphabet:find(letter:reverse():reverse())\n\
    \        end\n        if letterIndex == nil then\n            letterIndex = alphabet:find(letter:reverse():reverse():lower())\n\
    \        end\n        if letterIndex == nil then\n            letterIndex = alphabet:find(letter:reverse():reverse():upper())\n\
    \        end\n        if letterIndex == nil then\n            letterIndex = alphabet:find(letter:reverse():reverse():capitalize())\n\
    \        end\n        if letterIndex == nil then\n            letterIndex = alphabet:find(letter:reverse():reverse():reverse())\n\
    \        end\n        if letterIndex == nil then\n            letterIndex = alphabet:find(letter:reverse():reverse():reverse():lower())\n\
    \        end\n        if letterIndex == nil then\n            letterIndex = alphabet:find(letter:reverse():reverse():reverse():upper())\n\
    \        end\n        if letterIndex == nil then\n            letterIndex = alphabet:find(letter:reverse():reverse():reverse():capitalize())\n\
    \        end\n        if letterIndex == nil then\n            letterIndex = alphabet:find(letter:reverse():reverse():reverse():reverse())\n\
    \        end\n        if letterIndex == nil then\n            letterIndex = alphabet:find(letter:reverse():reverse():reverse():reverse():lower())\n\
    \        end\n        if letterIndex == nil then\n            letterIndex = alphabet:find(letter:reverse():reverse():reverse():reverse():upper())\n\
    \        end\n        if letterIndex == nil then\n            letterIndex = alphabet",
  "  local alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  local vowels = \"aeiou\"\n\
    \  local result = \"\"\n  for i = 1, #message do\n    local char = message[i]\n\
    \    local index = alphabet.find(char)\n    if index == nil then\n      result\
    \ = result .. char\n    else\n      local vowel = vowels[index]\n      local vowelIndex\
    \ = alphabet.find(vowel)\n      local nextVowelIndex = index + vowelIndex\n  \
    \    local nextVowel = alphabet[nextVowelIndex]\n      result = result .. vowel\n\
    \      result = result .. nextVowel\n    end\n  end\n  return result\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_83_starts_one_ends
language: lua
prompt: "-- Given a positive integer n, return the count of the numbers of n-digit\n\
  -- positive integers that start or end with 1.\nlocal function starts_one_ends(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = starts_one_ends\n\
  \    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(2), 18)\n \
  \   lu.assertEquals(candidate(3), 180)\n    lu.assertEquals(candidate(4), 1800)\n\
  \    lu.assertEquals(candidate(5), 18000)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local count = 0\n  for i = 1, n do\n    if i ~= 1 and i ~= n then\n\
    \      if i % 10 == 1 then\n        count = count + 1\n      end\n    end\n  end\n\
    \  return count\nend", "  local count = 0\n  for i = 1, n do\n    if i ~= 1 then\n\
    \      if i % 10 == 1 then\n        count = count + 1\n      end\n    end\n  end\n\
    \  return count\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n\
    \    if i ~= n and i % 10 == 1 then\n      count = count + 1\n    end\n    i =\
    \ i + 1\n  end\n  return count\nend", "  local count = 0\n  for i = 1, n do\n\
    \    if i ~= 1 and i ~= n then\n      count = count + 1\n    end\n  end\n  return\
    \ count\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n    if i\
    \ ~= 1 then\n      if i % 10 == 1 then\n        count = count + 1\n      end\n\
    \    end\n    i = i + 1\n  end\n  return count\nend", "  local count = 0\n  for\
    \ i = 1, n do\n    if i ~= 1 then\n      count = count + 1\n    end\n    if i\
    \ ~= n then\n      count = count + 1\n    end\n  end\n  return count\nend", " \
    \ local count = 0\n  for i = 1, n do\n    if i ~= 1 then\n      count = count\
    \ + 1\n    end\n    if i ~= n then\n      count = count + 1\n    end\n  end\n\
    \  return count\nend", "  local count = 0\n  for i = 1, n do\n    if i ~= 1 and\
    \ i ~= n then\n      if math.floor(i) == i then\n        count = count + 1\n \
    \     end\n    end\n  end\n  return count\nend", "  local count = 0\n  local i\
    \ = 1\n  while i <= n do\n    if i % 10 == 1 then\n      count = count + 1\n \
    \   end\n    i = i + 1\n  end\n  return count\nend", "  if n < 0 then\n    return\
    \ 0\n  end\n  local count = 0\n  local i = 1\n  while i <= n do\n    if i ~= 1\
    \ then\n      count = count + 1\n    end\n    i = i * 10\n  end\n  return count\n\
    end", "  if n < 0 then\n    return 0\n  end\n  local count = 0\n  for i = 1, n\
    \ do\n    if i ~= 1 then\n      count = count + 1\n    end\n    if i ~= n then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend", "  if n < 0 then\n\
    \    return 0\n  end\n  local count = 0\n  for i = 1, n do\n    if i % 10 == 1\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend", "  local\
    \ count = 0\n  for i = 1, n do\n    if i ~= 1 and i ~= n then\n      if math.floor(i)\
    \ == i then\n        count = count + 1\n      end\n    end\n  end\n  return count\n\
    end", "  if n < 0 then\n    return 0\n  end\n  local count = 0\n  local i = 1\n\
    \  while i <= n do\n    if i ~= 1 and i ~= n then\n      if i % 10 == 1 then\n\
    \        count = count + 1\n      end\n    end\n    i = i + 1\n  end\n  return\
    \ count\nend", "  if n < 0 then return 0 end\n  local count = 0\n  for i = 1,\
    \ n do\n    if i ~= 1 then\n      count = count + 1\n      if i ~= n then\n  \
    \      count = count + 1\n      end\n    end\n  end\n  return count\nend", " \
    \ local count = 0\n  for i = 1, n do\n    if i ~= 1 then\n      if i % 10 == 1\
    \ then\n        count = count + 1\n      end\n    end\n  end\n  return count\n\
    end", "  local count = 0\n  for i = 1, n do\n    if i ~= 1 then\n      count =\
    \ count + 1\n    end\n    if i % 10 == 1 then\n      count = count + 1\n    end\n\
    \  end\n  return count\nend", "  if n < 1 then return 0 end\n  local count = 0\n\
    \  local i = 1\n  while i <= n do\n    if i % 10 == 1 then\n      if i % 10 ==\
    \ 1 and i ~= 1 then\n        count = count + 1\n      end\n    end\n    i = i\
    \ + 1\n  end\n  return count\nend", "  local count = 0\n  local i = 1\n  while\
    \ i <= n do\n    if i ~= n and i % 10 == 1 then\n      count = count + 1\n   \
    \ end\n    i = i + 1\n  end\n  return count\nend", "  local count = 0\n  for i\
    \ = 1, n do\n    if i ~= 1 and i ~= n and i % 10 == 1 then\n      count = count\
    \ + 1\n    end\n  end\n  return count\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

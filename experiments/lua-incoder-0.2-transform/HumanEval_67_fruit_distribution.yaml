name: HumanEval_67_fruit_distribution
language: lua
prompt: "-- In this task, you will be given a string that represents a number of apples\
  \ and oranges \n-- that are distributed in a basket of fruit this basket contains\
  \ \n-- apples, oranges, and mango fruits. Given the string that represents the total\
  \ number of \n-- the oranges and apples and an integer that represent the total\
  \ number of the fruits \n-- in the basket return the number of the mango fruits\
  \ in the basket.\n-- for examble:\n-- >>> fruit_distribution('5 apples and 6 oranges',\
  \ 19)\n-- 8\n-- >>> fruit_distribution('0 apples and 1 oranges', 3)\n-- 2\n-- >>>\
  \ fruit_distribution('2 apples and 3 oranges', 100)\n-- 95\n-- >>> fruit_distribution('100\
  \ apples and 1 oranges', 120)\n-- 19\nlocal function fruit_distribution(s, n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fruit_distribution\n\
  \    lu.assertEquals(candidate('5 apples and 6 oranges', 19), 8)\n    lu.assertEquals(candidate('5\
  \ apples and 6 oranges', 21), 10)\n    lu.assertEquals(candidate('0 apples and 1\
  \ oranges', 3), 2)\n    lu.assertEquals(candidate('1 apples and 0 oranges', 3),\
  \ 2)\n    lu.assertEquals(candidate('2 apples and 3 oranges', 100), 95)\n    lu.assertEquals(candidate('2\
  \ apples and 3 oranges', 5), 0)\n    lu.assertEquals(candidate('1 apples and 100\
  \ oranges', 120), 19)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: []
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_105_by_length
language: lua
prompt: "-- Given an array of integers, sort the integers that are between 1 and 9\
  \ inclusive,\n-- reverse the resulting array, and then replace each digit by its\
  \ corresponding name from\n-- \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"\
  Six\", \"Seven\", \"Eight\", \"Nine\".\n-- For example:\n-- >>> by_length({2, 1,\
  \ 1, 4, 5, 8, 2, 3})\n-- {'Eight', 'Five', 'Four', 'Three', 'Two', 'Two', 'One',\
  \ 'One'}\n-- If the array is empty, return an empty array:\n-- >>> by_length({})\n\
  -- {}\n-- If the array has any strange number ignore it:\n-- >>> by_length({1, -1,\
  \ 55})\n-- {'One'}\nlocal function by_length(arr)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = by_length\n\
  \    lu.assertEquals(candidate({2, 1, 1, 4, 5, 8, 2, 3}), {'Eight', 'Five', 'Four',\
  \ 'Three', 'Two', 'Two', 'One', 'One'})\n    lu.assertEquals(candidate({}), {})\n\
  \    lu.assertEquals(candidate({1, -1, 55}), {'One'})\n    lu.assertEquals(candidate({1,\
  \ -1, 3, 2}), {'Three', 'Two', 'One'})\n    lu.assertEquals(candidate({9, 4, 8}),\
  \ {'Nine', 'Eight', 'Four'})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local result = {}\n  for i = 1, #arr do\n    local length = math.floor(math.log10(arr[i]))\n\
    \    if length == 0 then\n      length = nil\n    end\n    if length == nil then\n\
    \      length = i\n    end\n    local digit = math.floor(arr[i] / 10^length)\n\
    \    local name = string.format(\"%g\", arr[i] % 10^length)\n    if digit ~= 0\
    \ then\n      result[digit] = name\n    end\n  end\n  return result\nend", " \
    \ local result = {}\n  local length = #arr\n  for i = 1, length do\n    local\
    \ value = arr[i]\n    if value >= 1 and value <= 9 then\n      table.insert(result,\
    \ value)\n    end\n  end\n  if #result == 0 then\n    return {}\n  end\n  table.sort(result)\n\
    \  for i = 1, length do\n    arr[i] = result[i]\n  end\n  local names = {}\n \
    \ for i = 1, length do\n    local value = arr[i]\n    local name = names[i]\n\
    \    if value == 1 then\n      arr[i] = \"One\"\n      names[i] = \"One\"\n  \
    \  elseif value == 2 then\n      arr[i] = \"Two\"\n      names[i] = \"Two\"\n\
    \    elseif value == 3 then\n      arr[i] = \"Three\"\n      names[i] = \"Three\"\
    \n    elseif value == 4 then\n      arr[i] = \"Four\"\n      names[i] = \"Four\"\
    \n    elseif value == 5 then\n      arr[i] = \"Five\"\n      names[i] = \"Five\"\
    \n    elseif value == 6 then\n      arr[i] = \"Six\"\n      names[i] = \"Six\"\
    \n    elseif value == 7 then\n      arr[i] = \"Seven\"\n      names[i] = \"Seven\"\
    \n    elseif value == 8 then\n      arr[i] = \"Eight\"\n      names[i] = \"Eight\"\
    \n    elseif value == 9 then\n      arr[i] = \"Nine\"\n      names[i] = \"Nine\"\
    \n    end\n  end\n  return arr\nend", "  local result = {}\n  for i = 1, #arr\
    \ do\n    local num = arr[i]\n    if num >= 1 and num <= 9 then\n      result[#result\
    \ + 1] = string.format(\"%g\", num)\n    end\n  end\n  table.sort(result)\n  for\
    \ i = 1, #result do\n    result[i] = by_length(result[i])\n  end\n  return result\n\
    end", "  local result = {}\n  for i = 1, #arr do\n    local value = arr[i]\n \
    \   if value < 1 or value > 9 then\n      table.insert(result, value)\n    else\n\
    \      local index = math.floor((value - 1) * 10)\n      table.insert(result,\
    \ string.rep(\"One\", index)) .. string.rep(\"Two\", index - 1) .. string.rep(\"\
    Three\", index - 2) .. string.rep(\"Four\", index - 3) .. string.rep(\"Five\"\
    , index - 4) .. string.rep(\"Six\", index - 5) .. string.rep(\"Seven\", index\
    \ - 6) .. string.rep(\"Eight\", index - 7) .. string.rep(\"Nine\", index - 8))\n\
    \    end\n  end\n  return result\nend", "  local result = {}\n  for i = 1, 9 do\n\
    \    local value = arr[i]\n    if value ~= nil then\n      result[#result + 1]\
    \ = string.format(\"%g\", value)\n    end\n  end\n  table.sort(result)\n  for\
    \ i = 1, #result do\n    result[#result + 1] = string.format(\"%g\", result[i])\n\
    \  end\n  return result\nend", "  local result = {}\n  for i = 1, 9 do\n    local\
    \ value = arr[i]\n    if value then\n      result[value] = arr[i]\n    end\n \
    \ end\n  return result\nend", "  local result = {}\n  for i = 1, #arr do\n   \
    \ local length = arr[i]\n    if length == nil then\n      length = arr[i]\n  \
    \  end\n    if length == 1 or length == 2 or length == 3 or length == 4 or length\
    \ == 5 then\n      result[#result + 1] = arr[i - 1]\n    elseif length == 6 then\n\
    \      result[#result + 1] = arr[i - 1]\n      result[#result + 1] = arr[i - 2]\n\
    \      result[#result + 1] = arr[i - 3]\n      result[#result + 1] = arr[i - 4]\n\
    \      result[#result + 1] = arr[i - 5]\n      result[#result + 1] = arr[i - 6]\n\
    \    elseif length == 7 then\n      result[#result + 1] = arr[i - 1]\n      result[#result\
    \ + 1] = arr[i - 2]\n      result[#result + 1] = arr[i - 3]\n      result[#result\
    \ + 1] = arr[i - 4]\n      result[#result + 1] = arr[i - 5]\n      result[#result\
    \ + 1] = arr[i - 6]\n      result[#result + 1] = arr[i - 7]\n    elseif length\
    \ == 8 then\n      result[#result + 1] = arr[i - 1]\n      result[#result + 1]\
    \ = arr[i - 2]\n      result[#result + 1] = arr[i - 3]\n      result[#result +\
    \ 1] = arr[i - 4]\n      result[#result + 1] = arr[i - 5]\n      result[#result\
    \ + 1] = arr[i - 6]\n      result[#result + 1] = arr[i - 7]\n      result[#result\
    \ + 1] = arr[i - 8]\n    elseif length == 9 then\n      result[#result + 1] =\
    \ arr[i - 1]\n      result[#result + 1] = arr[i - 2]\n      result[#result + 1]\
    \ = arr[i - 3]\n      result[#result + 1] = arr[i - 4]\n      result[#result +\
    \ 1] = arr[i - 5]\n      result[#result + 1] = arr[i - 6]\n      result[#result\
    \ + 1] = arr[i - 7]\n      result[#result + 1] = arr[i - 8]\n      result[#result\
    \ + 1] = arr[i - 9]\n    else\n      result[#result + 1] = arr[i - 1]\n    end\n\
    \  end\n  return result\nend", "  local result = {}\n  for i = 1, #arr do\n  \
    \  local value = arr[i]\n    if value < 1 or value > 9 then\n      table.insert(result,\
    \ value)\n    else\n      local index = math.floor((value - 1) * 10)\n      table.insert(result,\
    \ string.rep(\"One\", index), string.rep(\"Two\", index), string.rep(\"Three\"\
    , index), string.rep(\"Four\", index), string.rep(\"Five\", index), string.rep(\"\
    Six\", index), string.rep(\"Seven\", index), string.rep(\"Eight\", index), string.rep(\"\
    Nine\", index))\n    end\n  end\n  return result\nend", "  local result = {}\n\
    \  for i = 1, #arr do\n    local length = arr[i]\n    if length == nil then\n\
    \      length = i\n    end\n    if length < 1 or length > 9 then\n      -- Ignore\
    \ strange numbers\n      result[#result + 1] = arr[i]\n    else\n      local index\
    \ = math.floor((length - 1) / 10)\n      result[#result + 1] = arr[i] .. by_length({arr[i\
    \ + 1], arr[i + 2], arr[i + 3], arr[i + 4], arr[i + 5]})\n      arr[i + index]\
    \ = nil\n    end\n  end\n  return result\nend", "  local result = {}\n  local\
    \ i = 0\n  while i < #arr do\n    local value = arr[i]\n    local length = math.floor(math.log(value,\
    \ 10))\n    if length == 0 then\n      length = 10\n    end\n    local digit =\
    \ math.pow(10, length)\n    local name = string.format(\"%g\", value/digit)\n\
    \    if length < 10 then\n      name = string.format(\"%g\", value)\n    end\n\
    \    result[#result + 1] = name\n    i = i + 1\n  end\n  return result\nend",
  "  local result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n    if value\
    \ ~= nil then\n      local name = tonumber(tostring(value))\n      if name ~=\
    \ nil then\n        result[#result + 1] = name\n      end\n    end\n  end\n  table.sort(result,\
    \ function(a, b) return a < b end)\n  for i = 1, 9 do\n    local value = arr[i]\n\
    \    if value ~= nil then\n      local name = tonumber(tostring(value))\n    \
    \  if name ~= nil then\n        result[#result + 1] = name\n      end\n    end\n\
    \  end\n  return result\nend", "  local result = {}\n  for i = 1, 9 do\n    local\
    \ value = arr[i]\n    if value ~= nil then\n      result[#result + 1] = by_length({value})\n\
    \    end\n  end\n  if #arr > 0 then\n    for i = 1, #arr do\n      local value\
    \ = arr[i]\n      if value ~= nil then\n        result[#result + 1] = by_length({value})\n\
    \      end\n    end\n  end\n  return result\nend", "  local result = {}\n  for\
    \ i = 1, 9 do\n    local value = arr[i]\n    if value ~= nil then\n      result[value]\
    \ = arr[i]\n    end\n  end\n  table.sort(result)\n  for i = 1, 9 do\n    arr[i]\
    \ = result[i]\n  end\n  for i = 1, 9 do\n    arr[i] = \"One\"\n  end\n  return\
    \ arr\nend", "  local result = {}\n  local i = 0\n  while i < #arr do\n    local\
    \ value = arr[i]\n    if value >= 1 and value <= 9 then\n      table.insert(result,\
    \ value)\n    else\n      break\n    end\n    i = i + 1\n  end\n  if #result ==\
    \ 0 then\n    return {}\n  end\n  table.sort(result)\n  for i = #result, 1, -1\
    \ do\n    arr[i] = result[i]\n  end\n  for i = 1, 10 do\n    local value = tostring(i)\n\
    \    arr[#arr + 1] = value\n  end\n  return arr\nend", "  local result = {}\n\
    \  for i = 1, 9 do\n    local value = arr[i]\n    if value ~= nil then\n     \
    \ result[#result + 1] = by_length(value) or value\n    end\n  end\n  return result\n\
    end", "  local result = {}\n  for i = 1, #arr do\n    local length = arr[i]\n\
    \    if length <= 9 then\n      result[#result + 1] = by_length[length](arr[i])\n\
    \    else\n      result[#result + 1] = by_length[length]\n    end\n  end\n  return\
    \ result\nend", "  local result = {}\n  for i = 1, #arr do\n    local num = arr[i]\n\
    \    if num < 1 or num > 9 then\n      table.insert(result, num)\n    else\n \
    \     local index = math.floor(math.log(num, 10))\n      table.insert(result,\
    \ tostring(num))\n      table.insert(result, tostring(index))\n    end\n  end\n\
    \  return result\nend", "  local result = {}\n  for i = 1, #arr do\n    local\
    \ length = arr[i]\n    if length > 0 and length <= 9 then\n      result[length]\
    \ = arr[i]\n    end\n  end\n  return result\nend", "  local result = {}\n  for\
    \ i = 1, #arr do\n    local num = arr[i]\n    if num < 1 or num > 9 then\n   \
    \   table.insert(result, num)\n    else\n      local digit = math.floor((num -\
    \ 1) / 10)\n      local name = string.format(\"%c\", num - 10 * digit)\n     \
    \ table.insert(result, name)\n    end\n  end\n  return result\nend", "  local\
    \ result = {}\n  for i = 1, 9 do\n    local num = arr[i]\n    if num ~= nil then\n\
    \      result[#result + 1] = by_length_helper(num, i)\n    end\n  end\n  return\
    \ result\nend", "  local result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n\
    \    if value ~= nil then\n      result[value] = arr[i]\n    end\n  end\n  return\
    \ result\nend", "  if #arr == 0 then\n    return {}\n  end\n  local result = {}\n\
    \  local length = #arr\n  for i = 1, length do\n    local value = arr[i]\n   \
    \ if value < 1 then\n      table.insert(result, \"\")\n    elseif value < 10 then\n\
    \      table.insert(result, string.format(\"%g\", value))\n    else\n      local\
    \ digit = math.floor((value - 1)/10)\n      table.insert(result, string.format(\"\
    %g\", digit))\n    end\n  end\n  table.sort(result)\n  for i = 1, length do\n\
    \    local value = arr[i]\n    if value < 1 then\n      table.insert(result, \"\
    \")\n    elseif value < 10 then\n      table.insert(result, string.format(\"%g\"\
    , value))\n    else\n      local digit = math.floor((value - 1)/10)\n      table.insert(result,\
    \ string.format(\"%g\", digit))\n    end\n  end\n  return result\nend", "  local\
    \ result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n    if value ~= nil\
    \ then\n      local name = one_or_nine[value]\n      if name then\n        result[#result\
    \ + 1] = name\n      end\n    end\n  end\n  return result\nend", "  local result\
    \ = {}\n  for i = 1, 9 do\n    local value = arr[i]\n    if value ~= nil then\n\
    \      local name = string.format(\"%g\", value)\n      if not result[#result]\
    \ then\n        result[#result] = value\n      else\n        local found = false\n\
    \        for j = 1, #result do\n          if result[j] == value then\n       \
    \     found = true\n            break\n          end\n        end\n        if\
    \ not found then\n          result[#result] = value\n        end\n      end\n\
    \    end\n  end\n  return result\nend", "  local result = {}\n  for i = 1, #arr\
    \ do\n    local length = arr[i]\n    if length == 1 or length == 2 then\n    \
    \  result[#result + 1] = arr[i - 1]\n    elseif length == 3 then\n      result[#result\
    \ + 1] = arr[i - 1]\n      result[#result + 1] = arr[i - 2]\n    elseif length\
    \ == 4 then\n      result[#result + 1] = arr[i - 1]\n      result[#result + 1]\
    \ = arr[i - 2]\n      result[#result + 1] = arr[i - 3]\n    elseif length == 5\
    \ then\n      result[#result + 1] = arr[i - 1]\n      result[#result + 1] = arr[i\
    \ - 2]\n      result[#result + 1] = arr[i - 3]\n      result[#result + 1] = arr[i\
    \ - 4]\n    elseif length == 6 then\n      result[#result + 1] = arr[i - 1]\n\
    \      result[#result + 1] = arr[i - 2]\n      result[#result + 1] = arr[i - 3]\n\
    \      result[#result + 1] = arr[i - 4]\n      result[#result + 1] = arr[i - 5]\n\
    \    elseif length == 7 then\n      result[#result + 1] = arr[i - 1]\n      result[#result\
    \ + 1] = arr[i - 2]\n      result[#result + 1] = arr[i - 3]\n      result[#result\
    \ + 1] = arr[i - 4]\n      result[#result + 1] = arr[i - 5]\n      result[#result\
    \ + 1] = arr[i - 6]\n    elseif length == 8 then\n      result[#result + 1] =\
    \ arr[i - 1]\n      result[#result + 1] = arr[i - 2]\n      result[#result + 1]\
    \ = arr[i - 3]\n      result[#result + 1] = arr[i - 4]\n      result[#result +\
    \ 1] = arr[i - 5]\n      result[#result + 1] = arr[i - 6]\n      result[#result\
    \ + 1] = arr[i - 7]\n    elseif length == 9 then\n      result[#result + 1] =\
    \ arr[i - 1]\n      result[#result + 1] = arr[i - 2]\n      result[#result + 1]\
    \ = arr[i - 3]\n      result[#result + 1] = arr[i - 4]\n      result[#result +\
    \ 1] = arr[i - 5]\n      result[#result + 1] = arr[i - 6]\n      result[#result\
    \ + 1] = arr[i - 7]\n      result[#result + 1] = arr[i - 8]\n    end\n  end\n\
    \  return result\nend", "  local result = {}\n  for i = 1, 9 do\n    local value\
    \ = arr[i]\n    if value ~= nil then\n      result[#result + 1] = string.format(\"\
    %g\", value)\n    end\n  end\n  table.sort(result)\n  for i = 1, #result do\n\
    \    result[#result + 1] = string.format(\"%g\", result[i])\n  end\n  return result\n\
    end", "  local result = {}\n  for i = 1, #arr do\n    local value = arr[i]\n \
    \   if value >= 1 and value <= 9 then\n      table.insert(result, value)\n   \
    \ end\n  end\n  table.sort(result)\n  for i = 1, #result do\n    local value =\
    \ result[i]\n    local name = string.format(\"%g\", value)\n    local index =\
    \ tonumber(name)\n    if index then\n      result[i] = name\n    end\n  end\n\
    \  return result\nend", "  local result = {}\n  for i = 1, #arr do\n    local\
    \ value = arr[i]\n    if value < 1 or value > 9 then\n      table.insert(result,\
    \ value)\n    else\n      local index = math.floor((value - 1) * 10)\n      table.insert(result,\
    \ string.rep(\"One\", index), string.rep(\"Two\", index), string.rep(\"Three\"\
    , index), string.rep(\"Four\", index), string.rep(\"Five\", index), string.rep(\"\
    Six\", index), string.rep(\"Seven\", index), string.rep(\"Eight\", index), string.rep(\"\
    Nine\", index))\n    end\n  end\n  return result\nend", "  local result = {}\n\
    \  for i = 1, #arr do\n    local value = arr[i]\n    if value < 1 or value > 9\
    \ then\n      table.insert(result, value)\n    else\n      local digit = math.floor((value\
    \ - 1) * 10)\n      table.insert(result, tostring(digit))\n    end\n  end\n  return\
    \ result\nend", "  local result = {}\n  for i = 1, #arr do\n    local length =\
    \ math.floor(math.abs(arr[i]))\n    if length <= 9 then\n      result[length]\
    \ = arr[i]\n    end\n  end\n  return result\nend", "  local result = {}\n  for\
    \ i = 1, 9 do\n    local value = arr[i]\n    if value ~= nil then\n      result[#result\
    \ + 1] = string.format(\"%g\", value)\n    end\n  end\n  table.sort(result)\n\
    \  for i = 1, #result do\n    result[i] = by_length_table[result[i]]\n  end\n\
    \  return result\nend", "  local result = {}\n  for i = 1, 9 do\n    local value\
    \ = arr[i]\n    if value ~= nil then\n      result[value] = tostring(i)\n    end\n\
    \  end\n  if #arr > 0 then\n    table.sort(result, function(a, b) return a < b\
    \ end)\n    for i = 1, 9 do\n      arr[i] = result[arr[i]]\n    end\n  end\n \
    \ return result\nend", "  local result = {}\n  for i = 1, 9 do\n    local value\
    \ = arr[i]\n    if value ~= nil then\n      local name = tonumber(string.format(\"\
    %0d\", value))\n      if name ~= nil then\n        result[#result + 1] = name\n\
    \      end\n    end\n  end\n  return result\nend", "  local result = {}\n  for\
    \ i = 1, 9 do\n    local value = arr[i]\n    if value ~= nil then\n      local\
    \ name = string.format(\"%g\", value)\n      if not result[#result] then\n   \
    \     result[#result] = value\n      else\n        local last = result[#result]\n\
    \        if last < value then\n          result[#result] = value\n        else\n\
    \          result[#result] = last\n        end\n      end\n    end\n  end\n  return\
    \ result\nend", "  local result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n\
    \    if value ~= nil then\n      result[i] = by_length(value) or value\n    end\n\
    \  end\n  return table.concat(result)\nend", "  local result = {}\n  for i = 1,\
    \ #arr do\n    local n = arr[i]\n    if n > 0 and n < 10 then\n      result[n]\
    \ = arr[i]\n    end\n  end\n  return result\nend", "  local result = {}\n  for\
    \ i = 1, 9 do\n    local value = arr[i]\n    if value then\n      result[value]\
    \ = arr[i]\n    end\n  end\n  return result\nend", "  local result = {}\n  for\
    \ i = 1, 9 do\n    local value = arr[i]\n    if value ~= nil then\n      local\
    \ name = map[value]\n      if name then\n        result[#result + 1] = name\n\
    \      end\n    end\n  end\n  if #result > 0 then\n    table.sort(result)\n  \
    \  for i = 1, #result do\n      result[i] = map[result[i]]\n    end\n  end\n \
    \ return result\nend", "  local result = {}\n  for i = 1, #arr do\n    local num\
    \ = arr[i]\n    if num >= 1 and num <= 9 then\n      result[#result + 1] = string.format(\"\
    %g\", num)\n    end\n  end\n  if #result > 0 then\n    table.sort(result)\n  \
    \  for i = 1, #result do\n      result[i] = by_length(result[i])\n    end\n  end\n\
    \  return result\nend", "  local result = {}\n  for i = 1, #arr do\n    local\
    \ length = math.floor(math.log10(arr[i]))\n    if length < 1 or length > 9 then\n\
    \      table.insert(result, arr[i])\n    else\n      local digits = math.pow(10,\
    \ length)\n      local reversed = math.floor(arr[i]/digits)\n      local name\
    \ = string.format(\"%g\", reversed)\n      table.insert(result, name)\n    end\n\
    \  end\n  return result\nend", "  local result = {}\n  local i = 1\n  while i\
    \ <= 9 do\n    local index = math.floor((i - 1) / 3)\n    local value = arr[index]\n\
    \    if value ~= nil then\n      result[i] = value\n    end\n    i = i + 1\n \
    \ end\n  return result\nend", "  local result = {}\n  for i = 1, #arr do\n   \
    \ local length = math.floor(math.log10(arr[i]))\n    if length == 0 then\n   \
    \   length = -1\n    end\n    local digit = math.pow(10, length)\n    local name\
    \ = string.format(\"%g\", arr[i]/digit)\n    if digit == 1 then\n      name =\
    \ string.format(\"One\", name)\n    elseif digit == 2 then\n      name = string.format(\"\
    Two\", name)\n    elseif digit == 3 then\n      name = string.format(\"Three\"\
    , name)\n    elseif digit == 4 then\n      name = string.format(\"Four\", name)\n\
    \    elseif digit == 5 then\n      name = string.format(\"Five\", name)\n    elseif\
    \ digit == 6 then\n      name = string.format(\"Six\", name)\n    elseif digit\
    \ == 7 then\n      name = string.format(\"Seven\", name)\n    elseif digit ==\
    \ 8 then\n      name = string.format(\"Eight\", name)\n    elseif digit == 9 then\n\
    \      name = string.format(\"Nine\", name)\n    end\n    result[#result + 1]\
    \ = name\n  end\n  return result\nend", "  local result = {}\n  for i = 1, #arr\
    \ do\n    if arr[i] <= 9 then\n      result[#result + 1] = string.format(\"%g\"\
    , arr[i])\n    else\n      result[#result + 1] = string.format(\"%g\", arr[i]\
    \ + 10)\n    end\n  end\n  table.sort(result)\n  for i = 1, #result do\n    result[i]\
    \ = by_length(result[i])\n  end\n  return result\nend", "  if #arr == 0 then\n\
    \    return {}\n  end\n  local result = {}\n  local length = #arr\n  local index\
    \ = 1\n  while index <= length do\n    local value = arr[index]\n    local name\
    \ = get_name(value, index)\n    if name then\n      table.insert(result, name)\n\
    \    end\n    index = index + 1\n  end\n  table.sort(result)\n  for i = 1, length\
    \ do\n    arr[i] = result[i]\n  end\n  return arr\nend", "  local result = {}\n\
    \  for i = 1, #arr do\n    local length = math.floor(math.abs(arr[i]))\n    if\
    \ length == 0 then\n      table.insert(result, \"\")\n    else\n      table.insert(result,\
    \ string.rep(\"One\", length))\n      table.insert(result, string.rep(\"Two\"\
    , length))\n      table.insert(result, string.rep(\"Three\", length))\n      table.insert(result,\
    \ string.rep(\"Four\", length))\n      table.insert(result, string.rep(\"Five\"\
    , length))\n      table.insert(result, string.rep(\"Six\", length))\n      table.insert(result,\
    \ string.rep(\"Seven\", length))\n      table.insert(result, string.rep(\"Eight\"\
    , length))\n      table.insert(result, string.rep(\"Nine\", length))\n    end\n\
    \  end\n  return result\nend", "  local result = {}\n  for i = 1, 9 do\n    local\
    \ value = arr[i]\n    if value ~= nil then\n      local name = one_or_nine[value]\
    \ or tostring(value)\n      table.insert(result, name)\n    end\n  end\n  return\
    \ result\nend", "  local result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n\
    \    if value ~= nil then\n      result[#result + 1] = string.format(\"%g\", value)\n\
    \    end\n  end\n  table.sort(result)\n  for i = 1, #result do\n    result[#result\
    \ + 1] = string.format(\"%g\", result[i])\n  end\n  return result\nend", "  local\
    \ result = {}\n  for i = 1, #arr do\n    local value = arr[i]\n    if value <\
    \ 1 or value > 9 then\n      table.insert(result, value)\n    else\n      local\
    \ index = math.floor((value - 1) * 10)\n      table.insert(result, names[index])\n\
    \    end\n  end\n  return result\nend", "  local result = {}\n  for i = 1, 9 do\n\
    \    local value = arr[i]\n    if value ~= nil then\n      result[#result + 1]\
    \ = string.format(\"%g\", value)\n    end\n  end\n  if #arr > 0 then\n    table.sort(result)\n\
    \    for i = 1, #result do\n      result[i] = by_length(result[i])\n    end\n\
    \  end\n  return result\nend", "  local result = {}\n  for i = 1, 9 do\n    local\
    \ value = arr[i]\n    if value ~= nil then\n      local name = string.format(\"\
    %g\", value)\n      local index = tonumber(name)\n      if index == nil then\n\
    \        -- ignore strange numbers\n      elseif index >= 1 and index <= 9 then\n\
    \        result[index] = name\n      end\n    end\n  end\n  return result\nend",
  "  local result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n    if value\
    \ ~= nil then\n      result[value] = string.format(\"%g\", i)\n    end\n  end\n\
    \  for i = 1, 9 do\n    local value = arr[i]\n    if value ~= nil then\n     \
    \ result[value] = string.format(\"%g\", i)\n    end\n  end\n  return result\n\
    end", "  local result = {}\n  for i = 1, #arr do\n    local value = arr[i]\n \
    \   if value >= 1 and value <= 9 then\n      table.insert(result, string.format(\"\
    %g\", value))\n    end\n  end\n  if #result == 0 then\n    return {}\n  end\n\
    \  table.sort(result)\n  for i = 1, #result do\n    local value = result[i]\n\
    \    local index = tonumber(value)\n    if index then\n      result[i] = by_length_by_index(index,\
    \ result)\n    end\n  end\n  return result\nend", "  local result = {}\n  for\
    \ i = 1, 9 do\n    local value = arr[i]\n    if value ~= nil then\n      local\
    \ name = string.format(\"%g\", value)\n      local index = tonumber(name)\n  \
    \    if index then\n        result[index] = name\n      end\n    end\n  end\n\
    \  return result\nend", "  local result = {}\n  for i = 1, 9 do\n    local value\
    \ = arr[i]\n    if value ~= nil then\n      local name = string.format(\"%g\"\
    , value)\n      local index = string.find(name, \".\")\n      if index == nil\
    \ then\n        result[#result + 1] = name\n      else\n        local digit =\
    \ tonumber(name[index + 1])\n        if digit ~= nil then\n          result[#result\
    \ + 1] = string.format(\"%g\", digit)\n        end\n      end\n    end\n  end\n\
    \  if #result == 0 then\n    return {}\n  end\n  table.sort(result)\n  local reversed\
    \ = {}\n  for i = #result, 1, -1 do\n    reversed[#reversed + 1] = result[i]\n\
    \  end\n  for i = 1, 9 do\n    local value = reversed[i]\n    if value ~= nil\
    \ then\n      local name = string.format(\"%g\", value)\n      local index = string.find(name,\
    \ \".\")\n      if index == nil then\n        result[#result + 1] = name\n   \
    \   else\n        local digit = tonumber(name[index + 1])\n        if digit ~=\
    \ nil then\n          result[#result + 1] = string.format(\"%g\", digit)\n   \
    \     end\n      end\n    end\n  end\n  return result\nend", "  local result =\
    \ {}\n  for i = 1, 9 do\n    local value = arr[i]\n    if value ~= nil then\n\
    \      local name = string.format(\"%g\", value)\n      local index = string.find(name,\
    \ \"%g\", 1)\n      if index == 0 then\n        name = string.format(\"%g\", value)\n\
    \      else\n        name = string.sub(name, \"%g\", index)\n      end\n     \
    \ table.insert(result, name)\n    end\n  end\n  return result\nend", "  local\
    \ result = {}\n  for i = 1, #arr do\n    local length = arr[i]\n    if length\
    \ > 0 and length <= 9 then\n      result[#result + 1] = arr[i - 1]\n    end\n\
    \  end\n  if #result > 0 then\n    table.sort(result)\n    for i = 1, #result\
    \ do\n      result[i] = \"One\"\n    end\n  end\n  return result\nend", "  local\
    \ result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n    if value ~= nil\
    \ then\n      result[value] = i\n    end\n  end\n  table.sort(result)\n  for i\
    \ = 1, 9 do\n    arr[i] = result[arr[i]]\n  end\n  return arr\nend", "  if #arr\
    \ == 0 then\n    return {}\n  end\n  local result = {}\n  local i = 0\n  while\
    \ i < #arr do\n    local j = i\n    while j < #arr do\n      if arr[j] < 10 then\n\
    \        arr[j] = arr[j] .. 'One'\n      elseif arr[j] < 100 then\n        arr[j]\
    \ = arr[j] .. 'Two'\n      elseif arr[j] < 1000 then\n        arr[j] = arr[j]\
    \ .. 'Three'\n      elseif arr[j] < 10000 then\n        arr[j] = arr[j] .. 'Four'\n\
    \      elseif arr[j] < 100000 then\n        arr[j] = arr[j] .. 'Five'\n      elseif\
    \ arr[j] < 1000000 then\n        arr[j] = arr[j] .. 'Six'\n      elseif arr[j]\
    \ < 10000000 then\n        arr[j] = arr[j] .. 'Seven'\n      elseif arr[j] < 100000000\
    \ then\n        arr[j] = arr[j] .. 'Eight'\n      elseif arr[j] < 1000000000 then\n\
    \        arr[j] = arr[j] .. 'Nine'\n      else\n        arr[j] = arr[j] .. 'Ten'\n\
    \      end\n      j = j + 1\n    end\n    table.insert(result, table.concat(arr,\
    \ 1, j - i))\n    i = j + 1\n  end\n  return result\nend", "  local result = {}\n\
    \  for i = 1, #arr do\n    local value = arr[i]\n    if value >= 1 and value <=\
    \ 9 then\n      table.insert(result, value)\n    end\n  end\n  table.sort(result)\n\
    \  for i = 1, #result do\n    local value = result[i]\n    local name = string.format(\"\
    %g\", value)\n    local index = tonumber(name)\n    if index then\n      result[i]\
    \ = name\n    end\n  end\n  return result\nend", "  local result = {}\n  for i\
    \ = 1, 9 do\n    local value = arr[i]\n    if value ~= nil then\n      result[i]\
    \ = by_length_helper(value, result)\n    end\n  end\n  return result\nend", " \
    \ local result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n    if value\
    \ ~= nil then\n      local name = one_or_nine[value] or tostring(value)\n    \
    \  table.insert(result, name)\n    end\n  end\n  if #arr == 0 then\n    return\
    \ result\n  end\n  table.sort(result)\n  local index = 1\n  local length = #result\n\
    \  while index <= length do\n    local value = result[index]\n    local name =\
    \ one_or_nine[value] or tostring(value)\n    arr[index] = name\n    index = index\
    \ + 1\n  end\n  return arr\nend", "  local result = {}\n  for i = 1, #arr do\n\
    \    if arr[i] >= 1 and arr[i] <= 9 then\n      result[#result + 1] = arr[i]\n\
    \    end\n  end\n  table.sort(result)\n  for i = 1, #result do\n    result[i]\
    \ = \"One\"\n    if result[i] == arr[#arr] then\n      result[i] = \"Two\"\n \
    \     if result[i] == arr[#arr] then\n        result[i] = \"Three\"\n        if\
    \ result[i] == arr[#arr] then\n          result[i] = \"Four\"\n          if result[i]\
    \ == arr[#arr] then\n            result[i] = \"Five\"\n            if result[i]\
    \ == arr[#arr] then\n              result[i] = \"Six\"\n              if result[i]\
    \ == arr[#arr] then\n                result[i] = \"Seven\"\n                if\
    \ result[i] == arr[#arr] then\n                  result[i] = \"Eight\"\n     \
    \             if result[i] == arr[#arr] then\n                    result[i] =\
    \ \"Nine\"\n                  end\n                end\n              end\n  \
    \          end\n          end\n        end\n      end\n    end\n  end\n  return\
    \ result\nend", "  local result = {}\n  for i = 1, #arr do\n    local n = arr[i]\n\
    \    if n > 0 and n < 10 then\n      result[#result + 1] = \"One\"\n      result[#result\
    \ + 1] = \"Two\"\n      result[#result + 1] = \"Three\"\n      result[#result\
    \ + 1] = \"Four\"\n      result[#result + 1] = \"Five\"\n      result[#result\
    \ + 1] = \"Six\"\n      result[#result + 1] = \"Seven\"\n      result[#result\
    \ + 1] = \"Eight\"\n      result[#result + 1] = \"Nine\"\n      result[#result\
    \ + 1] = tonumber(n)\n    end\n  end\n  table.sort(result)\n  for i = 1, #result\
    \ do\n    result[i] = result[i]:gsub(\"^(.)\", \"%1\")\n  end\n  return result\n\
    end", "  local result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n    if\
    \ value ~= nil then\n      local name = one_to_nine[value]\n      if name then\n\
    \        result[#result + 1] = name\n      end\n    end\n  end\n  return result\n\
    end", "  local result = {}\n  for i = 1, #arr do\n    local n = arr[i]\n    if\
    \ n > 0 and n < 10 then\n      result[n] = arr[i]\n    end\n  end\n  table.sort(result)\n\
    \  for i = 1, #result do\n    result[i] = \"One\"\n  end\n  return result\nend",
  "  local result = {}\n  for i = 1, #arr do\n    local value = arr[i]\n    if value\
    \ < 1 or value > 9 then\n      table.insert(result, value)\n    else\n      local\
    \ index = math.floor((value - 1) * 10)\n      table.insert(result, string.rep(\"\
    One\", index)) .. string.rep(\"Two\", index - 1) .. string.rep(\"Three\", index\
    \ - 2) .. string.rep(\"Four\", index - 3) .. string.rep(\"Five\", index - 4) ..\
    \ string.rep(\"Six\", index - 5) .. string.rep(\"Seven\", index - 6) .. string.rep(\"\
    Eight\", index - 7) .. string.rep(\"Nine\", index - 8))\n    end\n  end\n  return\
    \ result\nend", "  local result = {}\n  for i = 1, #arr do\n    local num = arr[i]\n\
    \    if num < 1 or num > 9 then\n      table.insert(result, num)\n    else\n \
    \     local name = string.format(\"%g\", num)\n      table.insert(result, name)\n\
    \    end\n  end\n  return result\nend", "  local result = {}\n  for i = 1, 9 do\n\
    \    local value = arr[i]\n    if value then\n      result[#result + 1] = by_length_helper(value,\
    \ i)\n    end\n  end\n  if #arr > 0 then\n    for i = #result, 1, -1 do\n    \
    \  result[i] = arr[i]\n    end\n  end\n  return result\nend", "  local result\
    \ = {}\n  for i = 1, 9 do\n    local value = arr[i]\n    if value ~= nil then\n\
    \      local name = string.format(\"%g\", value)\n      local index = string.find(name,\
    \ \".\")\n      if index == 0 then\n        name = string.format(\"%g\", value)\n\
    \      else\n        name = string.sub(name, \".\", index)\n      end\n      result[i]\
    \ = name\n    end\n  end\n  return result\nend", "  local result = {}\n  for i\
    \ = 1, #arr do\n    local value = arr[i]\n    if value >= 1 and value <= 9 then\n\
    \      table.insert(result, string.rep(value, \"One\", \"Two\", \"Three\", \"\
    Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"))\n    end\n  end\n\
    \  if #result == 0 then\n    return {}\n  end\n  table.sort(result)\n  for i =\
    \ 1, #result do\n    local value = result[i]\n    if value ~= \"\" then\n    \
    \  result[i] = result[i]:sub(1, #value)\n    end\n  end\n  return result\nend",
  "  local result = {}\n  for i = 1, #arr do\n    local value = arr[i]\n    if value\
    \ < 1 or value > 9 then\n      -- Ignore strange numbers\n      result[#result\
    \ + 1] = value\n    else\n      -- Reverse the array\n      local tmp = arr[#arr]\n\
    \      arr[#arr] = value\n      result[#result + 1] = arr[#arr]\n      arr[#arr]\
    \ = tmp\n    end\n  end\n  return result\nend", "  local result = {}\n  for i\
    \ = 1, #arr do\n    if arr[i] <= 9 then\n      table.insert(result, tostring(arr[i]))\n\
    \    end\n  end\n  if #result == 0 then\n    return {}\n  end\n  table.sort(result)\n\
    \  for i = 1, #result do\n    result[i] = \"One\"\n  end\n  return result\nend",
  "  if #arr == 0 then\n    return {}\n  end\n  local result = {}\n  for i = 1, 9\
    \ do\n    local value = arr[i]\n    if value ~= nil then\n      local name = string.format(\"\
    %g\", value)\n      if not result[#result] then\n        result[#result] = value\n\
    \      else\n        if result[#result] > value then\n          result[#result]\
    \ = value\n        end\n      end\n    end\n  end\n  return result\nend", "  local\
    \ result = {}\n  for i = 1, #arr do\n    if arr[i] <= 9 then\n      table.insert(result,\
    \ string.rep(\"One\", arr[i]))\n      table.insert(result, string.rep(\"Two\"\
    , arr[i]))\n      table.insert(result, string.rep(\"Three\", arr[i]))\n      table.insert(result,\
    \ string.rep(\"Four\", arr[i]))\n      table.insert(result, string.rep(\"Five\"\
    , arr[i]))\n      table.insert(result, string.rep(\"Six\", arr[i]))\n      table.insert(result,\
    \ string.rep(\"Seven\", arr[i]))\n      table.insert(result, string.rep(\"Eight\"\
    , arr[i]))\n      table.insert(result, string.rep(\"Nine\", arr[i]))\n    else\n\
    \      table.insert(result, arr[i])\n    end\n  end\n  return result\nend", " \
    \ local result = {}\n  for i = 1, #arr do\n    local length = arr[i]\n    if length\
    \ == 1 or length == 2 then\n      result[#result + 1] = arr[i - 1]\n    else\n\
    \      result[#result + 1] = by_length(arr:sub(1, i - 1)):sub(1, i - 1)\n    end\n\
    \  end\n  return result\nend", "  local result = {}\n  for i = 1, #arr do\n  \
    \  local value = arr[i]\n    if value >= 1 and value <= 9 then\n      table.insert(result,\
    \ value)\n    end\n  end\n  table.sort(result)\n  for i = 1, #result do\n    local\
    \ value = result[i]\n    local name = string.format(\"%g\", value)\n    local\
    \ index = string.find(name, \" \")\n    if index then\n      name = string.sub(name,1,index)\n\
    \    end\n    table.insert(result, name)\n  end\n  return result\nend", "  local\
    \ result = {}\n  for i = 1, #arr do\n    local value = arr[i]\n    if value <\
    \ 1 or value > 9 then\n      table.insert(result, value)\n    else\n      local\
    \ index = math.floor((value - 1) * 10)\n      table.insert(result, string.rep(\"\
    One\", index)) .. string.rep(\"Two\", index) .. string.rep(\"Three\", index) ..\
    \ string.rep(\"Four\", index) .. string.rep(\"Five\", index) .. string.rep(\"\
    Six\", index) .. string.rep(\"Seven\", index) .. string.rep(\"Eight\", index)\
    \ .. string.rep(\"Nine\", index)\n    end\n  end\n  return result\nend", "  local\
    \ result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n    if value ~= nil\
    \ then\n      result[#result + 1] = string.format(\"%g\", value)\n    end\n  end\n\
    \  table.sort(result)\n  for i = 1, #result do\n    result[#result + 1] = string.format(\"\
    %g\", result[i])\n  end\n  return result\nend", "  if #arr == 0 then\n    return\
    \ {}\n  end\n  local result = {}\n  local last_digit = arr[1]\n  local last_name\
    \ = \"\"\n  for i = 2, #arr do\n    local digit = arr[i]\n    if digit > 9 then\n\
    \      table.insert(result, last_name)\n      last_name = \"\"\n      last_digit\
    \ = digit\n    else\n      last_name = last_name .. \"-\" .. tostring(digit)\n\
    \    end\n  end\n  table.insert(result, last_name)\n  return result\nend", " \
    \ local result = {}\n  local i = 0\n  while i < #arr do\n    local value = arr[i]\n\
    \    if value < 1 or value > 9 then\n      i = i + 1\n    else\n      result[#result\
    \ + 1] = string.format(\"%s%s\", tostring(value), ones[value])\n    end\n    i\
    \ = i + 1\n  end\n  return result\nend", "  local result = {}\n  for i = 1, #arr\
    \ do\n    local length = arr[i]\n    if length > 0 and length <= 9 then\n    \
    \  result[#result + 1] = string.format(\"%g\", length)\n    end\n  end\n  if #result\
    \ == 0 then\n    return {}\n  end\n  table.sort(result)\n  local reversed = {}\n\
    \  for i = #result, 1, -1 do\n    reversed[#reversed + 1] = result[i]\n  end\n\
    \  for i = 1, #reversed do\n    local digit = reversed[i]\n    local name = string.format(\"\
    %g\", digit)\n    if #name > 0 then\n      reversed[i] = name\n    end\n  end\n\
    \  return reversed\nend", "  local result = {}\n  for i = 1, 9 do\n    local value\
    \ = arr[i]\n    if value ~= nil then\n      result[value] = i\n    end\n  end\n\
    \  for i = 1, 9 do\n    local value = arr[i]\n    if value ~= nil then\n     \
    \ arr[value] = result[i]\n    end\n  end\n  return result\nend", "  local result\
    \ = {}\n  local len = #arr\n  for i = 1, len do\n    local num = arr[i]\n    if\
    \ num < 1 or num > 9 then\n      result[#result + 1] = nil\n    else\n      result[#result\
    \ + 1] = num_to_name(num)\n    end\n  end\n  table.sort(result)\n  for i = 1,\
    \ len do\n    arr[i] = result[i]\n  end\n  return arr\nend", "  local result =\
    \ {}\n  for i = 1, 9 do\n    local value = arr[i]\n    if value ~= nil then\n\
    \      result[#result + 1] = string.format(\"%g\", value)\n    end\n  end\n  table.sort(result)\n\
    \  for i = 1, #result do\n    result[#result + 1] = string.format(\"%g\", result[i])\n\
    \  end\n  return result\nend", "  local result = {}\n  for i = 1, 9 do\n    local\
    \ value = arr[i]\n    if value ~= nil then\n      result[value] = i\n    end\n\
    \  end\n  table.sort(result)\n  local index = 1\n  for i = 1, 9 do\n    arr[index]\
    \ = result[i]\n    index = index + 1\n  end\n  return arr\nend", "  local result\
    \ = {}\n  for i = 1, #arr do\n    local num = arr[i]\n    if num < 1 or num >\
    \ 9 then\n      result[#result + 1] = num\n    else\n      local name = table.concat({\"\
    One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\",\
    \ \"Nine\"}, \"-\")\n      local index = math.floor(math.log2(num))\n      local\
    \ power = math.pow(10, index)\n      local reversed = math.floor(num / power)\
    \ * power\n      local reversed_name = table.concat({\"One\", \"Two\", \"Three\"\
    , \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"}, \"-\")\n     \
    \ local reversed_index = math.floor(math.log2(reversed))\n      local reversed_power\
    \ = math.pow(10, reversed_index)\n      local reversed_reversed = math.floor(reversed\
    \ / reversed_power) * reversed_power\n      local reversed_reversed_name = table.concat({\"\
    One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\",\
    \ \"Nine\"}, \"-\")\n      local reversed_reversed_index = math.floor(math.log2(reversed_reversed))\n\
    \      local reversed_reversed_power = math.pow(10, reversed_reversed_index)\n\
    \      local reversed_reversed_reversed = math.floor(reversed_reversed / reversed_reversed_power)\
    \ * reversed_reversed_power\n      local reversed_reversed_reversed_name = table.concat({\"\
    One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\",\
    \ \"Nine\"}, \"-\")\n      local reversed_reversed_reversed_index = math.floor(math.log2(reversed_reversed_reversed))\n\
    \      local reversed_reversed_reversed_power = math.pow(10, reversed_reversed_reversed_index)\n\
    \      local reversed_reversed_reversed_reversed = math.floor(reversed_reversed_reversed\
    \ / reversed_reversed_reversed_power) * reversed_reversed_reversed_power\n   \
    \   local reversed_reversed_reversed_reversed_name = table.concat({\"One\", \"\
    Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\
    }, \"-\")\n      local reversed_reversed_reversed_reversed_index = math.floor(math.log2(reversed_reversed_reversed_reversed))\n\
    \      local reversed_reversed_reversed_reversed_power = math.pow(10, reversed_reversed_reversed_reversed_index)\n\
    \      local reversed_reversed_reversed_reversed_reversed = math.floor(reversed_reversed_reversed_reversed\
    \ / reversed_reverse", "  local result = {}\n  for i = 1, #arr do\n    local value\
    \ = arr[i]\n    if value < 1 or value > 9 then\n      table.insert(result, value)\n\
    \    else\n      local index = math.floor((value - 1) * 10)\n      table.insert(result,\
    \ string.rep(\"One\", index)) .. string.rep(\"Two\", index) .. string.rep(\"Three\"\
    , index) .. string.rep(\"Four\", index) .. string.rep(\"Five\", index) .. string.rep(\"\
    Six\", index) .. string.rep(\"Seven\", index) .. string.rep(\"Eight\", index)\
    \ .. string.rep(\"Nine\", index)\n    end\n  end\n  return result\nend", "  if\
    \ #arr == 0 then\n    return {}\n  end\n  local result = {}\n  local index = 1\n\
    \  while index <= 9 do\n    local value = arr[index]\n    if value ~= nil then\n\
    \      local name = string.gsub(value, \"^.-\", \"\")\n      table.insert(result,\
    \ name)\n    end\n    index = index + 1\n  end\n  table.sort(result)\n  local\
    \ index = 1\n  while index <= 9 do\n    local value = arr[index]\n    if value\
    \ ~= nil then\n      local name = string.gsub(value, \"^.-\", \"\")\n      arr[index]\
    \ = result[index]\n      result[index] = name\n    end\n    index = index + 1\n\
    \  end\n  return result\nend", "  local result = {}\n  for i = 1, 9 do\n    local\
    \ value = arr[i]\n    if value ~= nil then\n      local name = get_name(value)\n\
    \      if name then\n        result[#result + 1] = name\n      end\n    end\n\
    \  end\n  if #result > 0 then\n    table.sort(result, function(a, b) return a\
    \ < b end)\n    for i = 1, #result do\n      result[i] = get_name(result[i])\n\
    \    end\n  end\n  return result\nend", "  local result = {}\n  for i = 1, #arr\
    \ do\n    local length = arr[i]\n    if length <= 9 then\n      result[#result\
    \ + 1] = string.format(\"%g\", length)\n    else\n      result[#result + 1] =\
    \ string.format(\"%g\", math.floor(length / 10))\n      result[#result + 1] =\
    \ string.format(\"%g\", length - math.floor(length / 10) * 10)\n    end\n  end\n\
    \  table.sort(result)\n  for i = 1, #result do\n    result[i] = by_length_table[result[i]]\n\
    \  end\n  return result\nend", "  local result = {}\n  local i = 1\n  while i\
    \ <= 9 do\n    local j = i\n    while j <= 9 do\n      if arr[i] <= arr[j] then\n\
    \        table.insert(result, tostring(j))\n      end\n      j = j + 1\n    end\n\
    \    i = i + 1\n  end\n  return result\nend", "  local result = {}\n  for i =\
    \ 1, 9 do\n    local value = arr[i]\n    if value ~= nil then\n      result[#result\
    \ + 1] = string.format(\"%g\", value)\n    end\n  end\n  table.sort(result)\n\
    \  for i = 1, #result do\n    result[i] = by_length(result[i])\n  end\n  return\
    \ result\nend", "  local result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n\
    \    if value ~= nil then\n      local name = map[value]\n      if name ~= nil\
    \ then\n        result[#result + 1] = name\n      end\n    end\n  end\n  if #result\
    \ == 0 then\n    return {}\n  end\n  table.sort(result)\n  for i = 1, 9 do\n \
    \   local value = result[i]\n    if value ~= nil then\n      result[i] = map[value]\n\
    \    end\n  end\n  return result\nend", "  local result = {}\n  for i = 1, 9 do\n\
    \    local value = arr[i]\n    if value ~= nil then\n      result[value] = arr[i]\n\
    \    end\n  end\n  table.sort(result)\n  for i = 1, 9 do\n    local value = result[i]\n\
    \    if value ~= nil then\n      result[i] = by_length({value})\n    end\n  end\n\
    \  return result\nend", "  local result = {}\n  for i = 1, #arr do\n    local\
    \ value = arr[i]\n    if value < 1 or value > 9 then\n      table.insert(result,\
    \ value)\n    else\n      local index = math.floor((value - 1) * 10)\n      table.insert(result,\
    \ string.rep(\"One\", index)) .. string.rep(\"Two\", index) .. string.rep(\"Three\"\
    , index) .. string.rep(\"Four\", index) .. string.rep(\"Five\", index) .. string.rep(\"\
    Six\", index) .. string.rep(\"Seven\", index) .. string.rep(\"Eight\", index)\
    \ .. string.rep(\"Nine\", index)\n    end\n  end\n  return result\nend", "  local\
    \ result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n    if value ~= nil\
    \ then\n      result[#result + 1] = by_length({value})\n    end\n  end\n  return\
    \ result\nend", "  local result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n\
    \    if value ~= nil then\n      local name = string.format(\"%g\", value)\n \
    \     local index = string.find(name, \".\")\n      if index == nil then\n   \
    \     result[#result + 1] = name\n      else\n        local prefix = string.sub(name,1,\
    \ index - 1)\n        local suffix = string.sub(name,index + 1)\n        local\
    \ digit = tonumber(prefix)\n        if digit == nil then\n          result[#result\
    \ + 1] = name\n        else\n          local index = #result\n          result[#result\
    \ + 1] = string.format(\"%g\", digit + 10)\n          for j = 1, 9 do\n      \
    \      local value = arr[j]\n            if value == nil then\n              break\n\
    \            end\n            local name = string.format(\"%g\", value)\n    \
    \        local index = string.find(name, \".\")\n            if index == nil then\n\
    \              result[#result + 1] = name\n            else\n              local\
    \ prefix = string.sub(name,1, index - 1)\n              local suffix = string.sub(name,index\
    \ + 1)\n              local digit = tonumber(prefix)\n              if digit ==\
    \ nil then\n                result[#result + 1] = name\n              else\n \
    \               local index = #result\n                result[#result + 1] = string.format(\"\
    %g\", digit - 10)\n                for k = 1, 9 do\n                  local value\
    \ = arr[k]\n                  if value == nil then\n                    break\n\
    \                  end\n                  local name = string.format(\"%g\", value)\n\
    \                  local index = string.find(name, \".\")\n                  if\
    \ index == nil then\n                    result[#result + 1] = name\n        \
    \          else\n                    local prefix = string.sub(name,1, index -\
    \ 1)\n                    local suffix = string.sub(name,index + 1)\n        \
    \            local digit = tonumber(prefix)\n                    if digit == nil\
    \ then\n                      result[#result + 1] = name\n                   \
    \ else\n                      local index = #result\n                      result[#result\
    \ + 1] = string.format(\"%g\", digit + 10)\n                    end\n        \
    \          end\n                end\n              end\n            end\n    \
    \      end\n        end\n      end\n    end\n  end\n  return result\nend", " \
    \ local result = {}\n  for i = 1, #arr do\n    local length = math.floor(math.log10(arr[i]))\n\
    \    if length == 0 then\n      length = 2\n    end\n    local digit = math.pow(10,\
    \ length)\n    local name = string.format(\"%0*d\", length, arr[i])\n    result[digit]\
    \ = name\n  end\n  return result\nend", "  local result = {}\n  for i = 1, 9 do\n\
    \    local value = arr[i]\n    if value then\n      result[i] = by_length(value)\
    \ or value\n    end\n  end\n  return result\nend", "  local result = {}\n  for\
    \ i = 1, 9 do\n    local value = arr[i]\n    if value ~= nil then\n      local\
    \ name = string.format(\"%g\", value)\n      local index = string.find(name, \"\
    .\")\n      if index == nil then\n        result[#result + 1] = name\n      else\n\
    \        local prefix = name\n        if index > 1 then\n          prefix = string.sub(prefix,\
    \ 1, index - 1)\n        end\n        result[#result + 1] = prefix .. \"-\" ..\
    \ name\n      end\n    end\n  end\n  return result\nend", "  local result = {}\n\
    \  for i = 1, #arr do\n    local value = arr[i]\n    if value < 1 or value > 9\
    \ then\n      table.insert(result, value)\n    else\n      local index = math.floor((value\
    \ - 1) * 10)\n      table.insert(result, string.rep(\"One\", index), string.rep(\"\
    Two\", index), string.rep(\"Three\", index), string.rep(\"Four\", index), string.rep(\"\
    Five\", index), string.rep(\"Six\", index), string.rep(\"Seven\", index), string.rep(\"\
    Eight\", index), string.rep(\"Nine\", index))\n    end\n  end\n  return result\n\
    end", "  local result = {}\n  for i = 1, #arr do\n    local value = arr[i]\n \
    \   if value >= 1 and value <= 9 then\n      table.insert(result, value)\n   \
    \ end\n  end\n  table.sort(result)\n  for i = 1, #result do\n    local value =\
    \ result[i]\n    local name = string.format(\"%g\", value)\n    local index =\
    \ tonumber(name)\n    if index then\n      result[i] = name\n    end\n  end\n\
    \  return result\nend", "  if #arr == 0 then\n    return {}\n  end\n  local result\
    \ = {}\n  local index = 1\n  local last_index = 1\n  while last_index < #arr do\n\
    \    local value = arr[last_index]\n    local length = #result\n    if value <=\
    \ 9 then\n      result[length] = value\n      last_index = last_index + 1\n  \
    \  else\n      local last_digit = math.floor((value - 1) * 10)\n      local last_name\
    \ = by_length(arr:sub(1, last_index))\n      local last_name_length = #last_name\n\
    \      local last_name_digit = math.floor((last_digit - 1) * 10)\n      local\
    \ last_name_value = last_name[last_name_digit]\n      local last_name_digit_value\
    \ = last_name_value * 10 + last_digit\n      local last_name_index = length -\
    \ 1\n      while last_name_index >= 0 do\n        local last_name_digit_value\
    \ = last_name_digit_value / 10\n        if last_name_digit_value == last_name_value\
    \ then\n          result[last_name_index] = last_name_value\n          break\n\
    \        end\n        last_name_index = last_name_index - 1\n      end\n     \
    \ result[length] = last_name_value\n    end\n  end\n  return result\nend", " \
    \ local result = {}\n  for i = 1, #arr do\n    local num = arr[i]\n    if num\
    \ > 0 and num < 10 then\n      result[#result + 1] = string.format(\"%c\", num)\n\
    \    end\n  end\n  table.sort(result)\n  for i = 1, #result do\n    result[i]\
    \ = string.format(\"%c\", result[i])\n  end\n  return result\nend", "  local result\
    \ = {}\n  for i = 1, 9 do\n    local value = arr[i]\n    if value ~= nil then\n\
    \      result[#result + 1] = by_length({value})\n    end\n  end\n  if #arr ==\
    \ 0 then\n    return result\n  end\n  local one = arr[1]\n  local two = arr[2]\n\
    \  local three = arr[3]\n  local four = arr[4]\n  local five = arr[5]\n  local\
    \ six = arr[6]\n  local seven = arr[7]\n  local eight = arr[8]\n  local nine =\
    \ arr[9]\n  local one_name = one\n  local two_name = two\n  local three_name =\
    \ three\n  local four_name = four\n  local five_name = five\n  local six_name\
    \ = six\n  local seven_name = seven\n  local eight_name = eight\n  local nine_name\
    \ = nine\n  if one ~= nil then\n    one_name = one_name..'One'\n  end\n  if two\
    \ ~= nil then\n    two_name = two_name..'Two'\n  end\n  if three ~= nil then\n\
    \    three_name = three_name..'Three'\n  end\n  if four ~= nil then\n    four_name\
    \ = four_name..'Four'\n  end\n  if five ~= nil then\n    five_name = five_name..'Five'\n\
    \  end\n  if six ~= nil then\n    six_name = six_name..'Six'\n  end\n  if seven\
    \ ~= nil then\n    seven_name = seven_name..'Seven'\n  end\n  if eight ~= nil\
    \ then\n    eight_name = eight_name..'Eight'\n  end\n  if nine ~= nil then\n \
    \   nine_name = nine_name..'Nine'\n  end\n  local names = {one_name, two_name,\
    \ three_name, four_name, five_name, six_name, seven_name, eight_name, nine_name}\n\
    \  local names_length = #names\n  local names_length = names_length + 2\n  local\
    \ names_length = names_length + 2\n  local names_length = names_length + 2\n \
    \ local names_length = names_length + 2\n  local names_length = names_length +\
    \ 2\n  local names_length = names_length + 2\n  local names_length = names_length\
    \ + 2\n  local names_length = names_length + 2\n  local names_length = name",
  "  local result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n    if value\
    \ ~= nil then\n      result[value] = i\n    end\n  end\n  table.sort(result)\n\
    \  for i = 1, 9 do\n    arr[i] = result[arr[i]]\n  end\n  return arr\nend", " \
    \ local result = {}\n  for i = 1, #arr do\n    local length = arr[i]\n    if length\
    \ == 0 then\n      break\n    end\n    local index = math.floor((length - 1) /\
    \ 10)\n    local digit = length - index * 10\n    local name = string.format(\"\
    %c\", digit)\n    if tonumber(name) == digit then\n      name = string.format(\"\
    %c\", tonumber(name))\n    end\n    result[index + 1] = name\n  end\n  return\
    \ result\nend", "  local result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n\
    \    if value ~= nil then\n      local name = get_name(value)\n      if name then\n\
    \        result[#result + 1] = name\n      end\n    end\n  end\n  if #result ==\
    \ 0 then\n    return {}\n  end\n  table.sort(result)\n  for i = 1, 9 do\n    local\
    \ value = result[i]\n    if value ~= nil then\n      result[i] = get_name(value)\n\
    \    end\n  end\n  return result\nend", "  local result = {}\n  for i = 1, 9 do\n\
    \    local value = arr[i]\n    if value ~= nil then\n      local name = string.format(\"\
    %g\", value)\n      local index = string.find(name, \"%g\", 1)\n      if index\
    \ == 0 then\n        name = string.format(\"%g\", value)\n      else\n       \
    \ name = string.format(\"%g\", value - 1)\n      end\n      table.insert(result,\
    \ name)\n    end\n  end\n  return result\nend", "  local result = {}\n  for i\
    \ = 1, #arr do\n    local n = arr[i]\n    if n > 0 and n < 10 then\n      result[n]\
    \ = arr[i]\n    end\n  end\n  return result\nend", "  local result = {}\n  for\
    \ i = 1, #arr do\n    local value = arr[i]\n    if value < 1 or value > 9 then\n\
    \      table.insert(result, value)\n    else\n      local index = math.floor((value\
    \ - 1) * 10)\n      table.insert(result, string.rep(\"One\", index)) .. string.rep(\"\
    Two\", index - 1) .. string.rep(\"Three\", index - 2) .. string.rep(\"Four\",\
    \ index - 3) .. string.rep(\"Five\", index - 4) .. string.rep(\"Six\", index -\
    \ 5) .. string.rep(\"Seven\", index - 6) .. string.rep(\"Eight\", index - 7) ..\
    \ string.rep(\"Nine\", index - 8))\n    end\n  end\n  return result\nend", " \
    \ local result = {}\n  for i = 1, #arr do\n    local value = arr[i]\n    if value\
    \ < 1 or value > 9 then\n      table.insert(result, value)\n    else\n      local\
    \ index = math.floor((value - 1) * 10)\n      table.insert(result, arr[index])\n\
    \    end\n  end\n  return result\nend", "  local result = {}\n  for i = 1, #arr\
    \ do\n    if arr[i] <= 9 then\n      result[#result + 1] = arr[i]\n    else\n\
    \      result[#result + 1] = string.format(\"%g\", arr[i])\n    end\n  end\n \
    \ table.sort(result)\n  for i = 1, #result do\n    result[#result + 1] = string.format(\"\
    %g\", result[i])\n  end\n  return result\nend", "  local result = {}\n  for i\
    \ = 1, 9 do\n    local value = arr[i]\n    if value ~= nil then\n      local name\
    \ = math.floor(value/10)\n      result[name] = name\n    end\n  end\n  if #arr\
    \ > 0 then\n    for i = 1, #arr do\n      local value = arr[i]\n      if value\
    \ ~= nil then\n        local name = math.floor(value/10)\n        result[name]\
    \ = name\n      end\n    end\n  end\n  return result\nend", "  local result =\
    \ {}\n  for i = 1, 9 do\n    local value = arr[i]\n    if value ~= nil then\n\
    \      local name = get_name(value)\n      if name then\n        result[#result\
    \ + 1] = name\n      end\n    end\n  end\n  if #arr > 0 then\n    local value\
    \ = arr[#arr]\n    if value ~= nil then\n      local name = get_name(value)\n\
    \      if name then\n        result[#result + 1] = name\n      end\n    end\n\
    \  end\n  return result\nend", "  local result = {}\n  for i = 1, 9 do\n    local\
    \ value = arr[i]\n    if value ~= nil then\n      result[#result + 1] = by_length({value})\n\
    \    end\n  end\n  return result\nend", "  local result = {}\n  for i = 1, 9 do\n\
    \    local value = arr[i]\n    if value ~= nil then\n      result[value] = i\n\
    \    end\n  end\n  table.sort(result)\n  for i = 1, 9 do\n    arr[i] = result[arr[i]]\n\
    \  end\n  return arr\nend", "  local result = {}\n  for i = 1, 9 do\n    local\
    \ value = arr[i]\n    if value ~= nil then\n      result[value] = arr[i]\n   \
    \ end\n  end\n  table.sort(result)\n  for i = 1, 9 do\n    local value = result[i]\n\
    \    if value ~= nil then\n      result[i] = by_length({value})\n    end\n  end\n\
    \  return result\nend", "  local result = {}\n  for i = 1, #arr do\n    local\
    \ value = arr[i]\n    if value >= 1 and value <= 9 then\n      table.insert(result,\
    \ value)\n    end\n  end\n  if #result == 0 then\n    return {}\n  end\n  table.sort(result)\n\
    \  for i = 1, #result do\n    local value = result[i]\n    local name = string.format(\"\
    %g\", value)\n    local index = tonumber(name)\n    if index ~= nil then\n   \
    \   result[i] = name\n    end\n  end\n  return result\nend", "  local result =\
    \ {}\n  for i = 1, #arr do\n    local value = arr[i]\n    if value < 1 or value\
    \ > 9 then\n      -- ignore strange numbers\n      continue\n    end\n    local\
    \ index = math.floor((value - 1) * 10)\n    local name = table.concat({\"One\"\
    , \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\
    }, \"-\")\n    result[index] = name\n  end\n  return result\nend", "  local result\
    \ = {}\n  for i = 1, 9 do\n    local value = arr[i]\n    if value ~= nil then\n\
    \      local name = one_or_nine[value]\n      if name ~= nil then\n        result[#result\
    \ + 1] = name\n      end\n    end\n  end\n  return result\nend", "  local result\
    \ = {}\n  for i = 1, #arr do\n    local length = arr[i]\n    if length > 0 and\
    \ length <= 9 then\n      result[#result + 1] = string.format(\"%g\", length)\n\
    \    end\n  end\n  table.sort(result)\n  for i = 1, #result do\n    result[#result\
    \ + 1] = string.format(\"%g\", result[i])\n  end\n  return result\nend", "  local\
    \ result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n    if value ~= nil\
    \ then\n      result[value] = arr[i]\n    end\n  end\n  return result\nend", " \
    \ local result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n    if value\
    \ ~= nil then\n      result[#result + 1] = by_length({value})\n    else\n    \
    \  result[#result + 1] = by_length({nil})\n    end\n  end\n  return result\nend",
  "  local result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n    if value\
    \ ~= nil then\n      result[value] = arr[i]\n    end\n  end\n  return result\n\
    end", "  local result = {}\n  for i = 1, #arr do\n    local n = arr[i]\n    if\
    \ n > 0 and n < 10 then\n      result[n] = arr[i]\n    end\n  end\n  return result\n\
    end", "  local result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n    if\
    \ value ~= nil then\n      local name = get_name(value)\n      if name ~= nil\
    \ then\n        result[#result + 1] = name\n      end\n    end\n  end\n  if #result\
    \ == 0 then\n    return {}\n  end\n  table.sort(result)\n  for i = 1, 9 do\n \
    \   local value = result[i]\n    if value ~= nil then\n      result[i] = get_name(value)\n\
    \    end\n  end\n  return result\nend", "  local result = {}\n  local length =\
    \ #arr\n  for i = 1, length do\n    local value = arr[i]\n    if value < 1 or\
    \ value > 9 then\n      table.insert(result, value)\n    else\n      local index\
    \ = math.floor((value - 1) * 10)\n      table.insert(result, string.rep(\"One\"\
    , index), string.rep(\"Two\", index), string.rep(\"Three\", index), string.rep(\"\
    Four\", index), string.rep(\"Five\", index), string.rep(\"Six\", index), string.rep(\"\
    Seven\", index), string.rep(\"Eight\", index), string.rep(\"Nine\", index))\n\
    \    end\n  end\n  return result\nend", "  local result = {}\n  for i = 1, 9 do\n\
    \    local value = arr[i]\n    if value ~= nil then\n      result[value] = i\n\
    \    end\n  end\n  table.sort(result)\n  for i = 1, 9 do\n    arr[i] = result[arr[i]]\n\
    \  end\n  return arr\nend", "  local result = {}\n  for i = 1, 9 do\n    local\
    \ value = arr[i]\n    if value ~= nil then\n      local name = string.gsub(value,\
    \ \"^.-\", \"\")\n      if not result[value] then\n        result[value] = name\n\
    \      else\n        result[value] = result[value] .. \", \" .. name\n      end\n\
    \    end\n  end\n  return result\nend", "  local result = {}\n  for i = 1, 9 do\n\
    \    local value = arr[i]\n    if value ~= nil then\n      result[i] = by_length(value)\
    \ or value\n    end\n  end\n  return table.concat(result)\nend", "  local result\
    \ = {}\n  local len = #arr\n  for i = 1, len do\n    local num = arr[i]\n    if\
    \ num > 0 and num <= 9 then\n      result[#result + 1] = string.format(\"%s%s\"\
    , nums[num], nums[num])\n    end\n  end\n  table.sort(result)\n  for i = 1, len\
    \ do\n    arr[i] = result[i]\n  end\n  return arr\nend", "  local result = {}\n\
    \  for i = 1, #arr do\n    local num = arr[i]\n    if num < 1 or num > 9 then\n\
    \      table.insert(result, num)\n    else\n      local name = table.concat({\n\
    \        \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\",\
    \ \"Eight\", \"Nine\"\n      }, \" \")\n      local index = math.floor(math.log2(num))\n\
    \      local digit = num / math.pow(2, index)\n      table.insert(result, name\
    \ .. digit)\n    end\n  end\n  return result\nend", "  local result = {}\n  for\
    \ i = 1, 9 do\n    local value = arr[i]\n    if value ~= nil then\n      result[value]\
    \ = arr[i]\n    end\n  end\n  table.sort(result)\n  for i = 1, 9 do\n    local\
    \ value = result[i]\n    if value ~= nil then\n      result[i] = by_length_table[value]\n\
    \    end\n  end\n  return result\nend", "  local result = {}\n  for i = 1, 9 do\n\
    \    local value = arr[i]\n    if value ~= nil then\n      result[value] = string.format(\"\
    %c\", i)\n    end\n  end\n  return result\nend", "  local result = {}\n  for i\
    \ = 1, #arr do\n    local num = arr[i]\n    if num >= 1 and num <= 9 then\n  \
    \    table.insert(result, tostring(num))\n    end\n  end\n  if #result == 0 then\n\
    \    return {}\n  end\n  table.sort(result)\n  local reversed = {}\n  for i =\
    \ #result, 1, -1 do\n    table.insert(reversed, result[i])\n  end\n  for i = 1,\
    \ #reversed do\n    table.insert(result, tostring(reversed[i]))\n  end\n  return\
    \ result\nend", "  local result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n\
    \    if value ~= nil then\n      local name = string.lower(string.format(\"%g\"\
    , value))\n      if not result[value] then\n        result[value] = name\n   \
    \   else\n        result[value] = result[value] .. \", \" .. name\n      end\n\
    \    end\n  end\n  return result\nend", "  local result = {}\n  for i = 1, #arr\
    \ do\n    local num = arr[i]\n    if num >= 1 and num <= 9 then\n      result[#result\
    \ + 1] = string.format(\"%g\", num)\n    end\n  end\n  if #result > 0 then\n \
    \   table.sort(result, reverse)\n    for i = 1, #result do\n      result[i] =\
    \ by_length(result[i])\n    end\n  end\n  return result\nend", "  local result\
    \ = {}\n  for i = 1, #arr do\n    local n = arr[i]\n    if n > 0 and n < 10 then\n\
    \      result[n] = arr[i]\n    end\n  end\n  return result\nend", "  local result\
    \ = {}\n  for i = 1, 9 do\n    local value = arr[i]\n    if value ~= nil then\n\
    \      result[value] = i\n    end\n  end\n  table.sort(result)\n  for i = 1, 9\
    \ do\n    arr[i] = result[arr[i]]\n  end\n  return arr\nend", "  local result\
    \ = {}\n  for i = 1, #arr do\n    local num = arr[i]\n    if num >= 1 and num\
    \ <= 9 then\n      table.insert(result, tostring(num))\n    end\n  end\n  if #result\
    \ == 0 then\n    return {}\n  end\n  table.sort(result)\n  local index = 1\n \
    \ local length = #result\n  while index <= length do\n    local element = result[index]\n\
    \    local name = tostring(\"One\")\n    if element == tostring(\"One\") then\n\
    \      name = tostring(\"One\")\n    elseif element == tostring(\"Two\") then\n\
    \      name = tostring(\"Two\")\n    elseif element == tostring(\"Three\") then\n\
    \      name = tostring(\"Three\")\n    elseif element == tostring(\"Four\") then\n\
    \      name = tostring(\"Four\")\n    elseif element == tostring(\"Five\") then\n\
    \      name = tostring(\"Five\")\n    elseif element == tostring(\"Six\") then\n\
    \      name = tostring(\"Six\")\n    elseif element == tostring(\"Seven\") then\n\
    \      name = tostring(\"Seven\")\n    elseif element == tostring(\"Eight\") then\n\
    \      name = tostring(\"Eight\")\n    elseif element == tostring(\"Nine\") then\n\
    \      name = tostring(\"Nine\")\n    end\n    table.insert(result, name)\n  \
    \  index = index + 1\n  end\n  return result\nend", "  local result = {}\n  for\
    \ i = 1, 9 do\n    local value = arr[i]\n    if value ~= nil then\n      local\
    \ name = one_or_nine[value] or tostring(value)\n      table.insert(result, name)\n\
    \    end\n  end\n  return result\nend", "  local result = {}\n  for i = 1, #arr\
    \ do\n    local value = arr[i]\n    if value < 1 or value > 9 then\n      -- ignore\
    \ strange numbers\n      result[#result + 1] = value\n    else\n      -- reverse\
    \ the array\n      local tmp = arr\n      tmp[#tmp + 1] = value\n      -- reverse\
    \ the result\n      for j = #tmp - 1, #result do\n        result[j] = result[#result\
    \ - j + 1]\n      end\n      -- replace each digit by its corresponding name\n\
    \      for j = 1, #result do\n        result[j] = _G[tostring(result[j])]\n  \
    \    end\n    end\n  end\n  return result\nend", "  local result = {}\n  for i\
    \ = 1, 9 do\n    local value = arr[i]\n    if value ~= nil then\n      local name\
    \ = one_or_nine[value]\n      if name then\n        result[#result + 1] = name\n\
    \      end\n    end\n  end\n  return result\nend", "  local result = {}\n  for\
    \ i = 1, 9 do\n    local value = arr[i]\n    if value ~= nil then\n      result[#result\
    \ + 1] = string.format(\"%g\", value)\n    end\n  end\n  table.sort(result)\n\
    \  for i = 1, #result do\n    result[i] = by_length_table[result[i]]\n  end\n\
    \  return result\nend", "  local result = {}\n  for i = 1, #arr do\n    local\
    \ num = arr[i]\n    if num < 1 or num > 9 then\n      table.insert(result, num)\n\
    \    else\n      local name = string.format(\"%g\", num)\n      local index =\
    \ tonumber(name)\n      if index then\n        table.insert(result, index)\n \
    \     else\n        table.insert(result, name)\n      end\n    end\n  end\n  return\
    \ result\nend", "  local result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n\
    \    if value ~= nil then\n      result[value] = i\n    end\n  end\n  for i =\
    \ 1, 9 do\n    local value = arr[i]\n    if value ~= nil then\n      arr[value]\
    \ = result[i]\n    end\n  end\n  return result\nend", "  local result = {}\n \
    \ for i = 1, #arr do\n    local value = arr[i]\n    if value <= 9 then\n     \
    \ result[i] = \"One\"\n    elseif value <= 99 then\n      result[i] = \"Two\"\n\
    \    elseif value <= 999 then\n      result[i] = \"Three\"\n    elseif value <=\
    \ 9999 then\n      result[i] = \"Four\"\n    elseif value <= 99999 then\n    \
    \  result[i] = \"Five\"\n    elseif value <= 999999 then\n      result[i] = \"\
    Six\"\n    elseif value <= 9999999 then\n      result[i] = \"Seven\"\n    elseif\
    \ value <= 99999999 then\n      result[i] = \"Eight\"\n    elseif value <= 999999999\
    \ then\n      result[i] = \"Nine\"\n    else\n      assert(false, \"Invalid number\
    \ in array: \" .. tostring(value))\n    end\n  end\n  return result\nend", " \
    \ local result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n    if value\
    \ ~= nil then\n      result[#result + 1] = string.format(\"%g\", value)\n    end\n\
    \  end\n  table.sort(result)\n  for i = 1, #result do\n    result[i] = by_length(result[i])\n\
    \  end\n  return result\nend", "  local result = {}\n  for i = 1, #arr do\n  \
    \  local num = arr[i]\n    if num < 1 or num > 9 then\n      table.insert(result,\
    \ num)\n    else\n      local index = math.floor(math.log10(num) + 1)\n      local\
    \ digit = math.floor(num / math.pow(10, index))\n      table.insert(result, string.format(\"\
    %g\", digit))\n    end\n  end\n  return result\nend", "  local result = {}\n \
    \ for i = 1, 9 do\n    local value = arr[i]\n    if value ~= nil then\n      local\
    \ name = tonumber(string.format(\"%g\", value))\n      if name ~= nil then\n \
    \       result[#result + 1] = name\n      end\n    end\n  end\n  if #result ==\
    \ 0 then\n    return {}\n  end\n  table.sort(result)\n  for i = 1, 9 do\n    local\
    \ value = result[i]\n    if value ~= nil then\n      result[i] = string.format(\"\
    %g\", value)\n    end\n  end\n  return result\nend", "  local result = {}\n  for\
    \ i = 1, #arr do\n    local length = math.floor(math.log10(arr[i]))\n    if length\
    \ == 0 then\n      length = 2\n    end\n    local digits = math.pow(10, length)\n\
    \    local digit = math.floor(arr[i] / digits)\n    local name = string.rep(\"\
    One\", digit)\n    result[#result + 1] = name\n  end\n  table.sort(result)\n \
    \ for i = 1, #result do\n    result[i] = result[i]:sub(1, #result[i])\n  end\n\
    \  return result\nend", "  if #arr == 0 then\n    return {}\n  end\n  local result\
    \ = {}\n  local i = 0\n  while i < #arr do\n    local value = arr[i]\n    local\
    \ length = math.floor(math.log(value) / math.log(10))\n    if length == 0 then\n\
    \      length = 9\n    end\n    local digit = math.floor((value / math.pow(10,\
    \ length)) * 10)\n    local name = string.sub(names, math.floor(length / 2), math.floor(length\
    \ / 2) + 1)\n    result[#result + 1] = name .. digit\n    i = i + 1\n  end\n \
    \ return result\nend", "  local result = {}\n  for i = 1, #arr do\n    local value\
    \ = arr[i]\n    if value <= 9 then\n      result[value] = arr[i]\n    end\n  end\n\
    \  return result\nend", "  if #arr == 0 then\n    return {}\n  end\n  local result\
    \ = {}\n  local i = 1\n  while i <= 9 do\n    local j = i\n    while j <= 9 do\n\
    \      if arr[i] <= arr[j] then\n        table.insert(result, tostring(j))\n \
    \     end\n      j = j + 1\n    end\n    i = i + 1\n  end\n  return result\nend",
  "  local result = {}\n  for i = 1, #arr do\n    local length = arr[i]\n    if length\
    \ > 0 and length <= 9 then\n      result[length] = arr[i]\n    end\n  end\n  return\
    \ result\nend", "  local result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n\
    \    if value ~= nil then\n      result[value] = i\n    end\n  end\n  table.sort(result)\n\
    \  for i = 1, 9 do\n    arr[i] = result[arr[i]]\n  end\n  return arr\nend", " \
    \ local result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n    if value\
    \ ~= nil then\n      result[value] = i\n    end\n  end\n  for i = 1, 9 do\n  \
    \  local value = arr[i]\n    if value ~= nil then\n      arr[value] = result[i]\n\
    \    end\n  end\n  return result\nend", "  local result = {}\n  for i = 1, #arr\
    \ do\n    local length = arr[i]\n    if length > 0 and length <= 9 then\n    \
    \  result[length] = arr[i]\n    end\n  end\n  return result\nend", "  local result\
    \ = {}\n  local i = 0\n  while i < #arr do\n    local value = arr[i]\n    if value\
    \ < 1 or value > 9 then\n      break\n    end\n    table.insert(result, value)\n\
    \    i = i + 1\n  end\n  table.sort(result)\n  for i = #result, 1, -1 do\n   \
    \ arr[i] = result[i]\n  end\n  return result\nend", "  local result = {}\n  for\
    \ i = 1, 9 do\n    local value = arr[i]\n    if value ~= nil then\n      local\
    \ name = ones[value] or twos[value] or threes[value] or fours[value] or fives[value]\
    \ or sixes[value] or sevens[value] or eights[value] or nines[value]\n      if\
    \ name then\n        result[#result + 1] = name\n      end\n    end\n  end\n \
    \ return result\nend", "  local result = {}\n  for i = 1, 9 do\n    local value\
    \ = arr[i]\n    if value ~= nil then\n      result[value] = arr[i]\n    end\n\
    \  end\n  if #arr > 0 then\n    for i = 9, 1, -1 do\n      local value = arr[i]\n\
    \      if value ~= nil then\n        result[value] = arr[i]\n      end\n    end\n\
    \  end\n  return result\nend", "  local result = {}\n  for i = 1, #arr do\n  \
    \  local num = arr[i]\n    if num >= 1 and num <= 9 then\n      table.insert(result,\
    \ tostring(num))\n    end\n  end\n  if #result == 0 then\n    return {}\n  end\n\
    \  table.sort(result)\n  for i = 1, #result do\n    local num = result[i]\n  \
    \  local name = tostring(i)\n    if num >= 1 and num <= 9 then\n      result[i]\
    \ = name\n    end\n  end\n  return result\nend", "  local result = {}\n  for i\
    \ = 1, 9 do\n    local value = arr[i]\n    if value ~= nil then\n      result[value]\
    \ = i\n    end\n  end\n  for i = 1, 9 do\n    local value = arr[i]\n    if value\
    \ ~= nil then\n      arr[value] = result[i]\n    end\n  end\n  return result\n\
    end", "  local result = {}\n  for i = 1, #arr do\n    local num = arr[i]\n   \
    \ if num < 1 or num > 9 then\n      table.insert(result, num)\n    else\n    \
    \  local index = math.floor(math.log10(num))\n      local digit = num / math.pow(10,\
    \ index)\n      local name = string.format(\"%g\", digit)\n      table.insert(result,\
    \ name)\n    end\n  end\n  return result\nend", "  local result = {}\n  for i\
    \ = 1, #arr do\n    local num = arr[i]\n    if num > 0 and num <= 9 then\n   \
    \   table.insert(result, tostring(num))\n    end\n  end\n  table.sort(result)\n\
    \  for i = 1, #result do\n    local num = result[i]\n    local name = tostring(i)\n\
    \    if num ~= i then\n      result[i] = name\n    end\n  end\n  return result\n\
    end", "  local result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n    if\
    \ value ~= nil then\n      result[#result + 1] = string.format(\"%g\", value)\n\
    \    end\n  end\n  table.sort(result)\n  for i = 1, #result do\n    result[i]\
    \ = by_length_table[result[i]]\n  end\n  return result\nend", "  local result\
    \ = {}\n  for i = 1, #arr do\n    local length = arr[i]\n    if length == 0 then\n\
    \      break\n    end\n    local index = math.floor(math.log10(length) + 1)\n\
    \    local digit = math.pow(10, index)\n    local name = string.format(\"%g\"\
    , length / digit)\n    if digit == 1 then\n      name = string.format(\"One\"\
    , name)\n    elseif digit == 2 then\n      name = string.format(\"Two\", name)\n\
    \    elseif digit == 3 then\n      name = string.format(\"Three\", name)\n   \
    \ elseif digit == 4 then\n      name = string.format(\"Four\", name)\n    elseif\
    \ digit == 5 then\n      name = string.format(\"Five\", name)\n    elseif digit\
    \ == 6 then\n      name = string.format(\"Six\", name)\n    elseif digit == 7\
    \ then\n      name = string.format(\"Seven\", name)\n    elseif digit == 8 then\n\
    \      name = string.format(\"Eight\", name)\n    elseif digit == 9 then\n   \
    \   name = string.format(\"Nine\", name)\n    end\n    result[i] = name\n  end\n\
    \  return result\nend", "  local result = {}\n  for i = 1, #arr do\n    local\
    \ value = arr[i]\n    if value < 1 or value > 9 then\n      table.insert(result,\
    \ value)\n    else\n      local index = math.floor((value - 1) * 10)\n      table.insert(result,\
    \ arr[index])\n      arr[index] = value\n    end\n  end\n  return result\nend",
  "  local result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n    if value\
    \ ~= nil then\n      result[i] = by_length(value) or value\n    end\n  end\n \
    \ return result\nend", "  local result = {}\n  for i = 1, #arr do\n    local value\
    \ = arr[i]\n    if value < 1 or value > 9 then\n      table.insert(result, value)\n\
    \    else\n      local index = math.floor((value - 1) * 10)\n      table.insert(result,\
    \ string.rep(\"One\", index)) .. string.rep(\"Two\", index) .. string.rep(\"Three\"\
    , index) .. string.rep(\"Four\", index) .. string.rep(\"Five\", index) .. string.rep(\"\
    Six\", index) .. string.rep(\"Seven\", index) .. string.rep(\"Eight\", index)\
    \ .. string.rep(\"Nine\", index)\n    end\n  end\n  return result\nend", "  local\
    \ result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n    if value ~= nil\
    \ then\n      result[i] = by_length(value) or value\n    end\n  end\n  return\
    \ table.concat(result)\nend", "  local result = {}\n  for i = 1, 9 do\n    local\
    \ value = arr[i]\n    if value ~= nil then\n      result[i] = by_length({value})\n\
    \    else\n      table.insert(result, i)\n    end\n  end\n  return result\nend",
  "  local result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n    if value\
    \ ~= nil then\n      result[#result + 1] = string.format(\"%g\", value)\n    end\n\
    \  end\n  if #arr > 0 then\n    table.sort(result)\n    for i = 1, #result do\n\
    \      result[i] = by_length(result[i])\n    end\n  end\n  return result\nend",
  "  local result = {}\n  for i = 1, #arr do\n    local num = arr[i]\n    if num <\
    \ 1 or num > 9 then\n      table.insert(result, num)\n    else\n      local index\
    \ = math.floor(math.log(num, 10))\n      local digit = math.floor(num / math.pow(10,\
    \ index))\n      local name = string.format(\"%g\", digit)\n      table.insert(result,\
    \ name)\n    end\n  end\n  return result\nend", "  local result = {}\n  for i\
    \ = 1, 9 do\n    local value = arr[i]\n    if value ~= nil then\n      result[#result\
    \ + 1] = by_length({value})\n    end\n  end\n  if #arr == 0 then\n    return result\n\
    \  end\n  local result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n   \
    \ if value ~= nil then\n      result[#result + 1] = by_length({value})\n    end\n\
    \  end\n  return result\nend", "  local result = {}\n  for i = 1, 9 do\n    local\
    \ value = arr[i]\n    if value ~= nil then\n      local name = math.floor(value/10)\
    \ + string.format(\"%0*d\", 2, math.modf(value/10)[1])\n      result[name] = name\n\
    \    end\n  end\n  return result\nend", "  local result = {}\n  for i = 1, 9 do\n\
    \    local value = arr[i]\n    if value ~= nil then\n      result[#result + 1]\
    \ = string.format(\"%g\", value)\n    end\n  end\n  table.sort(result)\n  for\
    \ i = 1, #result do\n    result[#result + 1] = by_length_table[result[i]]\n  end\n\
    \  return result\nend", "  local result = {}\n  for i = 1, 9 do\n    local value\
    \ = arr[i]\n    if value then\n      result[i] = by_length(value) or value\n \
    \   end\n  end\n  return result\nend", "  local result = {}\n  for i = 1, 9 do\n\
    \    local value = arr[i]\n    if value ~= nil then\n      result[#result + 1]\
    \ = string.format(\"%g\", value)\n    end\n  end\n  table.sort(result, function(a,\
    \ b) return a < b end)\n  for i = 1, #result do\n    result[#result + 1] = string.format(\"\
    %g\", result[i])\n  end\n  return result\nend", "  local result = {}\n  for i\
    \ = 1, 9 do\n    local num = arr[i]\n    if num then\n      local name = digits[math.floor(math.log2(num))]\n\
    \      if not name then\n        error(\"invalid number in array\")\n      end\n\
    \      result[i] = name\n    end\n  end\n  table.sort(result)\n  for i = 1, 9\
    \ do\n    local num = arr[i]\n    if num then\n      local name = digits[math.floor(math.log2(num))]\n\
    \      if not name then\n        error(\"invalid number in array\")\n      end\n\
    \      arr[i] = name\n    end\n  end\n  return result\nend", "  local result =\
    \ {}\n  for i = 1, 9 do\n    local value = arr[i]\n    if value ~= nil then\n\
    \      local name = value\n      if value < 10 then\n        name = string.format('%g',\
    \ value)\n      elseif value < 100 then\n        name = string.format('%g', value/10)\n\
    \      elseif value < 1000 then\n        name = string.format('%g', value/100)\n\
    \      elseif value < 10000 then\n        name = string.format('%g', value/1000)\n\
    \      elseif value < 100000 then\n        name = string.format('%g', value/10000)\n\
    \      elseif value < 1000000 then\n        name = string.format('%g', value/100000)\n\
    \      elseif value < 10000000 then\n        name = string.format('%g', value/1000000)\n\
    \      elseif value < 100000000 then\n        name = string.format('%g', value/10000000)\n\
    \      elseif value < 1000000000 then\n        name = string.format('%g', value/100000000)\n\
    \      elseif value < 10000000000 then\n        name = string.format('%g', value/1000000000)\n\
    \      elseif value < 100000000000 then\n        name = string.format('%g', value/10000000000)\n\
    \      elseif value < 1000000000000 then\n        name = string.format('%g', value/100000000000)\n\
    \      elseif value < 10000000000000 then\n        name = string.format('%g',\
    \ value/1000000000000)\n      elseif value < 100000000000000 then\n        name\
    \ = string.format('%g', value/10000000000000)\n      elseif value < 1000000000000000\
    \ then\n        name = string.format('%g', value/100000000000000)\n      elseif\
    \ value < 10000000000000000 then\n        name = string.format('%g', value/1000000000000000)\n\
    \      elseif value < 100000000000000000 then\n        name = string.format('%g',\
    \ value/10000000000000000)\n      elseif value < 100000000000000000 then\n   \
    \     name = string.format('%g', value/100000000000000000)\n      elseif value\
    \ < 1000000000000000000 then\n        name = string.format('%g', value/100000000000000000)\n\
    \      else\n        name = string.format('%g', value/1000000000000000000)\n \
    \     end\n      table.insert(result, name)\n    end\n  end\n  return result\n\
    end", "  local result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n    if\
    \ value ~= nil then\n      local name = string.format(\"%g\", value)\n      local\
    \ index = math.floor(math.log(value) / math.log(10))\n      name = string.format(\"\
    %g\", 10 ** index * value)\n      result[i] = name\n    end\n  end\n  return result\n\
    end", "  local result = {}\n  for i = 1, #arr do\n    local num = arr[i]\n   \
    \ if num > 9 then\n      local digit = math.floor(num / 10)\n      local name\
    \ = string.format(\"%c\", digit)\n      local rest = num - 10 * digit\n      local\
    \ reversed = by_length({rest})\n      for j = 1, #reversed do\n        table.insert(result,\
    \ name .. reversed[j])\n      end\n    else\n      table.insert(result, num)\n\
    \    end\n  end\n  return result\nend", "  local result = {}\n  for i = 1, 9 do\n\
    \    local value = arr[i]\n    if value ~= nil then\n      result[i] = by_length(value)\
    \ or value\n    end\n  end\n  if #arr == 0 then\n    return result\n  end\n  local\
    \ names = {\n    ['One'] = 1,\n    ['Two'] = 2,\n    ['Three'] = 3,\n    ['Four']\
    \ = 4,\n    ['Five'] = 5,\n    ['Six'] = 6,\n    ['Seven'] = 7,\n    ['Eight']\
    \ = 8,\n    ['Nine'] = 9\n  }\n  for i = 1, 9 do\n    local value = arr[i]\n \
    \   if value ~= nil then\n      local name = names[i]\n      if value >= 1 and\
    \ value <= 9 then\n        arr[i] = name\n      end\n    end\n  end\n  return\
    \ result\nend", "  local result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n\
    \    if value ~= nil then\n      result[#result + 1] = string.format(\"%g\", value)\n\
    \    end\n  end\n  table.sort(result)\n  for i = 1, #result do\n    result[i]\
    \ = by_length_table[result[i]]\n  end\n  return result\nend", "  local result\
    \ = {}\n  for i = 1, #arr do\n    local length = arr[i]\n    if length > 0 and\
    \ length <= 9 then\n      result[length] = arr[i]\n    end\n  end\n  if #result\
    \ == 0 then\n    return {}\n  end\n  table.sort(result)\n  for i = 1, #result\
    \ do\n    result[i] = \"One\"..result[i]\n  end\n  return result\nend", "  local\
    \ result = {}\n  for i = 1, #arr do\n    if arr[i] <= 9 then\n      result[#result\
    \ + 1] = arr[i]\n    end\n  end\n  table.sort(result)\n  for i = 1, #result do\n\
    \    result[#result + 1] = by_length_table[result[i]]\n  end\n  return result\n\
    end", "  if #arr == 0 then\n    return {}\n  end\n  local result = {}\n  local\
    \ length = math.floor(math.sqrt(#arr))\n  for i = 1, length do\n    local pivot\
    \ = math.floor((i + length) / 2)\n    local pivot = arr[i]\n    local left = arr[pivot\
    \ - 1]\n    local right = arr[pivot]\n    if pivot > 1 then\n      result[#result\
    \ + 1] = arr[pivot - 2]\n    end\n    if pivot < #arr then\n      result[#result\
    \ + 1] = arr[pivot]\n    end\n    if pivot > 1 then\n      result[#result + 1]\
    \ = arr[pivot - 1]\n    end\n    if pivot < #arr then\n      result[#result +\
    \ 1] = arr[pivot + 1]\n    end\n    if pivot > 1 then\n      result[#result +\
    \ 1] = arr[pivot + 2]\n    end\n    if pivot < #arr then\n      result[#result\
    \ + 1] = arr[pivot + 1]\n    end\n    if pivot > 1 then\n      result[#result\
    \ + 1] = arr[pivot - 2]\n    end\n    if pivot < #arr then\n      result[#result\
    \ + 1] = arr[pivot - 1]\n    end\n    if pivot > 1 then\n      result[#result\
    \ + 1] = arr[pivot + 2]\n    end\n    if pivot < #arr then\n      result[#result\
    \ + 1] = arr[pivot + 1]\n    end\n    if pivot > 1 then\n      result[#result\
    \ + 1] = arr[pivot - 2]\n    end\n    if pivot < #arr then\n      result[#result\
    \ + 1] = arr[pivot - 1]\n    end\n    if pivot > 1 then\n      result[#result\
    \ + 1] = arr[pivot + 2]\n    end\n    if pivot < #arr then\n      result[#result\
    \ + 1] = arr[pivot + 1]\n    end\n    if pivot > 1 then\n      result[#result\
    \ + 1] = arr[pivot - 2]\n    end\n    if pivot < #arr then\n      result[#result\
    \ + 1] = arr[pivot - 1]\n    end\n    if pivot > 1 then\n      result[#result\
    \ + 1] = arr[pivot + 2]\n    end\n    if pivot < #arr then\n      result[#result\
    \ + 1] = arr[pivot + 1]\n    end\n    if pivot > 1 then\n      result[#result\
    \ + 1] = arr[pivot - 2]\n    end\n    if pivot < #arr then\n      result[#result\
    \ + 1] = arr[pivot - 1]\n    end\n    if pivot > 1 then\n      result[#result\
    \ + 1] = arr[pivot + 2]\n    end\n    if pivot < #arr", "  local result = {}\n\
    \  for i = 1, #arr do\n    local num = arr[i]\n    if num < 1 or num > 9 then\n\
    \      table.insert(result, num)\n    else\n      local name = table.unpack(\n\
    \        table.sort(\n          table.unpack(\n            string.rep(\"One\"\
    , num - 1) + string.rep(\"Two\", num - 2) + string.rep(\"Three\", num - 3) + string.rep(\"\
    Four\", num - 4) + string.rep(\"Five\", num - 5) + string.rep(\"Six\", num - 6)\
    \ + string.rep(\"Seven\", num - 7) + string.rep(\"Eight\", num - 8) + string.rep(\"\
    Nine\", num - 9)\n          )\n        )\n      )\n      table.insert(result,\
    \ name)\n    end\n  end\n  return result\nend", "  local result = {}\n  for i\
    \ = 1, #arr do\n    local num = arr[i]\n    if num < 1 or num > 9 then\n     \
    \ table.insert(result, num)\n    else\n      local name = string.gsub(tostring(num),\
    \ \"^.-\", \"\")\n      table.insert(result, name)\n    end\n  end\n  return result\n\
    end", "  local result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n    if\
    \ value ~= nil then\n      local name = string.format(\"%g\", value)\n      name\
    \ = string.gsub(name, \"^0*\", \"\")\n      name = string.gsub(name, \"^%+?\"\
    , \"\")\n      name = string.gsub(name, \"^%?(%d+)$\", string.format(\"%g\", value))\n\
    \      table.insert(result, name)\n    end\n  end\n  return result\nend", "  local\
    \ result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n    if value ~= nil\
    \ then\n      local name = one_or_nine[value]\n      if name ~= nil then\n   \
    \     result[#result + 1] = name\n      end\n    end\n  end\n  return result\n\
    end", "  local result = {}\n  for i = 1, #arr do\n    local value = arr[i]\n \
    \   if value < 1 or value > 9 then\n      table.insert(result, value)\n    else\n\
    \      local index = math.floor((value - 1) * 10)\n      table.insert(result,\
    \ string.rep(\"One\", index), string.rep(\"Two\", index), string.rep(\"Three\"\
    , index), string.rep(\"Four\", index), string.rep(\"Five\", index), string.rep(\"\
    Six\", index), string.rep(\"Seven\", index), string.rep(\"Eight\", index), string.rep(\"\
    Nine\", index))\n    end\n  end\n  return result\nend", "  local result = {}\n\
    \  for i = 1, #arr do\n    local length = arr[i]\n    if length <= 9 then\n  \
    \    result[length] = arr[i]\n    end\n  end\n  return result\nend", "  local\
    \ result = {}\n  for i = 1, 9 do\n    local value = arr[i]\n    if value ~= nil\
    \ then\n      result[i] = by_length(value) or value\n    end\n  end\n  return\
    \ result\nend", "  local result = {}\n  local i = 0\n  while i < #arr do\n   \
    \ local value = arr[i]\n    if value < 1 or value > 9 then\n      i = i + 1\n\
    \      continue\n    end\n    local name = one_to_nine[value - 1]\n    if name\
    \ then\n      result[i] = name\n      i = i + 1\n    end\n  end\n  if i == #arr\
    \ then\n    return {}\n  end\n  return result\nend", "  local result = {}\n  for\
    \ i = 1, 9 do\n    local value = arr[i]\n    if value ~= nil then\n      result[value]\
    \ = arr[i]\n    end\n  end\n  return result\nend", "  local result = {}\n  for\
    \ i = 1, #arr do\n    local value = arr[i]\n    if value < 1 or value > 9 then\n\
    \      table.insert(result, value)\n    else\n      local index = math.floor((value\
    \ - 1) * 10)\n      table.insert(result, names[index])\n    end\n  end\n  return\
    \ result\nend", "  local result = {}\n  for i = 1, #arr do\n    local num = arr[i]\n\
    \    if num > 0 and num <= 9 then\n      local name = string.format(\"%g\", num)\n\
    \      result[i] = name\n    end\n  end\n  return result\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

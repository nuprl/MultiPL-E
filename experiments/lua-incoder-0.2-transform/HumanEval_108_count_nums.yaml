name: HumanEval_108_count_nums
language: lua
prompt: "-- Write a function count_nums which takes an array of integers and returns\n\
  -- the number of elements which has a sum of digits > 0.\n-- If a number is negative,\
  \ then its first signed digit will be negative:\n-- e.g. -123 has signed digits\
  \ -1, 2, and 3.\n-- >>> count_nums({})\n-- 0\n-- >>> count_nums({-1, 11, -11})\n\
  -- 1\n-- >>> count_nums({1, 1, 2})\n-- 3\nlocal function count_nums(arr)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_nums\n\
  \    lu.assertEquals(candidate({}), 0)\n    lu.assertEquals(candidate({-1, -2, 0}),\
  \ 0)\n    lu.assertEquals(candidate({1, 1, 2, -2, 3, 4, 5}), 6)\n    lu.assertEquals(candidate({1,\
  \ 6, 9, -6, 0, 1, 5}), 5)\n    lu.assertEquals(candidate({1, 100, 98, -7, 1, -1}),\
  \ 4)\n    lu.assertEquals(candidate({12, 23, 34, -45, -56, 0}), 5)\n    lu.assertEquals(candidate({0,\
  \ 1}), 1)\n    lu.assertEquals(candidate({1}), 1)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local n = 0\n  for i = 1, #arr do\n    local n = n + arr[i]\n   \
    \ if n < 0 then\n      n = n * -1\n      n = n + arr[i]\n    end\n  end\n  return\
    \ n\nend", "  local n = 0\n  for i = 1, #arr do\n    local v = arr[i]\n    if\
    \ v > 0 then\n      n = n + 1\n    end\n  end\n  return n\nend", "  local count\
    \ = 0\n  for i = 1, #arr do\n    local n = arr[i]\n    if n >= 0 then\n      count\
    \ = count + 1\n      n = math.abs(n)\n      while n >= 10 do\n        n = math.floor(n/10)\n\
    \        count = count + 1\n      end\n    end\n  end\n  return count\nend", " \
    \ local n = 0\n  for i = 1, #arr do\n    local n = n + math.abs(arr[i])\n  end\n\
    \  return n\nend", "  local n = 0\n  for i = 1, #arr do\n    local digits = arr:sub(i,\
    \ i):gsub(\"%d+\", \"\")\n    if digits ~= \"\" then\n      n = n + 1\n    end\n\
    \  end\n  return n\nend", "  local n = 0\n  for i = 1, #arr do\n    local v =\
    \ arr[i]\n    if v > 0 then\n      n = n + 1\n    end\n  end\n  return n\nend",
  "  local n = 0\n  for i = 1, #arr do\n    local digit = math.abs(arr[i])\n    if\
    \ digit > 0 then\n      n = n + 1\n    end\n  end\n  return n\nend", "  local\
    \ n = 0\n  for i = 1, #arr do\n    local n = n + math.abs(arr[i])\n  end\n  return\
    \ n\nend", "  local n = 0\n  for i = 1, #arr do\n    local v = arr[i]\n    if\
    \ v < 0 then\n      v = -v\n      n = n + 1\n    end\n    local sum = 0\n    for\
    \ j = 1, 10 do\n      sum = sum + v % 10\n      v = v / 10\n      if v == 0 then\n\
    \        break\n      end\n    end\n    if sum > 0 then\n      n = n + 1\n   \
    \ end\n  end\n  return n\nend", "  -- Write your code here.\n  local count = 0\n\
    \  for i = 1, #arr do\n    local num = arr[i]\n    if num < 0 then\n      num\
    \ = -num\n    end\n    count = count + math.floor(math.log(abs(num), 10))\n  end\n\
    \  return count\nend", "  -- Write your code here\n  local sum = 0\n  for i =\
    \ 1, #arr do\n    sum = sum + arr[i]\n  end\n  return sum\nend", "  local n =\
    \ 0\n  for i = 1, #arr do\n    local n = n + arr[i]\n    if n < 0 then\n     \
    \ n = n * -1\n    end\n  end\n  return n\nend", "  local n = 0\n  for i = 1, #arr\
    \ do\n    local n = n + (arr[i] > 0 and arr[i] or -arr[i])\n  end\n  return n\n\
    end", "  local n = 0\n  for i = 1, #arr do\n    local v = arr[i]\n    if v < 0\
    \ then\n      v = -v\n    end\n    if v % 10 == 0 then\n      n = n + 1\n    end\n\
    \  end\n  return n\nend", "  local count = 0\n  for i = 1, #arr do\n    local\
    \ num = arr[i]\n    if num < 0 then\n      num = -num\n    end\n    count = count\
    \ + math.floor(math.log(num, 10)) + 1\n  end\n  return count\nend", "  local n\
    \ = 0\n  for i = 1, #arr do\n    local v = arr[i]\n    if v > 0 then\n      n\
    \ = n + 1\n    end\n  end\n  return n\nend", "  local n = 0\n  for i = 1, #arr\
    \ do\n    local v = arr[i]\n    if v < 0 then\n      v = -v\n    end\n    v =\
    \ v % 10\n    if v > 0 then\n      n = n + 1\n    end\n  end\n  return n\nend",
  "  local n = 0\n  for i = 1, #arr do\n    local n = n + math.abs(arr[i])\n  end\n\
    \  return n\nend", "  local count = 0\n  for i = 1, #arr do\n    local n = arr[i]\n\
    \    if n > 0 then\n      count = count + math.floor(math.log10(n)) + 1\n    end\n\
    \  end\n  return count\nend", "  local n = 0\n  for i = 1, #arr do\n    local\
    \ n = n + math.abs(arr[i])\n  end\n  return n\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

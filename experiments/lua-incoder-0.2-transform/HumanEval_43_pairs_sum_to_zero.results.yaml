language: lua
name: HumanEval_43_pairs_sum_to_zero
results:
- exit_code: 1
  program: "-- pairs_sum_to_zero takes a list of integers as an input.\n-- it returns\
    \ True if there are two distinct elements in the list that\n-- sum to zero, and\
    \ False otherwise.\n-- >>> pairs_sum_to_zero({1, 3, 5, 0})\n-- false\n-- >>> pairs_sum_to_zero({1,\
    \ 3, -2, 1})\n-- false\n-- >>> pairs_sum_to_zero({1, 2, 3, 7})\n-- false\n-- >>>\
    \ pairs_sum_to_zero({2, 4, -5, 3, 5, 7})\n-- true\n-- >>> pairs_sum_to_zero({1})\n\
    -- false\nlocal function pairs_sum_to_zero(l)\n  local pairs = {}\n  for _, v\
    \ in pairs(l) do\n    pairs[v] = true\n  end\n  for _, v in pairs(l) do\n    if\
    \ pairs[v] then\n      return false\n    end\n  end\n  return true\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = pairs_sum_to_zero\n\
    \    lu.assertEquals(candidate({1, 3, 5, 0}), false)\n    lu.assertEquals(candidate({1,\
    \ 3, -2, 1}), false)\n    lu.assertEquals(candidate({1, 2, 3, 7}), false)\n  \
    \  lu.assertEquals(candidate({2, 4, -5, 3, 5, 7}), true)\n    lu.assertEquals(candidate({1}),\
    \ false)\n    lu.assertEquals(candidate({-3, 9, -1, 3, 2, 30}), true)\n    lu.assertEquals(candidate({-3,\
    \ 9, -1, 3, 2, 31}), true)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 30}),\
    \ false)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 31}), false)\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpue77c2fz.lua:16:\
    \ attempt to call local 'pairs' (a table value)\nstack traceback:\n\t/tmp/tmpue77c2fz.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmpue77c2fz.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750528
- exit_code: 1
  program: "-- pairs_sum_to_zero takes a list of integers as an input.\n-- it returns\
    \ True if there are two distinct elements in the list that\n-- sum to zero, and\
    \ False otherwise.\n-- >>> pairs_sum_to_zero({1, 3, 5, 0})\n-- false\n-- >>> pairs_sum_to_zero({1,\
    \ 3, -2, 1})\n-- false\n-- >>> pairs_sum_to_zero({1, 2, 3, 7})\n-- false\n-- >>>\
    \ pairs_sum_to_zero({2, 4, -5, 3, 5, 7})\n-- true\n-- >>> pairs_sum_to_zero({1})\n\
    -- false\nlocal function pairs_sum_to_zero(l)\n  local pairs = {}\n  for _, v\
    \ in pairs(l) do\n    pairs[v] = true\n  end\n  for _, v in pairs(l) do\n    if\
    \ pairs[v] then\n      return false\n    end\n  end\n  return true\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = pairs_sum_to_zero\n\
    \    lu.assertEquals(candidate({1, 3, 5, 0}), false)\n    lu.assertEquals(candidate({1,\
    \ 3, -2, 1}), false)\n    lu.assertEquals(candidate({1, 2, 3, 7}), false)\n  \
    \  lu.assertEquals(candidate({2, 4, -5, 3, 5, 7}), true)\n    lu.assertEquals(candidate({1}),\
    \ false)\n    lu.assertEquals(candidate({-3, 9, -1, 3, 2, 30}), true)\n    lu.assertEquals(candidate({-3,\
    \ 9, -1, 3, 2, 31}), true)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 30}),\
    \ false)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 31}), false)\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpue77c2fz.lua:16:\
    \ attempt to call local 'pairs' (a table value)\nstack traceback:\n\t/tmp/tmpue77c2fz.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmpue77c2fz.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750528
- exit_code: 1
  program: "-- pairs_sum_to_zero takes a list of integers as an input.\n-- it returns\
    \ True if there are two distinct elements in the list that\n-- sum to zero, and\
    \ False otherwise.\n-- >>> pairs_sum_to_zero({1, 3, 5, 0})\n-- false\n-- >>> pairs_sum_to_zero({1,\
    \ 3, -2, 1})\n-- false\n-- >>> pairs_sum_to_zero({1, 2, 3, 7})\n-- false\n-- >>>\
    \ pairs_sum_to_zero({2, 4, -5, 3, 5, 7})\n-- true\n-- >>> pairs_sum_to_zero({1})\n\
    -- false\nlocal function pairs_sum_to_zero(l)\n  local pairs = {}\n  for _, v\
    \ in pairs(l) do\n    pairs[v] = true\n  end\n  for _, v in pairs(l) do\n    if\
    \ not pairs[v] then\n      return false\n    end\n  end\n  return true\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = pairs_sum_to_zero\n\
    \    lu.assertEquals(candidate({1, 3, 5, 0}), false)\n    lu.assertEquals(candidate({1,\
    \ 3, -2, 1}), false)\n    lu.assertEquals(candidate({1, 2, 3, 7}), false)\n  \
    \  lu.assertEquals(candidate({2, 4, -5, 3, 5, 7}), true)\n    lu.assertEquals(candidate({1}),\
    \ false)\n    lu.assertEquals(candidate({-3, 9, -1, 3, 2, 30}), true)\n    lu.assertEquals(candidate({-3,\
    \ 9, -1, 3, 2, 31}), true)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 30}),\
    \ false)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 31}), false)\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpe0hjtuej.lua:16:\
    \ attempt to call local 'pairs' (a table value)\nstack traceback:\n\t/tmp/tmpe0hjtuej.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmpe0hjtuej.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750528
- exit_code: 1
  program: "-- pairs_sum_to_zero takes a list of integers as an input.\n-- it returns\
    \ True if there are two distinct elements in the list that\n-- sum to zero, and\
    \ False otherwise.\n-- >>> pairs_sum_to_zero({1, 3, 5, 0})\n-- false\n-- >>> pairs_sum_to_zero({1,\
    \ 3, -2, 1})\n-- false\n-- >>> pairs_sum_to_zero({1, 2, 3, 7})\n-- false\n-- >>>\
    \ pairs_sum_to_zero({2, 4, -5, 3, 5, 7})\n-- true\n-- >>> pairs_sum_to_zero({1})\n\
    -- false\nlocal function pairs_sum_to_zero(l)\n  local pairs = {}\n  for _, v\
    \ in pairs(l) do\n    pairs[v] = true\n  end\n  for _, v in pairs(l) do\n    if\
    \ pairs[v] then\n      return false\n    end\n  end\n  return true\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = pairs_sum_to_zero\n\
    \    lu.assertEquals(candidate({1, 3, 5, 0}), false)\n    lu.assertEquals(candidate({1,\
    \ 3, -2, 1}), false)\n    lu.assertEquals(candidate({1, 2, 3, 7}), false)\n  \
    \  lu.assertEquals(candidate({2, 4, -5, 3, 5, 7}), true)\n    lu.assertEquals(candidate({1}),\
    \ false)\n    lu.assertEquals(candidate({-3, 9, -1, 3, 2, 30}), true)\n    lu.assertEquals(candidate({-3,\
    \ 9, -1, 3, 2, 31}), true)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 30}),\
    \ false)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 31}), false)\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpue77c2fz.lua:16:\
    \ attempt to call local 'pairs' (a table value)\nstack traceback:\n\t/tmp/tmpue77c2fz.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmpue77c2fz.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750528
- exit_code: 1
  program: "-- pairs_sum_to_zero takes a list of integers as an input.\n-- it returns\
    \ True if there are two distinct elements in the list that\n-- sum to zero, and\
    \ False otherwise.\n-- >>> pairs_sum_to_zero({1, 3, 5, 0})\n-- false\n-- >>> pairs_sum_to_zero({1,\
    \ 3, -2, 1})\n-- false\n-- >>> pairs_sum_to_zero({1, 2, 3, 7})\n-- false\n-- >>>\
    \ pairs_sum_to_zero({2, 4, -5, 3, 5, 7})\n-- true\n-- >>> pairs_sum_to_zero({1})\n\
    -- false\nlocal function pairs_sum_to_zero(l)\n  local pairs = {}\n  for _, v\
    \ in pairs(l) do\n    pairs[v] = true\n  end\n  for _, v in pairs(l) do\n    if\
    \ pairs[v] then\n      return false\n    end\n  end\n  return true\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = pairs_sum_to_zero\n\
    \    lu.assertEquals(candidate({1, 3, 5, 0}), false)\n    lu.assertEquals(candidate({1,\
    \ 3, -2, 1}), false)\n    lu.assertEquals(candidate({1, 2, 3, 7}), false)\n  \
    \  lu.assertEquals(candidate({2, 4, -5, 3, 5, 7}), true)\n    lu.assertEquals(candidate({1}),\
    \ false)\n    lu.assertEquals(candidate({-3, 9, -1, 3, 2, 30}), true)\n    lu.assertEquals(candidate({-3,\
    \ 9, -1, 3, 2, 31}), true)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 30}),\
    \ false)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 31}), false)\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpue77c2fz.lua:16:\
    \ attempt to call local 'pairs' (a table value)\nstack traceback:\n\t/tmp/tmpue77c2fz.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmpue77c2fz.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750528
- exit_code: 1
  program: "-- pairs_sum_to_zero takes a list of integers as an input.\n-- it returns\
    \ True if there are two distinct elements in the list that\n-- sum to zero, and\
    \ False otherwise.\n-- >>> pairs_sum_to_zero({1, 3, 5, 0})\n-- false\n-- >>> pairs_sum_to_zero({1,\
    \ 3, -2, 1})\n-- false\n-- >>> pairs_sum_to_zero({1, 2, 3, 7})\n-- false\n-- >>>\
    \ pairs_sum_to_zero({2, 4, -5, 3, 5, 7})\n-- true\n-- >>> pairs_sum_to_zero({1})\n\
    -- false\nlocal function pairs_sum_to_zero(l)\n  local pairs = {}\n  for _, v\
    \ in pairs(l) do\n    pairs[v] = true\n  end\n  for _, v in pairs(l) do\n    if\
    \ pairs[v] then\n      return false\n    end\n  end\n  return true\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = pairs_sum_to_zero\n\
    \    lu.assertEquals(candidate({1, 3, 5, 0}), false)\n    lu.assertEquals(candidate({1,\
    \ 3, -2, 1}), false)\n    lu.assertEquals(candidate({1, 2, 3, 7}), false)\n  \
    \  lu.assertEquals(candidate({2, 4, -5, 3, 5, 7}), true)\n    lu.assertEquals(candidate({1}),\
    \ false)\n    lu.assertEquals(candidate({-3, 9, -1, 3, 2, 30}), true)\n    lu.assertEquals(candidate({-3,\
    \ 9, -1, 3, 2, 31}), true)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 30}),\
    \ false)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 31}), false)\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpue77c2fz.lua:16:\
    \ attempt to call local 'pairs' (a table value)\nstack traceback:\n\t/tmp/tmpue77c2fz.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmpue77c2fz.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750528
- exit_code: 1
  program: "-- pairs_sum_to_zero takes a list of integers as an input.\n-- it returns\
    \ True if there are two distinct elements in the list that\n-- sum to zero, and\
    \ False otherwise.\n-- >>> pairs_sum_to_zero({1, 3, 5, 0})\n-- false\n-- >>> pairs_sum_to_zero({1,\
    \ 3, -2, 1})\n-- false\n-- >>> pairs_sum_to_zero({1, 2, 3, 7})\n-- false\n-- >>>\
    \ pairs_sum_to_zero({2, 4, -5, 3, 5, 7})\n-- true\n-- >>> pairs_sum_to_zero({1})\n\
    -- false\nlocal function pairs_sum_to_zero(l)\n  local pairs = pairs(l)\n  local\
    \ zeros = 0\n  for _, v in pairs do\n    zeros = zeros + v\n  end\n  if zeros\
    \ == 0 then\n    return false\n  end\n  for _, v in pairs do\n    if v == 0 then\n\
    \      return true\n    end\n  end\n  return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = pairs_sum_to_zero\n    lu.assertEquals(candidate({1,\
    \ 3, 5, 0}), false)\n    lu.assertEquals(candidate({1, 3, -2, 1}), false)\n  \
    \  lu.assertEquals(candidate({1, 2, 3, 7}), false)\n    lu.assertEquals(candidate({2,\
    \ 4, -5, 3, 5, 7}), true)\n    lu.assertEquals(candidate({1}), false)\n    lu.assertEquals(candidate({-3,\
    \ 9, -1, 3, 2, 30}), true)\n    lu.assertEquals(candidate({-3, 9, -1, 3, 2, 31}),\
    \ true)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 30}), false)\n    lu.assertEquals(candidate({-3,\
    \ 9, -1, 4, 2, 31}), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn__c7ovq.lua:17:\
    \ bad argument #1 to '(for generator)' (table expected, got nil)\nstack traceback:\n\
    \t/tmp/tmpn__c7ovq.lua:17: in function 'candidate'\n\t/tmp/tmpn__c7ovq.lua:34:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1659750528
- exit_code: 1
  program: "-- pairs_sum_to_zero takes a list of integers as an input.\n-- it returns\
    \ True if there are two distinct elements in the list that\n-- sum to zero, and\
    \ False otherwise.\n-- >>> pairs_sum_to_zero({1, 3, 5, 0})\n-- false\n-- >>> pairs_sum_to_zero({1,\
    \ 3, -2, 1})\n-- false\n-- >>> pairs_sum_to_zero({1, 2, 3, 7})\n-- false\n-- >>>\
    \ pairs_sum_to_zero({2, 4, -5, 3, 5, 7})\n-- true\n-- >>> pairs_sum_to_zero({1})\n\
    -- false\nlocal function pairs_sum_to_zero(l)\n  local result = {}\n  for _, v\
    \ in pairs(l) do\n    if v > 0 then\n      result[#result + 1] = v\n    end\n\
    \  end\n  if #result == 1 then\n    return true\n  end\n  return false\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = pairs_sum_to_zero\n\
    \    lu.assertEquals(candidate({1, 3, 5, 0}), false)\n    lu.assertEquals(candidate({1,\
    \ 3, -2, 1}), false)\n    lu.assertEquals(candidate({1, 2, 3, 7}), false)\n  \
    \  lu.assertEquals(candidate({2, 4, -5, 3, 5, 7}), true)\n    lu.assertEquals(candidate({1}),\
    \ false)\n    lu.assertEquals(candidate({-3, 9, -1, 3, 2, 30}), true)\n    lu.assertEquals(candidate({-3,\
    \ 9, -1, 3, 2, 31}), true)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 30}),\
    \ false)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 31}), false)\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5u2ox63p.lua:33:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp5u2ox63p.lua:33:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750528
- exit_code: 1
  program: "-- pairs_sum_to_zero takes a list of integers as an input.\n-- it returns\
    \ True if there are two distinct elements in the list that\n-- sum to zero, and\
    \ False otherwise.\n-- >>> pairs_sum_to_zero({1, 3, 5, 0})\n-- false\n-- >>> pairs_sum_to_zero({1,\
    \ 3, -2, 1})\n-- false\n-- >>> pairs_sum_to_zero({1, 2, 3, 7})\n-- false\n-- >>>\
    \ pairs_sum_to_zero({2, 4, -5, 3, 5, 7})\n-- true\n-- >>> pairs_sum_to_zero({1})\n\
    -- false\nlocal function pairs_sum_to_zero(l)\n  local pairs = {}\n  for _, v\
    \ in pairs(l) do\n    pairs[v] = true\n  end\n  for _, v in pairs(l) do\n    if\
    \ not pairs[v] then\n      return false\n    end\n  end\n  return true\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = pairs_sum_to_zero\n\
    \    lu.assertEquals(candidate({1, 3, 5, 0}), false)\n    lu.assertEquals(candidate({1,\
    \ 3, -2, 1}), false)\n    lu.assertEquals(candidate({1, 2, 3, 7}), false)\n  \
    \  lu.assertEquals(candidate({2, 4, -5, 3, 5, 7}), true)\n    lu.assertEquals(candidate({1}),\
    \ false)\n    lu.assertEquals(candidate({-3, 9, -1, 3, 2, 30}), true)\n    lu.assertEquals(candidate({-3,\
    \ 9, -1, 3, 2, 31}), true)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 30}),\
    \ false)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 31}), false)\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpe0hjtuej.lua:16:\
    \ attempt to call local 'pairs' (a table value)\nstack traceback:\n\t/tmp/tmpe0hjtuej.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmpe0hjtuej.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750528
- exit_code: 1
  program: "-- pairs_sum_to_zero takes a list of integers as an input.\n-- it returns\
    \ True if there are two distinct elements in the list that\n-- sum to zero, and\
    \ False otherwise.\n-- >>> pairs_sum_to_zero({1, 3, 5, 0})\n-- false\n-- >>> pairs_sum_to_zero({1,\
    \ 3, -2, 1})\n-- false\n-- >>> pairs_sum_to_zero({1, 2, 3, 7})\n-- false\n-- >>>\
    \ pairs_sum_to_zero({2, 4, -5, 3, 5, 7})\n-- true\n-- >>> pairs_sum_to_zero({1})\n\
    -- false\nlocal function pairs_sum_to_zero(l)\n  local pairs = {}\n  for _, v\
    \ in pairs(l) do\n    pairs[v] = true\n  end\n  for _, v in pairs(l) do\n    if\
    \ pairs[v] then\n      return false\n    end\n  end\n  return true\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = pairs_sum_to_zero\n\
    \    lu.assertEquals(candidate({1, 3, 5, 0}), false)\n    lu.assertEquals(candidate({1,\
    \ 3, -2, 1}), false)\n    lu.assertEquals(candidate({1, 2, 3, 7}), false)\n  \
    \  lu.assertEquals(candidate({2, 4, -5, 3, 5, 7}), true)\n    lu.assertEquals(candidate({1}),\
    \ false)\n    lu.assertEquals(candidate({-3, 9, -1, 3, 2, 30}), true)\n    lu.assertEquals(candidate({-3,\
    \ 9, -1, 3, 2, 31}), true)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 30}),\
    \ false)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 31}), false)\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpue77c2fz.lua:16:\
    \ attempt to call local 'pairs' (a table value)\nstack traceback:\n\t/tmp/tmpue77c2fz.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmpue77c2fz.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750528
- exit_code: 1
  program: "-- pairs_sum_to_zero takes a list of integers as an input.\n-- it returns\
    \ True if there are two distinct elements in the list that\n-- sum to zero, and\
    \ False otherwise.\n-- >>> pairs_sum_to_zero({1, 3, 5, 0})\n-- false\n-- >>> pairs_sum_to_zero({1,\
    \ 3, -2, 1})\n-- false\n-- >>> pairs_sum_to_zero({1, 2, 3, 7})\n-- false\n-- >>>\
    \ pairs_sum_to_zero({2, 4, -5, 3, 5, 7})\n-- true\n-- >>> pairs_sum_to_zero({1})\n\
    -- false\nlocal function pairs_sum_to_zero(l)\n  local pairs = {}\n  for _, v\
    \ in pairs(l) do\n    pairs[v] = true\n  end\n  local zero = true\n  for _, v\
    \ in pairs(l) do\n    zero = false and zero\n  end\n  return zero\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = pairs_sum_to_zero\n    lu.assertEquals(candidate({1,\
    \ 3, 5, 0}), false)\n    lu.assertEquals(candidate({1, 3, -2, 1}), false)\n  \
    \  lu.assertEquals(candidate({1, 2, 3, 7}), false)\n    lu.assertEquals(candidate({2,\
    \ 4, -5, 3, 5, 7}), true)\n    lu.assertEquals(candidate({1}), false)\n    lu.assertEquals(candidate({-3,\
    \ 9, -1, 3, 2, 30}), true)\n    lu.assertEquals(candidate({-3, 9, -1, 3, 2, 31}),\
    \ true)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 30}), false)\n    lu.assertEquals(candidate({-3,\
    \ 9, -1, 4, 2, 31}), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpuvpl3uhw.lua:16:\
    \ attempt to call local 'pairs' (a table value)\nstack traceback:\n\t/tmp/tmpuvpl3uhw.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmpuvpl3uhw.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750528
- exit_code: 1
  program: "-- pairs_sum_to_zero takes a list of integers as an input.\n-- it returns\
    \ True if there are two distinct elements in the list that\n-- sum to zero, and\
    \ False otherwise.\n-- >>> pairs_sum_to_zero({1, 3, 5, 0})\n-- false\n-- >>> pairs_sum_to_zero({1,\
    \ 3, -2, 1})\n-- false\n-- >>> pairs_sum_to_zero({1, 2, 3, 7})\n-- false\n-- >>>\
    \ pairs_sum_to_zero({2, 4, -5, 3, 5, 7})\n-- true\n-- >>> pairs_sum_to_zero({1})\n\
    -- false\nlocal function pairs_sum_to_zero(l)\n  local pairs = {}\n  for _, v\
    \ in pairs(l) do\n    pairs[v] = true\n  end\n  for _, v in pairs(l) do\n    if\
    \ pairs[v] then\n      return false\n    end\n  end\n  return true\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = pairs_sum_to_zero\n\
    \    lu.assertEquals(candidate({1, 3, 5, 0}), false)\n    lu.assertEquals(candidate({1,\
    \ 3, -2, 1}), false)\n    lu.assertEquals(candidate({1, 2, 3, 7}), false)\n  \
    \  lu.assertEquals(candidate({2, 4, -5, 3, 5, 7}), true)\n    lu.assertEquals(candidate({1}),\
    \ false)\n    lu.assertEquals(candidate({-3, 9, -1, 3, 2, 30}), true)\n    lu.assertEquals(candidate({-3,\
    \ 9, -1, 3, 2, 31}), true)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 30}),\
    \ false)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 31}), false)\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpue77c2fz.lua:16:\
    \ attempt to call local 'pairs' (a table value)\nstack traceback:\n\t/tmp/tmpue77c2fz.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmpue77c2fz.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750528
- exit_code: 1
  program: "-- pairs_sum_to_zero takes a list of integers as an input.\n-- it returns\
    \ True if there are two distinct elements in the list that\n-- sum to zero, and\
    \ False otherwise.\n-- >>> pairs_sum_to_zero({1, 3, 5, 0})\n-- false\n-- >>> pairs_sum_to_zero({1,\
    \ 3, -2, 1})\n-- false\n-- >>> pairs_sum_to_zero({1, 2, 3, 7})\n-- false\n-- >>>\
    \ pairs_sum_to_zero({2, 4, -5, 3, 5, 7})\n-- true\n-- >>> pairs_sum_to_zero({1})\n\
    -- false\nlocal function pairs_sum_to_zero(l)\n  local pairs = {}\n  for _, v\
    \ in pairs(l) do\n    pairs[v] = true\n  end\n  local zeros = 0\n  for _, v in\
    \ pairs(l) do\n    if pairs[v] then\n      zeros = zeros + 1\n    end\n  end\n\
    \  return zeros == 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = pairs_sum_to_zero\n    lu.assertEquals(candidate({1, 3, 5, 0}),\
    \ false)\n    lu.assertEquals(candidate({1, 3, -2, 1}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 7}), false)\n    lu.assertEquals(candidate({2, 4, -5, 3, 5, 7}), true)\n\
    \    lu.assertEquals(candidate({1}), false)\n    lu.assertEquals(candidate({-3,\
    \ 9, -1, 3, 2, 30}), true)\n    lu.assertEquals(candidate({-3, 9, -1, 3, 2, 31}),\
    \ true)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 30}), false)\n    lu.assertEquals(candidate({-3,\
    \ 9, -1, 4, 2, 31}), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0f15iu_t.lua:16:\
    \ attempt to call local 'pairs' (a table value)\nstack traceback:\n\t/tmp/tmp0f15iu_t.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmp0f15iu_t.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750528
- exit_code: 1
  program: "-- pairs_sum_to_zero takes a list of integers as an input.\n-- it returns\
    \ True if there are two distinct elements in the list that\n-- sum to zero, and\
    \ False otherwise.\n-- >>> pairs_sum_to_zero({1, 3, 5, 0})\n-- false\n-- >>> pairs_sum_to_zero({1,\
    \ 3, -2, 1})\n-- false\n-- >>> pairs_sum_to_zero({1, 2, 3, 7})\n-- false\n-- >>>\
    \ pairs_sum_to_zero({2, 4, -5, 3, 5, 7})\n-- true\n-- >>> pairs_sum_to_zero({1})\n\
    -- false\nlocal function pairs_sum_to_zero(l)\n  local pairs = {}\n  for _, v\
    \ in pairs(l) do\n    pairs[v] = true\n  end\n  local zero = true\n  for _, v\
    \ in pairs(l) do\n    if not pairs[v] then\n      zero = false\n    end\n  end\n\
    \  return zero\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = pairs_sum_to_zero\n    lu.assertEquals(candidate({1, 3, 5, 0}),\
    \ false)\n    lu.assertEquals(candidate({1, 3, -2, 1}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 7}), false)\n    lu.assertEquals(candidate({2, 4, -5, 3, 5, 7}), true)\n\
    \    lu.assertEquals(candidate({1}), false)\n    lu.assertEquals(candidate({-3,\
    \ 9, -1, 3, 2, 30}), true)\n    lu.assertEquals(candidate({-3, 9, -1, 3, 2, 31}),\
    \ true)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 30}), false)\n    lu.assertEquals(candidate({-3,\
    \ 9, -1, 4, 2, 31}), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5t252g74.lua:16:\
    \ attempt to call local 'pairs' (a table value)\nstack traceback:\n\t/tmp/tmp5t252g74.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmp5t252g74.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750528
- exit_code: 1
  program: "-- pairs_sum_to_zero takes a list of integers as an input.\n-- it returns\
    \ True if there are two distinct elements in the list that\n-- sum to zero, and\
    \ False otherwise.\n-- >>> pairs_sum_to_zero({1, 3, 5, 0})\n-- false\n-- >>> pairs_sum_to_zero({1,\
    \ 3, -2, 1})\n-- false\n-- >>> pairs_sum_to_zero({1, 2, 3, 7})\n-- false\n-- >>>\
    \ pairs_sum_to_zero({2, 4, -5, 3, 5, 7})\n-- true\n-- >>> pairs_sum_to_zero({1})\n\
    -- false\nlocal function pairs_sum_to_zero(l)\n  local result = {}\n  for _, v\
    \ in ipairs(l) do\n    local found = false\n    for _, v2 in ipairs(result) do\n\
    \      if v + v2 == 0 then\n        found = true\n        break\n      end\n \
    \   end\n    if not found then\n      table.insert(result, v)\n    end\n  end\n\
    \  return #result == 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = pairs_sum_to_zero\n    lu.assertEquals(candidate({1, 3, 5, 0}),\
    \ false)\n    lu.assertEquals(candidate({1, 3, -2, 1}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 7}), false)\n    lu.assertEquals(candidate({2, 4, -5, 3, 5, 7}), true)\n\
    \    lu.assertEquals(candidate({1}), false)\n    lu.assertEquals(candidate({-3,\
    \ 9, -1, 3, 2, 30}), true)\n    lu.assertEquals(candidate({-3, 9, -1, 3, 2, 31}),\
    \ true)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 30}), false)\n    lu.assertEquals(candidate({-3,\
    \ 9, -1, 4, 2, 31}), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwdiudg7c.lua:37:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpwdiudg7c.lua:37:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750528
- exit_code: 1
  program: "-- pairs_sum_to_zero takes a list of integers as an input.\n-- it returns\
    \ True if there are two distinct elements in the list that\n-- sum to zero, and\
    \ False otherwise.\n-- >>> pairs_sum_to_zero({1, 3, 5, 0})\n-- false\n-- >>> pairs_sum_to_zero({1,\
    \ 3, -2, 1})\n-- false\n-- >>> pairs_sum_to_zero({1, 2, 3, 7})\n-- false\n-- >>>\
    \ pairs_sum_to_zero({2, 4, -5, 3, 5, 7})\n-- true\n-- >>> pairs_sum_to_zero({1})\n\
    -- false\nlocal function pairs_sum_to_zero(l)\n  local pairs = {}\n  for _, v\
    \ in pairs(l) do\n    pairs[v] = true\n  end\n  for _, v in pairs(l) do\n    if\
    \ not pairs[v] then\n      return false\n    end\n  end\n  return true\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = pairs_sum_to_zero\n\
    \    lu.assertEquals(candidate({1, 3, 5, 0}), false)\n    lu.assertEquals(candidate({1,\
    \ 3, -2, 1}), false)\n    lu.assertEquals(candidate({1, 2, 3, 7}), false)\n  \
    \  lu.assertEquals(candidate({2, 4, -5, 3, 5, 7}), true)\n    lu.assertEquals(candidate({1}),\
    \ false)\n    lu.assertEquals(candidate({-3, 9, -1, 3, 2, 30}), true)\n    lu.assertEquals(candidate({-3,\
    \ 9, -1, 3, 2, 31}), true)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 30}),\
    \ false)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 31}), false)\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpe0hjtuej.lua:16:\
    \ attempt to call local 'pairs' (a table value)\nstack traceback:\n\t/tmp/tmpe0hjtuej.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmpe0hjtuej.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750528
- exit_code: 1
  program: "-- pairs_sum_to_zero takes a list of integers as an input.\n-- it returns\
    \ True if there are two distinct elements in the list that\n-- sum to zero, and\
    \ False otherwise.\n-- >>> pairs_sum_to_zero({1, 3, 5, 0})\n-- false\n-- >>> pairs_sum_to_zero({1,\
    \ 3, -2, 1})\n-- false\n-- >>> pairs_sum_to_zero({1, 2, 3, 7})\n-- false\n-- >>>\
    \ pairs_sum_to_zero({2, 4, -5, 3, 5, 7})\n-- true\n-- >>> pairs_sum_to_zero({1})\n\
    -- false\nlocal function pairs_sum_to_zero(l)\n  local pairs = {}\n  for _, v\
    \ in pairs(l) do\n    pairs[v] = true\n  end\n  for _, v in pairs(l) do\n    if\
    \ pairs[v] then\n      return false\n    end\n  end\n  return true\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = pairs_sum_to_zero\n\
    \    lu.assertEquals(candidate({1, 3, 5, 0}), false)\n    lu.assertEquals(candidate({1,\
    \ 3, -2, 1}), false)\n    lu.assertEquals(candidate({1, 2, 3, 7}), false)\n  \
    \  lu.assertEquals(candidate({2, 4, -5, 3, 5, 7}), true)\n    lu.assertEquals(candidate({1}),\
    \ false)\n    lu.assertEquals(candidate({-3, 9, -1, 3, 2, 30}), true)\n    lu.assertEquals(candidate({-3,\
    \ 9, -1, 3, 2, 31}), true)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 30}),\
    \ false)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 31}), false)\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpue77c2fz.lua:16:\
    \ attempt to call local 'pairs' (a table value)\nstack traceback:\n\t/tmp/tmpue77c2fz.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmpue77c2fz.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750528
- exit_code: 1
  program: "-- pairs_sum_to_zero takes a list of integers as an input.\n-- it returns\
    \ True if there are two distinct elements in the list that\n-- sum to zero, and\
    \ False otherwise.\n-- >>> pairs_sum_to_zero({1, 3, 5, 0})\n-- false\n-- >>> pairs_sum_to_zero({1,\
    \ 3, -2, 1})\n-- false\n-- >>> pairs_sum_to_zero({1, 2, 3, 7})\n-- false\n-- >>>\
    \ pairs_sum_to_zero({2, 4, -5, 3, 5, 7})\n-- true\n-- >>> pairs_sum_to_zero({1})\n\
    -- false\nlocal function pairs_sum_to_zero(l)\n  local pairs = {}\n  for _, v\
    \ in pairs(l) do\n    pairs[v] = true\n  end\n  for _, v in pairs(l) do\n    if\
    \ pairs[v] then\n      return false\n    end\n  end\n  return true\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = pairs_sum_to_zero\n\
    \    lu.assertEquals(candidate({1, 3, 5, 0}), false)\n    lu.assertEquals(candidate({1,\
    \ 3, -2, 1}), false)\n    lu.assertEquals(candidate({1, 2, 3, 7}), false)\n  \
    \  lu.assertEquals(candidate({2, 4, -5, 3, 5, 7}), true)\n    lu.assertEquals(candidate({1}),\
    \ false)\n    lu.assertEquals(candidate({-3, 9, -1, 3, 2, 30}), true)\n    lu.assertEquals(candidate({-3,\
    \ 9, -1, 3, 2, 31}), true)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 30}),\
    \ false)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 31}), false)\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpue77c2fz.lua:16:\
    \ attempt to call local 'pairs' (a table value)\nstack traceback:\n\t/tmp/tmpue77c2fz.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmpue77c2fz.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750528
- exit_code: 1
  program: "-- pairs_sum_to_zero takes a list of integers as an input.\n-- it returns\
    \ True if there are two distinct elements in the list that\n-- sum to zero, and\
    \ False otherwise.\n-- >>> pairs_sum_to_zero({1, 3, 5, 0})\n-- false\n-- >>> pairs_sum_to_zero({1,\
    \ 3, -2, 1})\n-- false\n-- >>> pairs_sum_to_zero({1, 2, 3, 7})\n-- false\n-- >>>\
    \ pairs_sum_to_zero({2, 4, -5, 3, 5, 7})\n-- true\n-- >>> pairs_sum_to_zero({1})\n\
    -- false\nlocal function pairs_sum_to_zero(l)\n  local pairs = {}\n  for _, v\
    \ in pairs(l) do\n    pairs[v] = true\n  end\n  for _, v in pairs(l) do\n    if\
    \ pairs[v] then\n      return false\n    end\n  end\n  return true\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = pairs_sum_to_zero\n\
    \    lu.assertEquals(candidate({1, 3, 5, 0}), false)\n    lu.assertEquals(candidate({1,\
    \ 3, -2, 1}), false)\n    lu.assertEquals(candidate({1, 2, 3, 7}), false)\n  \
    \  lu.assertEquals(candidate({2, 4, -5, 3, 5, 7}), true)\n    lu.assertEquals(candidate({1}),\
    \ false)\n    lu.assertEquals(candidate({-3, 9, -1, 3, 2, 30}), true)\n    lu.assertEquals(candidate({-3,\
    \ 9, -1, 3, 2, 31}), true)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 30}),\
    \ false)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 31}), false)\nend\n\n\
    os.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpue77c2fz.lua:16:\
    \ attempt to call local 'pairs' (a table value)\nstack traceback:\n\t/tmp/tmpue77c2fz.lua:16:\
    \ in function 'candidate'\n\t/tmp/tmpue77c2fz.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750528
- exit_code: 1
  program: "-- pairs_sum_to_zero takes a list of integers as an input.\n-- it returns\
    \ True if there are two distinct elements in the list that\n-- sum to zero, and\
    \ False otherwise.\n-- >>> pairs_sum_to_zero({1, 3, 5, 0})\n-- false\n-- >>> pairs_sum_to_zero({1,\
    \ 3, -2, 1})\n-- false\n-- >>> pairs_sum_to_zero({1, 2, 3, 7})\n-- false\n-- >>>\
    \ pairs_sum_to_zero({2, 4, -5, 3, 5, 7})\n-- true\n-- >>> pairs_sum_to_zero({1})\n\
    -- false\nlocal function pairs_sum_to_zero(l)\n  local zero = 0\n  local pairs\
    \ = {}\n  for _, v in pairs(l) do\n    pairs[v] = true\n    zero = zero + v\n\
    \  end\n  for _, v in pairs(l) do\n    if pairs[v] == true then\n      return\
    \ false\n    end\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = pairs_sum_to_zero\n    lu.assertEquals(candidate({1,\
    \ 3, 5, 0}), false)\n    lu.assertEquals(candidate({1, 3, -2, 1}), false)\n  \
    \  lu.assertEquals(candidate({1, 2, 3, 7}), false)\n    lu.assertEquals(candidate({2,\
    \ 4, -5, 3, 5, 7}), true)\n    lu.assertEquals(candidate({1}), false)\n    lu.assertEquals(candidate({-3,\
    \ 9, -1, 3, 2, 30}), true)\n    lu.assertEquals(candidate({-3, 9, -1, 3, 2, 31}),\
    \ true)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 30}), false)\n    lu.assertEquals(candidate({-3,\
    \ 9, -1, 4, 2, 31}), false)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprv14b_qo.lua:17:\
    \ attempt to call local 'pairs' (a table value)\nstack traceback:\n\t/tmp/tmprv14b_qo.lua:17:\
    \ in function 'candidate'\n\t/tmp/tmprv14b_qo.lua:32: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750528

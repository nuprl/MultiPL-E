name: HumanEval_95_check_dict_case
language: lua
prompt: "-- Given a dictionary, return True if all keys are strings in lower \n--\
  \ case or all keys are strings in upper case, else return False.\n-- The function\
  \ should return False is the given dictionary is empty.\n-- Examples:\n-- >>> check_dict_case({['a']\
  \ = 'apple', ['b'] = 'banana'})\n-- true\n-- >>> check_dict_case({['a'] = 'apple',\
  \ ['A'] = 'banana', ['B'] = 'banana'})\n-- false\n-- >>> check_dict_case({['a']\
  \ = 'apple', [8] = 'banana', ['a'] = 'apple'})\n-- false\n-- >>> check_dict_case({['Name']\
  \ = 'John', ['Age'] = '36', ['City'] = 'Houston'})\n-- false\n-- >>> check_dict_case({['STATE']\
  \ = 'NC', ['ZIP'] = '12345'})\n-- true\nlocal function check_dict_case(dict)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = check_dict_case\n\
  \    lu.assertEquals(candidate({['p'] = 'pineapple', ['b'] = 'banana'}), true)\n\
  \    lu.assertEquals(candidate({['p'] = 'pineapple', ['A'] = 'banana', ['B'] = 'banana'}),\
  \ false)\n    lu.assertEquals(candidate({['p'] = 'pineapple', ['5'] = 'banana',\
  \ ['a'] = 'apple'}), false)\n    lu.assertEquals(candidate({['Name'] = 'John', ['Age']\
  \ = '36', ['City'] = 'Houston'}), false)\n    lu.assertEquals(candidate({['STATE']\
  \ = 'NC', ['ZIP'] = '12345'}), true)\n    lu.assertEquals(candidate({['fruit'] =\
  \ 'Orange', ['taste'] = 'Sweet'}), true)\n    lu.assertEquals(candidate({}), false)\n\
  end\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local result = true\n  for k, v in pairs(dict) do\n    if type(k)\
    \ ~= 'string' then\n      result = false\n      break\n    end\n    if type(v)\
    \ ~= 'string' then\n      result = false\n      break\n    end\n  end\n  return\
    \ result\nend", "  local result = true\n  for k, v in pairs(dict) do\n    if type(k)\
    \ ~= 'string' then\n      result = false\n      break\n    end\n    if type(v)\
    \ ~= 'string' then\n      result = false\n      break\n    end\n  end\n  return\
    \ result\nend", "  if #dict == 0 then\n    return false\n  end\n  for k, v in\
    \ pairs(dict) do\n    if type(k) ~= 'string' or type(v) ~= 'string' then\n   \
    \   return false\n    end\n  end\n  return true\nend", "  local result = true\n\
    \  for k, v in pairs(dict) do\n    if type(k) ~= 'string' then\n      result =\
    \ false\n      break\n    end\n    if type(v) ~= 'string' then\n      result =\
    \ false\n      break\n    end\n  end\n  return result\nend", "   if #dict == 0\
    \ then\n      return false\n   end\n   local keys = {}\n   for k, v in pairs(dict)\
    \ do\n      if type(k) ~= 'string' then\n         return false\n      end\n  \
    \    if type(v) ~= 'string' then\n         return false\n      end\n      table.insert(keys,\
    \ k)\n   end\n   for _, k in ipairs(keys) do\n      if k:lower() == k:upper()\
    \ then\n         return false\n      end\n   end\n   return true\nend", "  local\
    \ result = true\n  for k, v in pairs(dict) do\n    if type(k) ~= 'string' then\n\
    \      result = false\n      break\n    end\n    if type(v) ~= 'string' then\n\
    \      result = false\n      break\n    end\n  end\n  return result\nend", " \
    \   local result = true\n    for k, v in pairs(dict) do\n        if type(k) ~=\
    \ 'string' or k:lower() ~= k:upper() then\n            result = false\n      \
    \      break\n        end\n    end\n    return result\nend", "    local result\
    \ = true\n    for k, v in pairs(dict) do\n        if type(k) ~= 'string' or type(v)\
    \ ~= 'string' then\n            result = false\n            break\n        end\n\
    \    end\n    return result\nend", "  local result = true\n  for k, v in pairs(dict)\
    \ do\n    if type(k) ~= 'string' then\n      result = false\n      break\n   \
    \ end\n    if type(v) ~= 'string' then\n      result = false\n      break\n  \
    \  end\n  end\n  return result\nend", "  if #dict == 0 then return false end\n\
    \  for k, v in pairs(dict) do\n    if type(k) ~= 'string' or type(v) ~= 'string'\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local result\
    \ = true\n  for k, v in pairs(dict) do\n    if type(k) ~= 'string' or type(v)\
    \ ~= 'string' then\n      result = false\n    end\n  end\n  return result\nend",
  "   if dict == nil then return false end\n   if type(dict) ~= 'table' then return\
    \ false end\n   for k, v in pairs(dict) do\n      if type(k) ~= 'string' then\
    \ return false end\n      if type(v) ~= 'string' then return false end\n   end\n\
    \   return true\nend", "  local result = true\n  for k, v in pairs(dict) do\n\
    \    if type(k) ~= 'string' or k:lower() ~= k then\n      result = false\n   \
    \   break\n    end\n  end\n  return result\nend", "    local result = true\n \
    \   for k, v in pairs(dict) do\n        if type(k) ~= 'string' or type(v) ~= 'string'\
    \ then\n            result = false\n            break\n        end\n    end\n\
    \    return result\nend", "   if dict == nil then\n      return false\n   end\n\
    \   if type(dict) ~= 'table' then\n      return false\n   end\n   for k, v in\
    \ pairs(dict) do\n      if type(k) ~= 'string' then\n         return false\n \
    \     end\n      if type(v) ~= 'string' then\n         return false\n      end\n\
    \   end\n   return true\nend", "  if #dict == 0 then\n    return false\n  end\n\
    \  for k, v in pairs(dict) do\n    if type(k) ~= 'string' then\n      return false\n\
    \    end\n    if type(v) ~= 'string' then\n      return false\n    end\n  end\n\
    \  return true\nend", "  local result = true\n  for k, v in pairs(dict) do\n \
    \   if type(k) ~= 'string' then\n      result = false\n      break\n    end\n\
    \    if type(v) ~= 'string' then\n      result = false\n      break\n    end\n\
    \  end\n  return result\nend", "    local result = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) ~= 'string' then\n            result = false\n      \
    \      break\n        end\n        if type(k) == 'string' then\n            if\
    \ k:lower() ~= k then\n                result = false\n                break\n\
    \            end\n            if k:upper() ~= k then\n                result =\
    \ false\n                break\n            end\n        end\n    end\n    return\
    \ result\nend", "  local result = true\n  for k, v in pairs(dict) do\n    if type(k)\
    \ ~= 'string' then\n      result = false\n      break\n    end\n    if type(v)\
    \ ~= 'string' then\n      result = false\n      break\n    end\n  end\n  return\
    \ result\nend", "  local result = true\n  for k, v in pairs(dict) do\n    if type(k)\
    \ ~= 'string' then\n      result = false\n      break\n    end\n    if type(v)\
    \ ~= 'string' then\n      result = false\n      break\n    end\n  end\n  return\
    \ result\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_1_separate_paren_groups
language: lua
prompt: "-- Input to this function is a string containing multiple groups of nested\
  \ parentheses. Your goal is to\n-- separate those group into separate strings and\
  \ return the list of those.\n-- Separate groups are balanced (each open brace is\
  \ properly closed) and not nested within each other\n-- Ignore any spaces in the\
  \ input string.\n-- >>> separate_paren_groups('( ) (( )) (( )( ))')\n-- {'()', '(())',\
  \ '(()())'}\nlocal function separate_paren_groups(paren_string)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = separate_paren_groups\n\
  \    lu.assertEquals(candidate('(()()) ((())) () ((())()())'), {'(()())', '((()))',\
  \ '()', '((())()())'})\n    lu.assertEquals(candidate('() (()) ((())) (((())))'),\
  \ {'()', '(())', '((()))', '(((())))'})\n    lu.assertEquals(candidate('(()(())((())))'),\
  \ {'(()(())((())))'})\n    lu.assertEquals(candidate('( ) (( )) (( )( ))'), {'()',\
  \ '(())', '(()())'})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local open_braces, close_braces, open_brace_counts, close_brace_counts\
    \ = { }, {}, {}, {}\n  local open_brace_count, close_brace_count = 0, 0\n  for\
    \ paren in string.gmatch(paren_string, \"%[(%a+)%]\") do\n    if paren == \"(\"\
    \ then\n      open_brace_counts[open_brace_count] = open_brace_count + 1\n   \
    \   open_braces[open_brace_count] = true\n      open_brace_count = open_brace_count\
    \ + 1\n    elseif paren == \")\" then\n      close_brace_counts[close_brace_count]\
    \ = close_brace_count + 1\n      close_braces[close_brace_count] = true\n    \
    \  close_brace_count = close_brace_count + 1\n    elseif paren == \"\" then\n\
    \      open_brace_counts[open_brace_count] = open_brace_count + 1\n      open_braces[open_brace_count]\
    \ = true\n      open_brace_count = open_brace_count + 1\n      close_brace_counts[close_brace_count]\
    \ = close_brace_count + 1\n      close_braces[close_brace_count] = true\n    \
    \  close_brace_count = close_brace_count + 1\n    else\n      assert(false, \"\
    Invalid paren string: \" .. paren)\n    end\n  end\n  assert(open_brace_count\
    \ == close_brace_count)\n  local open_brace_counts_sorted = table.sort(open_brace_counts)\n\
    \  local close_brace_counts_sorted = table.sort(close_brace_counts)\n  local open_braces_sorted\
    \ = table.sort(open_braces)\n  local close_braces_sorted = table.sort(close_braces)\n\
    \  local open_brace_counts_sorted_index = open_brace_counts_sorted[1]\n  local\
    \ close_brace_counts_sorted_index = close_brace_counts_sorted[1]\n  local open_braces_sorted_index\
    \ = open_braces_sorted[1]\n  local close_braces_sorted_index = close_braces_sorted[1]\n\
    \  local open_brace_count, close_brace_count = 0, 0\n  local open_braces, close_braces,\
    \ open_brace_counts, close_brace_counts = { }, {}, {}, {}\n  for paren in string.gmatch(paren_string,\
    \ \"%[(%a+)%]\") do\n    if paren == \"(\" then\n      open_brace_count = open_b",
  "  local groups = {}\n  local open_braces = 0\n  local close_braces = 0\n  local\
    \ paren_char\n  local paren_chars\n  local paren_char_index\n  local paren_char_indexes\n\
    \  local paren_char_index\n  local paren_char_indexes\n  local paren_char_index\n\
    \  local paren_char_indexes\n  local paren_char_index\n  local paren_char_indexes\n\
    \  local paren_char_index\n  local paren_char_indexes\n  local paren_char_index\n\
    \  local paren_char_indexes\n  local paren_char_index\n  local paren_char_indexes\n\
    \  local paren_char_index\n  local paren_char_indexes\n  local paren_char_index\n\
    \  local paren_char_indexes\n  local paren_char_index\n  local paren_char_indexes\n\
    \  local paren_char_index\n  local paren_char_indexes\n  local paren_char_index\n\
    \  local paren_char_indexes\n  local paren_char_index\n  local paren_char_indexes\n\
    \  local paren_char_index\n  local paren_char_indexes\n  local paren_char_index\n\
    \  local paren_char_indexes\n  local paren_char_index\n  local paren_char_indexes\n\
    \  local paren_char_index\n  local paren_char_indexes\n  local paren_char_index\n\
    \  local paren_char_indexes\n  local paren_char_index\n  local paren_char_indexes\n\
    \  local paren_char_index\n  local paren_char_indexes\n  local paren_char_index\n\
    \  local paren_char_indexes\n  local paren_char_index\n  local paren_char_indexes\n\
    \  local paren_char_index\n  local paren_char_indexes\n  local paren_char_index\n\
    \  local paren_char_indexes\n  local paren_char_index\n  local paren_char_indexes\n\
    \  local paren_char_index\n  local paren_char_indexes\n  local paren_char_index\n\
    \  local paren_char_indexes\n  local paren_char_index\n  local paren_char_indexes\n\
    \  local paren_char_index\n  local paren_char_indexes\n  local paren_char_index\n\
    \  local paren_char_indexes\n  local paren_char_index\n  local paren_char_indexes\n\
    \  local paren_char_index\n  local paren_char_indexes\n", "  local paren_groups\
    \ = {}\n  local open_braces = 0\n  local close_braces = 0\n  local paren_count\
    \ = 0\n  for paren_char in string.gmatch(paren_string, \"()\") do\n    if paren_char\
    \ == \"(\" then\n      open_braces = open_braces + 1\n      paren_count = paren_count\
    \ + 1\n    elseif paren_char == \")\" then\n      close_braces = close_braces\
    \ + 1\n      paren_count = paren_count - 1\n      if paren_count == 0 then\n \
    \       table.insert(paren_groups, table.concat(paren_groups))\n        paren_count\
    \ = 0\n      end\n    end\n  end\n  if paren_count > 0 then\n    table.insert(paren_groups,\
    \ table.concat(paren_groups))\n  end\n  return paren_groups\nend", "  local open_braces\
    \ = { }\n  local close_braces = { }\n  local open_brace_count = 0\n  local close_brace_count\
    \ = 0\n  local open_brace_groups = { }\n  local close_brace_groups = { }\n  local\
    \ open_brace_group_index = 1\n  local close_brace_group_index = 1\n  local open_brace_group_count\
    \ = 0\n  local close_brace_group_count = 0\n  local open_brace_group_start = 0\n\
    \  local close_brace_group_start = 0\n  local open_brace_group_end = 0\n  local\
    \ close_brace_group_end = 0\n  local open_brace_group_length = 0\n  local close_brace_group_length\
    \ = 0\n  local open_brace_group_char\n  local close_brace_group_char\n  local\
    \ open_brace_group_char_index\n  local close_brace_group_char_index\n  local open_brace_group_char_length\n\
    \  local close_brace_group_char_length\n  local open_brace_group_char_start\n\
    \  local close_brace_group_char_start\n  local open_brace_group_char_end\n  local\
    \ close_brace_group_char_end\n  local open_brace_group_char_length\n  local close_brace_group_char_length\n\
    \  local open_brace_group_char_length\n  local close_brace_group_char_length\n\
    \  local open_brace_group_char_length\n  local close_brace_group_char_length\n\
    \  local open_brace_group_char_length\n  local close_brace_group_char_length\n\
    \  local open_brace_group_char_length\n  local close_brace_group_char_length\n\
    \  local open_brace_group_char_length\n  local close_brace_group_char_length\n\
    \  local open_brace_group_char_length\n  local close_brace_group_char_length\n\
    \  local open_brace_group_char_length\n  local close_brace_group_char_length\n\
    \  local open_brace_group_char_length\n  local close_brace_group_char_length\n\
    \  local open_brace_group_char_length\n  local close_brace_group_char_length\n\
    \  local open_brace_group_char_length\n  local close_brace_group_char_length\n\
    \  local open_brace_group_char_length\n  local close_brace_group_char_length\n\
    \  local open_brace_group_char_length\n  local close_brace_group_char_length\n",
  "  local paren_groups = {}\n  local open_braces = 0\n  local close_braces = 0\n\
    \  local paren_level = 0\n  local paren_open_braces = 0\n  local paren_close_braces\
    \ = 0\n  local paren_group = \"\"\n  local paren_group_start = 0\n  local paren_group_end\
    \ = 0\n  local paren_group_length = 0\n  local paren_group_length = 0\n  local\
    \ paren_group_char = \"\"\n  local paren_group_char_length = 0\n  local paren_group_char_length\
    \ = 0\n  local paren_group_char_char = \"\"\n  local paren_group_char_char_length\
    \ = 0\n  local paren_group_char_char_length = 0\n  local paren_group_char_char_char\
    \ = \"\"\n  local paren_group_char_char_char_length = 0\n  local paren_group_char_char_char_length\
    \ = 0\n  local paren_group_char_char_char_char = \"\"\n  local paren_group_char_char_char_char_length\
    \ = 0\n  local paren_group_char_char_char_char_length = 0\n  local paren_group_char_char_char_char_char\
    \ = \"\"\n  local paren_group_char_char_char_char_char_length = 0\n  local paren_group_char_char_char_char_char_length\
    \ = 0\n  local paren_group_char_char_char_char_char_char = \"\"\n  local paren_group_char_char_char_char_char_char_length\
    \ = 0\n  local paren_group_char_char_char_char_char_char_length = 0\n  local paren_group_char_char_char_char_char_char_char\
    \ = \"\"\n  local paren_group_char_char_char_char_char_char_char_length = 0\n\
    \  local paren_group_char_char_char_char_char_char_char_length = 0\n  local paren_group_char_char_char_char_char_char_char_char\
    \ = \"\"\n  local paren_group_char_char_char_char_char_char_char_char_length =\
    \ 0\n  local paren_group_char_char_char_char_char_char_char_char_length = 0\n\
    \  local paren_group_char_char_char_char_char_char_char_char_char = \"\"\n  local\
    \ paren_group_char_char_char_char_char_char_char_char_char_length = 0\n  local\
    \ paren_group_char_char_char_char_char_char_char_char_char_length = 0\n  local\
    \ paren_group_char_char_char_char_char_char_char_char_char_char = \"\"\n  local\
    \ paren_group_char_char_char_char_char_char_char_char_char_char_length = 0\n \
    \ local paren_group_char_char_char_char_char_char_char_char_char_char_length =\
    \ 0\n  local paren_group_char_char_char_char_char_char_char_char_char_char_char\
    \ = \"\"\n  local paren_group_char_char_char_char_char_char_char_char_char_",
  "  local groups = {}\n  local open_braces = 0\n  local close_braces = 0\n  local\
    \ paren_level = 0\n  local open_brace_level = 0\n  local open_brace_levels = {}\n\
    \  local close_brace_levels = {}\n  local open_brace_levels_stack = {}\n  local\
    \ close_brace_levels_stack = {}\n  local open_brace_levels_stack_index = 0\n \
    \ local close_brace_levels_stack_index = 0\n  local open_brace_levels_stack_index2\
    \ = 0\n  local close_brace_levels_stack_index2 = 0\n  local open_brace_levels_stack_index3\
    \ = 0\n  local close_brace_levels_stack_index3 = 0\n  local open_brace_levels_stack_index4\
    \ = 0\n  local close_brace_levels_stack_index4 = 0\n  local open_brace_levels_stack_index5\
    \ = 0\n  local close_brace_levels_stack_index5 = 0\n  local open_brace_levels_stack_index6\
    \ = 0\n  local close_brace_levels_stack_index6 = 0\n  local open_brace_levels_stack_index7\
    \ = 0\n  local close_brace_levels_stack_index7 = 0\n  local open_brace_levels_stack_index8\
    \ = 0\n  local close_brace_levels_stack_index8 = 0\n  local open_brace_levels_stack_index9\
    \ = 0\n  local close_brace_levels_stack_index9 = 0\n  local open_brace_levels_stack_index10\
    \ = 0\n  local close_brace_levels_stack_index10 = 0\n  local open_brace_levels_stack_index11\
    \ = 0\n  local close_brace_levels_stack_index11 = 0\n  local open_brace_levels_stack_index12\
    \ = 0\n  local close_brace_levels_stack_index12 = 0\n  local open_brace_levels_stack_index13\
    \ = 0\n  local close_brace_levels_stack_index13 = 0\n  local open_brace_levels_stack_index14\
    \ = 0\n  local close_brace_levels_stack_index14 = 0\n  local open_brace_levels_stack_index15\
    \ = 0\n  local close_brace_levels_stack_index15 = 0\n  local open_brace_levels_stack_index16\
    \ = 0\n  local close_brace_levels_stack_index16 = 0\n  local open_brace_levels_stack_index17\
    \ = 0\n  local close_brace_levels_stack_index", "  local open_braces = { }\n \
    \ local close_braces = { }\n  local open_brace_count = 0\n  local close_brace_count\
    \ = 0\n  local paren_groups = { }\n  local paren_group_start = 1\n  local paren_group_end\
    \ = 1\n  local paren_group_length = 1\n  local paren_group_char\n  local paren_group_char_length\n\
    \  local paren_group_char_offset\n  local paren_group_char_offset_end\n  local\
    \ paren_group_char_offset_start\n  local paren_group_char_offset_start_end\n \
    \ local paren_group_char_offset_start_end_end\n  local paren_group_char_offset_start_end_end_end\n\
    \  local paren_group_char_offset_start_end_end_end_end\n  local paren_group_char_offset_start_end_end_end_end_end\n\
    \  local paren_group_char_offset_start_end_end_end_end_end_end\n  local paren_group_char_offset_start_end_end_end_end_end_end_end\n\
    \  local paren_group_char_offset_start_end_end_end_end_end_end_end_end\n  local\
    \ paren_group_char_offset_start_end_end_end_end_end_end_end_end_end\n  local paren_group_char_offset_start_end_end_end_end_end_end_end_end_end_end\n\
    \  local paren_group_char_offset_start_end_end_end_end_end_end_end_end_end_end_end\n\
    \  local paren_group_char_offset_start_end_end_end_end_end_end_end_end_end_end_end_end\n\
    \  local paren_group_char_offset_start_end_end_end_end_end_end_end_end_end_end_end_end_end\n\
    \  local paren_group_char_offset_start_end_end_end_end_end_end_end_end_end_end_end_end_end_end\n\
    \  local paren_group_char_offset_start_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end\n\
    \  local paren_group_char_offset_start_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end\n\
    \  local paren_group_char_offset_start_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end\n\
    \  local paren_group_char_offset_start_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end\n\
    \  local paren_group_char_offset_start_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end\n\
    \  local paren_group_char_offset_start_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end\n\
    \  local paren_group_char_offset_start_end_end_end_end_end_end_end_end_end_end_end_end_",
  "  local paren_groups = {}\n  local open_braces = 0\n  local closed_braces = 0\n\
    \  local paren_group = ''\n  local open_brace_count = 0\n  local closed_brace_count\
    \ = 0\n  for c in string.gmatch(paren_string, '%[()%]') do\n    if c == '(' then\n\
    \      open_braces = open_braces + 1\n      open_brace_count = open_brace_count\
    \ + 1\n    elseif c == ')' then\n      closed_braces = closed_braces + 1\n   \
    \   closed_brace_count = closed_brace_count + 1\n      if open_braces == closed_braces\
    \ then\n        paren_group = paren_group .. c\n      else\n        paren_groups[#paren_groups\
    \ + 1] = paren_group\n        paren_group = ''\n        open_braces = 0\n    \
    \    closed_braces = 0\n      end\n    else\n      paren_group = paren_group ..\
    \ c\n    end\n  end\n  paren_groups[#paren_groups + 1] = paren_group\n  return\
    \ paren_groups\nend", "  local groups = {}\n  local open_braces = 0\n  local close_braces\
    \ = 0\n  local brace_level = 0\n  local brace_stack = {}\n  local open_brace_level\
    \ = 0\n  local open_brace_stack = {}\n  local open_brace_levels = {}\n  local\
    \ open_brace_stacks = {}\n  local open_brace_levels_stack = {}\n  local open_brace_stacks_stack\
    \ = {}\n  local open_brace_levels_stacks = {}\n  local open_brace_stacks_stacks\
    \ = {}\n  local open_brace_levels_stacks_stack = {}\n  local open_brace_stacks_stacks_stack\
    \ = {}\n  local open_brace_levels_stacks_stacks = {}\n  local open_brace_stacks_stacks_stacks\
    \ = {}\n  local open_brace_levels_stacks_stacks_stack = {}\n  local open_brace_stacks_stacks_stacks_stack\
    \ = {}\n  local open_brace_levels_stacks_stacks_stacks = {}\n  local open_brace_stacks_stacks_stacks_stack\
    \ = {}\n  local open_brace_levels_stacks_stacks_stacks = {}\n  local open_brace_stacks_stacks_stacks_stack\
    \ = {}\n  local open_brace_levels_stacks_stacks_stacks = {}\n  local open_brace_stacks_stacks_stacks_stack\
    \ = {}\n  local open_brace_levels_stacks_stacks_stacks = {}\n  local open_brace_stacks_stacks_stacks_stack\
    \ = {}\n  local open_brace_levels_stacks_stacks_stacks = {}\n  local open_brace_stacks_stacks_stacks_stack\
    \ = {}\n  local open_brace_levels_stacks_stacks_stacks = {}\n  local open_brace_stacks_stacks_stacks_stack\
    \ = {}\n  local open_brace_levels_stacks_stacks_stacks = {}\n  local open_brace_stacks_stacks_stacks_stack\
    \ = {}\n  local open_brace_levels_stacks_stacks_stacks = {}\n  local open_brace_stacks_stacks_stacks_stack\
    \ = {}\n  local open_brace_levels_stacks_stacks_stacks = {}\n  local open_brace_stacks_stacks_stacks_stack\
    \ = {}\n  local open_brace_levels_stacks_stacks_stacks = {}\n  local open_brace_stacks_stacks_stacks_stack\
    \ = {}\n  local open_brace_levels_stacks_stacks_stacks = {}\n  local ", "  local\
    \ paren_groups = {}\n  local open_braces = 0\n  local close_braces = 0\n  local\
    \ paren_level = 0\n  local paren_group = ''\n  local open_brace_level = 0\n  local\
    \ close_brace_level = 0\n  local open_brace_group = ''\n  local close_brace_group\
    \ = ''\n  for char in string.gmatch(paren_string, '()') do\n    if char == '('\
    \ then\n      paren_level = paren_level + 1\n      open_braces = open_braces +\
    \ 1\n      open_brace_level = open_brace_level + 1\n      open_brace_group = open_brace_group\
    \ + char\n    elseif char == ')' then\n      paren_level = paren_level - 1\n \
    \     close_braces = close_braces + 1\n      close_brace_level = close_brace_level\
    \ + 1\n      close_brace_group = close_brace_group + char\n      if paren_level\
    \ == 0 then\n        table.insert(paren_groups, open_brace_group)\n        table.insert(paren_groups,\
    \ close_brace_group)\n      end\n    end\n  end\n  return paren_groups\nend",
  "  local open_braces, close_braces = 0, {}\n  local paren_groups = {}\n  for paren\
    \ in string.gmatch(paren_string, \"%[(%a)]+\") do\n    if paren == \"(\" then\n\
    \      open_braces = open_braces + 1\n    elseif paren == \")\" then\n      open_braces\
    \ = open_braces - 1\n      if open_braces == 0 then\n        table.insert(paren_groups,\
    \ table.concat(close_braces, \", \"))\n        close_braces = {}\n      end\n\
    \    else\n      table.insert(close_braces, paren)\n    end\n  end\n  if open_braces\
    \ > 0 then\n    table.insert(paren_groups, table.concat(close_braces, \", \"))\n\
    \  end\n  return paren_groups\nend", "  local groups = {}\n  local open_braces\
    \ = 0\n  local close_braces = 0\n  local open_brace_level = 0\n  local close_brace_level\
    \ = 0\n  local paren_level = 0\n  local paren_levels = {}\n  local paren_level_string\
    \ = ''\n  local paren_level_char = ''\n  local paren_level_char_length = 0\n \
    \ local paren_level_char_lengths = {}\n  local paren_level_char_lengths_index\
    \ = 0\n  local paren_level_char_lengths_indexs = {}\n  local paren_level_char_lengths_index_count\
    \ = 0\n  local paren_level_char_lengths_index_count_max = 0\n  local paren_level_char_lengths_index_count_min\
    \ = 0\n  local paren_level_char_lengths_index_count_step = 1\n  local paren_level_char_lengths_index_count_steps\
    \ = {}\n  local paren_level_char_lengths_index_count_max = 0\n  local paren_level_char_lengths_index_count_min\
    \ = 0\n  local paren_level_char_lengths_index_count_step = 1\n  local paren_level_char_lengths_index_count_steps\
    \ = {}\n  local paren_level_char_lengths_index_count_max = 0\n  local paren_level_char_lengths_index_count_min\
    \ = 0\n  local paren_level_char_lengths_index_count_step = 1\n  local paren_level_char_lengths_index_count_steps\
    \ = {}\n  local paren_level_char_lengths_index_count_max = 0\n  local paren_level_char_lengths_index_count_min\
    \ = 0\n  local paren_level_char_lengths_index_count_step = 1\n  local paren_level_char_lengths_index_count_steps\
    \ = {}\n  local paren_level_char_lengths_index_count_max = 0\n  local paren_level_char_lengths_index_count_min\
    \ = 0\n  local paren_level_char_lengths_index_count_step = 1\n  local paren_level_char_lengths_index_count_steps\
    \ = {}\n  local paren_level_char_lengths_index_count_max = 0\n  local paren_level_char_lengths_index_count_min\
    \ = 0\n  local paren_level_char_lengths_index_count_step = 1\n  local paren_level_char_lengths_index_count_steps\
    \ = {}\n  local paren_level_char_lengths_index_count_max = 0\n  local paren_level_char_lengths_index_count_min\
    \ = 0\n  local paren_level_char_lengths_index_count_step = 1\n  local paren_level_char_lengths_index_count_steps\
    \ = {}\n  local paren_level_char_lengths_index_count_max = 0\n  local paren_level_char_lengths_index_count_min\
    \ = 0\n  local paren_", "    local groups = {}\n    local open_braces = 0\n  \
    \  local close_braces = 0\n    local paren_level = 0\n    local paren_stack =\
    \ {}\n    local open_brace_level = 0\n    local open_brace_stack = {}\n    local\
    \ brace_level = 0\n    local brace_stack = {}\n    local brace_open = false\n\
    \    local brace_close = false\n    local brace_open_string = ''\n    local brace_close_string\
    \ = ''\n    local brace_open_string_count = 0\n    local brace_close_string_count\
    \ = 0\n    local paren_open = false\n    local paren_close = false\n    local\
    \ paren_open_string = ''\n    local paren_close_string = ''\n    local paren_open_string_count\
    \ = 0\n    local paren_close_string_count = 0\n    local paren_level_string =\
    \ ''\n    local paren_level_string_count = 0\n    local paren_level_counter =\
    \ 0\n    local paren_level_counter = 0\n    local paren_level_counter = 0\n  \
    \  local paren_level_counter = 0\n    local paren_level_counter = 0\n    local\
    \ paren_level_counter = 0\n    local paren_level_counter = 0\n    local paren_level_counter\
    \ = 0\n    local paren_level_counter = 0\n    local paren_level_counter = 0\n\
    \    local paren_level_counter = 0\n    local paren_level_counter = 0\n    local\
    \ paren_level_counter = 0\n    local paren_level_counter = 0\n    local paren_level_counter\
    \ = 0\n    local paren_level_counter = 0\n    local paren_level_counter = 0\n\
    \    local paren_level_counter = 0\n    local paren_level_counter = 0\n    local\
    \ paren_level_counter = 0\n    local paren_level_counter = 0\n    local paren_level_counter\
    \ = 0\n    local paren_level_counter = 0\n    local paren_level_counter = 0\n\
    \    local paren_level_counter = 0\n    local paren_level_counter = 0\n    local\
    \ paren_level_counter = 0\n    local paren_level_counter = 0\n    local paren_level_counter\
    \ = 0\n    local paren_level_counter = 0\n    local paren_level_counter = 0\n\
    \    local paren_level_counter = 0\n    local paren_level_counter = 0\n    local\
    \ paren_level_counter = 0\n    local paren_level_counter = 0\n    local paren_level_counter\
    \ = 0\n    local paren_level_counter = 0\n    local paren_level_counter = 0\n\
    \    local paren_level_counter = 0\n    local paren_level_counter = 0\n    local\
    \ paren_level_counter = 0\n    local paren_level_counter = 0\n    local paren_level_counter\
    \ = 0\n    local paren_level_counter = 0\n    local paren_level_counter = 0\n\
    \    local paren_level_counter = 0\n    local paren_level_counter = 0\n    local\
    \ paren_level_", "  local paren_groups = {}\n  local open_braces = 0\n  local\
    \ close_braces = 0\n  local paren_open = false\n  local paren_close = false\n\
    \  local paren_open_braces = 0\n  local paren_close_braces = 0\n  local paren_group_string\
    \ = ''\n  local paren_group_open = false\n  local paren_group_close = false\n\
    \  local paren_group_open_braces = 0\n  local paren_group_close_braces = 0\n \
    \ local paren_group_open = false\n  local paren_group_close = false\n  local paren_group_open_braces\
    \ = 0\n  local paren_group_close_braces = 0\n  local paren_group_open = false\n\
    \  local paren_group_close = false\n  local paren_group_open_braces = 0\n  local\
    \ paren_group_close_braces = 0\n  local paren_group_open = false\n  local paren_group_close\
    \ = false\n  local paren_group_open_braces = 0\n  local paren_group_close_braces\
    \ = 0\n  local paren_group_open = false\n  local paren_group_close = false\n \
    \ local paren_group_open_braces = 0\n  local paren_group_close_braces = 0\n  local\
    \ paren_group_open = false\n  local paren_group_close = false\n  local paren_group_open_braces\
    \ = 0\n  local paren_group_close_braces = 0\n  local paren_group_open = false\n\
    \  local paren_group_close = false\n  local paren_group_open_braces = 0\n  local\
    \ paren_group_close_braces = 0\n  local paren_group_open = false\n  local paren_group_close\
    \ = false\n  local paren_group_open_braces = 0\n  local paren_group_close_braces\
    \ = 0\n  local paren_group_open = false\n  local paren_group_close = false\n \
    \ local paren_group_open_braces = 0\n  local paren_group_close_braces = 0\n  local\
    \ paren_group_open = false\n  local paren_group_close = false\n  local paren_group_open_braces\
    \ = 0\n  local paren_group_close_braces = 0\n  local paren_group_open = false\n\
    \  local paren_group_close = false\n  local paren_group_open_braces = 0\n  local\
    \ paren_group_close_braces = 0\n  local paren_group_open = false\n  local paren_group_close\
    \ = false\n  local paren_group_open_braces = 0\n  local paren_group_close_braces\
    \ = 0\n  local paren_group_open = false\n  local paren_group_close = false\n \
    \ local paren", "  local paren_groups = {}\n  local open_braces = 0\n  local close_braces\
    \ = 0\n  local paren_level = 0\n  local paren_open = false\n  local paren_close\
    \ = false\n  local paren_level_string = ''\n  local paren_open_string = ''\n \
    \ local paren_close_string = ''\n  for i, c in ipairs(paren_string) do\n    if\
    \ c == '(' then\n      paren_open = true\n      paren_level_string = paren_level_string..c\n\
    \      paren_open_string = paren_open_string..c\n      paren_close = false\n \
    \     paren_level = 1\n    elseif c == ')' then\n      paren_close = true\n  \
    \    paren_level_string = paren_level_string..c\n      paren_open_string = paren_open_string..c\n\
    \      paren_close = false\n      paren_level = 0\n    elseif c == ' ' then\n\
    \      if paren_open then\n        paren_open = false\n        paren_level_string\
    \ = paren_level_string..c\n      elseif paren_close then\n        paren_close\
    \ = false\n        paren_level_string = paren_level_string..c\n      else\n  \
    \      paren_groups[#paren_groups + 1] = paren_level_string..c\n      end\n  \
    \  else\n      paren_open = false\n      paren_close = false\n      paren_level_string\
    \ = paren_level_string..c\n    end\n  end\n  return paren_groups\nend", "  local\
    \ open_braces, close_braces, open_brace_counts, close_brace_counts = { }, {},\
    \ {}, {}\n  local open_brace_count, close_brace_count = 0, 0\n  local open_brace_start,\
    \ open_brace_end, close_brace_start, close_brace_end = 1, #paren_string, #paren_string,\
    \ 1\n  while open_brace_start <= open_brace_end do\n    open_brace_count = open_brace_counts[paren_string[open_brace_start]]\n\
    \    open_brace_start = open_brace_start + open_brace_count\n    open_brace_counts[paren_string[open_brace_start]]\
    \ = open_brace_count + 1\n  end\n  while close_brace_start <= close_brace_end\
    \ do\n    close_brace_count = close_brace_counts[paren_string[close_brace_start]]\n\
    \    close_brace_start = close_brace_start + close_brace_count\n    close_brace_counts[paren_string[close_brace_start]]\
    \ = close_brace_count + 1\n  end\n  local open_brace_start, open_brace_end, close_brace_start,\
    \ close_brace_end = 1, #paren_string, #paren_string, 1\n  while open_brace_start\
    \ <= open_brace_end do\n    open_brace_count = open_brace_counts[paren_string[open_brace_start]]\n\
    \    open_brace_start = open_brace_start + open_brace_count\n    open_brace_counts[paren_string[open_brace_start]]\
    \ = open_brace_count + 1\n  end\n  while close_brace_start <= close_brace_end\
    \ do\n    close_brace_count = close_brace_counts[paren_string[close_brace_start]]\n\
    \    close_brace_start = close_brace_start + close_brace_count\n    close_brace_counts[paren_string[close_brace_start]]\
    \ = close_brace_count + 1\n  end\n  local open_braces, close_braces, open_brace_counts,\
    \ close_brace_counts = { }, {}, {}, {}\n  local open_brace_count, close_brace_count\
    \ = 0, 0\n  local open_brace_start, open_brace_end, close_brace_start, close_brace_end\
    \ = 1, #paren_string, #paren_string, 1\n  while open_brace_start <= open_brace_end ",
  "  local paren_groups = {}\n  local open_braces = 0\n  local close_braces = 0\n\
    \  local paren_open = false\n  local paren_close = false\n  local paren_open_braces\
    \ = 0\n  local paren_close_braces = 0\n  local paren_group = {}\n  local paren_group_start\
    \ = -1\n  local paren_group_end = -1\n  local paren_group_open = false\n  local\
    \ paren_group_close = false\n  local paren_group_open_braces = 0\n  local paren_group_close_braces\
    \ = 0\n  local paren_group_is_open = false\n  local paren_group_is_close = false\n\
    \  local paren_group_is_open_braces = 0\n  local paren_group_is_close_braces =\
    \ 0\n  local paren_group_is_open = false\n  local paren_group_is_close = false\n\
    \  local paren_group_is_open_braces = 0\n  local paren_group_is_close_braces =\
    \ 0\n  local paren_group_is_open = false\n  local paren_group_is_close = false\n\
    \  local paren_group_is_open_braces = 0\n  local paren_group_is_close_braces =\
    \ 0\n  local paren_group_is_open = false\n  local paren_group_is_close = false\n\
    \  local paren_group_is_open_braces = 0\n  local paren_group_is_close_braces =\
    \ 0\n  local paren_group_is_open = false\n  local paren_group_is_close = false\n\
    \  local paren_group_is_open_braces = 0\n  local paren_group_is_close_braces =\
    \ 0\n  local paren_group_is_open = false\n  local paren_group_is_close = false\n\
    \  local paren_group_is_open_braces = 0\n  local paren_group_is_close_braces =\
    \ 0\n  local paren_group_is_open = false\n  local paren_group_is_close = false\n\
    \  local paren_group_is_open_braces = 0\n  local paren_group_is_close_braces =\
    \ 0\n  local paren_group_is_open = false\n  local paren_group_is_close = false\n\
    \  local paren_group_is_open_braces = 0\n  local paren_group_is_close_braces =\
    \ 0\n  local paren_group_is_open = false\n  local paren_group_is_close = false\n\
    \  local paren_group_is_open_braces = 0\n  local paren_group_is_close_braces =\
    \ 0\n  local paren_group_is_open = false\n  local paren_group_is_close = false\n\
    \  local paren_group_is_open_braces = 0\n  local paren_group_is_close_braces =\
    \ 0\n", "    local paren_groups = {}\n    local open_braces = 0\n    local closed_braces\
    \ = 0\n    local paren_open = false\n    local paren_closed = false\n    local\
    \ paren_group = ''\n    local paren_group_len = 0\n    local paren_group_len2\
    \ = 0\n    local paren_group_len3 = 0\n    local paren_group_len4 = 0\n    local\
    \ paren_group_len5 = 0\n    local paren_group_len6 = 0\n    local paren_group_len7\
    \ = 0\n    local paren_group_len8 = 0\n    local paren_group_len9 = 0\n    local\
    \ paren_group_len10 = 0\n    local paren_group_len11 = 0\n    local paren_group_len12\
    \ = 0\n    local paren_group_len13 = 0\n    local paren_group_len14 = 0\n    local\
    \ paren_group_len15 = 0\n    local paren_group_len16 = 0\n    local paren_group_len17\
    \ = 0\n    local paren_group_len18 = 0\n    local paren_group_len19 = 0\n    local\
    \ paren_group_len20 = 0\n    local paren_group_len21 = 0\n    local paren_group_len22\
    \ = 0\n    local paren_group_len23 = 0\n    local paren_group_len24 = 0\n    local\
    \ paren_group_len25 = 0\n    local paren_group_len26 = 0\n    local paren_group_len27\
    \ = 0\n    local paren_group_len28 = 0\n    local paren_group_len29 = 0\n    local\
    \ paren_group_len30 = 0\n    local paren_group_len31 = 0\n    local paren_group_len32\
    \ = 0\n    local paren_group_len33 = 0\n    local paren_group_len34 = 0\n    local\
    \ paren_group_len35 = 0\n    local paren_group_len36 = 0\n    local paren_group_len37\
    \ = 0\n    local paren_group_len38 = 0\n    local paren_group_len39 = 0\n    local\
    \ paren_group_len40 = 0\n    local paren_group_len41 = 0\n    local paren_group_len42\
    \ = 0\n    local paren_group_len43 = 0\n    local paren_group_len44 = 0\n    local\
    \ paren_group_len45 = 0\n    local paren_group_len46 = 0\n    local paren_group_len47\
    \ = 0\n    local paren_group_len48 = 0\n    local paren_group_len49 = 0\n    local\
    \ paren_group_len50 = 0\n    local paren_group_len51 = 0\n    local paren_group_len52\
    \ = 0\n    local ", "  local open_braces = { }\n  local close_braces = { }\n \
    \ local open_brace_count = 0\n  local close_brace_count = 0\n  local paren_string\
    \ = paren_string:gsub('(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%b)(%",
  "  local open_braces = {}\n  local close_braces = {}\n  local open_paren = 0\n \
    \ local close_paren = 0\n  local open_brace_count = 0\n  local close_brace_count\
    \ = 0\n  local paren_count = 0\n  local brace_count = 0\n  local brace_count_in_paren\
    \ = 0\n  local brace_count_in_close = 0\n  local paren_count_in_close = 0\n  local\
    \ paren_count_in_open = 0\n  local open_brace_count_in_close = 0\n  local open_brace_count_in_open\
    \ = 0\n  local close_brace_count_in_open = 0\n  local close_brace_count_in_close\
    \ = 0\n  local open_brace_count_in_open = 0\n  local close_brace_count_in_open\
    \ = 0\n  local open_brace_count_in_close = 0\n  local open_brace_count_in_open\
    \ = 0\n  local close_brace_count_in_close = 0\n  local open_brace_count_in_open\
    \ = 0\n  local close_brace_count_in_open = 0\n  local open_brace_count_in_close\
    \ = 0\n  local open_brace_count_in_open = 0\n  local close_brace_count_in_close\
    \ = 0\n  local open_brace_count_in_open = 0\n  local close_brace_count_in_open\
    \ = 0\n  local open_brace_count_in_close = 0\n  local open_brace_count_in_open\
    \ = 0\n  local close_brace_count_in_close = 0\n  local open_brace_count_in_open\
    \ = 0\n  local close_brace_count_in_open = 0\n  local open_brace_count_in_close\
    \ = 0\n  local open_brace_count_in_open = 0\n  local close_brace_count_in_close\
    \ = 0\n  local open_brace_count_in_open = 0\n  local close_brace_count_in_open\
    \ = 0\n  local open_brace_count_in_close = 0\n  local open_brace_count_in_open\
    \ = 0\n  local close_brace_count_in_close = 0\n  local open_brace_count_in_open\
    \ = 0\n  local close_brace_count_in_open = 0\n  local open_brace_count_in_close\
    \ = 0\n  local open_brace_count_in_open = 0\n  local close_brace_count_in_close\
    \ = 0\n  local open_brace_count_in_open = 0\n  local close_brace_count_in_open\
    \ = 0\n  local open_brace_count_in_close = 0\n  local open_brace_count_in_open\
    \ = 0\n  local close_b"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

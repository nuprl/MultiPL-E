language: lua
name: HumanEval_45_triangle_area
results:
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h + h + h) / 6\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h + h + h) / 6\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 3) * (h / 3)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2xxd09ss.lua:11:\
    \ expected: 7.5, actual: 5\nstack traceback:\n\t/tmp/tmp2xxd09ss.lua:11: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h + h + h) / 6\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / math.sqrt(3) * math.sin(math.pi/3 * math.floor((h / 2) / a))\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2, 2),\
    \ 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpej4g2759.lua:11:\
    \ expected: 7.5, actual: 0.0\nstack traceback:\n\t/tmp/tmpej4g2759.lua:11: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h + math.sin(math.rad(a)) * h)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfka3f24p.lua:11:\
    \ expected: 7.5, actual: 16.307336141215\nstack traceback:\n\t/tmp/tmpfka3f24p.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n    return\
    \ a * ((math.sqrt(3)/2)*h + math.sqrt(3)/4)\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_o73f5il.lua:11:\
    \ expected: 7.5, actual: 15.155444566228\nstack traceback:\n\t/tmp/tmp_o73f5il.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h + math.sqrt(h ** 2 - 4 * a ^ 2))\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp8by8nr2d.lua:5: unexpected symbol near ''*''

    '
  stdout: ''
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 3) * (h / 3)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2xxd09ss.lua:11:\
    \ expected: 7.5, actual: 5\nstack traceback:\n\t/tmp/tmp2xxd09ss.lua:11: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 3) * (h / 3)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2xxd09ss.lua:11:\
    \ expected: 7.5, actual: 5\nstack traceback:\n\t/tmp/tmp2xxd09ss.lua:11: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9i_mguol.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp9i_mguol.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n    return\
    \ math.sqrt(a * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7ywc5br0.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmp7ywc5br0.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / math.sqrt(3) * math.sin(math.pi / 3)\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9i_mguol.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp9i_mguol.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) / 2) * (math.pow(h / a, 2)) ^ 2)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo_xiu_i3.lua:11:\
    \ expected: 7.5, actual: 0.56118446165232\nstack traceback:\n\t/tmp/tmpo_xiu_i3.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(math.pow(a,\
    \ 2) * math.pow(h, 2) - math.pow(a, 2) * math.pow(h, 2))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjlzofc8i.lua:11:\
    \ expected: 7.5, actual: 0.0\nstack traceback:\n\t/tmp/tmpjlzofc8i.lua:11: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9i_mguol.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp9i_mguol.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / math.sqrt(3) * math.sin(math.pi/3 * h)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjxj7m03z.lua:11:\
    \ expected: 7.5, actual: 1.0605752387249e-15\nstack traceback:\n\t/tmp/tmpjxj7m03z.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 3) * (h / 3)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2xxd09ss.lua:11:\
    \ expected: 7.5, actual: 5\nstack traceback:\n\t/tmp/tmp2xxd09ss.lua:11: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h + math.sqrt(h * h + 4 * a ^ 2))\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5ibimrs6.lua:11:\
    \ expected: 7.5, actual: 67.201532544553\nstack traceback:\n\t/tmp/tmp5ibimrs6.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3)/2)*h*h + a*h*(a+h))\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdxaij3kz.lua:11:\
    \ expected: 7.5, actual: 638.9711431703\nstack traceback:\n\t/tmp/tmpdxaij3kz.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9i_mguol.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp9i_mguol.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9i_mguol.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp9i_mguol.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(math.pow(a,\
    \ 2) * math.pow(h, 2) - math.pow(a, 2) * math.pow(h, 2))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjlzofc8i.lua:11:\
    \ expected: 7.5, actual: 0.0\nstack traceback:\n\t/tmp/tmpjlzofc8i.lua:11: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 3) * (h / 3)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2xxd09ss.lua:11:\
    \ expected: 7.5, actual: 5\nstack traceback:\n\t/tmp/tmp2xxd09ss.lua:11: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h + h + h) / 6\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3)/2)*h + math.sqrt(3)*h/3) -- (math.sqrt(3)/2)*h\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3x4_9zg9.lua:11:\
    \ expected: 7.5, actual: 21.650635094611\nstack traceback:\n\t/tmp/tmp3x4_9zg9.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / math.sqrt(3) * math.sin(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.rad(math.pi/3-math.\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2, 2),\
    \ 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpn37gn21b.lua:6: '')'' expected (to close ''('' at line 5)
    near ''=''

    '
  stdout: ''
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9i_mguol.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp9i_mguol.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 3) * (h / 3)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2xxd09ss.lua:11:\
    \ expected: 7.5, actual: 5\nstack traceback:\n\t/tmp/tmp2xxd09ss.lua:11: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h + h + h) / 6\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9i_mguol.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp9i_mguol.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h + h + h) / 6\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / math.sqrt(3) * math.sin(math.pi/3 * h)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjxj7m03z.lua:11:\
    \ expected: 7.5, actual: 1.0605752387249e-15\nstack traceback:\n\t/tmp/tmpjxj7m03z.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / math.sqrt(3) * math.sin(math.pi/3 * math.floor(h/2))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp34yy32uz.lua:13:\
    \ expected: 40.0, actual: -40.0\nstack traceback:\n\t/tmp/tmp34yy32uz.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(math.pow(a,\
    \ 2) * math.pow((h + h), 3) / math.pow((a + a), 2))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqqlfi2j5.lua:11:\
    \ expected: 7.5, actual: 7.3484692283495\nstack traceback:\n\t/tmp/tmpqqlfi2j5.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n    return\
    \ math.sqrt(a * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqasitbse.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpqasitbse.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / math.sqrt(3) * math.sin(math.pi / 6)\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmbjijjos.lua:11:\
    \ expected: 7.5, actual: 4.3301270189222\nstack traceback:\n\t/tmp/tmpmbjijjos.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n    return\
    \ math.sqrt(a * a + h * h)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuhupigo5.lua:11:\
    \ expected: 7.5, actual: 5.8309518948453\nstack traceback:\n\t/tmp/tmpuhupigo5.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9i_mguol.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp9i_mguol.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / math.sqrt(3) * math.tan(math.pi/3 - math.acos(a/h))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfjbt2a_l.lua:11:\
    \ expected: 7.5, actual: #NaN\nstack traceback:\n\t/tmp/tmpfjbt2a_l.lua:11: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9i_mguol.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp9i_mguol.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h + h + h) / 6\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 3) * (h / 3)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2xxd09ss.lua:11:\
    \ expected: 7.5, actual: 5\nstack traceback:\n\t/tmp/tmp2xxd09ss.lua:11: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 3) * (h / 3)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2xxd09ss.lua:11:\
    \ expected: 7.5, actual: 5\nstack traceback:\n\t/tmp/tmp2xxd09ss.lua:11: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 3) * (h / 3)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2xxd09ss.lua:11:\
    \ expected: 7.5, actual: 5\nstack traceback:\n\t/tmp/tmp2xxd09ss.lua:11: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) / 2) * h) - (math.sqrt(3) / 2) * a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2e4hjk44.lua:11:\
    \ expected: 7.5, actual: 8.6602540378444\nstack traceback:\n\t/tmp/tmp2e4hjk44.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) / 2) * h + math.sqrt(3) / 2)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphs4qnpg6.lua:11:\
    \ expected: 7.5, actual: 17.320508075689\nstack traceback:\n\t/tmp/tmphs4qnpg6.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9i_mguol.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp9i_mguol.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9i_mguol.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp9i_mguol.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9i_mguol.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp9i_mguol.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9i_mguol.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp9i_mguol.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h + h + h) / 6\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 3) + ((a + h) / 2) * (h / 3)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsdby207e.lua:11:\
    \ expected: 7.5, actual: 9.0\nstack traceback:\n\t/tmp/tmpsdby207e.lua:11: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * math.sqrt(3) / 4 + h / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprggxgqhm.lua:11:\
    \ expected: 7.5, actual: 3.6650635094611\nstack traceback:\n\t/tmp/tmprggxgqhm.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n    return\
    \ math.sqrt(a * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqasitbse.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpqasitbse.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n    return\
    \ math.sqrt(a * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7ywc5br0.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmp7ywc5br0.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(math.pow(a,\
    \ 2) * math.pow(h, 2) - math.pow(a, 2) * math.pow(h / 2, 2))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfkyiwc3u.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmpfkyiwc3u.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h + math.sin(math.rad(a)) / math.sqrt(3))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_l79cezv.lua:11:\
    \ expected: 7.5, actual: 15.251596957684\nstack traceback:\n\t/tmp/tmp_l79cezv.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h + h + h) / 6\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h + h + h) / 6\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9i_mguol.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp9i_mguol.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h + h + h) / 6\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * math.sqrt(3) / math.pow(h / 2, 2)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwfw9s52i.lua:11:\
    \ expected: 7.5, actual: 3.8490017945975\nstack traceback:\n\t/tmp/tmpwfw9s52i.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9i_mguol.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp9i_mguol.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 3) * (h / 3)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2xxd09ss.lua:11:\
    \ expected: 7.5, actual: 5\nstack traceback:\n\t/tmp/tmp2xxd09ss.lua:11: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n    return\
    \ math.sqrt(a * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqasitbse.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpqasitbse.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9i_mguol.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp9i_mguol.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9i_mguol.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp9i_mguol.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / math.sqrt(3) * math.sin(math.pi / 3)\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3)/2)*h*h/math.pow(a, 2))\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmbnw07o.lua:11:\
    \ expected: 7.5, actual: 1.558845726812\nstack traceback:\n\t/tmp/tmpbmbnw07o.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9i_mguol.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp9i_mguol.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9i_mguol.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp9i_mguol.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9i_mguol.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp9i_mguol.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * math.sqrt(3) / 2 + h\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr5oh7_z4.lua:11:\
    \ expected: 7.5, actual: 7.3301270189222\nstack traceback:\n\t/tmp/tmpr5oh7_z4.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9i_mguol.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp9i_mguol.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / math.sqrt(3) * math.sin(math.pi/3-math.rad(math.atan(h/a)))\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2, 2),\
    \ 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgcxqn60a.lua:11:\
    \ expected: 7.5, actual: 7.4588248017504\nstack traceback:\n\t/tmp/tmpgcxqn60a.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 3) * (h / 3)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2xxd09ss.lua:11:\
    \ expected: 7.5, actual: 5\nstack traceback:\n\t/tmp/tmp2xxd09ss.lua:11: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9i_mguol.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp9i_mguol.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * h / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * (h / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2,\
    \ 2), 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4molibw.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpb4molibw.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9i_mguol.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp9i_mguol.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n    return\
    \ math.sqrt(a * a + h * h) / 2.0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7ywc5br0.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmp7ywc5br0.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) / 2) * (h + math.sqrt(3) / 2))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpggckgccb.lua:11:\
    \ expected: 7.5, actual: 16.740381056767\nstack traceback:\n\t/tmp/tmpggckgccb.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return math.sqrt(a\
    \ * a + h * h) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfmbf48r1.lua:11:\
    \ expected: 7.5, actual: 2.9154759474227\nstack traceback:\n\t/tmp/tmpfmbf48r1.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750294
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  local s =\
    \ 0.5 * (a + h)\n  return math.sqrt(s * (s - a) * (s - h))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(5,\
    \ 3), 7.5)\n    lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10,\
    \ 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp93aasubb.lua:12:\
    \ expected: 7.5, actual: #NaN\nstack traceback:\n\t/tmp/tmp93aasubb.lua:12: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821993
- exit_code: 1
  program: "-- Given length of a side and high return area for a triangle.\n-- >>>\
    \ triangle_area(5, 3)\n-- 7.5\nlocal function triangle_area(a, h)\n  return a\
    \ * ((math.sqrt(3) * h) / 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = triangle_area\n    lu.assertEquals(candidate(5, 3), 7.5)\n \
    \   lu.assertEquals(candidate(2, 2), 2.0)\n    lu.assertEquals(candidate(10, 8),\
    \ 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9i_mguol.lua:11:\
    \ expected: 7.5, actual: 12.990381056767\nstack traceback:\n\t/tmp/tmp9i_mguol.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821993

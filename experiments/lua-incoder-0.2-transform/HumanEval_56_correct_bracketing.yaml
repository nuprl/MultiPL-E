name: HumanEval_56_correct_bracketing
language: lua
prompt: "-- brackets is a string of \"<\" and \">\".\n-- return True if every opening\
  \ bracket has a corresponding closing bracket.\n-- >>> correct_bracketing('<')\n\
  -- false\n-- >>> correct_bracketing('<>')\n-- true\n-- >>> correct_bracketing('<<><>>')\n\
  -- true\n-- >>> correct_bracketing('><<>')\n-- false\nlocal function correct_bracketing(brackets)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = correct_bracketing\n\
  \    lu.assertEquals(candidate('<>'), true)\n    lu.assertEquals(candidate('<<><>>'),\
  \ true)\n    lu.assertEquals(candidate('<><><<><>><>'), true)\n    lu.assertEquals(candidate('<><><<<><><>><>><<><><<>>>'),\
  \ true)\n    lu.assertEquals(candidate('<<<><>>>>'), false)\n    lu.assertEquals(candidate('><<>'),\
  \ false)\n    lu.assertEquals(candidate('<'), false)\n    lu.assertEquals(candidate('<<<<'),\
  \ false)\n    lu.assertEquals(candidate('>'), false)\n    lu.assertEquals(candidate('<<>'),\
  \ false)\n    lu.assertEquals(candidate('<><><<><>><>><<>'), false)\n    lu.assertEquals(candidate('<><><<><>><>>><>'),\
  \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local opening_brackets = brackets:gsub('(<)', '\\1'):gsub('(>)',\
    \ '\\2')\n  local closing_brackets = brackets:gsub('(<)', '\\2'):gsub('(>)', '\\\
    1')\n  return opening_brackets == closing_brackets\nend", "   if brackets == '<'\
    \ then\n      return false\n   elseif brackets == '>' then\n      return true\n\
    \   else\n      return false\n   end\nend", "  local opening_brackets = brackets:gsub('(<)([^>]+)(>)',\
    \ '\\2')\n  local closing_brackets = brackets:gsub('(<)([^>]+)(>)', '\\1')\n \
    \ return opening_brackets ~= closing_brackets\nend", "  local opening_brackets\
    \ = brackets:gsub('>*$', '>')\n  local closing_brackets = brackets:gsub('^>*',\
    \ '<')\n  return opening_brackets:len() == closing_brackets:len()\nend", "  local\
    \ open_brackets = brackets:gsub('(<)', '%s*%L+%L+')\n  local close_brackets =\
    \ brackets:gsub('(>)', '%s*%L+%L+')\n  return open_brackets:gsub('%L+', '>') ~=\
    \ close_brackets:gsub('%L+', '<')\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n  return\
    \ opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('(<%%(%+)(%*)%>)', '%%%1%%%2%%%3')\n  local closing_brackets\
    \ = brackets:gsub('(%%(%+)(%*)%>)', '%%%1%%%2%%%3')\n  return opening_brackets:len()\
    \ == closing_brackets:len() and\n         opening_brackets:sub(1, -1) == closing_brackets:sub(1,\
    \ -1)\nend", "  local opening_brackets = brackets:gsub('%b()', '%s*%b()')\n  local\
    \ closing_brackets = brackets:gsub('%b()', '%s*%b()')\n  return opening_brackets:sub(1,\
    \ #opening_brackets) == closing_brackets\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  return opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)([^>]+)(>)', '\\2')\n  local closing_brackets = brackets:gsub('(<)([^>]+)(>)',\
    \ '\\1')\n  return opening_brackets == closing_brackets\nend", "  local opening\
    \ = brackets:gsub('<', '(')\n  local closing = brackets:gsub('>', ')')\n  return\
    \ opening:len() == closing:len() and opening:sub(1, -1) == closing:sub(1, -1)\n\
    end", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  for i = 1, #opening_brackets do\n    if opening_brackets[i:len(i)+1] ~= closing_brackets[i:len(i)+1]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n  local closing_brackets = brackets:gsub('(<%1)','%1'):gsub('(>%1)','%1')\n\
    \  return opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('%<([^>]+)>%', function(x)\n    return x:reverse()\n  end)\n\
    \  local closing_brackets = brackets:gsub('%<([^>]+)>%', function(x)\n    return\
    \ x:reverse()\n  end)\n  for i = 1, #opening_brackets do\n    if opening_brackets[i]\
    \ ~= closing_brackets[i] then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening_brackets = brackets:gsub('(<)', '\\1')\n  local closing_brackets\
    \ = brackets:gsub('(>)', '\\1')\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening_brackets = brackets:gsub('(<)([^>]+)$', '\\1\\2')\n  local\
    \ closing_brackets = brackets:gsub('(<)([^>]+)$', '\\2\\1')\n  return opening_brackets\
    \ == closing_brackets\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n  return\
    \ opening_brackets:find(closing_brackets) == nil\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local opening_brackets_count = opening_brackets:count('<')\n  local closing_brackets_count\
    \ = closing_brackets:count('<')\n  return opening_brackets_count == closing_brackets_count\n\
    end", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n  local\
    \ opening_brackets_count = opening_brackets:gsub('%2','%1'):gsub('%1','%2'):gsub('%2','%1')\n\
    \  return opening_brackets_count == closing_brackets\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  for i = 1, #opening_brackets do\n    if opening_brackets[i:len(i)+1] ~= closing_brackets[i:len(i)+1]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)([^>]+)$', '\\1\\2')\n  local closing_brackets = brackets:gsub('(<)(.+$)',\
    \ '\\1\\2')\n  return opening_brackets ~= closing_brackets\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  return opening_brackets:len() == closing_brackets:len() and opening_brackets:gsub('%1','('):gsub('%1',')')\
    \ == closing_brackets:gsub('%1','('):gsub('%1',')')\nend", "  local opening_brackets\
    \ = brackets:gsub('>*$', '>')\n  local closing_brackets = brackets:gsub('^>*',\
    \ '>')\n  return opening_brackets:len() == closing_brackets:len()\nend", "  local\
    \ opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local opening_brackets_count = opening_brackets:count('<')\n  local closing_brackets_count\
    \ = closing_brackets:count('<')\n  return opening_brackets_count == closing_brackets_count\n\
    end", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n  return\
    \ opening_brackets:len() == closing_brackets:len() and\n         opening_brackets:gsub('(%1)','%2'):gsub('(%2)','%1'):gsub('(%1)','%2'):gsub('(%2)','%1')\n\
    end", "  local opening_brackets = brackets:gsub('(<)', '\\1'):gsub('(>)', '\\\
    2')\n  local closing_brackets = brackets:gsub('(<)', '\\2'):gsub('(>)', '\\1')\n\
    \  return opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)', ''):gsub('(>)', '')\n  return opening_brackets:len()\
    \ == brackets:len()\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  return opening_brackets:len() == closing_brackets:len() and opening_brackets:gsub('%1','('):gsub('%1',')'):gsub('%1','<<'):gsub('%1','>>')\n\
    end", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n  return\
    \ opening_brackets:len() == closing_brackets:len() and\n         opening_brackets:sub(1,1)\
    \ == closing_brackets:sub(1,1) and\n         opening_brackets:sub(2,2) == closing_brackets:sub(2,2)\n\
    end", "  local opening_brackets = {}\n  local closing_brackets = {}\n  for _,\
    \ bracket in ipairs(brackets) do\n    opening_brackets[bracket] = true\n    closing_brackets[bracket]\
    \ = false\n  end\n  local opening_brackets_sorted = table.sort(opening_brackets)\n\
    \  for _, opening_bracket in ipairs(opening_brackets_sorted) do\n    local closing_bracket\
    \ = opening_brackets[opening_bracket]\n    if closing_bracket then\n      closing_brackets[closing_bracket]\
    \ = true\n    end\n  end\n  return table.sort(closing_brackets) == {}\nend", " \
    \ local opening = brackets:gsub('(<)','%1')\n  local closing = brackets:gsub('(>)','%1')\n\
    \  return opening:len() == closing:len()\nend", "  local opening = brackets:find('<')\n\
    \  local closing = brackets:find('>')\n  local opening_count = brackets:count('<')\n\
    \  local closing_count = brackets:count('>')\n  return opening_count == closing_count\
    \ and opening ~= nil and closing ~= nil\nend", "  local opening_brackets = brackets:gsub('(<%%(%+)(%*)%>)',\
    \ '%1%2%3')\n  local closing_brackets = brackets:gsub('(%%(%+)(%*)%>)', '%1%2%3')\n\
    \  return opening_brackets:len() == closing_brackets:len()\nend", "  local opening\
    \ = brackets:find('<')\n  local closing = brackets:find('>')\n  local opening_count\
    \ = brackets:count('<')\n  local closing_count = brackets:count('>')\n  return\
    \ opening_count == closing_count and opening ~= nil and closing ~= nil\nend",
  "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  for i = 1, #opening_brackets do\n    if opening_brackets[i]:sub(1,1) ~= closing_brackets[i]:sub(#opening_brackets[i],1)\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening\
    \ = brackets:find('<')\n  local closing = brackets:find('>')\n  local opening_count\
    \ = brackets:count('<')\n  local closing_count = brackets:count('>')\n  return\
    \ opening_count == closing_count and opening ~= nil and closing ~= nil\nend",
  "  local opening_brackets = brackets:gsub('(<)', '%s*%L+%L+')\n  local closing_brackets\
    \ = brackets:gsub('(>)', '%s*%L+%L+')\n  return opening_brackets:gsub('%L+', '>')\
    \ ~= closing_brackets:gsub('%L+', '<')\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n  local\
    \ opening_brackets_count = opening_brackets:count('<')\n  local closing_brackets_count\
    \ = closing_brackets:count('<')\n  return opening_brackets_count == closing_brackets_count\n\
    end", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local opening_brackets_count = opening_brackets:count('<')\n  local closing_brackets_count\
    \ = closing_brackets:count('>')\n  return opening_brackets_count == closing_brackets_count\n\
    end", "   for i = 1, #brackets do\n      if brackets[i] == '<' then\n        \
    \ if brackets[i+1] == '>' then\n            return true\n         end\n      end\n\
    \   end\n   return false\nend", "  local opening_brackets = brackets:gsub('(<)',\
    \ '\\1'):gsub('(>)', '\\2')\n  local closing_brackets = brackets:gsub('(<)', '\\\
    2'):gsub('(>)', '\\1')\n  return opening_brackets ~= closing_brackets\nend", " \
    \ local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  return opening_brackets:len() == closing_brackets:len() and opening_brackets:gsub('%1','('):gsub('%1',')'):gsub('%1','<<'):gsub('%1','>>')\n\
    end", "  local open_brackets = brackets:gsub('(<)', '\\1'):gsub('(>)', '\\2'):gsub('(<)',\
    \ '\\1'):gsub('(>)', '\\2')\n  return open_brackets:sub(1, open_brackets:len())\
    \ == open_brackets\nend", "  local open_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local close_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local open_brackets_count = open_brackets:gsub('%1>','>'):gsub('%1<','<'):gsub('%1<<','<<'):gsub('%1>>','>>'):gsub('%1><<','<<'):gsub('%1>><','>><'):gsub('%1>>>','>>>')\n\
    \  local close_brackets_count = close_brackets:gsub('%1>','>'):gsub('%1<','<'):gsub('%1<<','<<'):gsub('%1>>','>>'):gsub('%1><<','<<'):gsub('%1>><','>><'):gsub('%1>>>','>>>')\n\
    \  return open_brackets_count == close_brackets_count\nend", "  local open_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local close_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  return open_brackets:gsub('%1>','>'):gsub('%1<','<'):gsub('%1<<','<<'):gsub('%1>>','>>')\n\
    end", "  local opening = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n  local closing\
    \ = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n  return opening:len() == closing:len()\
    \ and opening:sub(1,-1) == closing:sub(1,-1)\nend", "  local opening_brackets\
    \ = brackets:gsub('(<%%(%+)(%>%+))', function(_, _, opening_brackets)\n    return\
    \ opening_brackets:gsub('(%+)(%>%+)', '%%%2')\n  end)\n  local closing_brackets\
    \ = brackets:gsub('(%%(%+)(%>%+))', function(_, _, closing_brackets)\n    return\
    \ closing_brackets:gsub('(%+)(%>%+)', '%%%2')\n  end)\n  local opening_brackets_count\
    \ = opening_brackets:gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%2'):gsub('%%%",
  "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  return opening_brackets:len() == closing_brackets:len() and opening_brackets:gsub('%1',''):gsub('%1','')\n\
    end", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n  return\
    \ opening_brackets:len() == closing_brackets:len() and\n         opening_brackets:sub(1,1)\
    \ == closing_brackets:sub(1,1)\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local opening_brackets_count = opening_brackets:gsub('%1','%2'):gsub('%1','%2'):gsub('%1','%2'):gsub('%1','%2')\n\
    \  local closing_brackets_count = closing_brackets:gsub('%1','%2'):gsub('%1','%2'):gsub('%1','%2'):gsub('%1','%2')\n\
    \  return opening_brackets_count == closing_brackets_count\nend", "  local opening_brackets\
    \ = brackets:gsub('(<%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%",
  "  local opening_brackets = brackets:gsub('(<)([^>]+)(>)', '\\2')\n  local closing_brackets\
    \ = brackets:gsub('(<)([^>]+)(>)', '\\3')\n  return opening_brackets ~= closing_brackets\n\
    end", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  for i = 1, #opening_brackets do\n    local opening = opening_brackets[i]\n\
    \    local closing = closing_brackets[i]\n    if opening ~= closing then\n   \
    \   return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = {}\n  local closing_brackets = {}\n  for i = 1, #brackets do\n    local bracket\
    \ = brackets[i]\n    if bracket:sub(1, 1) == '<' then\n      table.insert(opening_brackets,\
    \ bracket)\n    elseif bracket:sub(1, 1) == '>' then\n      table.insert(closing_brackets,\
    \ bracket)\n    end\n  end\n  for i = 1, #opening_brackets do\n    local opening_bracket\
    \ = opening_brackets[i]\n    for j = 1, #closing_brackets do\n      local closing_bracket\
    \ = closing_brackets[j]\n      if opening_bracket == closing_bracket then\n  \
    \      return false\n      end\n    end\n  end\n  return true\nend", "  local\
    \ opening_brackets = brackets:gsub('%b()', '')\n  local closing_brackets = brackets:gsub('%b()',\
    \ '%%%1')\n  return opening_brackets:len() == closing_brackets:len()\nend", " \
    \ local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  for i = 1, #opening_brackets do\n    if opening_brackets[i]:sub(1,1) ~= closing_brackets[i]:sub(1,1)\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n  local closing_brackets = brackets:gsub('(<%1)','%1'):gsub('(>%1)','%1')\n\
    \  return opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('>*<', '><'):gsub('>*', '>')\n  local closing_brackets = brackets:gsub('<*<',\
    \ '<'):gsub('<*', '>')\n  return opening_brackets:sub(1, -1) == closing_brackets:sub(1,\
    \ -1)\nend", "  local opening_brackets = brackets:gsub
  "  local opening_brackets = {}\n  local closing_brackets = {}\n  for i = 1, #brackets\
    \ do\n    local opening = brackets[i]\n    if opening == '<' then\n      table.insert(opening_brackets,\
    \ i)\n    elseif opening == '>' then\n      table.insert(closing_brackets, i)\n\
    \    end\n  end\n  for i = 1, #opening_brackets do\n    local opening = brackets[opening_brackets[i]]\n\
    \    local closing = brackets[closing_brackets[i]]\n    if opening ~= '<' and\
    \ opening ~= '>' and closing ~= '<' and closing ~= '>' then\n      return false\n\
    \    end\n  end\n  return true\nend", "  local opening_brackets = brackets:gsub('(<)',\
    \ '\\1'):gsub('(>)', '\\2')\n  local closing_brackets = brackets:gsub('(<)', '\\\
    2'):gsub('(>)', '\\1')\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening = brackets:find('<')\n  local closing = brackets:find('>')\n\
    \  local opening_count = brackets:count('<')\n  local closing_count = brackets:count('>')\n\
    \  local opening_opening = brackets:find('<<')\n  local opening_closing = brackets:find('>>')\n\
    \  local closing_opening = brackets:find('<>')\n  local closing_closing = brackets:find('>>')\n\
    \  local opening_opening_count = brackets:count('<<')\n  local opening_closing_count\
    \ = brackets:count('>>')\n  local closing_opening_count = brackets:count('<>')\n\
    \  local closing_closing_count = brackets:count('>>')\n  local opening_opening_opening\
    \ = brackets:find('<<<')\n  local opening_opening_closing = brackets:find('>>>')\n\
    \  local opening_closing_opening = brackets:find('<>>>')\n  local opening_closing_closing\
    \ = brackets:find('>>>')\n  local opening_opening_opening_count = brackets:count('<<<')\n\
    \  local opening_opening_closing_count = brackets:count('>>>')\n  local opening_closing_opening_count\
    \ = brackets:count('<>>>')\n  local opening_closing_closing_count = brackets:count('>>>')\n\
    \  local opening_opening_opening_opening = brackets:find('<<<<')\n  local opening_opening_opening_closing\
    \ = brackets:find('>>><')\n  local opening_closing_opening_opening = brackets:find('<>>><')\n\
    \  local opening_closing_opening_closing = brackets:find('>>><')\n  local opening_closing_closing_opening\
    \ = brackets:find('<>>><')\n  local opening_closing_closing_closing = brackets:find('>>><')\n\
    \  local opening_opening_opening_opening_count = brackets:count('<<<<')\n  local\
    \ opening_opening_opening_closing_count = brackets:count('>>><')\n  local opening_closing_opening_opening_count\
    \ = brackets:count('<>>><')\n  local opening_closing_opening_closing_count = brackets:count('>>><')\n\
    \  local opening_closing_closing_opening_count = brackets:count('<>>><')\n  local\
    \ opening_closing_closing_closing_count = brackets:count('>>><')\n  local opening_opening_opening_opening_opening\
    \ = brackets:find('<<<>>>')\n  local opening_open", "  local opening_brackets\
    \ = {}\n  for i = 1, #brackets do\n    local char = brackets[i]\n    if char ==\
    \ '<' then\n      table.insert(opening_brackets, i)\n    end\n  end\n  local closing_brackets\
    \ = {}\n  for i = #brackets, 1, -1 do\n    local char = brackets[i]\n    if char\
    \ == '>' then\n      table.insert(closing_brackets, i)\n    end\n  end\n  for\
    \ i = 1, #opening_brackets do\n    local opening = opening_brackets[i]\n    local\
    \ closing = closing_brackets[i]\n    if opening > closing then\n      return false\n\
    \    end\n  end\n  return true\nend", "   for i = 1, #brackets do\n      if brackets[i]\
    \ == '<' then\n         if brackets[i+1] == '>' then\n            return true\n\
    \         else\n            return false\n         end\n      end\n   end\n  \
    \ return false\nend", "  local opening_brackets = brackets:gsub('%<', '%s*<'):gsub('%>',\
    \ '%s*%>')\n  local closing_brackets = brackets:gsub('%<', '%s*%>'):gsub('%>',\
    \ '%s*<')\n  return opening_brackets:len() == closing_brackets:len()\nend", " \
    \ local opening_brackets = brackets:gsub('(<%w+)%s*(%>%w+)', '%%%1%%%2')\n  local\
    \ closing_brackets = brackets:gsub('(%w+)%s(%>%w+)', '%%%1%%%2')\n  return opening_brackets:len()\
    \ == closing_brackets:len()\nend", "  local opening_brackets = brackets:gsub('(<)',\
    \ '\\1'):gsub('(>)', '\\2')\n  local closing_brackets = brackets:gsub('(<)', '\\\
    2'):gsub('(>)', '\\1')\n  return opening_brackets ~= closing_brackets\nend", " \
    \ local opening_brackets = brackets:gsub('(<%%(%+)(%*)%>)', function(_,_,opening,closing)\n\
    \    return opening:len() == closing:len()\n  end)\n  return opening_brackets:len()\
    \ == #brackets\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  return opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n\
    \  local opening_brackets_count = opening_brackets:count('<')\n  local closing_brackets_count\
    \ = closing_brackets:count('<')\n  return opening_brackets_count == closing_brackets_count\n\
    end", "   for i = 1, #brackets do\n      if brackets[i] ~= '<' then\n        \
    \ return false\n      end\n      if brackets[i+1] ~= '>' then\n         return\
    \ false\n      end\n   end\n   return true\nend", "  local opening_brackets =\
    \ brackets:gsub('%b()', '%s*%b()')\n  local closing_brackets = brackets:gsub('%b()',\
    \ '%s*%b()')\n  local opening_brackets_count = opening_brackets:gsub('%*b()',\
    \ '%d+'):gsub('%d*$', '%d'):gsub('%d*$', '%d')\n  local closing_brackets_count\
    \ = closing_brackets:gsub('%*b()', '%d+'):gsub('%d*$', '%d'):gsub('%d*$', '%d')\n\
    \  return opening_brackets_count == closing_brackets_count\nend", "  local opening_brackets\
    \ = brackets:gsub('%b()', '%s*%b()')\n  local closing_brackets = brackets:gsub('%b()',\
    \ '%s*%b()')\n  local opening_brackets_count = opening_brackets:gsub('%b()', '%s*'):gsub('%b()',\
    \ '%s*'):gsub('%b()', '%s*'):gsub('%b()', '%s*'):gsub('%b()', '%s*'):gsub('%b()',\
    \ '%s*'):gsub('%b()', '%s*'):gsub('%b()', '%s*'):gsub('%b()', '%s*'):gsub('%b()',\
    \ '%s*'):gsub('%b()', '%s*'):gsub('%b()', '%s*'):gsub('%b()', '%s*'):gsub('%b()',\
    \ '%s*'):gsub('%b()', '%s*'):gsub('%b()', '%s*'):gsub('%b()', '%s*'):gsub('%b()',\
    \ '%s*'):gsub('%b()', '%s*'):gsub('%b()', '%s*'):gsub('%b()', '%s*'):gsub('%b()',\
    \ '%s*'):gsub('%b()', '%s*'):gsub('%b()', '%s*'):gsub('%b()', '%s*'):gsub('%b()',\
    \ '%s*'):gsub('%b()', '%s*'):gsub('%b()', '%s*'):gsub('%b()', '%s*'):gsub('%b()',\
    \ '%s*'):gsub('%b()', '%s*'):gsub('%b()', '%s*'):gsub('%b()', '%s*'):gsub('%b()',\
    \ '%s*'):gsub('%b()', '%s*'):gsub('%b()', '%s*'):gsub('%b()', '%s*'):gsub('%b()',\
    \ '%s*'):gsub('%b()', '%s*'):gsub('%b()', '%s*'):gsub('%b()', '%s*'):gsub('%b()',\
    \ '%s*'):gsub('%b()', '%s*'):gsub('%b()', '%s*'):gsub('%b()', '%s*'):", "  local\
    \ opening_brackets = brackets:gsub('(<)', '\\0\\2\\0')\n  local closing_brackets\
    \ = brackets:gsub('(>)', '\\0\\2\\0')\n  return opening_brackets ~= closing_brackets\n\
    end", "   for i = 1, #brackets do\n      if brackets[i] == '<' then\n        \
    \ if brackets[i+1] == '>' then\n            return true\n         end\n      end\n\
    \   end\n   return false\nend", "  local opening_brackets = brackets:gsub('(<)([^>]+)>',\
    \ function(_, _1, _2)\n    return \"<\" .. _2 .. \">\"\n  end)\n  local closing_brackets\
    \ = brackets:gsub('(<)([^>]+)>', function(_, _1, _2)\n    return \"<\" .. _1 ..\
    \ \">\"\n  end)\n  return opening_brackets:len() == closing_brackets:len()\nend",
  "  local opening_brackets = brackets:gsub('%[(%+)(%-)]', function(x)\n    return\
    \ x:sub(1, 1)\n  end)\n  local closing_brackets = brackets:gsub('%[(%-)(%+)]',\
    \ function(x)\n    return x:sub(1, 1)\n  end)\n  return opening_brackets == closing_brackets\n\
    end", "  local opening = brackets:gsub('(<)', '\\1')\n  local closing = brackets:gsub('(>)',\
    \ '\\1')\n  return opening:len() == closing:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('%b<>', '')\n  local closing_brackets = brackets:gsub('%b<>',\
    \ '>')\n  return opening_brackets:len() == closing_brackets:len()\nend", "  local\
    \ opening_brackets = brackets:gsub('(<%w+)', '%%%1'):gsub('(%w+%>)', '%%%1')\n\
    \  local closing_brackets = brackets:gsub('(%%%1<)', '%%%1'):gsub('(%%%1%>)',\
    \ '%%%1')\n  return opening_brackets:len() == closing_brackets:len() and\n   \
    \      opening_brackets:sub(1, -1) == closing_brackets:sub(1, -1)\nend", "  local\
    \ opening_brackets = brackets:gsub('(<%%(%+)(%*)%>)', function(opening_brackets)\n\
    \    local closing_brackets = opening_brackets:gsub('(%+)(%*)%>', function(closing_brackets)\n\
    \      return closing_brackets:gsub('(%+)(%*)%>', function(closing_brackets)\n\
    \        return closing_brackets:gsub('(%+)(%*)%>', function(closing_brackets)\n\
    \          return closing_brackets:gsub('(%+)(%*)%>', function(closing_brackets)\n\
    \            return closing_brackets:gsub('(%+)(%*)%>', function(closing_brackets)\n\
    \              return closing_brackets:gsub('(%+)(%*)%>', function(closing_brackets)\n\
    \                return closing_brackets:gsub('(%+)(%*)%>', function(closing_brackets)\n\
    \                  return closing_brackets:gsub('(%+)(%*)%>', function(closing_brackets)\n\
    \                    return closing_brackets:gsub('(%+)(%*)%>', function(closing_brackets)\n\
    \                      return closing_brackets:gsub('(%+)(%*)%>', function(closing_brackets)\n\
    \                        return closing_brackets:gsub('(%+)(%*)%>', function(closing_brackets)\n\
    \                          return closing_brackets:gsub('(%+)(%*)%>', function(closing_brackets)\n\
    \                            return closing_brackets:gsub('(%+)(%*)%>', function(closing_brackets)\n\
    \                              return closing_brackets:gsub('(%+)(%*)%>', function(closing_brackets)\n\
    \                                return closing_brackets:gsub('(%+)(%*)%>', function(closing_brackets)\n\
    \                                  return closing_brackets:gsub('(%+)(%*)%>',\
    \ function(closing_brackets)\n                                    return closing_brackets:gsub('(%+)(%*)%>',\
    \ function(closing_brackets)\n                                      return closing_brackets:gsub('(%+)(%*)%>',\
    \ function(closing_brackets)\n                                        return closing_brackets:gsub('(%+)(%*)%>',\
    \ function(closing_brackets)\n                                          return\
    \ closing_brackets:gsub('(%+)(%*)%>', function(closing_brackets)\n           \
    \                                 return ", "  local opening_brackets = brackets:gsub('(<%%(%+)(%*)%>)',\
    \ '%1%2')\n  local closing_brackets = brackets:gsub('(%%(%+)(%*)%>)', '%1%2')\n\
    \  return opening_brackets:len() == closing_brackets:len()\nend", "  local open_brackets\
    \ = brackets:gsub('<>', ''):gsub('>', '')\n  for i = 1, #open_brackets do\n  \
    \  if open_brackets[i]:sub(1, 1) ~= open_brackets[i]:sub(#open_brackets[i]) then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)', '\\1'):gsub('(>)', '\\2')\n  local closing_brackets =\
    \ brackets:gsub('(<)', '\\2'):gsub('(>)', '\\1')\n  return opening_brackets ==\
    \ closing_brackets\nend", "   if brackets == '<' then\n      return false\n  \
    \ elseif brackets == '>' then\n      return true\n   else\n      local opening_brackets\
    \ = brackets:gsub('%b()', '')\n      local closing_brackets = brackets:gsub('%b()',\
    \ ''):gsub('%b', '>')\n      local opening_brackets_count = opening_brackets:gsub('%b()',\
    \ '')\n      local closing_brackets_count = closing_brackets:gsub('%b()', '')\n\
    \      local opening_brackets_count_correct = opening_brackets_count == opening_brackets_count_correct\n\
    \      local closing_brackets_count_correct = closing_brackets_count == closing_brackets_count_correct\n\
    \      return opening_brackets_count_correct and closing_brackets_count_correct\n\
    \   end\nend", "   if brackets == '<>' then\n      return true\n   elseif brackets\
    \ == '<' then\n      return false\n   elseif brackets == '>' then\n      return\
    \ true\n   else\n      return false\n   end\nend", "  local opening_brackets =\
    \ {}\n  local closing_brackets = {}\n  for _, bracket in ipairs(brackets) do\n\
    \    if bracket:sub(1, 1) == '<' then\n      opening_brackets[#opening_brackets+1]\
    \ = bracket\n    elseif bracket:sub(1, 1) == '>' then\n      closing_brackets[#closing_brackets+1]\
    \ = bracket\n    end\n  end\n  for _, opening_bracket in ipairs(opening_brackets)\
    \ do\n    local closing_bracket = closing_brackets[#closing_brackets]\n    if\
    \ opening_bracket ~= closing_bracket then\n      return false\n    end\n  end\n\
    \  return true\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  return opening_brackets:len() == closing_brackets:len() and opening_brackets:gsub('%1','('):gsub('%1',')'):gsub('%1','<<'):gsub('%1','>>')\
    \ == closing_brackets\nend", "  local opening_brackets = brackets:gsub('(<)',\
    \ '\\0\\2\\0\\2'):gsub('(>)', '\\0\\2\\0\\2')\n  local closing_brackets = brackets:gsub('(<)',\
    \ '\\0\\2\\0\\2'):gsub('(>)', '\\0\\2\\0\\2')\n  return opening_brackets:len()\
    \ == closing_brackets:len() and\n         opening_brackets:sub(1, -1) == closing_brackets:sub(1,\
    \ -1)\nend", "  local open_brackets = brackets:gsub('(<%%(%+)(%>%+))', function(_,\
    \ _, open_brackets)\n    return open_brackets:gsub('(%+)(%>%+)', function(_, close_brackets)\n\
    \      return close_brackets:gsub('(%+)(%+)', function(_, close_brackets)\n  \
    \      return close_brackets:gsub('(%+)$', function(_, close_brackets)\n     \
    \     return close_brackets:gsub('(%>%+)$', function(_, close_brackets)\n    \
    \        return close_brackets:gsub('(%+)$', function(_, close_brackets)\n   \
    \           return close_brackets:gsub('(%>%+)$', function(_, close_brackets)\n\
    \                return close_brackets:gsub('(%+)$', function(_, close_brackets)\n\
    \                  return close_brackets:gsub('(%>%+)$', function(_, close_brackets)\n\
    \                    return close_brackets:gsub('(%+)$', function(_, close_brackets)\n\
    \                      return close_brackets:gsub('(%>%+)$', function(_, close_brackets)\n\
    \                        return close_brackets:gsub('(%+)$', function(_, close_brackets)\n\
    \                          return close_brackets:gsub('(%>%+)$', function(_, close_brackets)\n\
    \                            return close_brackets:gsub('(%+)$', function(_, close_brackets)\n\
    \                              return close_brackets:gsub('(%>%+)$', function(_,\
    \ close_brackets)\n                                return close_brackets:gsub('(%+)$',\
    \ function(_, close_brackets)\n                                  return close_brackets:gsub('(%>%+)$',\
    \ function(_, close_brackets)\n                                    return close_brackets:gsub('(%+)$',\
    \ function(_, close_brackets)\n                                      return close_brackets:gsub('(%>%+)$',\
    \ function(_, close_brackets)\n                                        return\
    \ close_brackets:gsub('(%+)$', function(_, close_brackets)\n                 \
    \                         return close_brackets:gsub('(%>%+)$', function(_, close_brackets)\n\
    \                                            return close_brackets:gsub('(%+)$',\
    \ function(_, close_brackets)\n                                              return\
    \ close_brackets:gsub('(%>%", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<%1)','%1'):gsub('(>%1)','%1')\n \
    \ return opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('(<%%(%+)(%*)%>)', function(_, _, opening_brackets)\n    return\
    \ opening_brackets:gsub('(%+)(%*)', function(_, closing_brackets)\n      return\
    \ closing_brackets:gsub('(%+)(%*)', function(_, closing_brackets)\n        return\
    \ closing_brackets:gsub('(%+)(%*)', function(_, closing_brackets)\n          return\
    \ closing_brackets:gsub('(%+)(%*)', function(_, closing_brackets)\n          \
    \  return closing_brackets:gsub('(%+)(%*)', function(_, closing_brackets)\n  \
    \            return closing_brackets:gsub('(%+)(%*)', function(_, closing_brackets)\n\
    \                return closing_brackets:gsub('(%+)(%*)', function(_, closing_brackets)\n\
    \                  return closing_brackets:gsub('(%+)(%*)', function(_, closing_brackets)\n\
    \                    return closing_brackets:gsub('(%+)(%*)', function(_, closing_brackets)\n\
    \                      return closing_brackets:gsub('(%+)(%*)', function(_, closing_brackets)\n\
    \                        return closing_brackets:gsub('(%+)(%*)', function(_,\
    \ closing_brackets)\n                          return closing_brackets:gsub('(%+)(%*)',\
    \ function(_, closing_brackets)\n                            return closing_brackets:gsub('(%+)(%*)',\
    \ function(_, closing_brackets)\n                              return closing_brackets:gsub('(%+)(%*)',\
    \ function(_, closing_brackets)\n                                return closing_brackets:gsub('(%+)(%*)',\
    \ function(_, closing_brackets)\n                                  return closing_brackets:gsub('(%+)(%*)',\
    \ function(_, closing_brackets)\n                                    return closing_brackets:gsub('(%+)(%*)',\
    \ function(_, closing_brackets)\n                                      return\
    \ closing_brackets:gsub('(%+)(%*)', function(_, closing_brackets)\n          \
    \                              return closing_brackets:gsub('(%+)(%*)', function(_,\
    \ closing_brackets)\n                                          return closing_brackets:gsub('(%+)(%*)',\
    \ function(_, closing_brackets)\n                                            return\
    \ closing_bracket", "   local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \   local closing_brackets = brackets:gsub('(<%1)','%1'):gsub('(>%1)','%1')\n\
    \   return opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('>*<', '><')\n  local closing_brackets = brackets:gsub('<*>',\
    \ '>>')\n  return opening_brackets == closing_brackets\nend", "  local opening_brackets\
    \ = brackets:gsub('%b()', '')\n  local closing_brackets = brackets:gsub('%b()',\
    \ '%%%1')\n  return opening_brackets:len() == closing_brackets:len()\nend", " \
    \ local opening_brackets = brackets:gsub('%<', '><'):gsub('%>', '>')\n  local\
    \ closing_brackets = brackets:gsub('%<', '><'):gsub('%>', '>')\n  for i = 1, #opening_brackets\
    \ do\n    if opening_brackets[i] != closing_brackets[i] then\n      return false\n\
    \    end\n  end\n  return true\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n  return\
    \ opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n\
    \  return opening_brackets:len() == closing_brackets:len() and opening_brackets:gsub('(%1)(%2)','%1%2'):gsub('(%1)(%2)','%1%2'):gsub('(%1)(%2)','%1%2'):gsub('(%1)(%2)','%1%2'):gsub('(%1)(%2)','%1%2'):gsub('(%1)(%2)','%1%2'):gsub('(%1)(%2)','%1%2'):gsub('(%1)(%2)','%1%2'):gsub('(%1)(%2)','%1%2'):gsub('(%1)(%2)','%1%2'):gsub('(%1)(%2)','%1%2'):gsub('(%1)(%2)','%1%2'):gsub('(%1)(%2)','%1%2'):gsub('(%1)(%2)','%1%2'):gsub('(%1)(%2)','%1%2'):gsub('(%1)(%2)','%1%2'):gsub('(%1)(%2)','%1%2'):gsub('(%1)(%2)','%1%2'):gsub('(%1)(%2)','%1%2'):gsub('(%1)(%2)','%1%2'):gsub('(%1)(%2)','%1%2'):gsub('(%1)(%2)','%1%2'):gsub('(%1)(%2)','%1%2'):gsub('(%1)(%2)','%1%2'):gsub('(%1)(%2)','%1%2'):gsub('(%1)(%2)','%1%2'):gsub('(%1)(%2)','%1%2'):gsub('(%1)(%2)','%1%2'):gsub('(%1)(%2)','%",
  "  local opening_brackets = brackets:gsub('(<)', '%s*%L+%L+')\n  local closing_brackets\
    \ = brackets:gsub('(>)', '%s*%L+%L+')\n  return opening_brackets:gsub('(%L+%L+)',\
    \ ''):gsub('(%s*%L+%L+)', ''):gsub('(%s*%L+%L+)', ''):gsub('(%s*%L+%L+)', ''):gsub('(%s*%L+%L+)',\
    \ ''):gsub('(%s*%L+%L+)', ''):gsub('(%s*%L+%L+)', ''):gsub('(%s*%L+%L+)', ''):gsub('(%s*%L+%L+)',\
    \ ''):gsub('(%s*%L+%L+)', ''):gsub('(%s*%L+%L+)', ''):gsub('(%s*%L+%L+)', ''):gsub('(%s*%L+%L+)',\
    \ ''):gsub('(%s*%L+%L+)', ''):gsub('(%s*%L+%L+)', ''):gsub('(%s*%L+%L+)', ''):gsub('(%s*%L+%L+)',\
    \ ''):gsub('(%s*%L+%L+)', ''):gsub('(%s*%L+%L+)', ''):gsub('(%s*%L+%L+)', ''):gsub('(%s*%L+%L+)',\
    \ ''):gsub('(%s*%L+%L+)', ''):gsub('(%s*%L+%L+)', ''):gsub('(%s*%L+%L+)', ''):gsub('(%s*%L+%L+)',\
    \ ''):gsub('(%s*%L+%L+)', ''):gsub('(%s*%L+%L+)', ''):gsub('(%s*%L+%L+)', ''):gsub('(%s*%L+%L+)',\
    \ ''):gsub('(%s*%L+%L+)', ''):gsub('(%s*%L+%L+)', ''):gsub('(%s*%L+%L+)', ''):gsub('(%s*",
  "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  for i = 1, #opening_brackets do\n    if opening_brackets[i+1] ~= closing_brackets[i]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local open_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local close_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  return open_brackets:sub(1,1) == '<' and close_brackets:sub(1,1) == '<'\nend",
  "  local opening_brackets = brackets:gsub('(<)', '\\1'):gsub('(>)', '\\2')\n  local\
    \ closing_brackets = brackets:gsub('(<)', '\\2'):gsub('(>)', '\\1')\n  return\
    \ opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('<>', ''):gsub('>', '>')\n  local closing_brackets = brackets:gsub('<',\
    \ ''):gsub('<', '>')\n  return opening_brackets ~= closing_brackets\nend", " \
    \ local opening_brackets = brackets:gsub('(<%%(%+)(%*)%>)', '%%%1%%%2%%%3')\n\
    \  local closing_brackets = brackets:gsub('(%%(%+)(%*)%>)', '%%%1%%%2%%%3')\n\
    \  return opening_brackets == closing_brackets\nend", "  local opening_brackets\
    \ = brackets:gsub('(<%%(%+)(%*)%>)', function(x)\n    return x:gsub('<', '&lt;'):gsub('>',\
    \ '&gt;')\n  end)\n  local closing_brackets = brackets:gsub('(%%(%+)(%*)%>)',\
    \ function(x)\n    return x:gsub('<', '&lt;'):gsub('>', '&gt;')\n  end)\n  return\
    \ opening_brackets:len() == closing_brackets:len() and opening_brackets:all()\
    \ ~= closing_brackets:all()\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<%1)','%1'):gsub('(>%1)','%1')\n \
    \ return opening_brackets ~= closing_brackets\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local opening_brackets_count = opening_brackets:count('<')\n  local closing_brackets_count\
    \ = closing_brackets:count('>')\n  return opening_brackets_count == closing_brackets_count\n\
    end", "  local opening_brackets = brackets:gsub('>*', '>')\n  local closing_brackets\
    \ = brackets:gsub('<*', '<')\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening_brackets = brackets:gsub('%b()', '')\n  local closing_brackets\
    \ = brackets:gsub('%b()', '%%%1')\n  return opening_brackets ~= closing_brackets\n\
    end", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n  return\
    \ opening_brackets:len() == closing_brackets:len() and\n         opening_brackets:sub(1,\
    \ -1) == closing_brackets:sub(1, -1)\nend", "  local opening_brackets = {}\n \
    \ local closing_brackets = {}\n  for i = 1, #brackets do\n    if brackets[i] ==\
    \ '<' then\n      table.insert(opening_brackets, i)\n    elseif brackets[i] ==\
    \ '>' then\n      table.insert(closing_brackets, i)\n    end\n  end\n  for i =\
    \ 1, #opening_brackets do\n    local opening_bracket = opening_brackets[i]\n \
    \   local closing_bracket = closing_brackets[i - 1]\n    if opening_bracket ~=\
    \ closing_bracket then\n      return false\n    end\n  end\n  return true\nend",
  "  local opening_brackets = brackets:gsub('(<%%(%+%)%>)', '')\n  local closing_brackets\
    \ = brackets:gsub('(%%(%+%)%>)', '')\n  local opening_brackets_count = opening_brackets:gsub('(%+%)',\
    \ '')\n  local closing_brackets_count = closing_brackets:gsub('(%+%)', '')\n \
    \ return opening_brackets_count == closing_brackets_count\nend", "  local opening_brackets\
    \ = brackets:gsub('%<', '%s*<')\n  local closing_brackets = brackets:gsub('%>',\
    \ '%s*>')\n  return opening_brackets:len() == closing_brackets:len()\nend", " \
    \ local opening = brackets:gsub('(<)','%1')\n  local closing = brackets:gsub('(>)','%1')\n\
    \  return opening:len() == closing:len()\nend", "  local open_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local close_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local open_brackets_count = open_brackets:count('<')\n  local close_brackets_count\
    \ = close_brackets:count('<')\n  return open_brackets_count == close_brackets_count\n\
    end", "  local opening_brackets = brackets:gsub('<>', ''):gsub('>', '')\n  local\
    \ closing_brackets = brackets:gsub('<', ''):gsub('<', '')\n  for i = 1, #opening_brackets\
    \ do\n    if opening_brackets[i] ~= closing_brackets[i] then\n      return false\n\
    \    end\n  end\n  return true\nend", "  local opening = brackets:gsub('%b()',\
    \ '')\n  local closing = brackets:gsub('%b()', '%%%1')\n  return opening:len()\
    \ == closing:len()\nend", "  local opening_brackets = brackets:gsub('%b()', '')\n\
    \  local closing_brackets = brackets:gsub('%b()', '%%%1')\n  return opening_brackets:len()\
    \ == closing_brackets:len()\nend", "   for i = 1, #brackets do\n      local opening\
    \ = brackets[i]\n      local closing = brackets[i+1]\n      if opening ~= closing\
    \ then\n         return false\n      end\n   end\n   return true\nend", "  local\
    \ opening_brackets = brackets:gsub
  "  local opening_brackets = brackets:gsub('%b<>', '')\n  local closing_brackets\
    \ = brackets:gsub('%b<>', '>')\n  local opening_brackets_count = opening_brackets:gsub('%b<>',\
    \ ''):gsub('%b', ''):gsub('%b', '')\n  local closing_brackets_count = closing_brackets:gsub('%b<>',\
    \ ''):gsub('%b', ''):gsub('%b', '')\n  return opening_brackets_count == closing_brackets_count\n\
    end", "  local open_brackets = brackets:gsub('(<%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(%+)(%>%+)%%(",
  "  local opening = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n  local closing =\
    \ brackets:gsub('(<)','%2'):gsub('(>)','%2')\n  return opening:find(closing)==nil\n\
    end", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<%1)','%1'):gsub('(>%1)','%1')\n \
    \ return opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('%b()', '')\n  local closing_brackets = brackets:gsub('%b()',\
    \ '%%%1')\n  return opening_brackets:len() == closing_brackets:len()\nend", " \
    \ local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n  local\
    \ closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n  return opening_brackets:len()\
    \ == closing_brackets:len() and opening_brackets:gsub('(%1)','%2'):gsub('(%2)','%1'):gsub('(%1)','%2'):gsub('(%2)','%1'):gsub('(%1)','%2'):gsub('(%2)','%1')\n\
    end", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<%1)','%1'):gsub('(>%1)','%1')\n \
    \ return opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = {}\n  local closing_brackets = {}\n  for _, bracket in ipairs(brackets) do\n\
    \    if bracket:sub(1, 1) == '<' then\n      opening_brackets[#opening_brackets+1]\
    \ = bracket\n    elseif bracket:sub(1, 1) == '>' then\n      closing_brackets[#closing_brackets+1]\
    \ = bracket\n    end\n  end\n  return #opening_brackets == #closing_brackets\n\
    end", "   if brackets == '<' then return false end\n   if brackets == '>' then\
    \ return true end\n   if brackets == '<>' then return false end\n   if brackets\
    \ == '<><' then return false end\n   if brackets == '<>' then return true end\n\
    \   if brackets == '<<><' then return false end\n   if brackets == '<<' then return\
    \ true end\n   if brackets == '>>' then return true end\n   if brackets == '><'\
    \ then return false end\n   if brackets == '>' then return true end\n   return\
    \ false\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n  return\
    \ opening_brackets:len() == closing_brackets:len() and\n         opening_brackets:sub(1,1)\
    \ == closing_brackets:sub(1,1)\nend", "  local opening_brackets = brackets:gsub('%b()',\
    \ '%s*%b')\n  local closing_brackets = brackets:gsub('%b()', '%s*%b()')\n  return\
    \ opening_brackets:len() == closing_brackets:len()\nend", "  local opening = brackets:find('<')\n\
    \  local closing = brackets:find('>')\n  local opening_count = brackets:count('<')\n\
    \  local closing_count = brackets:count('>')\n  local opening_open = opening_count\
    \ > 0 and opening_count == opening_open\n  local closing_open = closing_count\
    \ > 0 and closing_count == closing_open\n  local opening_close = opening_count\
    \ > 0 and opening_count == opening_close\n  local closing_close = closing_count\
    \ > 0 and closing_count == closing_close\n  return opening_open and closing_open\
    \ and opening_close and closing_close\nend", "  local opening_brackets = brackets:gsub('(<)',\
    \ '\\1'):gsub('(>)', '\\2')\n  local closing_brackets = brackets:gsub('(<)', '\\\
    2'):gsub('(>)', '\\1')\n  return opening_brackets ~= closing_brackets\nend", " \
    \ local opening_brackets = {}\n  local closing_brackets = {}\n  for i = 1, #brackets\
    \ do\n    local opening = brackets[i]\n    local closing = brackets[i+1]\n   \
    \ if opening == '<' then\n      table.insert(opening_brackets, opening)\n    elseif\
    \ opening == '>' then\n      table.insert(closing_brackets, closing)\n    end\n\
    \  end\n  for i = 1, #opening_brackets do\n    local opening = opening_brackets[i]\n\
    \    local closing = closing_brackets[i]\n    if opening ~= closing then\n   \
    \   return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub('%b()', '')\n  local closing_brackets = brackets:gsub('%b()',\
    \ '%%%1')\n  return opening_brackets:sub(1, #opening_brackets) == closing_brackets\n\
    end", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<%1)','%1'):gsub('(>%1)','%1')\n \
    \ return opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = {}\n  local closing_brackets = {}\n  for _, bracket in pairs(brackets) do\n\
    \    if bracket:sub(1, 1) == '<' then\n      table.insert(opening_brackets, bracket)\n\
    \    elseif bracket:sub(1, 1) == '>' then\n      table.insert(closing_brackets,\
    \ bracket)\n    end\n  end\n  for _, bracket in pairs(opening_brackets) do\n \
    \   if not closing_brackets[bracket] then\n      return false\n    end\n  end\n\
    \  return true\nend", "  local opening_brackets = brackets:gsub('>*$', '>')\n\
    \  local closing_brackets = brackets:gsub('^*<', '^<')\n  return opening_brackets\
    \ ~= closing_brackets\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  return opening_brackets:sub(1,1):gsub('%1',closing_brackets)\nend", "  local\
    \ opening_brackets = brackets:gsub('<>', ''):gsub('>', '')\n  local closing_brackets\
    \ = brackets:gsub('<', ''):gsub('<', '')\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening_brackets = brackets:gsub('(<)', '\\1'):gsub('(>)', '\\\
    2')\n  local closing_brackets = brackets:gsub('(<)', '\\2'):gsub('(>)', '\\1')\n\
    \  return opening_brackets ~= closing_brackets\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n\
    \  return opening_brackets:len() == closing_brackets:len() and opening_brackets:gsub('%2'):gsub('%1'):gsub('%1','>')\n\
    end", "  local opening_brackets = brackets:gsub('%b()', '%s*%b')\n  local closing_brackets\
    \ = brackets:gsub('%b()', '%s*%b()')\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  for i = 1, #opening_brackets do\n    if opening_brackets[i] ~= closing_brackets[i]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  return opening_brackets:sub(1,1) == '<' and closing_brackets:sub(1,1) == '>'\n\
    end", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n  return\
    \ opening_brackets:len() == closing_brackets:len() and opening_brackets:gsub('%1','<'):gsub('%2','>'):gsub('%1','<'):gsub('%2','>')\n\
    end", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<%1)','%1'):gsub('(>%1)','%1')\n \
    \ return opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = {}\n  local closing_brackets = {}\n  for i = 1, #brackets do\n    local char\
    \ = brackets[i]\n    if char == '<' then\n      table.insert(opening_brackets,\
    \ i)\n    elseif char == '>' then\n      table.insert(closing_brackets, i)\n \
    \   end\n  end\n  for i = 1, #opening_brackets do\n    local opening = opening_brackets[i]\n\
    \    local closing = closing_brackets[i]\n    if opening and closing then\n  \
    \    -- both brackets are open\n      return false\n    end\n    if opening and\
    \ not closing then\n      -- only opening bracket is open\n      return false\n\
    \    end\n    if closing and not opening then\n      -- only closing bracket is\
    \ open\n      return false\n    end\n  end\n  return true\nend", "   if brackets\
    \ == '<' then return false end\n   if brackets == '>' then return true end\n \
    \  if brackets == '<<' then return true end\n   if brackets == '>>' then return\
    \ false end\n   return false\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  for i = 1, #opening_brackets do\n    if opening_brackets[i] ~= closing_brackets[i]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  return opening_brackets:sub(1,1):sub(2,1) ~= closing_brackets:sub(1,1):sub(2,1)\n\
    end", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local opening_brackets_count = opening_brackets:count('<')\n  local closing_brackets_count\
    \ = closing_brackets:count('<')\n  return opening_brackets_count == closing_brackets_count\n\
    end", "  local open_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local close_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local open_brackets_count = open_brackets:count('<')\n  local close_brackets_count\
    \ = close_brackets:count('<')\n  return open_brackets_count == close_brackets_count\n\
    end", "   for i = 1, #brackets do\n      local opening = brackets[i]\n      local\
    \ closing = brackets[i+1]\n      if opening ~= closing then\n         return false\n\
    \      end\n   end\n   return true\nend", "  local opening_brackets = brackets:gsub('(<)',\
    \ '%s*%L+%L+')\n  local closing_brackets = brackets:gsub('(>)', '%s*%L+%L+')\n\
    \  return opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('>*<', '><')\n  local closing_brackets = brackets:gsub('<*>',\
    \ '>>')\n  return opening_brackets == closing_brackets\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)', '%s*%L+%L+')\n  local closing_brackets = brackets:gsub('(>)',\
    \ '%s*%L+%L+')\n  return opening_brackets:gsub('(%L+)', '%s*%L+') ~= closing_brackets:gsub('(%L+)',\
    \ '%s*%L+')\nend", "  local open_brackets = brackets:gsub('(<)', '\\1'):gsub('(>)',\
    \ '\\2')\n  local close_brackets = brackets:gsub('(<)', '\\2'):gsub('(>)', '\\\
    1')\n  return open_brackets:len() == close_brackets:len() and\n         open_brackets:sub(1,\
    \ open_brackets:len()) == close_brackets:sub(1, close_brackets:len())\nend", " \
    \ local open_brackets = brackets:gsub('(<)', '\\1')\n  local close_brackets =\
    \ brackets:gsub('(>)', '\\1')\n  return open_brackets == close_brackets\nend",
  "  local opening_brackets = brackets:gsub('%b()', '')\n  local closing_brackets\
    \ = brackets:gsub('%b()', '%%%1')\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening_brackets = brackets:gsub('(<%%(%+)(%*)%>)', '%1%2%3')\n\
    \  local closing_brackets = brackets:gsub('(<%(%+)(%*)%>)', '%1%2%3')\n  return\
    \ opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n\
    \  return opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = {}\n  for _, bracket in pairs(brackets) do\n    opening_brackets[bracket]\
    \ = true\n  end\n  local closing_brackets = {}\n  for _, opening_bracket in pairs(opening_brackets)\
    \ do\n    closing_brackets[opening_bracket] = true\n  end\n  return #opening_brackets\
    \ == #closing_brackets\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n  return\
    \ opening_brackets:len() == closing_brackets:len() and\n         opening_brackets:gsub('(%1)','%2'):gsub('(%2)','%1'):gsub('(%1)','%2'):gsub('(%2)','%1'):gsub('(%1)','%2'):gsub('(%2)','%1')\n\
    end", "  local opening_brackets = brackets:gsub('%b()', '')\n  local closing_brackets\
    \ = brackets:gsub('%b()', '%%%1')\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening_brackets = brackets:gsub('(<)', '\\0\\2\\0\\2\\1')\n  local\
    \ closing_brackets = brackets:gsub('(>)', '\\0\\2\\0\\2\\1')\n  return opening_brackets:len()\
    \ == closing_brackets:len()\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<%1)','%1'):gsub('(>%1)','%1')\n \
    \ return opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local opening_brackets_count = opening_brackets:count('<')\n  local closing_brackets_count\
    \ = closing_brackets:count('>')\n  return opening_brackets_count == closing_brackets_count\n\
    end", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<%1)','%1'):gsub('(>%1)','%1')\n \
    \ return opening_brackets:len() == closing_brackets:len()\nend", "  local open_brackets\
    \ = brackets:gsub('>*', '>')\n  local close_brackets = brackets:gsub('<*', '<')\n\
    \  return open_brackets == close_brackets\nend", "   for i = 1, #brackets do\n\
    \      if brackets[i] == '<' then\n         if brackets[i+1] == '>' then\n   \
    \         return true\n         end\n      end\n   end\n   return false\nend",
  "  local opening_brackets = brackets:gsub('(<)', '\\1'):gsub('(>)', '\\2')\n  local\
    \ closing_brackets = brackets:gsub('(<)', '\\2'):gsub('(>)', '\\1')\n  return\
    \ opening_brackets ~= closing_brackets\nend", "  local opening_brackets = brackets:gsub('(<)',\
    \ '\\1')\n  local closing_brackets = brackets:gsub('(>)', '\\1')\n  return opening_brackets:len()\
    \ == closing_brackets:len()\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n  return\
    \ opening_brackets:len() == closing_brackets:len() and\n         opening_brackets:sub(1,\
    \ opening_brackets:len()) == closing_brackets:sub(1, closing_brackets:len())\n\
    end", "  local opening_brackets = brackets:gsub('%<', '%s*<')\n  local closing_brackets\
    \ = brackets:gsub('%>', '%s*>')\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local open_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n  local\
    \ close_brackets = brackets:gsub('(<%1)','%1'):gsub('(>%1)','%1')\n  return open_brackets:len()\
    \ == close_brackets:len() and open_brackets:gsub('%1','>'):gsub('%1','<')\nend",
  "   for i = 1, #brackets do\n      local opening = brackets[i]\n      local closing\
    \ = brackets[i+1]\n      if opening ~= \">\" and opening ~= \"<\" then\n     \
    \    return false\n      end\n      if closing ~= \">\" and closing ~= \"<\" then\n\
    \         return false\n      end\n      if opening ~= closing then\n        \
    \ return false\n      end\n   end\n   return true\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local opening_brackets_count = opening_brackets:count('<')\n  local closing_brackets_count\
    \ = closing_brackets:count('<')\n  return opening_brackets_count == closing_brackets_count\n\
    end", "  local opening_brackets = brackets:gsub('%b<>', ''):gsub('%b<>', '')\n\
    \  local closing_brackets = brackets:gsub('%b<>', ''):gsub('%b<>', '')\n  local\
    \ opening_brackets_count = opening_brackets:len()\n  local closing_brackets_count\
    \ = closing_brackets:len()\n  local opening_brackets_pairs = opening_brackets:gsub('%b<>',\
    \ ''):gsub('%b<>', '|')\n  local closing_brackets_pairs = closing_brackets:gsub('%b<>',\
    \ ''):gsub('%b<>', '|')\n  local opening_brackets_pairs_count = opening_brackets_pairs:len()\n\
    \  local closing_brackets_pairs_count = closing_brackets_pairs:len()\n  local\
    \ opening_brackets_pairs_pairs = opening_brackets_pairs:gsub('%b<>', '|')\n  local\
    \ closing_brackets_pairs_pairs = closing_brackets_pairs:gsub('%b<>', '|')\n  local\
    \ opening_brackets_pairs_pairs_count = opening_brackets_pairs_pairs:len()\n  local\
    \ closing_brackets_pairs_pairs_count = closing_brackets_pairs_pairs:len()\n  local\
    \ opening_brackets_pairs_pairs_pairs_count = opening_brackets_pairs_pairs_pairs:len()\n\
    \  local closing_brackets_pairs_pairs_pairs_count = closing_brackets_pairs_pairs_pairs:len()\n\
    \  local opening_brackets_pairs_pairs_pairs_pairs_count = opening_brackets_pairs_pairs_pairs_pairs:len()\n\
    \  local closing_brackets_pairs_pairs_pairs_pairs_count = closing_brackets_pairs_pairs_pairs_pairs:len()\n\
    \  local opening_brackets_pairs_pairs_pairs_pairs_pairs_count = opening_brackets_pairs_pairs_pairs_pairs_pairs:len()\n\
    \  local closing_brackets_pairs_pairs_pairs_pairs_pairs_count = closing_brackets_pairs_pairs_pairs_pairs_pairs:len()\n\
    \  local opening_brackets_pairs_pairs_pairs_pairs_pairs_pairs_count = opening_brackets_pairs_pairs_pairs_pairs_pairs_pairs_pairs:len()\n\
    \  local closing_brackets_pairs_pairs_pairs_pairs_pairs_pairs_pairs_count = closing_brackets_pairs_pairs_pairs_pairs_pairs_pairs_pairs_pairs:len()\n\
    \  ", "  local opening_brackets = brackets:gsub('(<)', '\\1'):gsub('(>)', '\\\
    2')\n  local closing_brackets = brackets:gsub('(<)', '\\2'):gsub('(>)', '\\1')\n\
    \  return opening_brackets == closing_brackets\nend", "  local opening_brackets\
    \ = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n\
    \  return opening_brackets:len() == closing_brackets:len() and\n         opening_brackets:gsub('(%1)','%2'):gsub('(%2)','%1'):gsub('(%1)','%2'):gsub('(%2)','%1')\n\
    end", "  local opening_brackets = brackets:gsub('(<)', '\\1'):gsub('(>)', '\\\
    2')\n  local closing_brackets = brackets:gsub('(<)', '\\2'):gsub('(>)', '\\1')\n\
    \  return opening_brackets:len() == closing_brackets:len()\nend", "  local opening\
    \ = brackets:gsub('<', '(')\n  local closing = brackets:gsub('>', ')')\n  return\
    \ opening:find(closing) == nil\nend", "  local open_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local close_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  return open_brackets:len() == close_brackets:len() and open_brackets:gsub('%1',close_brackets):gsub('%1',open_brackets)\n\
    end", "  local opening_brackets = brackets:gsub('%[(%+)(%-)]', function(x)\n \
    \   return x:sub(1, 1)\n  end)\n  local closing_brackets = brackets:gsub('%[%(%+)(%-)]',\
    \ function(x)\n    return x:sub(2, 2)\n  end)\n  for i = 1, #opening_brackets\
    \ do\n    if opening_brackets[i] ~= closing_brackets[i] then\n      return false\n\
    \    end\n  end\n  return true\nend", "  local opening_brackets = brackets:gsub('<',\
    \ '{%l}'):gsub('>', '}%l}')\n  local closing_brackets = brackets:gsub('<', '}%l}'):gsub('>',\
    \ '{%l}')\n  return opening_brackets:len() == closing_brackets:len()\nend", " \
    \ local opening_brackets = brackets:gsub('(<)([^>]+)(>)', '\\2')\n  local closing_brackets\
    \ = brackets:gsub('(<)([^>]+)(>)', '\\3')\n  return opening_brackets == closing_brackets\n\
    end", "  local open_brackets = brackets:gsub
  "  local opening_brackets = brackets:gsub('%b()', '%s*%b()')\n  local closing_brackets\
    \ = brackets:gsub('%b()', '%s*%b()')\n  return opening_brackets:sub(1, #opening_brackets)\
    \ == closing_brackets\nend", "  local opening_brackets = brackets:gsub('(<)([^>]+)$',\
    \ '\\2')\n  local closing_brackets = brackets:gsub('(<)([^>]+)$', '\\1')\n  return\
    \ opening_brackets ~= closing_brackets\nend", "  local opening_brackets = brackets:gsub('(<)',\
    \ '%s*%L+%L+')\n  local closing_brackets = brackets:gsub('(>)', '%s*%L+%L+')\n\
    \  local opening_brackets_count = opening_brackets:gsub('%s*%L+', '')\n  local\
    \ closing_brackets_count = closing_brackets:gsub('%s*%L+', '')\n  return opening_brackets_count\
    \ == closing_brackets_count\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n  return\
    \ opening_brackets:len() == closing_brackets:len() and\n         opening_brackets:sub(1,\
    \ -1) == closing_brackets:sub(1, -1)\nend", "  local opening_brackets = {}\n \
    \ local closing_brackets = {}\n  for i = 1, #brackets do\n    local opening =\
    \ brackets[i]\n    if opening == '<' then\n      opening_brackets[#opening_brackets+1]\
    \ = i\n    elseif opening == '>' then\n      closing_brackets[#closing_brackets+1]\
    \ = i\n    end\n  end\n  if #opening_brackets == #closing_brackets then\n    return\
    \ true\n  end\n  return false\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%2'):gsub('(>)','%2')\n  return\
    \ opening_brackets:len() == closing_brackets:len() and opening_brackets:gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1'):gsub('%2'):gsub('%1",
  "  local opening_brackets = brackets:gsub('%b()', '')\n  local closing_brackets\
    \ = brackets:gsub('%b()', '%%%1')\n  return opening_brackets:sub(1, #opening_brackets)\
    \ == closing_brackets\nend", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  return opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = {}\n  local closing_brackets = {}\n  for i = 1, #brackets do\n    local opening\
    \ = brackets[i]\n    if opening == '<' then\n      opening_brackets[#opening_brackets+1]\
    \ = i\n    elseif opening == '>' then\n      closing_brackets[#closing_brackets+1]\
    \ = i\n    end\n  end\n  return #opening_brackets == #closing_brackets\nend",
  "  local opening_brackets = brackets:gsub('>*', '')\n  local closing_brackets =\
    \ brackets:gsub('<*', '')\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  local closing_brackets = brackets:gsub('(<)','%1'):gsub('(>)','%1'):gsub('(<<)','%1'):gsub('(>>)','%1')\n\
    \  return opening_brackets:len() == closing_brackets:len() and opening_brackets:gsub('%1','')\
    \ == closing_brackets:gsub('%1','') \nend", "  local opening_brackets = brackets:gsub('(<)([^>]+)$',\
    \ '\\\\2')\n  local closing_brackets = brackets:gsub('(<)(.+)$', '\\\\2')\n  return\
    \ opening_brackets ~= closing_brackets\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

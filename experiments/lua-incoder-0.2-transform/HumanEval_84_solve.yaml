name: HumanEval_84_solve
language: lua
prompt: "-- Given a positive integer N, return the total sum of its digits in binary.\n\
  -- Example\n-- >>> solve(1000)\n-- '1'\n-- >>> solve(150)\n-- '110'\n-- >>> solve(147)\n\
  -- '1100'\n-- Variables:\n-- @N integer\n-- Constraints: 0 \u2264 N \u2264 10000.\n\
  -- Output:\n-- a string of binary number\nlocal function solve(N)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = solve\n\
  \    lu.assertEquals(candidate(1000), '1')\n    lu.assertEquals(candidate(150),\
  \ '110')\n    lu.assertEquals(candidate(147), '1100')\n    lu.assertEquals(candidate(333),\
  \ '1001')\n    lu.assertEquals(candidate(963), '10010')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local sum = 0\n  local i = 1\n  while i <= N do\n    sum = sum +\
    \ math.floor((N % i) / 2)\n    i = i + 1\n  end\n  return sum\nend", "    local\
    \ s = ''\n    local i = 1\n    while i <= N do\n        local t = math.floor((N\
    \ % i) / 2)\n        s = s .. tostring(t ^ 1)\n        i = i + 1\n    end\n  \
    \  return s\nend", "  local result = ''\n  local carry = 0\n  local digit\n  for\
    \ i = 1, N do\n    digit = math.floor((N - i) / 2)\n    carry = digit * 2 + carry\n\
    \    result = string.format('%s%d%s', result, carry, carry > 0 and '1' or '')\n\
    \  end\n  return result\nend", "    local s = ''\n    while N > 0 do\n       \
    \ local n = math.floor(N / 2)\n        s = string.format('%s%d%s', s, n + 1, string.format('%d',\
    \ n % 2))\n        N = N - n\n    end\n    return s\nend", "    local sum = 0\n\
    \    local i = 1\n    while i <= N do\n        sum = sum + math.floor((N % i)\
    \ / 2)\n        i = i + 1\n    end\n    return sum\nend", "  -- Base case\n  if\
    \ N == 0 then\n    return \"0\"\n  end", "    local s = ''\n    while N > 0 do\n\
    \        local t = math.floor(math.log2(N))\n        s = s .. '1' .. math.floor((N\
    \ / 2 ** t) * 2)\n        N = N % 2 ** t\n    end\n    return s\nend", "  local\
    \ sum = 0\n  local i = 0\n  while i < N do\n    sum = sum + math.floor((N % 10)\
    \ * math.pow(2, i))\n    i = i + 1\n  end\n  return sum\nend", "  local s = ''\n\
    \  local i = 0\n  while i < N do\n    local n = math.floor(math.pow(10, i) * N)\n\
    \    s = s .. tostring(n)\n    i = i + 1\n  end\n  return s\nend", "  local result\
    \ = ''\n  local digit = 0\n  local sum = 0\n  while N > 0 do\n    digit = N %\
    \ 2\n    sum = sum + digit\n    N = N / 2\n  end\n  result = result .. tostring(sum)\n\
    \  return result\nend", "    local s = ''\n    local i = 1\n    while i <= N do\n\
    \        local t = math.floor((N % i) / 2)\n        s = s .. t\n        i = i\
    \ + 1\n    end\n    return s\nend", "    local s = ''\n    while N > 0 do\n  \
    \      local t = math.floor(math.log2(N))\n        s = s .. '1' .. math.floor((N\
    \ - math.pow(2, t)) / (math.pow(2, t)))\n        N = math.floor((N - math.pow(2,\
    \ t)) / (math.pow(2, t)))\n    end\n    return s\nend", "    local sum = 0\n \
    \   local i = 1\n    while i <= N do\n        sum = sum + math.floor((N % i) /\
    \ 2)\n        i = i + 1\n    end\n    return sum\nend", "  local s = ''\n  while\
    \ N > 0 do\n    local n = math.floor(N / 2)\n    s = s .. '1' if n ~= 0 else '0'\n\
    \    N = N - n\n  end\n  return s\nend", "  local s = ''\n  local n = 1\n  while\
    \ n <= N do\n    local m = math.floor(math.log(n, 2))\n    s = s .. string.format('%d',\
    \ math.floor(n/math.pow(2,m)))\n    n = n*2\n  end\n  return s\nend", "    local\
    \ s = ''\n    while N > 0 do\n        local t = math.floor(math.log2(N))\n   \
    \     s = s .. tostring(math.pow(2, t))\n        N = math.floor(N / math.pow(2,\
    \ t))\n    end\n    return s\nend", "    local s = ''\n    local n = 1\n    while\
    \ n <= N do\n        s = s .. tostring(n % 2)\n        n = n / 2\n    end\n  \
    \  return s\nend", "  local sum = 0\n  local i = 1\n  while i <= N do\n    sum\
    \ = sum + math.floor((N % i) / 2)\n    i = i + 1\n  end\n  return sum\nend", " \
    \   local s = ''\n    while N > 0 do\n        local n = math.floor(N / 2)\n  \
    \      s = s .. string.format('%d', n)\n        N = N - n\n    end\n    return\
    \ s\nend", "  local result = ''\n  local carry = 0\n  local digit\n  local n\n\
    \  local i\n  \n  for i = 1, N do\n    digit = math.floor((N % 10) + 1)\n    n\
    \ = math.floor(N / 10)\n    \n    if digit > 0 then\n      result = result ..\
    \ digit\n    end\n    \n    if n > 0 then\n      result = result .. '1'\n    end\n\
    \    \n    if n > 1 then\n      result = result .. '0'\n    end\n    \n    N =\
    \ n\n    carry = digit + carry\n  end\n  \n  if carry > 0 then\n    result = result\
    \ .. carry\n  end\n  \n  return result\nend", "    local s = ''\n    local i =\
    \ 1\n    while i <= N do\n        local t = math.floor(math.log(i) / math.log(2))\n\
    \        s = s .. string.format('%d', math.floor(i))\n        i = math.floor(i\
    \ * 2)\n        if t > 0 then\n            s = s .. string.format('%d', math.floor(i))\n\
    \        end\n    end\n    return s\nend", "  local s = ''\n  local n = 1\n  while\
    \ n > 0 do\n    local m = math.floor(math.log(n, 2))\n    s = s .. string.format('%b',\
    \ math.floor(n/2))\n    n = math.floor(n/2)\n  end\n  return s\nend", "    local\
    \ s = ''\n    while N > 0 do\n        local t = math.floor(math.log2(N))\n   \
    \     s = s .. string.format('%d', 2^t)\n        N = N - 2^t\n    end\n    return\
    \ s\nend", "  local result = ''\n  local n = 1\n  while n <= N do\n    local digit\
    \ = math.floor(n/10)\n    local remainder = n - 10*digit\n    if remainder > 0\
    \ then\n      result = result .. '1' .. '0'\n    end\n    n = remainder\n  end\n\
    \  return result\nend", "    local s = ''\n    local n = 1\n    while n <= N do\n\
    \        s = s .. tostring(n % 2)\n        n = math.floor(n / 2)\n    end\n  \
    \  return s\nend", "    local s = ''\n    local n = 1\n    while n > 0 do\n  \
    \      if N % 2 == 0 then\n            s = s .. '1'\n            N = N / 2\n \
    \       else\n            s = s .. '0'\n            N = N / 2\n        end\n \
    \       n = n + 1\n    end\n    return s\nend", "    local sum = 0\n    local\
    \ i = 1\n    while i <= N do\n        sum = sum + math.floor((N % i) / 2)\n  \
    \      i = i + 1\n    end\n    return sum\nend", "  local s = ''\n  while N >\
    \ 0 do\n    local n = math.floor(N/2)\n    s = s .. '1' .. '0'\n    N = N - n\n\
    \  end\n  return s\nend", "  local sum = 0\n  local result = ''\n  for i = 1,\
    \ N do\n    local digit = math.floor((N % 10) + 0.5)\n    sum = sum + digit\n\
    \    N = N / 10\n    result = result .. digit\n  end\n  return result .. sum\n\
    end", "  local s = ''\n  local i = 1\n  while i <= N do\n    local t = math.floor(i/10)\n\
    \    i = i % 10\n    s = s .. t\n  end\n  return s\nend", "    local s = ''\n\
    \    local n = 1\n    while n > 0 do\n        if N % 2 == 1 then\n           \
    \ s = s .. '1'\n            N = N / 2\n        else\n            s = s .. '0'\n\
    \            N = N / 2\n        end\n        n = n + 1\n    end\n    return s\n\
    end", "    local s = ''\n    while N > 0 do\n        local t = math.floor(math.log2(N))\n\
    \        s = s .. '1' .. '0' * (t - 1)\n        N = math.floor(N / 2)\n    end\n\
    \    return s\nend", "  local s = ''\n  local i = 0\n  while i < N do\n    local\
    \ digit = math.floor((N - i) / 2)\n    s = s .. '1' if digit == 0 else '0' ..\
    \ s\n    i = i + 1\n  end\n  return s\nend", "  -- Base case\n  if N == 0 then\n\
    \    return '0'\n  end\n  -- Recursive case\n  local digits = math.floor(math.log(N)\
    \ / math.log(2))\n  local result = solve(N - math.pow(N, digits))\n  return result\
    \ .. '1' .. math.floor(math.pow(N, digits)) .. '0'\nend", "    local sum = 0\n\
    \    local i = 1\n    while i <= N do\n        sum = sum + math.floor((N % i)\
    \ / 2)\n        i = i + 1\n    end\n    return sum\nend", "  local s = ''\n  local\
    \ n = 1\n  while n > 0 do\n    local m = math.floor((N / n) % 2)\n    s = s ..\
    \ '1' if m == 0 else '0' .. s\n    n = math.floor((N / n) / 2)\n  end\n  return\
    \ s\nend", "    local result = ''\n    local carry = 0\n    local digit = 0\n\
    \    local digits = 0\n    local sum = 0\n    while N > 0 do\n        digits =\
    \ math.floor(math.log(N) / math.log(2))\n        digit = math.floor(N / math.pow(2,\
    \ digits))\n        N = N - digit * math.pow(2, digits)\n        sum = sum + digit\n\
    \        if carry > 0 then\n            sum = sum + carry\n            carry =\
    \ 0\n        end\n        if digits == 0 then\n            result = result ..\
    \ tostring(sum)\n            sum = 0\n        end\n    end\n    if carry > 0 then\n\
    \        result = result .. tostring(carry)\n    end\n    return result\nend",
  "  local s = ''\n  local n = 1\n  while n > 0 do\n    local t = math.floor((N /\
    \ n) % 2)\n    s = s .. t\n    n = math.floor((N / n) / 2)\n  end\n  return s\n\
    end", "    local s = ''\n    local n = 0\n    while N > 0 do\n        local digit\
    \ = math.floor(N / 2)\n        s = s .. digit\n        N = N - digit\n       \
    \ n = n + 1\n    end\n    return s\nend", "    local s = ''\n    local i = 1\n\
    \    while i <= N do\n        s = s .. tostring(math.floor((N % i) / 2))\n   \
    \     i = i * 2\n    end\n    return s\nend", "    local result = ''\n    local\
    \ carry = 0\n    for i = 1, N do\n        local digit = math.floor((N % 10) +\
    \ carry)\n        carry = digit / 2\n        digit = digit % 2\n        result\
    \ = digit .. result\n    end\n    if carry > 0 then\n        result = result ..\
    \ '1'\n    end\n    return result\nend", "    local s = ''\n    local i = 1\n\
    \    while i <= N do\n        local t = math.floor(i/10)\n        s = s .. t\n\
    \        i = i%10\n    end\n    return s\nend", "    local result = ''\n    local\
    \ sum = 0\n    local power = 1\n    local remainder = 0\n    while N ~= 0 do\n\
    \        sum = sum + N % 10\n        N = N / 10\n    end\n    while sum > 0 do\n\
    \        remainder = sum % 2\n        sum = sum / 2\n        result = remainder\
    \ .. result\n    end\n    return result\nend", "    local sum = 0\n    while N\
    \ > 0 do\n        sum = sum + math.floor((N % 10) * 2)\n        N = math.floor(N/10)\n\
    \    end\n    return sum\nend", "  -- Base case\n  if N == 0 then\n    return\
    \ '0'\n  end\n  -- Recursive case\n  local digits = math.floor(math.log(N) / math.log(2))\n\
    \  return solve(N - math.pow(N, digits)) + tostring(math.pow(N, digits))\nend",
  "  local s = ''\n  while N > 0 do\n    local t = math.floor(math.log2(N))\n    s\
    \ = s .. '0' .. tostring(N % 2)\n    N = N / 2\n    if t > 0 then\n      s = s\
    \ .. tostring(t % 2)\n      N = N / 2\n    end\n  end\n  return s\nend", "  local\
    \ s = ''\n  while N > 0 do\n    local digit = math.floor(math.log2(N))\n    s\
    \ = s .. string.char(digit + 48)\n    N = math.floor(N / 2)\n  end\n  return s\n\
    end", "  local result = ''\n  local sum = 0\n  local digit\n  local i = 1\n  while\
    \ i <= N do\n    digit = math.floor((N - i) / 2)\n    sum = sum + digit\n    result\
    \ = result .. digit\n    i = i + 1\n  end\n  return result\nend", "    local result\
    \ = ''\n    local sum = 0\n    while N > 0 do\n        sum = sum + math.floor((N\
    \ % 2) / 2)\n        N = math.floor(N / 2)\n    end\n    if sum > 0 then\n   \
    \     result = result .. '1'\n    end\n    while sum > 0 do\n        result =\
    \ result .. '0'\n        sum = sum - 1\n    end\n    return result\nend", "  \
    \  local s = ''\n    while N > 0 do\n        local remainder = N % 2\n       \
    \ N = N / 2\n        s = string.format('%s%d%s', s, remainder, s)\n    end\n \
    \   return s\nend", "  local sum = 0\n  local n = 1\n  while n > 0 do\n    sum\
    \ = sum + math.floor((N % 2) / 2)\n    N = math.floor(N / 2)\n    n = n + 1\n\
    \  end\n  return sum\nend", "    local s = ''\n    while N > 0 do\n        local\
    \ t = math.floor(math.log2(N))\n        s = s .. string.format('%d', math.pow(2,\
    \ t))\n        N = math.floor(N / math.pow(2, t))\n    end\n    return s\nend",
  "  local sum = 0\n  local i = 0\n  while i < N do\n    sum = sum + math.floor((N\
    \ % 10) * math.pow(2, i))\n    i = i + 1\n  end\n  return sum\nend", "  local\
    \ sum = 0\n  local i = 1\n  while i <= N do\n    sum = sum + math.floor((N % i)\
    \ / 2)\n    i = i + 1\n  end\n  return sum\nend", "  local s = ''\n  while N >\
    \ 0 do\n    local t = math.floor(N / 2)\n    s = s .. tostring(t % 2) .. tostring(t\
    \ / 2)\n    N = N - t\n  end\n  return s\nend", "    local s = ''\n    local i\
    \ = 1\n    while i <= N do\n        if N % 2 == 0 then\n            s = s .. '1'\n\
    \            N = N / 2\n        else\n            s = s .. '0'\n            N\
    \ = N / 2\n        end\n        i = i + 1\n    end\n    return s\nend", "  local\
    \ result = ''\n  local digits = math.floor(math.log(N)/math.log(2))\n  for i =\
    \ 1, digits do\n    local digit = math.floor((N % math.pow(2,i))/math.pow(2,i-1))\n\
    \    local binary = string.format('%0*d', i, digit)\n    result = result .. binary\n\
    \  end\n  return result\nend", "  -- Base case\n  if N == 1 then\n    return '1'\n\
    \  end\n  -- Recursive case\n  local sum = 0\n  local remainder = N % 2\n  while\
    \ remainder ~= 0 do\n    sum = sum + remainder\n    N = N / 2\n    remainder =\
    \ N % 2\n  end\n  return '1' .. sum\nend", "  local sum = 0\n  local i = 1\n \
    \ while i <= N do\n    sum = sum + math.floor((N % i) / 2)\n    i = i + 1\n  end\n\
    \  return sum\nend", "    local s = ''\n    local i = 1\n    while i <= N do\n\
    \        local t = math.floor(math.log(i) / math.log(2))\n        s = s .. string.format('%d',\
    \ math.floor(i))\n        i = math.floor(i * 2)\n        if t > 0 then\n     \
    \       s = s .. string.format('%d', math.floor(i))\n        end\n    end\n  \
    \  return s\nend", "    local s = ''\n    local i = 1\n    while i <= N do\n \
    \       local t = math.floor((N / i) * 2)\n        s = s .. string.format('%d',\
    \ t)\n        i = i + 1\n    end\n    return s\nend", "  local s = ''\n  local\
    \ i = 1\n  while i <= N do\n    local t = math.floor(math.log(i) / math.log(2))\n\
    \    s = s .. string.format('%d', math.floor(i/2**t))\n    i = i * 2\n  end\n\
    \  return s\nend", "  local sum = 0\n  local result = ''\n  for i = 1, N do\n\
    \    local digit = math.floor((N % 10) * 2)\n    sum = sum + digit\n    N = N\
    \ / 10\n    if N == 0 then\n      result = result .. '1'\n    else\n      result\
    \ = result .. '0' .. digit\n    end\n  end\n  return result\nend", "    local\
    \ result = ''\n    local carry = 0\n    for i = 1, N do\n        local digit =\
    \ math.floor((N - i) / 2)\n        local remainder = math.modf((N - i) / 2)\n\
    \        local sum = (digit + remainder) * 2 + carry\n        carry = sum / 2\n\
    \        sum = sum % 2\n        result = result .. tostring(sum)\n    end\n  \
    \  if carry > 0 then\n        result = result .. tostring(carry)\n    end\n  \
    \  return result\nend", "  local sum = 0\n  local result = ''\n  local i = 1\n\
    \  while i <= N do\n    sum = sum + math.floor((N % i) / 2)\n    i = i + 1\n \
    \ end\n  result = result .. sum\n  return result\nend", "  local sum = 0\n  local\
    \ i = 1\n  while i <= N do\n    sum = sum + math.floor((N % i) / 2)\n    i = i\
    \ + 1\n  end\n  return sum\nend", "    local result = ''\n    local carry = 0\n\
    \    for i = 1, N do\n        local digit = math.floor((N - i) / 2)\n        local\
    \ remainder = N - i - digit\n        if remainder > 0 then\n            carry\
    \ = 1\n        end\n        result = result .. string.format('%d%d%d%d%d%d%d%d%d%d',\
    \ carry, digit % 2, digit % 4, digit % 8, digit % 16, digit % 32, digit % 64,\
    \ digit % 128, digit % 256)\n    end\n    if carry > 0 then\n        result =\
    \ result .. string.format('%d', carry)\n    end\n    return result\nend", "  local\
    \ sum = 0\n  local i = 1\n  while i <= N do\n    sum = sum + math.floor((N % i)\
    \ / 2)\n    i = i + 1\n  end\n  return sum\nend", "  local s = ''\n  local n =\
    \ 1\n  while n > 0 do\n    local t = math.floor(math.log(n, 2))\n    s = s ..\
    \ string.format('%d', n / 2^t)\n    n = n % 2^t\n  end\n  return s\nend", "  \
    \  local s = ''\n    local carry = 0\n    local digit = 0\n    while N > 0 do\n\
    \        digit = N % 2\n        N = N / 2\n        s = string.format('%s%d%s',\
    \ s, digit, carry and '1' or '0')\n        carry = digit * 2\n    end\n    return\
    \ s\nend", "    local sum = 0\n    local i = 1\n    while i <= N do\n        sum\
    \ = sum + math.floor((N % i) / 2)\n        i = i + 1\n    end\n    return sum\n\
    end", "  local result = ''\n  local digits = math.floor(math.log2(N))\n  for i\
    \ = 1, digits do\n    local digit = math.floor(N/math.pow(2, i))\n    local binary\
    \ = tostring(digit)\n    if binary == '1' then\n      result = result .. '1'\n\
    \    else\n      result = result .. '0'\n    end\n  end\n  return result\nend",
  "    local s = ''\n    local i = 1\n    while i <= N do\n        local t = math.floor((N\
    \ / i) * 2)\n        s = s .. tostring(t % 2) .. tostring(t)\n        i = i +\
    \ 1\n    end\n    return s\nend", "    local s = ''\n    while N > 0 do\n    \
    \    local n = math.floor(N / 2)\n        s = s .. tostring(n)\n        N = N\
    \ - n\n    end\n    return s\nend", "    local s = ''\n    while N > 0 do\n  \
    \      local t = math.floor(math.log2(N))\n        s = s .. '1' .. math.floor((N\
    \ - math.pow(2, t)) / math.pow(2, t))\n        N = math.floor((N - math.pow(2,\
    \ t)) / math.pow(2, t))\n    end\n    return s\nend", "    local s = ''\n    local\
    \ i = 1\n    while i <= N do\n        local t = math.floor((N % i) / 2)\n    \
    \    s = s .. t\n        i = i + 1\n    end\n    return s\nend", "    local s\
    \ = ''\n    local i = 1\n    while i <= N do\n        local t = math.floor(i/10)\n\
    \        s = s .. t\n        i = i%10\n    end\n    return s\nend", "    local\
    \ s = ''\n    local i = 1\n    while i <= N do\n        local t = math.floor((N\
    \ % i) / 2)\n        s = s .. '1' if t > 0 else '0'\n        i = i + 1\n    end\n\
    \    return s\nend", "  local result = ''\n  local sum = 0\n  local remainder\n\
    \  while N > 0 do\n    remainder = N % 2\n    sum = sum + remainder\n    N = N\
    \ / 2\n  end\n  result = result .. tostring(sum)\n  return result\nend", "  local\
    \ s = ''\n  local n = 1\n  while n > 0 do\n    local t = N % 2\n    N = N / 2\n\
    \    s = s .. t\n  end\n  return s\nend", "    local ans = ''\n    local sum =\
    \ 0\n    local i = 0\n    while i < N do\n        sum = sum + math.floor((N %\
    \ 10) * math.pow(2, i))\n        i = i + 1\n    end\n    ans = ans .. tostring(sum)\n\
    \    return ans\nend", "  local s = ''\n  local n = 1\n  while n > 0 do\n    local\
    \ m = math.floor((N / n) % 2)\n    s = s .. '1' if m == 0 else '0' .. s\n    n\
    \ = math.floor((N / n) / 2)\n  end\n  return s\nend", "    local ans = \"\"\n\
    \    local sum = 0\n    for i = 1, N do\n        sum = sum + math.floor((N % 10)\
    \ * math.pow(2, i))\n    end\n    if sum > 0 then\n        ans = ans .. math.floor(sum\
    \ / 2)\n    end\n    return ans\nend", "  local s = ''\n  local n = 1\n  while\
    \ n <= N do\n    s = s .. tostring(n % 2)\n    n = n / 2\n  end\n  return s\n\
    end", "    local s = ''\n    local n = 0\n    while N > 0 do\n        local t\
    \ = math.floor(N / 2)\n        s = s .. tostring(t % 2) .. '1'\n        N = t\n\
    \        n = n + 1\n    end\n    return s\nend", "  local sum = 0\n  local digits\
    \ = math.floor(math.log(N)/math.log(2))\n  for i = 1, digits do\n    sum = sum\
    \ + math.floor((N % math.pow(2, digits)) / math.pow(2, digits))\n    N = N - math.floor((N\
    \ % math.pow(2, digits)) / math.pow(2, digits))\n  end\n  return sum\nend", " \
    \ local s = ''\n  while N > 0 do\n    local remainder = N % 2\n    s = string.format('%s%d%s',\
    \ s, remainder, s)\n    N = N / 2\n  end\n  return s\nend", "    local s = ''\n\
    \    local i = 1\n    while i <= N do\n        local t = math.floor((N % i) /\
    \ 2)\n        s = s .. string.format('%d', t)\n        i = i + 1\n    end\n  \
    \  return s\nend", "  local s = ''\n  local i = 0\n  while i < N do\n    local\
    \ c = math.floor((N - i) / 2)\n    s = s .. tostring(math.floor((N - i) / 2))\
    \ .. '0' .. tostring(math.floor((N - i) % 2))\n    i = i + 1\n  end\n  return\
    \ s\nend", "    local s = ''\n    local n = 0\n    while N > 0 do\n        local\
    \ m = math.floor(math.log2(N))\n        s = s .. '1' .. '0' * (N % 2)\n      \
    \  N = N / 2\n        n = n + 1\n    end\n    return s\nend", "    local s = ''\n\
    \    local n = 0\n    while N > 0 do\n        local m = math.floor(math.log2(N))\n\
    \        local digit = math.floor(N / math.pow(2, m))\n        s = s .. tostring(digit)\n\
    \        N = N - digit*math.pow(2, m)\n        n = n + 1\n    end\n    return\
    \ s\nend", "    local s = ''\n    while N > 0 do\n        local n = math.floor(N\
    \ / 2)\n        s = s .. string.format('%d', n)\n        N = N - n\n    end\n\
    \    return s\nend", "  local s = ''\n  local n = 1\n  while n <= N do\n    local\
    \ m = math.floor(math.log(n, 2))\n    s = s .. string.format('%d', math.floor(n/math.pow(2,m)))\n\
    \    n = n + 1\n  end\n  return s\nend", "  local s = ''\n  while N > 0 do\n \
    \   local digit = math.floor(N / 2)\n    s = string.format('%s%d', s, digit)\n\
    \    N = N - digit\n  end\n  return s\nend", "  local s = ''\n  while N > 0 do\n\
    \    local t = math.floor(math.log2(N))\n    s = s .. tostring(math.pow(2, t))\
    \ .. '0'\n    N = math.floor(N / math.pow(2, t))\n  end\n  return s\nend", " \
    \ local sum = 0\n  while N > 0 do\n    sum = sum + math.floor((N % 2) / 2)\n \
    \   N = math.floor(N / 2)\n  end\n  return sum\nend", "    local sum = 0\n   \
    \ local i = 1\n    while i <= N do\n        sum = sum + math.floor((N % i) / 2)\n\
    \        i = i + 1\n    end\n    return sum\nend", "    local s = ''\n    while\
    \ N > 0 do\n        local t = math.floor(math.log2(N))\n        s = s .. tostring(math.pow(2,\
    \ t))\n        N = math.floor(N/math.pow(2, t))\n    end\n    return s\nend",
  "    local ans = \"\"\n    local sum = 0\n    local i = 0\n    while i < N do\n\
    \        sum = sum + math.floor((N % 10) * math.pow(2, i))\n        i = i + 1\n\
    \    end\n    ans = ans .. tostring(sum)\n    return ans\nend", "    local s =\
    \ ''\n    local n = 1\n    while n <= N do\n        local m = math.floor(math.log(n,\
    \ 2))\n        s = s .. '1' .. math.floor(n/pow(2, m))\n        n = n*pow(2, m)\n\
    \    end\n    return s\nend", "  local s = ''\n  local n = 1\n  while n <= N do\n\
    \    s = s .. tostring(n % 2)\n    n = n / 2\n  end\n  return s\nend", "    local\
    \ s = ''\n    local n = 1\n    while n > 0 do\n        if N % 2 == 0 then\n  \
    \          s = s .. '1'\n            N = N / 2\n        else\n            s =\
    \ s .. '0'\n            N = N / 2\n        end\n        n = n + 1\n    end\n \
    \   return s\nend", "  local s = ''\n  local n = 1\n  while n > 0 do\n    local\
    \ m = math.floor(math.log(n, 2))\n    s = s .. string.format('%d', math.floor(n/math.pow(2,m)))\n\
    \    n = math.floor(n/math.pow(2,m))\n  end\n  return s\nend", "  local sum =\
    \ 0\n  local digits = math.floor(math.log(N)/math.log(2))\n  for i = 1, digits\
    \ do\n    sum = sum + math.floor((N % math.pow(2,i))/math.pow(2,i))\n  end\n \
    \ return sum\nend", "  local sum = 0\n  local i = 1\n  while i <= N do\n    sum\
    \ = sum + math.floor((N % i) / 2)\n    i = i + 1\n  end\n  return sum\nend", " \
    \ local s = ''\n  local carry = 0\n  local digit = 0\n  while N > 0 do\n    digit\
    \ = N % 2\n    N = N / 2\n    if digit > 0 then\n      s = s .. '1'\n      carry\
    \ = 1\n    else\n      s = s .. '0'\n      carry = 0\n    end\n  end\n  if carry\
    \ == 1 then\n    s = s .. '1'\n  end\n  return s\nend", "  local s = ''\n  local\
    \ n = 0\n  while N > 0 do\n    local digit = math.floor(math.log2(N))\n    s =\
    \ s .. '1' .. string.sub(tostring(N), digit, digit)\n    N = N / 2\n    n = n\
    \ + 1\n  end\n  return s\nend", "    local s = ''\n    local n = 0\n    while\
    \ N > 0 do\n        local t = math.floor(math.log2(N))\n        local m = math.floor(N\
    \ / math.pow(2, t))\n        s = s .. '1' if m == 1 else '0' .. s\n        N =\
    \ N - m * math.pow(2, t)\n        n = n + 1\n    end\n    return s\nend", "  --\
    \ Base case\n  if N == 0 then\n    return '0'\n  end", "    local ans = \"\"\n\
    \    local i = 0\n    while i < N do\n        local digit = math.floor(math.log(i)\
    \ / math.log(2))\n        ans = ans .. digit\n        i = i + 1\n    end\n   \
    \ return ans\nend", "  local sum = 0\n  local result = \"\"\n  for i = 1, N do\n\
    \    local digit = math.floor(math.log(i) / math.log(2))\n    sum = sum + digit\n\
    \    if sum > 1 then\n      result = result .. \"1\"\n      sum = 1\n    else\n\
    \      result = result .. \"0\"\n    end\n  end\n  return result\nend", "    local\
    \ s = ''\n    local i = 0\n    while N > 0 do\n        local t = math.floor(math.log2(N))\n\
    \        s = s .. string.format('%0*d', t, math.pow(2, t))\n        N = N - math.pow(2,\
    \ t)\n        i = i + 1\n    end\n    return s\nend", "    local result = ''\n\
    \    local n = 1\n    while n > 0 do\n        if N % 2 == 0 then\n           \
    \ N = N / 2\n        else\n            N = N * 3 + 1\n        end\n        result\
    \ = result .. tostring(N)\n    end\n    return result\nend", "  local s = ''\n\
    \  local i = 1\n  while i <= N do\n    s = s .. tostring(math.floor((N % i) /\
    \ i))\n    i = i + 1\n  end\n  return s\nend", "    local result = ''\n    local\
    \ carry = 0\n    for i = 1, N do\n        local digit = math.floor(math.pow(10,\
    \ i) * N / i) % 10\n        local binary = tostring(digit)\n        if carry >\
    \ 0 then\n            binary = binary .. '1'\n        end\n        result = result\
    \ .. binary\n        carry = math.floor(math.pow(10, i) * N / i) / 10\n    end\n\
    \    if carry > 0 then\n        result = result .. tostring(carry)\n    end\n\
    \    return result\nend", "    local sum = 0\n    while N > 0 do\n        sum\
    \ = sum + math.floor((N % 2) / 2)\n        N = math.floor(N / 2)\n    end\n  \
    \  return sum\nend", "    local s = ''\n    local t = 1\n    local k = 1\n   \
    \ while t < N do\n        local m = math.floor(t / 2)\n        local r = t % 2\n\
    \        s = s .. '1' if r == 1 else '0' .. s\n        t = m\n        k = k +\
    \ 1\n    end\n    return s\nend", "    local s = ''\n    local t = N\n    while\
    \ t > 0 do\n        local r = math.floor(t/2)\n        s = s .. string.format('%d',\
    \ r) .. '0'\n        t = r\n    end\n    return s\nend", "    local ans = \"\"\
    \n    local sum = 0\n    local i = 1\n    while i <= N do\n        sum = sum +\
    \ i\n        i = i + 1\n    end\n    ans = ans .. tostring(sum)\n    return ans\n\
    end", "  local sum = 0\n  local n = 0\n  while N > 0 do\n    sum = sum + math.floor((N\
    \ % 10) * math.pow(2, n))\n    n = n + 1\n    N = math.floor(N / 10)\n  end\n\
    \  return sum\nend", "    local sum = 0\n    while N > 0 do\n        sum = sum\
    \ + math.floor((N % 10) * (math.pow(2, math.floor(math.log(N, 2)))))\n       \
    \ N = math.floor(N / 10)\n    end\n    return sum\nend", "    local result = ''\n\
    \    local N1 = N\n    local N2 = N\n    local N3 = N\n    local N4 = N\n    local\
    \ N5 = N\n    local N6 = N\n    local N7 = N\n    local N8 = N\n    local N9 =\
    \ N\n    local N10 = N\n    local N11 = N\n    local N12 = N\n    local N13 =\
    \ N\n    local N14 = N\n    local N15 = N\n    local N16 = N\n    local N17 =\
    \ N\n    local N18 = N\n    local N19 = N\n    local N20 = N\n    local N21 =\
    \ N\n    local N22 = N\n    local N23 = N\n    local N24 = N\n    local N25 =\
    \ N\n    local N26 = N\n    local N27 = N\n    local N28 = N\n    local N29 =\
    \ N\n    local N30 = N\n    local N31 = N\n    local N32 = N\n    local N33 =\
    \ N\n    local N34 = N\n    local N35 = N\n    local N36 = N\n    local N37 =\
    \ N\n    local N38 = N\n    local N39 = N\n    local N40 = N\n    local N41 =\
    \ N\n    local N42 = N\n    local N43 = N\n    local N44 = N\n    local N45 =\
    \ N\n    local N46 = N\n    local N47 = N\n    local N48 = N\n    local N49 =\
    \ N\n    local N50 = N\n    local N51 = N\n    local N52 = N\n    local N53 =\
    \ N\n    local N54 = N\n    local N55 = N\n    local N56 = N\n    local N57 =\
    \ N\n    local N58 = N\n    local N59 = N\n    local N60 = N\n    local N61 =\
    \ N\n    local N62 = N\n    local N63 = N\n    local N64 = N\n    local N65 =\
    \ N\n    local N66 = N\n    local N67 = N\n    local N68 = N\n    local N69 =\
    \ N\n    local N70 = N\n    local N71 = N\n    local N72 = N\n    local N73 =\
    \ N\n    local N74 = N\n    ", "  local s = ''\n  while N > 0 do\n    local t\
    \ = math.floor(math.log2(N))\n    s = s .. string.format('%d', math.pow(2, t))\n\
    \    N = math.floor(N / math.pow(2, t))\n  end\n  return s\nend", "  local result\
    \ = ''\n  local sum = 0\n  while N > 0 do\n    sum = sum + math.floor((N % 10)\
    \ * 2)\n    N = math.floor(N / 10)\n  end\n  result = result .. tostring(sum)\n\
    \  return result\nend", "  local ans = \"\"\n  local sum = 0\n  while N > 0 do\n\
    \    sum = sum + math.floor((N % 10) * 2)\n    N = math.floor(N / 10)\n  end\n\
    \  ans = ans .. tostring(sum)\n  return ans\nend", "  local sum = 0\n  local i\
    \ = 0\n  while N > 0 do\n    sum = sum + math.floor((N % 2) / 2)\n    N = math.floor(N\
    \ / 2)\n    i = i + 1\n  end\n  return sum\nend", "  local result = ''\n  local\
    \ sum = 0\n  local i = 1\n  while i <= N do\n    sum = sum + math.floor((N % i)\
    \ / 2)\n    i = i + 1\n  end\n  result = result .. tostring(sum)\n  return result\n\
    end", "  local s = ''\n  while N > 0 do\n    local digit = math.floor(N / 2)\n\
    \    s = string.format('%s%d', s, digit)\n    N = N - digit\n  end\n  return s\n\
    end", "  local s = ''\n  while N > 0 do\n    local digit = math.floor(math.log2(N))\n\
    \    s = string.format('%s%d', s, digit)\n    N = math.floor(N / 2)\n  end\n \
    \ return s\nend", "    local s = ''\n    local i = 1\n    while i <= N do\n  \
    \      local t = math.floor((N / i) * 2)\n        s = s .. tostring(t % 2)\n \
    \       i = i + 1\n    end\n    return s\nend", "    local sum = 0\n    local\
    \ i = 1\n    while i <= N do\n        sum = sum + math.floor((N % i) / 2)\n  \
    \      i = i + 1\n    end\n    return sum\nend", "  local result = ''\n  local\
    \ carry = 0\n  local digit = 0\n  local i = 0\n  while i < N do\n    digit = N\
    \ % 2\n    N = N / 2\n    carry = digit + carry\n    i = i + 1\n  end\n  if carry\
    \ > 0 then\n    result = string.format(\"%c\", carry) + result\n  end\n  return\
    \ result\nend", "  local s = ''\n  while N > 0 do\n    local remainder = N % 2\n\
    \    s = string.format('%s%d%s', s, remainder, s)\n    N = N / 2\n  end\n  return\
    \ s\nend", "    local s = ''\n    local i = 1\n    while i <= N do\n        local\
    \ t = math.floor((N / i) * 2)\n        s = s .. tostring(t % 2)\n        i = i\
    \ + 1\n    end\n    return s\nend", "    local s = ''\n    while N > 0 do\n  \
    \      local t = math.floor(math.log2(N))\n        s = s .. string.format('%d',\
    \ math.pow(2, t))\n        N = N - math.pow(2, t)\n    end\n    return s\nend",
  "    local ans = \"\"\n    local sum = 0\n    while N > 0 do\n        sum = sum\
    \ + math.floor((N % 2) / 2)\n        N = math.floor(N / 2)\n    end\n    ans =\
    \ ans .. tostring(sum)\n    return ans\nend", "  local sum = 0\n  local i = 1\n\
    \  while i <= N do\n    sum = sum + math.floor((N % i) / 2)\n    i = i + 1\n \
    \ end\n  return sum\nend", "    local s = ''\n    local n = 1\n    while n > 0\
    \ do\n        local m = math.floor(math.log(n, 2))\n        s = s .. string.format('%d',\
    \ math.floor(n/2))\n        n = math.floor(n/2)\n    end\n    return s\nend",
  "    local result = ''\n    local sum = 0\n    local i = 1\n    while i <= N do\n\
    \        sum = sum + math.floor((N % i) / 2)\n        i = i + 1\n    end\n   \
    \ if sum > 0 then\n        result = result .. math.floor(sum)\n    end\n    return\
    \ result\nend", "    local s = ''\n    local n = 0\n    while N > 0 do\n     \
    \   local t = math.floor(N / 2)\n        N = t\n        s = s .. t\n    end\n\
    \    return s\nend", "  local ans = \"\"\n  local digits = math.floor(math.log(N)/math.log(2))\n\
    \  for i = 1, digits do\n    local digit = math.floor((N % math.pow(2,i))/math.pow(2,i-1))\n\
    \    ans = ans .. digit\n  end\n  return ans\nend", "    local s = ''\n    while\
    \ N > 0 do\n        local t = math.floor(math.log2(N))\n        s = s .. string.format('%d',\
    \ math.pow(2, t))\n        N = math.floor(N / math.pow(2, t))\n    end\n    return\
    \ s\nend", "  local s = ''\n  local i = 1\n  while i <= N do\n    local t = math.floor(i/10)\n\
    \    i = i - t*10\n    s = s .. t\n  end\n  return s\nend", "  local s = ''\n\
    \  local n = 0\n  while N > 0 do\n    local t = math.floor(math.log2(N))\n   \
    \ s = s .. tostring(math.pow(2, t)) .. '1'\n    N = math.floor(N / math.pow(2,\
    \ t))\n    n = n + 1\n  end\n  if n ~= 1 then\n    s = s .. tostring(math.pow(2,\
    \ n)) .. '0'\n  end\n  return s\nend", "  local sum = 0\n  local result = \"\"\
    \n  repeat\n    sum = sum + math.floor((math.floor(N / 2) + math.floor(N % 2))\
    \ / 2)\n    result = result .. \"1\"\n    N = math.floor(N / 2)\n  until N ==\
    \ 0\n  return result .. tostring(sum)\nend", "  local s = ''\n  local n = 1\n\
    \  while n > 0 do\n    local m = math.floor(math.log(n, 2))\n    s = s .. string.sub(tostring(N),\
    \ m, m)\n    n = n / 2\n  end\n  return s\nend", "    local s = ''\n    local\
    \ t = N\n    while t > 0 do\n        local n = math.floor(t/2)\n        s = s\
    \ .. string.format('%d', math.floor(t/2))\n        t = n\n    end\n    return\
    \ s\nend", "  local s = ''\n  while N > 0 do\n    local t = math.floor(math.log2(N))\n\
    \    s = s .. '1' .. math.floor((N - math.pow(2, t)) / math.pow(2, t))\n    N\
    \ = math.pow(2, t)\n  end\n  return s\nend", "  local ans = \"\"\n  local sum\
    \ = 0\n  local n = 0\n  while N > 0 do\n    sum = sum + N % 2\n    N = N / 2\n\
    \    n = n + 1\n  end\n  ans = ans .. tostring(sum)\n  ans = ans .. tostring(n\
    \ - (sum > 0 and 1 or 0))\n  return ans\nend", "  local s = ''\n  local n = 1\n\
    \  while n > 0 do\n    local t = math.floor((N / n) % 2)\n    s = s .. t\n   \
    \ n = math.floor((N / n) / 2)\n  end\n  return s\nend", "  local result = ''\n\
    \  local carry = 0\n  local digit = 0\n  while N > 0 do\n    digit = N % 2\n \
    \   N = N / 2\n    if digit == 1 then\n      result = result .. '1'\n      carry\
    \ = 1\n    else\n      result = result .. '0'\n      carry = 0\n    end\n  end\n\
    \  if carry == 1 then\n    result = result .. '1'\n  end\n  return result\nend",
  "    local s = ''\n    while N > 0 do\n        local t = math.floor(N / 2)\n   \
    \     s = s .. string.format('%d', t)\n        N = N - t\n    end\n    return\
    \ s\nend", "  local sum = 0\n  local i = 1\n  while i <= N do\n    sum = sum +\
    \ math.floor((N % i) / 2)\n    i = i + 1\n  end\n  return sum\nend", "    local\
    \ s = ''\n    local n = 0\n    while N > 0 do\n        local m = math.floor(math.log2(N))\n\
    \        n = n + ((N / (2 ** m)) * (2 ** m))\n        N = N - ((N / (2 ** m))\
    \ * (2 ** m))\n        s = s .. '1' .. '0'\n    end\n    return s\nend", "  local\
    \ s = ''\n  local i = 1\n  while i <= N do\n    local t = math.floor(math.log(i)\
    \ / math.log(2))\n    s = s .. '1' .. math.floor(i/2) .. '0'\n    i = i/2\n  \
    \  if t > 0 then\n      s = s .. '0'\n    end\n  end\n  return s\nend", "    local\
    \ s = ''\n    while N > 0 do\n        local t = math.floor(math.log2(N))\n   \
    \     s = s .. string.format('%0*b', t, math.pow(2, t))\n        N = N - math.pow(2,\
    \ t)\n    end\n    return s\nend", "  local s = ''\n  local n = 1\n  while n >\
    \ 0 do\n    local t = math.floor(math.log(n, 2))\n    s = s .. string.format('%d',\
    \ math.floor(n/2))\n    n = t\n  end\n  return s\nend", "    local sum = 0\n \
    \   local i = 1\n    while i <= N do\n        sum = sum + math.floor((N % i) /\
    \ 2)\n        i = i + 1\n    end\n    return sum\nend", "  local result = ''\n\
    \  local remainder = N % 2\n  local sum = 0\n  while N > 0 do\n    sum = sum +\
    \ N % 2\n    N = N / 2\n  end\n  result = result .. tostring(sum)\n  if remainder\
    \ == 1 then\n    result = result .. '0'\n  end\n  return result\nend", "  local\
    \ s = ''\n  while N > 0 do\n    local remainder = N % 2\n    s = string.format('%s%d',\
    \ s, remainder)\n    N = N / 2\n  end\n  return s\nend", "  local s = ''\n  local\
    \ n = 1\n  while n <= N do\n    local m = math.floor(math.log(n, 2))\n    s =\
    \ s .. '1' .. math.floor(n/math.pow(2,m))\n    n = n*2\n  end\n  return s\nend",
  "    local s = ''\n    local i = 1\n    while i <= N do\n        local t = math.floor((N\
    \ / i) * 2)\n        s = s .. tostring(t) .. '1'\n        i = i + 1\n    end\n\
    \    return s\nend", "  local s = ''\n  local n = 1\n  while n > 0 do\n    local\
    \ t = N % 2\n    N = N / 2\n    s = s .. t\n  end\n  return s\nend", "  local\
    \ s = ''\n  local i = 1\n  while i <= N do\n    local t = math.floor(i/10)\n \
    \   s = s .. '1' if t > 0 else '0'\n    i = i%10\n  end\n  return s\nend", " \
    \ local s = ''\n  while N > 0 do\n    local t = math.floor(math.log2(N))\n   \
    \ s = s .. tostring(t % 2) .. tostring(N / 2^t)\n    N = N / 2^t\n  end\n  return\
    \ s\nend", "    local s = ''\n    local i = 1\n    while i <= N do\n        local\
    \ t = math.floor(i/10)\n        s = s .. string.format('%d', t) .. '0'\n     \
    \   i = math.floor(i/10)\n    end\n    return s\nend", "  local s = ''\n  local\
    \ n = 1\n  while n > 0 do\n    local m = math.floor(math.log(n, 2))\n    s = s\
    \ .. '1' .. math.floor((n / 2^(m - 1)) * 2)\n    n = math.floor((n / 2^(m - 1))\
    \ * 2)\n  end\n  return s\nend", "  local result = ''\n  local n = 0\n  while\
    \ N > 0 do\n    local remainder = N % 2\n    N = N / 2\n    result = remainder\
    \ .. result\n  end\n  return result\nend", "  local s = ''\n  while N > 0 do\n\
    \    local t = math.floor(math.log2(N))\n    s = s .. string.format('%d', 2^t)\n\
    \    N = N - 2^t\n  end\n  return s\nend", "    local s = ''\n    while N > 0\
    \ do\n        local t = math.floor(N / 2)\n        s = string.format('%s%d%s',\
    \ s, t, math.mod(N, t) == 0 and '1' or '0')\n        N = t\n    end\n    return\
    \ s\nend", "  -- Base case\n  if N == 1 then\n    return '1'\n  end\n  -- Recursive\
    \ case\n  local digits = N % 10\n  local remainder = N / 10\n  local result =\
    \ solve(remainder)\n  result = result .. '0'\n  result = result .. digits\n  return\
    \ result\nend", "    local s = ''\n    while N > 0 do\n        local t = math.floor(math.log2(N))\n\
    \        s = s .. string.char(math.pow(2, t) + 1)\n        N = math.floor(N /\
    \ math.pow(2, t))\n    end\n    return s\nend", "    local s = ''\n    while N\
    \ > 0 do\n        local t = math.floor(math.log2(N))\n        s = s .. tostring(math.pow(2,\
    \ t))\n        N = math.floor(N / math.pow(2, t))\n    end\n    return s\nend",
  "  -- base case\n  if N == 0 then\n    return '0'\n  end", "  local sum = 0\n  local\
    \ i = 1\n  while i <= N do\n    sum = sum + math.floor((N % i) / 2)\n    i = i\
    \ + 1\n  end\n  return sum\nend", "    local result = ''\n    local N1 = N\n \
    \   local N2 = N\n    local N3 = N\n    local N4 = N\n    local N5 = N\n    local\
    \ N6 = N\n    local N7 = N\n    local N8 = N\n    local N9 = N\n    local N10\
    \ = N\n    local N11 = N\n    local N12 = N\n    local N13 = N\n    local N14\
    \ = N\n    local N15 = N\n    local N16 = N\n    local N17 = N\n    local N18\
    \ = N\n    local N19 = N\n    local N20 = N\n    local N21 = N\n    local N22\
    \ = N\n    local N23 = N\n    local N24 = N\n    local N25 = N\n    local N26\
    \ = N\n    local N27 = N\n    local N28 = N\n    local N29 = N\n    local N30\
    \ = N\n    local N31 = N\n    local N32 = N\n    local N33 = N\n    local N34\
    \ = N\n    local N35 = N\n    local N36 = N\n    local N37 = N\n    local N38\
    \ = N\n    local N39 = N\n    local N40 = N\n    local N41 = N\n    local N42\
    \ = N\n    local N43 = N\n    local N44 = N\n    local N45 = N\n    local N46\
    \ = N\n    local N47 = N\n    local N48 = N\n    local N49 = N\n    local N50\
    \ = N\n    local N51 = N\n    local N52 = N\n    local N53 = N\n    local N54\
    \ = N\n    local N55 = N\n    local N56 = N\n    local N57 = N\n    local N58\
    \ = N\n    local N59 = N\n    local N60 = N\n    local N61 = N\n    local N62\
    \ = N\n    local N63 = N\n    local N64 = N\n    local N65 = N\n    local N66\
    \ = N\n    local N67 = N\n    local N68 = N\n    local N69 = N\n    local N70\
    \ = N\n    local N71 = N\n    local N72 = N\n    local N73 = N\n    local N74\
    \ = N\n    ", "    local s = ''\n    local i = 1\n    while i <= N do\n      \
    \  local t = math.floor((N / i) * 2)\n        s = s .. tostring(t % 2)\n     \
    \   i = i + 1\n    end\n    return s\nend", "    local sum = 0\n    local i =\
    \ 0\n    while i < N do\n        sum = sum + math.floor((N % 10) * (math.pow(2,\
    \ i)))\n        i = i + 1\n    end\n    return sum\nend", "  local s = ''\n  local\
    \ n = 1\n  while n > 0 do\n    local m = math.floor((N / n) * 2)\n    s = s ..\
    \ tostring(m)\n    n = n + 1\n  end\n  return s\nend", "    local s = ''\n   \
    \ local i = 1\n    while i <= N do\n        local t = math.floor((N / i) * 2)\n\
    \        s = s .. tostring(t % 2)\n        i = i + 1\n    end\n    return s\n\
    end", "  local s = ''\n  local n = 0\n  while N > 0 do\n    local t = math.floor(math.log2(N))\n\
    \    local digit = math.floor(N / math.pow(2, t))\n    s = s .. digit\n    N =\
    \ N - math.pow(2, t) * digit\n    n = n + 1\n  end\n  if n == 0 then\n    return\
    \ s\n  else\n    return s .. '0'\n  end\nend", "  local sum = 0\n  local n = 1\n\
    \  while n <= N do\n    sum = sum + math.floor(n/10)\n    n = math.floor(n/10)\n\
    \  end\n  return sum\nend", "  local sum = 0\n  local i = 1\n  while i <= N do\n\
    \    sum = sum + math.floor((N % i) / 2)\n    i = i + 1\n  end\n  return sum\n\
    end", "  local sum = 0\n  local n = 1\n  while n > 0 do\n    sum = sum + math.floor((N\
    \ % 2) == 0 and N / 2 or N / 2)\n    N = math.floor(N / 2)\n    n = n + 1\n  end\n\
    \  return sum\nend", "    local s = ''\n    while N > 0 do\n        local t =\
    \ math.floor(math.log2(N))\n        s = s .. tostring(math.pow(2, t))\n      \
    \  N = math.floor(N / math.pow(2, t))\n    end\n    return s\nend", "  -- Base\
    \ case\n  if N == 0 then\n    return '0'\n  end\n  -- Recursive case\n  local\
    \ digits = math.floor(math.log(N) / math.log(2))\n  return solve(N - math.pow(N,\
    \ digits)) + string.format('%b', math.floor(N / math.pow(10, digits)))\nend",
  "  local s = ''\n  while N > 0 do\n    local t = math.floor(N / 2)\n    s = s ..\
    \ string.format('%d', t)\n    N = N - t\n  end\n  return s\nend", "  local s =\
    \ ''\n  local n = 0\n  while N > 0 do\n    local m = math.floor(math.log2(N))\n\
    \    local digit = math.floor(N / math.pow(2, m))\n    N = N - digit*math.pow(2,\
    \ m)\n    s = s .. tostring(digit)\n  end\n  return s\nend", "  local s = ''\n\
    \  local n = 0\n  while N > 0 do\n    local digit = math.floor(math.log2(N))\n\
    \    s = s .. string.format('%d', math.pow(2, digit))\n    N = math.floor(N /\
    \ math.pow(2, digit))\n    n = n + 1\n  end\n  return s\nend", "    local s =\
    \ ''\n    while N > 0 do\n        local t = math.floor(math.log2(N))\n       \
    \ s = s .. tostring(math.pow(2, t)) .. '1'\n        N = N - math.pow(2, t)\n \
    \   end\n    return s\nend", "  local s = ''\n  local carry = 0\n  for i = 1,\
    \ N do\n    local digit = math.floor((N % 10) + carry)\n    N = N / 10\n    carry\
    \ = digit * 2\n    s = s .. digit\n  end\n  return s\nend", "    local s = ''\n\
    \    local n = 1\n    while n > 0 do\n        local m = math.floor(math.log(n,\
    \ 2))\n        s = s .. string.sub(N:byte(m, m+1), m+1)\n        n = math.floor(n\
    \ / 2)\n    end\n    return s\nend", "    local s = ''\n    while N > 0 do\n \
    \       local t = math.floor(math.log2(N))\n        s = s .. tostring(t % 2) ..\
    \ tostring(N / 2^t)\n        N = N / 2^t\n    end\n    return s\nend", "    local\
    \ s = ''\n    while N > 0 do\n        local t = math.floor(math.log2(N))\n   \
    \     s = s .. tostring(2^t)\n        N = N - 2^t\n    end\n    return s\nend",
  "  local sum = 0\n  local result = ''\n  repeat\n    sum = sum + math.floor((N %\
    \ 10) * 2)\n    N = math.floor(N / 10)\n    result = result .. '1' .. tostring(sum)\n\
    \  until N == 0\n  return result\nend", "    local s = ''\n    while N > 0 do\n\
    \        local t = math.floor(math.log2(N))\n        s = s .. string.format('%0*b',\
    \ t, math.pow(2, t))\n        N = math.floor(N / math.pow(2, t))\n    end\n  \
    \  return s\nend", "  local s = ''\n  local i = 1\n  while i <= N do\n    local\
    \ n = math.floor(i / 2)\n    s = s .. string.format('%d', n)\n    i = math.floor(i\
    \ / 2)\n  end\n  return s\nend", "  local result = ''\n  local n = 1\n  while\
    \ n > 0 do\n    local digit = math.floor(math.log(n, 2))\n    local binary = string.format('%0*b',\
    \ digit, math.floor(n/digit))\n    local remainder = n - math.floor(math.log(n,\
    \ 2))*digit\n    if remainder > 0 then\n      binary = string.format('%s%s', binary,\
    \ string.format('%0*b', remainder, math.floor(remainder/digit)))\n    end\n  \
    \  result = result .. binary\n    n = math.floor(n/digit)\n  end\n  return result\n\
    end", "    local sum = 0\n    for i = 1, N do\n        sum = sum + math.floor((N\
    \ % 10) * math.pow(2, i))\n        N = math.floor(N / 10)\n    end\n    return\
    \ sum\nend", "    local s = ''\n    local i = 1\n    while i <= N do\n       \
    \ local t = math.floor((N % i) / 2)\n        s = s .. tostring(t % 2) + tostring((t\
    \ % 2) / 2)\n        i = i + 1\n    end\n    return s\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_28_concatenate
language: lua
prompt: "-- Concatenate list of strings into a single string\n-- >>> concatenate({})\n\
  -- ''\n-- >>> concatenate({'a', 'b', 'c'})\n-- 'abc'\nlocal function concatenate(strings)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = concatenate\n\
  \    lu.assertEquals(candidate({}), '')\n    lu.assertEquals(candidate({'x', 'y',\
  \ 'z'}), 'xyz')\n    lu.assertEquals(candidate({'x', 'y', 'z', 'w', 'k'}), 'xyzwk')\n\
  end\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n \
    \ end\n  return s\nend", "  local s = ''\n  for _, v in ipairs(strings) do\n \
    \   s = s .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in pairs(strings)\
    \ do\n    s = s .. v\n  end\n  return s\nend", "  if #strings == 0 then\n    return\
    \ ''\n  end\n  local result = strings[1]\n  for i = 2, #strings do\n    result\
    \ = result .. strings[i]\n  end\n  return result\nend", "  local s = ''\n  for\
    \ _, v in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", "  local\
    \ s = ''\n  for _, v in ipairs(strings) do\n    s = s .. v\n  end\n  return s\n\
    end", "  local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n\
    \  return s\nend", "  local s = ''\n  for _, v in ipairs(strings) do\n    s =\
    \ s .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in ipairs(strings)\
    \ do\n    s = s .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in\
    \ pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", "  local s = ''\n\
    \  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", " \
    \ local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return\
    \ s\nend", "  local result = {}\n  for _, str in pairs(strings) do\n    table.insert(result,\
    \ str)\n  end\n  return table.concat(result)\nend", "  local s = ''\n  for _,\
    \ v in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", "  local s\
    \ = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend",
  "  local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return\
    \ s\nend", "  local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n\
    \  end\n  return s\nend", "  local s = ''\n  for _, v in pairs(strings) do\n \
    \   s = s .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in pairs(strings)\
    \ do\n    s = s .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in\
    \ pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", "  local s = ''\n\
    \  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", " \
    \ local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return\
    \ s\nend", "  local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n\
    \  end\n  return s\nend", "  local s = ''\n  for _, v in pairs(strings) do\n \
    \   s = s .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in pairs(strings)\
    \ do\n    s = s .. v\n  end\n  return s\nend", "    local s = ''\n    for _, v\
    \ in pairs(strings) do\n        s = s .. v\n    end\n    return s\nend", "  local\
    \ s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return s\n\
    end", "  local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n\
    \  return s\nend", "  local result = {}\n  for _, str in ipairs(strings) do\n\
    \    table.insert(result, str)\n  end\n  return table.concat(result)\nend", " \
    \ local result = {}\n  for _, value in pairs(strings) do\n    table.insert(result,\
    \ value)\n  end\n  return table.concat(result)\nend", "  local result = {}\n \
    \ for _, value in pairs(strings) do\n    table.insert(result, value)\n  end\n\
    \  return table.concat(result)\nend", "  local s = ''\n  for _, v in pairs(strings)\
    \ do\n    s = s .. v\n  end\n  return s\nend", "  local result = {}\n  for _,\
    \ v in pairs(strings) do\n    table.insert(result, v)\n  end\n  return table.concat(result)\n\
    end", "  local result = {}\n  for _, value in pairs(strings) do\n    table.insert(result,\
    \ value)\n  end\n  return table.concat(result)\nend", "  if #strings == 0 then\n\
    \    return ''\n  end\n  local result = strings[1]\n  for i = 2, #strings do\n\
    \    result = result .. strings[i]\n  end\n  return result\nend", "  local s =\
    \ ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend",
  "  local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return\
    \ s\nend", "  if #strings == 0 then\n    return ''\n  end\n  local result = strings[1]\n\
    \  for i = 2, #strings do\n    result = result .. strings[i]\n  end\n  return\
    \ result\nend", "  local s = ''\n  for _, v in pairs(strings) do\n    s = s ..\
    \ v\n  end\n  return s\nend", "  local result = {}\n  for _, value in pairs(strings)\
    \ do\n    table.insert(result, value)\n  end\n  return table.concat(result)\n\
    end", "  local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n\
    \  return s\nend", "  local s = ''\n  for _, v in pairs(strings) do\n    s = s\
    \ .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in pairs(strings)\
    \ do\n    s = s .. v\n  end\n  return s\nend", "  local result = {}\n  for _,\
    \ value in pairs(strings) do\n    table.insert(result, value)\n  end\n  return\
    \ table.concat(result)\nend", "  local s = ''\n  for _, v in pairs(strings) do\n\
    \    s = s .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in pairs(strings)\
    \ do\n    s = s .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in\
    \ pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", "  local s = ''\n\
    \  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", " \
    \ local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return\
    \ s\nend", "  if type(strings) ~= 'table' then\n    return strings\n  end\n  local\
    \ result = {}\n  for _, value in pairs(strings) do\n    table.insert(result, value)\n\
    \  end\n  return table.concat(result)\nend", "  local s = ''\n  for _, v in pairs(strings)\
    \ do\n    s = s .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in\
    \ pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", "  local s = ''\n\
    \  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", " \
    \ local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return\
    \ s\nend", "  local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n\
    \  end\n  return s\nend", "  local s = ''\n  for _, v in pairs(strings) do\n \
    \   s = s .. v\n  end\n  return s\nend", "  local result = {}\n  for _, str in\
    \ pairs(strings) do\n    table.insert(result, str)\n  end\n  return table.concat(result)\n\
    end", "  if #strings == 0 then\n    return ''\n  end\n  local result = strings[1]\n\
    \  for i = 2, #strings do\n    result = result .. strings[i]\n  end\n  return\
    \ result\nend", "  local s = ''\n  for _, v in pairs(strings) do\n    s = s ..\
    \ v\n  end\n  return s\nend", "  local s = ''\n  for _, v in ipairs(strings) do\n\
    \    s = s .. v\n  end\n  return s\nend", "  local result = {}\n  for _, value\
    \ in pairs(strings) do\n    table.insert(result, value)\n  end\n  return table.concat(result)\n\
    end", "  local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n\
    \  return s\nend", "  local s = ''\n  for _, v in pairs(strings) do\n    s = s\
    \ .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in pairs(strings)\
    \ do\n    s = s .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in\
    \ pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", "  local s = ''\n\
    \  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", " \
    \ local result = {}\n  for _, str in pairs(strings) do\n    table.insert(result,\
    \ str)\n  end\n  return table.concat(result)\nend", "  local s = ''\n  for _,\
    \ v in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", "  local s\
    \ = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend",
  "  if #strings == 0 then\n    return ''\n  end\n  local result = strings[1]\n  for\
    \ i = 2, #strings do\n    result = result .. strings[i]\n  end\n  return result\n\
    end", "  if #strings == 0 then\n    return ''\n  end\n  local result = strings[1]\n\
    \  for i = 2, #strings do\n    result = result .. strings[i]\n  end\n  return\
    \ result\nend", "  local result = {}\n  for _, value in pairs(strings) do\n  \
    \  table.insert(result, value)\n  end\n  return table.concat(result)\nend", " \
    \ if #strings == 0 then\n    return ''\n  end\n  local result = strings[1]\n \
    \ for i = 2, #strings do\n    result = result .. strings[i]\n  end\n  return result\n\
    end", "  local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n\
    \  return s\nend", "  local s = ''\n  for _, v in pairs(strings) do\n    s = s\
    \ .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in pairs(strings)\
    \ do\n    s = s .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in\
    \ pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", "  local s = ''\n\
    \  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", " \
    \   local s = ''\n    for _, v in pairs(strings) do\n        s = s .. v\n    end\n\
    \    return s\nend", "  local s = ''\n  for _, v in ipairs(strings) do\n    s\
    \ = s .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in pairs(strings)\
    \ do\n    s = s .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in\
    \ pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", "  local result\
    \ = {}\n  for _, value in pairs(strings) do\n    table.insert(result, value)\n\
    \  end\n  return table.concat(result)\nend", "  local s = ''\n  for _, v in pairs(strings)\
    \ do\n    s = s .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in\
    \ pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", "  local s = ''\n\
    \  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", " \
    \ local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return\
    \ s\nend", "  local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n\
    \  end\n  return s\nend", "  local s = ''\n  for _, v in pairs(strings) do\n \
    \   s = s .. v\n  end\n  return s\nend", "  if type(strings) ~= 'table' then\n\
    \    return strings\n  end\n  local result = {}\n  for _, v in pairs(strings)\
    \ do\n    if type(v) == 'string' then\n      table.insert(result, v)\n    else\n\
    \      table.insert(result, v[1])\n    end\n  end\n  return table.concat(result)\n\
    end", "  local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n\
    \  return s\nend", "  local s = ''\n  for _, v in ipairs(strings) do\n    s =\
    \ s .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in pairs(strings)\
    \ do\n    s = s .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in\
    \ pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", "  local s = ''\n\
    \  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", " \
    \ local result = {}\n  for _, value in pairs(strings) do\n    table.insert(result,\
    \ value)\n  end\n  return table.concat(result)\nend", "  local s = ''\n  for _,\
    \ v in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", "  local s\
    \ = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend",
  "  local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return\
    \ s\nend", "  local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n\
    \  end\n  return s\nend", "  local s = ''\n  for _, v in pairs(strings) do\n \
    \   s = s .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in pairs(strings)\
    \ do\n    s = s .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in\
    \ pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", "  local s = ''\n\
    \  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", " \
    \ local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return\
    \ s\nend", "  local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n\
    \  end\n  return s\nend", "  local s = ''\n  for _, v in pairs(strings) do\n \
    \   s = s .. v\n  end\n  return s\nend", "  local result = {}\n  for _, str in\
    \ pairs(strings) do\n    table.insert(result, str)\n  end\n  return table.concat(result)\n\
    end", "  local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n\
    \  return s\nend", "  local s = ''\n  for _, v in ipairs(strings) do\n    s =\
    \ s .. v\n  end\n  return s\nend", "  local result = {}\n  for _, v in pairs(strings)\
    \ do\n    table.insert(result, v)\n  end\n  return table.concat(result)\nend",
  "  local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return\
    \ s\nend", "  local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n\
    \  end\n  return s\nend", "  local s = ''\n  for _, v in pairs(strings) do\n \
    \   s = s .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in pairs(strings)\
    \ do\n    s = s .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in\
    \ pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", "  local s = ''\n\
    \  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", " \
    \ local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return\
    \ s\nend", "  local result = {}\n  for _, value in pairs(strings) do\n    table.insert(result,\
    \ value)\n  end\n  return table.concat(result)\nend", "  local result = {}\n \
    \ for _, value in pairs(strings) do\n    table.insert(result, value)\n  end\n\
    \  return table.concat(result)\nend", "  local s = ''\n  for _, v in pairs(strings)\
    \ do\n    s = s .. v\n  end\n  return s\nend", "    local result = {}\n    for\
    \ _, value in pairs(strings) do\n        table.insert(result, value)\n    end\n\
    \    return table.concat(result)\nend", "  local result = {}\n  for _, value in\
    \ pairs(strings) do\n    table.insert(result, value)\n  end\n  return table.concat(result)\n\
    end", "  local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n\
    \  return s\nend", "  local s = ''\n  for _, v in pairs(strings) do\n    s = s\
    \ .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in pairs(strings)\
    \ do\n    s = s .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in\
    \ pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", "  local s = ''\n\
    \  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", " \
    \ local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return\
    \ s\nend", "  local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n\
    \  end\n  return s\nend", "  local s = ''\n  for _, v in pairs(strings) do\n \
    \   s = s .. v\n  end\n  return s\nend", "  local result = {}\n  for _, value\
    \ in pairs(strings) do\n    table.insert(result, value)\n  end\n  return table.concat(result)\n\
    end", "  local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n\
    \  return s\nend", "    local result = {}\n    for _, value in pairs(strings)\
    \ do\n        table.insert(result, value)\n    end\n    return table.concat(result)\n\
    end", "    local s = ''\n    for _, v in ipairs(strings) do\n        s = s ..\
    \ v\n    end\n    return s\nend", "  if #strings == 0 then\n    return ''\n  end\n\
    \  local result = strings[1]\n  for i = 2, #strings do\n    result = result ..\
    \ strings[i]\n  end\n  return result\nend", "  local s = ''\n  for _, v in pairs(strings)\
    \ do\n    s = s .. v\n  end\n  return s\nend", "  local result = {}\n  for _,\
    \ str in pairs(strings) do\n    table.insert(result, str)\n  end\n  return table.concat(result)\n\
    end", "  local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n\
    \  return s\nend", "  local s = ''\n  for _, v in pairs(strings) do\n    s = s\
    \ .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in pairs(strings)\
    \ do\n    s = s .. v\n  end\n  return s\nend", "  local result = {}\n  for _,\
    \ value in pairs(strings) do\n    table.insert(result, value)\n  end\n  return\
    \ table.concat(result)\nend", "  local s = ''\n  for _, v in ipairs(strings) do\n\
    \    s = s .. v\n  end\n  return s\nend", "    local s = ''\n    for _, v in pairs(strings)\
    \ do\n        s = s .. v\n    end\n    return s\nend", "  local s = ''\n  for\
    \ _, v in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", "  local\
    \ s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return s\n\
    end", "  local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n\
    \  return s\nend", "  local s = ''\n  for _, v in pairs(strings) do\n    s = s\
    \ .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in ipairs(strings)\
    \ do\n    s = s .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in\
    \ pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", "  local s = ''\n\
    \  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", " \
    \ local result = {}\n  for _, value in pairs(strings) do\n    table.insert(result,\
    \ value)\n  end\n  return table.concat(result)\nend", "  if #strings == 0 then\n\
    \    return ''\n  end\n  local result = strings[1]\n  for i = 2, #strings do\n\
    \    result = result .. strings[i]\n  end\n  return result\nend", "  local s =\
    \ ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend",
  "  local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return\
    \ s\nend", "  local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n\
    \  end\n  return s\nend", "  local s = ''\n  for _, v in pairs(strings) do\n \
    \   s = s .. v\n  end\n  return s\nend", "  local result = {}\n  for _, str in\
    \ pairs(strings) do\n    table.insert(result, str)\n  end\n  return table.concat(result)\n\
    end", "  local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n\
    \  return s\nend", "  if #strings == 0 then\n    return ''\n  end\n  local result\
    \ = strings[1]\n  for i = 2, #strings do\n    result = result .. strings[i]\n\
    \  end\n  return result\nend", "  local s = ''\n  for _, v in pairs(strings) do\n\
    \    s = s .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in pairs(strings)\
    \ do\n    s = s .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in\
    \ pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", "  local s = ''\n\
    \  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", " \
    \ local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return\
    \ s\nend", "  local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n\
    \  end\n  return s\nend", "  local s = ''\n  for _, v in ipairs(strings) do\n\
    \    s = s .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in pairs(strings)\
    \ do\n    s = s .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in\
    \ pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", "  local s = ''\n\
    \  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", " \
    \ local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return\
    \ s\nend", "  local result = {}\n  for _, value in pairs(strings) do\n    table.insert(result,\
    \ value)\n  end\n  return table.concat(result)\nend", "  local s = ''\n  for _,\
    \ v in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", "  local s\
    \ = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend",
  "  local result = {}\n  for _, value in pairs(strings) do\n    table.insert(result,\
    \ value)\n  end\n  return table.concat(result)\nend", "  local s = ''\n  for _,\
    \ v in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", "  local s\
    \ = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend",
  "  local result = {}\n  for _, v in pairs(strings) do\n    table.insert(result,\
    \ v)\n  end\n  return table.concat(result)\nend", "  local s = ''\n  for _, v\
    \ in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", "  local s =\
    \ ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend",
  "    local s = ''\n    for _, v in pairs(strings) do\n        s = s .. v\n    end\n\
    \    return s\nend", "  local s = ''\n  for _, v in pairs(strings) do\n    s =\
    \ s .. v\n  end\n  return s\nend", "  local result = {}\n  for _, str in pairs(strings)\
    \ do\n    table.insert(result, str)\n  end\n  return table.concat(result)\nend",
  "  local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return\
    \ s\nend", "  local result = {}\n  for _, value in pairs(strings) do\n    table.insert(result,\
    \ value)\n  end\n  return table.concat(result)\nend", "  local s = ''\n  for _,\
    \ v in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", "  local s\
    \ = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend",
  "  local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return\
    \ s\nend", "  local result = {}\n  for _, str in pairs(strings) do\n    table.insert(result,\
    \ str)\n  end\n  return table.concat(result)\nend", "  local s = ''\n  for _,\
    \ v in ipairs(strings) do\n    s = s .. v\n  end\n  return s\nend", "  local s\
    \ = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend",
  "  local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return\
    \ s\nend", "    local s = ''\n    for _, v in pairs(strings) do\n        s = s\
    \ .. v\n    end\n    return s\nend", "  local result = {}\n  for _, str in pairs(strings)\
    \ do\n    table.insert(result, str)\n  end\n  return table.concat(result)\nend",
  "  local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return\
    \ s\nend", "  local s = ''\n  for _, v in pairs(strings) do\n    s = s .. v\n\
    \  end\n  return s\nend", "  local s = ''\n  for _, v in pairs(strings) do\n \
    \   s = s .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in pairs(strings)\
    \ do\n    s = s .. v\n  end\n  return s\nend", "  local s = ''\n  for _, v in\
    \ pairs(strings) do\n    s = s .. v\n  end\n  return s\nend", "  local s = ''\n\
    \  for _, v in pairs(strings) do\n    s = s .. v\n  end\n  return s\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

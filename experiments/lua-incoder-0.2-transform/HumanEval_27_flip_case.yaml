name: HumanEval_27_flip_case
language: lua
prompt: "-- For a given string, flip lowercase characters to uppercase and uppercase\
  \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
  \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
  \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
  \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local result = string\n  local i, j = 1, #string\n  while i < j do\n\
    \    local c = string.sub(i, j)\n    if c:lower() ~= c then\n      result = string.sub(i,\
    \ j):upper() .. string.sub(i, j):lower()\n      i = i + 1\n      j = j - 1\n \
    \   else\n      i = i + 1\n    end\n  end\n  return result\nend", "  local result\
    \ = string\n  local i, j = 1, #string\n  while i < j do\n    local char = string.sub(i,\
    \ j)\n    if char == string.upper(char) then\n      result = string.sub(i, j -\
    \ 1) .. string.lower(char)\n      i = i + 1\n    elseif char == string.lower(char)\
    \ then\n      result = string.sub(i, j - 1) .. string.upper(char)\n      i = i\
    \ + 1\n    else\n      i = i + 1\n    end\n    j = j - 1\n  end\n  return result\n\
    end", "  local result = string\n  local i, j = 1, #string\n  while i <= j do\n\
    \    if string.sub(i, 1, 1) == string.sub(i, 1, 1) then\n      result = string.sub(i,\
    \ 1, 1):upper() .. string.sub(i, 2):lower()\n    else\n      result = string.sub(i,\
    \ 1, 1):lower() .. string.sub(i, 2):upper()\n    end\n    i = i + 1\n    j = j\
    \ - 1\n  end\n  return result\nend", "  local result = string\n  local length\
    \ = #string\n  for i = 1, length do\n    local char = string.sub(i, i)\n    local\
    \ upper = string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char, string.byte(char, string.byte(char, string.byte(char,\
    \ string.byte(char, string.byte(char", "  local result = string\n  result:gsub('%l',\
    \ function(c)\n    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return result\n\
    end", "  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local result = {}\n  for _, c in ipairs(string)\
    \ do\n    local upper = string.match(c, \"^%l+$\")\n    local lower = string.match(c,\
    \ \"^%l\")\n    if upper and lower then\n      result[#result + 1] = string.sub(upper,\
    \ 1, #upper-1) + string.sub(lower, 1, #lower-1)\n    elseif upper then\n     \
    \ result[#result + 1] = string.sub(upper, 1, #upper-1)\n    elseif lower then\n\
    \      result[#result + 1] = string.sub(lower, 1, #lower-1)\n    else\n      result[#result\
    \ + 1] = c\n    end\n  end\n  return table.concat(result)\nend", "  local result\
    \ = {}\n  for i = 1, #string do\n    local char = string.sub(i, i)\n    local\
    \ upper = char:upper()\n    local lower = char:lower()\n    result[#result + 1]\
    \ = upper .. lower\n  end\n  return table.concat(result, \"\")\nend", "  local\
    \ result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local result = string\n  result:gsub('%l',\
    \ function(c)\n    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return result\n\
    end", "  local result = string\n  local i, j = 1, #string\n  while i <= j do\n\
    \    local char = string.sub(i, j)\n    if char == string.upper(char) then\n \
    \     result = string.sub(i, j) .. string.lower(char)\n      i = i + 1\n    elseif\
    \ char == string.lower(char) then\n      result = string.sub(i, j) .. string.upper(char)\n\
    \      i = i + 1\n    else\n      result = result .. char\n      i = i + 1\n \
    \   end\n    j = j + 1\n  end\n  return result\nend", "  local result = string\n\
    \  local i, j = 1, #string\n  while i < j do\n    if string.sub(i, 1, 1) ~= '^'\
    \ then\n      result = string.sub(result, 1, i) + string.sub(result, i + 1, j)\
    \ + string.sub(result, 1, j - 1)\n      i = i + 1\n      j = j - 1\n    else\n\
    \      i = i + 1\n      j = j - 1\n    end\n  end\n  return result\nend", "  local\
    \ result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local result = string\n  result:gsub('%l',\
    \ function(c)\n    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return result\n\
    end", "  local result = string\n  local i, j = 1, #string\n  while i <= j do\n\
    \    if string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, 2) .. string.sub(i, 2, 2)\n\
    \    end\n    i = i + 1\n    j = j + 1\n  end\n  return result\nend", "  local\
    \ result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local result = string\n  result:gsub('%l',\
    \ function(c)\n    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return result\n\
    end", "  local result = {}\n  for _, c in ipairs(string) do\n    result[#result\
    \ + 1] = c:upper()\n  end\n  return table.concat(result)\nend", "  local result\
    \ = string\n  local i, j = 1, #string\n  while i < j do\n    local c = string.sub(i,\
    \ j)\n    if c == \"a\" then\n      result = string.sub(i, j):upper()\n      i\
    \ = i + 1\n    elseif c == \"A\" then\n      result = string.sub(i, j):lower()\n\
    \      i = i + 1\n    else\n      result = result .. c\n      i = i + 1\n    end\n\
    \    j = j + 1\n  end\n  return result\nend", "    local result = string\n   \
    \ for i = 1, #string do\n        if string.sub(i, 1, 1) == 'a' then\n        \
    \    string.sub(i, 1, 2) = string.sub(i, 2, 1)\n        end\n        if string.sub(i,\
    \ #string, 1) == 'A' then\n            string.sub(i, #string, 2) = string.sub(i,\
    \ #string, 2)\n        end\n    end\n    return result\nend", "  local result\
    \ = string\n  local i, j = 1, #string\n  while i < j do\n    if string.sub(i,\
    \ 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j, 1, 1) .. string.sub(i,\
    \ 1, 1) .. string.sub(j, 2, 2) .. string.sub(i, 2, 2)\n      i = i + 1\n     \
    \ j = j - 1\n    else\n      i = i + 1\n    end\n  end\n  return result\nend",
  "  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local result = string\n  -- Lowercase\
    \ to uppercase.\n  for i = 1, #string do\n    local c = string.sub(i, i, i)\n\
    \    if c ~= nil then\n      c = string.upper(c)\n      result = result .. c\n\
    \    end\n  end\n  -- Uppercase to lowercase.\n  for i = 1, #string do\n    local\
    \ c = string.sub(i, i, i)\n    if c ~= nil then\n      c = string.lower(c)\n \
    \     result = result .. c\n    end\n  end\n  return result\nend", "  local result\
    \ = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local result = string\n  local i, j\
    \ = 1, #string\n  while i <= j do\n    local c = string.sub(i, j, i)\n    i =\
    \ i + 1\n    if c == \"a\" then\n      c = string.sub(i, j, i)\n      i = i +\
    \ 1\n      if c == \"A\" then\n        c = string.sub(i, j, i)\n        i = i\
    \ + 1\n      end\n    end\n    result = result .. c\n    j = i\n  end\n  return\
    \ result\nend", "  local result = string\n  result:gsub('%l', function(c)\n  \
    \  return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U', function(c)\n\
    \    return string.char(tonumber(c) - 32)\n  end)\n  return result\nend", "  local\
    \ result = string\n  local i, j = 1, #string\n  while i < j do\n    local char\
    \ = string.sub(i, j)\n    i = i + 1\n    if char == string.lower(char) then\n\
    \      result = string.sub(i, j - 1) .. string.upper(string.sub(i, j))\n     \
    \ i = i + 1\n    elseif char == string.upper(char) then\n      result = string.sub(i,\
    \ j - 1) .. string.lower(string.sub(i, j))\n      i = i + 1\n    end\n  end\n\
    \  return result\nend", "  local result = string\n  local i, j = 1, #string\n\
    \  while i <= j do\n    local char = string.sub(i, j)\n    if char >= 'a' and\
    \ char <= 'z' then\n      result = string.sub(i, j):lower() + string.sub(i, j):upper()\n\
    \      i = i + 1\n    elseif char >= 'A' and char <= 'Z' then\n      result =\
    \ string.sub(i, j):upper() + string.sub(i, j):lower()\n      i = i + 1\n    else\n\
    \      result = result .. char\n    end\n    j = j + 1\n  end\n  return result\n\
    end", "  local result = string\n  -- Lowercase letters.\n  for i = 1, #string\
    \ do\n    local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n\
    \      result = string.sub(i, i) + string.sub(i, i + 1)\n    end\n  end\n  --\
    \ Uppercase letters.\n  for i = 1, #result do\n    local char = string.sub(i,\
    \ i)\n    if char >= 'A' and char <= 'Z' then\n      result = string.sub(i, i)\
    \ + string.sub(i, i + 1)\n    end\n  end\n  return result\nend", "  local result\
    \ = string\n  -- Lowercase letters.\n  for i = 1, #string do\n    local c = string.sub(i,\
    \ i)\n    if string.byte(c) >= 65 and string.byte(c) <= 90 then\n      c = string.byte(c)\
    \ + 32\n      string.sub(i, i) = c\n    end\n  end\n  -- Uppercase letters.\n\
    \  for i = #string, 1, -1 do\n    local c = string.sub(i, i)\n    if string.byte(c)\
    \ >= 97 and string.byte(c) <= 122 then\n      c = string.byte(c) - 32\n      string.sub(i,\
    \ i) = c\n    end\n  end\n  return result\nend", "  local result = string\n  result:gsub('%l',\
    \ function(c)\n    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return result\n\
    end", "  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local result = string\n  local i, j\
    \ = 1, #string\n  while i <= j do\n    local char = string.sub(i, j)\n    local\
    \ upper = char >= 'a' and char < 'z'\n    local lower = char >= 'A' and char <\
    \ 'Z'\n    if upper and lower then\n      result = string.sub(i, j-1) .. string.sub(i,\
    \ j) .. string.sub(i, j+1)\n      i = i + 1\n      j = j - 1\n    elseif upper\
    \ then\n      result = string.sub(i, j-1) .. string.sub(i, j+1)\n      i = i +\
    \ 1\n      j = j - 1\n    elseif lower then\n      result = string.sub(i, j-1)\
    \ .. string.sub(i, j) .. string.sub(i, j+1)\n      i = i + 1\n      j = j - 1\n\
    \    else\n      result = string.sub(i, j)\n      i = i + 1\n      j = j + 1\n\
    \    end\n  end\n  return result\nend", "  local result = string\n  local i, j\
    \ = 1, #string\n  while i <= j do\n    local c = string.sub(i, j, i)\n    i =\
    \ i + 1\n    if c == \"a\" then\n      c = string.sub(i, j, i)\n      i = i +\
    \ 1\n      if c == \"A\" then\n        c = string.sub(i, j, i)\n        i = i\
    \ + 1\n      end\n    end\n    result = result .. c\n    j = i\n  end\n  return\
    \ result\nend", "  local result = string\n  local i, j = 1, #string\n  while i\
    \ < j do\n    local char = string.sub(i, j)\n    i = i + 1\n    if char == string.upper(char)\
    \ then\n      result = string.sub(i, j) + string.lower(char)\n      i = i + 1\n\
    \    elseif char == string.lower(char) then\n      result = string.sub(i, j) +\
    \ string.upper(char)\n      i = i + 1\n    end\n    j = j + 1\n  end\n  return\
    \ result\nend", "  local result = string\n  local i, j = 1, #string\n  while i\
    \ < j do\n    local char = string.sub(i, j)\n    local upper = char >= 'a' and\
    \ char < 'z'\n    local lower = upper and char >= 'A' and char < 'Z'\n    if not\
    \ upper and not lower then\n      result = result .. string.sub(j, j)\n      j\
    \ = j + 1\n    else\n      result = result .. char\n      i = i + 1\n    end\n\
    \  end\n  return result\nend", "    local result = string\n    for i = 1, #string\
    \ do\n        local char = string.sub(i, i)\n        if char >= 'a' and char <=\
    \ 'z' then\n            char = string.sub(i, i - 1)\n        end\n        if char\
    \ >= 'A' and char <= 'Z' then\n            char = string.sub(i, i - 1)\n     \
    \   end\n        result = result .. char\n    end\n    return result\nend", " \
    \ local result = string\n  local length = #string\n  for i = 1, length do\n  \
    \  local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n  \
    \    result = string.sub(i, i - 1) .. string.sub(string.sub(i, i + 1), 1, string.len(string.sub(i,\
    \ i + 1)) - 1) .. string.sub(i, i + 1)\n    end\n  end\n  return result\nend",
  "  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local result = {}\n  for _, c in ipairs(string)\
    \ do\n    local lower = string.lower(c)\n    local upper = string.upper(c)\n \
    \   result[#result + 1] = lower .. upper\n  end\n  return table.concat(result)\n\
    end", "  local result = string\n  -- Lowercase letters.\n  for i = 1, #string\
    \ do\n    local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n\
    \      result = string.sub(i, i) + string.sub(i, i + 1)\n    end\n  end\n  --\
    \ Uppercase letters.\n  for i = #string, 1, -1 do\n    local char = string.sub(i,\
    \ i)\n    if char >= 'A' and char <= 'Z' then\n      result = string.sub(i, i\
    \ - 1) + string.sub(i, i + 1)\n    end\n  end\n  return result\nend", "  local\
    \ result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n    local\
    \ c = string.sub(i, i, i)\n    if c ~= nil then\n      c = string.char(tonumber(c))\n\
    \      result = string.sub(i, 1, i-1) .. c .. string.sub(i, i+1)\n    end\n  end\n\
    \  -- Uppercase letters.\n  for i = 1, #string do\n    local c = string.sub(i,\
    \ i, i)\n    if c ~= nil then\n      c = string.char(tonumber(c))\n      result\
    \ = string.sub(i, 1, i) .. c .. string.sub(i, i+1)\n    end\n  end\n  return result\n\
    end", "  local new_string = string\n  new_string = new_string:gsub(\"%l\", function(c)\n\
    \    return string.char(tonumber(c) + 32)\n  end)\n  new_string = new_string:gsub(\"\
    %U\", function(c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return\
    \ new_string\nend", "  local result = string\n  local i, j = 1, #string\n  while\
    \ i < j do\n    local char = string.sub(i, j)\n    if char == string.lower then\n\
    \      result = string.sub(string.upper, i, string.upper)\n      i = string.upper\n\
    \    elseif char == string.upper then\n      result = string.sub(string.lower,\
    \ i, string.lower)\n      i = string.lower\n    end\n    i = i + 1\n    j = j\
    \ - 1\n  end\n  return result\nend", "  local result = string\n  result:gsub(\"\
    (.)\", function(c) return string.upper(c) end)\n  result:gsub(\"(.)\", function(c)\
    \ return string.lower(c) end)\n  return result\nend", "    local result = string\n\
    \    for i = 1, #string do\n        local char = string.sub(i, i)\n        if\
    \ char >= 'a' and char <= 'z' then\n            char = string.sub(string.sub(i,\
    \ 1, i), -1)\n        end\n        if char >= 'A' and char <= 'Z' then\n     \
    \       char = string.sub(string.sub(i, 1, i), -1)\n        end\n        result\
    \ = result .. char\n    end\n    return result\nend", "  local result = string\n\
    \  result:gsub('%l', function(c)\n    return string.char(tonumber(c) + 32)\n \
    \ end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c) -\
    \ 32)\n  end)\n  return result\nend", "  local result = string\n  local i, j =\
    \ 1, #string\n  while i < j do\n    local char = string.sub(i, j)\n    i = i +\
    \ 1\n    if char == string.lower then\n      result = string.sub(i, j) + string.upper(string.sub(i,\
    \ j))\n      i = i + 1\n    elseif char == string.upper then\n      result = string.sub(i,\
    \ j) + string.lower(string.sub(i, j))\n      i = i + 1\n    end\n    j = j + 1\n\
    \  end\n  return result\nend", "  local result = string\n  result:gsub('%l', function(c)\n\
    \    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U', function(c)\n\
    \    return string.char(tonumber(c) - 32)\n  end)\n  return result\nend", "  local\
    \ result = string\n  local i, j = 1, #string\n  while i < j do\n    local c =\
    \ string.sub(i, j)\n    if c:lower() ~= c then\n      result = string.sub(i, j):upper()\
    \ .. string.sub(i, j):lower()\n      i = i + 1\n      j = j - 1\n    else\n  \
    \    i = i + 1\n    end\n  end\n  return result\nend", "  local result = string\n\
    \  result:gsub('%l', function(c)\n    return string.char(tonumber(c) + 32)\n \
    \ end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c) -\
    \ 32)\n  end)\n  return result\nend", "  local result = {}\n  for _, c in ipairs(string)\
    \ do\n    result[#result + 1] = c:upper()\n  end\n  return table.concat(result)\n\
    end", "  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "    local result = string\n    for i\
    \ = 1, #string do\n        local c = string.sub(i, i)\n        if c:lower() ~=\
    \ c then\n            local upper = string.sub(i, 1, #i-1)\n            local\
    \ lower = string.sub(i, #i)\n            result = result .. upper:lower() .. lower\n\
    \        end\n    end\n    return result\nend", "    local result = string\n \
    \   for i, c in ipairs(string) do\n        if c:byte() ~= c:byte() then\n    \
    \        local lower = c:lower()\n            local upper = c:upper()\n      \
    \      result = result:sub(1, i - 1):sub(i - 1, i):lower(upper)\n        end\n\
    \    end\n    return result\nend", "  local result = string\n  local i, j = 1,\
    \ #string\n  while i <= j do\n    local c = string.sub(i, j)\n    if c ~= nil\
    \ then\n      if c:lower() ~= c then\n        result = string.sub(i, j - 1) ..\
    \ string.sub(string.lower(c), string.upper(c))\n      end\n    end\n    i = i\
    \ + 1\n    j = j - 1\n  end\n  return result\nend", "  local result = string\n\
    \  result:gsub(\"(.)\", function(c) return c:lower() .. c:upper() end)\n  result:gsub(\"\
    (.)\", function(c) return c:upper() .. c:lower() end)\n  return result\nend",
  "  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local result = string\n  local i, j\
    \ = 1, #string\n  while i < j do\n    local c = string.sub(i, j)\n    if c ==\
    \ 'a' then\n      c = string.sub(i, j - 1, 'A')\n      j = j - 1\n    end\n  \
    \  result = result .. c\n    i = i + 1\n  end\n  return result\nend", "  local\
    \ result = string\n  local i, j = 1, #string\n  while i <= j do\n    local c =\
    \ string.sub(i, j, i)\n    if c == 'a' then\n      c = 'A'\n    elseif c == 'A'\
    \ then\n      c = 'a'\n    end\n    result = string.sub(i, j, i..c..string.sub(i,\
    \ j))\n    i = j + 1\n    j = i\n  end\n  return result\nend", "  local result\
    \ = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local result = string\n  local i, j\
    \ = 1, #string\n  while i < j do\n    local c = string.sub(i, j)\n    if c ==\
    \ \"a\" then\n      c = string.sub(j, j - 1)\n    end\n    if c == \"A\" then\n\
    \      c = string.sub(j, j - 1)\n    end\n    if c ~= nil then\n      result =\
    \ result .. c\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return result\n\
    end", "  local result = string\n  -- Iterate through each character in the string.\n\
    \  for i = 1, #string do\n    -- If the character is uppercase, flip it to lowercase.\n\
    \    if string.sub(i, 1, 1) == \"A\" then\n      result = string.sub(i, 1, 1)\
    \ .. string.sub(i, 2, #string) .. string.sub(i, #string + 1)\n      -- If the\
    \ character is lowercase, flip it to uppercase.\n    elseif string.sub(i, 1, 1)\
    \ == \"a\" then\n      result = string.sub(i, 1, 1) .. string.sub(i, 2, #string)\
    \ .. string.sub(i, #string + 1)\n    end\n  end\n  return result\nend", "  local\
    \ result = {}\n  for _, c in ipairs(string) do\n    result[#result + 1] = c:upper()\n\
    \  end\n  return table.concat(result)\nend", "  local result = string\n  local\
    \ i, j = 1, #string\n  while i < j do\n    local char = string.sub(i, j)\n   \
    \ local upper = char >= 'a' and char < 'z'\n    local lower = upper and char >=\
    \ 'A' and char < 'Z'\n    if upper and lower then\n      result = string.sub(j,\
    \ j) .. string.sub(i, i)\n      j = i + 1\n    else\n      i = j\n    end\n  end\n\
    \  return result\nend", "  local result = string\n  local i, j = 1, #string\n\
    \  while i < j do\n    local char = string.sub(i, j)\n    local upper = char >=\
    \ 'a' and char < 'z'\n    local lower = upper and char >= 'A' and char < 'Z'\n\
    \    if upper and lower then\n      result = string.sub(i, j - 1) .. string.sub(j,\
    \ i)\n      i = j - 1\n    elseif upper then\n      result = string.sub(i, j -\
    \ 1) .. string.sub(j, i)\n      i = j - 1\n      j = i\n    elseif lower then\n\
    \      result = string.sub(i, j - 1) .. string.sub(j, i)\n      i = j - 1\n  \
    \    j = i\n    end\n  end\n  return result\nend", "  local result = string\n\
    \  -- Lowercase letters.\n  for i = 1, #string do\n    local c = string.sub(i,\
    \ i)\n    if string.lower(c) == c then\n      result = string.sub(i, 1, string.upper(c))\n\
    \    end\n  end\n  -- Uppercase letters.\n  for i = 1, #string do\n    local c\
    \ = string.sub(i, i)\n    if string.upper(c) == c then\n      result = string.sub(i,\
    \ 1, string.lower(c))\n    end\n  end\n  return result\nend", "  local result\
    \ = string\n  local i, j = 1, #string\n  while i < j do\n    local char = string.sub(i,\
    \ j)\n    if char == string.lower then\n      result = string.sub(string.upper,\
    \ i, string.upper)\n      result = string.sub(string.lower, i, string.lower)\n\
    \    else\n      result = string.sub(string.upper, i, string.lower)\n      result\
    \ = string.sub(string.lower, i, string.upper)\n    end\n    i = i + 1\n    j =\
    \ j - 1\n  end\n  return result\nend", "  local result = string\n  local i, j\
    \ = 1, #string\n  while i < j do\n    local char = string.sub(i, j)\n    if char\
    \ == string.lower then\n      result = string.sub(i, j):upper() .. string.sub(i,\
    \ j + 1):lower()\n      i = i + 1\n      j = j + 1\n    elseif char == string.upper\
    \ then\n      result = string.sub(i, j):lower() .. string.sub(i, j + 1):upper()\n\
    \      i = i + 1\n      j = j + 1\n    else\n      result = result .. char\n \
    \     i = i + 1\n      j = j + 1\n    end\n  end\n  return result\nend", "  local\
    \ result = {}\n  for _, c in ipairs(string) do\n    result[#result + 1] = c:upper()\n\
    \  end\n  return table.concat(result)\nend", "  local result = string\n  -- Lowercase\
    \ to uppercase and vice versa\n  result = string.gsub(result, \"[%l%L]\", function(c)\n\
    \    if string.upper(c) then\n      return string.upper(c)\n    else\n      return\
    \ string.lower(c)\n    end\n  end)\n  return result\nend", "  local result = string\n\
    \  -- Lowercase letters.\n  for i = 1, #string do\n    local c = string.sub(string,\
    \ i, i)\n    if c ~= nil then\n      c = string.upper(c)\n      string.sub = string.sub\n\
    \        -- Replace the character with its uppercase equivalent.\n        -- The\
    \ replacement is done in-place, so the original string is unchanged.\n       \
    \ -- The replacement is done in-place, so the original string is unchanged.\n\
    \        -- The replacement is done in-place, so the original string is unchanged.\n\
    \        -- The replacement is done in-place, so the original string is unchanged.\n\
    \        -- The replacement is done in-place, so the original string is unchanged.\n\
    \        -- The replacement is done in-place, so the original string is unchanged.\n\
    \        -- The replacement is done in-place, so the original string is unchanged.\n\
    \        -- The replacement is done in-place, so the original string is unchanged.\n\
    \        -- The replacement is done in-place, so the original string is unchanged.\n\
    \        -- The replacement is done in-place, so the original string is unchanged.\n\
    \        -- The replacement is done in-place, so the original string is unchanged.\n\
    \        -- The replacement is done in-place, so the original string is unchanged.\n\
    \        -- The replacement is done in-place, so the original string is unchanged.\n\
    \        -- The replacement is done in-place, so the original string is unchanged.\n\
    \        -- The replacement is done in-place, so the original string is unchanged.\n\
    \        -- The replacement is done in-place, so the original string is unchanged.\n\
    \        -- The replacement is done in-place, so the original string is unchanged.\n\
    \        -- The replacement is done in-place, so the original string is unchanged.\n\
    \        -- The replacement is done in-place, so the original string is unchanged.\n\
    \        -- The replacement is done in-place, so the original string is unchanged.\n\
    \        -- The replacement is done in-place, so the original string is unchanged.\n\
    \        -- The replacement is done in-place, so the original string is unchanged.\n\
    \        -- The replacement is done in-place, so the original string is unchanged.\n\
    \        -- The replacement is done in-place, so the original string is unchanged.\n\
    \        -- The replacement is done in-place, so the original string is unchanged.\n\
    \        -- The replacement is done in-place, so the original string is unchanged.\n\
    \        -- The replacement is done in-place, so the original string is unchanged.\n\
    \        -- The replacement is done in-place, so the original string is unchanged.\n\
    \        -- The replacement is done in-place, so the original string is unchanged.\n\
    \        -- The replacement is done in-place, so the original string is unchanged.\n\
    \        ", "  local result = string\n  local i, j = 1, #string\n  while i < j\
    \ do\n    if string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, 2) .. string.sub(i, 2, 2)\n\
    \      i = i + 1\n      j = j - 1\n    else\n      i = i + 1\n    end\n  end\n\
    \  return result\nend", "  local result = string\n  local i, j = 1, #string\n\
    \  while i < j do\n    local char = string.sub(i, j)\n    i = i + 1\n    if char\
    \ == string.lower then\n      result = string.sub(i, j) + string.upper(string.sub(i,\
    \ j))\n      i = i + 1\n    end\n    if char == string.upper then\n      result\
    \ = string.sub(i, j) + string.lower(string.sub(i, j))\n      i = i + 1\n    end\n\
    \  end\n  return result\nend", "  local result = string\n  -- Lowercase letters.\n\
    \  for i = 1, #string do\n    local char = string.sub(i, i)\n    local upper =\
    \ char >= 'a' and char < 'z'\n    local lower = char >= 'A' and char < 'Z'\n \
    \   if upper and lower then\n      result = string.sub(i, i-1):upper..string.sub(i,\
    \ i)\n    end\n  end\n  return result\nend", "    local result = string\n    for\
    \ i = 1, #string do\n        local c = string.sub(i, i)\n        if c == 'a' then\n\
    \            c = 'A'\n        elseif c == 'A' then\n            c = 'a'\n    \
    \    end\n        result = string.sub(i, i) + c\n    end\n    return result\n\
    end", "  local result = string\n  local upper = string.upper\n  local lower =\
    \ string.lower\n  for i = 1, #string do\n    local char = string[i]\n    if char\
    \ == upper then\n      result = result .. lower(char)\n    elseif char == lower\
    \ then\n      result = result .. upper(char)\n    end\n  end\n  return result\n\
    end", "  local result = string\n  local i, j = 1, #string\n  while i <= j do\n\
    \    local c = string.sub(i, j)\n    i = i + 1\n    if c == \"a\" then\n     \
    \ result = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j\
    \ - 1\n    end\n    if c == \"A\" then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i)\n      i = i + 1\n      j = j - 1\n    end\n  end\n  return result\nend",
  "  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local result = {}\n  for _, char in\
    \ ipairs(string) do\n    local upper = char:upper()\n    local lower = char:lower()\n\
    \    result[#result + 1] = upper .. lower\n  end\n  return table.concat(result)\n\
    end", "  local result = string\n  local i, j = 1, #string\n  while i <= j do\n\
    \    local c = string.sub(i, j, i)\n    i = i + 1\n    if c == \"a\" then\n  \
    \    c = string.sub(i, j, i)\n      i = i + 1\n      if c == \"A\" then\n    \
    \    c = string.sub(i, j, i)\n        i = i + 1\n      end\n    end\n    if c\
    \ == \"A\" then\n      c = string.sub(i, j, i)\n      i = i + 1\n      if c ==\
    \ \"a\" then\n        c = string.sub(i, j, i)\n        i = i + 1\n      end\n\
    \    end\n    if c == \"a\" then\n      c = string.sub(i, j, i)\n      i = i +\
    \ 1\n      if c == \"A\" then\n        c = string.sub(i, j, i)\n        i = i\
    \ + 1\n      end\n    end\n    if c == \"A\" then\n      c = string.sub(i, j,\
    \ i)\n      i = i + 1\n      if c == \"a\" then\n        c = string.sub(i, j,\
    \ i)\n        i = i + 1\n      end\n    end\n    if c == \"a\" then\n      c =\
    \ string.sub(i, j, i)\n      i = i + 1\n      if c == \"A\" then\n        c =\
    \ string.sub(i, j, i)\n        i = i + 1\n      end\n    end\n    if c == \"A\"\
    \ then\n      c = string.sub(i, j, i)\n      i = i + 1\n      if c == \"a\" then\n\
    \        c = string.sub(i, j, i)\n        i = i + 1\n      end\n    end\n    if\
    \ c == \"a\" then\n      c = string.sub(i, j, i)\n      i = i + 1\n      if c\
    \ == \"A\" then\n        c = string.sub(i, j, i)\n        i = i + 1\n      end\n\
    \    end\n    if c == \"A\" then\n      c = string.sub(i, j, i)\n      i = i +\
    \ 1\n      if c == \"a\" then\n        c = string.sub(i, j, i)\n        i = i\
    \ + 1\n      end\n    end\n    if c == \"a\" then\n      c = string.sub(i, j,\
    \ i)\n      i = i + 1\n      if c == \"A\" then\n        c = string.sub(i, j,\
    \ i)\n        i = i + 1\n      end\n    end\n    if c == \"A\" then\n      c =\
    \ string.sub(i, j, i)\n      i = i + 1\n      if c == \"a\" then\n        c =\
    \ string.sub(i, j, i)\n        i = i + 1\n      end\n    end\n    if c == \"a\"\
    \ then\n      c = string.sub(i, j, i)\n      i = i + 1\n      if c == \"A\" then\n\
    \        c = string.sub(i, j, i)\n        i = i + 1\n      end\n    end\n    if\
    \ c == \"A\" then\n      c = string.sub(i, j, i)\n      i = i + 1\n      if c\
    \ == \"a\" then\n        c = string.sub", "  local result = {}\n  for _, c in\
    \ ipairs(string) do\n    result[#result + 1] = c:upper()\n  end\n  return table.concat(result,\
    \ \"\")\nend", "  local result = string\n  local i, j = 1, #string\n  while i\
    \ <= j do\n    local char = string.sub(i, j)\n    if char == string.lower then\n\
    \      result = string.sub(string.upper, string.len(string.upper) - 1) + result\n\
    \      i = i + 1\n    elseif char == string.upper then\n      result = string.sub(string.lower,\
    \ string.len(string.lower) - 1) + result\n      i = i + 1\n    else\n      result\
    \ = char + result\n      i = i + 1\n    end\n    j = j + 1\n  end\n  return result\n\
    end", "  local result = {}\n  for _, c in ipairs(string) do\n    result[#result\
    \ + 1] = c:upper()\n  end\n  return table.concat(result)\nend", "  local result\
    \ = string\n  local i, j = 1, #string\n  while i < j do\n    if string.sub(i,\
    \ 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j, 1, 1) .. string.sub(i,\
    \ 1, 1) .. string.sub(j, 2, #string) .. string.sub(i, 2, #string)\n      i = i\
    \ + 1\n      j = j - 1\n    else\n      i = i + 1\n    end\n  end\n  return result\n\
    end", "  local result = string\n  local i, j = 1, #string\n  while i < j do\n\
    \    local char = string.sub(i, j)\n    if char == string.lower(char) then\n \
    \     result = string.sub(string.upper(char), 2, -1) + result\n    elseif char\
    \ == string.upper(char) then\n      result = string.sub(string.lower(char), 1,\
    \ -1) + result\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return result\n\
    end", "  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local result = string\n  local i, j\
    \ = 1, #string\n  while i < j do\n    local c = string.sub(i, j)\n    i = i +\
    \ 1\n    if c == \"a\" then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i)\n      i = i + 1\n      j = j - 1\n    end\n    if c == \"A\" then\n    \
    \  result = string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j\
    \ - 1\n    end\n  end\n  return result\nend", "  local result = string\n  result:gsub('%l',\
    \ function(c)\n    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return result\n\
    end", "  local result = string\n  local length = string.len()\n  for i = 1, length\
    \ do\n    local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n\
    \      result = string.sub(i, i - 1) .. string.sub(string.sub(i, i + 1), 1, string.len())\
    \ .. string.sub(i, i + 1)\n    end\n  end\n  return result\nend", "  local result\
    \ = string\n  local i, j = 1, #string\n  while i < j do\n    local c = string.sub(i,\
    \ j)\n    if c:lower() ~= c then\n      result = string.sub(i, j):upper() .. string.sub(c,\
    \ 1):lower()\n      i = i + 1\n      j = j - 1\n    else\n      i = i + 1\n  \
    \    j = j - 1\n    end\n  end\n  return result\nend", "  local result = string\n\
    \  local i, j = 1, #string\n  while i < j do\n    local c = string.sub(i, j)\n\
    \    if c == \"a\" then\n      c = string.sub(i, j - 1, \"A\")\n      j = j -\
    \ 1\n    end\n    result = result .. c\n    i = i + 1\n  end\n  return result\n\
    end", "  local result = string\n  local i, j = 1, #string\n  while i < j do\n\
    \    local c = string.sub(i, j)\n    if c ~= nil then\n      if c ~= 'a' and c\
    \ ~= 'A' then\n        c = string.upper(c)\n      end\n      result = result ..\
    \ c\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return result\nend", "  local\
    \ result = string\n  result:gsub(\"%l\", function(c) return string.char(tonumber(c))\
    \ end)\n  result:gsub(\"%U\", function(c) return string.char(tonumber(c)) end)\n\
    \  return result\nend", "  local result = string\n  local i, j = 1, #string\n\
    \  while i < j do\n    local c = string.sub(i, j)\n    i = i + 1\n    if c ==\
    \ \"a\" then\n      c = string.sub(i, j - 1, \"A\")\n      i = i + 1\n    end\n\
    \    if c == \"A\" then\n      c = string.sub(i, j + 1, \"a\")\n      i = i +\
    \ 1\n    end\n    if c == \"0\" then\n      c = string.sub(i, j, \"9\")\n    \
    \  i = i + 1\n    end\n    if c == \"9\" then\n      c = string.sub(i, j, \"0\"\
    )\n      i = i + 1\n    end\n    if c ~= \"\" then\n      result = result .. c\n\
    \    end\n    j = j + 1\n  end\n  return result\nend", "  local result = string\n\
    \  -- Lowercase letters.\n  for i = 1, #string do\n    local char = string.sub(i,\
    \ i)\n    local upper = char >= 'a' and char < 'z'\n    local lower = char >=\
    \ 'A' and char < 'Z'\n    if upper and lower then\n      result = string.sub(i,\
    \ i - 1) .. string.sub(i, i + 1)\n    end\n  end\n  return result\nend", "  local\
    \ result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local result = string\n  local i, j\
    \ = 1, #string\n  while i < j do\n    local c = string.sub(i, j)\n    if c:lower()\
    \ ~= c then\n      result = string.sub(i, j):upper()..string.sub(i, j):lower()\n\
    \      i = i + 1\n      j = j - 1\n    else\n      i = i + 1\n    end\n  end\n\
    \  return result\nend", "  local result = {}\n  for i = 1, #string do\n    local\
    \ char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n      char\
    \ = string.sub(string.sub(i, 1, i), -1)\n    end\n    result[i] = char\n  end\n\
    \  return table.concat(result)\nend", "  local result = string\n  local i, j =\
    \ 1, #string\n  while i <= j do\n    local c = string.sub(i, j, i)\n    if c:lower()\
    \ == c then\n      result = string.sub(i, j, i)\n      i = i + 1\n    elseif c:upper()\
    \ == c then\n      result = string.sub(i, j, i):upper()\n      i = i + 1\n   \
    \ end\n    j = j + 1\n  end\n  return result\nend", "  local result = string\n\
    \  local upper = string.chars:gsub(\"%l\", string.upper)\n  local lower = string.chars:gsub(\"\
    %l\", string.lower)\n  result = string.chars:gsub(\"%l\", upper):gsub(\"%l\",\
    \ lower)\n  return result\nend", "  local result = string\n  local i, j = 1, #string\n\
    \  while i < j do\n    local char = string.sub(i, j)\n    if char >= 'a' and char\
    \ <= 'z' then\n      result = string.sub(i, j - 1) .. string.sub(j, i) .. string.sub(i,\
    \ j + 1)\n      i = i + 1\n      j = j - 1\n    elseif char >= 'A' and char <=\
    \ 'Z' then\n      result = string.sub(i, j - 1) .. string.sub(j, i) .. string.sub(i,\
    \ j + 1)\n      i = i + 1\n      j = j - 1\n    else\n      result = result ..\
    \ char\n    end\n  end\n  return result\nend", "  local result = string\n  result:gsub('%l',\
    \ function(c)\n    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return result\n\
    end", "  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local result = string\n  result:gsub('%l',\
    \ function(c)\n    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return result\n\
    end", "  local result = string\n  -- Lowercase letters.\n  for i = 1, #string\
    \ do\n    local c = string.sub(i, i, i)\n    if string.lower(c) ~= c then\n  \
    \    result = string.sub(string.upper(c), i, i)\n    end\n  end\n  -- Uppercase\
    \ letters.\n  for i = 1, #string do\n    local c = string.sub(i, i, i)\n    if\
    \ string.upper(c) ~= c then\n      result = string.sub(string.lower(c), i, i)\n\
    \    end\n  end\n  return result\nend", "  local result = string\n  result:gsub('%l',\
    \ function(c)\n    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return result\n\
    end", "  local result = string\n  local i, j = 1, #string\n  while i < j do\n\
    \    local char = string.sub(i, j)\n    if char >= 'a' and char <= 'z' then\n\
    \      result = string.sub(i, j - 1) .. string.sub(string.sub(string, i, j), 1,\
    \ 1)\n      i = i + 1\n    elseif char >= 'A' and char <= 'Z' then\n      result\
    \ = string.sub(i, j - 1) .. string.sub(string.sub(string, i, j), 1, 1)\n     \
    \ i = i + 1\n    else\n      result = result .. char\n    end\n    j = j - 1\n\
    \  end\n  return result\nend", "    local result = string\n    for i, c in ipairs(string)\
    \ do\n        if c:byte() ~= c:byte() then\n            result = result:sub(1,\
    \ i - 1)\n        end\n        result = result:sub(i + 1, i)\n    end\n    return\
    \ result\nend", "  local result = {}\n  for _, character in ipairs(string) do\n\
    \    local upper = character and character >= 'a' and character <= 'z'\n    local\
    \ lower = character and character >= 'A' and character <= 'Z'\n    if upper and\
    \ lower then\n      result[#result + 1] = character - 32\n    else\n      result[#result\
    \ + 1] = character\n    end\n  end\n  return table.concat(result, '') -- Join\
    \ all characters together and return the result.\nend", "  local result = string\n\
    \  result:gsub(\"(.)\", function(c) \n    return string.upper(string.sub(c, 1,\
    \ 1)) .. string.lower(string.sub(c, 2))\n  end)\n  return result\nend", "  local\
    \ result = string\n  local length = string.len()\n  for i = 1, length do\n   \
    \ local char = string.sub(i, i)\n    local upper = string.sub(string, i, i)\n\
    \    local lower = string.sub(string, i, i + 1)\n    if char == upper then\n \
    \     result = string.sub(string, 1, i-1) .. lower\n    elseif char == lower then\n\
    \      result = string.sub(string, 1, i) .. upper\n    end\n  end\n  return result\n\
    end", "  local result = string\n  local i, j = 1, #string\n  while i < j do\n\
    \    local char = string.sub(i, j)\n    if char == 'a' then\n      char = 'A'\n\
    \    elseif char == 'A' then\n      char = 'a'\n    end\n    result = result ..\
    \ char\n    i = i + 1\n    j = j - 1\n  end\n  return result\nend", "  local result\
    \ = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local result = string\n  result:gsub('%l',\
    \ function(c)\n    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return result\n\
    end", "  local result = string\n  local i, j = 1, #string\n  while i < j do\n\
    \    local c = string.sub(i, j)\n    if c == 'a' then\n      c = string.sub(i,\
    \ j - 1, 'A')\n    end\n    if c == 'A' then\n      c = string.sub(i, j + 1, 'a')\n\
    \    end\n    result = result .. c\n    i = i + 1\n    j = j + 1\n  end\n  return\
    \ result\nend", "  local result = string\n  local i, j = 1, #string\n  while i\
    \ <= j do\n    local c = string.sub(i, j)\n    if c:lower() == c then\n      result\
    \ = string.sub(j, j) .. string.sub(i, i)\n      j = j + 1\n    else\n      result\
    \ = result .. string.sub(i, j)\n      i = i + 1\n    end\n  end\n  return result\n\
    end", "  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local result = string\n  -- Lowercase\
    \ letters.\n  for i = 1, #string do\n    local c = string.sub(i, i, i)\n    if\
    \ c >= 'a' and c <= 'z' then\n      result = string.sub(i, 1, i) + string.sub(i,\
    \ i + 1, i) + string.sub(i, 1, i)\n    end\n  end\n  -- Uppercase letters.\n \
    \ for i = 1, #string do\n    local c = string.sub(i, i, i)\n    if c >= 'A' and\
    \ c <= 'Z' then\n      result = string.sub(i, 1, i) + string.sub(i, i + 1, i)\
    \ + string.sub(i, 1, i)\n    end\n  end\n  return result\nend", "  local result\
    \ = string\n  local i, j = 1, #string\n  while i <= j do\n    local char = string.sub(i,\
    \ j)\n    local is_upper = char >= 'a' and char <= 'z'\n    local is_lower = char\
    \ >= 'A' and char <= 'Z'\n    if is_upper then\n      result = string.sub(i, j)\
    \ .. string.sub(string.lower(result), string.upper(result))\n    elseif is_lower\
    \ then\n      result = string.sub(i, j) .. string.sub(string.upper(result), string.lower(result))\n\
    \    end\n    i = i + 1\n    j = j + 1\n  end\n  return result\nend", "    local\
    \ new_string = ''\n    for i = 1, #string do\n        local c = string.sub(i,\
    \ i)\n        if c:lower() ~= c then\n            new_string = new_string .. string.sub(c,\
    \ #c) .. string.sub(c, i)\n        else\n            new_string = new_string ..\
    \ string.sub(c, i)\n        end\n    end\n    return new_string\nend", "  local\
    \ result = string\n  result:gsub(\"([a-z])\", function (c) return c:lower() ..\
    \ c:upper() end)\n  result:gsub(\"([A-Z])\", function (c) return c:upper() ..\
    \ c:lower() end)\n  return result\nend", "    local result = string\n    for i\
    \ = 1, #string do\n        local c = string.sub(i, i)\n        if c:lower() ~=\
    \ c then\n            local upper = string.sub(i, 1, #i-1)\n            local\
    \ lower = string.sub(i, #i)\n            result = result .. string.sub(upper,\
    \ 1, #upper-1) .. string.sub(lower, 1, #lower-1)\n        end\n    end\n    return\
    \ result\nend", "  local result = string\n  local i, j = 1, #string\n  while i\
    \ < j do\n    local char = string.sub(i, j)\n    if char == string.lower then\n\
    \      result = string.sub(i, j):upper() .. string.sub(i, j + 1)\n      i = i\
    \ + 1\n      j = j + 1\n    elseif char == string.upper then\n      result = string.sub(i,\
    \ j):lower() .. string.sub(i, j + 1)\n      i = i + 1\n      j = j + 1\n    else\n\
    \      result = result .. char\n      i = i + 1\n      j = j + 1\n    end\n  end\n\
    \  return result\nend", "  local result = string\n  local i, j = 1, #string\n\
    \  while i < j do\n    local char = string.sub(i, j)\n    local upper = char >=\
    \ 'a' and char - 'a' + 'A' or char\n    local lower = upper == 'A' and char -\
    \ 'a' + 'a' or char\n    string.sub(i, j, 1, upper)\n    string.sub(i, j, 1, lower)\n\
    \    i = i + 1\n    j = j - 1\n  end\n  return result\nend", "  local result =\
    \ string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c))\
    \ .. string.char(tonumber(string.sub(c, 2)) or 'A')\n  end)\n  result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(c)) .. string.char(tonumber(string.sub(c,\
    \ 2)) or 'a')\n  end)\n  return result\nend", "  local result = string\n  local\
    \ i, j = 1, #string\n  while i <= j do\n    local c = string.sub(i, j)\n    if\
    \ c == \"a\" then\n      c = string.sub(j, j - 1)\n      j = j - 1\n    end\n\
    \    if c == \"A\" then\n      c = string.sub(j, j - 1)\n      j = j - 1\n   \
    \ end\n    if c == \"0\" then\n      c = string.sub(j, j - 1)\n      j = j - 1\n\
    \    end\n    if c == \"1\" then\n      c = string.sub(j, j - 1)\n      j = j\
    \ - 1\n    end\n    if c == \"2\" then\n      c = string.sub(j, j - 1)\n     \
    \ j = j - 1\n    end\n    if c == \"3\" then\n      c = string.sub(j, j - 1)\n\
    \      j = j - 1\n    end\n    if c == \"4\" then\n      c = string.sub(j, j -\
    \ 1)\n      j = j - 1\n    end\n    if c == \"5\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"6\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"7\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"8\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"9\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"-\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"_\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"+\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"/\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"%\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"^\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"&\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"|\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"~\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"?\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"{\" ", "    local result = string\n\
    \    for i = 1, #string do\n        local char = string.sub(i, i)\n        if\
    \ char >= 'a' and char <= 'z' then\n            char = string.sub(string.sub(i,\
    \ 1, i), -1)\n        end\n        if char >= 'A' and char <= 'Z' then\n     \
    \       char = string.sub(string.sub(i, 1, i), -1)\n        end\n        result\
    \ = result .. char\n    end\n    return result\nend", "  local result = string\n\
    \  result:gsub('%l', function(c)\n    return string.char(tonumber(c) + 32)\n \
    \ end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c) -\
    \ 32)\n  end)\n  return result\nend", "  local result = string\n  local i, j =\
    \ 1, #string\n  while i < j do\n    local c = string.sub(i, j)\n    if c:lower()\
    \ ~= c then\n      result = string.sub(i, j):upper() .. string.sub(c, 1):lower()\n\
    \      i = i + 1\n      j = j - 1\n    else\n      i = i + 1\n    end\n  end\n\
    \  return result\nend", "  local result = string\n  local i, j = 1, #string\n\
    \  while i < j do\n    local char = string.sub(i, j)\n    if char == string.lower\
    \ then\n      result = string.sub(i, j):upper() .. string.sub(i, j + 1):lower()\n\
    \      i = i + 1\n      j = j + 1\n    elseif char == string.upper then\n    \
    \  result = string.sub(i, j):lower() .. string.sub(i, j + 1):upper()\n      i\
    \ = i + 1\n      j = j + 1\n    else\n      result = result .. char\n      i =\
    \ i + 1\n      j = j + 1\n    end\n  end\n  return result\nend", "  local result\
    \ = string\n  -- Lowercase letters.\n  for i = 1, #string do\n    local c = string.sub(i,\
    \ i)\n    if string.lower(c) ~= c then\n      result = string.sub(i, 1, string.upper(c))\
    \ .. string.sub(i, i + 1)\n    end\n  end\n  return result\nend", "  local result\
    \ = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local result = string\n  local i, j\
    \ = 1, #string\n  while i <= j do\n    local char = string.sub(i, j)\n    local\
    \ upper = char >= 'a' and char < 'z'\n    local lower = char >= 'A' and char <\
    \ 'Z'\n    if upper and lower then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i)\n      i = j + 1\n    elseif upper then\n      result = string.sub(i, j)\
    \ .. string.sub(j, i)\n      i = j + 1\n      result = string.lower(result)\n\
    \    elseif lower then\n      result = string.sub(i, j) .. string.sub(j, i)\n\
    \      i = j + 1\n      result = string.upper(result)\n    end\n    j = i\n  end\n\
    \  return result\nend", "  local result = string\n  result:gsub('%l', function(c)\n\
    \    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U', function(c)\n\
    \    return string.char(tonumber(c) - 32)\n  end)\n  return result\nend", "  local\
    \ result = {}\n  for _, char in ipairs(string) do\n    local upper = char:upper()\n\
    \    local lower = char:lower()\n    result[#result + 1] = upper .. lower\n  end\n\
    \  return table.concat(result)\nend", "  local result = string\n  local i, j =\
    \ 1, #string\n  while i < j do\n    local char = string.sub(i, j)\n    if char\
    \ == string.upper(char) then\n      result = string.sub(j, j - 1) .. string.lower(char)\n\
    \      j = j - 1\n    elseif char == string.lower(char) then\n      result = string.sub(j,\
    \ j - 1) .. string.upper(char)\n      j = j - 1\n    end\n    i = i + 1\n  end\n\
    \  return result\nend", "  local result = string\n  local i, j = 1, #string\n\
    \  while i < j do\n    local char = string.sub(i, j)\n    if char == string.lower\
    \ then\n      result = string.sub(i, j):upper() .. string.sub(i, j + 1):lower()\n\
    \      i = i + 1\n      j = j + 1\n    elseif char == string.upper then\n    \
    \  result = string.sub(i, j):lower() .. string.sub(i, j + 1):upper()\n      i\
    \ = i + 1\n      j = j + 1\n    else\n      result = result .. char\n      i =\
    \ i + 1\n      j = j + 1\n    end\n  end\n  return result\nend", "  local result\
    \ = string\n  local i, j = 1, #string\n  while i < j do\n    local char = string.sub(i,\
    \ j)\n    if char == 'a' then\n      char = 'A'\n    elseif char == 'A' then\n\
    \      char = 'a'\n    end\n    result = result .. char\n    i = i + 1\n    j\
    \ = j - 1\n  end\n  return result\nend", "  local result = string\n  result:gsub('%l',\
    \ function(c)\n    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return result\n\
    end", "  local result = string\n  result:gsub(\"(.)\", function(c) return c:lower()\
    \ .. c:upper() end)\n  result:gsub(\"(.)\", function(c) return c:upper() .. c:lower()\
    \ end)\n  return result\nend", "  local result = string\n  local i, j = 1, #string\n\
    \  while i < j do\n    local c = string.sub(i, j)\n    i = i + 1\n    if c ==\
    \ \"a\" then\n      c = string.sub(i, j, \"A\")\n      i = i + 1\n    end\n  \
    \  if c == \"A\" then\n      c = string.sub(i, j, \"a\")\n      i = i + 1\n  \
    \  end\n    if c == \"0\" then\n      c = string.sub(i, j, \"0\")\n      i = i\
    \ + 1\n    end\n    if c == \"1\" then\n      c = string.sub(i, j, \"1\")\n  \
    \    i = i + 1\n    end\n    if c == \"2\" then\n      c = string.sub(i, j, \"\
    2\")\n      i = i + 1\n    end\n    if c == \"3\" then\n      c = string.sub(i,\
    \ j, \"3\")\n      i = i + 1\n    end\n    if c == \"4\" then\n      c = string.sub(i,\
    \ j, \"4\")\n      i = i + 1\n    end\n    if c == \"5\" then\n      c = string.sub(i,\
    \ j, \"5\")\n      i = i + 1\n    end\n    if c == \"6\" then\n      c = string.sub(i,\
    \ j, \"6\")\n      i = i + 1\n    end\n    if c == \"7\" then\n      c = string.sub(i,\
    \ j, \"7\")\n      i = i + 1\n    end\n    if c == \"8\" then\n      c = string.sub(i,\
    \ j, \"8\")\n      i = i + 1\n    end\n    if c == \"9\" then\n      c = string.sub(i,\
    \ j, \"9\")\n      i = i + 1\n    end\n    if c == \"-\" then\n      c = string.sub(i,\
    \ j, \"_\")\n      i = i + 1\n    end\n    if c == \"_\" then\n      c = string.sub(i,\
    \ j, \"-\")\n      i = i + 1\n    end\n    if c == \"+\" then\n      c = string.sub(i,\
    \ j, \"+\")\n      i = i + 1\n    end\n    if c == \"/\" then\n      c = string.sub(i,\
    \ j, \"/\")\n      i = i + 1\n    end\n    if c == \"%\" then\n      c = string.sub(i,\
    \ j, \"%\")\n      i = i + 1\n    end\n    if c == \"^\" then\n      c = string.sub(i,\
    \ j, \"^\")\n      i = i + 1\n    end\n    if c == \"~\" then\n      c = string.sub(i,\
    \ j, \"~\")\n      i = i + 1\n    end\n    if c == \"!\" then\n      c = string.sub(i,\
    \ j, \"!\")\n      i = i + 1\n    end\n    if c == \"=\" then\n      c = string.sub(i,\
    \ j, \"=\")\n      i = i + 1\n    end\n    if c == \"<\" then\n      c = string.sub(i,\
    \ j, \"<\")", "  local result = string\n  local length = #string\n  for i = 1,\
    \ length do\n    local char = string.sub(i, i)\n    if char >= 'a' and char <=\
    \ 'z' then\n      result = string.sub(i, i) + string.sub(i, i + 1)\n    end\n\
    \  end\n  return result\nend", "    local new_string = string\n    for i = 1,\
    \ #string do\n        if string.sub(i, 1, 1) == 'a' then\n            new_string\
    \ = string.sub(i, 1, #string) .. string.sub(i, #string, 1)\n        elseif string.sub(i,\
    \ 1, 1) == 'A' then\n            new_string = string.sub(i, 1, #string) .. string.sub(i,\
    \ #string, 1)\n        elseif string.sub(i, 1, 1) == 'e' then\n            new_string\
    \ = string.sub(i, 1, #string) .. string.sub(i, #string, 1)\n        elseif string.sub(i,\
    \ 1, 1) == 'E' then\n            new_string = string.sub(i, 1, #string) .. string.sub(i,\
    \ #string, 1)\n        elseif string.sub(i, 1, 1) == 'i' then\n            new_string\
    \ = string.sub(i, 1, #string) .. string.sub(i, #string, 1)\n        elseif string.sub(i,\
    \ 1, 1) == 'I' then\n            new_string = string.sub(i, 1, #string) .. string.sub(i,\
    \ #string, 1)\n        elseif string.sub(i, 1, 1) == 'o' then\n            new_string\
    \ = string.sub(i, 1, #string) .. string.sub(i, #string, 1)\n        elseif string.sub(i,\
    \ 1, 1) == 'O' then\n            new_string = string.sub(i, 1, #string) .. string.sub(i,\
    \ #string, 1)\n        elseif string.sub(i, 1, 1) == 'u' then\n            new_string\
    \ = string.sub(i, 1, #string) .. string.sub(i, #string, 1)\n        elseif string.sub(i,\
    \ 1, 1) == 'U' then\n            new_string = string.sub(i, 1, #string) .. string.sub(i,\
    \ #string, 1)\n        else\n            new_string = string.sub(i, 1, #string)\
    \ .. string.sub(i, #string, 1)\n        end\n    end\n    return new_string\n\
    end", "  local result = string\n  local i, j = 1, #string\n  while i < j do\n\
    \    local char = string.sub(i, j)\n    if char == 'a' then\n      char = 'A'\n\
    \    end\n    if char == 'A' then\n      char = 'a'\n    end\n    if char == 'A'\
    \ then\n      char = 'a'\n    end\n    if char == 'a' then\n      char = 'A'\n\
    \    end\n    i = i + 1\n    j = j - 1\n    result = result .. char\n  end\n \
    \ return result\nend", "  local result = string\n  result:gsub(\"[%l%L]\", function(c)\
    \ c:upper() end)\n  result:gsub(\"[%u%U]\", function(c) c:lower() end)\n  return\
    \ result\nend", "  local result = string\n  local i, j = 1, #string\n  while i\
    \ <= j do\n    local char = string.sub(i, j)\n    if char == string.lower(char)\
    \ then\n      result = string.sub(string.upper(char), 2, string.len(string.upper(char)))\n\
    \    elseif char == string.upper(char) then\n      result = string.sub(string.lower(char),\
    \ 1, string.len(string.lower(char)))\n    end\n    i = i + 1\n    j = j + 1\n\
    \  end\n  return result\nend", "  local result = string\n  result:gsub('%l', function(c)\n\
    \    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U', function(c)\n\
    \    return string.char(tonumber(c) - 32)\n  end)\n  return result\nend", "  local\
    \ result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local result = string\n  local i, j\
    \ = 1, #string\n  while i <= j do\n    local char = string.sub(i, j)\n    if char\
    \ >= 'a' and char <= 'z' then\n      result = string.sub(i, j):lower() + string.sub(i,\
    \ j):upper()\n      i = i + 1\n    elseif char >= 'A' and char <= 'Z' then\n \
    \     result = string.sub(i, j):upper() + string.sub(i, j):lower()\n      i =\
    \ i + 1\n    else\n      result = result .. char\n    end\n    j = j + 1\n  end\n\
    \  return result\nend", "  local result = string\n  local i, j = 1, #string\n\
    \  while i < j do\n    local char = string.sub(i, j)\n    if char == 'a' then\n\
    \      char = 'A'\n    elseif char == 'A' then\n      char = 'a'\n    end\n  \
    \  result = result .. char\n    i = i + 1\n    j = j - 1\n  end\n  return result\n\
    end", "  local new_string = string\n  new_string = new_string:gsub(\"%l\", function(c)\n\
    \    return string.char(tonumber(c) + 32)\n  end)\n  new_string = new_string:gsub(\"\
    %U\", function(c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return\
    \ new_string\nend", "    local result = string\n    for i = 1, #string do\n  \
    \      if string.sub(i, 1, 1) == string.sub(i, 2, 1) then\n            result\
    \ = string.sub(i, 1, 2):upper..string.sub(i, 2):lower\n        else\n        \
    \    result = string.sub(i, 1, 1):upper..string.sub(i, 1):lower\n        end\n\
    \    end\n    return result\nend", "  local result = string\n  -- Lowercase to\
    \ uppercase.\n  for i = 1, #string do\n    if string.sub(i, i, i) ~= string.sub(i,\
    \ i, i) then\n      result = string.sub(i, i, i):upper() .. string.sub(i, i +\
    \ 1, i):lower()\n    end\n  end\n  return result\nend", "  local result = string\n\
    \  local i, j = 1, #string\n  while i < j do\n    if string.sub(i, 1, 1) ~= string.sub(j,\
    \ 1, 1) then\n      result = string.sub(j, 1, 1) .. string.sub(i, 1, 1) .. string.sub(j,\
    \ #i + 1, 1)\n      i = i + 1\n    else\n      i = i + 1\n      j = j - 1\n  \
    \  end\n  end\n  return result\nend", "  local result = string\n  -- Lowercase\
    \ letters.\n  for i = 1, #string do\n    local c = string.sub(i, i, i)\n    if\
    \ string.find(c, \"[A-Z]\") == 1 then\n      result = string.gsub(c, \"[A-Z]\"\
    , \"%u\")\n    end\n  end\n  -- Uppercase letters.\n  for i = 1, #string do\n\
    \    local c = string.sub(i, i, i)\n    if string.find(c, \"%u\") == 1 then\n\
    \      result = string.gsub(c, \"%u\", \"[A-Z]\")\n    end\n  end\n  return result\n\
    end", "  local result = string\n  result:gsub(\"%l\", function (c)\n    return\
    \ string.char(tonumber(c) + 32)\n  end)\n  result:gsub(\"%U\", function (c)\n\
    \    return string.char(tonumber(c) - 32)\n  end)\n  return result\nend", "  local\
    \ result = string\n  local i, j = 1, #string\n  while i <= j do\n    local char\
    \ = string.sub(i, j)\n    if char == string.upper(char) then\n      result = string.sub(i,\
    \ j + 1, #result)\n      result = string.lower(result)\n      i = i + 1\n    elseif\
    \ char == string.lower(char) then\n      result = string.sub(i, j + 1, #result)\n\
    \      result = string.upper(result)\n      i = i + 1\n    else\n      i = i +\
    \ 1\n    end\n  end\n  return result\nend", "  local result = string\n  -- Lowercase\
    \ letters.\n  for i = 1, #string do\n    local c = string.sub(i, i, i)\n    string.sub(i,\
    \ i, i) = string.sub(i, i, i):upper()\n    string.sub(i, i, i) = c:lower()\n \
    \ end\n  return result\nend", "  local result = string\n  result:gsub(\"([a-z])\"\
    , function(c) return c:lower() .. c:upper() end)\n  result:gsub(\"([A-Z])\", function(c)\
    \ return c:upper() .. c:lower() end)\n  return result\nend", "  local result =\
    \ string\n  -- Lowercase letters.\n  for i = 1, #string do\n    local c = string.sub(i,\
    \ i)\n    if c >= 'a' and c <= 'z' then\n      result = string.sub(i, i) + string.sub(i,\
    \ i + 1)\n    end\n  end\n  -- Uppercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i)\n    if c >= 'A' and c <= 'Z' then\n      result\
    \ = string.sub(i, i) + string.sub(i, i + 1)\n    end\n  end\n  return result\n\
    end", "  local result = string\n  -- Lowercase letters.\n  for i = 1, #string\
    \ do\n    local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n\
    \      result = string.sub(i, i) + string.sub(i, i + 1)\n    end\n  end\n  --\
    \ Uppercase letters.\n  for i = 1, #string do\n    local char = string.sub(i,\
    \ i)\n    if char >= 'A' and char <= 'Z' then\n      result = string.sub(i, i)\
    \ + string.sub(i, i + 1)\n    end\n  end\n  return result\nend", "  local result\
    \ = string\n  -- Lowercase letters.\n  for i = 1, #string do\n    local c = string.sub(i,\
    \ i, i)\n    local upper = string.byte(c)\n    local lower = string.byte(string.sub(string,\
    \ 1, i-1))\n    if upper ~= lower then\n      result = string.sub(string, 1, i-1)\
    \ .. string.sub(string, i+1, i)\n    end\n  end\n  return result\nend", "  local\
    \ result = string\n  local i, j = 1, #string\n  while i < j do\n    local c =\
    \ string.sub(i, j)\n    if c == 'a' then\n      result = string.sub(i, j - 1)\
    \ .. string.sub(j, i - 1)\n      i = i + 1\n      j = j - 1\n    elseif c == 'A'\
    \ then\n      result = string.sub(i, j - 1) .. string.sub(j, i - 1) .. string.sub(i\
    \ - 1, j)\n      i = i + 1\n      j = j - 1\n    elseif c == 'b' then\n      result\
    \ = string.sub(i, j - 1) .. string.sub(j, i - 1) .. string.sub(i - 1, j - 1)\n\
    \      i = i + 1\n      j = j - 1\n    elseif c == 'B' then\n      result = string.sub(i,\
    \ j - 1) .. string.sub(j, i - 1) .. string.sub(i - 1, j - 1) .. string.sub(i -\
    \ 1, j)\n      i = i + 1\n      j = j - 1\n    elseif c == 'c' then\n      result\
    \ = string.sub(i, j - 1) .. string.sub(j, i - 1) .. string.sub(i - 1, j - 1) ..\
    \ string.sub(i - 1, j - 1)\n      i = i + 1\n      j = j - 1\n    elseif c ==\
    \ 'C' then\n      result = string.sub(i, j - 1) .. string.sub(j, i - 1) .. string.sub(i\
    \ - 1, j - 1) .. string.sub(i - 1, j - 1) .. string.sub(i - 1, j)\n      i = i\
    \ + 1\n      j = j - 1\n    elseif c == 'd' then\n      result = string.sub(i,\
    \ j - 1) .. string.sub(j, i - 1) .. string.sub(i - 1, j - 1) .. string.sub(i -\
    \ 1, j - 1) .. string.sub(i - 1, j - 1)\n      i = i + 1\n      j = j - 1\n  \
    \  elseif c == 'D' then\n      result = string.sub(i, j - 1) .. string.sub(j,\
    \ i - 1) .. string.sub(i - 1, j - 1) .. string.sub(i - 1, j - 1) .. string.sub(i\
    \ - 1, j - 1) .. string.sub(i - 1, j)\n      i = i + 1\n      j = j - 1\n    elseif\
    \ c == 'e' then\n      result = string.sub(i, j - 1) .. string.sub(j, i - 1) ..\
    \ string.sub(i - 1, j - 1) .. string.sub(i - 1, j - 1) .. string.sub(i - 1, j\
    \ - 1) .. string.sub(i - 1, j - 1)\n      i = i + 1\n      j = j - 1\n    elseif\
    \ c == 'E' then\n      result = string.sub(i, j - 1) .. string.sub(j, i - 1) ..\
    \ string.sub(i - 1, j - 1) .. string.sub(i - 1, j - 1) .. string.sub(i - 1, j\
    \ - 1) .. string.sub(i - ", "    local new_string = ''\n    for i = 1, #string\
    \ do\n        if string.sub(i, 1, 1) ~= '^' then\n            new_string = new_string\
    \ .. string.sub(i, 1, 1) .. string.sub(i, 2)\n        else\n            new_string\
    \ = new_string .. string.sub(i, 1, 2)\n        end\n    end\n    return new_string\n\
    end", "  local result = string\n  -- Lowercase letters.\n  for i = 1, #string\
    \ do\n    local c = string.sub(i, i, i)\n    if string.find(c, \"^[%a%d]+$\",\
    \ true) then\n      c = string.upper(c)\n    end\n    result = result .. c\n \
    \ end\n  -- Uppercase letters.\n  for i = 1, #string do\n    local c = string.sub(i,\
    \ i, i)\n    if string.find(c, \"^[%A%d]+$\", true) then\n      c = string.lower(c)\n\
    \    end\n    result = result .. c\n  end\n  return result\nend", "  local result\
    \ = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend", "  local result = string\n  local i, j\
    \ = 1, #string\n  while i <= j do\n    if string.sub(i, 1, 1) ~= string.sub(i,\
    \ 1, 1) then\n      result = string.sub(i, 1, 1) .. string.sub(j, 1, #string.sub(i,\
    \ 1, 1))\n      i = i + 1\n      j = j - 1\n    else\n      result = string.sub(i,\
    \ 1, 1) .. string.sub(j, 1, #string.sub(i, 1, 1))\n      i = i + 1\n      j =\
    \ j - 1\n    end\n  end\n  return result\nend", "  local result = string\n  local\
    \ upper = string.chars:gsub(\"%l\", string.upper)\n  local lower = string.chars:gsub(\"\
    %l\", string.lower)\n  result = string.chars:gsub(\"%L\", upper):gsub(\"%l\",\
    \ lower)\n  return result\nend", "  local result = {}\n  for i = 1, #string do\n\
    \    local char = string.sub(i, i)\n    local upper = char:upper()\n    local\
    \ lower = char:lower()\n    result[#result + 1] = upper .. lower\n  end\n  return\
    \ table.concat(result)\nend", "  local result = string\n  local i, j = 1, #string\n\
    \  while i < j do\n    local c = string.sub(i, j)\n    if c ~= nil then\n    \
    \  if c == 'a' then\n        c = 'A'\n      elseif c == 'A' then\n        c =\
    \ 'a'\n      end\n    end\n    string.sub(i, j) = c\n    i = i + 1\n    j = j\
    \ - 1\n  end\n  return result\nend", "  local result = string\n  result:gsub('%l',\
    \ function(c)\n    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return result\n\
    end", "  local result = string\n  local i, j = 1, #string\n  while i < j do\n\
    \    local char = string.sub(i, j)\n    if char == string.lower then\n      result\
    \ = string.sub(i, j):upper() .. string.sub(i, j + 1):lower()\n      i = i + 1\n\
    \      j = j + 1\n    elseif char == string.upper then\n      result = string.sub(i,\
    \ j):lower() .. string.sub(i, j + 1):upper()\n      i = i + 1\n      j = j + 1\n\
    \    else\n      result = result .. char\n      i = i + 1\n      j = j + 1\n \
    \   end\n  end\n  return result\nend", "  local result = string\n  result:gsub(\"\
    ([a-z])\", function(c) return c:lower() end)\n  result:gsub(\"([A-Z])\", function(c)\
    \ return c:upper() end)\n  return result\nend", "  local result = string\n  local\
    \ length = string.len()\n  for i = 1, length do\n    local char = string.sub(i,\
    \ i)\n    if char >= 'a' and char <= 'z' then\n      result = string.sub(i, i\
    \ - 1) .. string.sub(string.sub(i, i + 1), 1, string.len()) .. string.sub(i, i\
    \ + 1)\n    end\n  end\n  return result\nend", "  local result = string\n  result:gsub(\"\
    ([a-z])\", function (c)\n    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub(\"\
    ([A-Z])\", function (c)\n    return string.char(tonumber(c) - 32)\n  end)\n  return\
    \ result\nend", "  local result = string\n  local i, j = 1, #string\n  while i\
    \ < j do\n    local char = string.sub(i, j)\n    if char == string.lower(char)\
    \ then\n      result = string.sub(i, j):upper() .. string.sub(i, j + 1)\n    \
    \  i = i + 1\n      j = j + 2\n    elseif char == string.upper(char) then\n  \
    \    result = string.sub(i, j):lower() .. string.sub(i, j + 1)\n      i = i +\
    \ 1\n      j = j + 2\n    else\n      i = i + 1\n      j = j + 1\n    end\n  end\n\
    \  return result\nend", "  local result = string\n  local i, j = 1, #string\n\
    \  while i < j do\n    local char = string.sub(i, j)\n    if char == string.lower\
    \ then\n      result = string.sub(i, j):upper() .. string.sub(i, j + 1):lower()\n\
    \      i = i + 1\n      j = j + 1\n    elseif char == string.upper then\n    \
    \  result = string.sub(i, j):lower() .. string.sub(i, j + 1):upper()\n      i\
    \ = i + 1\n      j = j + 1\n    else\n      i = i + 1\n      j = j + 1\n    end\n\
    \  end\n  return result\nend", "  local result = string\n  local i, j = 1, #string\n\
    \  while i <= j do\n    local c = string.sub(i, j, i)\n    i = i + 1\n    if c\
    \ == \"a\" then\n      c = string.sub(i, j, i)\n      i = i + 1\n      result\
    \ = result .. string.upper(c)\n    elseif c == \"A\" then\n      c = string.sub(i,\
    \ j, i)\n      i = i + 1\n      result = result .. string.lower(c)\n    end\n\
    \  end\n  return result\nend", "  local result = string\n  result:gsub('%l', function(c)\n\
    \    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U', function(c)\n\
    \    return string.char(tonumber(c) - 32)\n  end)\n  return result\nend", "  local\
    \ result = string\n  local i, j = 1, #string\n  while i < j do\n    local char\
    \ = string.sub(i, j)\n    if char == string.upper(char) then\n      result = string.sub(i,\
    \ j - 1) .. string.lower(char)\n      i = j - 1\n    elseif char == string.lower(char)\
    \ then\n      result = string.sub(i, j - 1) .. string.upper(char)\n      i = j\
    \ - 1\n    end\n    j = i\n  end\n  return result\nend", "  local result = string\n\
    \  result:gsub('%l', function(c)\n    return string.char(tonumber(c) + 32)\n \
    \ end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c) -\
    \ 32)\n  end)\n  return result\nend", "  local result = string\n  local i, j =\
    \ 1, #string\n  while i < j do\n    local char = string.sub(i, j)\n    local upper\
    \ = char >= 'a' and char <= 'z'\n    local lower = char >= 'A' and char <= 'Z'\n\
    \    if upper and lower then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i)\n      i = j - 1\n    else\n      i = j\n    end\n    j = i\n  end\n  return\
    \ result\nend", "    local result = string\n    for i = 1, #string do\n      \
    \  local char = string.sub(i, i)\n        if char >= 'a' and char <= 'z' then\n\
    \            char = string.sub(string.sub(i, 1, i), -1)\n        end\n       \
    \ if char >= 'A' and char <= 'Z' then\n            char = string.sub(string.sub(i,\
    \ 1, i), -1)\n        end\n        result = result .. char\n    end\n    return\
    \ result\nend", "  local result = string\n  local i, j = 1, #string\n  while i\
    \ < j do\n    if string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result\
    \ = string.sub(j, 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, 2) .. string.sub(i,\
    \ 2, 2)\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return result\nend",
  "  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower(char) then\n      result\
    \ = string.sub(i, j):upper()\n    elseif char == string.upper(char) then\n   \
    \   result = string.sub(i, j):lower()\n    end\n    i = i + 1\n    j = j - 1\n\
    \  end\n  return result\nend", "  local result = string\n  local i, j = 1, #string\n\
    \  while i < j do\n    if string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n  \
    \    result = string.sub(j, 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, 2)\
    \ .. string.sub(i, 2, 2)\n      i = i + 1\n    else\n      i = i + 1\n    end\n\
    \    j = j - 1\n  end\n  return result\nend", "    local result = string\n   \
    \ for i = 1, #string do\n        local char = string.sub(i, i)\n        if char\
    \ >= 'a' and char <= 'z' then\n            char = string.sub(string.sub(i, 1,\
    \ i), -1)\n        end\n        result = result .. char\n    end\n    return result\n\
    end", "  local result = string\n  local i, j = 1, #string\n  while i <= j do\n\
    \    if string.sub(i, 1, 1) ~= string.sub(i, 1, 1) then\n      result = string.sub(i,\
    \ 1, 1) .. string.sub(j, 1, #string.sub(i, 1, 1)) .. string.sub(j, #string.sub(i,\
    \ 1, 1) + 1)\n      i = i + 1\n      j = j - 1\n    else\n      i = i + 1\n  \
    \  end\n  end\n  return result\nend", "  local result = string\n  local i, j =\
    \ 1, #string\n  while i < j do\n    local char = string.sub(i, j)\n    if char\
    \ == 'a' then\n      char = 'A'\n    else if char == 'A' then\n      char = 'a'\n\
    \    end\n    result = result .. char\n    i = i + 1\n    j = j - 1\n  end\n \
    \ return result\nend", "  local result = string\n  local i, j = 1, #string\n \
    \ while i < j do\n    local char = string.sub(i, j)\n    local is_upper = char\
    \ >= 'a' and char <= 'z'\n    local is_lower = char >= 'A' and char <= 'Z'\n \
    \   if is_upper then\n      result = string.sub(i, j - 1) .. string.sub(j, i)\n\
    \      i = j - 1\n    elseif is_lower then\n      result = string.sub(i, j - 1)\
    \ .. string.sub(j, i)\n      j = i\n    else\n      i = j\n    end\n  end\n  return\
    \ result\nend", "  local result = string\n  local i, j = 1, #string\n  while i\
    \ < j do\n    if string.sub(i, 1, 1) == 'a' then\n      result = string.sub(i,\
    \ 1, 2):upper..string.sub(i, 3):lower\n    elseif string.sub(i, 1, 1) == 'A' then\n\
    \      result = string.sub(i, 1, 2):upper..string.sub(i, 3):upper\n    elseif\
    \ string.sub(i, 1, 1) == 'e' then\n      result = string.sub(i, 1, 2):upper..string.sub(i,\
    \ 3):lower\n    elseif string.sub(i, 1, 1) == 'E' then\n      result = string.sub(i,\
    \ 1, 2):upper..string.sub(i, 3):upper\n    elseif string.sub(i, 1, 1) == 'i' then\n\
    \      result = string.sub(i, 1, 2):upper..string.sub(i, 3):lower\n    elseif\
    \ string.sub(i, 1, 1) == 'I' then\n      result = string.sub(i, 1, 2):upper..string.sub(i,\
    \ 3):upper\n    elseif string.sub(i, 1, 1) == 'o' then\n      result = string.sub(i,\
    \ 1, 2):upper..string.sub(i, 3):lower\n    elseif string.sub(i, 1, 1) == 'O' then\n\
    \      result = string.sub(i, 1, 2):upper..string.sub(i, 3):upper\n    elseif\
    \ string.sub(i, 1, 1) == 'u' then\n      result = string.sub(i, 1, 2):upper..string.sub(i,\
    \ 3):lower\n    elseif string.sub(i, 1, 1) == 'U' then\n      result = string.sub(i,\
    \ 1, 2):upper..string.sub(i, 3):upper\n    end\n    i = i + 1\n  end\n  return\
    \ result\nend", "  local result = string\n  local i, j = 1, #string\n  while i\
    \ <= j do\n    local c = string.sub(i, j, i)\n    i = i + 1\n    if c == \"a\"\
    \ then\n      c = string.sub(i, j, i)\n      i = i + 1\n      if c == \"A\" then\n\
    \        c = string.sub(i, j, i)\n        i = i + 1\n      end\n    end\n    result\
    \ = result .. c\n    j = i\n  end\n  return result\nend", "  local result = string\n\
    \  local i, j = 1, #string\n  while i <= j do\n    if string.sub(i, 1, 1) ~= string.sub(j,\
    \ 1, 1) then\n      result = string.sub(j, 1, 1) .. string.sub(i, 1, 1) .. string.sub(j,\
    \ 2, 2) .. string.sub(i, 2, 2)\n      i = i + 1\n      j = j + 1\n    else\n \
    \     i = i + 1\n    end\n  end\n  return result\nend", "  local result = string\n\
    \  result:gsub('%l', function(c)\n    return string.char(tonumber(c) + 32)\n \
    \ end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c) -\
    \ 32)\n  end)\n  return result\nend", "    local result = string\n    for i =\
    \ 1, #string do\n        if string.sub(i, 1, 1) ~= string.sub(i, 2, 1) then\n\
    \            result = string.sub(i, 1, 1) .. string.sub(i, 2, 1) .. string.sub(i,\
    \ 3, 1) .. string.sub(i, 4, 1)\n        end\n    end\n    return result\nend",
  "  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    i = i + 1\n    if char == string.lower then\n \
    \     result = string.sub(i, j) + string.upper(string.sub(i, j))\n      i = i\
    \ + 1\n    end\n    if char == string.upper then\n      result = string.sub(i,\
    \ j) + string.lower(string.sub(i, j))\n      i = i + 1\n    end\n  end\n  return\
    \ result\nend", "  local result = string\n  local i, j = 1, #string\n  while i\
    \ <= j do\n    if string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result\
    \ = string.sub(j, 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, 2) .. string.sub(i,\
    \ 2, 2)\n      i = i + 1\n      j = j + 1\n    else\n      i = i + 1\n    end\n\
    \  end\n  return result\nend", "  local result = string\n  result:gsub('%l', function(c)\n\
    \    return string.char(tonumber(c) + 32)\n  end)\n  result:gsub('%U', function(c)\n\
    \    return string.char(tonumber(c) - 32)\n  end)\n  return result\nend", "  local\
    \ result = string\n  local i, j = 1, #string\n  while i < j do\n    local c =\
    \ string.sub(i, j)\n    i = i + 1\n    if c == \"a\" then\n      result = string.sub(i,\
    \ j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n    end\n    if c\
    \ == \"A\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n      i\
    \ = i + 1\n      j = j - 1\n    end\n  end\n  return result\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

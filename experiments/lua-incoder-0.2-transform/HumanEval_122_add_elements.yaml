name: HumanEval_122_add_elements
language: lua
prompt: "-- Given a non-empty array of integers arr and an integer k, return\n-- the\
  \ sum of the elements with at most two digits from the first k elements of arr.\n\
  -- Example:\n-- >>> add_elements({111, 21, 3, 4000, 5, 6, 7, 8, 9}, 4)\n-- 24\n\
  -- Constraints:\n-- 1. 1 <= len(arr) <= 100\n-- 2. 1 <= k <= len(arr)\nlocal function\
  \ add_elements(arr, k)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = add_elements\n\
  \    lu.assertEquals(candidate({1, -2, -3, 41, 57, 76, 87, 88, 99}, 3), -4)\n  \
  \  lu.assertEquals(candidate({111, 121, 3, 4000, 5, 6}, 2), 0)\n    lu.assertEquals(candidate({11,\
  \ 21, 3, 90, 5, 6, 7, 8, 9}, 4), 125)\n    lu.assertEquals(candidate({111, 21, 3,\
  \ 4000, 5, 6, 7, 8, 9}, 4), 24)\n    lu.assertEquals(candidate({1}, 1), 1)\nend\n\
  \nos.exit(lu.LuaUnit.run())"
completions: ["  local sum = 0\n  for i = 1, k do\n    sum = sum + arr[i]\n  end\n\
    \  return sum\nend", "    local sum = 0\n    for i = 1, k do\n        sum = sum\
    \ + arr[i]\n    end\n    return sum\nend", "    local sum = 0\n    for i = 1,\
    \ k do\n        sum = sum + arr[i]\n    end\n    return sum\nend", "    local\
    \ sum = 0\n    for i = 1, k do\n        sum = sum + arr[i]\n    end\n    return\
    \ sum\nend", "  local sum = 0\n  for i = 1, k do\n    sum = sum + arr[i]\n  end\n\
    \  return sum\nend", "  local sum = 0\n  for i = 1, k do\n    sum = sum + arr[i]\n\
    \  end\n  return sum\nend", "    local sum = 0\n    for i = 1, k do\n        sum\
    \ = sum + arr[i]\n    end\n    return sum\nend", "    local sum = 0\n    for i\
    \ = 1, k do\n        sum = sum + arr[i]\n    end\n    return sum\nend", "    local\
    \ sum = 0\n    for i = 1, k do\n        sum = sum + arr[i]\n    end\n    return\
    \ sum\nend", "  local sum = 0\n  for i = 1, k do\n    sum = sum + arr[i]\n  end\n\
    \  return sum\nend", "  local sum = 0\n  for i = 1, k do\n    sum = sum + arr[i]\n\
    \  end\n  return sum\nend", "  -- Base case\n  if k == 1 then\n    return arr[1]\n\
    \  end", "    local sum = 0\n    for i = 1, k do\n        sum = sum + arr[i]\n\
    \    end\n    return sum\nend", "  local sum = 0\n  for i = 1, k do\n    sum =\
    \ sum + arr[i]\n  end\n  return sum\nend", "    local sum = 0\n    for i = 1,\
    \ k do\n        sum = sum + arr[i]\n    end\n    return sum\nend", "    local\
    \ sum = 0\n    for i = 1, k do\n        sum = sum + arr[i]\n    end\n    return\
    \ sum\nend", "    local sum = 0\n    for i = 1, k do\n        sum = sum + arr[i]\n\
    \    end\n    return sum\nend", "    local sum = 0\n    for i = 1, k do\n    \
    \    sum = sum + arr[i]\n    end\n    return sum\nend", "    local sum = 0\n \
    \   for i = 1, k do\n        sum = sum + arr[i]\n    end\n    return sum\nend",
  "    local sum = 0\n    for i = 1, k do\n        sum = sum + arr[i]\n    end\n \
    \   return sum\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_137_compare_one
language: lua
prompt: "-- Create a function that takes integers, floats, or strings representing\n\
  -- real numbers, and returns the larger variable in its given variable type.\n--\
  \ Return None if the values are equal.\n-- Note: If a real number is represented\
  \ as a string, the floating point might be . or ,\n-- >>> compare_one(1, 2.5)\n\
  -- 2.5\n-- >>> compare_one(1, '2,3')\n-- '2,3'\n-- >>> compare_one('5,1', '6')\n\
  -- '6'\n-- >>> compare_one('1', 1)\n-- None\nlocal function compare_one(a, b)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare_one\n\
  \    lu.assertEquals(candidate(1, 2), 2)\n    lu.assertEquals(candidate(1, 2.5),\
  \ 2.5)\n    lu.assertEquals(candidate(2, 3), 3)\n    lu.assertEquals(candidate(5,\
  \ 6), 6)\n    lu.assertEquals(candidate(1, '2,3'), '2,3')\n    lu.assertEquals(candidate('5,1',\
  \ '6'), '6')\n    lu.assertEquals(candidate('1', '2'), '2')\n    lu.assertEquals(candidate('1',\
  \ 1), None)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  if type(a) == 'number' and type(b) == 'number' then\n    if a > b\
    \ then\n      return a\n    elseif b > a then\n      return b\n    else\n    \
    \  return nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n\
    \    if a > b then\n      return a\n    elseif b > a then\n      return b\n  \
    \  else\n      return nil\n    end\n  elseif type(a) == 'table' and type(b) ==\
    \ 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n\
    \      return compare_one(a.z, b.z)\n    else\n      return nil\n    end\n  else\n\
    \    return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return nil\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'string' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'table' then\n    if compare_one(a.x, b.x) == nil then\n    \
    \  return compare_one(a.y, b.y)\n    else\n      return nil\n    end\n  else\n\
    \    return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if math.abs(a - b) < 1e-10 then\n      return a\n    else\n      return\
    \ b\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if\
    \ a:find(b) then\n      return a\n    else\n      return b\n    end\n  else\n\
    \    return a\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if math.abs(a - b) < 1e-10 then\n      return a\n    else\n      return\
    \ b\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if\
    \ a:len() > b:len() then\n      return b\n    else\n      return a\n    end\n\
    \  elseif type(a) == 'table' and type(b) == 'table' then\n    if #a == #b then\n\
    \      for i = 1, #a do\n        if compare_one(a[i], b[i]) then\n          return\
    \ a\n        end\n      end\n    else\n      return nil\n    end\n  else\n   \
    \ return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n\
    \    if a == b then\n      return a\n    elseif math.abs(a - b) < 1e-14 then\n\
    \      return a\n    else\n      return b\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a == b then\n      return a\n    elseif\
    \ a:sub(1, -1) == b:sub(1, -1) then\n      return a\n    else\n      return b\n\
    \    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if a ==\
    \ b then\n      return a\n    elseif a:size() == b:size() then\n      for i, v\
    \ in ipairs(a) do\n        if compare_one(v, b[i]) then\n          return v\n\
    \        end\n      end\n    else\n      return b\n    end\n  elseif type(a) ==\
    \ 'string' and type(b) == 'number' then\n    if a:sub(1, -1) == b then\n     \
    \ return a\n    else\n      return b\n    end\n  elseif type(a) == 'number' and\
    \ type(b) == 'string' then\n    if a == b:sub(1, -1) then\n      return a\n  \
    \  else\n      return b\n    end\n  else\n    return nil\n  end\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a > b then\n      return b\n\
    \    elseif a < b then\n      return a\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return b\n    elseif a < b then\n      return a\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if\
    \ compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return nil\n   \
    \ end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  else\n  \
    \  return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a > b then\n      return b\n    elseif b > a then\n      return\
    \ a\n    else\n      return nil\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'string' then\n    if a > b then\n      return b\n    elseif b > a then\n\
    \      return a\n    else\n      return nil\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return nil\n    else\n      return compare_one(a.x, b.x) or\
    \ compare_one(a.y, b.y)\n    end\n  else\n    return nil\n  end\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a == b then\n      return a\n\
    \    end\n  end\n  if type(a) == 'string' and type(b) == 'string' then\n    if\
    \ a == b then\n      return a\n    end\n  end\n  if type(a) == 'table' and type(b)\
    \ == 'table' then\n    if #a == #b then\n      for i = 1, #a do\n        if compare_one(a[i],\
    \ b[i]) then\n          return a\n        end\n      end\n    end\n  end\n  return\
    \ nil\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return nil\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n\
    \      return nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a == b then\n      return a\n\
    \    elseif type(a) == 'string' and type(b) == 'string' then\n      local a_ =\
    \ a:gsub(',', '.')\n      local b_ = b:gsub(',', '.')\n      if a_ == b_ then\n\
    \        return a\n      else\n        return b\n      end\n    else\n      return\
    \ b\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    local\
    \ a_ = a:gsub(',', '.')\n    local b_ = b:gsub(',', '.')\n    if a_ == b_ then\n\
    \      return a\n    else\n      return b\n    end\n  else\n    return b\n  end\n\
    end", "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n\
    \      return a\n    elseif b > a then\n      return b\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n  \
    \  if a > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a == b then\n      return a\n\
    \    elseif math.abs(a - b) < 1e-10 then\n      return a\n    else\n      return\
    \ b\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if\
    \ a == b then\n      return a\n    elseif a:sub(1, 1) == b:sub(1, 1) then\n  \
    \    return a\n    else\n      return b\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'table' then\n    if a == b then\n      return a\n    elseif\
    \ a:size() == b:size() then\n      local i = 1\n      local j = 1\n      local\
    \ k = 1\n      while i <= a:size() and j <= b:size() do\n        if a[i] ~= b[j]\
    \ then\n          return b[k]\n        end\n        i = i + 1\n        j = j +\
    \ 1\n        k = k + 1\n      end\n      if i == a:size() then\n        return\
    \ b[k]\n      elseif j == b:size() then\n        return a[k]\n      end\n    end\n\
    \  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b) ==\
    \ 'number' then\n    if a == b then\n      return a\n    elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n      if a:find(b) then\n        return a\n  \
    \    else\n        return b\n      end\n    elseif type(a) == 'table' and type(b)\
    \ == 'table' then\n      if a:size() == b:size() then\n        for i = 1, a:size()\
    \ do\n          local a_ = compare_one(a[i], b[i])\n          if a_ ~= nil then\n\
    \            return a_\n          end\n        end\n      else\n        return\
    \ nil\n      end\n    elseif type(a) == 'string' and type(b) == 'number' then\n\
    \      if a:find(tostring(b)) then\n        return a\n      else\n        return\
    \ b\n      end\n    elseif type(a) == 'number' and type(b) == 'string' then\n\
    \      if tostring(a) == tostring(b) then\n        return a\n      else\n    \
    \    return b\n      end\n    elseif type(a) == 'table' and type(b) == 'string'\
    \ then\n      if a:size() == 1 and tostring(a[1]) == tostring(b) then\n      \
    \  return a[1]\n      else\n        return b\n      end\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if\
    \ a:size() == b:size() then\n      for i = 1, a:size() do\n        local a_ =\
    \ compare_one(a[i], b[i])\n        if a_ ~= nil then\n          return a_\n  \
    \      end\n      end\n    else\n      return nil\n    end\n  elseif type(a) ==\
    \ 'string' and type(b) == 'string' then\n    if a:find(b) then\n      return a\n\
    \    else\n      return b\n    end\n  elseif type(a) == 'table' and type(b) ==\
    \ 'string' then\n    if a:size() == 1 and tostring(a[1]) == tostring(b) then\n\
    \      return a[1]\n    else\n      return b\n    end\n  elseif type(a) == 'number'\
    \ and type(b) == 'string' then\n    if tostring(a) == tostring(b) then\n     \
    \ return a\n    else\n      return b\n    end\n  elseif type(a) == 'table' and\
    \ type(b) == 'number' then\n    if a:size() == 1 and tostring(a[1]) == tostring(b)\
    \ then\n      return a[1]\n    else\n      return b\n    end\n  else\n    return\
    \ nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n \
    \   if a == b then\n      return a\n    else\n      return b\n    end\n  elseif\
    \ type(a) == 'string' and type(b) == 'string' then\n    if a == b then\n     \
    \ return a\n    else\n      return b\n    end\n  else\n    return nil\n  end\n\
    end", "  if type(a) == 'number' and type(b) == 'number' then\n    if a == b then\n\
    \      return a\n    else\n      return b\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a == b then\n      return a\n    else\n\
    \      return b\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n\
    \    if a == b then\n      return a\n    else\n      return b\n    end\n  elseif\
    \ type(a) == 'string' and type(b) == 'table' then\n    if a == b then\n      return\
    \ a\n    else\n      return b\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'string' then\n    if a == b then\n      return a\n    else\n      return\
    \ b\n    end\n  elseif type(a) == 'number' and type(b) == 'string' then\n    if\
    \ a > b then\n      return a\n    else\n      return b\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'number' then\n    if a > b then\n      return a\n\
    \    else\n      return b\n    end\n  elseif type(a) == 'table' and type(b) ==\
    \ 'number' then\n    if a > b then\n      return a\n    else\n      return b\n\
    \    end\n  elseif type(a) == 'number' and type(b) == 'table' then\n    if a >\
    \ b then\n      return a\n    else\n      return b\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'table' then\n    if a > b then\n      return a\n\
    \    else\n      return b\n    end\n  elseif type(a) == 'table' and type(b) ==\
    \ 'string' then\n    if a > b then\n      return a\n    else\n      return b\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a ~= b then\n      return a\n    else\n\
    \      return nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a > b then\n      return b\n\
    \    elseif a < b then\n      return a\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return b\n    elseif a < b then\n      return a\n    else\n      return\
    \ nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a) ~= type(b)\
    \ then return nil end\n  local a_is_real = type(a) == 'number' and type(a) ==\
    \ type(b)\n  if a_is_real then\n    local a_str = tostring(a)\n    local b_str\
    \ = tostring(b)\n    if a_str == b_str then\n      return a\n    end\n    if a_str\
    \ == '.' and b_str == '.' then\n      return a\n    end\n    if a_str == ',' and\
    \ b_str == ',' then\n      return a\n    end\n  end\n  return b\nend", "  if type(a)\
    \ ~= type(b) then\n    return nil\n  end\n  if type(a) == 'number' then\n    if\
    \ a > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'string' then\n    if a:match('%d*\\\
    .%d*') then\n      if a:match('%d*,%d*') then\n        return compare_one(a:match('%d*,%d*'):gsub(',',\
    \ '.'), b)\n      else\n        return compare_one(a:match('%d*\\.%d*'):gsub(',',\
    \ '.'), b)\n      end\n    elseif a:match('%d*,%d*') then\n      return compare_one(a:match('%d*,%d*'):gsub(',',\
    \ '.'), b)\n    else\n      return nil\n    end\n  elseif type(a) == 'table' then\n\
    \    if a[1] > b[1] then\n      return a\n    elseif b[1] > a[1] then\n      return\
    \ b\n    else\n      return nil\n    end\n  else\n    return nil\n  end\nend",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n    \
    \  return a\n    elseif b > a then\n      return b\n    else\n      return a\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return a\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n\
    \    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return compare_one(a.z,\
    \ b.z)\n    else\n      return compare_one(a.x, b.x)\n    end\n  else\n    return\
    \ nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n \
    \   if a == b then\n      return a\n    end\n  end\n  if type(a) == 'string' and\
    \ type(b) == 'string' then\n    if a == b then\n      return a\n    end\n  end\n\
    \  if type(a) == 'table' and type(b) == 'table' then\n    if a == b then\n   \
    \   return a\n    end\n  end\n  return nil\nend", "  if type(a) == 'number' and\
    \ type(b) == 'number' then\n    if a > b then\n      return a\n    elseif a <\
    \ b then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return b\n\
    \    elseif a < b then\n      return a\n    else\n      return nil\n    end\n\
    \  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b) ==\
    \ 'number' then\n    if a > b then\n      return b\n    elseif a < b then\n  \
    \    return a\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return b\n    elseif\
    \ a < b then\n      return a\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x) == nil\
    \ then\n      return compare_one(a.y, b.y)\n    else\n      return nil\n    end\n\
    \  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b) ==\
    \ 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n  \
    \    return b\n    else\n      return a\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return b\n    elseif\
    \ b > a then\n      return a\n    else\n      return a\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return a\n    else\n      return b\n    end\n  else\n    return\
    \ nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n \
    \   if a == b then\n      return a\n    else\n      return b\n    end\n  elseif\
    \ type(a) == 'string' and type(b) == 'string' then\n    if a == b then\n     \
    \ return a\n    else\n      return b\n    end\n  else\n    return nil\n  end\n\
    end", "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n\
    \      return a\n    elseif a < b then\n      return b\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n  \
    \  if a > b then\n      return b\n    elseif a < b then\n      return a\n    else\n\
    \      return nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return a\n    elseif b > a then\n      return b\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if\
    \ compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return nil\n   \
    \ end\n  end\n  return nil\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return a\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'string' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return a\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return a\n    else\n      return b\n    end\n  else\n    return\
    \ nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n \
    \   if a > b then\n      return a\n    elseif b > a then\n      return b\n   \
    \ else\n      return nil\n    end\n  elseif type(a) == 'string' and type(b) ==\
    \ 'string' then\n    if a > b then\n      return a\n    elseif b > a then\n  \
    \    return b\n    else\n      return nil\n    end\n  else\n    return nil\n \
    \ end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return b\n    elseif b > a then\n      return\
    \ a\n    else\n      return nil\n    end\n  else\n    return nil\n  end\nend",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if math.abs(a - b) <\
    \ 1e-10 then\n      return a\n    else\n      return b\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a:sub(1, 1) == '\"' and b:sub(1,\
    \ 1) == '\"' then\n      if a:sub(2, -2) == b:sub(2, -2) then\n        return\
    \ a\n      else\n        return b\n      end\n    elseif a:sub(1, 1) == '\"' and\
    \ b:sub(1, 1) ~= '\"'\n    or a:sub(1, 1) ~= '\"'\n    or b:sub(1, 1) == '\"'\
    \ then\n      return compare_one(b, a)\n    else\n      return compare_one(a,\
    \ b)\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if\
    \ #a == #b then\n      for i, v in ipairs(a) do\n        if compare_one(v, b[i])\
    \ ~= nil then\n          return nil\n        end\n      end\n      return b\n\
    \    else\n      return nil\n    end\n  else\n    return nil\n  end\nend", " \
    \ if type(a) == 'number' and type(b) == 'number' then\n    if math.abs(a - b)\
    \ < 1e-10 then\n      return a\n    else\n      return b\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a == '.' and b == ',' then\n\
    \      return b\n    elseif b == '.' and a == ',' then\n      return a\n    else\n\
    \      if a == b then\n        return a\n      else\n        return b\n      end\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) ~= 'number' or type(b)\
    \ ~= 'number' then\n    return nil\n  end\n  if a == b then\n    return a\n  elseif\
    \ type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n      return\
    \ a\n    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a:find(b) then\n\
    \      return b\n    else\n      return a\n    end\n  else\n    return nil\n \
    \ end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return nil\n    end\n  else\n    return nil\n  end\nend",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if a == b then\n   \
    \   return a\n    else\n      return b\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a == b then\n      return a\n    else\n\
    \      return b\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n\
    \    if a == b then\n      return a\n    else\n      return b\n    end\n  else\n\
    \    return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a == b then\n      return a\n    else\n      return b\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a == b then\n\
    \      return a\n    elseif a:sub(1, 1) == '-' and b:sub(1, 1) == '-' then\n \
    \     return compare_one(a:sub(2, -1), b:sub(2, -1))\n    else\n      return b\n\
    \    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if a ==\
    \ b then\n      return a\n    else\n      return b\n    end\n  else\n    return\
    \ a\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n   \
    \ if a > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a ~= b then\n      return a\n    else\n      return nil\n    end\n\
    \  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b) ==\
    \ 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n  \
    \    return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return nil\n    end\n  end\n  return nil\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a == b then\n      return a\n\
    \    end\n  end\n  if type(a) == 'string' and type(b) == 'string' then\n    if\
    \ a == b then\n      return a\n    end\n  end\n  if type(a) == 'table' and type(b)\
    \ == 'table' then\n    if a == b then\n      return a\n    end\n  end\n  return\
    \ nil\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ == b then\n      return a\n    else\n      return b\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a == b then\n      return a\n\
    \    elseif a:find(',') ~= -1 and b:find(',') ~= -1 then\n      local a_arr =\
    \ a:gsub(',', ''):gsub('%z', ''):gsub('%Z', ''):gsub('%f', ''):gsub('%n', ''):gsub('%N',\
    \ ''):gsub('%d', ''):gsub('%D', '')\n      local b_arr = b:gsub(',', ''):gsub('%z',\
    \ ''):gsub('%Z', ''):gsub('%f', ''):gsub('%n', ''):gsub('%N', ''):gsub('%d', ''):gsub('%D',\
    \ '')\n      if a_arr == b_arr then\n        return a\n      else\n        return\
    \ b\n      end\n    else\n      return b\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'table' then\n    if a == b then\n      return a\n    elseif\
    \ a[1] == b[1] then\n      if a[2] == b[2] then\n        if a[3] == b[3] then\n\
    \          if a[4] == b[4] then\n            if a[5] == b[5] then\n          \
    \    if a[6] == b[6] then\n                if a[7] == b[7] then\n            \
    \      if a[8] == b[8] then\n                    if a[9] == b[9] then\n      \
    \                if a[10] == b[10] then\n                        if a[11] == b[11]\
    \ then\n                          return a\n                        else\n   \
    \                       return b\n                        end\n              \
    \        else\n                        return b\n                      end\n \
    \                   else\n                      return b\n                   \
    \ end\n                  else\n                    return b\n                \
    \  end\n                else\n                  return b\n                end\n\
    \              else\n                return b\n              end\n           \
    \ else\n              return b\n            end\n          else\n            return\
    \ b\n          end\n        else\n          return b\n        end\n      else\n\
    \        return b\n      end\n    else\n      return b\n    end\n  else\n    return\
    \ b\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n   \
    \ if a > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return nil\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n\
    \      return nil\n    end\n  end\n  return nil\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'table' and type(b) == 'table' then\n    if compare_one(a.x,\
    \ b.x) and compare_one(a.y, b.y) then\n      return nil\n    else\n      return\
    \ compare_one(a.x, b.x) or compare_one(a.y, b.y)\n    end\n  else\n    return\
    \ nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n \
    \   if a > b then\n      return a\n    elseif a < b then\n      return b\n   \
    \ else\n      return a\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return a\n    elseif a < b then\n      return\
    \ b\n    else\n      return a\n    end\n  else\n    return a\n  end\nend", " \
    \ if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n   \
    \   return a\n    elseif b > a then\n      return b\n    else\n      return nil\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return b\n    elseif b > a then\n      return a\n    else\n      return\
    \ nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return a\n    elseif\
    \ a < b then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return b\n\
    \    elseif a < b then\n      return a\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'table' and type(b) == 'table' then\n    if compare_one(a.x,\
    \ b.x) and compare_one(a.y, b.y) then\n      return nil\n    else\n      return\
    \ compare_one(a.x, b.x) or compare_one(a.y, b.y)\n    end\n  elseif type(a) ==\
    \ 'string' and type(b) == 'number' then\n    if tonumber(a) > tonumber(b) then\n\
    \      return a\n    elseif tonumber(a) < tonumber(b) then\n      return b\n \
    \   else\n      return nil\n    end\n  elseif type(a) == 'number' and type(b)\
    \ == 'string' then\n    if tonumber(a) > tonumber(b) then\n      return b\n  \
    \  elseif tonumber(a) < tonumber(b) then\n      return a\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'table' and type(b) == 'string' then\n   \
    \ if compare_one(a.x, b) then\n      return nil\n    else\n      return compare_one(a.x,\
    \ b)\n    end\n  elseif type(a) == 'string' and type(b) == 'table' then\n    if\
    \ compare_one(a, b) then\n      return nil\n    else\n      return compare_one(a,\
    \ b)\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if\
    \ compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return nil\n   \
    \ else\n      return compare_one(a.x, b.x) or compare_one(a.y, b.y)\n    end\n\
    \  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b) ==\
    \ 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n  \
    \    return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  else\n  \
    \  return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return nil\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'string' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  else\n    return nil\n\
    \  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ > b then\n      return a\n    elseif a < b then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a ~= b then\n      return a\n    else\n      return nil\n    end\n\
    \  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b) ==\
    \ 'number' then\n    if a == b then\n      return a\n    elseif math.abs(a - b)\
    \ < 1e-15 then\n      return a\n    else\n      return b\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a == b then\n      return a\n\
    \    elseif a:find(b) then\n      return b\n    else\n      return a\n    end\n\
    \  elseif type(a) == 'table' and type(b) == 'table' then\n    if a == b then\n\
    \      return a\n    elseif a:size() == b:size() then\n      for i = 1, a:size()\
    \ do\n        if compare_one(a[i], b[i]) then\n          return b\n        end\n\
    \      end\n      return a\n    else\n      return b\n    end\n  else\n    return\
    \ nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n \
    \   if a == b then\n      return a\n    else\n      return b\n    end\n  elseif\
    \ type(a) == 'string' and type(b) == 'string' then\n    if a == b then\n     \
    \ return a\n    else\n      return b\n    end\n  else\n    return a\n  end\nend",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n    \
    \  return a\n    elseif b > a then\n      return b\n    else\n      return nil\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return a\n    elseif b > a then\n      return b\n    else\n      return\
    \ nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a == b then\n      return a\n    elseif\
    \ math.abs(a - b) < 1e-9 then\n      return a\n    else\n      return b\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a == b then\n\
    \      return a\n    elseif a:sub(1, 1) == b:sub(1, 1) then\n      return a\n\
    \    else\n      return b\n    end\n  elseif type(a) == 'table' and type(b) ==\
    \ 'table' then\n    if #a == #b then\n      for i = 1, #a do\n        if compare_one(a[i],\
    \ b[i]) then\n          return a\n        end\n      end\n      return b\n   \
    \ else\n      return nil\n    end\n  else\n    return nil\n  end\nend", "  if\
    \ type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n      return\
    \ b\n    elseif a < b then\n      return a\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return b\n    elseif a < b then\n      return a\n    else\n      return\
    \ nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if math.abs(a - b) < 1e-9 then\n      return\
    \ a\n    else\n      return b\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'string' then\n    if a == '.' and b == ',' then\n      return b\n    elseif\
    \ b == '.' and a == ',' then\n      return a\n    else\n      if tonumber(a) >\
    \ tonumber(b) then\n        return a\n      else\n        return b\n      end\n\
    \    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if compare_one(a._1,\
    \ b._1) then\n      return a._2\n    else\n      return b._2\n    end\n  elseif\
    \ type(a) == 'string' and type(b) == 'number' then\n    if tonumber(a) > b then\n\
    \      return a\n    else\n      return b\n    end\n  elseif type(a) == 'number'\
    \ and type(b) == 'string' then\n    if tonumber(a) > tonumber(b) then\n      return\
    \ a\n    else\n      return b\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'string' then\n    if compare_one(a._1, b) then\n      return a._2\n    else\n\
    \      return b\n    end\n  elseif type(a) == 'string' and type(b) == 'table'\
    \ then\n    if compare_one(a, b._1) then\n      return a._2\n    else\n      return\
    \ b._2\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n   \
    \ if compare_one(a._1, b._1) then\n      return a._2\n    else\n      return b._2\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return a\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return b\n    elseif\
    \ b > a then\n      return a\n    else\n      return b\n    end\n  else\n    return\
    \ a\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n   \
    \ if a > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return nil\n    end\n  else\n    return nil\n  end\nend",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n    \
    \  return a\n    elseif b > a then\n      return b\n    else\n      return nil\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ ~= b then\n      return a\n    else\n      return nil\n    end\n  else\n   \
    \ return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n\
    \    if a > b then\n      return a\n    elseif b > a then\n      return b\n  \
    \  else\n      return a\n    end\n  elseif type(a) == 'string' and type(b) ==\
    \ 'string' then\n    if a ~= b then\n      return a\n    else\n      return b\n\
    \    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if #a ~=\
    \ #b then\n      return a\n    else\n      local akeys = a:keys();\n      local\
    \ bkeys = b:keys();\n      local ai, bi;\n      for ai = 1, #akeys do\n      \
    \  for bi = 1, #bkeys do\n          if akeys[ai] == bkeys[bi] then\n         \
    \   if compare_one(a[akeys[ai]], b[bkeys[bi]]) then\n              return akeys[ai]\n\
    \            end\n          end\n        end\n      end\n      return nil\n  \
    \  end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if math.abs(a) > math.abs(b) then\n      return b\n  \
    \  else\n      return a\n    end\n  elseif type(a) == 'string' and type(b) ==\
    \ 'string' then\n    if a ~= b then\n      return b\n    else\n      return a\n\
    \    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if #a ==\
    \ #b then\n      for i = 1, #a do\n        if compare_one(a[i], b[i]) then\n \
    \         return b\n        end\n      end\n      return a\n    else\n      return\
    \ nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return a\n    elseif\
    \ a < b then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return b\n\
    \    elseif a < b then\n      return a\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'table' and type(b) == 'table' then\n    if compare_one(a.x,\
    \ b.x) and compare_one(a.y, b.y) then\n      return nil\n    end\n  elseif type(a)\
    \ == 'userdata' and type(b) == 'userdata' then\n    if compare_one(a.x, b.x) and\
    \ compare_one(a.y, b.y) then\n      return nil\n    end\n  else\n    return nil\n\
    \  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return a\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return b\n    elseif b > a then\n      return\
    \ a\n    else\n      return a\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n\
    \      return a\n    else\n      return b\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'number' then\n    if tonumber(a) > tonumber(b) then\n      return\
    \ a\n    else\n      return b\n    end\n  elseif type(a) == 'number' and type(b)\
    \ == 'string' then\n    if tonumber(a) > tonumber(b) then\n      return b\n  \
    \  else\n      return a\n    end\n  elseif type(a) == 'table' and type(b) == 'string'\
    \ then\n    if compare_one(a.x, b) then\n      return a\n    else\n      return\
    \ b\n    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and\
    \ type(b) == 'number' then\n    if math.abs(a - b) < 1e-10 then\n      return\
    \ a\n    end\n  end\n  if type(a) == 'string' and type(b) == 'string' then\n \
    \   if a == '.' or b == '.' then\n      return a\n    end\n    if a == '-' or\
    \ b == '-' then\n      return b\n    end\n  end\n  if type(a) == 'table' and type(b)\
    \ == 'table' then\n    if #a == #b then\n      for i = 1, #a do\n        if compare_one(a[i],\
    \ b[i]) == nil then\n          return nil\n        end\n      end\n      return\
    \ a\n    end\n  end\n  return nil\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  else\n  \
    \  return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a == b then\n      return a\n    else\n      return b\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a == b then\n\
    \      return a\n    else\n      return b\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'table' then\n    if a == b then\n      return a\n    else\n\
    \      return b\n    end\n  elseif type(a) == 'string' and type(b) == 'number'\
    \ then\n    if tonumber(a) == tonumber(b) then\n      return a\n    else\n   \
    \   return b\n    end\n  elseif type(a) == 'number' and type(b) == 'string' then\n\
    \    if tonumber(a) == tonumber(b) then\n      return a\n    else\n      return\
    \ b\n    end\n  elseif type(a) == 'table' and type(b) == 'string' then\n    if\
    \ a == b then\n      return a\n    else\n      return b\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'table' then\n    if a == b then\n      return a\n\
    \    else\n      return b\n    end\n  elseif type(a) == 'table' and type(b) ==\
    \ 'table' then\n    if a == b then\n      return a\n    else\n      return b\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) ~= type(b) then return\
    \ nil end\n  if type(a) == 'number' then\n    if a > b then return b end\n   \
    \ if a == b then return nil end\n  end\n  if type(a) == 'string' then\n    if\
    \ a:match('%d*\\.%d*') then\n      if a:match('%d*,%d*') then\n        if a:match('%d*,%d*,%d*')\
    \ then\n          local x,y,z = a:match('%d*,%d*,%d*,%d*')\n          local x1,y1,z1\
    \ = a:match('%d*,%d*,%d*,%d*')\n          if x1 == x  and y1 == y and z1 == z\
    \ then return b end\n        end\n      end\n    end\n  end\n  return a\nend",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n    \
    \  return b\n    elseif a < b then\n      return a\n    else\n      return nil\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ > b then\n      return b\n    elseif a < b then\n      return a\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table'\
    \ then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return\
    \ nil\n    end\n  elseif type(a) == 'table' and type(b) == 'number' then\n   \
    \ if compare_one(a.x, b) then\n      return nil\n    end\n  elseif type(a) ==\
    \ 'number' and type(b) == 'table' then\n    if compare_one(a, b) then\n      return\
    \ nil\n    end\n  elseif type(a) == 'string' and type(b) == 'table' then\n   \
    \ if compare_one(a, b) then\n      return nil\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'string' then\n    if compare_one(a.x, b) then\n      return\
    \ nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'table' and type(b) == 'table' then\n    if compare_one(a.x,\
    \ b.x) and compare_one(a.y, b.y) then\n      return compare_one(a.z, b.z)\n  \
    \  else\n      return nil\n    end\n  elseif type(a) == 'userdata' and type(b)\
    \ == 'userdata' then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n\
    \      return compare_one(a.z, b.z)\n    else\n      return nil\n    end\n  elseif\
    \ type(a) == 'function' and type(b) == 'function' then\n    if compare_one(a.name,\
    \ b.name) then\n      return compare_one(a.rettype, b.rettype)\n    else\n   \
    \   return nil\n    end\n  elseif type(a) == 'cdata' and type(b) == 'cdata' then\n\
    \    if compare_one(a.name, b.name) then\n      return compare_one(a.rettype,\
    \ b.rettype)\n    else\n      return nil\n    end\n  else\n    return nil\n  end\n\
    end", "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n\
    \      return a\n    elseif b > a then\n      return b\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n  \
    \  if a > b then\n      return b\n    elseif b > a then\n      return a\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table'\
    \ then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return\
    \ compare_one(a.z, b.z)\n    else\n      return nil\n    end\n  else\n    return\
    \ nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n \
    \   if a == b then\n      return a\n    elseif math.abs(a - b) < 1e-10 then\n\
    \      return b\n    else\n      return a\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a == b then\n      return a\n    elseif\
    \ a:find(',') ~= nil then\n      local a_split = a:split(',')\n      local b_split\
    \ = b:split(',')\n      if #a_split == #b_split then\n        for i = 1, #a_split\
    \ do\n          local a_num = tonumber(a_split[i])\n          local b_num = tonumber(b_split[i])\n\
    \          if a_num == b_num then\n            return compare_one(a_split[i],\
    \ b_split[i])\n          else\n            if a_num > b_num then\n           \
    \   return compare_one(a_split[i], b_split[i])\n            else\n           \
    \   return compare_one(a_split[i], b_split[i])\n            end\n          end\n\
    \        end\n      else\n        return a\n      end\n    else\n      return\
    \ a\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if\
    \ a == b then\n      return a\n    elseif a:size() == b:size() then\n      for\
    \ i = 1, #a do\n        if compare_one(a[i], b[i]) then\n          return compare_one(a[i],\
    \ b[i])\n        end\n      end\n    else\n      return a\n    end\n  else\n \
    \   return a\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n\
    \    if a > b then\n      return b\n    elseif a < b then\n      return a\n  \
    \  else\n      return nil\n    end\n  elseif type(a) == 'string' and type(b) ==\
    \ 'string' then\n    if a > b then\n      return b\n    elseif a < b then\n  \
    \    return a\n    else\n      return nil\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'table' then\n    if #a > #b then\n      return b\n    elseif\
    \ #a < #b then\n      return a\n    else\n      return nil\n    end\n  else\n\
    \    return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return nil\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'string' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return nil\n    else\n      return compare_one(a.x, b.x) or\
    \ compare_one(a.y, b.y)\n    end\n  else\n    return nil\n  end\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return a\n    elseif b > a then\n      return b\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if\
    \ compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return compare_one(a.z,\
    \ b.z)\n    else\n      return nil\n    end\n  else\n    return nil\n  end\nend",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n    \
    \  return a\n    elseif b > a then\n      return b\n    else\n      return a\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return a\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n\
    \    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return a\n\
    \    else\n      return b\n    end\n  elseif type(a) == 'string' and type(b) ==\
    \ 'number' then\n    if tonumber(a) > tonumber(b) then\n      return a\n    else\n\
    \      return b\n    end\n  elseif type(a) == 'number' and type(b) == 'string'\
    \ then\n    if tonumber(a) > tonumber(b) then\n      return a\n    else\n    \
    \  return b\n    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return b\n\
    \    elseif b > a then\n      return a\n    else\n      return nil\n    end\n\
    \  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b) ==\
    \ 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n  \
    \    return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return compare_one(a.z, b.z)\n    else\n      return nil\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if math.abs(a - b) < 1e-15 then\n      return a\n    else\n\
    \      return b\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a == b then\n      return a\n    else\n      return b\n    end\n\
    \  elseif type(a) == 'table' and type(b) == 'table' then\n    if #a == #b then\n\
    \      for i, v in ipairs(a) do\n        if compare_one(v, b[i]) then\n      \
    \    return v\n        end\n      end\n      return nil\n    else\n      return\
    \ nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b) ==\
    \ 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n  \
    \    return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return b\n    elseif\
    \ b > a then\n      return a\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return nil\n    end\n  else\n    return nil\n  end\nend", " \
    \ if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n   \
    \   return a\n    elseif a < b then\n      return b\n    else\n      return nil\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ > b then\n      return b\n    elseif a < b then\n      return a\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table'\
    \ then\n    if compare_one(a.x, b.x) == nil then\n      return compare_one(a.y,\
    \ b.y)\n    else\n      return nil\n    end\n  else\n    return nil\n  end\nend",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n    \
    \  return a\n    elseif b > a then\n      return b\n    else\n      return nil\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ ~= b then\n      return a\n    else\n      return nil\n    end\n  else\n   \
    \ return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n\
    \    if a > b then\n      return a\n    elseif b > a then\n      return b\n  \
    \  else\n      return a\n    end\n  elseif type(a) == 'string' and type(b) ==\
    \ 'string' then\n    if a > b then\n      return a\n    elseif b > a then\n  \
    \    return b\n    else\n      return a\n    end\n  else\n    return nil\n  end\n\
    end", "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n\
    \      return a\n    elseif b > a then\n      return b\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n  \
    \  if a > b then\n      return b\n    elseif b > a then\n      return a\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table'\
    \ then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return\
    \ nil\n    end\n  end\n  return nil\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return nil\n    end\n  end\n  return nil\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if math.abs(a - b) < 1e-10 then\n\
    \      return a\n    end\n  end\n  if type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a == b then\n      return a\n    end\n  end\n  if type(a) == 'table'\
    \ and type(b) == 'table' then\n    if #a == #b then\n      for i = 1, #a do\n\
    \        if compare_one(a[i], b[i]) == nil then\n          return nil\n      \
    \  end\n      end\n      return a\n    end\n  end\n  return nil\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if math.abs(a - b) < 1e-14 then\n\
    \      return a\n    else\n      return b\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a == b then\n      return a\n    else\n\
    \      return b\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n\
    \    if a == b then\n      return a\n    else\n      return b\n    end\n  else\n\
    \    return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a > b then\n      return b\n    elseif a < b then\n      return\
    \ a\n    else\n      return nil\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'string' then\n    if a > b then\n      return b\n    elseif a < b then\n\
    \      return a\n    else\n      return nil\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'table' then\n    if compare_one(a.x, b.x) == nil then\n    \
    \  return compare_one(a.y, b.y)\n    else\n      return nil\n    end\n  else\n\
    \    return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return nil\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'string' then\n    if a > b then\n      return b\n    elseif b > a then\n\
    \      return a\n    else\n      return nil\n    end\n  else\n    return nil\n\
    \  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return nil\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n\
    \      return compare_one(a.z, b.z)\n    else\n      return nil\n    end\n  else\n\
    \    return nil\n  end\nend", "  if type(a) ~= type(b) then return end\n  if type(a)\
    \ == 'number' and b == 'number' then\n    return a > b\n  elseif type(a) == 'string'\
    \ and b == 'string' then\n    return a:lower() > b:lower()\n  elseif type(a) ==\
    \ 'table' and b == 'table' then\n    return compare_table(a, b)\n  else\n    return\
    \ a\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n   \
    \ if math.abs(a - b) < 1e-10 then\n      return a\n    else\n      return b\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ == '.' or b == '.' then\n      return a\n    elseif a:len() > b:len() then\n\
    \      return b\n    else\n      return a\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'table' then\n    if #a == #b then\n      for i = 1, #a do\n\
    \        if compare_one(a[i], b[i]) == nil then\n          return nil\n      \
    \  end\n      end\n      return nil\n    else\n      return nil\n    end\n  else\n\
    \    return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a == b then\n      return a\n    elseif math.abs(a - b) < 1e-10\
    \ then\n      return a\n    else\n      return b\n    end\n  elseif type(a) ==\
    \ 'string' and type(b) == 'string' then\n    if a == b then\n      return a\n\
    \    elseif a:sub(1, 1) == ',' and b:sub(1, 1) == '-' then\n      return a\n \
    \   elseif a:sub(1, 1) == '-' and b:sub(1, 1) == ',' then\n      return b\n  \
    \  elseif a:sub(1, 1) == '-' and b:sub(1, 1) == '-' then\n      return a\n   \
    \ elseif a:sub(1, 1) == ',' and b:sub(1, 1) == ',' then\n      return a\n    elseif\
    \ a:sub(1, 1) == ',' and b:sub(1, 1) == '-' then\n      return b\n    elseif a:sub(1,\
    \ 1) == '-' and b:sub(1, 1) == ',' then\n      return a\n    elseif a:sub(1, 1)\
    \ == '-' and b:sub(1, 1) == '-' then\n      return b\n    else\n      return nil\n\
    \    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if a ==\
    \ b then\n      return a\n    elseif #a == #b then\n      local i = 1\n      while\
    \ i < #a do\n        if compare_one(a[i], b[i]) then\n          return a\n   \
    \     end\n        i = i + 1\n      end\n      return b\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'table' and type(b) == 'number' then\n   \
    \ return compare_one(b, a)\n  elseif type(a) == 'number' and type(b) == 'table'\
    \ then\n    return compare_one(a, b)\n  elseif type(a) == 'string' and type(b)\
    \ == 'table' then\n    return compare_one(a, b)\n  elseif type(a) == 'table' and\
    \ type(b) == 'string' then\n    return compare_one(a, b)\n  else\n    return nil\n\
    \  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if math.abs(a\
    \ - b) < 1e-10 then\n      return a\n    end\n  end\n  if type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a:find(b) then\n      return a\n    end\n\
    \  end\n  return nil\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return nil\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'string' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  else\n    return nil\n\
    \  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ > b then\n      return a\n    elseif a < b then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return a\n    elseif a < b then\n      return\
    \ b\n    else\n      return nil\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'table' then\n    if compare_one(a.x, b.x) == nil then\n      return nil\n\
    \    end\n    if compare_one(a.y, b.y) == nil then\n      return nil\n    end\n\
    \    if compare_one(a.z, b.z) == nil then\n      return nil\n    end\n    return\
    \ compare_one(a.w, b.w)\n  else\n    return nil\n  end\nend", "  if type(a) ==\
    \ 'number' and type(b) == 'number' then\n    if a > b then\n      return a\n \
    \   elseif b > a then\n      return b\n    else\n      return nil\n    end\n \
    \ elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return b\n    elseif b > a then\n      return a\n    else\n      return\
    \ nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return b\n    elseif\
    \ a < b then\n      return a\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return b\n\
    \    elseif a < b then\n      return a\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'table' and type(b) == 'table' then\n    if compare_one(a.x,\
    \ b.x) and compare_one(a.y, b.y) then\n      return nil\n    end\n  end\n  return\
    \ nil\nend", "  if type(a) ~= 'number' or type(b) ~= 'number' then\n    return\
    \ nil\n  end\n  if a == b then\n    return a\n  end\n  if a > b then\n    return\
    \ a\n  end\n  return b\nend", "  if type(a) ~= type(b) then return end\n  if type(a)\
    \ == 'number' and b == 'number' then\n    return a > b\n  elseif type(a) == 'string'\
    \ and b == 'string' then\n    return a:lower() > b:lower()\n  elseif type(a) ==\
    \ 'table' and b == 'table' then\n    return compare_table(a, b)\n  else\n    return\
    \ a\n  end\nend", "  if type(a) ~= type(b) then\n    return nil\n  end\n  if type(a)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ then\n    if a:match('%d*') then\n      if a:match('%d*%d*') then\n        if\
    \ a:match('%d*%d*%d*') then\n          return compare_one(a:match('%d*%d*%d*%d*'),\
    \ b:match('%d*%d*%d*%d*'))\n        end\n      elseif a:match('%d*%d*%d*%d*')\
    \ then\n        return compare_one(a:match('%d*%d*%d*%d*%d*'), b:match('%d*%d*%d*%d*%d*'))\n\
    \      end\n    elseif a:match('%d*%d*%d*%d*%d*') then\n      return compare_one(a:match('%d*%d*%d*%d*%d*%d*'),\
    \ b:match('%d*%d*%d*%d*%d*%d*'))\n    end\n  elseif type(a) == 'table' then\n\
    \    if compare_one(a.x, b.x) == nil then\n      return compare_one(a.y, b.y)\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return compare_one(a.z, b.z)\n    else\n      return nil\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return nil\n    end\n  elseif type(a) == 'userdata' and type(b)\
    \ == 'userdata' then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n\
    \      return nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return a\n    elseif b > a then\n      return b\n    else\n      return\
    \ nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b) ==\
    \ 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n  \
    \    return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return nil\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'number' then\n    if tonumber(a) > tonumber(b) then\n      return a\n  \
    \  elseif tonumber(b) > tonumber(a) then\n      return b\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'number' and type(b) == 'string' then\n  \
    \  if tonumber(a) > tonumber(b) then\n      return a\n    elseif tonumber(b) >\
    \ tonumber(a) then\n      return b\n    else\n      return nil\n    end\n  elseif\
    \ type(a) == 'table' and type(b) == 'string' then\n    if compare_one(a.x, b)\
    \ then\n      return nil\n    end\n  elseif type(a) == 'string' and type(b) ==\
    \ 'table' then\n    if compare_one(a, b) then\n      return nil\n    end\n  elseif\
    \ type(a) == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x)\
    \ and compare_one(a.y, b.y) then\n      return nil\n    end\n  else\n    return\
    \ nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n \
    \   if a > b then\n      return b\n    elseif a < b then\n      return a\n   \
    \ else\n      return nil\n    end\n  elseif type(a) == 'string' and type(b) ==\
    \ 'string' then\n    if a > b then\n      return b\n    elseif a < b then\n  \
    \    return a\n    else\n      return nil\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return nil\n    end\n  else\n    return nil\n  end\nend", " \
    \ if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n   \
    \   return a\n    elseif a < b then\n      return b\n    else\n      return nil\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ > b then\n      return b\n    elseif a < b then\n      return a\n    else\n\
    \      return nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return b\n    elseif b > a then\n      return a\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if\
    \ compare_one(a.x, b.x) == nil then\n      return compare_one(a.y, b.y)\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'string' and type(b) == 'number'\
    \ then\n    if tonumber(a) > tonumber(b) then\n      return a\n    elseif tonumber(b)\
    \ > tonumber(a) then\n      return b\n    else\n      return nil\n    end\n  elseif\
    \ type(a) == 'number' and type(b) == 'string' then\n    if tonumber(a) > tonumber(b)\
    \ then\n      return b\n    elseif tonumber(b) > tonumber(a) then\n      return\
    \ a\n    else\n      return nil\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'string' then\n    if compare_one(a.x, b) == nil then\n      return compare_one(a.y,\
    \ b)\n    else\n      return nil\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'table' then\n    if compare_one(a, b) == nil then\n      return compare_one(a,\
    \ b)\n    else\n      return nil\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'table' then\n    if compare_one(a.x, b.x) == nil then\n      return compare_one(a.y,\
    \ b.y)\n    else\n      return nil\n    end\n  else\n    return nil\n  end\nend",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if a == b then\n   \
    \   return a\n    elseif type(a) == 'string' and type(b) == 'string' then\n  \
    \    if a == b then\n        return a\n      elseif tonumber(a) == tonumber(b)\
    \ then\n        return tonumber(a)\n      else\n        return b\n      end\n\
    \    else\n      return b\n    end\n  elseif type(a) == 'string' and type(b) ==\
    \ 'string' then\n    if a == b then\n      return a\n    elseif tonumber(a) ==\
    \ tonumber(b) then\n      return tonumber(a)\n    else\n      return b\n    end\n\
    \  else\n    return b\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return a\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'string' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return a\n    end\n  else\n    return a\n  end\n\
    end", "  if type(a) == 'number' and type(b) == 'number' then\n    if a == b then\n\
    \      return a\n    elseif type(a) == 'string' and type(b) == 'string' then\n\
    \      if a == b then\n        return a\n      elseif a:find(',') ~= nil then\n\
    \        return b\n      else\n        return a\n      end\n    end\n  end\nend",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n    \
    \  return a\n    elseif b > a then\n      return b\n    else\n      return nil\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table'\
    \ then\n    if compare_one(a.x, b.x) == nil then\n      return compare_one(a.y,\
    \ b.y)\n    else\n      return nil\n    end\n  else\n    return nil\n  end\nend",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n    \
    \  return a\n    elseif b > a then\n      return b\n    else\n      return nil\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return a\n    end\n  elseif\
    \ type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n      return\
    \ a\n    elseif b > a then\n      return b\n    else\n      return a\n    end\n\
    \  else\n    return a\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if math.abs(a - b) < 1e-10 then\n      return a\n    end\n  end\n\
    \  if type(a) == 'string' and type(b) == 'string' then\n    if a == b then\n \
    \     return a\n    end\n  end\n  return nil\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if math.abs(a - b) < 1e-15 then\n      return\
    \ a\n    end\n  end\n  if type(a) == 'string' and type(b) == 'string' then\n \
    \   if a == '.' or b == '.' then\n      return a\n    end\n  end\n  if type(a)\
    \ == 'table' and type(b) == 'table' then\n    if #a == #b then\n      for i =\
    \ 1, #a do\n        if compare_one(a[i], b[i]) then\n          return a\n    \
    \    end\n      end\n    end\n  end\n  return nil\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a == b then\n      return a\n    else\n\
    \      return b\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a == b then\n      return a\n    else\n      return b\n    end\n\
    \  elseif type(a) == 'table' and type(b) == 'table' then\n    if a == b then\n\
    \      return a\n    else\n      return b\n    end\n  else\n    return nil\n \
    \ end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if math.abs(a\
    \ - b) < 1e-15 then\n      return nil\n    else\n      return b\n    end\n  elseif\
    \ type(a) == 'string' and type(b) == 'string' then\n    if a:sub(1, 1) == '\"\
    ' and b:sub(1, 1) == '\"' then\n      if a:sub(2, -2) == b:sub(2, -2) then\n \
    \       return compare_one(a:sub(2, -2), b:sub(2, -2))\n      else\n        return\
    \ nil\n      end\n    elseif a:sub(1, 1) == '\"' and b:sub(1, 1) ~= '\"'\n   \
    \ or a:sub(1, 1) ~= '\"'\n    or b:sub(1, 1) == '\"' then\n      return compare_one(a:sub(1,\
    \ -1), b:sub(1, -1))\n    elseif a:sub(1, 1) ~= '\"'\n    or b:sub(1, 1) ~= '\"\
    '\n    or a:sub(1, 1) == '\"' and b:sub(1, -1) == '\"' then\n      return compare_one(a:sub(1,\
    \ -1), b:sub(1, -2))\n    elseif a:sub(1, 1) ~= '\"'\n    or b:sub(1, 1) ~= '\"\
    '\n    or a:sub(1, 1) == '\"' and b:sub(1, -1) == '\"' then\n      return compare_one(a:sub(1,\
    \ -1), b:sub(1, -2))\n    elseif a:sub(1, 1) ~= '\"'\n    or b:sub(1, 1) ~= '\"\
    '\n    or a:sub(1, 1) == '\"' and b:sub(1, -1) == '\"' then\n      return compare_one(a:sub(1,\
    \ -1), b:sub(1, -2))\n    elseif a:sub(1, 1) ~= '\"'\n    or b:sub(1, 1) ~= '\"\
    '\n    or a:sub(1, 1) == '\"' and b:sub(1, -1) == '\"' then\n      return compare_one(a:sub(1,\
    \ -1), b:sub(1, -2))\n    elseif a:sub(1, 1) ~= '\"'\n    or b:sub(1, 1) ~= '\"\
    '\n    or a:sub(1, 1) == '\"' and b:sub(1, -1) == '\"' then\n      return compare_one(a:sub(1,\
    \ -1), b:sub(1, -2))\n    elseif a:sub(1, 1) ~= '\"'\n    or b:sub(1, 1) ~= '\"\
    '\n    or a:sub(1, 1) == '\"' and b:sub(1, -1) == '\"' then\n      return compare_one(a:sub(1,\
    \ -1), b:sub(1, -2))\n    elseif a:sub(1, 1) ~= '\"'\n    or b:sub(1, 1) ~= '\"\
    '\n    or a:sub(1, 1) == '\"' and b:sub(1, -1) == '\"' then\n      return compare_one(a:sub(1,\
    \ -1), b:", "  if type(a) ~= 'number' or type(b) ~= 'number' then\n    return\
    \ nil\n  end\n  if a == b then\n    return a\n  elseif type(a) == 'number' and\
    \ type(b) == 'number' then\n    if math.abs(a - b) < 1e-10 then\n      return\
    \ a\n    else\n      return b\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'string' then\n    if a:sub(1, 1) == b:sub(1, 1) then\n      return a\n \
    \   else\n      return b\n    end\n  else\n    return nil\n  end\nend", "  if\
    \ type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n      return\
    \ a\n    elseif a < b then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a ~= b then\n\
    \      return a\n    else\n      return nil\n    end\n  else\n    return nil\n\
    \  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return a\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return a\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n\
    \      return a\n    else\n      return b\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'number' then\n    if tonumber(a) > tonumber(b) then\n      return\
    \ a\n    elseif tonumber(b) > tonumber(a) then\n      return b\n    else\n   \
    \   return a\n    end\n  elseif type(a) == 'number' and type(b) == 'string' then\n\
    \    if tonumber(a) > tonumber(b) then\n      return a\n    elseif tonumber(b)\
    \ > tonumber(a) then\n      return b\n    else\n      return a\n    end\n  elseif\
    \ type(a) == 'table' and type(b) == 'string' then\n    if compare_one(a.x, b)\
    \ then\n      return a\n    else\n      return b\n    end\n  elseif type(a) ==\
    \ 'string' and type(b) == 'table' then\n    if compare_one(a, b) then\n      return\
    \ a\n    else\n      return b\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n\
    \      return a\n    else\n      return b\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'number' then\n    if compare_one(a.x, b) then\n      return\
    \ a\n    else\n      return b\n    end\n  else\n    return nil\n  end\nend", " \
    \ if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n   \
    \   return a\n    elseif b > a then\n      return b\n    else\n      return nil\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return a\n    elseif b > a then\n      return b\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if\
    \ compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return nil\n   \
    \ end\n  end\n  return nil\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if math.abs(a - b) < 1e-10 then\n      return a\n    else\n      return\
    \ b\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if\
    \ a == b then\n      return a\n    else\n      return b\n    end\n  else\n   \
    \ return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n\
    \    if a > b then\n      return a\n    elseif b > a then\n      return b\n  \
    \  else\n      return nil\n    end\n  elseif type(a) == 'string' and type(b) ==\
    \ 'string' then\n    if a > b then\n      return b\n    elseif b > a then\n  \
    \    return a\n    else\n      return nil\n    end\n  else\n    return nil\n \
    \ end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ > b then\n      return a\n    elseif a < b then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a:sub(1, 1) == '\"' and b:sub(1, 1) == '\"' then\n      local a_str\
    \ = a:sub(2)\n      local b_str = b:sub(2)\n      if a_str == b_str then\n   \
    \     return compare_one(a_str, b_str)\n      else\n        return a_str\n   \
    \   end\n    elseif a:sub(1, 1) == '\"' then\n      return compare_one(b, a:sub(2))\n\
    \    elseif b:sub(1, 1) == '\"' then\n      return compare_one(a, b:sub(2))\n\
    \    else\n      return nil\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'table' then\n    if a[1] == b[1] then\n      if a[2] ~= b[2] then\n    \
    \    return compare_one(a[2], b[2])\n      else\n        return compare_one(a[1],\
    \ b[1])\n      end\n    else\n      return nil\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'number' then\n    return compare_one(a[1], b)\n  elseif type(a)\
    \ == 'number' and type(b) == 'table' then\n    return compare_one(a, b[1])\n \
    \ elseif type(a) == 'string' and type(b) == 'table' then\n    return compare_one(a,\
    \ b[1])\n  elseif type(a) == 'table' and type(b) == 'string' then\n    return\
    \ compare_one(a[1], b)\n  elseif type(a) == 'string' and type(b) == 'string' then\n\
    \    return compare_one(a, b)\n  else\n    return nil\n  end\nend", "  if type(a)\
    \ ~= 'number' or type(b) ~= 'number' then\n    return nil\n  end\n  if a == b\
    \ then\n    return a\n  elseif type(a) == 'number' and type(b) == 'string' then\n\
    \    return a\n  elseif type(b) == 'number' and type(a) == 'string' then\n   \
    \ return b\n  elseif type(a) == 'string' and type(b) == 'string' then\n    return\
    \ compare_one(a:match('^%d(.+)$'), b:match('^%d(.+)$'))\n  else\n    return nil\n\
    \  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return nil\n    end\n  else\n    return nil\n  end\nend",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n    \
    \  return a\n    elseif b > a then\n      return b\n    else\n      return nil\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table'\
    \ then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return\
    \ nil\n    end\n  end\n  return nil\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  else\n  \
    \  return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a == b then\n      return a\n    end\n  end\n  if type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a:find(b) then\n      return a\n    end\n\
    \  end\n  if type(a) == 'table' and type(b) == 'table' then\n    if a:size() ==\
    \ b:size() then\n      for i = 1, a:size() do\n        if compare_one(a[i], b[i])\
    \ then\n          return a\n        end\n      end\n    end\n  end\n  return nil\n\
    end", "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n\
    \      return a\n    elseif b > a then\n      return b\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n  \
    \  if a ~= b then\n      return a\n    else\n      return nil\n    end\n  elseif\
    \ type(a) == 'table' and type(b) == 'table' then\n    if #a ~= #b then\n     \
    \ return a\n    else\n      for i, v in ipairs(a) do\n        if compare_one(v,\
    \ b[i]) then\n          return b[i]\n        end\n      end\n      return nil\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a > b then\n      return b\n    elseif a < b then\n\
    \      return a\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return b\n    elseif\
    \ a < b then\n      return a\n    else\n      return nil\n    end\n  else\n  \
    \  return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return nil\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'string' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return nil\n    end\n  else\n    return nil\n  end\nend", " \
    \ if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n   \
    \   return a\n    elseif b > a then\n      return b\n    else\n      return nil\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ > b then\n      return b\n    elseif b > a then\n      return a\n    else\n\
    \      return nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return a\n    elseif b > a then\n      return b\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if\
    \ compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return nil\n   \
    \ end\n  end\n  return nil\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a == b then\n      return a\n    elseif type(a) == 'string' and\
    \ type(b) == 'string' then\n      if a == b then\n        return a\n      elseif\
    \ a:find(',') ~= nil then\n        a = a:gsub(',', '.')\n      end\n      if b:find(',')\
    \ ~= nil then\n        b = b:gsub(',', '.')\n      end\n      if a == b then\n\
    \        return a\n      else\n        return nil\n      end\n    elseif type(a)\
    \ == 'string' and type(b) == 'table' then\n      if a:find(',') ~= nil then\n\
    \        a = a:gsub(',', '.')\n      end\n      if b[1]:find(',') ~= nil then\n\
    \        b = b[1]:gsub(',', '.')\n      end\n      if a == b then\n        return\
    \ a\n      else\n        return nil\n      end\n    elseif type(b) == 'number'\
    \ and type(a) == 'table' then\n      if b[1] == a then\n        return b\n   \
    \   else\n        return nil\n      end\n    elseif type(a) == 'table' and type(b)\
    \ == 'table' then\n      if a[1] == b[1] then\n        if a[2] == b[2] then\n\
    \          if a[3] == b[3] then\n            if a[4] == b[4] then\n          \
    \    if a[5] == b[5] then\n                if a[6] == b[6] then\n            \
    \      if a[7] == b[7] then\n                    if a[8] == b[8] then\n      \
    \                if a[9] == b[9] then\n                        if a[10] == b[10]\
    \ then\n                          return a[11]\n                        else\n\
    \                          return nil\n                        end\n         \
    \             else\n                        return nil\n                     \
    \ end\n                    else\n                      return nil\n          \
    \          end\n                  else\n                    return nil\n     \
    \             end\n                else\n                  return nil\n      \
    \          end\n              else\n                return nil\n             \
    \ end\n            else\n              return nil\n            end\n         \
    \ else\n            return nil\n          end\n        else\n          return\
    \ nil\n        end\n      else\n        return nil\n      end\n    else\n    \
    \  return nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a) ==\
    \ 'number' and type(b) == 'number' then\n    if a == b then\n      return a\n\
    \    else\n      return b\n    end\n  elseif type(a) == 'string' and type(b) ==\
    \ 'string' then\n    if a == b then\n      return a\n    else\n      return b\n\
    \    end\n  else\n    return a\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if math.abs(a - b) < 1e-10 then\n      return a\n    else\n\
    \      return b\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a == b then\n      return a\n    else\n      return b\n    end\n\
    \  elseif type(a) == 'table' and type(b) == 'table' then\n    if #a == #b then\n\
    \      for i = 1, #a do\n        if compare_one(a[i], b[i]) == nil then\n    \
    \      return nil\n        end\n      end\n      return a\n    else\n      return\
    \ nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'table' and type(b) == 'table' then\n    if compare_one(a.x,\
    \ b.x) and compare_one(a.y, b.y) then\n      return nil\n    end\n  end\n  return\
    \ nil\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return nil\n    end\n  else\n    return nil\n  end\nend",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n    \
    \  return a\n    elseif b > a then\n      return b\n    else\n      return nil\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ ~= b then\n      return a\n    else\n      return nil\n    end\n  else\n   \
    \ return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n\
    \    if math.abs(a - b) < 1e-10 then\n      return a\n    else\n      return b\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ ~= b then\n      return b\n    else\n      return a\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if #a == #b then\n      for i =\
    \ 1, #a do\n        if compare_one(a[i], b[i]) then\n          return b\n    \
    \    end\n      end\n      return a\n    else\n      return nil\n    end\n  else\n\
    \    return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return nil\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'string' then\n    if a > b then\n      return b\n    elseif b > a then\n\
    \      return a\n    else\n      return nil\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return compare_one(a.z, b.z)\n    else\n      return nil\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif a < b then\n\
    \      return b\n    else\n      return a\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return a\n    elseif\
    \ a < b then\n      return b\n    else\n      return a\n    end\n  else\n    return\
    \ a\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n   \
    \ if a > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return nil\n    end\n  else\n    return nil\n  end\nend",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n    \
    \  return a\n    elseif a < b then\n      return b\n    else\n      return a\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ > b then\n      return b\n    elseif a < b then\n      return a\n    else\n\
    \      return a\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n\
    \    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return a\n\
    \    else\n      return b\n    end\n  elseif type(a) == 'string' and type(b) ==\
    \ 'number' then\n    if tonumber(a) > tonumber(b) then\n      return a\n    else\n\
    \      return b\n    end\n  elseif type(a) == 'number' and type(b) == 'string'\
    \ then\n    if tonumber(a) > tonumber(b) then\n      return b\n    else\n    \
    \  return a\n    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a == b then\n      return a\n    else\n\
    \      return b\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a == b then\n      return a\n    else\n      return b\n    end\n\
    \  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b) ==\
    \ 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n  \
    \    return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return b\n    elseif\
    \ b > a then\n      return a\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return nil\n    end\n  else\n    return nil\n  end\nend", " \
    \ if type(a) == 'number' and type(b) == 'number' then\n    if a == b then\n  \
    \    return a\n    else\n      return b\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a == b then\n      return a\n    else\n\
    \      return b\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n\
    \    if #a == #b then\n      for i = 1, #a do\n        if compare_one(a[i], b[i])\
    \ then\n          return a\n        end\n      end\n    else\n      return nil\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) ~= 'number' or type(b)\
    \ ~= 'number' then\n    return nil\n  end\n  if a == b then\n    return a\n  elseif\
    \ type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n      return\
    \ a\n    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a ~= b then\n\
    \      return a\n    else\n      return nil\n    end\n  else\n    return nil\n\
    \  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return a\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return a\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n\
    \      return a\n    else\n      return b\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'number' then\n    if compare_one(a.x, b) then\n      return\
    \ a\n    else\n      return b\n    end\n  elseif type(a) == 'number' and type(b)\
    \ == 'table' then\n    if compare_one(a, b) then\n      return a\n    else\n \
    \     return b\n    end\n  elseif type(a) == 'string' and type(b) == 'table' then\n\
    \    if compare_one(a, b) then\n      return a\n    else\n      return b\n   \
    \ end\n  elseif type(a) == 'table' and type(b) == 'string' then\n    if compare_one(a.x,\
    \ b) then\n      return a\n    else\n      return b\n    end\n  else\n    return\
    \ nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n \
    \   if a == b then\n      return a\n    else\n      return b\n    end\n  elseif\
    \ type(a) == 'string' and type(b) == 'string' then\n    if a == b then\n     \
    \ return a\n    else\n      return b\n    end\n  elseif type(a) == 'table' and\
    \ type(b) == 'table' then\n    if #a == #b then\n      for i = 1, #a do\n    \
    \    if compare_one(a[i], b[i]) then\n          return a\n        end\n      end\n\
    \      return b\n    else\n      return b\n    end\n  else\n    return b\n  end\n\
    end", "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n\
    \      return a\n    elseif b > a then\n      return b\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n  \
    \  if a > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table'\
    \ then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return\
    \ nil\n    end\n  elseif type(a) == 'userdata' and type(b) == 'userdata' then\n\
    \    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return nil\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a == b then\n      return a\n    else\n      return\
    \ b\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if\
    \ a == b then\n      return a\n    else\n      return b\n    end\n  else\n   \
    \ return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n\
    \    if a > b then\n      return a\n    elseif b > a then\n      return b\n  \
    \  else\n      return nil\n    end\n  elseif type(a) == 'string' and type(b) ==\
    \ 'string' then\n    if a ~= b then\n      return a\n    else\n      return nil\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a == b then\n      return a\n    else\n      return\
    \ b\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if\
    \ a == b then\n      return a\n    else\n      return b\n    end\n  else\n   \
    \ return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n\
    \    if a == b then\n      return a\n    else\n      return b\n    end\n  elseif\
    \ type(a) == 'string' and type(b) == 'string' then\n    if a == b then\n     \
    \ return a\n    else\n      return b\n    end\n  elseif type(a) == 'table' and\
    \ type(b) == 'table' then\n    if a == b then\n      return a\n    else\n    \
    \  return b\n    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b) ==\
    \ 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n  \
    \    return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return compare_one(a.z, b.z)\n    else\n      return nil\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return nil\n    end\n  else\n    return nil\n  end\nend", " \
    \ if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n   \
    \   return a\n    elseif b > a then\n      return b\n    else\n      return nil\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table'\
    \ then\n    if compare_one(a.x, b.x) == nil then\n      return compare_one(a.y,\
    \ b.y)\n    else\n      return compare_one(a.z, b.z)\n    end\n  else\n    return\
    \ nil\n  end\nend", "  if type(a) ~= type(b) then\n    return nil\n  end\n  if\
    \ type(a) == 'number' then\n    if a < b then\n      return a\n    else\n    \
    \  return b\n    end\n  else\n    if a ~= b then\n      return a\n    end\n  end\n\
    end", "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n\
    \      return a\n    elseif b > a then\n      return b\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n  \
    \  if a > b then\n      return b\n    elseif b > a then\n      return a\n    else\n\
    \      return nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a > b then\n      return a\n\
    \    elseif a < b then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return b\n    elseif a < b then\n      return a\n    else\n      return\
    \ nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b) ==\
    \ 'number' then\n    if a == b then\n      return a\n    elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n      if a:sub(1, 1) == b:sub(1, 1) then\n   \
    \     return a\n      else\n        return b\n      end\n    else\n      return\
    \ b\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if\
    \ a:sub(1, 1) == b:sub(1, 1) then\n      return a\n    else\n      return b\n\
    \    end\n  else\n    return b\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return b\n    elseif\
    \ b > a then\n      return a\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return compare_one(a.z, b.z)\n    else\n      return nil\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a == b then\n      return a\n    elseif math.abs(a\
    \ - b) < 1e-6 then\n      return a\n    else\n      return b\n    end\n  elseif\
    \ type(a) == 'string' and type(b) == 'string' then\n    if a == b then\n     \
    \ return a\n    elseif a:sub(1, 1) == '-' and b:sub(1, 1) == '-' then\n      return\
    \ compare_one(a:sub(2, -1), b:sub(2, -1))\n    elseif a:sub(1, 1) == '-' and b:sub(1,\
    \ 1) ~= '-' then\n      return compare_one(a:sub(1, -1), b:sub(1, -1))\n    elseif\
    \ a:sub(1, 1) ~= '-' and b:sub(1, 1) == '-' then\n      return compare_one(a:sub(1,\
    \ -1), b:sub(2, -1))\n    elseif a:sub(1, 1) ~= '-' and b:sub(1, 1) ~= '-' then\n\
    \      return compare_one(a:sub(2, -1), b:sub(1, -1))\n    elseif a:sub(1, 1)\
    \ == '-' and b:sub(1, 1) == '-' then\n      return compare_one(a:sub(2, -1), b:sub(2,\
    \ -1))\n    elseif a:sub(1, 1) == '-' and b:sub(1, 1) ~= '-' then\n      return\
    \ compare_one(a:sub(1, -1), b:sub(1, -1))\n    elseif a:sub(1, 1) ~= '-' and b:sub(1,\
    \ 1) == '-' then\n      return compare_one(a:sub(1, -1), b:sub(2, -1))\n    elseif\
    \ a:sub(1, 1) ~= '-' and b:sub(1, 1) ~= '-' then\n      return compare_one(a:sub(2,\
    \ -1), b:sub(1, -1))\n    elseif a:sub(1, 1) == '-' and b:sub(1, 1) == '-' then\n\
    \      return compare_one(a:sub(2, -1), b:sub(2, -1))\n    elseif a:sub(1, 1)\
    \ == '-' and b:sub(1, 1) ~= '-' then\n      return compare_one(a:sub(1, -1), b:sub(1,\
    \ -1))\n    elseif a:sub(1, 1) ~= '-' and b:sub(1, 1) == '-' then\n      return\
    \ compare_one(a:sub(1, -1), b:sub(2, -1))\n    elseif a:sub(1, 1) ~= '-' and b:sub(1,\
    \ 1) ~= '-' then\n      return compare_one(a:sub(2, -1), b:sub(1, -1))\n    elseif\
    \ a:sub(1, 1) == '-' and b:sub(1, 1) == '-' then\n      return compare_one(a:sub(2,\
    \ -1), b:sub(2, -1))\n    elseif a:sub(1, 1) == '-' and b:sub(1, 1) ~= '-' then\n\
    \      return compare_one(a:sub(1, -1), b:sub(1, -1))\n", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return b\n\
    \    elseif b > a then\n      return a\n    else\n      return nil\n    end\n\
    \  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b) ==\
    \ 'number' then\n    if math.abs(a - b) < 1e-10 then\n      return true\n    end\n\
    \  end\n  if type(a) == 'string' and type(b) == 'string' then\n    if a:sub(1,\
    \ -1) == b:sub(1, -1) then\n      return true\n    end\n  end\n  if type(a) ==\
    \ 'table' and type(b) == 'table' then\n    if #a == #b then\n      for i = 1,\
    \ #a do\n        if compare_one(a[i], b[i]) then\n          return true\n    \
    \    end\n      end\n    end\n  end\n  return false\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b) ==\
    \ 'number' then\n    if a == b then\n      return a\n    else\n      return b\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ == b then\n      return a\n    else\n      return b\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if a == b then\n      return a\n\
    \    else\n      return b\n    end\n  else\n    return nil\n  end\nend", "  if\
    \ type(a) ~= type(b) then\n    return nil\n  elseif type(a) == 'number' then\n\
    \    if a > b then\n      return a\n    elseif a < b then\n      return b\n  \
    \  else\n      return nil\n    end\n  elseif type(a) == 'string' then\n    if\
    \ a:match('%d*') then\n      a = tonumber(a)\n    elseif a:match('%f*') then\n\
    \      a = tonumber(a, 16)\n    elseif a:match('%x*') then\n      a = tonumber(a,\
    \ 16)\n    elseif a:match('%d+') then\n      a = tonumber(a, 10)\n    elseif a:match('%d-')\
    \ then\n      a = tonumber(a, 10)\n    elseif a:match('%d*%d*') then\n      a\
    \ = tonumber(a, 16)\n    elseif a:match('%d*%d+') then\n      a = tonumber(a,\
    \ 16)\n    elseif a:match('%d*%d-') then\n      a = tonumber(a, 16)\n    elseif\
    \ a:match('%d*%d*%d*') then\n      a = tonumber(a, 32)\n    elseif a:match('%d*%d*%d+')\
    \ then\n      a = tonumber(a, 32)\n    elseif a:match('%d*%d*%d-') then\n    \
    \  a = tonumber(a, 32)\n    elseif a:match('%d*%d*%d*%d*') then\n      a = tonumber(a,\
    \ 64)\n    elseif a:match('%d*%d*%d*%d+') then\n      a = tonumber(a, 64)\n  \
    \  elseif a:match('%d*%d*%d*%d-') then\n      a = tonumber(a, 64)\n    elseif\
    \ a:match('%d*%d*%d*%d*%d*') then\n      a = tonumber(a, 128)\n    elseif a:match('%d*%d*%d*%d*%d+')\
    \ then\n      a = tonumber(a, 128)\n    elseif a:match('%d*%d*%d*%d*%d-') then\n\
    \      a = tonumber(a, 128)\n    elseif a:match('%d*%d*%d*%d*%d*%d*') then\n \
    \     a = tonumber(a, 256)\n    elseif a:match('%d*%d*%d*%d*%d*%d+') then\n  \
    \    a = tonumber(a, 256)\n    elseif a:match('%d*%d*%d*%d*%d*%d-') then\n   \
    \   a = tonumber(a, 256)\n    elseif a:match('", "  if type(a) ~= type(b) then\n\
    \    return nil\n  elseif type(a) == 'number' then\n    if a < b then\n      return\
    \ a\n    elseif a > b then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'string' then\n    if a ~= b then\n      if a:sub(1, 1) ==\
    \ '\"' then\n        a = a:sub(2)\n      elseif a:sub(1, 1) == '-' then\n    \
    \    a = a:sub(2)\n      elseif a:sub(1, 1) == '(' then\n        a = a:sub(2)\n\
    \      elseif a:sub(1, 1) == ')' then\n        a = a:sub(2)\n      else\n    \
    \    a = a:sub(1)\n      end\n      if a:sub(1, 1) == '\"' then\n        a = a:sub(2)\n\
    \      elseif a:sub(1, 1) == '-' then\n        a = a:sub(2)\n      elseif a:sub(1,\
    \ 1) == '(' then\n        a = a:sub(2)\n      elseif a:sub(1, 1) == ')' then\n\
    \        a = a:sub(2)\n      else\n        a = a:sub(1)\n      end\n      if a:sub(1,\
    \ 1) == '\"' then\n        a = a:sub(2)\n      elseif a:sub(1, 1) == '-' then\n\
    \        a = a:sub(2)\n      elseif a:sub(1, 1) == '(' then\n        a = a:sub(2)\n\
    \      elseif a:sub(1, 1) == ')' then\n        a = a:sub(2)\n      else\n    \
    \    a = a:sub(1)\n      end\n      if a:sub(1, 1) == '\"' then\n        a = a:sub(2)\n\
    \      elseif a:sub(1, 1) == '-' then\n        a = a:sub(2)\n      elseif a:sub(1,\
    \ 1) == '(' then\n        a = a:sub(2)\n      elseif a:sub(1, 1) == ')' then\n\
    \        a = a:sub(2)\n      else\n        a = a:sub(1)\n      end\n      if a:sub(1,\
    \ 1) == '\"' then\n        a = a:sub(2)\n      elseif a:sub(1, 1) == '-' then\n\
    \        a = a:sub(2)\n      elseif a:sub(1, 1) == '(' then\n        a = a:sub(2)\n\
    \      elseif a:sub(1, 1) == ')' then\n        a = a:sub(2)\n      else\n    \
    \    a = a:sub(1)\n      end\n      if a:sub(1, 1) == '\"' then\n        a = a:sub(2)\n\
    \      elseif a:sub(1, 1) == '-' then\n        a = a:sub(2)\n      elseif a:sub(1,\
    \ 1) == '(' then\n        a = a:sub(2)\n      elseif a:sub(1, 1) == ')' then\n\
    \        a = a:sub(2)\n      else\n        a = a:sub(1)", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b) ==\
    \ 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n  \
    \    return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  else\n  \
    \  return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return nil\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'string' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return nil\n    end\n  end\n  return nil\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return a\n    elseif b > a then\n      return b\n    else\n      return\
    \ nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a) ~= type(b)\
    \ then\n    return nil\n  end\n  if type(a) == 'number' then\n    if a < b then\n\
    \      return a\n    elseif b < a then\n      return b\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'string' then\n    if a:match('%d*') then\n\
    \      a = tonumber(a)\n    elseif a:match('%f*') then\n      a = tonumber(a,\
    \ 16)\n    elseif a:match('%f') then\n      a = tonumber(a, 10)\n    end\n   \
    \ if a:match('%d*') then\n      a = tonumber(a)\n    elseif a:match('%f*') then\n\
    \      a = tonumber(a, 16)\n    elseif a:match('%f') then\n      a = tonumber(a,\
    \ 10)\n    end\n    if a < b then\n      return a\n    elseif b < a then\n   \
    \   return b\n    else\n      return nil\n    end\n  elseif type(a) == 'table'\
    \ then\n    if a[1] < b[1] then\n      return a\n    elseif b[1] < a[1] then\n\
    \      return b\n    else\n      return nil\n    end\n  else\n    return nil\n\
    \  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ == b then\n      return a\n    else\n      return b\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a == b then\n      return a\n\
    \    else\n      return b\n    end\n  else\n    return nil\n  end\nend", "  if\
    \ type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n      return\
    \ a\n    elseif a < b then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return b\n    elseif a < b then\n      return a\n    else\n      return\
    \ nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'table' and type(b) == 'table' then\n    if compare_one(a.x,\
    \ b.x) and compare_one(a.y, b.y) then\n      return nil\n    end\n  else\n   \
    \ return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n\
    \    if a == b then\n      return a\n    elseif math.abs(a - b) < 1e-15 then\n\
    \      return a\n    else\n      return b\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a == b then\n      return a\n    elseif\
    \ a:sub(1, -1) == b:sub(1, -1) then\n      return a\n    else\n      return b\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a == b then\n      return a\n    else\n      return\
    \ b\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if\
    \ a == b then\n      return a\n    else\n      return b\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if a == b then\n      return a\n\
    \    else\n      return b\n    end\n  else\n    return nil\n  end\nend", "  if\
    \ type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n      return\
    \ a\n    elseif a < b then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return b\n    elseif a < b then\n      return a\n    else\n      return\
    \ nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a) ~= type(b)\
    \ then return nil end\n  if type(a) == 'number' then\n    if a > b then return\
    \ b end\n    if a == b then return nil end\n  end\n  if type(a) == 'string' then\n\
    \    if a ~= b then return b end\n  end\n  return a\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'table' and type(b) == 'table' then\n    if compare_one(a.x,\
    \ b.x) and compare_one(a.y, b.y) then\n      return nil\n    end\n  end\n  return\
    \ nil\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return b\n    elseif b > a then\n      return\
    \ a\n    else\n      return nil\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n\
    \      return compare_one(a.z, b.z)\n    else\n      return nil\n    end\n  else\n\
    \    return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return nil\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'string' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  else\n    return nil\n\
    \  end\nend", "  if type(a) ~= type(b) then return nil end\n  if type(a) == 'number'\
    \ then\n    if a < b then return b end\n    if a == b then return nil end\n  end\n\
    \  if type(a) == 'string' then\n    if a:match('%d*\\.%d*') then\n      if a:match('%d*,%d*')\
    \ then\n        if a:match('%d*,%d*,%d*') then\n          if a:match('%d*,%d*,%d*,%d*')\
    \ then\n            if a:match('%d*,%d*,%d*,%d*,%d*') then\n              return\
    \ a\n            end\n          end\n        end\n      end\n    end\n  end\n\
    \  return a\nend", "  if type(a) == 'number' and type(b) == 'number' then\n  \
    \  if a > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return nil\n    end\n  else\n    return nil\n  end\nend",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if a == b then\n   \
    \   return a\n    else\n      return b\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a == b then\n      return a\n    else\n\
    \      return b\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n\
    \    if a == b then\n      return a\n    else\n      return b\n    end\n  elseif\
    \ type(a) == 'string' and type(b) == 'number' then\n    if tonumber(a) == tonumber(b)\
    \ then\n      return a\n    else\n      return b\n    end\n  elseif type(a) ==\
    \ 'number' and type(b) == 'string' then\n    if tonumber(a) == tonumber(b) then\n\
    \      return a\n    else\n      return b\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'string' then\n    if a == b then\n      return a\n    else\n\
    \      return b\n    end\n  else\n    return nil\n  end\nend", "  if type(a) ==\
    \ 'number' and type(b) == 'number' then\n    if a > b then\n      return a\n \
    \   elseif b > a then\n      return b\n    else\n      return nil\n    end\n \
    \ elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return a\n    elseif b > a then\n      return b\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if\
    \ compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return nil\n   \
    \ end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a == b then\n      return a\n    else\n      return\
    \ b\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if\
    \ a == b then\n      return a\n    elseif a:find(',') ~= -1 and b:find(',') ~=\
    \ -1 then\n      return a\n    else\n      return b\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if a == b then\n      return a\n\
    \    else\n      return b\n    end\n  else\n    return nil\n  end\nend", "  if\
    \ type(a) == 'number' and type(b) == 'number' then\n    if math.abs(a - b) < 1e-10\
    \ then\n      return a\n    else\n      return b\n    end\n  elseif type(a) ==\
    \ 'string' and type(b) == 'string' then\n    if a == '.' and b == ',' then\n \
    \     return b\n    elseif b == '.' and a == ',' then\n      return a\n    else\n\
    \      if tonumber(a) > tonumber(b) then\n        return a\n      else\n     \
    \   return b\n      end\n    end\n  else\n    return nil\n  end\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n\
    \      return b\n    elseif b > a then\n      return a\n    else\n      return\
    \ nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return b\n    elseif\
    \ a < b then\n      return a\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return b\n\
    \    elseif a < b then\n      return a\n    else\n      return nil\n    end\n\
    \  else\n    return nil\n  end\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

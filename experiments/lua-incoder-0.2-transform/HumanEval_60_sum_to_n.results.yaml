language: lua
name: HumanEval_60_sum_to_n
results:
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  if n == 1 then return 1 end\n  return n * sum_to_n(n - 1)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_to_n\n\
    \    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6), 21)\n\
    \    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30), 465)\n\
    \    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8m503wmx.lua:22:\
    \ expected: 21, actual: 720\nstack traceback:\n\t/tmp/tmp8m503wmx.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 0\n  end\n  local n1 = n - 1\n  local n2 = n - 2\n  local n3 = n -\
    \ 3\n  local n4 = n - 4\n  local n5 = n - 5\n  local n6 = n - 6\n  local n7 =\
    \ n - 7\n  local n8 = n - 8\n  local n9 = n - 9\n  local n10 = n - 10\n  local\
    \ n11 = n - 11\n  local n12 = n - 12\n  local n13 = n - 13\n  local n14 = n -\
    \ 14\n  local n15 = n - 15\n  local n16 = n - 16\n  local n17 = n - 17\n  local\
    \ n18 = n - 18\n  local n19 = n - 19\n  local n20 = n - 20\n  local n21 = n -\
    \ 21\n  local n22 = n - 22\n  local n23 = n - 23\n  local n24 = n - 24\n  local\
    \ n25 = n - 25\n  local n26 = n - 26\n  local n27 = n - 27\n  local n28 = n -\
    \ 28\n  local n29 = n - 29\n  local n30 = n - 30\n  return n1 + n2 + n3 + n4 +\
    \ n5 + n6 + n7 + n8 + n9 + n10 + n11 + n12 + n13 + n14 + n15 + n16 + n17 + n18\
    \ + n19 + n20 + n21 + n22 + n23 + n24 + n25 + n26 + n27 + n28 + n29 + n30\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_to_n\n\
    \    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6), 21)\n\
    \    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30), 465)\n\
    \    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr4n1xbgt.lua:52:\
    \ expected: 1, actual: -435\nstack traceback:\n\t/tmp/tmpr4n1xbgt.lua:52: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750259
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n <= 0 then\n\
    \    return 0\n  end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 1 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local sum = 0\n\
    \  for i = 1, n do\n    sum = sum + i\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750218
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n <= 0 then\n\
    \    return 0\n  end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = n\n \
    \ while n > 1 do\n    s = s + n\n    n = n - 1\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpszuaov3q.lua:25:\
    \ expected: 21, actual: 26\nstack traceback:\n\t/tmp/tmpszuaov3q.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n <= 0 then\n\
    \    return 0\n  end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  if n == 1 then return 1 end\n  return n * sum_to_n(n - 1)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_to_n\n\
    \    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6), 21)\n\
    \    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30), 465)\n\
    \    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8m503wmx.lua:22:\
    \ expected: 21, actual: 720\nstack traceback:\n\t/tmp/tmp8m503wmx.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 1 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n <= 0 then\n\
    \    return 0\n  end\n  local n2 = math.floor(n/2)\n  return sum_to_n(n2) + n\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_to_n\n\
    \    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6), 21)\n\
    \    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30), 465)\n\
    \    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmph_rju4mm.lua:24:\
    \ expected: 21, actual: 10\nstack traceback:\n\t/tmp/tmph_rju4mm.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821689
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n <= 0 then\n\
    \    return 0\n  end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n  end\n  return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821689
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 1 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n <= 0 then\n\
    \    return 0\n  end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local sum = 0\n\
    \  for i = 1, n do\n    sum = sum + i\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750218
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = n\n \
    \ while n > 1 do\n    s = s + n\n    n = n - 1\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpszuaov3q.lua:25:\
    \ expected: 21, actual: 26\nstack traceback:\n\t/tmp/tmpszuaov3q.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 0\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821689
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  return n * sum_to_n(n - 1)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo0pdvvys.lua:21:\
    \ expected: 21, actual: 720\nstack traceback:\n\t/tmp/tmpo0pdvvys.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821689
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 1 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 0\n  end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821689
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  return n * sum_to_n(n - 1)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo0pdvvys.lua:21:\
    \ expected: 21, actual: 720\nstack traceback:\n\t/tmp/tmpo0pdvvys.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821689
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 0\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821689
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 0\n  end\n  return n + sum_to_n(n - 1)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821689
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 0\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821689
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 1 then\n\
    \    return 1\n  else\n    return n * sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxzz7kql3.lua:24:\
    \ expected: 21, actual: 720\nstack traceback:\n\t/tmp/tmpxzz7kql3.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821689
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  return n * sum_to_n(n - 1)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo0pdvvys.lua:21:\
    \ expected: 21, actual: 720\nstack traceback:\n\t/tmp/tmpo0pdvvys.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821689
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n <= 0 then\n\
    \    return 0\n  end\n  return n + sum_to_n(n - 1)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821690
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local sum = 0\n\
    \  for i = 1, n do\n    sum = sum + i\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750218
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 0\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821689
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  return n * sum_to_n(n - 1)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo0pdvvys.lua:21:\
    \ expected: 21, actual: 720\nstack traceback:\n\t/tmp/tmpo0pdvvys.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821689
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  return n * sum_to_n(n - 1)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo0pdvvys.lua:21:\
    \ expected: 21, actual: 720\nstack traceback:\n\t/tmp/tmpo0pdvvys.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821689
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  return n * sum_to_n(n - 1)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo0pdvvys.lua:21:\
    \ expected: 21, actual: 720\nstack traceback:\n\t/tmp/tmpo0pdvvys.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821689
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local sum = 0\n\
    \  for i = 1, n do\n    sum = sum + i\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750218
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 0\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821689
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then\n\
    \    return 1\n  end\n  return n * sum_to_n(n - 1)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpee7lqnf8.lua:23:\
    \ expected: 21, actual: 720\nstack traceback:\n\t/tmp/tmpee7lqnf8.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821690
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n <= 0 then\n\
    \    return 0\n  end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then\n\
    \    return 0\n  end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821690
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 0\n  end\n  local n1 = n - 1\n  local n2 = n - 2\n  local n3 = n -\
    \ 3\n  local n4 = n - 4\n  local n5 = n - 5\n  local n6 = n - 6\n  local n7 =\
    \ n - 7\n  local n8 = n - 8\n  local n9 = n - 9\n  local n10 = n - 10\n  local\
    \ n11 = n - 11\n  local n12 = n - 12\n  local n13 = n - 13\n  local n14 = n -\
    \ 14\n  local n15 = n - 15\n  local n16 = n - 16\n  local n17 = n - 17\n  local\
    \ n18 = n - 18\n  local n19 = n - 19\n  local n20 = n - 20\n  local n21 = n -\
    \ 21\n  local n22 = n - 22\n  local n23 = n - 23\n  local n24 = n - 24\n  local\
    \ n25 = n - 25\n  local n26 = n - 26\n  local n27 = n - 27\n  local n28 = n -\
    \ 28\n  local n29 = n - 29\n  local n30 = n - 30\n  local n31 = n - 31\n  local\
    \ n32 = n - 32\n  local n33 = n - 33\n  local n34 = n - 34\n  local n35 = n -\
    \ 35\n  local n36 = n - 36\n  local n37 = n - 37\n  local n38 = n - 38\n  local\
    \ n39 = n - 39\n  local n40 = n - 40\n  local n41 = n - 41\n  local n42 = n -\
    \ 42\n  local n43 = n - 43\n  local n44 = n - 44\n  local n45 = n - 45\n  local\
    \ n46 = n - 46\n  local n47 = n - 47\n  local n48 = n - 48\n  local n49 = n -\
    \ 49\n  local n50 = n - 50\n  local n51 = n - 51\n  local n52 = n - 52\n  local\
    \ n53 = n - 53\n  local n54 = n - 54\n  local n55 = n - 55\n  local n56 = n -\
    \ 56\n  local n57 = n - 57\n  local n58 = n - 58\n  local n59 = n - 59\n  local\
    \ n60 = n - 60\n  local n61 = n - 61\n  local n62 = n - 62\n  local n63 = n -\
    \ 63\n  local n64 = n - 64\n  local n\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpozbeyen3.lua:92: ''end'' expected (to close ''function'' at
    line 12) near <eof>

    '
  stdout: ''
  timestamp: 1659821689
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  return n * sum_to_n(n - 1)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo0pdvvys.lua:21:\
    \ expected: 21, actual: 720\nstack traceback:\n\t/tmp/tmpo0pdvvys.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821689
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 0\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821689
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 1 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 0\n  end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821689
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 1 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local sum = 0\n\
    \  for i = 1, n do\n    sum = sum + i\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750218
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then\n\
    \    return 0\n  end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821690
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n  end\n  return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821689
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n  end\n  return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821689
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n  end\n  return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821689
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 0\n  end\n  local n1 = n - 1\n  local n2 = n - 2\n  local n3 = n -\
    \ 3\n  local n4 = n - 4\n  local n5 = n - 5\n  local n6 = n - 6\n  local n7 =\
    \ n - 7\n  local n8 = n - 8\n  local n9 = n - 9\n  local n10 = n - 10\n  local\
    \ n11 = n - 11\n  local n12 = n - 12\n  local n13 = n - 13\n  local n14 = n -\
    \ 14\n  local n15 = n - 15\n  local n16 = n - 16\n  local n17 = n - 17\n  local\
    \ n18 = n - 18\n  local n19 = n - 19\n  local n20 = n - 20\n  local n21 = n -\
    \ 21\n  local n22 = n - 22\n  local n23 = n - 23\n  local n24 = n - 24\n  local\
    \ n25 = n - 25\n  local n26 = n - 26\n  local n27 = n - 27\n  local n28 = n -\
    \ 28\n  local n29 = n - 29\n  local n30 = n - 30\n  local n31 = n - 31\n  local\
    \ n32 = n - 32\n  local n33 = n - 33\n  local n34 = n - 34\n  local n35 = n -\
    \ 35\n  local n36 = n - 36\n  local n37 = n - 37\n  local n38 = n - 38\n  local\
    \ n39 = n - 39\n  local n40 = n - 40\n  local n41 = n - 41\n  local n42 = n -\
    \ 42\n  local n43 = n - 43\n  local n44 = n - 44\n  local n45 = n - 45\n  local\
    \ n46 = n - 46\n  local n47 = n - 47\n  local n48 = n - 48\n  local n49 = n -\
    \ 49\n  local n50 = n - 50\n  local n51 = n - 51\n  local n52 = n - 52\n  local\
    \ n53 = n - 53\n  local n54 = n - 54\n  local n55 = n - 55\n  local n56 = n -\
    \ 56\n  local n57 = n - 57\n  local n58 = n - 58\n  local n59 = n - 59\n  local\
    \ n60 = n - 60\n  local n61 = n - 61\n  local n62 = n - 62\n  local n63 = n -\
    \ 63\n  local n64 = n - 64\n  local n\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpozbeyen3.lua:92: ''end'' expected (to close ''function'' at
    line 12) near <eof>

    '
  stdout: ''
  timestamp: 1659821689
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 1 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n <= 0 then\n\
    \    return 0\n  end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local sum = 0\n\
    \  for i = 1, n do\n    sum = sum + i\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750218
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 0\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821689
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local sum = 0\n\
    \  for i = 1, n do\n    sum = sum + i\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750218
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 1 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = n\n \
    \ while n > 1 do\n    s = s + n\n    n = n - 1\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpszuaov3q.lua:25:\
    \ expected: 21, actual: 26\nstack traceback:\n\t/tmp/tmpszuaov3q.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 1 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 1 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  return n * sum_to_n(n - 1)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo0pdvvys.lua:21:\
    \ expected: 21, actual: 720\nstack traceback:\n\t/tmp/tmpo0pdvvys.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821689
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n <= 0 then\n\
    \    return 0\n  end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  return n * sum_to_n(n - 1)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo0pdvvys.lua:21:\
    \ expected: 21, actual: 720\nstack traceback:\n\t/tmp/tmpo0pdvvys.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821689
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 1 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  if n == 1 then return 1 end\n  return n * sum_to_n(n - 1)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_to_n\n\
    \    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6), 21)\n\
    \    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30), 465)\n\
    \    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8m503wmx.lua:22:\
    \ expected: 21, actual: 720\nstack traceback:\n\t/tmp/tmp8m503wmx.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 1 then\n\
    \    return 1\n  else\n    return n * sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxzz7kql3.lua:24:\
    \ expected: 21, actual: 720\nstack traceback:\n\t/tmp/tmpxzz7kql3.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821689
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  local n1 = n - 1\n  return n1 + sum_to_n(n1)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp55ch3qn.lua:22:\
    \ expected: 21, actual: 16\nstack traceback:\n\t/tmp/tmpp55ch3qn.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821690
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 0\n  end\n  local n1 = n - 1\n  local n2 = n - 2\n  local n3 = n -\
    \ 3\n  local n4 = n - 4\n  local n5 = n - 5\n  local n6 = n - 6\n  local n7 =\
    \ n - 7\n  local n8 = n - 8\n  local n9 = n - 9\n  local n10 = n - 10\n  local\
    \ n11 = n - 11\n  local n12 = n - 12\n  local n13 = n - 13\n  local n14 = n -\
    \ 14\n  local n15 = n - 15\n  local n16 = n - 16\n  local n17 = n - 17\n  local\
    \ n18 = n - 18\n  local n19 = n - 19\n  local n20 = n - 20\n  local n21 = n -\
    \ 21\n  local n22 = n - 22\n  local n23 = n - 23\n  local n24 = n - 24\n  local\
    \ n25 = n - 25\n  local n26 = n - 26\n  local n27 = n - 27\n  local n28 = n -\
    \ 28\n  local n29 = n - 29\n  local n30 = n - 30\n  local n31 = n - 31\n  local\
    \ n32 = n - 32\n  local n33 = n - 33\n  local n34 = n - 34\n  local n35 = n -\
    \ 35\n  local n36 = n - 36\n  local n37 = n - 37\n  local n38 = n - 38\n  local\
    \ n39 = n - 39\n  local n40 = n - 40\n  local n41 = n - 41\n  local n42 = n -\
    \ 42\n  local n43 = n - 43\n  local n44 = n - 44\n  local n45 = n - 45\n  local\
    \ n46 = n - 46\n  local n47 = n - 47\n  local n48 = n - 48\n  local n49 = n -\
    \ 49\n  local n50 = n - 50\n  local n51 = n - 51\n  local n52 = n - 52\n  local\
    \ n53 = n - 53\n  local n54 = n - 54\n  local n55 = n - 55\n  local n56 = n -\
    \ 56\n  local n57 = n - 57\n  local n58 = n - 58\n  local n59 = n - 59\n  local\
    \ n60 = n - 60\n  local n61 = n - 61\n  local n62 = n - 62\n  local n63 = n -\
    \ 63\n  local n64 = n - 64\n  local n\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpozbeyen3.lua:92: ''end'' expected (to close ''function'' at
    line 12) near <eof>

    '
  stdout: ''
  timestamp: 1659821689
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local sum = 0\n\
    \  for i = 1, n do\n    sum = sum + i\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750218
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local sum = 0\n\
    \  for i = 1, n do\n    sum = sum + i\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750218
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local sum = 0\n\
    \  for i = 1, n do\n    sum = sum + i\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750218
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n <= 0 then\n\
    \    return 0\n  end\n  local n1 = math.floor(n)\n  local n2 = n - n1\n  return\
    \ n1 + sum_to_n(n2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjtgozhx5.lua:25:\
    \ expected: 21, actual: 6\nstack traceback:\n\t/tmp/tmpjtgozhx5.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821690
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n <= 0 then\n\
    \    return 0\n  end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local sum = 0\n\
    \  for i = 1, n do\n    sum = sum + i\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750218
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4sn1fzzk.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmp4sn1fzzk.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821690
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 0\n  end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821689
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: -1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then\n\
    \    return 0\n  end\n  local n = 1\n  local sum = 1\n  while n <= n do\n    sum\
    \ = sum + n\n    n = n + 1\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659821695
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  if n == 1 then return 1 end\n  return n * sum_to_n(n - 1)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_to_n\n\
    \    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6), 21)\n\
    \    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30), 465)\n\
    \    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8m503wmx.lua:22:\
    \ expected: 21, actual: 720\nstack traceback:\n\t/tmp/tmp8m503wmx.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n  end\n  return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821689
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 0\n  end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821689
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 1 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  return n * sum_to_n(n - 1)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo0pdvvys.lua:21:\
    \ expected: 21, actual: 720\nstack traceback:\n\t/tmp/tmpo0pdvvys.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821689
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 1
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0gzz3ad.lua:23:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpb0gzz3ad.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750235
- exit_code: 0
  program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 0\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821689

name: HumanEval_158_find_max
language: lua
prompt: "-- Write a function that accepts a list of strings.\n-- The list contains\
  \ different words. Return the word with maximum number\n-- of unique characters.\
  \ If multiple strings have maximum number of unique\n-- characters, return the one\
  \ which comes first in lexicographical order.\n-- >>> find_max({'name', 'of', 'string'})\n\
  -- 'string'\n-- >>> find_max({'name', 'enam', 'game'})\n-- 'enam'\n-- >>> find_max({'aaaaaaa',\
  \ 'bb', 'cc'})\n-- 'aaaaaaa'\nlocal function find_max(words)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_max\n\
  \    lu.assertEquals(candidate({'name', 'of', 'string'}), 'string')\n    lu.assertEquals(candidate({'name',\
  \ 'enam', 'game'}), 'enam')\n    lu.assertEquals(candidate({'aaaaaaa', 'bb', 'cc'}),\
  \ 'aaaaaaa')\n    lu.assertEquals(candidate({'abc', 'cba'}), 'abc')\n    lu.assertEquals(candidate({'play',\
  \ 'this', 'game', 'of', 'footbott'}), 'footbott')\n    lu.assertEquals(candidate({'we',\
  \ 'are', 'gonna', 'rock'}), 'gonna')\n    lu.assertEquals(candidate({'we', 'are',\
  \ 'a', 'mad', 'nation'}), 'nation')\n    lu.assertEquals(candidate({'this', 'is',\
  \ 'a', 'prrk'}), 'this')\n    lu.assertEquals(candidate({'b'}), 'b')\n    lu.assertEquals(candidate({'play',\
  \ 'play', 'play'}), 'play')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local max_count = 0\n  local max_word\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for _, char in ipairs(word) do\n      count = count\
    \ + 1\n    end\n    if count > max_count then\n      max_count = count\n     \
    \ max_word = word\n    end\n  end\n  return max_word\nend", "  local max_count\
    \ = -1\n  local max_word\n  for _, word in ipairs(words) do\n    local count =\
    \ #word\n    if count > max_count then\n      max_count = count\n      max_word\
    \ = word\n    end\n  end\n  return max_word\nend", "  local max_count = -1\n \
    \ local max_word = nil\n  for _, word in ipairs(words) do\n    local count = #word\n\
    \    if count > max_count then\n      max_count = count\n      max_word = word\n\
    \    end\n  end\n  return max_word\nend", "  local max = 0\n  local word\n  for\
    \ word in words do\n    max = max + 1\n  end\n  for word in words do\n    if max\
    \ > #word then\n      return word\n    end\n  end\n  return nil\nend", "  local\
    \ max = 0\n  local word\n  for word in words do\n    local count = 0\n    for\
    \ char in word do\n      count = count + 1\n    end\n    if count > max then\n\
    \      max = count\n    end\n  end\n  if max > 0 then\n    local word\n    for\
    \ word in words do\n      local count = 0\n      for char in word do\n       \
    \ count = count + 1\n      end\n      if count > max then\n        max = count\n\
    \      end\n    end\n  end\n  return word\nend", "  local max_count = -1\n  local\
    \ max_word\n  for _, word in ipairs(words) do\n    local count = #word\n    if\
    \ count > max_count then\n      max_count = count\n      max_word = word\n   \
    \ end\n  end\n  return max_word\nend", "  local max_count = -1\n  local max_word\n\
    \  for _, word in ipairs(words) do\n    local count = #word\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "  local max = 0\n  local word\n  for word in words do\n   \
    \ max = max + 1\n  end\n  for word in words do\n    max = max - 1\n    if max\
    \ < 0 then\n      return word\n    end\n  end\nend", "  local max_count = 0\n\
    \  local max_word\n  for _, word in ipairs(words) do\n    local count = #word\n\
    \    if count > max_count then\n      max_count = count\n      max_word = word\n\
    \    end\n  end\n  return max_word\nend", "  local max_count = 0\n  local max_word\n\
    \  for _, word in ipairs(words) do\n    local count = #word\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "  local max_count = 0\n  local max_word\n  for _, word in ipairs(words)\
    \ do\n    local count = #word\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \ local max = 0\n  local word\n  for word in words do\n    max = max or #word\n\
    \    if #word > max then\n      max = #word\n    end\n  end\n  return words[math.min(#words,\
    \ max)]\nend", "  local max = {}\n  for _, word in ipairs(words) do\n    local\
    \ count = {}\n    for _, char in ipairs(word) do\n      count[char] = count[char]\
    \ or 0\n      count[char] = count[char] + 1\n    end\n    table.insert(max, table.max(count))\n\
    \  end\n  return max[1]\nend", "  local max = {}\n  for _, word in ipairs(words)\
    \ do\n    local count = {}\n    for _, c in ipairs(word) do\n      count[c] =\
    \ count[c] or 0\n      count[c] = count[c] + 1\n    end\n    for _, c in pairs(count)\
    \ do\n      if count[c] > max[c] then\n        max[c] = count[c]\n      end\n\
    \    end\n  end\n  for _, c in pairs(max) do\n    if max[c] == 1 then\n      return\
    \ c\n    end\n  end\n  return nil\nend", "  local max_count = -1\n  local max_word\n\
    \  for _, word in ipairs(words) do\n    local count = #word\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "  local max = {}\n  for _, word in ipairs(words) do\n    local\
    \ count = {}\n    for _, char in ipairs(word) do\n      count[char] = count[char]\
    \ or 0\n      count[char] = count[char] + 1\n    end\n    local maxchar = count.keys[1]\n\
    \    if maxchar and count[maxchar] > count[maxchar + 1] then\n      maxchar =\
    \ count.keys[1]\n    end\n    table.insert(max, maxchar)\n  end\n  return table.concat(max,\
    \ \"\")\nend", "  local max = 0\n  local word\n  for word in words do\n    local\
    \ count = 0\n    for c in word do\n      count = count + 1\n      if count > max\
    \ then\n        max = count\n      end\n    end\n  end\n  return word\nend", " \
    \ local max_count = 0\n  local max_word\n  for _, word in ipairs(words) do\n \
    \   local count = #word\n    if count > max_count then\n      max_count = count\n\
    \      max_word = word\n    end\n  end\n  return max_word\nend", "  local max\
    \ = 0\n  local word\n  for word in words do\n    max = max + 1\n  end\n  for word\
    \ in words do\n    max = max - 1\n    if max < 0 then\n      return word\n   \
    \ end\n  end\nend", "  local max = {}\n  for _, word in ipairs(words) do\n   \
    \ local count = {}\n    for _, c in ipairs(word) do\n      count[c] = count[c]\
    \ or 0\n      count[c] = count[c] + 1\n    end\n    local maxChar = nil\n    for\
    \ _, c in pairs(count) do\n      if maxChar == nil or count[c] > count[maxChar]\
    \ then\n        maxChar = c\n      end\n    end\n    max[#max+1] = maxChar\n \
    \ end\n  table.sort(max, function(a, b) return max[a] < max[b] end)\n  return\
    \ max[1]\nend", "  local max = 0\n  local word\n  for word in words do\n    max\
    \ = max + 1\n  end\n  for word in words do\n    max = max - 1\n    if max < 0\
    \ then\n      return word\n    end\n  end\nend", "  local max_count = 0\n  local\
    \ max_word\n  for _, word in ipairs(words) do\n    local count = 0\n    for _,\
    \ char in ipairs(word) do\n      count = count + 1\n    end\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "  local max_count = 0\n  local max_word\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for _, char in ipairs(word) do\n      count = count\
    \ + 1\n    end\n    if count > max_count then\n      max_count = count\n     \
    \ max_word = word\n    end\n  end\n  return max_word\nend", "  local max_count\
    \ = 0\n  local max_word\n  for _, word in ipairs(words) do\n    local count =\
    \ 0\n    for _, char in pairs(word) do\n      count = count + 1\n    end\n   \
    \ if count > max_count then\n      max_count = count\n      max_word = word\n\
    \    end\n  end\n  return max_word\nend", "  local max_count = -1\n  local max_word\n\
    \  for _, word in ipairs(words) do\n    local count = 0\n    for _, c in ipairs(word)\
    \ do\n      count = count + 1\n    end\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \ local max_count = 0\n  local max_word\n  for _, word in ipairs(words) do\n \
    \   local count = 0\n    for _, c in ipairs(word) do\n      count = count + 1\n\
    \    end\n    if count > max_count then\n      max_count = count\n      max_word\
    \ = word\n    end\n  end\n  return max_word\nend", "  local max_count = 0\n  local\
    \ max_word\n  for _, word in ipairs(words) do\n    local count = 0\n    for _,\
    \ c in ipairs(word) do\n      count = count + 1\n    end\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "  local max = {}\n  local word = {}\n  for _, v in ipairs(words)\
    \ do\n    table.insert(word, v)\n    table.insert(max, #word, 1)\n  end\n  table.sort(max,\
    \ function(a, b) return max[a] < max[b] end)\n  return word[1]\nend", "  local\
    \ max_count = 0\n  local max_word\n  for _, word in ipairs(words) do\n    local\
    \ count = #word\n    if count > max_count then\n      max_count = count\n    \
    \  max_word = word\n    end\n  end\n  return max_word\nend", "  local max_count\
    \ = 0\n  local max_word\n  for _, word in ipairs(words) do\n    local count =\
    \ #word\n    if count > max_count then\n      max_count = count\n      max_word\
    \ = word\n    end\n  end\n  return max_word\nend", "  local max_count = -1\n \
    \ local max_word\n  for _, word in ipairs(words) do\n    local count = #word\n\
    \    if count > max_count then\n      max_count = count\n      max_word = word\n\
    \    end\n  end\n  return max_word\nend", "  local max_count = 0\n  local max_word\n\
    \  for _, word in ipairs(words) do\n    local count = #word\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "  local max_count = -1\n  local max_word = nil\n  for _, word\
    \ in ipairs(words) do\n    local count = #word\n    if count > max_count then\n\
    \      max_count = count\n      max_word = word\n    end\n  end\n  return max_word\n\
    end", "  local max = {}\n  for _, word in ipairs(words) do\n    local count =\
    \ {}\n    for _, c in ipairs(word) do\n      count[c] = count[c] or 0\n      count[c]\
    \ = count[c] + 1\n    end\n    local maxChar = nil\n    for _, c in pairs(count)\
    \ do\n      if maxChar == nil or count[c] > count[maxChar] then\n        maxChar\
    \ = c\n      end\n    end\n    max[#max+1] = word\n  end\n  table.sort(max, function(a,\
    \ b) return #a > #b end)\n  return max[1]\nend", "  local max = 0\n  local word\n\
    \  for word in words do\n    max = max + 1\n  end\n  for word in words do\n  \
    \  if max > #word then\n      return word\n    end\n  end\nend", "  local max_count\
    \ = 0\n  local max_word\n  for _, word in ipairs(words) do\n    local count =\
    \ 0\n    for _, c in ipairs(word) do\n      count = count + 1\n    end\n    if\
    \ count > max_count then\n      max_count = count\n      max_word = word\n   \
    \ end\n  end\n  return max_word\nend", "  local max = {}\n  for _, word in ipairs(words)\
    \ do\n    local count = {}\n    for _, char in ipairs(word) do\n      count[char]\
    \ = count[char] or 0\n      count[char] = count[char] + 1\n    end\n    local\
    \ maxChar = nil\n    for _, char in pairs(count) do\n      if maxChar == nil or\
    \ count[char] > count[maxChar] then\n        maxChar = char\n      end\n    end\n\
    \    max[#max+1] = maxChar\n  end\n  table.sort(max, function(a, b) return a<b\
    \ end)\n  return max[1]\nend", "  local max_count = 0\n  local max_word\n  for\
    \ _, word in ipairs(words) do\n    local count = 0\n    for _, char in ipairs(word)\
    \ do\n      count = count + 1\n    end\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \ local max = 0\n  local word\n  for word in words do\n    max = max or #word\n\
    \    if #word > max then\n      max = #word\n    end\n  end\n  if max > 0 then\n\
    \    local i = 1\n    while i <= max do\n      local word = words[i]\n      local\
    \ count = 0\n      for j = 1, #word do\n        if word[j] == word[i] then\n \
    \         count = count + 1\n        end\n      end\n      if count > max then\n\
    \        return word\n      end\n      i = i + 1\n    end\n  end\n  return nil\n\
    end", "  local max_count = -1\n  local max_word = nil\n  for _, word in ipairs(words)\
    \ do\n    local count = #word\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \ local max = 0\n  local word\n  for word in words do\n    max = max or 0\n  \
    \  for i = 1, #word do\n      max = max + (#word:sub(1, i) == #word:sub(i, #word))\n\
    \    end\n  end\n  return words[#words]\nend", "  local max = 0\n  local word\n\
    \  for word in words do\n    local count = 0\n    for char in word do\n      count\
    \ = count + 1\n    end\n    if count > max then\n      max = count\n    end\n\
    \  end\n  if max > 0 then\n    return words[#words]\n  end\nend", "  local max_count\
    \ = 0\n  local max_word = ''\n  for _, word in ipairs(words) do\n    local count\
    \ = 0\n    for _, char in pairs(word) do\n      count = count + 1\n    end\n \
    \   if count > max_count then\n      max_count = count\n      max_word = word\n\
    \    end\n  end\n  return max_word\nend", "  local max = {}\n  for _, word in\
    \ ipairs(words) do\n    local count = {}\n    for _, c in ipairs(word) do\n  \
    \    count[c] = count[c] or 0\n      count[c] = count[c] + 1\n    end\n    local\
    \ maxc = nil\n    for c, count in pairs(count) do\n      if count > maxc then\n\
    \        maxc = count\n        max = {}\n      end\n      max[c] = count\n   \
    \ end\n  end\n  local maxc = nil\n  for c, count in pairs(max) do\n    if count\
    \ > maxc then\n      maxc = count\n    end\n  end\n  if maxc == nil then\n   \
    \ return nil\n  end\n  local maxword = {}\n  for _, c in ipairs(max) do\n    maxword[c]\
    \ = max[c]\n  end\n  return table.concat(maxword, '-')\nend", "  local max = {}\n\
    \  for _, word in ipairs(words) do\n    local count = {}\n    for _, c in ipairs(word)\
    \ do\n      count[c] = count[c] or 0\n      count[c] = count[c] + 1\n    end\n\
    \    local maxc = nil\n    for c, _ in pairs(count) do\n      if maxc == nil or\
    \ maxc > c then\n        maxc = c\n      end\n    end\n    if maxc then\n    \
    \  max[#max+1] = word\n    end\n  end\n  table.sort(max, function(a, b) return\
    \ a<b end)\n  return max[1]\nend", "  local max_count = 0\n  local max_word\n\
    \  for _, word in ipairs(words) do\n    local count = #word\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "  local max_count = 0\n  local max_word\n  for _, word in ipairs(words)\
    \ do\n    local count = #word\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \ local max = {}\n  for _, word in ipairs(words) do\n    local count = {}\n  \
    \  for _, c in ipairs(word) do\n      count[c] = count[c] or 0\n      count[c]\
    \ = count[c] + 1\n    end\n    for _, c in pairs(count) do\n      if count[c]\
    \ > max[c] then\n        max[c] = count[c]\n      end\n    end\n  end\n  table.sort(max,\
    \ function(a, b) return max[a] < max[b] end)\n  return max[#max]\nend", "  local\
    \ max = 0\n  local word\n  for word in words do\n    local count = 0\n    for\
    \ char in word do\n      count = count + 1\n    end\n    if count > max then\n\
    \      max = count\n    end\n  end\n  if max > 0 then\n    local pos = 1\n   \
    \ for word in words do\n      local count = 0\n      for char in word do\n   \
    \     count = count + 1\n      end\n      if count > max then\n        max = count\n\
    \      end\n      if count == max then\n        return word\n      end\n     \
    \ if count > max then\n        pos = pos + 1\n      end\n    end\n  end\n  return\
    \ nil\nend", "  local max_count = 0\n  local max_word\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for _, c in ipairs(word) do\n      count = count\
    \ + 1\n      if count > max_count then\n        max_count = count\n        max_word\
    \ = word\n      end\n    end\n  end\n  return max_word\nend", "  local max_count\
    \ = 0\n  local max_word = ''\n  for _, word in ipairs(words) do\n    local count\
    \ = 0\n    for _, char in ipairs(word) do\n      count = count + 1\n      if count\
    \ > max_count then\n        max_count = count\n        max_word = word\n     \
    \ end\n    end\n  end\n  return max_word\nend", "  local max_count = 0\n  local\
    \ max_word\n  for _, word in ipairs(words) do\n    local count = 0\n    for _,\
    \ c in ipairs(word) do\n      count = count + 1\n    end\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "  local max = 0\n  local word\n  for word in words do\n   \
    \ max = max or #word\n    if #word > max then\n      max = #word\n    end\n  end\n\
    \  if max > 0 then\n    local i = 1\n    local word\n    for word in words do\n\
    \      if #word == max then\n        return word\n      end\n      if #word >\
    \ max then\n        max = #word\n      end\n      i = i + 1\n    end\n  end\n\
    \  return nil\nend", "  local max = {}\n  for _, word in ipairs(words) do\n  \
    \  local count = {}\n    for _, char in ipairs(word) do\n      count[char] = count[char]\
    \ or 0\n      count[char] = count[char] + 1\n    end\n    for _, char in pairs(count)\
    \ do\n      if count[char] > max[char] then\n        max[char] = count[char]\n\
    \      end\n    end\n  end\n  table.sort(max, function(a, b) return max[a] < max[b]\
    \ end)\n  return max[1]\nend", "  local max_count = 0\n  local max_word\n  for\
    \ _, word in ipairs(words) do\n    local count = 0\n    for _, char in pairs(word)\
    \ do\n      count = count + 1\n    end\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \ local max = 0\n  local word\n  for word in words do\n    local count = 0\n \
    \   for char in word do\n      count = count + 1\n    end\n    if count > max\
    \ then\n      max = count\n    end\n  end\n  if max > 0 then\n    local index\
    \ = #words - 1\n    while index > 0 do\n      local count = 0\n      for char\
    \ in words[index] do\n        count = count + 1\n      end\n      if count > max\
    \ then\n        max = count\n      end\n      index = index - 1\n    end\n  end\n\
    \  return words[max]\nend", "  local max = 0\n  local word\n  for word in words\
    \ do\n    max = math.max(max, #word)\n  end\n  local i = 1\n  while i <= max do\n\
    \    local word = words[i]\n    local count = 0\n    for j = 1, #word do\n   \
    \   if word[j] == word[i] then\n        count = count + 1\n      end\n    end\n\
    \    if count > max then\n      return word\n    end\n    i = i + 1\n  end\n \
    \ return words[1]\nend", "  local max_count = 0\n  local max_word = nil\n  for\
    \ _, word in ipairs(words) do\n    local count = 0\n    for _, c in ipairs(word)\
    \ do\n      count = count + 1\n    end\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \ local max = 0\n  local word\n  for word in words do\n    max = max + 1\n  end\n\
    \  for word in words do\n    if max > #word then\n      return word\n    end\n\
    \  end\nend", "  local max_count = 0\n  local max_word\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for _, c in ipairs(word) do\n      count = count\
    \ + 1\n    end\n    if count > max_count then\n      max_count = count\n     \
    \ max_word = word\n    end\n  end\n  return max_word\nend", "  local max_count\
    \ = -1\n  local max_word\n  for _, word in ipairs(words) do\n    local count =\
    \ #word\n    if count > max_count then\n      max_count = count\n      max_word\
    \ = word\n    end\n  end\n  return max_word\nend", "  local max_count = -1\n \
    \ local max_word\n  for _, word in ipairs(words) do\n    local count = #word\n\
    \    if count > max_count then\n      max_count = count\n      max_word = word\n\
    \    end\n  end\n  return max_word\nend", "  local max_count = 0\n  local max_word\
    \ = \"\"\n  for _, word in ipairs(words) do\n    local count = #word\n    if count\
    \ > max_count then\n      max_count = count\n      max_word = word\n    end\n\
    \  end\n  return max_word\nend", "  local max_count = -1\n  local max_word = nil\n\
    \  for _, word in ipairs(words) do\n    local count = #word\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "  local max_count = 0\n  local max_word\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for _, char in ipairs(word) do\n      count = count\
    \ + 1\n    end\n    if count > max_count then\n      max_count = count\n     \
    \ max_word = word\n    end\n  end\n  return max_word\nend", "  local max = {}\n\
    \  for _, word in ipairs(words) do\n    local count = {}\n    for _, c in ipairs(word)\
    \ do\n      count[c] = count[c] or 0\n      count[c] = count[c] + 1\n    end\n\
    \    local maxChar = nil\n    for _, c in pairs(count) do\n      if maxChar ==\
    \ nil or count[c] > count[maxChar] then\n        maxChar = c\n      end\n    end\n\
    \    table.insert(max, maxChar)\n  end\n  table.sort(max)\n  return max[1]\nend",
  "  local max = 0\n  local word\n  for word in words do\n    max = max or #word\n\
    \    if #word > max then\n      max = #word\n    end\n  end\n  if max > 0 then\n\
    \    return words[#words]\n  end\nend", "  local max_count = 0\n  local max_word\
    \ = nil\n  for _, word in ipairs(words) do\n    local count = #word\n    if count\
    \ > max_count then\n      max_count = count\n      max_word = word\n    end\n\
    \  end\n  return max_word\nend", "  local max_count = 0\n  local max_word\n  for\
    \ _, word in ipairs(words) do\n    local count = 0\n    for _, c in ipairs(word)\
    \ do\n      count = count + 1\n    end\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \ local max = 0\n  local word\n  for word in words do\n    max = max + 1\n  end\n\
    \  for word in words do\n    local count = 0\n    for char in word do\n      count\
    \ = count + 1\n    end\n    if count > max then\n      max = count\n    end\n\
    \  end\n  for word in words do\n    local count = 0\n    for char in word do\n\
    \      count = count + 1\n    end\n    if count > max then\n      max = count\n\
    \    end\n  end\n  return words[#words]\nend", "  local max_count = 0\n  local\
    \ max_word\n  for _, word in ipairs(words) do\n    local count = #word\n    if\
    \ count > max_count then\n      max_count = count\n      max_word = word\n   \
    \ end\n  end\n  return max_word\nend", "  local max = {}\n  for _, word in ipairs(words)\
    \ do\n    local count = {}\n    for _, char in pairs(word) do\n      count[char]\
    \ = count[char] or 0\n      count[char] = count[char] + 1\n    end\n    local\
    \ maxChar = nil\n    for _, char in pairs(count) do\n      if maxChar == nil or\
    \ count[char] > count[maxChar] then\n        maxChar = char\n      end\n    end\n\
    \    max[#max+1] = maxChar\n  end\n  return max[1]\nend", "  local max = 0\n \
    \ local word\n  for word in words do\n    local count = 0\n    for c in word do\n\
    \      count = count + 1\n      if count > max then\n        max = count\n   \
    \   end\n    end\n  end\n  return words[#words]\nend", "  local max_count = -1\n\
    \  local max_word\n  for _, word in ipairs(words) do\n    local count = #word\n\
    \    if count > max_count then\n      max_count = count\n      max_word = word\n\
    \    end\n  end\n  return max_word\nend", "  local max = {}\n  for _, word in\
    \ ipairs(words) do\n    local count = {}\n    for _, char in pairs(word) do\n\
    \      count[char] = count[char] or 0\n      count[char] = count[char] + 1\n \
    \   end\n    local max_char = count.keys[1]\n    if count.values[max_char] > max.values[max_char]\
    \ then\n      max.values = count.values\n      max.keys = count.keys\n      max.word\
    \ = word\n    end\n  end\n  return max.word\nend", "  local max = 0\n  local word\n\
    \  for word in words do\n    local count = 0\n    for c in word do\n      count\
    \ = count + 1\n      if count > max then\n        max = count\n      end\n   \
    \ end\n  end\n  return word\nend", "  local max_count = 0\n  local max_word\n\
    \  for _, word in ipairs(words) do\n    local count = #word\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "  local max_count = -1\n  local max_word = nil\n  for _, word\
    \ in ipairs(words) do\n    local count = #word\n    if count > max_count then\n\
    \      max_count = count\n      max_word = word\n    end\n  end\n  return max_word\n\
    end", "  local max_count = 0\n  local max_word\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for _, char in ipairs(word) do\n      count = count\
    \ + 1\n    end\n    if count > max_count then\n      max_count = count\n     \
    \ max_word = word\n    end\n  end\n  return max_word\nend", "  local max = {}\n\
    \  for _, word in ipairs(words) do\n    local count = {}\n    for _, char in ipairs(word)\
    \ do\n      count = count or {}\n      count[char] = count[char] or 0\n      count[char]\
    \ = count[char] + 1\n    end\n    max = max or {}\n    max = max or count\n  end\n\
    \  local maxCount = {}\n  for _, count in ipairs(max) do\n    maxCount[#maxCount\
    \ + 1] = count\n  end\n  table.sort(maxCount, function(a, b) return a[2] > b[2]\
    \ end)\n  return maxCount[1]\nend", "  local max_count = -1\n  local max_word\n\
    \  for _, word in ipairs(words) do\n    local count = 0\n    for _, c in ipairs(word)\
    \ do\n      count = count + 1\n    end\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \ local max_count = 0\n  local max_word\n  for _, word in ipairs(words) do\n \
    \   local count = 0\n    for _, c in ipairs(word) do\n      count = count + 1\n\
    \    end\n    if count > max_count then\n      max_count = count\n      max_word\
    \ = word\n    end\n  end\n  return max_word\nend", "  local max = {}\n  for _,\
    \ word in ipairs(words) do\n    local count = {}\n    for _, c in ipairs(word)\
    \ do\n      count[c] = count[c] or 0\n      count[c] = count[c] + 1\n    end\n\
    \    local maxc = nil\n    for c, _ in pairs(count) do\n      if maxc == nil or\
    \ maxc > c then\n        maxc = c\n      end\n    end\n    max[#max+1] = word\n\
    \  end\n  table.sort(max, function(a, b) return a<b end)\n  return max[1]\nend",
  "  local max_count = nil\n  local max_word = nil\n  for _, word in ipairs(words)\
    \ do\n    local count = #word\n    if max_count == nil or count > max_count then\n\
    \      max_count = count\n      max_word = word\n    end\n  end\n  return max_word\n\
    end", "  local max_count = 0\n  local max_word\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for _, c in ipairs(word) do\n      count = count\
    \ + 1\n    end\n    if count > max_count then\n      max_count = count\n     \
    \ max_word = word\n    end\n  end\n  return max_word\nend", "  local max_count\
    \ = 0\n  local max_word\n  for _, word in ipairs(words) do\n    local count =\
    \ 0\n    for _, c in ipairs(word) do\n      count = count + 1\n    end\n    if\
    \ count > max_count then\n      max_count = count\n      max_word = word\n   \
    \ end\n  end\n  return max_word\nend", "  local max_count = 0\n  local max_word\
    \ = ''\n  for _, word in ipairs(words) do\n    local count = 0\n    for _, c in\
    \ ipairs(word) do\n      count = count + 1\n    end\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "  local max_count = -1\n  local max_word\n  for _, word in\
    \ ipairs(words) do\n    local count = #word\n    if count > max_count then\n \
    \     max_count = count\n      max_word = word\n    end\n  end\n  return max_word\n\
    end", "  local max_count = -1\n  local max_word\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for _, char in ipairs(word) do\n      count = count\
    \ + 1\n    end\n    if count > max_count then\n      max_count = count\n     \
    \ max_word = word\n    end\n  end\n  return max_word\nend", "  local max_count\
    \ = -1\n  local max_word = nil\n  for _, word in ipairs(words) do\n    local count\
    \ = #word\n    if count > max_count then\n      max_count = count\n      max_word\
    \ = word\n    end\n  end\n  return max_word\nend", "  local max = 0\n  local word\n\
    \  for word in words do\n    max = max + 1\n  end\n  for word in words do\n  \
    \  if max > #word then\n      return word\n    end\n  end\n  return nil\nend",
  "  local max_count = -1\n  local max_word = nil\n  for _, word in ipairs(words)\
    \ do\n    local count = #word\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \ local max_count = 0\n  local max_word\n  for _, word in ipairs(words) do\n \
    \   local count = 0\n    for _, c in ipairs(word) do\n      count = count + 1\n\
    \    end\n    if count > max_count then\n      max_count = count\n      max_word\
    \ = word\n    end\n  end\n  return max_word\nend", "  local max_count = 0\n  local\
    \ max_word\n  for _, word in ipairs(words) do\n    local count = 0\n    for _,\
    \ c in ipairs(word) do\n      count = count + 1\n    end\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "  local max = 0\n  local word\n  for word in words do\n   \
    \ max = max or 0\n    for i = 1, #word do\n      max = max + (#word:sub(1, i)\
    \ == #word:sub(i, #word))\n    end\n  end\n  return words[#words]\nend", "  local\
    \ max = 0\n  local word\n  for word in words do\n    max = max or #word\n    for\
    \ i = 1, #word do\n      local count = 0\n      for j = 1, #word do\n        if\
    \ word[i] == word[j] then\n          count = count + 1\n        end\n      end\n\
    \      if count > max then\n        max = count\n      end\n    end\n  end\n \
    \ return words[#words]\nend", "  local max_count = 0\n  local max_word\n  for\
    \ _, word in ipairs(words) do\n    local count = 0\n    for _, c in ipairs(word)\
    \ do\n      count = count + 1\n    end\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \ local max = {}\n  for _, word in ipairs(words) do\n    local count = {}\n  \
    \  for _, c in ipairs(word) do\n      count[c] = count[c] or 0\n      count[c]\
    \ = count[c] + 1\n    end\n    local maxc = nil\n    for c, count in pairs(count)\
    \ do\n      if count > maxc then\n        maxc = count\n        max = {}\n   \
    \   end\n      max[c] = count\n    end\n  end\n  return max\nend", "  local max_count\
    \ = 0\n  local max_word\n  for _, word in ipairs(words) do\n    local count =\
    \ 0\n    for _, c in pairs(word) do\n      count = count + 1\n    end\n    if\
    \ count > max_count then\n      max_count = count\n      max_word = word\n   \
    \ end\n  end\n  return max_word\nend", "  local max_count = -1\n  local max_word\n\
    \  for _, word in ipairs(words) do\n    local count = #word\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "  local max = {}\n  for _, word in ipairs(words) do\n    local\
    \ count = {}\n    for _, c in ipairs(word) do\n      count[c] = count[c] or 0\n\
    \      count[c] = count[c] + 1\n    end\n    local maxc = nil\n    for c, _ in\
    \ pairs(count) do\n      if maxc == nil or count[c] > count[maxc] then\n     \
    \   maxc = c\n      end\n    end\n    table.insert(max, maxc)\n  end\n  table.sort(max)\n\
    \  return max[1]\nend", "  local max_count = 0\n  local max_word\n  for _, word\
    \ in ipairs(words) do\n    local count = #word\n    if count > max_count then\n\
    \      max_count = count\n      max_word = word\n    end\n  end\n  return max_word\n\
    end", "  local max_count = 0\n  local max_word\n  for _, word in ipairs(words)\
    \ do\n    local count = #word\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \ local max_count = 0\n  local max_word\n  for _, word in ipairs(words) do\n \
    \   local count = #word\n    if count > max_count then\n      max_count = count\n\
    \      max_word = word\n    end\n  end\n  return max_word\nend", "  local max_count\
    \ = -1\n  local max_word\n  for _, word in ipairs(words) do\n    local count =\
    \ #word\n    if count > max_count then\n      max_count = count\n      max_word\
    \ = word\n    end\n  end\n  return max_word\nend", "  local max_count = 0\n  local\
    \ max_word\n  for _, word in ipairs(words) do\n    local count = 0\n    for _,\
    \ char in ipairs(word) do\n      count = count + 1\n    end\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "  local max = 0\n  local word\n  for word in words do\n   \
    \ max = math.max(max, #word)\n  end\n  local words = {}\n  for word in words do\n\
    \    words[#words + 1] = word\n  end\n  table.sort(words, function(a, b) return\
    \ #a > #b end)\n  return words[max]\nend", "  local max_count = -1\n  local max_word\n\
    \  for _, word in ipairs(words) do\n    local count = 0\n    for _, char in ipairs(word)\
    \ do\n      count = count + 1\n    end\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \ local max_count = 0\n  local max_word\n  for _, word in ipairs(words) do\n \
    \   local count = 0\n    for _, c in ipairs(word) do\n      count = count + 1\n\
    \    end\n    if count > max_count then\n      max_count = count\n      max_word\
    \ = word\n    end\n  end\n  return max_word\nend", "  local max_count = -1\n \
    \ local max_word\n  for _, word in ipairs(words) do\n    local count = 0\n   \
    \ for _, char in ipairs(word) do\n      count = count + 1\n    end\n    if count\
    \ > max_count then\n      max_count = count\n      max_word = word\n    end\n\
    \  end\n  return max_word\nend", "  local max_count = 0\n  local max_word\n  for\
    \ _, word in ipairs(words) do\n    local count = 0\n    for _, char in pairs(word)\
    \ do\n      count = count + 1\n    end\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \ local max_count = -1\n  local max_word\n  for _, word in ipairs(words) do\n\
    \    local count = #word\n    if count > max_count then\n      max_count = count\n\
    \      max_word = word\n    end\n  end\n  return max_word\nend", "  local max\
    \ = {}\n  for _, word in pairs(words) do\n    local count = {}\n    for _, c in\
    \ pairs(word) do\n      count[c] = count[c] + 1 or 1\n    end\n    local maxc\
    \ = count.keys[count.keys]\n    if maxc then\n      max[maxc] = word\n    end\n\
    \  end\n  local maxc = max.keys[max.keys]\n  if maxc then\n    return max[maxc]\n\
    \  end\nend", "  local max = 0\n  local word\n  for word in words do\n    max\
    \ = max or 0\n    for i = 1, #word do\n      max = max + (#word[i] + 1) -- count\
    \ the number of unique characters\n    end\n  end\n  return words[#words]\nend",
  "  local max = {}\n  for _, word in ipairs(words) do\n    local count = {}\n   \
    \ for _, c in ipairs(word) do\n      count[c] = count[c] or 0\n      count[c]\
    \ = count[c] + 1\n    end\n    local maxc = nil\n    for c, _ in pairs(count)\
    \ do\n      if maxc == nil or maxc > c then\n        maxc = c\n      end\n   \
    \ end\n    if maxc then\n      max[#max+1] = word\n    end\n  end\n  table.sort(max,\
    \ function(a, b) return #a > #b end)\n  return max[1]\nend", "  local max = 0\n\
    \  local word\n  for word in words do\n    max = max or #word\n    if #word >\
    \ max then\n      max = #word\n    end\n  end\n  if max > 0 then\n    local maxChars\
    \ = {}\n    for word in words do\n      local count = 0\n      for char in word\
    \ do\n        count = count + 1\n        if #maxChars < count then\n         \
    \ maxChars[#maxChars + 1] = char\n        end\n      end\n    end\n    local maxChar\
    \ = #maxChars\n    for word in words do\n      local count = 0\n      for char\
    \ in word do\n        count = count + 1\n        if #maxChars == count then\n\
    \          break\n        end\n      end\n      if #word == max then\n       \
    \ return word\n      end\n    end\n  end\n  return nil\nend", "  local max_count\
    \ = -1\n  local max_word\n  for _, word in ipairs(words) do\n    local count =\
    \ #word\n    if count > max_count then\n      max_count = count\n      max_word\
    \ = word\n    end\n  end\n  return max_word\nend", "  local max = {}\n  for _,\
    \ word in ipairs(words) do\n    local count = {}\n    for _, c in ipairs(word)\
    \ do\n      count[c] = count[c] or 0\n      count[c] = count[c] + 1\n    end\n\
    \    local maxC = table.unpack(count, 1, #count)\n    if maxC[1] > max[1] then\n\
    \      max[1] = maxC[1]\n      max[2] = word\n    end\n  end\n  return max[2]\n\
    end", "  local max_count = -1\n  local max_word = nil\n  for _, word in ipairs(words)\
    \ do\n    local count = #word\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \ local max_count = -1\n  local max_word = nil\n  for _, word in ipairs(words)\
    \ do\n    local count = #word\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \ local max = 0\n  local word\n  for word in words do\n    max = max + 1\n  end\n\
    \  for word in words do\n    local count = 0\n    for char in word do\n      count\
    \ = count + 1\n    end\n    if count > max then\n      max = count\n    end\n\
    \  end\n  return words[#words]\nend", "  local max_count = 0\n  local max_word\n\
    \  for _, word in ipairs(words) do\n    local count = 0\n    for _, char in ipairs(word)\
    \ do\n      count = count + 1\n    end\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \ local max_count = 0\n  local max_word\n  for _, word in ipairs(words) do\n \
    \   local count = 0\n    for _, c in ipairs(word) do\n      count = count + 1\n\
    \      if count > max_count then\n        max_count = count\n        max_word\
    \ = word\n      end\n    end\n  end\n  return max_word\nend", "  local max = {}\n\
    \  for _, word in ipairs(words) do\n    local count = {}\n    for _, c in ipairs(word)\
    \ do\n      count[c] = count[c] or 0\n      count[c] = count[c] + 1\n    end\n\
    \    local maxc = count.max\n    if maxc then\n      max[#max+1] = word\n    end\n\
    \  end\n  local maxc = max.max\n  if maxc then\n    return max[#max+1]\n  end\n\
    end", "  local max = {}\n  for _, word in ipairs(words) do\n    local count =\
    \ {}\n    for _, c in ipairs(word) do\n      count[c] = count[c] or 0\n      count[c]\
    \ = count[c] + 1\n    end\n    for _, c in pairs(count) do\n      if count[c]\
    \ > max[c] then\n        max[c] = count[c]\n      end\n    end\n  end\n  local\
    \ maxCount = 0\n  for _, c in pairs(max) do\n    if max[c] > maxCount then\n \
    \     maxCount = max[c]\n    end\n  end\n  local maxWord = nil\n  for _, word\
    \ in ipairs(words) do\n    local count = {}\n    for _, c in ipairs(word) do\n\
    \      count[c] = count[c] or 0\n      count[c] = count[c] + 1\n    end\n    for\
    \ _, c in pairs(count) do\n      if count[c] == maxCount then\n        maxWord\
    \ = word\n        break\n      end\n    end\n  end\n  return maxWord\nend", " \
    \ local max_count = -1\n  local max_word = nil\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for _, c in ipairs(word) do\n      count = count\
    \ + 1\n    end\n    if count > max_count then\n      max_count = count\n     \
    \ max_word = word\n    end\n  end\n  return max_word\nend", "  local max = 0\n\
    \  local word\n  for word in words do\n    max = max or 0\n    for i = 1, #word\
    \ do\n      max = max + (#word:sub(1, i) == #word:sub(i, #word))\n    end\n  end\n\
    \  return words[#words]\nend", "  local max = 0\n  local word\n  for word in words\
    \ do\n    max = max + 1\n  end\n  for word in words do\n    local count = 0\n\
    \    for char in word do\n      count = count + 1\n      if count > max then\n\
    \        max = count\n      end\n    end\n  end\n  return words[#words]\nend",
  "  local max = 0\n  local word\n  for word in words do\n    max = max + 1\n  end\n\
    \  for word in words do\n    local count = 0\n    for char in word do\n      count\
    \ = count + 1\n      if max < count then\n        max = count\n      end\n   \
    \ end\n  end\n  return words[#words]\nend", "  local max_count = -1\n  local max_word\
    \ = nil\n  for _, word in ipairs(words) do\n    local count = 0\n    for _, char\
    \ in pairs(word) do\n      count = count + 1\n    end\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "  local max_count = 0\n  local max_word\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for _, c in ipairs(word) do\n      count = count\
    \ + 1\n    end\n    if count > max_count then\n      max_count = count\n     \
    \ max_word = word\n    end\n  end\n  return max_word\nend", "  local max_count\
    \ = 0\n  local max_word\n  for _, word in ipairs(words) do\n    local count =\
    \ 0\n    for _, c in ipairs(word) do\n      count = count + 1\n    end\n    if\
    \ count > max_count then\n      max_count = count\n      max_word = word\n   \
    \ end\n  end\n  return max_word\nend", "  local max = {}\n  for _, word in ipairs(words)\
    \ do\n    local count = {}\n    for _, c in ipairs(word) do\n      count[c] =\
    \ count[c] or 0\n      count[c] = count[c] + 1\n    end\n    local maxc = nil\n\
    \    for c, _ in pairs(count) do\n      if maxc == nil or count[c] > count[maxc]\
    \ then\n        maxc = c\n      end\n    end\n    max[word] = maxc or word\n \
    \ end\n  table.sort(max, function(a, b) return a[b] <=> a[find_max(b)] end)\n\
    \  return max[1]\nend", "  local max = {}\n  local i = 1\n  for word in words\
    \ do\n    local count = {}\n    for char in word do\n      count[char] = count[char]\
    \ or 0\n      count[char] = count[char] + 1\n    end\n    local maxChar = nil\n\
    \    for char, count in pairs(count) do\n      if count > max[count] then\n  \
    \      maxChar = char\n        max[count] = count\n      end\n    end\n    if\
    \ maxChar then\n      table.insert(max, maxChar)\n    end\n  end\n  table.sort(max)\n\
    \  return max[1]\nend", "  local max_count = -1\n  local max_word\n  for _, word\
    \ in ipairs(words) do\n    local count = #word\n    if count > max_count then\n\
    \      max_count = count\n      max_word = word\n    end\n  end\n  return max_word\n\
    end", "  local max_count = -1\n  local max_word = nil\n  for _, word in ipairs(words)\
    \ do\n    local count = #word\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \ local max_count = 0\n  local max_word\n  for _, word in ipairs(words) do\n \
    \   local count = #word\n    if count > max_count then\n      max_count = count\n\
    \      max_word = word\n    end\n  end\n  return max_word\nend", "  local max_count\
    \ = 0\n  local max_word\n  for _, word in ipairs(words) do\n    local count =\
    \ #word\n    if count > max_count then\n      max_count = count\n      max_word\
    \ = word\n    end\n  end\n  return max_word\nend", "  local max = 0\n  local word\n\
    \  for word in words do\n    max = max + 1\n  end\n  for word in words do\n  \
    \  max = max - 1\n    if max < 0 then\n      return word\n    end\n  end\nend",
  "  local max_count = -1\n  local max_word\n  for _, word in ipairs(words) do\n \
    \   local count = #word\n    if count > max_count then\n      max_count = count\n\
    \      max_word = word\n    end\n  end\n  return max_word\nend", "  local max_count\
    \ = 0\n  local max_word\n  for _, word in ipairs(words) do\n    local count =\
    \ 0\n    for _, c in ipairs(word) do\n      count = count + 1\n    end\n    if\
    \ count > max_count then\n      max_count = count\n      max_word = word\n   \
    \ end\n  end\n  return max_word\nend", "  local max_count = 0\n  local max_word\n\
    \  for _, word in ipairs(words) do\n    local count = #word\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "  local max_count = 0\n  local max_word\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for _, c in ipairs(word) do\n      count = count\
    \ + 1\n    end\n    if count > max_count then\n      max_count = count\n     \
    \ max_word = word\n    end\n  end\n  return max_word\nend", "  local max_count\
    \ = 0\n  local max_word\n  for _, word in ipairs(words) do\n    local count =\
    \ #word\n    if count > max_count then\n      max_count = count\n      max_word\
    \ = word\n    end\n  end\n  return max_word\nend", "  local max_count = -1\n \
    \ local max_word\n  for _, word in ipairs(words) do\n    local count = #word\n\
    \    if count > max_count then\n      max_count = count\n      max_word = word\n\
    \    end\n  end\n  return max_word\nend", "  local max = 0\n  local word\n  for\
    \ word in words do\n    max = max + 1\n  end\n  for word in words do\n    if max\
    \ > #word then\n      return word\n    end\n  end\nend", "  local max = 0\n  local\
    \ word\n  for word in words do\n    local count = 0\n    for char in word do\n\
    \      count = count + 1\n      if count > max then\n        max = count\n   \
    \   end\n    end\n  end\n  return word\nend", "  local max = {}\n  for _, word\
    \ in ipairs(words) do\n    local count = {}\n    for _, char in ipairs(word) do\n\
    \      count[char] = count[char] or 0\n      count[char] = count[char] + 1\n \
    \   end\n    for _, char in pairs(count) do\n      if count[char] > max[char]\
    \ then\n        max[char] = count[char]\n      end\n    end\n  end\n  for _, char\
    \ in pairs(max) do\n    if max[char] == 1 then\n      return char\n    end\n \
    \ end\n  return nil\nend", "  local max_count = -1\n  local max_word = nil\n \
    \ for _, word in ipairs(words) do\n    local count = #word\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "  local max_count = 0\n  local max_word\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for _, char in ipairs(word) do\n      count = count\
    \ + 1\n    end\n    if count > max_count then\n      max_count = count\n     \
    \ max_word = word\n    end\n  end\n  return max_word\nend", "  local max_count\
    \ = 0\n  local max_word = \"\"\n  for _, word in ipairs(words) do\n    local count\
    \ = 0\n    for _, c in ipairs(word) do\n      count = count + 1\n      if count\
    \ > max_count then\n        max_count = count\n        max_word = word\n     \
    \ end\n    end\n  end\n  return max_word\nend", "  local max = 0\n  local word\n\
    \  for word in words do\n    max = max + 1\n  end\n  for word in words do\n  \
    \  max = max - 1\n    if max < 0 then\n      return word\n    end\n  end\nend",
  "  local max_count = -1\n  local max_word = nil\n  for _, word in ipairs(words)\
    \ do\n    local count = #word\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \ local max_count = 0\n  local max_word\n  for _, word in ipairs(words) do\n \
    \   local count = 0\n    for _, char in ipairs(word) do\n      count = count +\
    \ 1\n    end\n    if count > max_count then\n      max_count = count\n      max_word\
    \ = word\n    end\n  end\n  return max_word\nend", "  local max = 0\n  local word\n\
    \  for word in words do\n    local count = 0\n    for c in word do\n      count\
    \ = count + 1\n      if count > max then\n        max = count\n      end\n   \
    \ end\n  end\n  return word\nend", "  local max_count = -1\n  local max_word\n\
    \  for _, word in ipairs(words) do\n    local count = #word\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "  local max_count = 0\n  local max_word\n  for _, word in ipairs(words)\
    \ do\n    local count = #word\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \ local max_count = 0\n  local max_word\n  for _, word in ipairs(words) do\n \
    \   local count = 0\n    for _, char in ipairs(word) do\n      count = count +\
    \ 1\n    end\n    if count > max_count then\n      max_count = count\n      max_word\
    \ = word\n    end\n  end\n  return max_word\nend", "  local max_count = 0\n  local\
    \ max_word = ''\n  for _, word in ipairs(words) do\n    local count = #word\n\
    \    if count > max_count then\n      max_count = count\n      max_word = word\n\
    \    end\n  end\n  return max_word\nend", "  local max_count = -1\n  local max_word\n\
    \  for _, word in ipairs(words) do\n    local count = 0\n    for _, char in ipairs(word)\
    \ do\n      count = count + 1\n    end\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \ local max_count = -1\n  local max_word\n  for _, word in ipairs(words) do\n\
    \    local count = #word\n    if count > max_count then\n      max_count = count\n\
    \      max_word = word\n    end\n  end\n  return max_word\nend", "  local max\
    \ = 0\n  local word\n  for word in words do\n    max = math.max(max, #word)\n\
    \  end\n  for word in words do\n    max = math.max(max, #word)\n  end\n  for word\
    \ in words do\n    max = math.max(max, #word)\n  end\n  for word in words do\n\
    \    max = math.max(max, #word)\n  end\n  return words[#words]\nend", "  local\
    \ max_count = -1\n  local max_word\n  for _, word in ipairs(words) do\n    local\
    \ count = #word\n    if count > max_count then\n      max_count = count\n    \
    \  max_word = word\n    end\n  end\n  return max_word\nend", "  local max_count\
    \ = 0\n  local max_word\n  for _, word in ipairs(words) do\n    local count =\
    \ 0\n    for _, c in ipairs(word) do\n      count = count + 1\n    end\n    if\
    \ count > max_count then\n      max_count = count\n      max_word = word\n   \
    \ end\n  end\n  return max_word\nend", "  local max = {}\n  for _, word in ipairs(words)\
    \ do\n    local count = {}\n    for _, c in ipairs(word) do\n      count[c] =\
    \ count[c] or 0\n      count[c] = count[c] + 1\n    end\n    for _, c in pairs(count)\
    \ do\n      if count[c] > max[c] then\n        max[c] = count[c]\n      end\n\
    \    end\n  end\n  for _, c in pairs(max) do\n    if max[c] == 1 then\n      return\
    \ c\n    end\n  end\nend", "  local max_count = -1\n  local max_word\n  for _,\
    \ word in ipairs(words) do\n    local count = #word\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "  local max = 0\n  local word\n  for word in words do\n   \
    \ local count = 0\n    for char in word do\n      count = count + 1\n    end\n\
    \    if count > max then\n      max = count\n    end\n  end\n  if max > 0 then\n\
    \    return words[#words]\n  end\nend", "  local max_count = -1\n  local max_word\n\
    \  for _, word in ipairs(words) do\n    local count = 0\n    for _, char in pairs(word)\
    \ do\n      count = count + 1\n    end\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \ local max = 0\n  local word\n  for word in words do\n    max = max + 1\n  end\n\
    \  local unique = {}\n  for word in words do\n    table.insert(unique, #unique)\n\
    \  end\n  table.sort(unique)\n  for _, word in ipairs(unique) do\n    if word\
    \ > max then\n      return word\n    end\n  end\n  return words[1]\nend", "  local\
    \ max_count = -1\n  local max_word\n  for _, word in ipairs(words) do\n    local\
    \ count = #word\n    if count > max_count then\n      max_count = count\n    \
    \  max_word = word\n    end\n  end\n  return max_word\nend", "  local max_count\
    \ = -1\n  local max_word\n  for _, word in ipairs(words) do\n    local count =\
    \ #word\n    if count > max_count then\n      max_count = count\n      max_word\
    \ = word\n    end\n  end\n  return max_word\nend", "  local max_count = -1\n \
    \ local max_word\n  for _, word in ipairs(words) do\n    local count = #word\n\
    \    if count > max_count then\n      max_count = count\n      max_word = word\n\
    \    end\n  end\n  return max_word\nend", "  local max_count = -1\n  local max_word\n\
    \  for _, word in ipairs(words) do\n    local count = #word\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "  local max_count = 0\n  local max_word\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for _, char in ipairs(word) do\n      count = count\
    \ + 1\n    end\n    if count > max_count then\n      max_count = count\n     \
    \ max_word = word\n    end\n  end\n  return max_word\nend", "  local max_count\
    \ = 0\n  local max_word\n  for _, word in ipairs(words) do\n    local count =\
    \ 0\n    for _, c in ipairs(word) do\n      count = count + 1\n    end\n    if\
    \ count > max_count then\n      max_count = count\n      max_word = word\n   \
    \ end\n  end\n  return max_word\nend", "  local max = {}\n  for _, word in ipairs(words)\
    \ do\n    local count = {}\n    for _, char in ipairs(word) do\n      count[char]\
    \ = count[char] or 0\n      count[char] = count[char] + 1\n    end\n    local\
    \ max_count = -1\n    local max_char = nil\n    for _, count in ipairs(count)\
    \ do\n      if count > max_count then\n        max_count = count\n        max_char\
    \ = nil\n      elseif count == max_count then\n        max_char = char\n     \
    \ end\n    end\n    max[#max+1] = max_char\n  end\n  table.sort(max, function(a,\
    \ b) return a < b end)\n  return max[1]\nend", "  local max_count = 0\n  local\
    \ max_word\n  for _, word in ipairs(words) do\n    local count = 0\n    for _,\
    \ c in ipairs(word) do\n      count = count + 1\n    end\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "  local max_count = 0\n  local max_word\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for _, c in ipairs(word) do\n      count = count\
    \ + 1\n    end\n    if count > max_count then\n      max_count = count\n     \
    \ max_word = word\n    end\n  end\n  return max_word\nend", "  local max = {}\n\
    \  local word = {}\n  for _, word in pairs(words) do\n    local unique = {}\n\
    \    for _, char in pairs(word) do\n      table.insert(unique, char)\n    end\n\
    \    table.sort(unique)\n    table.insert(max, table.concat(unique, ''))\n  end\n\
    \  table.sort(max)\n  return max[1]\nend", "  local max_count = -1\n  local max_word\n\
    \  for _, word in ipairs(words) do\n    local count = 0\n    for _, char in pairs(word)\
    \ do\n      count = count + 1\n    end\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \ local max = 0\n  local word\n  for word in words do\n    max = math.max(max,\
    \ #word)\n  end\n  local maxWord = words[max]\n  local maxCharCount = 0\n  local\
    \ maxChar\n  for _, char in string.gmatch(maxWord, '%S') do\n    local count =\
    \ #char\n    if count > maxCharCount then\n      maxCharCount = count\n      maxChar\
    \ = char\n    end\n  end\n  return maxChar\nend", "  local max = 0\n  local word\n\
    \  for word in words do\n    local count = 0\n    for char in word do\n      count\
    \ = count + 1\n    end\n    if count > max then\n      max = count\n    end\n\
    \  end\n  if max > 0 then\n    return words[#words]\n  else\n    return nil\n\
    \  end\nend", "  local max_count = 0\n  local max_word\n  for _, word in ipairs(words)\
    \ do\n    local count = #word\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \ local max_count = 0\n  local max_word\n  for _, word in ipairs(words) do\n \
    \   local count = #word\n    if count > max_count then\n      max_count = count\n\
    \      max_word = word\n    end\n  end\n  return max_word\nend", "  local max_count\
    \ = -1\n  local max_word = nil\n  for _, word in ipairs(words) do\n    local count\
    \ = #word\n    if count > max_count then\n      max_count = count\n      max_word\
    \ = word\n    end\n  end\n  return max_word\nend", "  local max = 0\n  local word\n\
    \  for word in words do\n    max = max + 1\n  end\n  local unique = {}\n  for\
    \ word in words do\n    table.insert(unique, word)\n  end\n  table.sort(unique)\n\
    \  for _, word in ipairs(unique) do\n    if max ~= #unique then\n      return\
    \ word\n    end\n  end\nend", "  local max_count = 0\n  local max_word = nil\n\
    \  for _, word in ipairs(words) do\n    local count = 0\n    for _, c in ipairs(word)\
    \ do\n      count = count + 1\n    end\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \ local max_count = -1\n  local max_word = nil\n  for _, word in ipairs(words)\
    \ do\n    local count = #word\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \ local max = 0\n  local word\n  for word in words do\n    local count = 0\n \
    \   for c in word do\n      count = count + 1\n      if count > max then\n   \
    \     max = count\n      end\n    end\n  end\n  return words[#words]\nend", " \
    \ local max_count = -1\n  local max_word\n  for _, word in ipairs(words) do\n\
    \    local count = #word\n    if count > max_count then\n      max_count = count\n\
    \      max_word = word\n    end\n  end\n  return max_word\nend", "  local max\
    \ = 0\n  local word\n  for word in words do\n    local count = 0\n    for char\
    \ in word do\n      count = count + 1\n      if count > max then\n        max\
    \ = count\n      end\n    end\n  end\n  return word\nend", "  local max = {}\n\
    \  for _, word in ipairs(words) do\n    local count = {}\n    for _, char in ipairs(word)\
    \ do\n      count[char] = count[char] or 0\n      count[char] = count[char] +\
    \ 1\n    end\n    local max_char = nil\n    for _, char in pairs(count) do\n \
    \     if count[char] > count[max_char] then\n        max_char = char\n      end\n\
    \    end\n    max[#max+1] = max_char\n  end\n  table.sort(max, function(a, b)\
    \ return a < b end)\n  return max[1]\nend", "  local max = {}\n  for _, word in\
    \ ipairs(words) do\n    local count = {}\n    for _, c in ipairs(word) do\n  \
    \    count[c] = count[c] or 0\n      count[c] = count[c] + 1\n    end\n    local\
    \ maxc = nil\n    for _, c in pairs(count) do\n      if maxc == nil or count[c]\
    \ > count[maxc] then\n        maxc = c\n      end\n    end\n    max[word] = maxc\n\
    \  end\n  local maxword = nil\n  local maxcount = 0\n  for word, maxc in pairs(max)\
    \ do\n    if maxcount == 0 or maxc > maxcount then\n      maxcount = maxc\n  \
    \    maxword = word\n    end\n  end\n  return maxword\nend", "  local max_count\
    \ = 0\n  local max_word\n  for _, word in ipairs(words) do\n    local count =\
    \ 0\n    for _, c in ipairs(word) do\n      count = count + 1\n    end\n    if\
    \ count > max_count then\n      max_count = count\n      max_word = word\n   \
    \ end\n  end\n  return max_word\nend", "  local max_count = 0\n  local max_word\
    \ = nil\n  for _, word in ipairs(words) do\n    local count = #word\n    if count\
    \ > max_count then\n      max_count = count\n      max_word = word\n    end\n\
    \  end\n  return max_word\nend", "  local max_count = 0\n  local max_word\n  for\
    \ _, word in ipairs(words) do\n    local count = #word\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "  local max_count = -1\n  local max_word\n  for _, word in\
    \ ipairs(words) do\n    local count = #word\n    if count > max_count then\n \
    \     max_count = count\n      max_word = word\n    end\n  end\n  return max_word\n\
    end", "  local max_count = -1\n  local max_word\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for _, c in ipairs(word) do\n      count = count\
    \ + 1\n    end\n    if count > max_count then\n      max_count = count\n     \
    \ max_word = word\n    end\n  end\n  return max_word\nend", "  local max_count\
    \ = 0\n  local max_word\n  for _, word in ipairs(words) do\n    local count =\
    \ #word\n    if count > max_count then\n      max_count = count\n      max_word\
    \ = word\n    end\n  end\n  return max_word\nend", "  local max_count = -1\n \
    \ local max_word = nil\n  for _, word in ipairs(words) do\n    local count = #word\n\
    \    if count > max_count then\n      max_count = count\n      max_word = word\n\
    \    end\n  end\n  return max_word\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

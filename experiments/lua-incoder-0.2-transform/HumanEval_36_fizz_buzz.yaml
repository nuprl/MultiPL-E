name: HumanEval_36_fizz_buzz
language: lua
prompt: "-- Return the number of times the digit 7 appears in integers less than n\
  \ which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
  -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
  \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
  \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
  \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000), 192)\n\
  \    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
  \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local count = 0\n  while n > 0 do\n    if n % 11 == 1 then\n    \
    \  count = count + 1\n    end\n    if n % 13 == 1 then\n      count = count +\
    \ 1\n    end\n    n = math.floor(n/10)\n  end\n  return count\nend", "  if n <\
    \ 10 then\n    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11)\
    \ + 1\n  elseif n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1\n  else\n \
    \   return fizz_buzz(n / 10) + 1\n  end\nend", "  if n < 10 then\n    return n\n\
    \  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1\n  elseif n % 13\
    \ == 0 then\n    return fizz_buzz(n / 13) + 1\n  else\n    return fizz_buzz(n\
    \ / 10) + 1\n  end\nend", "  local count = 0\n  for i = 1, n do\n    if i % 11\
    \ == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n  end\n  return\
    \ count\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n    if i\
    \ % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n    i = i\
    \ + 1\n  end\n  return count\nend", "  local count = 0\n  while n > 0 do\n   \
    \ count = count + 1\n    if n % 11 == 0 then\n      count = count + 1\n    end\n\
    \    if n % 13 == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend", "  if n < 0 then return nil end\n  if n < 10 then\
    \ return n end\n  if n % 11 == 0 then return n end\n  if n % 13 == 0 then return\
    \ n end\n  return fizz_buzz(n - 10)\nend", "  local count = 0\n  while n > 0 do\n\
    \    if n % 11 == 0 then\n      count = count + 1\n    end\n    if n % 13 == 0\
    \ then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n  end\n  return\
    \ count\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n    if i\
    \ % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n    i = i\
    \ + 1\n  end\n  return count\nend", "  local count = 0\n  while n > 0 do\n   \
    \ count = count + 1\n    if n % 11 == 0 then\n      count = count + 1\n    end\n\
    \    if n % 13 == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend", "  local count = 0\n  local i = 1\n  while i <=\
    \ n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n   \
    \ end\n    i = i + 1\n  end\n  return count\nend", "  if n < 0 then\n    return\
    \ 0\n  end\n  if n < 10 then\n    return 1\n  end\n  if n % 11 == 0 and n % 13\
    \ == 0 then\n    return 2\n  end\n  if n % 11 == 0 then\n    return 3\n  end\n\
    \  if n % 13 == 0 then\n    return 4\n  end\n  return 5\nend", "  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend",
  "  local count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i %\
    \ 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n  return\
    \ count\nend", "  if n < 0 then\n    return nil\n  end\n  if n < 11 then\n   \
    \ return 0\n  end\n  if n < 13 then\n    return 1\n  end\n  if n % 11 == 0 then\n\
    \    return 2\n  end\n  if n % 13 == 0 then\n    return 3\n  end\n  return fizz_buzz(n\
    \ - 1)\nend", "  if n < 10 then\n    return n\n  elseif n < 100 then\n    return\
    \ fizz_buzz(n/10) + 1 -- Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n  elseif n < 1000 then\n    return\
    \ fizz_buzz(n/100) + 1 -- Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n  elseif n < 10000 then\n    return\
    \ fizz_buzz(n/1000) + 1 -- Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n  elseif n < 100000 then\n   \
    \ return fizz_buzz(n/10000) + 1 -- Return the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13.\n  elseif n < 1000000\
    \ then\n    return fizz_buzz(n/100000) + 1 -- Return the number of times the digit\
    \ 7 appears in integers less than n which are divisible by 11 or 13.\n  elseif\
    \ n < 10000000 then\n    return fizz_buzz(n/1000000) + 1 -- Return the number\
    \ of times the digit 7 appears in integers less than n which are divisible by\
    \ 11 or 13.\n  elseif n < 100000000 then\n    return fizz_buzz(n/10000000) + 1\
    \ -- Return the number of times the digit 7 appears in integers less than n which\
    \ are divisible by 11 or 13.\n  elseif n < 1000000000 then\n    return fizz_buzz(n/100000000)\
    \ + 1 -- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n  elseif n < 10000000000 then\n    return\
    \ fizz_buzz(n/1000000000) + 1 -- Return the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13.\n  elseif n < 100000000000\
    \ then\n    return fizz_buzz(n/10000000000) + 1 -- Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    \  elseif n < 1000000000000 then\n    return fizz_buzz(n/100000000000) + 1 --\
    \ Return the number of times the digit 7 appears in integers less than n which\
    \ are divisible by 11 or 13.\n  elseif n < 10000000000000 then\n    return fizz_buzz(n/1000000000000)\
    \ + 1 -- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n  elseif n < 100000000000000 then\n    return\
    \ fizz_", "  if n < 10 then\n    return n\n  elseif n % 11 == 0 then\n    return\
    \ fizz_buzz(n / 11) + 1\n  elseif n % 13 == 0 then\n    return fizz_buzz(n / 13)\
    \ + 1\n  else\n    return fizz_buzz(n / 10) + 1\n  end\nend", "  if n < 10 then\n\
    \    return n\n  end\n  if n % 11 == 0 and n % 13 == 0 then\n    return 0\n  end\n\
    \  if n % 11 == 1 then\n    return 1\n  end\n  if n % 13 == 1 then\n    return\
    \ 2\n  end\n  return 3\nend", "  if n < 10 then\n    return n\n  end\n  if n %\
    \ 11 == 0 then\n    return fizz_buzz(n / 11) + 1\n  end\n  if n % 13 == 0 then\n\
    \    return fizz_buzz(n / 13) + 1\n  end\n  return 0\nend", "  if n < 10 then\n\
    \    return n\n  elseif n < 100 then\n    if n % 11 == 0 then\n      return n\n\
    \    elseif n % 13 == 0 then\n      return n\n    else\n      return fizz_buzz(n\
    \ / 10) * 10 + n % 10\n    end\n  else\n    return fizz_buzz(n / 100) * 100 +\
    \ fizz_buzz(n % 100)\n  end\nend", "  if n < 10 then\n    return n\n  end\n  if\
    \ n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1\n  end\n  if n % 13 == 0\
    \ then\n    return fizz_buzz(n / 13) + 1\n  end\n  return 0\nend", "  if n < 10\
    \ then\n    return n\n  end\n  if n % 11 == 0 then\n    return fizz_buzz(n / 11)\
    \ + 1\n  end\n  if n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1\n  end\n\
    \  return 0\nend", "  local count = 0\n  while n > 0 do\n    count = count + 1\n\
    \    if n % 11 == 0 then count = count + 1 end\n    if n % 13 == 0 then count\
    \ = count + 1 end\n    n = math.floor(n/10)\n  end\n  return count\nend", "  local\
    \ count = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n    \
    \  count = count + 1\n    end\n  end\n  return count\nend", "  local count = 0\n\
    \  while n > 0 do\n    if n % 11 == 0 then count = count + 1 end\n    if n % 13\
    \ == 0 then count = count + 1 end\n    n = math.floor(n/10)\n  end\n  return count\n\
    end", "  local count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0\
    \ and i % 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n\
    \  return count\nend", "  local count = 0\n  while n > 0 do\n    count = count\
    \ + 1\n    local remainder = n % 11\n    if remainder == 0 or remainder == 13\
    \ then\n      n = n / 11\n    else\n      n = n / 13\n    end\n  end\n  return\
    \ count\nend", "  local count = 0\n  while n > 0 do\n    count = count + 1\n \
    \   if n % 11 == 0 then\n      count = count + 1\n    end\n    if n % 13 == 0\
    \ then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n  end\n  return\
    \ count\nend", "  if n < 0 then\n    return nil\n  end\n  if n < 10 then\n   \
    \ return n\n  end\n  if n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1\n \
    \ end\n  if n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1\n  end\n  return\
    \ nil\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n    if i %\
    \ 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n    i = i +\
    \ 1\n  end\n  return count\nend", "  local count = 0\n  for i = 1, n do\n    if\
    \ i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n  end\n\
    \  return count\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n\
    \    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n \
    \   i = i + 1\n  end\n  return count\nend", "  if n < 0 then\n    return nil\n\
    \  end\n  if n < 10 then\n    return n\n  end\n  if n % 11 == 0 then\n    return\
    \ fizz_buzz(n / 11) + 1\n  end\n  if n % 13 == 0 then\n    return fizz_buzz(n\
    \ / 13) + 1\n  end\n  return nil\nend", "  if n < 0 then\n    return 0\n  end\n\
    \  if n < 10 then\n    return n\n  end\n  if n % 11 == 0 and n % 13 == 0 then\n\
    \    return 1\n  end\n  if n % 11 == 0 then\n    return 2\n  end\n  if n % 13\
    \ == 0 then\n    return 3\n  end\n  return 0\nend", "  local count = 0\n  while\
    \ n > 0 do\n    count = count + 1\n    if n % 11 == 0 then\n      count = count\
    \ + 1\n    end\n    if n % 13 == 0 then\n      count = count + 1\n    end\n  \
    \  n = math.floor(n/10)\n  end\n  return count\nend", "  local count = 0\n  while\
    \ n > 0 do\n    if n % 11 == 0 then count = count + 1 end\n    if n % 13 == 0\
    \ then count = count + 1 end\n    n = math.floor(n/10)\n  end\n  return count\n\
    end", "  local count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0\
    \ and i % 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n\
    \  return count\nend", "  local count = 0\n  for i = 1, n do\n    if i % 11 ==\
    \ 0 and i % 13 == 0 then\n      count = count + 1\n    end\n  end\n  return count\n\
    end", "  if n < 0 then\n    return 0\n  end\n  if n % 11 == 0 and n % 13 == 0\
    \ then\n    return 1\n  end\n  if n % 11 == 1 then\n    return 2\n  end\n  if\
    \ n % 13 == 1 then\n    return 3\n  end\n  return 0\nend", "  local count = 0\n\
    \  while n > 0 do\n    if n % 11 == 0 then\n      count = count + 1\n    end\n\
    \    if n % 13 == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend", "  if n < 10 then\n    return n\n  elseif n < 100\
    \ then\n    if n % 11 == 0 then\n      return n\n    elseif n % 13 == 0 then\n\
    \      return n\n    else\n      return nil\n    end\n  else\n    return fizz_buzz(n\
    \ / 10) * 10 + n % 10\n  end\nend", "  if n < 10 then\n    return n\n  elseif\
    \ n < 100 then\n    if n % 11 == 0 then\n      return n\n    elseif n % 13 ==\
    \ 0 then\n      return n\n    else\n      return fizz_buzz(n - 10)\n    end\n\
    \  else\n    return fizz_buzz(n - 100)\n  end\nend", "  local count = 0\n  for\
    \ i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count +\
    \ 1\n    end\n  end\n  return count\nend", "  local count = 0\n  for i = 1, n\
    \ do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n\
    \  end\n  return count\nend", "  local count = 0\n  while n > 0 do\n    if n %\
    \ 11 == 0 then\n      count = count + 1\n    end\n    if n % 13 == 0 then\n  \
    \    count = count + 1\n    end\n    n = math.floor(n/10)\n  end\n  return count\n\
    end", "  if n < 10 then\n    return n\n  end\n  if n % 11 == 0 and n % 13 == 0\
    \ then\n    return n\n  end\n  return fizz_buzz(n - 10) + fizz_buzz(n - 9)\nend",
  "  local count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i %\
    \ 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n  return\
    \ count\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n    if i\
    \ % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n    i = i\
    \ + 1\n  end\n  return count\nend", "  if n < 10 then\n    return n\n  elseif\
    \ n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1\n  elseif n % 13 == 0 then\n\
    \    return fizz_buzz(n / 13) + 1\n  else\n    return fizz_buzz(n / 10) + 1\n\
    \  end\nend", "  if n < 10 then\n    return n\n  elseif n % 11 == 0 then\n   \
    \ return fizz_buzz(n / 11) + 1 -- Return the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11.\n  elseif n % 13 == 0 then\n\
    \    return fizz_buzz(n / 13) + 1 -- Return the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 13.\n  else\n    return fizz_buzz(n\
    \ / 10) + 1 -- Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 10 and 11.\n  end\nend", "  if n < 0 then\n  \
    \  return nil\n  end\n  if n < 10 then\n    return n\n  end\n  if n % 11 == 0\
    \ and n % 13 == 0 then\n    return n\n  end\n  return fizz_buzz(n - 10)\nend",
  "  local count = 0\n  local div = math.floor(n/11)\n  if div == 0 then\n    count\
    \ = count + 1\n  end\n  n = n - div * 11\n  div = math.floor(n/13)\n  if div ==\
    \ 0 then\n    count = count + 1\n  end\n  n = n - div * 13\n  return count\nend",
  "  local count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i %\
    \ 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n  return\
    \ count\nend", "  if n < 10 then\n    return n\n  elseif n % 11 == 0 and n % 13\
    \ == 0 then\n    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n /\
    \ 11) + 1\n  elseif n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1\n  else\n\
    \    return fizz_buzz(n / 11) + 1\n  end\nend", "  local count = 0\n  local i\
    \ = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend", "  if n <\
    \ 0 then\n    return nil\n  end\n  if n < 10 then\n    return n\n  end\n  if n\
    \ % 11 == 0 and n % 13 == 0 then\n    return n\n  end\n  local count = 0\n  local\
    \ i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend", "  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend",
  "  local count = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend", "  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend",
  "  local count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i %\
    \ 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n  return\
    \ count\nend", "  local count = 0\n  while n > 0 do\n    if n % 11 == 0 then\n\
    \      count = count + 1\n    end\n    if n % 13 == 0 then\n      count = count\
    \ + 1\n    end\n    n = math.floor(n/10)\n  end\n  return count\nend", "  local\
    \ count = 0\n  while n >= 11 or n >= 13 do\n    count = count + 1\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend", "  local count = 0\n  local i = 1\n  while i <=\
    \ n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n   \
    \ end\n    i = i + 1\n  end\n  return count\nend", "  local count = 0\n  local\
    \ i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend", "  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend", "  local count = 0\n  while\
    \ n > 0 do\n    if n % 11 == 0 then\n      count = count + 1\n    end\n    if\
    \ n % 13 == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend", "  local count = 0\n  local i = 1\n  while i <=\
    \ n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n   \
    \ end\n    i = i + 1\n  end\n  return count\nend", "  if n < 0 then\n    return\
    \ nil\n  end\n  if n < 10 then\n    return n\n  end\n  if n % 11 == 0 then\n \
    \   return fizz_buzz(n / 11) + 1\n  end\n  if n % 13 == 0 then\n    return fizz_buzz(n\
    \ / 13) + 1\n  end\n  return nil\nend", "  if n < 0 then\n    return 0\n  end\n\
    \  if n % 11 == 0 and n % 13 == 0 then\n    return 1\n  end\n  if n % 11 == 1\
    \ then\n    return 2\n  end\n  if n % 13 == 1 then\n    return 3\n  end\n  return\
    \ 0\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n    if n % i\
    \ == 0 and n % 11 == 0 and n % 13 == 0 then\n      count = count + 1\n    end\n\
    \    i = i + 1\n  end\n  return count\nend", "  local count = 0\n  while n > 0\
    \ do\n    if n % 11 == 1 then\n      count = count + 1\n    end\n    if n % 13\
    \ == 1 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n  end\n\
    \  return count\nend", "  if n < 10 then\n    return n\n  elseif n % 11 == 0 and\
    \ n % 13 == 0 then\n    return n\n  elseif n % 11 == 1 then\n    return fizz_buzz(n\
    \ / 11) + 1\n  elseif n % 13 == 1 then\n    return fizz_buzz(n / 13) + 1\n  else\n\
    \    return fizz_buzz(n / 10) + 1\n  end\nend", "  local count = 0\n  local i\
    \ = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend", "  local count\
    \ = 0\n  while n > 0 do\n    count = count + 1\n    local remainder = n % 11\n\
    \    if remainder == 0 then\n      count = count + 1\n      remainder = n % 13\n\
    \    end\n    n = math.floor(n/10)\n  end\n  return count\nend", "  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend",
  "  if n < 0 then\n    return 0\n  end\n  if n % 11 == 0 then\n    return 1\n  end\n\
    \  if n % 13 == 0 then\n    return 2\n  end\n  return fizz_buzz(n - 1)\nend",
  "  local count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i %\
    \ 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n  return\
    \ count\nend", "  local count = 0\n  for i = 1, n do\n    if i % 11 == 0 and i\
    \ % 13 == 0 then\n      count = count + 1\n    end\n  end\n  return count\nend",
  "  local count = 0\n  while n >= 11 or n >= 13 do\n    count = count + 1\n    n\
    \ = math.floor(n/10)\n  end\n  return count\nend", "  local count = 0\n  for i\
    \ = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n\
    \    end\n  end\n  return count\nend", "  local count = 0\n  for i = 1, n do\n\
    \    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n \
    \ end\n  return count\nend", "  local count = 0\n  local i = 1\n  while i <= n\
    \ do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n\
    \    i = i + 1\n  end\n  return count\nend", "  if n < 10 then\n    return n\n\
    \  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1 -- Add 1 because\
    \ we count the digit 7 twice.\n  elseif n % 13 == 0 then\n    return fizz_buzz(n\
    \ / 13) + 1 -- Add 1 because we count the digit 7 twice.\n  else\n    return fizz_buzz(n\
    \ / 10) + 1 -- Add 1 because we count the digit 7 twice.\n  end\nend", "  local\
    \ count = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n    \
    \  count = count + 1\n    end\n  end\n  return count\nend", "  if n < 10 then\n\
    \    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1 --\
    \ Return the number of times the digit 7 appears in integers less than n which\
    \ are divisible by 11.\n  elseif n % 13 == 0 then\n    return fizz_buzz(n / 13)\
    \ + 1 -- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 13.\n  else\n    return fizz_buzz(n / 10) + 1 -- Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 10 and 11.\n  end\nend", "  if n < 10 then\n    return n\n  elseif n % 11\
    \ == 0 then\n    return fizz_buzz(n / 11) + 1 -- Add 1 because fizz buzz starts\
    \ at 1.\n  elseif n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1 -- Add 1\
    \ because fizz buzz starts at 1.\n  else\n    return fizz_buzz(n / 10) + 1 --\
    \ Add 1 because fizz buzz starts at 1.\n  end\nend", "  local count = 0\n  local\
    \ i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend", "  local count\
    \ = 0\n  while n > 0 do\n    if n % 11 == 0 then\n      count = count + 1\n  \
    \  end\n    if n % 13 == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend", "  if n < 0 then\n    return 0\n  end\n  if n %\
    \ 11 == 0 and n % 13 == 0 then\n    return 1\n  end\n  if n % 11 == 0 then\n \
    \   return 2\n  end\n  if n % 13 == 0 then\n    return 3\n  end\n  return 0\n\
    end", "  local count = 0\n  while n > 0 do\n    if n % 11 == 0 then count = count\
    \ + 1 end\n    if n % 13 == 0 then count = count + 1 end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend", "  local count = 0\n  local i = 1\n  while i <=\
    \ n do\n    if n % i == 0 and n % 11 == 0 and n % 13 == 0 then\n      count =\
    \ count + 1\n    end\n    i = i + 1\n  end\n  return count\nend", "  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend", "  if n < 10 then\n    return\
    \ n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1\n  elseif n %\
    \ 13 == 0 then\n    return fizz_buzz(n / 13) + 1\n  else\n    return 0\n  end\n\
    end", "  local count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0\
    \ and i % 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n\
    \  return count\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n\
    \    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n \
    \   i = i + 1\n  end\n  return count\nend", "  local count = 0\n  for i = 1, n\
    \ do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n\
    \  end\n  return count\nend", "  if n < 0 then\n    return 0\n  end\n  if n <\
    \ 11 then\n    return 1\n  end\n  if n < 13 then\n    return 2\n  end\n  if n\
    \ < 21 then\n    return 3\n  end\n  if n < 37 then\n    return 4\n  end\n  if\
    \ n < 53 then\n    return 5\n  end\n  if n < 61 then\n    return 6\n  end\n  if\
    \ n < 67 then\n    return 7\n  end\n  if n < 71 then\n    return 8\n  end\n  if\
    \ n < 77 then\n    return 9\n  end\n  if n < 81 then\n    return 10\n  end\n \
    \ if n < 87 then\n    return 11\n  end\n  if n < 91 then\n    return 12\n  end\n\
    \  if n < 97 then\n    return 13\n  end\n  return 0\nend", "  if n < 10 then\n\
    \    return n\n  elseif n < 100 then\n    if n % 11 == 0 then\n      return n\n\
    \    elseif n % 13 == 0 then\n      return n\n    else\n      return n\n    end\n\
    \  else\n    return fizz_buzz(n / 10) * 10 + n % 10\n  end\nend", "  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend", "  if n < 0 then\n    return\
    \ 0\n  end\n  local count = 0\n  while n > 0 do\n    count = count + 1\n    local\
    \ remainder = n % 11\n    if remainder == 0 or remainder == 13 then\n      count\
    \ = count + 1\n    end\n    n = n / 11\n  end\n  return count\nend", "  local\
    \ count = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n    \
    \  count = count + 1\n    end\n  end\n  return count\nend", "  local count = 0\n\
    \  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n \
    \     count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend",
  "  local count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i %\
    \ 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n  return\
    \ count\nend", "  if n < 10 then\n    return n\n  elseif n % 11 == 0 and n % 13\
    \ == 0 then\n    return fizz_buzz(n / 11) + fizz_buzz(n / 13)\n  elseif n % 11\
    \ == 0 then\n    return fizz_buzz(n / 11) + 1\n  elseif n % 13 == 0 then\n   \
    \ return fizz_buzz(n / 13) + 1\n  else\n    return fizz_buzz(n / 11) + fizz_buzz(n\
    \ / 13)\n  end\nend", "  if n < 10 then\n    return n\n  elseif n % 11 == 0 then\n\
    \    return fizz_buzz(n / 11) + 1 -- Add 1 because we count the digit 7 twice.\n\
    \  elseif n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1 -- Add 1 because\
    \ we count the digit 7 twice.\n  else\n    return fizz_buzz(n / 10) + 1 -- Add\
    \ 1 because we count the digit 7 twice.\n  end\nend", "  local count = 0\n  while\
    \ n > 0 do\n    count = count + 1\n    local remainder = n % 11\n    if remainder\
    \ == 7 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n  end\n\
    \  return count\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n\
    \    if n % i == 0 and n % 11 == 0 and n % 13 == 0 then\n      count = count +\
    \ 1\n    end\n    i = i + 1\n  end\n  return count\nend", "  if n < 0 then\n \
    \   return 0\n  end\n  if n < 10 then\n    return n\n  end\n  if n % 11 == 0 and\
    \ n % 13 == 0 then\n    return 0\n  end\n  if n % 11 == 1 then\n    return 1\n\
    \  end\n  if n % 13 == 1 then\n    return 2\n  end\n  return 3\nend", "  local\
    \ count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 ==\
    \ 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\n\
    end", "  local count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0\
    \ and i % 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n\
    \  return count\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n\
    \    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n \
    \   i = i + 1\n  end\n  return count\nend", "  local count = 0\n  local i = 1\n\
    \  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count\
    \ + 1\n    end\n    i = i + 1\n  end\n  return count\nend", "  if n < 10 then\n\
    \    return n\n  elseif n < 100 then\n    if n % 11 == 0 and n % 13 == 0 then\n\
    \      return n\n    else\n      return fizz_buzz(n / 10) + 1\n    end\n  else\n\
    \    return fizz_buzz(n / 100) + 1\n  end\nend", "  if n < 10 then\n    return\
    \ n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1 -- Return the\
    \ number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11.\n  elseif n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1 -- Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 13.\n  else\n    return fizz_buzz(n / 10) + 1 -- Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 10 and 11.\n\
    \  end\nend", "  local count = 0\n  while n > 0 do\n    count = count + 1\n  \
    \  local remainder = n % 11\n    if remainder == 0 or remainder == 13 then\n \
    \     n = n / 11\n    else\n      n = n / 13\n    end\n  end\n  return count\n\
    end", "  if n < 0 then\n    return 0\n  end\n  if n % 11 == 0 then\n    return\
    \ 1\n  end\n  if n % 13 == 0 then\n    return 2\n  end\n  return fizz_buzz(n -\
    \ 1)\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n    if i % 11\
    \ == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n\
    \  end\n  return count\nend", "  local count = 0\n  local i = 1\n  while i <=\
    \ n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n   \
    \ end\n    i = i + 1\n  end\n  return count\nend", "  local count = 0\n  while\
    \ n > 0 do\n    local remainder = n % 11\n    if remainder == 0 then\n      count\
    \ = count + 1\n    end\n    local remainder2 = n % 13\n    if remainder2 == 0\
    \ then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n  end\n  return\
    \ count\nend", "  if n < 0 then\n    return 0\n  end\n  if n % 11 == 0 then\n\
    \    return 1\n  end\n  if n % 13 == 0 then\n    return 2\n  end\n  return fizz_buzz(n\
    \ - 1)\nend", "  local count = 0\n  while n > 0 do\n    count = count + 1\n  \
    \  if n % 11 == 0 then count = count + 1 end\n    if n % 13 == 0 then count =\
    \ count + 1 end\n    n = math.floor(n/10)\n  end\n  return count\nend", "  local\
    \ count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 ==\
    \ 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\n\
    end", "  local count = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 ==\
    \ 0 then\n      count = count + 1\n    end\n  end\n  return count\nend", "  if\
    \ n < 0 then\n    return 0\n  end\n  if n < 10 then\n    return n\n  end\n  if\
    \ n % 11 == 0 then\n    return n + fizz_buzz(n / 11)\n  end\n  if n % 13 == 0\
    \ then\n    return n + fizz_buzz(n / 13)\n  end\n  return n\nend", "  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend",
  "  local count = 0\n  local i = 1\n  while i <= n do\n    if n % i == 0 and n /\
    \ i ~= 11 and n / i ~= 13 then\n      count = count + 1\n    end\n    i = i +\
    \ 1\n  end\n  return count\nend", "  local count = 0\n  local i = 1\n  while i\
    \ <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n\
    \    end\n    i = i + 1\n  end\n  return count\nend", "  if n < 0 then\n    return\
    \ nil\n  end\n  if n < 10 then\n    return n\n  end\n  if n % 11 == 0 and n %\
    \ 13 == 0 then\n    return 0\n  end\n  if n % 11 == 1 then\n    return 1\n  end\n\
    \  if n % 13 == 1 then\n    return 2\n  end\n  return 3\nend", "  if n < 0 then\n\
    \    return nil\n  end\n  if n < 11 then\n    return n\n  end\n  if n % 11 ==\
    \ 0 then\n    return fizz_buzz(n / 11) + 1\n  end\n  if n % 13 == 0 then\n   \
    \ return fizz_buzz(n / 13) + 1\n  end\n  return nil\nend", "  local count = 0\n\
    \  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count\
    \ + 1\n    end\n  end\n  return count\nend", "  local count = 0\n  local i = 1\n\
    \  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count\
    \ + 1\n    end\n    i = i + 1\n  end\n  return count\nend", "  local count = 0\n\
    \  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n \
    \     count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend",
  "  if n < 10 then\n    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n\
    \ / 11) + 1\n  elseif n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1\n  else\n\
    \    return fizz_buzz(n / 10) + 1\n  end\nend", "  local count = 0\n  for i =\
    \ 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n\
    \    end\n  end\n  return count\nend", "  local count = 0\n  while n > 0 do\n\
    \    if n % 11 == 0 and n % 13 == 0 then\n      count = count + 1\n    end\n \
    \   n = math.floor(n/10)\n  end\n  return count\nend", "  local count = 0\n  local\
    \ i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend", "  local count\
    \ = 0\n  while n > 0 do\n    if n % 11 == 0 then\n      count = count + 1\n  \
    \  end\n    if n % 13 == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend", "  local count = 0\n  local i = 1\n  while i <=\
    \ n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n   \
    \ end\n    i = i + 1\n  end\n  return count\nend", "  if n < 10 then\n    return\
    \ n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1 -- FizzBuzz\n\
    \  elseif n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1 -- FizzBuzz\n  else\n\
    \    return fizz_buzz(n / 10) + 1 -- Fizz\n  end\nend", "  local count = 0\n \
    \ while n > 0 do\n    if n % 11 == 0 then\n      count = count + 1\n    end\n\
    \    if n % 13 == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend", "  local count = 0\n  local i = 1\n  while i <=\
    \ n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n   \
    \ end\n    i = i + 1\n  end\n  return count\nend", "  local count = 0\n  for i\
    \ = 1, n do\n    if n % 11 == 0 and n % 13 == 0 then\n      count = count + 1\n\
    \    end\n    n = math.floor(n/10)\n  end\n  return count\nend", "  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend",
  "  if n < 0 then\n    return nil\n  end\n  if n < 10 then\n    return n\n  end\n\
    \  if n % 11 == 0 and n % 13 == 0 then\n    return n\n  end\n  return fizz_buzz(n\
    \ - 10)\nend", "  local count = 0\n  while n > 0 do\n    if n % 11 == 0 then\n\
    \      count = count + 1\n    end\n    if n % 13 == 0 then\n      count = count\
    \ + 1\n    end\n    n = math.floor(n/10)\n  end\n  return count\nend", "  if n\
    \ < 10 then\n    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n /\
    \ 11) + 1 -- Add 1 to the result because we found a multiple of 11.\n  elseif\
    \ n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1 -- Add 1 to the result because\
    \ we found a multiple of 13.\n  else\n    return fizz_buzz(n / 10) + 1 -- Add\
    \ 1 to the result because we found a multiple of 10.\n  end\nend", "  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend",
  "  if n < 10 then\n    return n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n\
    \ / 11) + 1 -- Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11.\n  elseif n % 13 == 0 then\n    return fizz_buzz(n\
    \ / 13) + 1 -- Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 13.\n  else\n    return fizz_buzz(n / 10) + 1\
    \ -- Return the number of times the digit 7 appears in integers less than n which\
    \ are divisible by 10 and 11.\n  end\nend", "  local count = 0\n  local i = 1\n\
    \  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count\
    \ + 1\n    end\n    i = i + 1\n  end\n  return count\nend", "  local count = 0\n\
    \  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count\
    \ + 1\n    end\n  end\n  return count\nend", "  local count = 0\n  local i = 1\n\
    \  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count\
    \ + 1\n    end\n    i = i + 1\n  end\n  return count\nend", "  local count = 0\n\
    \  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count\
    \ + 1\n    end\n  end\n  return count\nend", "  if n < 10 then\n    return n\n\
    \  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1\n  elseif n % 13\
    \ == 0 then\n    return fizz_buzz(n / 13) + 1\n  else\n    return 0\n  end\nend",
  "  local count = 0\n  while n > 0 do\n    count = count + 1\n    local remainder\
    \ = n % 11\n    if remainder == 0 then\n      count = count + 1\n      remainder\
    \ = n % 13\n    end\n    n = math.floor(n/10)\n  end\n  return count\nend", " \
    \ local count = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend", "  local count\
    \ = 0\n  local div = math.floor(n/11)\n  if div == 0 then\n    count = count +\
    \ 1\n  elseif div == 1 then\n    count = count + 2\n  elseif div == 2 then\n \
    \   count = count + 3\n  elseif div == 3 then\n    count = count + 4\n  elseif\
    \ div == 4 then\n    count = count + 5\n  elseif div == 5 then\n    count = count\
    \ + 6\n  elseif div == 6 then\n    count = count + 7\n  elseif div == 7 then\n\
    \    count = count + 8\n  elseif div == 8 then\n    count = count + 9\n  elseif\
    \ div == 9 then\n    count = count + 10\n  elseif div == 10 then\n    count =\
    \ count + 11\n  elseif div == 11 or div == 13 then\n    count = count + 1\n  else\n\
    \    count = count + 1\n  end\n  return count\nend", "  if n < 10 then\n    return\
    \ n\n  elseif n % 11 == 0 and n % 13 == 0 then\n    return n\n  else\n    return\
    \ fizz_buzz(n - 10) + fizz_buzz(n - 9)\n  end\nend", "  if n < 10 then\n    return\
    \ n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1 -- Add 1 to the\
    \ result because we found a multiple of 11.\n  elseif n % 13 == 0 then\n    return\
    \ fizz_buzz(n / 13) + 1 -- Add 1 to the result because we found a multiple of\
    \ 13.\n  else\n    return fizz_buzz(n / 10) + 1 -- Add 1 to the result because\
    \ we found a multiple of 10.\n  end\nend", "  local count = 0\n  while n > 0 do\n\
    \    if n % 11 == 0 then count = count + 1 end\n    if n % 13 == 0 then count\
    \ = count + 1 end\n    n = math.floor(n/10)\n  end\n  return count\nend", "  local\
    \ count = 0\n  while n > 0 do\n    local remainder = n % 11\n    if remainder\
    \ == 0 then\n      count = count + 1\n    end\n    local remainder2 = n % 13\n\
    \    if remainder2 == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend", "  local count = 0\n  while n > 0 do\n    count\
    \ = count + 1\n    if n % 11 == 0 then\n      count = count + 1\n    end\n   \
    \ if n % 13 == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend", "  if n < 10 then\n    return n\n  elseif n % 11\
    \ == 0 then\n    return fizz_buzz(n / 11) + 1 -- Add 1 to the result because we\
    \ found a multiple of 11.\n  elseif n % 13 == 0 then\n    return fizz_buzz(n /\
    \ 13) + 1 -- Add 1 to the result because we found a multiple of 13.\n  else\n\
    \    return 0\n  end\nend", "  local count = 0\n  local i = 1\n  while i <= n\
    \ do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n\
    \    i = i + 1\n  end\n  return count\nend", "  local count = 0\n  local i = 1\n\
    \  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count\
    \ + 1\n    end\n    i = i + 1\n  end\n  return count\nend", "  if n < 0 then\n\
    \    return 0\n  end\n  if n % 11 == 0 and n % 13 == 0 then\n    return 1\n  end\n\
    \  if n % 11 == 1 then\n    return 2\n  end\n  if n % 13 == 1 then\n    return\
    \ 3\n  end\n  return 0\nend", "  local count = 0\n  local div = math.floor(n/11)\n\
    \  if div == 0 or div == 13 then return 0 end\n  while n >= div do\n    if n %\
    \ div == 0 then count = count + 1 end\n    div = div - 1\n  end\n  return count\n\
    end", "  local count = 0\n  while n > 0 do\n    count = count + 1\n    if n %\
    \ 11 == 0 then count = count + 1 end\n    if n % 13 == 0 then count = count +\
    \ 1 end\n    n = math.floor(n/10)\n  end\n  return count\nend", "  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend",
  "  local count = 0\n  while n > 0 do\n    if n % 11 == 0 then\n      count = count\
    \ + 1\n    end\n    if n % 13 == 0 then\n      count = count + 1\n    end\n  \
    \  n = math.floor(n/10)\n  end\n  return count\nend", "  local count = 0\n  local\
    \ i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend", "  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend",
  "  if n < 10 then\n    return n\n  elseif n % 11 == 0 and n % 13 == 0 then\n   \
    \ return 0\n  elseif n % 11 == 1 then\n    return 1\n  elseif n % 13 == 1 then\n\
    \    return 2\n  else\n    return 3\n  end\nend", "  if n < 0 then\n    return\
    \ 0\n  elseif n < 10 then\n    return n\n  elseif n < 100 then\n    if n % 11\
    \ == 0 then\n      return n\n    elseif n % 13 == 0 then\n      return n\n   \
    \ else\n      return fizz_buzz(n - 10)\n    end\n  else\n    if n % 11 == 0 then\n\
    \      return fizz_buzz(n / 11)\n    elseif n % 13 == 0 then\n      return fizz_buzz(n\
    \ / 13)\n    else\n      return fizz_buzz(n / 100) + fizz_buzz(n / 10)\n    end\n\
    \  end\nend", "  if n < 10 then\n    return n\n  end\n  if n % 11 == 0 then\n\
    \    return fizz_buzz(n / 11) + 1\n  end\n  if n % 13 == 0 then\n    return fizz_buzz(n\
    \ / 13) + 1\n  end\n  return 0\nend", "  local count = 0\n  for i = 1, n do\n\
    \    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n \
    \ end\n  return count\nend", "  if n < 10 then\n    return n\n  elseif n % 11\
    \ == 0 then\n    return fizz_buzz(n / 11) + 1 -- Return the number of times the\
    \ digit 7 appears in integers less than n which are divisible by 11.\n  elseif\
    \ n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1 -- Return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 13.\n  else\n\
    \    return fizz_buzz(n / 10) + 1 -- Return the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 10 and 11.\n  end\nend", "  local\
    \ count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 ==\
    \ 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\n\
    end", "  local count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0\
    \ and i % 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n\
    \  return count\nend", "  if n < 10 then\n    return n\n  end\n  if n % 11 ==\
    \ 0 then\n    return fizz_buzz(n / 11) + 1\n  end\n  if n % 13 == 0 then\n   \
    \ return fizz_buzz(n / 13) + 1\n  end\n  return 0\nend", "  local count = 0\n\
    \  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n \
    \     count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend",
  "  local count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i %\
    \ 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n  return\
    \ count\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n    if i\
    \ % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n    i = i\
    \ + 1\n  end\n  return count\nend", "  local count = 0\n  local i = 1\n  while\
    \ i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n\
    \    end\n    i = i + 1\n  end\n  return count\nend", "  if n < 10 then\n    return\
    \ n\n  elseif n % 11 == 0 then\n    return fizz_buzz(n / 11) + 1 -- Add 1 because\
    \ we count the digit 7 twice.\n  elseif n % 13 == 0 then\n    return fizz_buzz(n\
    \ / 13) + 1 -- Add 1 because we count the digit 7 twice.\n  else\n    return fizz_buzz(n\
    \ / 10) + 1 -- Add 1 because we count the digit 7 twice.\n  end\nend", "  local\
    \ count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 ==\
    \ 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\n\
    end", "  local count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0\
    \ and i % 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n\
    \  return count\nend", "  local count = 0\n  while n > 0 do\n    count = count\
    \ + 1\n    if n % 11 == 0 then\n      count = count + 1\n    end\n    if n % 13\
    \ == 0 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n  end\n\
    \  return count\nend", "  if n < 10 then\n    return n\n  elseif n % 11 == 0 then\n\
    \    return fizz_buzz(n / 11) + 1\n  elseif n % 13 == 0 then\n    return fizz_buzz(n\
    \ / 13) + 1\n  else\n    return fizz_buzz(n / 10) + 1\n  end\nend", "  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend",
  "  local count = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i %\
    \ 13 == 0 then\n      count = count + 1\n    end\n    i = i + 1\n  end\n  return\
    \ count\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n    if i\
    \ % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n    i = i\
    \ + 1\n  end\n  return count\nend", "  local count = 0\n  local i = 1\n  while\
    \ i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n\
    \    end\n    i = i + 1\n  end\n  return count\nend", "  if n < 0 then\n    return\
    \ nil\n  end\n  if n < 10 then\n    return n\n  end\n  if n % 11 == 0 and n %\
    \ 13 == 0 then\n    return n\n  end\n  return fizz_buzz(n - 10)\nend", "  local\
    \ count = 0\n  while n > 0 do\n    if n % 11 == 1 then count = count + 1 end\n\
    \    if n % 13 == 1 then count = count + 1 end\n    n = math.floor(n/10)\n  end\n\
    \  return count\nend", "  if n < 10 then\n    return n\n  elseif n % 11 == 0 then\n\
    \    return fizz_buzz(n / 11) + 1 -- Add 1 because we count the digit 7 twice.\n\
    \  elseif n % 13 == 0 then\n    return fizz_buzz(n / 13) + 1 -- Add 1 because\
    \ we count the digit 7 twice.\n  else\n    return fizz_buzz(n / 10) + 1 -- Add\
    \ 1 because we count the digit 7 twice.\n  end\nend", "  local count = 0\n  while\
    \ n >= 11 do\n    count = count + 1\n    n = math.floor(n/10)\n  end\n  while\
    \ n >= 13 do\n    count = count + 1\n    n = math.floor(n/10)\n  end\n  return\
    \ count\nend", "  if n < 0 then\n    return 0\n  end\n  if n < 10 then\n    return\
    \ 1\n  end\n  if n % 11 == 0 and n % 13 == 0 then\n    return 2\n  end\n  if n\
    \ % 11 == 0 then\n    return 3\n  end\n  if n % 13 == 0 then\n    return 4\n \
    \ end\n  return 5\nend", "  if n < 0 then\n    return nil\n  end\n  if n % 11\
    \ == 0 then\n    return 1\n  end\n  if n % 13 == 0 then\n    return 2\n  end\n\
    \  return 0\nend", "  local count = 0\n  local i = 1\n  while i <= n do\n    if\
    \ i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n    i =\
    \ i + 1\n  end\n  return count\nend", "  local count = 0\n  local i = 1\n  while\
    \ i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n\
    \    end\n    i = i + 1\n  end\n  return count\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

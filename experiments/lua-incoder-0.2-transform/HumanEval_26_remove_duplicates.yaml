name: HumanEval_26_remove_duplicates
language: lua
prompt: "-- From a list of integers, remove all elements that occur more than once.\n\
  -- Keep order of elements left the same as in the input.\n-- >>> remove_duplicates({1,\
  \ 2, 3, 2, 4})\n-- {1, 3, 4}\nlocal function remove_duplicates(numbers)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_duplicates\n\
  \    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1, 2, 3,\
  \ 4}), {1, 2, 3, 4})\n    lu.assertEquals(candidate({1, 2, 3, 2, 4, 3, 5}), {1,\
  \ 4, 5})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local result = {}\n  for _, value in ipairs(numbers) do\n    if result[value]\
    \ == nil then\n      result[value] = value\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, num in ipairs(numbers) do\n    if seen[num] then\n      result[#result\
    \ + 1] = num\n    else\n      seen[num] = true\n    end\n  end\n  return result\n\
    end", "  local result = {}\n  for _, value in ipairs(numbers) do\n    if result[value]\
    \ == nil then\n      result[value] = value\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, num in ipairs(numbers)\
    \ do\n    if seen[num] then\n      result[#result + 1] = num\n    else\n     \
    \ seen[num] = true\n    end\n  end\n  return result\nend", "  local seen = {}\n\
    \  for _, value in ipairs(numbers) do\n    if seen[value] then\n      table.remove(numbers,\
    \ value)\n    else\n      seen[value] = true\n    end\n  end\n  return numbers\n\
    end", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, num in ipairs(numbers) do\n    if seen[num]\
    \ then\n      result[#result + 1] = num\n    else\n      seen[num] = true\n  \
    \  end\n  end\n  return result\nend", "  local result = {}\n  for _, v in ipairs(numbers)\
    \ do\n    if result[#result + 1] == v then\n      result[#result + 1] = v\n  \
    \  else\n      result[#result + 1] = v\n    end\n  end\n  return result\nend",
  "  local result = {}\n  for _, number in ipairs(numbers) do\n    if result[number]\
    \ == nil then\n      result[number] = true\n    else\n      result[number] = false\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, value in pairs(numbers) do\n    if seen[value] then\n      result[#result\
    \ + 1] = value\n    else\n      seen[value] = true\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, v in ipairs(numbers) do\n\
    \    if seen[v] then\n      table.insert(result, v)\n    else\n      seen[v] =\
    \ true\n    end\n  end\n  return result\nend", "  local seen = {}\n  local result\
    \ = {}\n  for _, number in ipairs(numbers) do\n    if seen[number] then\n    \
    \  result[#result + 1] = number\n    else\n      seen[number] = true\n    end\n\
    \  end\n  return result\nend", "  local seen = {}\n  local output = {}\n  for\
    \ _, num in ipairs(numbers) do\n    if seen[num] then\n      table.insert(output,\
    \ num)\n    else\n      seen[num] = true\n    end\n  end\n  return output\nend",
  "  local result = {}\n  for _, number in ipairs(numbers) do\n    if result[number]\
    \ == nil then\n      result[number] = true\n    else\n      result[number] = false\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local result = {}\n  for _, value in ipairs(numbers) do\n \
    \   if result[value] == nil then\n      result[value] = value\n    else\n    \
    \  result[value] = result[value] ~= value and result[value] or value\n    end\n\
    \  end\n  return result\nend", "  local seen = {}\n  for _, num in ipairs(numbers)\
    \ do\n    if seen[num] then\n      table.insert(numbers, seen[num])\n    else\n\
    \      seen[num] = true\n    end\n  end\n  return numbers\nend", "  local seen\
    \ = {}\n  local output = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      output[#output + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return output\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, num in ipairs(numbers) do\n    if seen[num] then\n      result[#result\
    \ + 1] = num\n    else\n      seen[num] = true\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local result = {}\n  for _, value in\
    \ ipairs(numbers) do\n    if result[value] == nil then\n      result[value] =\
    \ value\n    end\n  end\n  return result\nend", "  local seen = {}\n  local result\
    \ = {}\n  for _, num in ipairs(numbers) do\n    if seen[num] then\n      result[#result\
    \ + 1] = num\n    else\n      seen[num] = true\n    end\n  end\n  return result\n\
    end", "  local result = {}\n  for _, number in ipairs(numbers) do\n    if result[number]\
    \ ~= nil then\n      result[number] = true\n    else\n      result[number] = true\n\
    \    end\n  end\n  return result\nend", "  local result = {}\n  for _, value in\
    \ ipairs(numbers) do\n    if result[value] == nil then\n      result[value] =\
    \ 1\n    else\n      result[value] = result[value] + 1\n    end\n  end\n  return\
    \ result\nend", "  local seen = {}\n  local result = {}\n  for _, num in ipairs(numbers)\
    \ do\n    if seen[num] then\n      result[#result + 1] = num\n    else\n     \
    \ seen[num] = true\n    end\n  end\n  return result\nend", "  local seen = {}\n\
    \  local result = {}\n  for _, num in ipairs(numbers) do\n    if seen[num] then\n\
    \      result[#result + 1] = num\n    else\n      seen[num] = true\n    end\n\
    \  end\n  return result\nend", "  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if result[number] == nil then\n      result[number] = true\n    else\n\
    \      result[number] = false\n    end\n  end\n  return result\nend", "  local\
    \ result = {}\n  for _, value in ipairs(numbers) do\n    if result[value] == nil\
    \ then\n      result[value] = value\n    else\n      result[value] = result[value]\
    \ .. \", \" .. value\n    end\n  end\n  return result\nend", "  local seen = {}\n\
    \  local result = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, num in ipairs(numbers) do\n    if seen[num] then\n      result[#result\
    \ + 1] = num\n    else\n      seen[num] = true\n    end\n  end\n  return result\n\
    end", "  local result = {}\n  for _, value in ipairs(numbers) do\n    if result[value]\
    \ == nil then\n      result[value] = value\n    else\n      result[value] = result[value]\
    \ .. \", \" .. value\n    end\n  end\n  return result\nend", "  local seen = {}\n\
    \  local result = {}\n  for _, num in ipairs(numbers) do\n    if seen[num] then\n\
    \      result[#result + 1] = num\n    else\n      seen[num] = true\n    end\n\
    \  end\n  return result\nend", "  local seen = {}\n  local result = {}\n  for\
    \ _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local result = {}\n  for _, value in ipairs(numbers) do\n \
    \   if result[value] == nil then\n      result[value] = value\n    else\n    \
    \  result[value] = result[value] .. \", \" .. value\n    end\n  end\n  return\
    \ result\nend", "  local result = {}\n  for _, number in ipairs(numbers) do\n\
    \    if result[number] == nil then\n      result[number] = true\n    else\n  \
    \    result[number] = false\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, value in ipairs(numbers) do\n    if seen[value]\
    \ then\n      result[#result + 1] = value\n    else\n      seen[value] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, num in ipairs(numbers) do\n    if seen[num] then\n      result[#result\
    \ + 1] = num\n    else\n      seen[num] = true\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, v in ipairs(numbers) do\n\
    \    if seen[v] then\n      table.insert(result, v)\n    else\n      seen[v] =\
    \ true\n    end\n  end\n  return result\nend", "  local seen = {}\n  local result\
    \ = {}\n  for _, value in ipairs(numbers) do\n    if seen[value] then\n      result[#result\
    \ + 1] = value\n    else\n      seen[value] = true\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, num in ipairs(numbers) do\n    if seen[num]\
    \ then\n      result[#result + 1] = num\n    else\n      seen[num] = true\n  \
    \  end\n  end\n  return result\nend", "  local result = {}\n  for _, v in ipairs(numbers)\
    \ do\n    if result[#result + 1] == v then\n      result[#result + 1]\n    else\n\
    \      result[#result + 1] = v\n    end\n  end\n  return result\nend", "  local\
    \ seen = {}\n  local result = {}\n  for _, number in ipairs(numbers) do\n    if\
    \ seen[number] then\n      result[#result + 1] = number\n    else\n      seen[number]\
    \ = true\n    end\n  end\n  return result\nend", "  local result = {}\n  for _,\
    \ number in ipairs(numbers) do\n    if result[number] ~= nil then\n      result[number]\
    \ = true\n    else\n      result[number] = number\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, num in ipairs(numbers) do\n    if seen[num] then\n      result[#result\
    \ + 1] = num\n    else\n      seen[num] = true\n    end\n  end\n  return result\n\
    end", "  local result = {}\n  for _, number in ipairs(numbers) do\n    if result[number]\
    \ ~= nil then\n      result[number] = true\n    else\n      result[number] = number\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, num in ipairs(numbers) do\n    if seen[num] then\n      result[#result\
    \ + 1] = num\n    else\n      seen[num] = true\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, num in ipairs(numbers)\
    \ do\n    if seen[num] then\n      result[#result + 1] = num\n    else\n     \
    \ seen[num] = true\n    end\n  end\n  return result\nend", "  local result = {}\n\
    \  for _, number in ipairs(numbers) do\n    if result[number] == nil then\n  \
    \    result[number] = true\n    else\n      result[number] = false\n    end\n\
    \  end\n  return result\nend", "  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if result[number] == nil then\n      result[number] = true\n    else\n\
    \      result[number] = false\n    end\n  end\n  return result\nend", "  local\
    \ seen = {}\n  local result = {}\n  for _, num in ipairs(numbers) do\n    if seen[num]\
    \ then\n      result[#result + 1] = num\n    else\n      seen[num] = true\n  \
    \  end\n  end\n  return result\nend", "  local result = {}\n  for _, value in\
    \ ipairs(numbers) do\n    if result[value] == nil then\n      result[value] =\
    \ 1\n    else\n      result[value] = result[value] + 1\n    end\n  end\n  return\
    \ result\nend", "  local result = {}\n  local seen = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, num in ipairs(numbers) do\n    if seen[num]\
    \ then\n      result[#result + 1] = num\n    else\n      seen[num] = true\n  \
    \  end\n  end\n  return result\nend", "  local result = {}\n  for _, number in\
    \ ipairs(numbers) do\n    if result[number] == nil then\n      result[number]\
    \ = true\n    else\n      result[number] = false\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local result\
    \ = {}\n  for _, number in ipairs(numbers) do\n    if result[number] == nil then\n\
    \      result[number] = true\n    else\n      result[number] = false\n    end\n\
    \  end\n  return result\nend", "  local seen = {}\n  local result = {}\n  for\
    \ _, num in ipairs(numbers) do\n    if seen[num] then\n      result[#result +\
    \ 1] = num\n    else\n      seen[num] = true\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, num in ipairs(numbers)\
    \ do\n    if seen[num] then\n      result[#result + 1] = num\n    else\n     \
    \ seen[num] = true\n    end\n  end\n  return result\nend", "  local seen = {}\n\
    \  local result = {}\n  for _, v in ipairs(numbers) do\n    if seen[v] then\n\
    \      result[#result + 1] = v\n    else\n      seen[v] = true\n    end\n  end\n\
    \  return result\nend", "  local seen = {}\n  local result = {}\n  for _, num\
    \ in ipairs(numbers) do\n    if seen[num] then\n      result[#result + 1] = num\n\
    \    else\n      seen[num] = true\n    end\n  end\n  return result\nend", "  local\
    \ result = {}\n  for _, number in ipairs(numbers) do\n    if result[number] ~=\
    \ nil then\n      result[number] = result[number] + 1\n    else\n      result[number]\
    \ = 1\n    end\n  end\n  return result\nend", "  local seen = {}\n  local result\
    \ = {}\n  for _, number in ipairs(numbers) do\n    if seen[number] then\n    \
    \  result[#result + 1] = number\n    else\n      seen[number] = true\n    end\n\
    \  end\n  return result\nend", "  local seen = {}\n  local result = {}\n  for\
    \ _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local seen = {}\n  local result = {}\n  for _, value in ipairs(numbers)\
    \ do\n    if seen[value] then\n      result[#result + 1] = value\n    else\n \
    \     seen[value] = true\n    end\n  end\n  return result\nend", "  local result\
    \ = {}\n  for _, v in ipairs(numbers) do\n    if result[#result + 1] == v then\n\
    \      result[#result + 1]\n    else\n      result[#result + 1] = v\n    end\n\
    \  end\n  return result\nend", "  local result = {}\n  for _, value in ipairs(numbers)\
    \ do\n    if result[value] == nil then\n      result[value] = value\n    end\n\
    \  end\n  return result\nend", "  local seen = {}\n  local result = {}\n  for\
    \ _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, v in ipairs(numbers) do\n    if seen[v]\
    \ then\n      result[#result + 1] = v\n    else\n      seen[v] = true\n    end\n\
    \  end\n  return result\nend", "  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    table.insert(result, number)\n  end\n  table.sort(result)\n  return\
    \ result\nend", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local result = {}\n  for _, value in ipairs(numbers) do\n \
    \   if result[value] == nil then\n      result[value] = value\n    else\n    \
    \  result[value] = result[value] .. \", \" .. value\n    end\n  end\n  return\
    \ result\nend", "  local result = {}\n  for _, number in ipairs(numbers) do\n\
    \    if result[number] ~= nil then\n      result[number] = true\n    else\n  \
    \    result[number] = number\n    end\n  end\n  return result\nend", "  local\
    \ seen = {}\n  local result = {}\n  for _, number in ipairs(numbers) do\n    if\
    \ seen[number] then\n      result[#result + 1] = number\n    else\n      seen[number]\
    \ = true\n    end\n  end\n  return result\nend", "  local result = {}\n  for _,\
    \ value in ipairs(numbers) do\n    if result[value] == nil then\n      result[value]\
    \ = value\n    end\n  end\n  return result\nend", "  local seen = {}\n  local\
    \ output = {}\n  for _, number in ipairs(numbers) do\n    if seen[number] then\n\
    \      output[#output + 1] = number\n    else\n      seen[number] = true\n   \
    \ end\n  end\n  return output\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, value in ipairs(numbers) do\n    if seen[value] then\n      result[#result\
    \ + 1] = value\n    else\n      seen[value] = true\n    end\n  end\n  return result\n\
    end", "  local result = {}\n  for _, number in ipairs(numbers) do\n    if result[number]\
    \ == nil then\n      result[number] = true\n    else\n      result[number] = false\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local seen = {}\n  local result = {}\n  for _, num in ipairs(numbers)\
    \ do\n    if seen[num] then\n      result[#result + 1] = num\n    else\n     \
    \ seen[num] = true\n    end\n  end\n  return result\nend", "  local result = {}\n\
    \  for _, number in ipairs(numbers) do\n    if result[number] == nil then\n  \
    \    result[number] = true\n    else\n      result[number] = false\n    end\n\
    \  end\n  return result\nend", "  local result = {}\n  local seen = {}\n  for\
    \ _, v in ipairs(numbers) do\n    if seen[v] then\n      result[#result + 1] =\
    \ v\n    else\n      seen[v] = true\n    end\n  end\n  return result\nend", " \
    \ local seen = {}\n  local result = {}\n  for _, num in ipairs(numbers) do\n \
    \   if seen[num] then\n      result[#result + 1] = num\n    else\n      seen[num]\
    \ = true\n    end\n  end\n  return result\nend", "  local seen = {}\n  for _,\
    \ v in pairs(numbers) do\n    if seen[v] then\n      table.remove(numbers, v)\n\
    \    else\n      seen[v] = true\n    end\n  end\n  return numbers\nend", "  local\
    \ seen = {}\n  local result = {}\n  for _, number in ipairs(numbers) do\n    if\
    \ seen[number] then\n      result[#result + 1] = number\n    else\n      seen[number]\
    \ = true\n    end\n  end\n  return result\nend", "  local seen = {}\n  local result\
    \ = {}\n  for _, num in ipairs(numbers) do\n    if seen[num] then\n      result[#result\
    \ + 1] = num\n    else\n      seen[num] = true\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, value in pairs(numbers)\
    \ do\n    if seen[value] then\n      result[#result + 1] = value\n    else\n \
    \     seen[value] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  for _, v in pairs(numbers) do\n    if seen[v] then\n      table.remove(numbers,\
    \ v)\n    else\n      seen[v] = true\n    end\n  end\n  return numbers\nend",
  "  local seen = {}\n  for _, num in pairs(numbers) do\n    if seen[num] then\n \
    \     table.insert(numbers, seen[num])\n    else\n      seen[num] = true\n   \
    \ end\n  end\n  return numbers\nend", "  local result = {}\n  for _, v in ipairs(numbers)\
    \ do\n    if result[#result] == nil then\n      result[#result] = v\n    else\n\
    \      result[#result] = v\n    end\n  end\n  return result\nend", "  local result\
    \ = {}\n  for _, value in ipairs(numbers) do\n    if result[value] ~= nil then\n\
    \      result[value] = true\n    else\n      result[value] = true\n    end\n \
    \ end\n  return result\nend", "  local seen = {}\n  local result = {}\n  for _,\
    \ number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local seen = {}\n  local output = {}\n  for _, v in ipairs(numbers)\
    \ do\n    if seen[v] then\n      table.insert(output, v)\n    else\n      seen[v]\
    \ = true\n    end\n  end\n  return output\nend", "  local seen = {}\n  local result\
    \ = {}\n  for _, number in ipairs(numbers) do\n    if seen[number] then\n    \
    \  result[#result + 1] = number\n    else\n      seen[number] = true\n    end\n\
    \  end\n  return result\nend", "  local result = {}\n  for _, v in ipairs(numbers)\
    \ do\n    if result[#result + 1] == v then\n      result[#result + 1]\n    else\n\
    \      result[#result + 1] = v\n    end\n  end\n  return result\nend", "  local\
    \ seen = {}\n  local result = {}\n  for _, number in ipairs(numbers) do\n    if\
    \ seen[number] then\n      result[#result + 1] = number\n    else\n      seen[number]\
    \ = true\n    end\n  end\n  return result\nend", "  local seen = {}\n  local result\
    \ = {}\n  for _, v in ipairs(numbers) do\n    if seen[v] then\n      result[#result\
    \ + 1] = v\n    else\n      seen[v] = true\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, num in ipairs(numbers)\
    \ do\n    if seen[num] then\n      result[#result + 1] = num\n    else\n     \
    \ seen[num] = true\n    end\n  end\n  return result\nend", "  local seen = {}\n\
    \  local result = {}\n  for _, num in ipairs(numbers) do\n    if seen[num] then\n\
    \      result[#result + 1] = num\n    else\n      seen[num] = true\n    end\n\
    \  end\n  return result\nend", "  local result = {}\n  for _, value in ipairs(numbers)\
    \ do\n    if result[value] == nil then\n      result[value] = value\n    end\n\
    \  end\n  return result\nend", "  local seen = {}\n  local result = {}\n  for\
    \ _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local seen = {}\n  local result = {}\n  for _, num in ipairs(numbers)\
    \ do\n    if seen[num] then\n      result[#result + 1] = num\n    else\n     \
    \ seen[num] = true\n    end\n  end\n  return result\nend", "  local result = {}\n\
    \  for _, number in ipairs(numbers) do\n    if result[number] == nil then\n  \
    \    result[number] = true\n    else\n      result[number] = false\n    end\n\
    \  end\n  return result\nend", "  local seen = {}\n  local result = {}\n  for\
    \ _, num in ipairs(numbers) do\n    if seen[num] then\n      result[#result +\
    \ 1] = num\n    else\n      seen[num] = true\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, value in pairs(numbers)\
    \ do\n    if seen[value] then\n      result[#result + 1] = value\n    else\n \
    \     seen[value] = true\n    end\n  end\n  return result\nend", "  local result\
    \ = {}\n  for _, number in ipairs(numbers) do\n    if result[number] == nil then\n\
    \      result[number] = true\n    else\n      result[number] = false\n    end\n\
    \  end\n  return result\nend", "  local seen = {}\n  for _, num in ipairs(numbers)\
    \ do\n    if seen[num] then\n      table.remove(numbers, num)\n    else\n    \
    \  seen[num] = true\n    end\n  end\n  return numbers\nend", "  local result =\
    \ {}\n  local seen = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local result = {}\n  for _, v in ipairs(numbers) do\n    if\
    \ result[#result + 1] == v then\n      result[#result + 1] = v\n    else\n   \
    \   result[#result + 1] = v\n    end\n  end\n  return result\nend", "  local result\
    \ = {}\n  for _, value in ipairs(numbers) do\n    if result[value] == nil then\n\
    \      result[value] = value\n    end\n  end\n  return result\nend", "  local\
    \ seen = {}\n  local result = {}\n  for _, value in ipairs(numbers) do\n    if\
    \ seen[value] then\n      result[#result + 1] = value\n    else\n      seen[value]\
    \ = true\n    end\n  end\n  return result\nend", "  local seen = {}\n  local result\
    \ = {}\n  for _, number in ipairs(numbers) do\n    if seen[number] then\n    \
    \  result[#result + 1] = number\n    else\n      seen[number] = true\n    end\n\
    \  end\n  return result\nend", "  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if result[number] == nil then\n      result[number] = true\n    else\n\
    \      result[number] = false\n    end\n  end\n  return result\nend", "  local\
    \ result = {}\n  local seen = {}\n  for _, num in ipairs(numbers) do\n    if seen[num]\
    \ then\n      result[#result + 1] = num\n    else\n      seen[num] = true\n  \
    \  end\n  end\n  return result\nend", "  local result = {}\n  for _, number in\
    \ ipairs(numbers) do\n    if result[number] == nil then\n      result[number]\
    \ = true\n    else\n      result[number] = false\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local result\
    \ = {}\n  for _, value in ipairs(numbers) do\n    if result[value] == nil then\n\
    \      result[value] = value\n    else\n      result[value] = result[value] ..\
    \ \", \" .. value\n    end\n  end\n  return result\nend", "  local result = {}\n\
    \  for _, v in ipairs(numbers) do\n    if result[#result + 1] == v then\n    \
    \  result[#result + 1] = v\n    else\n      result[#result + 1] = v\n    end\n\
    \  end\n  return result\nend", "  local result = {}\n  for _, v in ipairs(numbers)\
    \ do\n    if result[#result + 1] == v then\n      result[#result + 1] = v\n  \
    \  else\n      result[#result + 1] = v\n    end\n  end\n  return result\nend",
  "  local result = {}\n  for _, number in ipairs(numbers) do\n    if result[number]\
    \ == nil then\n      result[number] = true\n    else\n      result[number] = false\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  for _, num in ipairs(numbers)\
    \ do\n    if seen[num] then\n      table.insert(numbers, seen[num])\n    else\n\
    \      seen[num] = true\n    end\n  end\n  return numbers\nend", "  local result\
    \ = {}\n  for _, value in ipairs(numbers) do\n    if result[value] == nil then\n\
    \      result[value] = value\n    end\n  end\n  return result\nend", "  local\
    \ result = {}\n  for _, number in ipairs(numbers) do\n    table.insert(result,\
    \ number)\n  end\n  table.sort(result)\n  return result\nend", "  local result\
    \ = {}\n  for _, value in ipairs(numbers) do\n    if result[value] == nil then\n\
    \      result[value] = value\n    else\n      result[value] = result[value] ~=\
    \ value and result[value] or value\n    end\n  end\n  return result\nend", " \
    \ local result = {}\n  for _, value in ipairs(numbers) do\n    if result[value]\
    \ == nil then\n      result[value] = value\n    else\n      result[value] = result[value]\
    \ .. \", \" .. value\n    end\n  end\n  return result\nend", "  local seen = {}\n\
    \  for _, num in ipairs(numbers) do\n    if seen[num] then\n      table.insert(numbers,\
    \ seen[num])\n    else\n      seen[num] = true\n    end\n  end\n  return numbers\n\
    end", "  local seen = {}\n  local result = {}\n  for _, num in ipairs(numbers)\
    \ do\n    if seen[num] then\n      result[#result + 1] = num\n    else\n     \
    \ seen[num] = true\n    end\n  end\n  return result\nend", "  local seen = {}\n\
    \  local result = {}\n  for _, value in ipairs(numbers) do\n    if seen[value]\
    \ then\n      result[#result + 1] = value\n    else\n      seen[value] = true\n\
    \    end\n  end\n  return result\nend", "  local result = {}\n  for _, number\
    \ in ipairs(numbers) do\n    if result[number] == nil then\n      result[number]\
    \ = true\n    else\n      result[number] = false\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, num in ipairs(numbers)\
    \ do\n    if seen[num] then\n      result[#result + 1] = num\n    else\n     \
    \ seen[num] = true\n    end\n  end\n  return result\nend", "  local seen = {}\n\
    \  local result = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, num in ipairs(numbers) do\n    if seen[num] then\n      result[#result\
    \ + 1] = num\n    else\n      seen[num] = true\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, num in ipairs(numbers)\
    \ do\n    if seen[num] then\n      result[#result + 1] = num\n    else\n     \
    \ seen[num] = true\n    end\n  end\n  return result\nend", "  local seen = {}\n\
    \  local result = {}\n  for _, num in ipairs(numbers) do\n    if seen[num] then\n\
    \      result[#result + 1] = num\n    else\n      seen[num] = true\n    end\n\
    \  end\n  return result\nend", "  local seen = {}\n  local result = {}\n  for\
    \ _, num in ipairs(numbers) do\n    if seen[num] then\n      result[#result +\
    \ 1] = num\n    else\n      seen[num] = true\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, num in ipairs(numbers)\
    \ do\n    if seen[num] then\n      result[#result + 1] = num\n    else\n     \
    \ seen[num] = true\n    end\n  end\n  return result\nend", "  local seen = {}\n\
    \  local result = {}\n  for _, value in ipairs(numbers) do\n    if seen[value]\
    \ then\n      result[#result + 1] = value\n    else\n      seen[value] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local output = {}\n\
    \  for _, v in ipairs(numbers) do\n    if seen[v] then\n      table.insert(output,\
    \ v)\n    else\n      seen[v] = true\n    end\n  end\n  return output\nend", " \
    \ local seen = {}\n  local result = {}\n  for _, num in ipairs(numbers) do\n \
    \   if seen[num] then\n      result[#result + 1] = num\n    else\n      seen[num]\
    \ = true\n    end\n  end\n  return result\nend", "  local seen = {}\n  local result\
    \ = {}\n  for _, v in ipairs(numbers) do\n    if seen[v] then\n      result[#result\
    \ + 1] = v\n    else\n      seen[v] = true\n    end\n  end\n  return result\n\
    end", "  local result = {}\n  local seen = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, value in pairs(numbers) do\n    if seen[value]\
    \ then\n      result[#result + 1] = value\n    else\n      seen[value] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local output = {}\n\
    \  for _, num in ipairs(numbers) do\n    if seen[num] then\n      output[#output\
    \ + 1] = num\n    else\n      seen[num] = true\n    end\n  end\n  return output\n\
    end", "  local result = {}\n  for _, value in ipairs(numbers) do\n    if result[value]\
    \ == nil then\n      result[value] = value\n    else\n      result[value] = result[value]\
    \ .. \", \" .. value\n    end\n  end\n  return result\nend", "  local result =\
    \ {}\n  for _, number in ipairs(numbers) do\n    if result[number] ~= nil then\n\
    \      result[number] = true\n    else\n      result[number] = number\n    end\n\
    \  end\n  return result\nend", "  local seen = {}\n  local result = {}\n  for\
    \ _, num in ipairs(numbers) do\n    if seen[num] then\n      result[#result +\
    \ 1] = num\n    else\n      seen[num] = true\n    end\n  end\n  return result\n\
    end", "  local result = {}\n  for _, number in ipairs(numbers) do\n    if result[number]\
    \ ~= nil then\n      result[number] = nil\n    else\n      result[number] = number\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  for _, num in ipairs(numbers)\
    \ do\n    if seen[num] then\n      table.remove(numbers, num)\n    else\n    \
    \  seen[num] = true\n    end\n  end\n  return numbers\nend", "  local seen = {}\n\
    \  local result = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local result = {}\n  for _, number\
    \ in ipairs(numbers) do\n    if result[number] == nil then\n      result[number]\
    \ = true\n    else\n      result[number] = false\n    end\n  end\n  return result\n\
    end", "  local result = {}\n  for _, number in ipairs(numbers) do\n    table.insert(result,\
    \ number)\n  end\n  table.sort(result)\n  local last_number = result[1]\n  for\
    \ _, number in ipairs(result) do\n    if number ~= last_number then\n      table.insert(result,\
    \ number)\n    end\n    last_number = number\n  end\n  return result\nend", " \
    \ local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers) do\n\
    \    if seen[number] then\n      result[#result + 1] = number\n    else\n    \
    \  seen[number] = true\n    end\n  end\n  return result\nend", "  local seen =\
    \ {}\n  local result = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, num in ipairs(numbers) do\n    if seen[num] then\n      result[#result\
    \ + 1] = num\n    else\n      seen[num] = true\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local output = {}\n  for _, value in pairs(numbers)\
    \ do\n    if seen[value] then\n      table.insert(output, value)\n    else\n \
    \     seen[value] = true\n    end\n  end\n  return output\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, v in ipairs(numbers) do\n    if seen[v]\
    \ then\n      result[#result + 1] = v\n    else\n      seen[v] = true\n    end\n\
    \  end\n  return result\nend", "  local seen = {}\n  local result = {}\n  for\
    \ _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local result = {}\n  for _, value in ipairs(numbers) do\n \
    \   if result[value] == nil then\n      result[value] = value\n    end\n  end\n\
    \  return result\nend", "  local seen = {}\n  local result = {}\n  for _, v in\
    \ pairs(numbers) do\n    if seen[v] then\n      table.insert(result, v)\n    else\n\
    \      seen[v] = true\n    end\n  end\n  return result\nend", "  local result\
    \ = {}\n  for _, number in ipairs(numbers) do\n    if result[number] == nil then\n\
    \      result[number] = true\n    else\n      result[number] = false\n    end\n\
    \  end\n  return result\nend", "  local result = {}\n  for _, value in ipairs(numbers)\
    \ do\n    if result[value] == nil then\n      result[value] = value\n    end\n\
    \  end\n  return result\nend", "  local result = {}\n  local seen = {}\n  for\
    \ _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n      seen[number] = nil\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local result\
    \ = {}\n  for _, number in ipairs(numbers) do\n    if result[number] == nil then\n\
    \      result[number] = true\n    else\n      result[number] = false\n    end\n\
    \  end\n  return result\nend", "  local seen = {}\n  local result = {}\n  for\
    \ _, number in ipairs(numbers) do\n    if seen[number] then\n      result[#result\
    \ + 1] = number\n    else\n      seen[number] = true\n    end\n  end\n  return\
    \ result\nend", "  local result = {}\n  for _, number in ipairs(numbers) do\n\
    \    if result[number] == nil then\n      result[number] = true\n    else\n  \
    \    result[number] = false\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local result = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, value in ipairs(numbers) do\n    if seen[value] then\n      result[#result\
    \ + 1] = value\n    else\n      seen[value] = true\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, num in ipairs(numbers)\
    \ do\n    if seen[num] then\n      result[#result + 1] = num\n    else\n     \
    \ seen[num] = true\n    end\n  end\n  return result\nend", "  local seen = {}\n\
    \  local result = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  for _, num in ipairs(numbers)\
    \ do\n    if seen[num] then\n      table.remove(numbers, num)\n    else\n    \
    \  seen[num] = true\n    end\n  end\n  return numbers\nend", "  local result =\
    \ {}\n  for _, value in ipairs(numbers) do\n    if result[value] == nil then\n\
    \      result[value] = value\n    else\n      result[value] = result[value] ..\
    \ \", \" .. value\n    end\n  end\n  return result\nend", "  local seen = {}\n\
    \  local result = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local result = {}\n\
    \  for _, num in ipairs(numbers) do\n    if seen[num] then\n      result[#result\
    \ + 1] = num\n    else\n      seen[num] = true\n    end\n  end\n  return result\n\
    end", "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers)\
    \ do\n    if seen[number] then\n      result[#result + 1] = number\n    else\n\
    \      seen[number] = true\n    end\n  end\n  return result\nend", "  local seen\
    \ = {}\n  local output = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      output[#output + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return output\nend", "  local seen = {}\n  for _, value in\
    \ ipairs(numbers) do\n    if seen[value] then\n      table.insert(numbers, value)\n\
    \      seen[value] = nil\n    end\n  end\n  return numbers\nend", "  local result\
    \ = {}\n  local seen = {}\n  for _, number in ipairs(numbers) do\n    if seen[number]\
    \ then\n      result[#result + 1] = number\n    else\n      seen[number] = true\n\
    \    end\n  end\n  return result\nend", "  local seen = {}\n  local output = {}\n\
    \  for _, num in ipairs(numbers) do\n    if seen[num] then\n      table.insert(output,\
    \ num)\n    else\n      seen[num] = true\n    end\n  end\n  return output\nend",
  "  local seen = {}\n  local result = {}\n  for _, number in ipairs(numbers) do\n\
    \    if seen[number] then\n      result[#result + 1] = number\n    else\n    \
    \  seen[number] = true\n    end\n  end\n  return result\nend", "  local result\
    \ = {}\n  for _, value in ipairs(numbers) do\n    if result[value] == nil then\n\
    \      result[value] = value\n    else\n      result[value] = result[value] ..\
    \ \", \" .. value\n    end\n  end\n  return result\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

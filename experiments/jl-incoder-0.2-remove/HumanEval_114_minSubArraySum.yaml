name: HumanEval_114_minSubArraySum
language: jl
prompt: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
  \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction minSubArraySum(nums::Vector{Int64})::Int64\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
  \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
  \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
  \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10,\
  \ -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
  \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
  \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
  \ -1]) == -1)\nend\n"
completions: ["    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n\
    \    sum = 0\n    \n    for x in nums\n        \n        if sum < x\n        \
    \    \n            sum = x\n            \n        end\n    end\n    \n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of times\
    \ a given number appears in an array.", "    \n    sum = 0\n    for n in nums\n\
    \        sum = sum + n\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.0>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,4,5])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,4,5,6])\n</cell>\n<code\
    \ language=julia-1.0>\nminSubArraySum([1,2,4,5,6,7])\n</cell>\n<code language=julia-1.0>\n\
    minSubArraySum([1,2,4,5,6,7,8])\n</cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,4,5,6,7,8,9])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,4,5,6,7,8,9,10])\n</cell>\n\
    <code language=julia-1.0>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11])\n</cell>\n\
    <code language=julia-1.0>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12])\n</cell>\n\
    <code language=julia-1.0>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13])\n</cell>\n\
    <code language=julia-1.0>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,2",
  "    sum = 0\n    \n    for n in nums\n        sum += n\n    end\n    \n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,4,5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([", "    sum::Int64 = 0\n \
    \   \n    for n in nums\n        sum = sum + n\n    end\n    \n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3,4,5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3,4,5,6,7,8,9,10])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,",
  "    sum = 0\n    for x in nums\n        sum += x\n    end\n    return sum\nend\n\
    \"\"\"\n    Given an array of integers nums, find the minimum sum of any non-empty\
    \ sub-array\n    of nums.\n    Example\n            \"\"\"", "    \n    sum =\
    \ 0\n    for x in nums\n        sum += x\n    end\n    \n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([2,3,5,-4,1])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,1,0])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,1,0,0])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([2,3,5,-4,1,0,0])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([2,3,5,-4,1,0,0])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,1,0,0])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,1,0,0])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([2,3,5,-4,1,0,0])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([2,3,5,-4,1,0,0])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,1,0,0])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,1,0,0])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([2,3,5,-4,1,0,0])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([2,3,5,-4,1,0,0])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,1,0,0])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,1,0,0])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([2,3,5,-4,1,0,0])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([2,3,5,-4,1,0,0])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,1,0,0])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,1,0,0])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([2,", "    \n    sum = 0\n    for n\
    \ in nums\n        sum += n\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([2,3,4])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,-5,-6,-7,-8])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,-5,-6,-7,-8,-9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,-5,-6,-7,-8,-9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,-5,-6,-7,-8,-9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,-5,-6,-7,-8,-9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,-5,-6,-7,-8,-9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,-5,-6,-7,-8,-9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,-5,-6,-7,-8,-9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,-5,-6,-7,-8,-9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,-5,-6,-7,-8,-9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,-5,-6,-7,-8,-9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,-5,-6,-7,-8,-9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,-5,-6,-7,-8,-9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,-5,-6,-7,-8,-9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,-5,-6,-7,-8,-9])\n\
    </cell>\n<code language=julia-1.5", "    \n    sum = 0\n    \n    for i in nums\n\
    \        sum += i\n    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,3,5,-4,-5,7,-3,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,",
  "    \n    sum = 0\n    for x in nums\n        sum += x\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3,4,5,6,7,8,9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,",
  "    sum::Int64 = 0\n    \n    for n in nums\n        sum += n\n    end\n    \n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,",
  "    sum::Int64 = nums[1]\n    for n in nums[2:end]\n        sum = sum + n\n   \
    \ end\n    return sum\nend\n\"\"\"\n    Given an array of integers nums, find\
    \ the minimum sum of any non-empty sub-array\n    of nums.\n    Example\n    \
    \        \"\"\"", "    \n    sum = 0\n    for x in nums\n        sum += x\n  \
    \  end\n    return sum\nend", "    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n", "    \n    sum = 0\n    \n    for x in nums\n        sum += x\n    end\n\
    \    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    sum = 0\n    for\
    \ n in nums\n        sum += n\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.0>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,3,4,5,6])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n</cell>\n\
    <code language=julia-1.0>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,",
  "    sum = 0\n    for x in nums\n        sum += x\n    end\n    return sum\nend\n\
    \"\"\"\n    Given an array of integers nums, find the minimum sum of any non-empty\
    \ sub-array\n    of nums.\n    Example\n            \"\"\"", "    \n    sum =\
    \ 0\n    \n    for n in nums\n        \n        if sum < n\n            sum =\
    \ n\n        end\n    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,2",
  "    \n    sum = 0\n    \n    for n in nums\n        sum += n\n    end\n    \n \
    \   return sum\nend", "    \n    sum = 0\n    \n    for n in nums\n        \n\
    \        if sum < n\n            sum = n\n        end\n    end\n    \n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3,\
    \ 5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 5])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 5])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-4, -2, 1, 3, 5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4,\
    \ -2, 1, 3, 5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1,\
    \ 3, 5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 5])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 5])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-4, -2, 1, 3, 5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4,\
    \ -2, 1, 3, 5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1,\
    \ 3, 5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 5])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 5])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-4, -2, 1, 3, 5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4,\
    \ -2, 1, 3, 5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1,\
    \ 3, 5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 5])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 5])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([", "    \n    sum = 0\n    \n    for\
    \ x in nums\n        sum += x\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3,4,5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57",
  "    \n    sum = 0\n    \n    for n in nums\n        sum = sum + n\n    end\n  \
    \  \n    return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,4,5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,4,5,6,7,8,9])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSub", "    \n    sum = 0\n    for n in\
    \ nums\n        sum = sum + n\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, ", "    sum::Int64 = 0\n    \n    for n in nums\n\
    \        sum = sum + n\n    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n", "    \n    sum = 0\n    \n    for x in\
    \ nums\n        sum += x\n    end\n    \n    return sum\nend", "    sum::Int64\
    \ = 0\n    \n    for num in nums\n        sum += num\n    end\n    \n    return\
    \ sum\nend", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", " \
    \   sum::Int64 = 0\n    \n    for n in nums\n        sum += n\n    end\n    \n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of positive\
    \ integers less than or equal to n.", "    sum = 0\n    for n in nums\n      \
    \  sum += n\n    end\n    return sum\nend", "    \n    sum::Int64 = 0\n    \n\
    \    for n in nums\n        \n        if sum > n\n            sum = n\n      \
    \  else\n            sum += n\n        end\n    end\n    \n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3,4,5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    \n    sum = 0\n    \n    for n in\
    \ nums\n        \n        if sum < n\n            sum = n\n        end\n    end\n\
    \    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([2,3,5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,11])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([2,3,5,7,11,13])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([2,3,5,7,11,13,17])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,11,13,17,19])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,11,13,17,19,23])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,11,13,17,19,23,25])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,11,13,17,19,23,25,31])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,11,13,17,19,23,25,31,37])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,11,13,17,19,23,25,31,37,41])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,11,13,17,19,23,25,31,37,41,49])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,11,13,17,19,23,25,31,37,41,49,55])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,11,13,17,19,23,25,31,37,41,49,55,61])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,11,13,17,19,23,25,31,37,41,49,55,61,67])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,11,13,17,19,23,25,31,37,",
  "    \n    sum = 0\n    \n    for i in nums\n        sum += i\n    end\n    \n \
    \   return sum\nend", "    sum = 0\n    for n in nums\n        sum += n\n    end\n\
    \    return sum\nend", "    \n    sum = 0\n    \n    for x in nums\n        sum\
    \ += x\n    end\n    \n    return sum\nend", "    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,4,2,5,1])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,4,2,5,1])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,4,2,5,1])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,4,2,5,1])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,4,2,5,1])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,4,2,5,1])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n\
    </cell>", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n\
    \    sum::Int64 = 0\n    \n    for i in nums\n        \n        sum = sum + i\n\
    \        \n    end\n    \n    return sum\nend", "    sum::Int64 = 0\n    for i\
    \ in nums\n        sum += i\n    end\n    return sum\nend", "    sum::Int64 =\
    \ nums.sum() \n    minimum::Int64 = nums.min() \n    \n    for n in nums[1..end-1]\
    \ \n        sum = sum + n \n        if sum < minimum \n            minimum = sum\
    \ \n        end\n    end\n    return minimum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the number of positive integers less than or equal to n.", "  \
    \  sum::Int64 = 0\n    \n    for n in nums\n        sum += n\n    end\n    \n\
    \    return sum\nend", "    \n    sum = 0\n    for n in nums\n        sum = sum\
    \ + n\n    end\n    return sum\nend", "    sum = 0\n    for n in nums\n      \
    \  sum += n\n    end\n    return sum\nend", "    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n", "    \n    sum = 0\n    for x in nums\n        sum\
    \ += x\n    end\n    return sum\nend", "    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n", "    sum::Int64 = 0\n    \n    for n in nums\n        sum\
    \ += n\n    end\n    \n    return sum\nend", "    sum::Int64 = 0\n    for n in\
    \ nums\n        sum += n\n    end\n    return sum\nend\n\"\"\"\n    Given an array\
    \ of integers nums, find the minimum sum of any non-empty sub-array\n    of nums.\n\
    \    Example\n            \"\"\"", "    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n", "    \n    sum = 0\n    for n in nums\n        sum += n\n    end\n\
    \    return sum\nend", "    sum::Int64 = 0\n    \n    for x in nums\n        sum\
    \ += x\n    end\n    \n    return sum\nend", "    \n    sum = 0\n    \n    for\
    \ x in nums\n        \n        if sum < x\n            sum = x\n        end\n\
    \    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,11,13])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of times\
    \ a given number appears in an array. For example, if the array is [1,2,2,3,3,4,5,5,5,5,6,7,8,9,10],\
    \ the function should return 3 because 2 appears 3 times in the array.", "   \
    \ \n    sum = 0\n    for x in nums\n        sum += x\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,3])\n</cell>\n<code\
    \ language=julia-1.0>\nminSubArraySum([2,3,4])\n</cell>\n<code language=julia-1.0>\n\
    minSubArraySum([2,3,5,7,11])\n</cell>\n<code language=julia-1.0>\nminSubArraySum([2,3,5,7,11,13])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([2,3,5,7,11,13,17])\n</cell>\n\
    <code language=julia-1.0>\nminSubArraySum([2,3,5,7,11,13,17,19])\n</cell>\n<code\
    \ language=julia-1.0>\nminSubArraySum([2,3,5,7,11,13,17,19,21])\n</cell>\n<code\
    \ language=julia-1.0>\nminSubArraySum([2,3,5,7,11,13,17,19,21,23])\n</cell>\n\
    <code language=julia-1.0>\nminSubArraySum([2,3,5,7,11,13,17,19,21,23,25])\n</cell>\n\
    <code language=julia-1.0>\nminSubArraySum([2,3,5,7,11,13,17,19,21,23,25,27])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([2,3,5,7,11,13,17,19,21,23,25,27,29])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([2,3,5,7,11,13,17,19,21,23,25,27,29,31])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([2,3,5,7,11,13,17,19,21,23,25,27,29,31,33])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([2,3,5,7,11,13,17,19,21,23,25,27,29,31,33,35])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([2,3,5,7,11,13,17,19,21,23,25,27,29,31,33,35,37])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([2,3,5,7,11,13,17,19,21,23,25,27,29,31,33,35,37,39])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([2,3,5,7,11,13,17,19,21,23,25,27,29,31,33,35,37,39,41])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([2,3,", "    \n    sum = 0\n\
    \    \n    for n in nums\n        sum += n\n    end\n    \n    return sum\nend",
  "    \n    sum = 0\n    \n    for i in nums\n        sum += i\n    end\n    \n \
    \   return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>", " \
    \   \n    sum = 0\n    for x in nums\n        sum += x\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2,\
    \ 1, -5, 4])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4,\
    \ -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-2, 1,\
    \ -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-2,\
    \ 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-2,\
    \ 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-2,\
    \ 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-2,\
    \ 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-2,\
    \ 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-2,\
    \ 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-2,\
    \ 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-2,\
    \ 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-2,\
    \ 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-2,\
    \ 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-2,\
    \ 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-2,\
    \ 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-2,\
    \ 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-2,\
    \ 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-2,\
    \ 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-2,\
    \ 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([",
  "    \n    sum = 0\n    \n    for n in nums\n        sum += n\n    end\n    \n \
    \   return sum\nend", "    sum = 0\n    for x in nums\n        sum = sum + x\n\
    \    end\n    return sum\nend\n\"\"\"\n    Given an array of integers nums, find\
    \ the maximum sum of any non-empty sub-array\n    of nums.\n    Example\n    \
    \        \"\"\"", "    \n    sum = 0\n    \n    for n in nums\n        sum +=\
    \ n\n    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,",
  "    \n    sum = 0\n    \n    for n in nums\n        sum += n\n    end\n    \n \
    \   return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>", "    \n    sum = 0\n    \n    for n in nums\n        sum += n\n    end\n\
    \    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,4])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,8,9,10])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([2,3,5,7,8,9,10,11,12,13,14])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([2,3,5,7,8,9,10,11,12,13,14,15])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([2,3,5,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,8,9,10,11,12,13,14,15,16,17,18,19])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26])\n\
    </cell", "    sum::Int64 = 0\n    \n    for i in nums\n        sum += i\n    end\n\
    \    \n    return sum\nend", "    sum = 0\n    for x in nums\n        sum += x\n\
    \    end\n    return sum\nend", "    \n    sum = 0\n    for n in nums\n      \
    \  sum += n\n    end\n    return sum\nend", "    sum::Int64 = 0\n    \n    for\
    \ i in nums\n        sum += i\n    end\n    \n    return sum\nend", "    \n  \
    \  sum = 0\n    \n    for n in nums\n        sum += n\n    end\n    \n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3,4,5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])", "    \n    sum::Int64 = 0\n    \n    for num in nums\n\
    \        sum = sum + num\n    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3,4,5,6,7,8])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,",
  "    \n    sum = 0\n    \n    for x in nums\n        sum += x\n    end\n    \n \
    \   return sum\nend\n</cell>\n<code language=julia-1.5>", "    sum::Int64 = 0\n\
    \    \n    for n in nums\n        sum::Int64 = sum + n\n    end\n    \n    return\
    \ sum\nend", "    \n    sum::Int64 = 0\n    \n    for num in nums\n        sum\
    \ += num\n    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-10, -5, -15, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10,\
    \ -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5,\
    \ -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10,\
    \ -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5,\
    \ -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10,\
    \ -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5,\
    \ -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10,\
    \ -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5,\
    \ -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10,\
    \ -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5,\
    \ -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10,\
    \ -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5,\
    \ -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10,\
    \ -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -", "   \
    \ sum = 0\n    for x in nums\n        sum = sum + x\n    end\n    return sum\n\
    end\n\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"", "    sum\
    \ = 0\n    for n in nums\n        sum = sum + n\n    end\n    return sum\nend\n\
    \"\"\"\n    Given an array of integers nums, find the minimum sum of any non-empty\
    \ sub-array\n    of nums.\n    Example\n            \"\"\"", "    sum = 0\n  \
    \  for x in nums\n        sum += x\n    end\n    return sum\nend", "    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    sum::Int64 = 0\n    for\
    \ n in nums\n        sum += n\n    end\n    return sum\nend\n\"\"\"\n    Given\
    \ an array of integers nums, find the minimum sum of any non-empty sub-array\n\
    \    of nums.\n    Example\n            \"\"\"", "    \n    sum = 0\n    \n  \
    \  for n in nums\n        \n        if sum < n\n            sum = n\n        end\n\
    \    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([", "    sum = 0\n    for n\
    \ in nums\n        sum += n\n    end\n    return sum\nend\n\"\"\"\n    Given an\
    \ array of integers nums, find the maximum sum of any non-empty sub-array\n  \
    \  of nums.\n    Example\n            \"\"\"", "    sum = 0\n    for n in nums\n\
    \        sum += n\n    end\n    return sum\nend\n\"\"\"\n    Given an array of\
    \ integers nums, find the minimum sum of any non-empty sub-array\n    of nums.\n\
    \    Example\n            \"\"\"", "    \n    sum = 0\n    for x in nums\n   \
    \     sum += x\n    end\n    return sum\nend", "    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-4, -2, 1, 3, 2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4,\
    \ -2, 1, 3, 2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1,\
    \ 3, 2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 2])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 2])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-4, -2, 1, 3, 2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4,\
    \ -2, 1, 3, 2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1,\
    \ 3, 2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 2])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 2])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-4, -2, 1, 3, 2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4,\
    \ -2, 1, 3, 2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1,\
    \ 3, 2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 2])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 2])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-4, -2, 1, 3, 2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4,\
    \ -2, 1, 3, 2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1,\
    \ 3, 2])\n</cell", "    sum::Int64 = 0\n    \n    for n in nums\n        sum::Int64\
    \ = sum + n\n    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    sum = 0\n    \n    for n in nums\n        sum = sum + n\n    end\n  \
    \  \n    return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,4,5,6])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,4,5,6,7,8,9,10])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,",
  "    sum::Int64 = 0\n    \n    for n in nums\n        sum += n\n    end\n    \n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,4,5,6])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,4,5,6,7,8,9,10])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])\n\
    </cell>\n<code language=julia-1.5>", "    \n    sum = 0\n    for n in nums\n \
    \       sum += n\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,",
  "    \n    sum = 0\n    for x in nums\n        sum += x\n    end\n    return sum\n\
    end\n\"\"\"\n    Given an array of integers nums, find the maximum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"", "    sum\
    \ = 0\n    \n    for n in nums\n        sum += n\n    end\n    \n    return sum\n\
    end", "    sum = 0\n    for x in nums\n        sum += x\n    end\n    return sum\n\
    end\n\"\"\"\n    Given an array of integers nums, find the maximum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"", "    \n\
    \    sum = 0\n    for x in nums\n        sum += x\n    end\n    return sum\nend\n\
    \"\"\"\n    Given an array of integers nums, find the minimum sum of any non-empty\
    \ sub-array\n    of nums.\n    Example\n            \"\"\"", "    \n    sum =\
    \ 0\n    \n    for n in nums\n        sum += n\n    end\n    \n    return sum\n\
    end", "    sum = 0\n    for x in nums\n        sum += x\n    end\n    return sum\n\
    end", "    \n    sum = 0\n    \n    for n in nums\n        \n        if sum <\
    \ n\n            sum = n\n        end\n    end\n    \n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([2,4,5,7,8,10,12,14,16,18,20])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([2,4,5,7,8,10,12,14,16,18,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,5,7,8,10,12,14,16,18,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,5,7,8,10,12,14,16,18,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,5,7,8,10,12,14,16,18,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,5,7,8,10,12,14,16,18,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,5,7,8,10,12,14,16,18,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,5,7,8,10,12,14,16,18,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,5,7,8,10,12,14,16,18,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,5,7,8,10,12,14,16,18,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,5,7,8,10,12,14,16,18,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,5,7,8,10,12,14,16,18,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,5,7,8,10,12,14,16,18,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,5,7,8,10,12,14,16,18,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,5,7,8,10,12,14,16,18,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,5,7,8,10,12,14,16,18,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum", "    sum = 0\n    for x in\
    \ nums\n        sum += x\n    end\n    return sum\nend", "    \n    sum = 0\n\
    \    for x in nums\n        sum += x\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,4,5,6])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,2",
  "    \n    sum = 0\n    \n    for n in nums\n        sum += n\n    end\n    \n \
    \   return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>", "    sum::Int64 = 0\n    \n    for n in nums\n        sum += n\n   \
    \ end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,4])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the squares\
    \ of the numbers in nums.", "    \n    sum = 0\n    \n    for num in nums\n  \
    \      \n        if num > 0\n            \n            sum = sum + num\n     \
    \       \n        else\n            \n            sum = sum - num\n          \
    \  \n        end\n        \n    end\n    \n    return sum\n    \nend", "    sum::Int64\
    \ = 0\n    \n    for n in nums\n        sum::Int64 = sum + n\n    end\n    \n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n\
    </cell>\n<text>\nProblem 3\nGiven an array of integers nums, find the maximum\
    \ sum of any non-empty sub-array\n    of nums.\n    Example\n            \"\"\"",
  "    \n    sum = 0\n    \n    for n in nums\n        sum = sum + n\n    end\n  \
    \  \n    return sum\nend\n</cell>\n<code language=julia-1.5>", "    sum = 0\n\
    \    for n in nums\n        sum += n\n    end\n    return sum\nend\n\"\"\"\n \
    \   Given an array of integers nums, find the maximum sum of any non-empty sub-array\n\
    \    of nums.\n    Example\n            \"\"\"", "    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n", "    sum = 0\n    for x in nums\n        sum\
    \ += x\n    end\n    return sum\nend\n\"\"\"\n    Given an array of integers nums,\
    \ find the minimum sum of any non-empty sub-array\n    of nums.\n    Example\n\
    \            \"\"\"", "    \n    sum = 0\n    for x in nums\n        sum += x\n\
    \    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,3,2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,2])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n", "    \n    sum = 0\n    for n in nums\n        sum\
    \ += n\n    end\n    return sum\nend", "    \n    sum = 0\n    for x in nums\n\
    \        sum = sum + x\n    end\n    return sum\nend", "    \n    sum = 0\n  \
    \  \n    for n in nums\n        sum = sum + n\n    end\n    \n    return sum\n\
    end", "    sum = 0\n    for x in nums\n        sum += x\n    end\n    return sum\n\
    end\n\"\"\"\n    Given an array of integers nums, find the maximum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"", "    \n\
    \    sum::Int64 = 0\n    \n    for num in nums\n        sum = sum + num\n    end\n\
    \    \n    return sum\nend", "    sum = 0\n    for n in nums\n        sum += n\n\
    \    end\n    return sum\nend", "    \n    sum = 0\n    \n    for n in nums\n\
    \        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,",
  "    \n    sum = 0\n    for num in nums\n        sum = sum + num\n    end\n    return\
    \ sum\nend", "    \n    sum = 0\n    \n    for n in nums\n        sum += n\n \
    \   end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,4,5,6])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,4,5,6,7])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,",
  "    \n    sum = 0\n    \n    for n in nums\n        sum += n\n    end\n    \n \
    \   return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,4,5,6])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,4,5,6,7,8,9])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22])\n\
    </cell>", "    sum::Int64 = 0\n    for n in nums\n        sum += n\n    end\n\
    \    return sum\nend", "    sum = 0\n    for x in nums\n        sum += x\n   \
    \ end\n    return sum\nend", "    sum = 0\n    for x in nums\n        sum += x\n\
    \    end\n    return sum\nend", "    \n    sum = 0\n    \n    for n in nums\n\
    \        \n        if sum < n\n            sum = n\n        end\n    end\n   \
    \ \n    return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,",
  "    \n    sum = 0\n    \n    for n in nums\n        sum += n\n    end\n    \n \
    \   return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3,4,5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])\n\
    </cell>\n<code language=julia-1.5>\nminSub", "    \n    sum = 0\n    \n    for\
    \ n in nums\n        \n        if sum > n\n            \n            sum = n\n\
    \            \n        else\n            \n            sum = sum + n\n       \
    \     \n        end\n        \n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>", "    \n    sum = 0\n    \n    for n in nums\n    \
    \    sum += n\n    end\n    \n    return sum\nend", "    \n    sum::Int64 = 0\n\
    \    \n    for n in nums\n        sum += n\n    end\n    \n    return sum\nend",
  "    sum::Int64 = 0\n    \n    for i in nums\n        sum = sum + i\n    end\n \
    \   \n    return sum\nend", "    sum = 0\n    for x in nums\n        sum += x\n\
    \    end\n    return sum\nend", "    sum::Int64 = 0\n    \n    for n in nums\n\
    \        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that takes an array of integers and returns the number of\
    \ positive integers in the array.", "    sum = 0\n    for x in nums\n        sum\
    \ += x\n    end\n    return sum\nend", "    sum = 0\n    for i in nums\n     \
    \   sum += i\n    end\n    return sum\nend", "    sum::Int64 = 0\n    for i in\
    \ nums\n        sum = sum + i\n    end\n    return sum\nend", "    sum = 0\n \
    \   \n    for n in nums\n        sum += n\n    end\n    \n    return sum\nend",
  "    \n    sum = 0\n    \n    for n in nums\n        sum = sum + n\n    end\n  \
    \  \n    return sum\nend", "    sum = 0\n    for x in nums\n        sum += x\n\
    \    end\n    return sum\nend", "    \n    sum = 0\n    \n    for n in nums\n\
    \        \n        if sum < n\n            sum = n\n        end\n    end\n   \
    \ \n    return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,4,5,6])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,",
  "    sum::Int64 = 0\n    \n    for n in nums\n        sum += n\n    end\n    \n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,",
  "    sum::Int64 = nums[1]\n    for n in nums[2:end]\n        sum = sum + n\n   \
    \ end\n    return sum\nend\n\"\"\"\n    Given an array of integers nums, find\
    \ the minimum sum of any non-empty sub-array\n    of nums.\n    Example\n    \
    \        \"\"\"", "    \n    sum::Int64 = 0\n    \n    for i in nums\n       \
    \ sum += i\n    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-4, -2, 1, 3, 5])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the number of positive integers less than or equal to n.", "  \
    \  sum::Int64 = 0\n    \n    for n in nums\n        sum += n\n    end\n    \n\
    \    return sum\nend", "    sum = 0\n    for n in nums\n        sum += n\n   \
    \ end\n    return sum\nend", "    \n    sum = 0\n    \n    for x in nums\n   \
    \     sum = sum + x\n    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,",
  "    \n    sum = 0\n    for n in nums\n        sum += n\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,4,5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,4,5,6])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,4,5,6,7,8,9,10])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21])\n",
  "    \n    sum = 0\n    \n    for n in nums\n        sum += n\n    end\n    \n \
    \   return sum\nend\n</cell>\n<code language=julia-1.4>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.4>\nminSubArraySum([1,2,4,5])\n</cell>\n<code\
    \ language=julia-1.4>\nminSubArraySum([1,2,4,5,6])\n</cell>\n<code language=julia-1.4>\n\
    minSubArraySum([1,2,4,5,6,7])\n</cell>\n<code language=julia-1.4>\nminSubArraySum([1,2,4,5,6,7,8])\n\
    </cell>\n<code language=julia-1.4>\nminSubArraySum([1,2,4,5,6,7,8,9])\n</cell>\n\
    <code language=julia-1.4>\nminSubArraySum([1,2,4,5,6,7,8,9,10])\n</cell>\n<code\
    \ language=julia-1.4>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11])\n</cell>\n<code\
    \ language=julia-1.4>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12])\n</cell>\n<code\
    \ language=julia-1.4>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13])\n</cell>\n\
    <code language=julia-1.4>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.4>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.4>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.4>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.4>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n<code language=julia-1.4>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19])\n\
    </cell>\n<code language=julia-1.4>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.4>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,",
  "    \n    sum = 0\n    \n    for n in nums\n        sum += n\n    end\n    \n \
    \   return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-2, 1,\
    \ -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the number of integers in the array that are less than the given value.",
  "    sum::Int64 = 0\n    \n    for n in nums\n        sum += n\n    end\n    \n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of integers\
    \ and returns the number of unique elements in that array. \nExample\nGiven [1,2,2,3,4,5,5,6,7,8,9,10,11,12,13,14,15],\
    \ your function should return 8.", "    \n    sum = 0\n    \n    for n in nums\n\
    \        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>", "    sum = 0\n    \n    for n in\
    \ nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,3,5,7,9])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the number of positive integers less than or equal to n.", "    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    sum::Int64 = 0\n    \n\
    \    for n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3,\
    \ 4, 5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-10, -5, -4, -3,\
    \ -2, -1, 0, 1, 2, 3, 4, 5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-10,\
    \ -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n</cell>\n<code language=julia-1.5>",
  "    \n    sum::Int64 = 0\n    \n    for n in nums\n        sum += n\n    end\n\
    \    \n    return sum\nend\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the number of times the number 1 appears in the given array.", "   \
    \ sum = 0\n    \n    for n in nums\n        sum += n\n    end\n    \n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3,4,5,6,7,8,9,10])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,23",
  "    \n    sum = 0\n    \n    for x in nums\n        sum += x\n    end\n    \n \
    \   return sum\nend", "    \n    sum = 0\n    \n    for n in nums\n        sum\
    \ += n\n    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,4,5,6,7,8])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,",
  "    \n    sum = 0\n    for x in nums\n        sum += x\n    end\n    return sum\n\
    end\n\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"", "    sum::Int64\
    \ = 0\n    \n    for n in nums\n        sum += n\n    end\n    \n    return sum\n\
    end", "    \n    sum = 0\n    for x in nums\n        sum += x\n    end\n    \n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3,4,5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    sum::Int64 = 0\n\
    \    \n    for num in nums\n        sum = sum + num\n    end\n    \n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of times\
    \ a given element appears in an array.", "    sum = 0\n    for n in nums\n   \
    \     sum += n\n    end\n    return sum\nend", "    sum = 0\n    for x in nums\n\
    \        sum += x\n    end\n    return sum\nend\n\"\"\"\n    Given an array of\
    \ integers nums, find the maximum sum of any non-empty sub-array\n    of nums.\n\
    \    Example\n            \"\"\"", "    sum = 0\n    for x in nums\n        sum\
    \ += x\n    end\n    return sum\nend", "    sum = 0\n    for x in nums\n     \
    \   sum += x\n    end\n    return sum\nend\n\"\"\"\n    Given an array of integers\
    \ nums, find the maximum sum of any non-empty sub-array\n    of nums.\n    Example\n\
    \            \"\"\"", "    sum = 0\n    for i in nums\n        sum += i\n    end\n\
    \    return sum\nend", "    \n    sum = 0\n    \n    for n in nums\n        \n\
    \        if sum > n\n            \n            sum = n\n            \n       \
    \ else\n            \n            sum += n\n            \n        end\n      \
    \  \n    end\n    \n    return sum\n    \nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5", "    sum = 0\n  \
    \  for x in nums\n        sum += x\n    end\n    return sum\nend", "    sum =\
    \ 0\n    for x in nums\n        sum += x\n    end\n    return sum\nend", "   \
    \ \n    sum = 0\n    for n in nums\n        sum += n\n    end\n    return sum\n\
    end", "    \n    sum = 0\n    \n    for n in nums\n        \n        sum = sum\
    \ + n\n        \n    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    sum = 0\n    \n    for n in nums\n        sum = sum + n\n    end\n  \
    \  \n    return sum\nend", "    sum::Int64 = 0\n    \n    for n in nums\n    \
    \    sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-4, -2, 1, 3, 5])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the number of positive integers less than or equal to n.", "  \
    \  sum::Int64 = 0\n    for x in nums\n        sum += x\n    end\n    return sum\n\
    end\n\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"", "    sum\
    \ = 0\n    for x in nums\n        sum += x\n    end\n    return sum\nend", " \
    \   \n    sum = 0\n    \n    for n in nums\n        sum += n\n    end\n    \n\
    \    return sum\nend", "    \n    sum = 0\n    \n    for n in nums\n        sum\
    \ += n\n    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,",
  "    \n    sum = 0\n    \n    for n in nums\n        sum += n\n    end\n    \n \
    \   return sum\nend", "    \n    sum = 0\n    \n    for x in nums\n        sum\
    \ += x\n    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,",
  "    \n    sum = 0\n    \n    for n in nums\n        \n        if sum < n\n    \
    \        sum = n\n        end\n    end\n    \n    return sum\nend", "    \n  \
    \  sum = 0\n    \n    for n in nums\n        sum += n\n    end\n    \n    return\
    \ sum\nend", "    \n    sum = 0\n    \n    for n in nums\n        sum = sum +\
    \ n\n    end\n    \n    return sum\nend", "    sum = 0\n    for x in nums\n  \
    \      sum += x\n    end\n    return sum\nend", "    \n    sum::Int64 = 0\n  \
    \  \n    for n in nums\n        sum += n\n    end\n    \n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3,4,5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229",
  "    sum = 0\n    for n in nums\n        sum += n\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>", "    sum = 0\n    for n in nums\n       \
    \ sum += n\n    end\n    return sum\nend", "    sum::Int64 = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3,4,5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])\n\
    </cell>\n<code language=julia-1.5>", "    sum::Int64 = 0\n    \n    for i in nums\n\
    \        sum += i\n    end\n    \n    return sum\nend", "    \n    sum::Int64\
    \ = 0\n    \n    for num in nums\n        sum += num\n    end\n    \n    return\
    \ sum\nend", "    \n    sum = 0\n    \n    for n in nums\n        \n        if\
    \ sum > n\n            sum = n\n        else\n            sum = sum + n\n    \
    \    end\n    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the number of times a given value appears in a given array.", " \
    \   \n    sum = 0\n    for n in nums\n        sum += n\n    end\n    return sum\n\
    end", "    sum::Int64 = 0\n    for num in nums\n        sum += num\n    end\n\
    \    return sum\nend", "    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
  "    sum = 0\n    for n in nums\n        sum = sum + n\n    end\n    return sum\n\
    end", "    \n    sum = 0\n    for n in nums\n        sum = sum + n\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20,21,22])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20,21,22,23])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20,21,22,23,24])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20,21,22,23,24,25])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20,21,22,23,24,25,26])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20,21,22,23,24,25,26,27])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20,21,22,23,24,25,26,27,28])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20,21,22,23,24,25,26,27,28,29])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20,21,22,23,24,25,26,27,28,29,30])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20,21,22,23,24,25,26,27,28,29,30,31])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20,21,22,23,24,25,26,27,28,29,30,31,32])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,", "    sum = 0\n\
    \    for i in nums\n        sum += i\n    end\n    return sum\nend", "    \n \
    \   sum = 0\n    \n    for x in nums\n        sum += x\n    end\n    \n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-5, -4, -3, -2,\
    \ -1, 0, 1, 2, 3, 4, 5])\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of positive integers less than or equal to n.", "    \n    sum =\
    \ 0\n    \n    for x in nums\n        sum += x\n    end\n    \n    return sum\n\
    end", "    sum = 0\n    for n in nums\n        sum += n\n    end\n    return sum\n\
    end\n\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"", "    sum\
    \ = 0\n    for x in nums\n        sum += x\n    end\n    return sum\nend\n\"\"\
    \"\n    Given an array of integers nums, find the maximum sum of any non-empty\
    \ sub-array\n    of nums.\n    Example\n            \"\"\"", "    \n    sum =\
    \ 0\n    \n    for n in nums\n        sum += n\n    end\n    \n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,4,5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,4,5,6])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,4,5,6,7,8,9,10])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,",
  "    \n    sum = 0\n    \n    for x in nums\n        sum = sum + x\n    end\n  \
    \  \n    return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,3,2])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,3,2])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,4,3,2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,4,3,2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,3,2])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,3,2])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,4,3,2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,4,3,2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,3,2])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,3,2])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,4,3,2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,4,3,2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,3,2])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,3,2])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,4,3,2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,4,3,2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,3,2])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,3,2])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,4,3,2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,4,3,2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,3,2])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,3,2])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,4,3,2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,4,3,2])\n</cell>\n", "    sum::Int64 = 0\n    for i in nums\n\
    \        sum += i\n    end\n    return sum\nend\n\"\"\"\n    Given an array of\
    \ integers nums, find the maximum sum of any non-empty sub-array\n    of nums.\n\
    \    Example\n            \"\"\"", "    \n    sum = 0\n    \n    for n in nums\n\
    \        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-10, -5, -4, -7, -9, -6, -4, -6, -4, -6, -5, -7, -9, -9, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -", "    \n    sum\
    \ = 0\n    for x in nums\n        sum += x\n    end\n    return sum\nend", " \
    \   \n    sum = 0\n    \n    for n in nums\n        sum = sum + n\n    end\n \
    \   \n    return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of times\
    \ each element appears in the given array."]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

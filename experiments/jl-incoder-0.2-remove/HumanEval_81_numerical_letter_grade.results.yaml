language: jl
name: HumanEval_81_numerical_letter_grade
results:
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grade\nusing Test\n\
    \n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf9y4uxn5.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf9y4uxn5.jl:1\n\
    in expression starting at /tmp/tmpf9y4uxn5.jl:1\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grade\nusing Test\n\
    \n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf9y4uxn5.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf9y4uxn5.jl:1\n\
    in expression starting at /tmp/tmpf9y4uxn5.jl:1\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grade\nusing Test\n\
    \n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf9y4uxn5.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf9y4uxn5.jl:1\n\
    in expression starting at /tmp/tmpf9y4uxn5.jl:1\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grade\nusing Test\n\
    \n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf9y4uxn5.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf9y4uxn5.jl:1\n\
    in expression starting at /tmp/tmpf9y4uxn5.jl:1\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grade\nusing Test\n\
    \n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf9y4uxn5.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf9y4uxn5.jl:1\n\
    in expression starting at /tmp/tmpf9y4uxn5.jl:1\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    \n    grades = sort(grades)\n    \n    grades_sorted = sort(grades)\n\
    \    \n    grades_sorted = grades_sorted[grades_sorted .> 0]\n    \n    grades_sorted\
    \ = grades_sorted[grades_sorted .<= 4.0]\n    \n    grades_sorted = grades_sorted[grades_sorted\
    \ .<= 3.7]\n    \n    grades_sorted = grades_sorted[grades_sorted .<= 3.3]\n \
    \   \n    grades_sorted = grades_sorted[grades_sorted .<= 3.0]\n    \n    grades_sorted\
    \ = grades_sorted[grades_sorted .<= 2.7]\n    \n    grades_sorted = grades_sorted[grades_sorted\
    \ .<= 2.3]\n    \n    grades_sorted = grades_sorted[grades_sorted .<= 2.0]\n \
    \   \n    grades_sorted = grades_sorted[grades_sorted .<= 1.7]\n    \n    grades_sorted\
    \ = grades_sorted[grades_sorted .<= 1.3]\n    \n    grades_sorted = grades_sorted[grades_sorted\
    \ .<= 1.0]\n    \n    grades_sorted = grades_sorted[grades_sorted .<= 0.7]\n \
    \   \n    grades_sorted = grades_sorted[grades_sorted .<= 0.0]\n    \n    grades_sorted\
    \ = grades_sorted[grades_sorted .<= 0.0]\n    \n    grades_sorted = grades_sorted[grades_sorted\
    \ .<= 0.0]\n    \n    grades_sorted = grades_sorted[grades_sorted .<= 0.0]\n \
    \   \n    grades_sorted = grades_sorted[grades_sorted .<= 0.0]\n    \n    grades_sorted\
    \ = grades_sorted[grades_sorted .<= 0.0]\n    \n    grades_sorted = grades_sorted[grades_sorted\
    \ .<= 0.0]\n    \n    grades_sorted = grades_sorted[grades_sorted .<= 0.0]\n \
    \   \n    grades_sorted = grades_sorted[grades_sorted .<= 0.0]\n    \n    grades_sorted\
    \ = grades_sorted[grades_sorted .<= 0.0]\n    \n    grades_sorted = grades_sorted[grades_sorted\
    \ .<= 0.0]\n    \n    grades_sorted = grades_sorted[grades_sorted .<= 0.0]\n \
    \   \n    grades_sorted = grades_sorted[grades_sorted .<= 0.0]\n    \n    grades_sorted\
    \ = grades_sorted[grades_sorted .<= 0.0]\n    \n    grades_sorted = grades_sorted[grades_sorted\
    \ \nusing Test\n\n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpac9bkw6n.jl:1\nin expression starting at /tmp/tmpac9bkw6n.jl:1\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grade\nusing Test\n\
    \n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf9y4uxn5.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf9y4uxn5.jl:1\n\
    in expression starting at /tmp/tmpf9y4uxn5.jl:1\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    \n    grades = sort(grades)\n    \n    grades_sum = sum(grades)\n    \n\
    \    if grades_sum < 4.0\n        grades_letter = \"D-\"\n    elseif grades_sum\
    \ < 3.7\n        grades_letter = \"D+\"\n    elseif grades_sum < 3.3\n       \
    \ grades_letter = \"D\"\n    elseif grades_sum < 3.0\n        grades_letter =\
    \ \"C-\"\n    elseif grades_sum < 2.7\n        grades_letter = \"C+\"\n    elseif\
    \ grades_sum < 2.3\n        grades_letter = \"C\"\n    elseif grades_sum < 2.0\n\
    \        grades_letter = \"B-\"\n    elseif grades_sum < 1.7\n        grades_letter\
    \ = \"B+\"\n    elseif grades_sum < 1.3\n        grades_letter = \"B\"\n    elseif\
    \ grades_sum < 1.0\n        grades_letter = \"A-\"\n    elseif grades_sum < 0.7\n\
    \        grades_letter = \"A+\"\n    elseif grades_sum < 0.0\n        grades_letter\
    \ = \"A\"\n    else\n        grades_letter = \"E\"\n    end\n    \n    grades_letter\
    \ = grades_letter * grades_sum\n    \n    return grades_letter\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = numerical_letter_grade;\n\
    \t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"\
    A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5]) == [\"\
    D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5,\
    \ 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4dvyermh.jl:62\nin expression starting at\
    \ /tmp/tmp4dvyermh.jl:62\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grade\nusing Test\n\
    \n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf9y4uxn5.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf9y4uxn5.jl:1\n\
    in expression starting at /tmp/tmpf9y4uxn5.jl:1\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grade\nusing Test\n\
    \n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf9y4uxn5.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf9y4uxn5.jl:1\n\
    in expression starting at /tmp/tmpf9y4uxn5.jl:1\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grade\nusing Test\n\
    \n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf9y4uxn5.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf9y4uxn5.jl:1\n\
    in expression starting at /tmp/tmpf9y4uxn5.jl:1\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grade\nusing Test\n\
    \n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf9y4uxn5.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf9y4uxn5.jl:1\n\
    in expression starting at /tmp/tmpf9y4uxn5.jl:1\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grade\nusing Test\n\
    \n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf9y4uxn5.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf9y4uxn5.jl:1\n\
    in expression starting at /tmp/tmpf9y4uxn5.jl:1\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    \n    grades = sort(grades)\n    \n    grades = grades[2:end]\n    \n\
    \    grades = sort(grades)\n    \n    grades = grades[2:end]\n    \n    grades\
    \ = sort(grades)\n    \n    grades = grades[2:end]\n    \n    grades = sort(grades)\n\
    \    \n    grades = grades[2:end]\n    \n    grades = sort(grades)\n    \n   \
    \ grades = grades[2:end]\n    \n    grades = sort(grades)\n    \n    grades =\
    \ grades[2:end]\n    \n    grades = sort(grades)\n    \n    grades = grades[2:end]\n\
    \    \n    grades = sort(grades)\n    \n    grades = grades[2:end]\n    \n   \
    \ grades = sort(grades)\n    \n    grades = grades[2:end]\n    \n    grades =\
    \ sort(grades)\n    \n    grades = grades[2:end]\n    \n    grades = sort(grades)\n\
    \    \n    grades = grades[2:end]\n    \n    grades = sort(grades)\n    \n   \
    \ grades = grades[2:end]\n    \n    grades = sort(grades)\n    \n    grades =\
    \ grades[2:end]\n    \n    grades = sort(grades)\n    \n    grades = grades[2:end]\n\
    \    \n    grades = sort(grades)\n    \n    grades = grades[2:end]\n    \n   \
    \ grades = sort(grades)\n    \n    grades = grades[2:end]\n    \n    grades =\
    \ sort(grades)\n    \n    grades = grades[2:end]\n    \n    grades = sort(grades)\n\
    \    \n    grades = grades[2:end]\n    \n    grades = sort(grades)\n    \n   \
    \ grades = grades[2:end]\n    \n    grades = sort(grades)\n    \n    grades =\
    \ grades[2:end]\n    \n    grades = sort(grades)\n    \n    grades = grades[2:end]\n\
    \    \n    grades = sort(grades)\n    \n    grades = grades[2:end]\n    \n   \
    \ grades = sort(grades)\n    \n    grades = grades[2:end]\n    \n    grades =\
    \ sort(grades)\n    \n    grades = grades[2:end]\n    \n    grades = sort(grades)\n\
    \    \n    grades = grades[2:end]\n    \n    grades = sort(grades)\n    \n   \
    \ grades = grades[2:end]\n    \n    grades = sort(grades)\n    \n    grades =\
    \ grades[2:end]\nusing Test\n\n@testset begin\n\ncandidate = numerical_letter_grade;\n\
    \t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"\
    A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5]) == [\"\
    D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5,\
    \ 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpp3jclnen.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpp3jclnen.jl:1\n\
    in expression starting at /tmp/tmpp3jclnen.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    \n    grades = sort(grades)\n    \n    if grades[1] > grades[2] \n   \
    \     return \"B+\"\n    else if grades[1] > grades[2] \n        return \"B\"\n\
    \    else if grades[1] > grades[2] \n        return \"B-\"\n    else if grades[1]\
    \ > grades[2] \n        return \"C+\"\n    else if grades[1] > grades[2] \n  \
    \      return \"C\"\n    else if grades[1] > grades[2] \n        return \"C-\"\
    \n    else if grades[1] > grades[2] \n        return \"D+\"\n    else if grades[1]\
    \ > grades[2] \n        return \"D\"\n    else if grades[1] > grades[2] \n   \
    \     return \"D-\"\n    else if grades[1] > grades[2] \n        return \"E\"\n\
    \    else \n        return \"F\"\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdq3dwj35.jl:30\nin expression starting at\
    \ /tmp/tmpdq3dwj35.jl:30\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grade\nusing Test\n\
    \n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf9y4uxn5.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf9y4uxn5.jl:1\n\
    in expression starting at /tmp/tmpf9y4uxn5.jl:1\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    \n    grades = sort(grades)\n    \n    grades_sorted = sort(grades)\n\
    \    \n    grades_sorted = grades_sorted[grades_sorted .!= 0]\n    \n    grades_sorted\
    \ = grades_sorted[grades_sorted .!= grades_sorted]\n    \n    grades_sorted =\
    \ grades_sorted[grades_sorted .!= grades_sorted]\n    \n    grades_sorted = grades_sorted[grades_sorted\
    \ .!= grades_sorted]\n    \n    grades_sorted = grades_sorted[grades_sorted .!=\
    \ grades_sorted]\n    \n    grades_sorted = grades_sorted[grades_sorted .!= grades_sorted]\n\
    \    \n    grades_sorted = grades_sorted[grades_sorted .!= grades_sorted]\n  \
    \  \n    grades_sorted = grades_sorted[grades_sorted .!= grades_sorted]\n    \n\
    \    grades_sorted = grades_sorted[grades_sorted .!= grades_sorted]\n    \n  \
    \  grades_sorted = grades_sorted[grades_sorted .!= grades_sorted]\n    \n    grades_sorted\
    \ = grades_sorted[grades_sorted .!= grades_sorted]\n    \n    grades_sorted =\
    \ grades_sorted[grades_sorted .!= grades_sorted]\n    \n    grades_sorted = grades_sorted[grades_sorted\
    \ .!= grades_sorted]\n    \n    grades_sorted = grades_sorted[grades_sorted .!=\
    \ grades_sorted]\n    \n    grades_sorted = grades_sorted[grades_sorted .!= grades_sorted]\n\
    \    \n    grades_sorted = grades_sorted[grades_sorted .!= grades_sorted]\n  \
    \  \n    grades_sorted = grades_sorted[grades_sorted .!= grades_sorted]\n    \n\
    \    grades_sorted = grades_sorted[grades_sorted .!= grades_sorted]\n    \n  \
    \  grades_sorted = grades_sorted[grades_sorted .!= grades_sorted]\n    \n    grades_sorted\
    \ = grades_sorted[grades_sorted .!= grades_sorted]\n    \n    grades_sorted =\
    \ grades_sorted[grades_sorted .!= grades_sorted]\n    \n    grades_sorted = grades_sorted[grades_sorted\
    \ .!= grades_sorted]\n    \n    grades_sorted = grades_sorted[grades_sorted .!=\
    \ grades_sorted]\n    \n    grades_sorted = grades_sorted[grade\nusing Test\n\n\
    @testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptfffj8bv.jl:1\nin expression starting at /tmp/tmptfffj8bv.jl:1\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    \n    grades = sort(grades)\n    \n    grades_sum = sum(grades)\n    \n\
    \    if grades_sum < 4.0\n        \n        grades_string = \"E\"\n        \n\
    \    elseif grades_sum < 4.5\n        \n        grades_string = \"D+\"\n     \
    \   \n    elseif grades_sum < 5.0\n        \n        grades_string = \"D\"\n \
    \       \n    elseif grades_sum < 5.5\n        \n        grades_string = \"C+\"\
    \n        \n    elseif grades_sum < 6.0\n        \n        grades_string = \"\
    C\"\n        \n    elseif grades_sum < 6.5\n        \n        grades_string =\
    \ \"B+\"\n        \n    elseif grades_sum < 7.0\n        \n        grades_string\
    \ = \"B\"\n        \n    elseif grades_sum < 7.5\n        \n        grades_string\
    \ = \"A-\"\n        \n    elseif grades_sum < 8.0\n        \n        grades_string\
    \ = \"A\"\n        \n    elseif grades_sum < 8.5\n        \n        grades_string\
    \ = \"A+\"\n        \n    elseif grades_sum < 9.0\n        \n        grades_string\
    \ = \"F\"\n        \n    else\n        \n        grades_string = \"F\"\n     \
    \   \n    end\n    \n    return grades_string\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5])\
    \ == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"\
    D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0]) == [\"\
    E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\"\
    , \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp9fez3r_4.jl:84

    '
  stdout: "test set: Error During Test at /tmp/tmp9fez3r_4.jl:87\n  Test threw exception\n\
    \  Expression: candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"\
    C\", \"A-\"]\n  MethodError: Cannot `convert` an object of type String to an object\
    \ of type Vector{String}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{Vector{String}}, !Matched::LibGit2.StrArrayStruct) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LibGit2/src/strarray.jl:13\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    ...\n  Stacktrace:\n   [1] numerical_letter_grade(grades::Vector{Float64})\n\
    \     @ Main /tmp/tmp9fez3r_4.jl:80\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9fez3r_4.jl:87 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9fez3r_4.jl:86\ntest set:\
    \ Error During Test at /tmp/tmp9fez3r_4.jl:88\n  Test threw exception\n  Expression:\
    \ candidate([1.2]) == [\"D+\"]\n  MethodError: Cannot `convert` an object of type\
    \ String to an object of type Vector{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{Vector{String}}, !Matched::LibGit2.StrArrayStruct) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LibGit2/src/strarray.jl:13\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    ...\n  Stacktrace:\n   [1] numerical_letter_grade(grades::Vector{Float64})\n\
    \     @ Main /tmp/tmp9fez3r_4.jl:80\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [in"
  timestamp: 1660011949
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grade\nusing Test\n\
    \n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf9y4uxn5.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf9y4uxn5.jl:1\n\
    in expression starting at /tmp/tmpf9y4uxn5.jl:1\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grade\nusing Test\n\
    \n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf9y4uxn5.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf9y4uxn5.jl:1\n\
    in expression starting at /tmp/tmpf9y4uxn5.jl:1\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grade\nusing Test\n\
    \n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf9y4uxn5.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf9y4uxn5.jl:1\n\
    in expression starting at /tmp/tmpf9y4uxn5.jl:1\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grade\nusing Test\n\
    \n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf9y4uxn5.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf9y4uxn5.jl:1\n\
    in expression starting at /tmp/tmpf9y4uxn5.jl:1\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grade\nusing Test\n\
    \n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf9y4uxn5.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf9y4uxn5.jl:1\n\
    in expression starting at /tmp/tmpf9y4uxn5.jl:1\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grade\nusing Test\n\
    \n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf9y4uxn5.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf9y4uxn5.jl:1\n\
    in expression starting at /tmp/tmpf9y4uxn5.jl:1\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    \n    grades = sort(grades)\n    \n    grades_sorted = grades[2:end]\n\
    \    \n    grades_sorted = sort(grades_sorted)\n    \n    grades_sorted = grades_sorted[grades_sorted\
    \ .> 0]\n    \n    grades_sorted = grades_sorted[grades_sorted .< 1]\n    \n \
    \   grades_sorted = grades_sorted[grades_sorted .!= 0]\n    \n    grades_sorted\
    \ = grades_sorted[grades_sorted .!= 1]\n    \n    grades_sorted = grades_sorted[grades_sorted\
    \ .!= 2]\n    \n    grades_sorted = grades_sorted[grades_sorted .!= 3]\n    \n\
    \    grades_sorted = grades_sorted[grades_sorted .!= 4]\n    \n    grades_sorted\
    \ = grades_sorted[grades_sorted .!= 5]\n    \n    grades_sorted = grades_sorted[grades_sorted\
    \ .!= 6]\n    \n    grades_sorted = grades_sorted[grades_sorted .!= 7]\n    \n\
    \    grades_sorted = grades_sorted[grades_sorted .!= 8]\n    \n    grades_sorted\
    \ = grades_sorted[grades_sorted .!= 9]\n    \n    grades_sorted = grades_sorted[grades_sorted\
    \ .!= 10]\n    \n    grades_sorted = grades_sorted[grades_sorted .!= 11]\n   \
    \ \n    grades_sorted = grades_sorted[grades_sorted .!= 12]\n    \n    grades_sorted\
    \ = grades_sorted[grades_sorted .!= 13]\n    \n    grades_sorted = grades_sorted[grades_sorted\
    \ .!= 14]\n    \n    grades_sorted = grades_sorted[grades_sorted .!= 15]\n   \
    \ \n    grades_sorted = grades_sorted[grades_sorted .!= 16]\n    \n    grades_sorted\
    \ = grades_sorted[grades_sorted .!= 17]\n    \n    grades_sorted = grades_sorted[grades_sorted\
    \ .!= 18]\n    \n    grades_sorted = grades_sorted[grades_sorted .!= 19]\n   \
    \ \n    grades_sorted = grades_sorted[grades_sorted .!= 20]\n    \n    grades_sorted\
    \ = grades_sorted[grades_sorted .!= 21]\n    \n    grades_sorted = grades_sorted[grades_sorted\
    \ .!= 22]\n    \n    grades_sorted = grades_sorted[grades_sorted .!= \nusing Test\n\
    \n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnqxsqn3j.jl:1\nin expression starting at /tmp/tmpnqxsqn3j.jl:1\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grade\nusing Test\n\
    \n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf9y4uxn5.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf9y4uxn5.jl:1\n\
    in expression starting at /tmp/tmpf9y4uxn5.jl:1\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grade\nusing Test\n\
    \n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf9y4uxn5.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf9y4uxn5.jl:1\n\
    in expression starting at /tmp/tmpf9y4uxn5.jl:1\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    \n    grades = sort(grades)\n    \n    grades_sorted = copy(grades)\n\
    \    \n    grades_sorted[grades_sorted .< 0] .= 0\n    \n    grades_sorted[grades_sorted\
    \ .> 0] .= 1\n    \n    grades_sorted[grades_sorted .== 0] .= 2\n    \n    grades_sorted[grades_sorted\
    \ .== 1] .= 3\n    \n    grades_sorted[grades_sorted .== 2] .= 4\n    \n    grades_sorted[grades_sorted\
    \ .== 3] .= 5\n    \n    grades_sorted[grades_sorted .== 4] .= 6\n    \n    grades_sorted[grades_sorted\
    \ .== 5] .= 7\n    \n    grades_sorted[grades_sorted .== 6] .= 8\n    \n    grades_sorted[grades_sorted\
    \ .== 7] .= 9\n    \n    grades_sorted[grades_sorted .== 8] .= 10\n    \n    grades_sorted[grades_sorted\
    \ .== 9] .= 11\n    \n    grades_sorted[grades_sorted .== 10] .= 12\n    \n  \
    \  grades_sorted[grades_sorted .== 11] .= 13\n    \n    grades_sorted[grades_sorted\
    \ .== 12] .= 14\n    \n    grades_sorted[grades_sorted .== 13] .= 15\n    \n \
    \   grades_sorted[grades_sorted .== 14] .= 16\n    \n    grades_sorted[grades_sorted\
    \ .== 15] .= 17\n    \n    grades_sorted[grades_sorted .== 16] .= 18\n    \n \
    \   grades_sorted[grades_sorted .== 17] .= 19\n    \n    grades_sorted[grades_sorted\
    \ .== 18] .= 20\n    \n    grades_sorted[grades_sorted .== 19] .= 21\n    \n \
    \   grades_sorted[grades_sorted .== 20] .= 22\n    \n    grades_sorted[grades_sorted\
    \ .== 21] := 23\n    \n    grades_sorted[grades_sorted .== 22] := 24\n    \n \
    \   grades_sorted[grades_sorted .== 23] := 25\n    \n    grades_sorted[grades_sorted\
    \ .== 24] := 26\n    \n    grades_sorted[grades_sorted .== 25] := 27\nusing Test\n\
    \n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqso_psf0.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqso_psf0.jl:1\n\
    in expression starting at /tmp/tmpqso_psf0.jl:1\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grade\nusing Test\n\
    \n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf9y4uxn5.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf9y4uxn5.jl:1\n\
    in expression starting at /tmp/tmpf9y4uxn5.jl:1\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grade\nusing Test\n\
    \n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf9y4uxn5.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf9y4uxn5.jl:1\n\
    in expression starting at /tmp/tmpf9y4uxn5.jl:1\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grade\nusing Test\n\
    \n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf9y4uxn5.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf9y4uxn5.jl:1\n\
    in expression starting at /tmp/tmpf9y4uxn5.jl:1\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    \n    grades = sort(grades)\n    \n    grades_sum = sum(grades)\n    \n\
    \    if grades_sum < 4.0\n        return [\"F\"]\n    \n    if grades_sum < 3.7\n\
    \        return [\"F\", \"D\"]\n    \n    if grades_sum < 3.3\n        return\
    \ [\"F\", \"D\", \"C\"]\n    \n    if grades_sum < 3.0\n        return [\"F\"\
    , \"D\", \"C\", \"B\"]\n    \n    if grades_sum < 2.7\n        return [\"F\",\
    \ \"D\", \"C\", \"B\", \"A\"]\n    \n    if grades_sum < 2.3\n        return [\"\
    F\", \"D\", \"C\", \"B\", \"A\", \"A\"]\n    \n    if grades_sum < 2.0\n     \
    \   return [\"F\", \"D\", \"C\", \"B\", \"A\", \"A\", \"A\"]\n    \n    if grades_sum\
    \ < 1.7\n        return [\"F\", \"D\", \"C\", \"B\", \"A\", \"A\", \"A\", \"A\"\
    ]\n    \n    if grades_sum < 1.3\n        return [\"F\", \"D\", \"C\", \"B\",\
    \ \"A\", \"A\", \"A\", \"A\", \"A\"]\n    \n    if grades_sum < 1.0\n        return\
    \ [\"F\", \"D\", \"C\", \"B\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\"]\n   \
    \ \n    if grades_sum < 0.7\n        return [\"F\", \"D\", \"C\", \"B\", \"A\"\
    , \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\"]\n    \n    if grades_sum <\
    \ 0.0\n        return [\"F\", \"D\", \"C\", \"B\", \"A\", \"A\", \"A\", \"A\"\
    , \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\"]\n    \n    return [\"F\", \"\
    D\", \"C\", \"B\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"\
    A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"\
    A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"\
    A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"\
    A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"\
    A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"\
    A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"\
    A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"\
    A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"\
    A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"\
    A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"\
    A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"\
    A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"\
    A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"\
    A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"\
    A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"\
    A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"\
    A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"\
    A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: cannot juxtapose string literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw2qbv2vp.jl:72\nin expression starting at\
    \ /tmp/tmpw2qbv2vp.jl:72\n"
  stdout: ''
  timestamp: 1660011947
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    grades = grades[2:end]\n    grades = grades[2:end]\n\
    \    grades = grades[2:end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ numerical_letter_grade;\n\t@test(candidate([4.0, 3, 1.7, 2, 3.5]) == [\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2]) == [\"D+\"])\n\t@test(candidate([0.5])\
    \ == [\"D-\"])\n\t@test(candidate([0.0]) == [\"E\"])\n\t@test(candidate([1.0,\
    \ 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0,\
    \ 0.7]) == [\"E\", \"D-\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7usnfc20.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7usnfc20.jl:1\n\
    in expression starting at /tmp/tmp7usnfc20.jl:1\n"
  stdout: ''
  timestamp: 1660011946
- exit_code: 1
  program: "\"\"\"It is the last week of the semester and the teacher has to give\
    \ the grades\n    to students. The teacher has been making her own algorithm for\
    \ grading.\n    The only problem is, she has lost the code she used for grading.\n\
    \    She has given you a list of GPAs for some students and you have to write\
    \ \n    a function that can output a list of letter grades using the following\
    \ table:\n             GPA       |    Letter grade\n              4.0        \
    \        A+\n            > 3.7                A \n            > 3.3          \
    \      A- \n            > 3.0                B+\n            > 2.7           \
    \     B \n            > 2.3                B-\n            > 2.0             \
    \   C+\n            > 1.7                C\n            > 1.3                C-\n\
    \            > 1.0                D+ \n            > 0.7                D \n \
    \           > 0.0                D-\n              0.0                E\n    \n\
    \n    Example:\n        \"\"\"\nfunction numerical_letter_grade(grades::Vector{Float64})::Vector{String}\
    \ \n    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grades = sort(grades)\n\
    \    grades = grades[2:end]\n    grades = sort(grades)\n    grades = grades[2:end]\n\
    \    grades = sort(grades)\n    grades = grades[2:end]\n    grade\nusing Test\n\
    \n@testset begin\n\ncandidate = numerical_letter_grade;\n\t@test(candidate([4.0,\
    \ 3, 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\n\t@test(candidate([1.2])\
    \ == [\"D+\"])\n\t@test(candidate([0.5]) == [\"D-\"])\n\t@test(candidate([0.0])\
    \ == [\"E\"])\n\t@test(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
    , \"C-\", \"B\", \"B+\"])\n\t@test(candidate([0.0, 0.7]) == [\"E\", \"D-\"])\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf9y4uxn5.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf9y4uxn5.jl:1\n\
    in expression starting at /tmp/tmpf9y4uxn5.jl:1\n"
  stdout: ''
  timestamp: 1660011947

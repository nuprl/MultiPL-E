language: jl
name: HumanEval_114_minSubArraySum
results:
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6ysua936.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6ysua936.jl:1\n\
    in expression starting at /tmp/tmp6ysua936.jl:1\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ x in nums\n        \n        if sum < x\n            \n            sum = x\n\
    \            \n        end\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the number of times a given number appears\
    \ in an array.\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t\
    @test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpceu00aap.jl:21\nin expression starting at\
    \ /tmp/tmpceu00aap.jl:21\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    for n in\
    \ nums\n        sum = sum + n\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.0>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,4,5])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,4,5,6])\n</cell>\n<code\
    \ language=julia-1.0>\nminSubArraySum([1,2,4,5,6,7])\n</cell>\n<code language=julia-1.0>\n\
    minSubArraySum([1,2,4,5,6,7,8])\n</cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,4,5,6,7,8,9])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,4,5,6,7,8,9,10])\n</cell>\n\
    <code language=julia-1.0>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11])\n</cell>\n\
    <code language=julia-1.0>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12])\n</cell>\n\
    <code language=julia-1.0>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13])\n</cell>\n\
    <code language=julia-1.0>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,2\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_qiz9yme.jl:14\nin expression starting at\
    \ /tmp/tmp_qiz9yme.jl:14\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    \n    for n in\
    \ nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,4,5,6])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,4,5,6,7,8,9,10])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbq75vdif.jl:15\nin expression starting at\
    \ /tmp/tmpbq75vdif.jl:15\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    \n    for\
    \ n in nums\n        sum = sum + n\n    end\n    \n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3,4,5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp42qxiff1.jl:15\nin expression starting at\
    \ /tmp/tmp42qxiff1.jl:15\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for x in nums\n\
    \        sum += x\n    end\n    return sum\nend\n\"\"\"\n    Given an array of\
    \ integers nums, find the minimum sum of any non-empty sub-array\n    of nums.\n\
    \    Example\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmprqerfuio.jl:13\nin expression starting at /tmp/tmprqerfuio.jl:13\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    for x in\
    \ nums\n        sum += x\n    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([2,3,4])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,1])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,1,0])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([2,3,5,-4,1,0,0])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([2,3,5,-4,1,0,0])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,1,0,0])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,1,0,0])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([2,3,5,-4,1,0,0])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([2,3,5,-4,1,0,0])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,1,0,0])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,1,0,0])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([2,3,5,-4,1,0,0])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([2,3,5,-4,1,0,0])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,1,0,0])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,1,0,0])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([2,3,5,-4,1,0,0])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([2,3,5,-4,1,0,0])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,1,0,0])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,1,0,0])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([2,3,5,-4,1,0,0])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([2,\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1x_w433c.jl:15\nin expression starting at\
    \ /tmp/tmp1x_w433c.jl:15\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    for n in\
    \ nums\n        sum += n\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([2,3,4])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,-5,-6,-7,-8])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,-5,-6,-7,-8,-9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,-5,-6,-7,-8,-9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,-5,-6,-7,-8,-9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,-5,-6,-7,-8,-9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,-5,-6,-7,-8,-9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,-5,-6,-7,-8,-9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,-5,-6,-7,-8,-9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,-5,-6,-7,-8,-9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,-5,-6,-7,-8,-9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,-5,-6,-7,-8,-9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,-5,-6,-7,-8,-9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,-5,-6,-7,-8,-9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,-5,-6,-7,-8,-9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,-4,-5,-6,-7,-8,-9])\n\
    </cell>\n<code language=julia-1.5\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgtpqvf7a.jl:14\nin expression starting at\
    \ /tmp/tmpgtpqvf7a.jl:14\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ i in nums\n        sum += i\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,3,5,-4,-5,7,-3,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,-3,-5,-7,-6,-4,-5,\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6tf5gdzl.jl:16\nin expression starting at\
    \ /tmp/tmp6tf5gdzl.jl:16\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    for x in\
    \ nums\n        sum += x\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3,4,5,6,7,8,9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk_2frtj3.jl:14\nin expression starting at\
    \ /tmp/tmpk_2frtj3.jl:14\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnpmf7dpp.jl:15\nin expression starting at\
    \ /tmp/tmpnpmf7dpp.jl:15\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = nums[1]\n    for\
    \ n in nums[2:end]\n        sum = sum + n\n    end\n    return sum\nend\n\"\"\"\
    \n    Given an array of integers nums, find the minimum sum of any non-empty sub-array\n\
    \    of nums.\n    Example\n            \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmp7umqmjpq.jl:13\nin expression starting at /tmp/tmp7umqmjpq.jl:13\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    for x in\
    \ nums\n        sum += x\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8x4j69__.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmp8x4j69__.jl:19\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8x4j69__.jl:19 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp8x4j69__.jl:18\ntest set: Test Failed at /tmp/tmp8x4j69__.jl:23\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8x4j69__.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8x4j69__.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp8x4j69__.jl:24\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8x4j69__.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8x4j69__.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp8x4j69__.jl:25\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8x4j69__.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp8x4j69__.jl:18\ntest set: Test Failed at /tmp/tmp8x4j69__.jl:26\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805039
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6ysua936.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6ysua936.jl:1\n\
    in expression starting at /tmp/tmp6ysua936.jl:1\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ x in nums\n        sum += x\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n\nusing\
    \ Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfnlltdic.jl:16\nin expression starting at\
    \ /tmp/tmpfnlltdic.jl:16\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6ysua936.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6ysua936.jl:1\n\
    in expression starting at /tmp/tmp6ysua936.jl:1\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for n in nums\n\
    \        sum += n\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.0>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,3,4,5,6])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n</cell>\n\
    <code language=julia-1.0>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvk5exi0f.jl:13\nin expression starting at\
    \ /tmp/tmpvk5exi0f.jl:13\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for x in nums\n\
    \        sum += x\n    end\n    return sum\nend\n\"\"\"\n    Given an array of\
    \ integers nums, find the minimum sum of any non-empty sub-array\n    of nums.\n\
    \    Example\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmprqerfuio.jl:13\nin expression starting at /tmp/tmprqerfuio.jl:13\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        \n        if sum < n\n            sum = n\n        end\n\
    \    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,2\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpor4g_h93.jl:19\nin expression starting at\
    \ /tmp/tmpor4g_h93.jl:19\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpox3m3kqc.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpox3m3kqc.jl:21\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpox3m3kqc.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpox3m3kqc.jl:20\ntest set: Test Failed at /tmp/tmpox3m3kqc.jl:25\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpox3m3kqc.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpox3m3kqc.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpox3m3kqc.jl:26\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpox3m3kqc.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpox3m3kqc.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpox3m3kqc.jl:27\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpox3m3kqc.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpox3m3kqc.jl:20\ntest set: Test Failed at /tmp/tmpox3m3kqc.jl:28\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805039
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        \n        if sum < n\n            sum = n\n        end\n\
    \    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4,\
    \ -2, 1, 3, 5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1,\
    \ 3, 5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 5])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 5])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-4, -2, 1, 3, 5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4,\
    \ -2, 1, 3, 5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1,\
    \ 3, 5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 5])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 5])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-4, -2, 1, 3, 5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4,\
    \ -2, 1, 3, 5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1,\
    \ 3, 5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 5])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 5])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-4, -2, 1, 3, 5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4,\
    \ -2, 1, 3, 5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1,\
    \ 3, 5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 5])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpaihpq0__.jl:19\nin expression starting at\
    \ /tmp/tmpaihpq0__.jl:19\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ x in nums\n        sum += x\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3,4,5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplpcmtzlm.jl:16\nin expression starting at\
    \ /tmp/tmplpcmtzlm.jl:16\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum = sum + n\n    end\n    \n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,4])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,4,5,6,7,8])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSub\nusing Test\n\n@testset begin\n\ncandidate\
    \ = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1jg8g2q_.jl:16\nin expression starting at\
    \ /tmp/tmp1jg8g2q_.jl:16\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    for n in\
    \ nums\n        sum = sum + n\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-5, -4, -3, \nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2k98z2dc.jl:14\nin expression starting at\
    \ /tmp/tmp2k98z2dc.jl:14\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    \n    for\
    \ n in nums\n        sum = sum + n\n    end\n    \n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\nusing Test\n\n\
    @testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcvefy7fe.jl:15\nin expression starting at\
    \ /tmp/tmpcvefy7fe.jl:15\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ x in nums\n        sum += x\n    end\n    \n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpk_g6p0aw.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpk_g6p0aw.jl:21\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpk_g6p0aw.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpk_g6p0aw.jl:20\ntest set: Test Failed at /tmp/tmpk_g6p0aw.jl:25\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk_g6p0aw.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk_g6p0aw.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpk_g6p0aw.jl:26\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk_g6p0aw.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk_g6p0aw.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpk_g6p0aw.jl:27\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpk_g6p0aw.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpk_g6p0aw.jl:20\ntest set: Test Failed at /tmp/tmpk_g6p0aw.jl:28\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805039
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    \n    for\
    \ num in nums\n        sum += num\n    end\n    \n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpw1q2n1lj.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpw1q2n1lj.jl:20\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw1q2n1lj.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw1q2n1lj.jl:19\ntest set: Test Failed at /tmp/tmpw1q2n1lj.jl:24\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw1q2n1lj.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw1q2n1lj.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpw1q2n1lj.jl:25\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw1q2n1lj.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw1q2n1lj.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpw1q2n1lj.jl:26\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw1q2n1lj.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw1q2n1lj.jl:19\ntest set: Test Failed at /tmp/tmpw1q2n1lj.jl:27\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805041
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6ysua936.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6ysua936.jl:1\n\
    in expression starting at /tmp/tmp6ysua936.jl:1\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the number of positive integers less than or\
    \ equal to n.\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t\
    @test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3dcb8qs1.jl:15\nin expression starting at\
    \ /tmp/tmp3dcb8qs1.jl:15\n"
  stdout: ''
  timestamp: 1659805039
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for n in nums\n\
    \        sum += n\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp767lhg5j.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmp767lhg5j.jl:18\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp767lhg5j.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp767lhg5j.jl:17\ntest set: Test Failed at /tmp/tmp767lhg5j.jl:22\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp767lhg5j.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp767lhg5j.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp767lhg5j.jl:23\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp767lhg5j.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp767lhg5j.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp767lhg5j.jl:24\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp767lhg5j.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp767lhg5j.jl:17\ntest set: Test Failed at /tmp/tmp767lhg5j.jl:25\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805040
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum::Int64 = 0\n    \n\
    \    for n in nums\n        \n        if sum > n\n            sum = n\n      \
    \  else\n            sum += n\n        end\n    end\n    \n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3,4,5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4ev_dbdh.jl:21\nin expression starting at\
    \ /tmp/tmp4ev_dbdh.jl:21\n"
  stdout: ''
  timestamp: 1659805039
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6ysua936.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6ysua936.jl:1\n\
    in expression starting at /tmp/tmp6ysua936.jl:1\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6ysua936.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6ysua936.jl:1\n\
    in expression starting at /tmp/tmp6ysua936.jl:1\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        \n        if sum < n\n            sum = n\n        end\n\
    \    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([2,3,5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,11])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([2,3,5,7,11,13])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([2,3,5,7,11,13,17])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,11,13,17,19])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,11,13,17,19,23])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,11,13,17,19,23,25])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,11,13,17,19,23,25,31])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,11,13,17,19,23,25,31,37])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,11,13,17,19,23,25,31,37,41])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,11,13,17,19,23,25,31,37,41,49])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,11,13,17,19,23,25,31,37,41,49,55])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,11,13,17,19,23,25,31,37,41,49,55,61])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,11,13,17,19,23,25,31,37,41,49,55,61,67])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,11,13,17,19,23,25,31,37,\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt7ngyfe1.jl:19\nin expression starting at\
    \ /tmp/tmpt7ngyfe1.jl:19\n"
  stdout: ''
  timestamp: 1659805039
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ i in nums\n        sum += i\n    end\n    \n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp4xbnk9b_.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmp4xbnk9b_.jl:21\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp4xbnk9b_.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp4xbnk9b_.jl:20\ntest set: Test Failed at /tmp/tmp4xbnk9b_.jl:25\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4xbnk9b_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4xbnk9b_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp4xbnk9b_.jl:26\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4xbnk9b_.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4xbnk9b_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp4xbnk9b_.jl:27\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp4xbnk9b_.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp4xbnk9b_.jl:20\ntest set: Test Failed at /tmp/tmp4xbnk9b_.jl:28\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805041
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for n in nums\n\
    \        sum += n\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp767lhg5j.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmp767lhg5j.jl:18\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp767lhg5j.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp767lhg5j.jl:17\ntest set: Test Failed at /tmp/tmp767lhg5j.jl:22\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp767lhg5j.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp767lhg5j.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp767lhg5j.jl:23\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp767lhg5j.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp767lhg5j.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp767lhg5j.jl:24\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp767lhg5j.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp767lhg5j.jl:17\ntest set: Test Failed at /tmp/tmp767lhg5j.jl:25\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805040
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ x in nums\n        sum += x\n    end\n    \n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpk_g6p0aw.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpk_g6p0aw.jl:21\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpk_g6p0aw.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpk_g6p0aw.jl:20\ntest set: Test Failed at /tmp/tmpk_g6p0aw.jl:25\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk_g6p0aw.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk_g6p0aw.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpk_g6p0aw.jl:26\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk_g6p0aw.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk_g6p0aw.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpk_g6p0aw.jl:27\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpk_g6p0aw.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpk_g6p0aw.jl:20\ntest set: Test Failed at /tmp/tmpk_g6p0aw.jl:28\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805039
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,4,2,5,1])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,4,2,5,1])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,4,2,5,1])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,4,2,5,1])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,4,2,5,1])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,4,2,5,1])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,2,5,1])\n\
    </cell>\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptykmvwpn.jl:16\nin expression starting at\
    \ /tmp/tmptykmvwpn.jl:16\n"
  stdout: ''
  timestamp: 1659805039
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6ysua936.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6ysua936.jl:1\n\
    in expression starting at /tmp/tmp6ysua936.jl:1\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum::Int64 = 0\n    \n\
    \    for i in nums\n        \n        sum = sum + i\n        \n    end\n    \n\
    \    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3dmk3xjx.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmp3dmk3xjx.jl:23\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp3dmk3xjx.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp3dmk3xjx.jl:22\ntest set: Test Failed at /tmp/tmp3dmk3xjx.jl:27\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3dmk3xjx.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3dmk3xjx.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp3dmk3xjx.jl:28\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3dmk3xjx.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3dmk3xjx.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp3dmk3xjx.jl:29\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp3dmk3xjx.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp3dmk3xjx.jl:22\ntest set: Test Failed at /tmp/tmp3dmk3xjx.jl:30\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805040
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    for i in\
    \ nums\n        sum += i\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpopw0d1gl.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpopw0d1gl.jl:18\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpopw0d1gl.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpopw0d1gl.jl:17\ntest set: Test Failed at /tmp/tmpopw0d1gl.jl:22\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpopw0d1gl.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpopw0d1gl.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpopw0d1gl.jl:23\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpopw0d1gl.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpopw0d1gl.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpopw0d1gl.jl:24\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpopw0d1gl.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpopw0d1gl.jl:17\ntest set: Test Failed at /tmp/tmpopw0d1gl.jl:25\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805041
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = nums.sum() \n\
    \    minimum::Int64 = nums.min() \n    \n    for n in nums[1..end-1] \n      \
    \  sum = sum + n \n        if sum < minimum \n            minimum = sum \n   \
    \     end\n    end\n    return minimum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the number of positive integers less than or equal to n.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpim2emzbh.jl:18\nin expression starting at\
    \ /tmp/tmpim2emzbh.jl:18\n"
  stdout: ''
  timestamp: 1659805039
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpeyk5g9_x.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpeyk5g9_x.jl:20\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpeyk5g9_x.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpeyk5g9_x.jl:19\ntest set: Test Failed at /tmp/tmpeyk5g9_x.jl:24\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeyk5g9_x.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeyk5g9_x.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpeyk5g9_x.jl:25\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeyk5g9_x.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeyk5g9_x.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpeyk5g9_x.jl:26\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpeyk5g9_x.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpeyk5g9_x.jl:19\ntest set: Test Failed at /tmp/tmpeyk5g9_x.jl:27\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805040
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    for n in\
    \ nums\n        sum = sum + n\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbpzv2nv6.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpbpzv2nv6.jl:19\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpbpzv2nv6.jl:19 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpbpzv2nv6.jl:18\ntest set: Test Failed at /tmp/tmpbpzv2nv6.jl:23\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbpzv2nv6.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbpzv2nv6.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpbpzv2nv6.jl:24\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbpzv2nv6.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbpzv2nv6.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpbpzv2nv6.jl:25\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpbpzv2nv6.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpbpzv2nv6.jl:18\ntest set: Test Failed at /tmp/tmpbpzv2nv6.jl:26\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805041
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for n in nums\n\
    \        sum += n\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp767lhg5j.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmp767lhg5j.jl:18\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp767lhg5j.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp767lhg5j.jl:17\ntest set: Test Failed at /tmp/tmp767lhg5j.jl:22\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp767lhg5j.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp767lhg5j.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp767lhg5j.jl:23\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp767lhg5j.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp767lhg5j.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp767lhg5j.jl:24\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp767lhg5j.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp767lhg5j.jl:17\ntest set: Test Failed at /tmp/tmp767lhg5j.jl:25\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805040
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6ysua936.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6ysua936.jl:1\n\
    in expression starting at /tmp/tmp6ysua936.jl:1\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    for x in\
    \ nums\n        sum += x\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8x4j69__.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmp8x4j69__.jl:19\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8x4j69__.jl:19 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp8x4j69__.jl:18\ntest set: Test Failed at /tmp/tmp8x4j69__.jl:23\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8x4j69__.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8x4j69__.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp8x4j69__.jl:24\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8x4j69__.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8x4j69__.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp8x4j69__.jl:25\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8x4j69__.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp8x4j69__.jl:18\ntest set: Test Failed at /tmp/tmp8x4j69__.jl:26\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805039
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6ysua936.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6ysua936.jl:1\n\
    in expression starting at /tmp/tmp6ysua936.jl:1\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpeyk5g9_x.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpeyk5g9_x.jl:20\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpeyk5g9_x.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpeyk5g9_x.jl:19\ntest set: Test Failed at /tmp/tmpeyk5g9_x.jl:24\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeyk5g9_x.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeyk5g9_x.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpeyk5g9_x.jl:25\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeyk5g9_x.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeyk5g9_x.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpeyk5g9_x.jl:26\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpeyk5g9_x.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpeyk5g9_x.jl:19\ntest set: Test Failed at /tmp/tmpeyk5g9_x.jl:27\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805040
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    for n in\
    \ nums\n        sum += n\n    end\n    return sum\nend\n\"\"\"\n    Given an array\
    \ of integers nums, find the minimum sum of any non-empty sub-array\n    of nums.\n\
    \    Example\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmprpy_aipg.jl:13\nin expression starting at /tmp/tmprpy_aipg.jl:13\n"
  stdout: ''
  timestamp: 1659805040
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6ysua936.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6ysua936.jl:1\n\
    in expression starting at /tmp/tmp6ysua936.jl:1\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    for n in\
    \ nums\n        sum += n\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbsa9af4t.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpbsa9af4t.jl:19\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpbsa9af4t.jl:19 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpbsa9af4t.jl:18\ntest set: Test Failed at /tmp/tmpbsa9af4t.jl:23\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbsa9af4t.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbsa9af4t.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpbsa9af4t.jl:24\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbsa9af4t.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbsa9af4t.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpbsa9af4t.jl:25\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpbsa9af4t.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpbsa9af4t.jl:18\ntest set: Test Failed at /tmp/tmpbsa9af4t.jl:26\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805041
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    \n    for\
    \ x in nums\n        sum += x\n    end\n    \n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpig3yv12_.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpig3yv12_.jl:20\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpig3yv12_.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpig3yv12_.jl:19\ntest set: Test Failed at /tmp/tmpig3yv12_.jl:24\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpig3yv12_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpig3yv12_.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpig3yv12_.jl:25\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpig3yv12_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpig3yv12_.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpig3yv12_.jl:26\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpig3yv12_.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpig3yv12_.jl:19\ntest set: Test Failed at /tmp/tmpig3yv12_.jl:27\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805041
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ x in nums\n        \n        if sum < x\n            sum = x\n        end\n\
    \    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,11,13])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of times\
    \ a given number appears in an array. For example, if the array is [1,2,2,3,3,4,5,5,5,5,6,7,8,9,10],\
    \ the function should return 3 because 2 appears 3 times in the array.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7dhqfoip.jl:19\nin expression starting at\
    \ /tmp/tmp7dhqfoip.jl:19\n"
  stdout: ''
  timestamp: 1659805040
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    for x in\
    \ nums\n        sum += x\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.0>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.0>\nminSubArraySum([2,3,4])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([2,3,5,7,11])\n</cell>\n<code\
    \ language=julia-1.0>\nminSubArraySum([2,3,5,7,11,13])\n</cell>\n<code language=julia-1.0>\n\
    minSubArraySum([2,3,5,7,11,13,17])\n</cell>\n<code language=julia-1.0>\nminSubArraySum([2,3,5,7,11,13,17,19])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([2,3,5,7,11,13,17,19,21])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([2,3,5,7,11,13,17,19,21,23])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([2,3,5,7,11,13,17,19,21,23,25])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([2,3,5,7,11,13,17,19,21,23,25,27])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([2,3,5,7,11,13,17,19,21,23,25,27,29])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([2,3,5,7,11,13,17,19,21,23,25,27,29,31])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([2,3,5,7,11,13,17,19,21,23,25,27,29,31,33])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([2,3,5,7,11,13,17,19,21,23,25,27,29,31,33,35])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([2,3,5,7,11,13,17,19,21,23,25,27,29,31,33,35,37])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([2,3,5,7,11,13,17,19,21,23,25,27,29,31,33,35,37,39])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([2,3,5,7,11,13,17,19,21,23,25,27,29,31,33,35,37,39,41])\n\
    </cell>\n<code language=julia-1.0>\nminSubArraySum([2,3,\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_0a3ub7k.jl:14\nin expression starting at\
    \ /tmp/tmp_0a3ub7k.jl:14\n"
  stdout: ''
  timestamp: 1659805040
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpox3m3kqc.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpox3m3kqc.jl:21\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpox3m3kqc.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpox3m3kqc.jl:20\ntest set: Test Failed at /tmp/tmpox3m3kqc.jl:25\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpox3m3kqc.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpox3m3kqc.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpox3m3kqc.jl:26\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpox3m3kqc.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpox3m3kqc.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpox3m3kqc.jl:27\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpox3m3kqc.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpox3m3kqc.jl:20\ntest set: Test Failed at /tmp/tmpox3m3kqc.jl:28\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805039
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ i in nums\n        sum += i\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,3,5,7,9])\n</cell>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcv3c9tcg.jl:16\nin expression starting at\
    \ /tmp/tmpcv3c9tcg.jl:16\n"
  stdout: ''
  timestamp: 1659805040
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    for x in\
    \ nums\n        sum += x\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7kagr5od.jl:14\nin expression starting at\
    \ /tmp/tmp7kagr5od.jl:14\n"
  stdout: ''
  timestamp: 1659805040
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpox3m3kqc.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpox3m3kqc.jl:21\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpox3m3kqc.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpox3m3kqc.jl:20\ntest set: Test Failed at /tmp/tmpox3m3kqc.jl:25\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpox3m3kqc.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpox3m3kqc.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpox3m3kqc.jl:26\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpox3m3kqc.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpox3m3kqc.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpox3m3kqc.jl:27\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpox3m3kqc.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpox3m3kqc.jl:20\ntest set: Test Failed at /tmp/tmpox3m3kqc.jl:28\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805039
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for x in nums\n\
    \        sum = sum + x\n    end\n    return sum\nend\n\"\"\"\n    Given an array\
    \ of integers nums, find the maximum sum of any non-empty sub-array\n    of nums.\n\
    \    Example\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmphvlidynu.jl:13\nin expression starting at /tmp/tmphvlidynu.jl:13\n"
  stdout: ''
  timestamp: 1659805040
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3,4,5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv43bw03f.jl:16\nin expression starting at\
    \ /tmp/tmpv43bw03f.jl:16\n"
  stdout: ''
  timestamp: 1659805041
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxmyokpsb.jl:16\nin expression starting at\
    \ /tmp/tmpxmyokpsb.jl:16\n"
  stdout: ''
  timestamp: 1659805041
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([2,3,4])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([2,3,5,7,8,9,10])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,8,9,10,11,12,13,14,15,16,17,18,19])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,3,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26])\n\
    </cell\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf12u6gjp.jl:16\nin expression starting at\
    \ /tmp/tmpf12u6gjp.jl:16\n"
  stdout: ''
  timestamp: 1659805041
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    \n    for\
    \ i in nums\n        sum += i\n    end\n    \n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpfo2x4840.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpfo2x4840.jl:20\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpfo2x4840.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpfo2x4840.jl:19\ntest set: Test Failed at /tmp/tmpfo2x4840.jl:24\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfo2x4840.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfo2x4840.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpfo2x4840.jl:25\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfo2x4840.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfo2x4840.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpfo2x4840.jl:26\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpfo2x4840.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpfo2x4840.jl:19\ntest set: Test Failed at /tmp/tmpfo2x4840.jl:27\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805042
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for x in nums\n\
    \        sum += x\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpw7smgkt9.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpw7smgkt9.jl:18\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test Failed at /tmp/tmpw7smgkt9.jl:22\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpw7smgkt9.jl:23\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpw7smgkt9.jl:24\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test Failed at /tmp/tmpw7smgkt9.jl:25\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805042
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    for n in\
    \ nums\n        sum += n\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbsa9af4t.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpbsa9af4t.jl:19\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpbsa9af4t.jl:19 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpbsa9af4t.jl:18\ntest set: Test Failed at /tmp/tmpbsa9af4t.jl:23\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbsa9af4t.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbsa9af4t.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpbsa9af4t.jl:24\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbsa9af4t.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbsa9af4t.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpbsa9af4t.jl:25\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpbsa9af4t.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpbsa9af4t.jl:18\ntest set: Test Failed at /tmp/tmpbsa9af4t.jl:26\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805041
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    \n    for\
    \ i in nums\n        sum += i\n    end\n    \n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpfo2x4840.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpfo2x4840.jl:20\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpfo2x4840.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpfo2x4840.jl:19\ntest set: Test Failed at /tmp/tmpfo2x4840.jl:24\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfo2x4840.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfo2x4840.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpfo2x4840.jl:25\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfo2x4840.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfo2x4840.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpfo2x4840.jl:26\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpfo2x4840.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpfo2x4840.jl:19\ntest set: Test Failed at /tmp/tmpfo2x4840.jl:27\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805042
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl7u6q94f.jl:16\nin expression starting at\
    \ /tmp/tmpl7u6q94f.jl:16\n"
  stdout: ''
  timestamp: 1659805041
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum::Int64 = 0\n    \n\
    \    for num in nums\n        sum = sum + num\n    end\n    \n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3,4,5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3,4,5,6])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp10xdz8sp.jl:16\nin expression starting at\
    \ /tmp/tmp10xdz8sp.jl:16\n"
  stdout: ''
  timestamp: 1659805041
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ x in nums\n        sum += x\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyl3g68lx.jl:16\nin expression starting at\
    \ /tmp/tmpyl3g68lx.jl:16\n"
  stdout: ''
  timestamp: 1659805041
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    \n    for\
    \ n in nums\n        sum::Int64 = sum + n\n    end\n    \n    return sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: multiple type declarations for \"sum\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwd_q_kdm.jl:1\nin expression starting at /tmp/tmpwd_q_kdm.jl:1\n"
  stdout: ''
  timestamp: 1659805041
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum::Int64 = 0\n    \n\
    \    for num in nums\n        sum += num\n    end\n    \n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-10, -5, -15, -10, -5, -10,\
    \ -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5,\
    \ -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10,\
    \ -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5,\
    \ -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10,\
    \ -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5,\
    \ -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10,\
    \ -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5,\
    \ -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10,\
    \ -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5,\
    \ -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10,\
    \ -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5,\
    \ -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10,\
    \ -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5, -10, -5,\
    \ -10, -5, -10, -5, -10, -5, -\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp23qs87y_.jl:16\nin expression starting at\
    \ /tmp/tmp23qs87y_.jl:16\n"
  stdout: ''
  timestamp: 1659805041
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for x in nums\n\
    \        sum = sum + x\n    end\n    return sum\nend\n\"\"\"\n    Given an array\
    \ of integers nums, find the minimum sum of any non-empty sub-array\n    of nums.\n\
    \    Example\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpj7_4lvis.jl:13\nin expression starting at /tmp/tmpj7_4lvis.jl:13\n"
  stdout: ''
  timestamp: 1659805042
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for n in nums\n\
    \        sum = sum + n\n    end\n    return sum\nend\n\"\"\"\n    Given an array\
    \ of integers nums, find the minimum sum of any non-empty sub-array\n    of nums.\n\
    \    Example\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmp93sj_lsc.jl:13\nin expression starting at /tmp/tmp93sj_lsc.jl:13\n"
  stdout: ''
  timestamp: 1659805042
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for x in nums\n\
    \        sum += x\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpw7smgkt9.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpw7smgkt9.jl:18\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test Failed at /tmp/tmpw7smgkt9.jl:22\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpw7smgkt9.jl:23\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpw7smgkt9.jl:24\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test Failed at /tmp/tmpw7smgkt9.jl:25\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805042
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6ysua936.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6ysua936.jl:1\n\
    in expression starting at /tmp/tmp6ysua936.jl:1\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    for n in\
    \ nums\n        sum += n\n    end\n    return sum\nend\n\"\"\"\n    Given an array\
    \ of integers nums, find the minimum sum of any non-empty sub-array\n    of nums.\n\
    \    Example\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmprpy_aipg.jl:13\nin expression starting at /tmp/tmprpy_aipg.jl:13\n"
  stdout: ''
  timestamp: 1659805040
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        \n        if sum < n\n            sum = n\n        end\n\
    \    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,3,5,7,9])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,5,7,9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp899f2637.jl:19\nin expression starting at\
    \ /tmp/tmp899f2637.jl:19\n"
  stdout: ''
  timestamp: 1659805042
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for n in nums\n\
    \        sum += n\n    end\n    return sum\nend\n\"\"\"\n    Given an array of\
    \ integers nums, find the maximum sum of any non-empty sub-array\n    of nums.\n\
    \    Example\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpm_8jwbuc.jl:13\nin expression starting at /tmp/tmpm_8jwbuc.jl:13\n"
  stdout: ''
  timestamp: 1659805043
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for n in nums\n\
    \        sum += n\n    end\n    return sum\nend\n\"\"\"\n    Given an array of\
    \ integers nums, find the minimum sum of any non-empty sub-array\n    of nums.\n\
    \    Example\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmphr1up84m.jl:13\nin expression starting at /tmp/tmphr1up84m.jl:13\n"
  stdout: ''
  timestamp: 1659805043
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    for x in\
    \ nums\n        sum += x\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8x4j69__.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmp8x4j69__.jl:19\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8x4j69__.jl:19 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp8x4j69__.jl:18\ntest set: Test Failed at /tmp/tmp8x4j69__.jl:23\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8x4j69__.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8x4j69__.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp8x4j69__.jl:24\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8x4j69__.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8x4j69__.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp8x4j69__.jl:25\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8x4j69__.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp8x4j69__.jl:18\ntest set: Test Failed at /tmp/tmp8x4j69__.jl:26\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805039
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-4, -2, 1, 3, 2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4,\
    \ -2, 1, 3, 2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1,\
    \ 3, 2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 2])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 2])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-4, -2, 1, 3, 2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4,\
    \ -2, 1, 3, 2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1,\
    \ 3, 2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 2])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 2])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-4, -2, 1, 3, 2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4,\
    \ -2, 1, 3, 2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1,\
    \ 3, 2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 2])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 2])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-4, -2, 1, 3, 2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4,\
    \ -2, 1, 3, 2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-4, -2, 1,\
    \ 3, 2])\n</cell\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptcyx9vex.jl:16\nin expression starting at\
    \ /tmp/tmptcyx9vex.jl:16\n"
  stdout: ''
  timestamp: 1659805042
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    \n    for\
    \ n in nums\n        sum::Int64 = sum + n\n    end\n    \n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: multiple type declarations for \"sum\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppnpqpljm.jl:1\nin expression starting at /tmp/tmppnpqpljm.jl:1\n"
  stdout: ''
  timestamp: 1659805042
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum = sum + n\n    end\n    \n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,4,5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyimtawni.jl:16\nin expression starting at\
    \ /tmp/tmpyimtawni.jl:16\n"
  stdout: ''
  timestamp: 1659805042
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,4,5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpia4okr38.jl:15\nin expression starting at\
    \ /tmp/tmpia4okr38.jl:15\n"
  stdout: ''
  timestamp: 1659805042
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    for n in\
    \ nums\n        sum += n\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpass46ihw.jl:14\nin expression starting at\
    \ /tmp/tmpass46ihw.jl:14\n"
  stdout: ''
  timestamp: 1659805042
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    for x in\
    \ nums\n        sum += x\n    end\n    return sum\nend\n\"\"\"\n    Given an array\
    \ of integers nums, find the maximum sum of any non-empty sub-array\n    of nums.\n\
    \    Example\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpssip2aow.jl:14\nin expression starting at /tmp/tmpssip2aow.jl:14\n"
  stdout: ''
  timestamp: 1659805043
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    \n    for n in\
    \ nums\n        sum += n\n    end\n    \n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpdhhkj9q6.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpdhhkj9q6.jl:20\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpdhhkj9q6.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpdhhkj9q6.jl:19\ntest set: Test Failed at /tmp/tmpdhhkj9q6.jl:24\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdhhkj9q6.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdhhkj9q6.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpdhhkj9q6.jl:25\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdhhkj9q6.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdhhkj9q6.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpdhhkj9q6.jl:26\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpdhhkj9q6.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpdhhkj9q6.jl:19\ntest set: Test Failed at /tmp/tmpdhhkj9q6.jl:27\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805044
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for x in nums\n\
    \        sum += x\n    end\n    return sum\nend\n\"\"\"\n    Given an array of\
    \ integers nums, find the maximum sum of any non-empty sub-array\n    of nums.\n\
    \    Example\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpft4ky09v.jl:13\nin expression starting at /tmp/tmpft4ky09v.jl:13\n"
  stdout: ''
  timestamp: 1659805043
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    for x in\
    \ nums\n        sum += x\n    end\n    return sum\nend\n\"\"\"\n    Given an array\
    \ of integers nums, find the minimum sum of any non-empty sub-array\n    of nums.\n\
    \    Example\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpf6f4v3fo.jl:14\nin expression starting at /tmp/tmpf6f4v3fo.jl:14\n"
  stdout: ''
  timestamp: 1659805043
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpox3m3kqc.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpox3m3kqc.jl:21\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpox3m3kqc.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpox3m3kqc.jl:20\ntest set: Test Failed at /tmp/tmpox3m3kqc.jl:25\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpox3m3kqc.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpox3m3kqc.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpox3m3kqc.jl:26\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpox3m3kqc.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpox3m3kqc.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpox3m3kqc.jl:27\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpox3m3kqc.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpox3m3kqc.jl:20\ntest set: Test Failed at /tmp/tmpox3m3kqc.jl:28\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805039
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for x in nums\n\
    \        sum += x\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpw7smgkt9.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpw7smgkt9.jl:18\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test Failed at /tmp/tmpw7smgkt9.jl:22\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpw7smgkt9.jl:23\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpw7smgkt9.jl:24\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test Failed at /tmp/tmpw7smgkt9.jl:25\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805042
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        \n        if sum < n\n            sum = n\n        end\n\
    \    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,5,7,8,10,12,14,16,18,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,5,7,8,10,12,14,16,18,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,5,7,8,10,12,14,16,18,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,5,7,8,10,12,14,16,18,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,5,7,8,10,12,14,16,18,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,5,7,8,10,12,14,16,18,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,5,7,8,10,12,14,16,18,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,5,7,8,10,12,14,16,18,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,5,7,8,10,12,14,16,18,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,5,7,8,10,12,14,16,18,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,5,7,8,10,12,14,16,18,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,5,7,8,10,12,14,16,18,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,5,7,8,10,12,14,16,18,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,5,7,8,10,12,14,16,18,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,5,7,8,10,12,14,16,18,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,5,7,8,10,12,14,16,18,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx9st380n.jl:19\nin expression starting at\
    \ /tmp/tmpx9st380n.jl:19\n"
  stdout: ''
  timestamp: 1659805043
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for x in nums\n\
    \        sum += x\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpw7smgkt9.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpw7smgkt9.jl:18\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test Failed at /tmp/tmpw7smgkt9.jl:22\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpw7smgkt9.jl:23\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpw7smgkt9.jl:24\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test Failed at /tmp/tmpw7smgkt9.jl:25\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805042
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    for x in\
    \ nums\n        sum += x\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,2\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9zk7gd8k.jl:14\nin expression starting at\
    \ /tmp/tmp9zk7gd8k.jl:14\n"
  stdout: ''
  timestamp: 1659805043
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxmyokpsb.jl:16\nin expression starting at\
    \ /tmp/tmpxmyokpsb.jl:16\n"
  stdout: ''
  timestamp: 1659805041
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([2,3,4])\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the sum of the squares of the numbers in nums.\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu__itktq.jl:15\nin expression starting at\
    \ /tmp/tmpu__itktq.jl:15\n"
  stdout: ''
  timestamp: 1659805043
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ num in nums\n        \n        if num > 0\n            \n            sum = sum\
    \ + num\n            \n        else\n            \n            sum = sum - num\n\
    \            \n        end\n        \n    end\n    \n    return sum\n    \nend\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 11 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9t5i6q6s.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmp9t5i6q6s.jl:32\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp9t5i6q6s.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp9t5i6q6s.jl:31\ntest set: Test Failed at /tmp/tmp9t5i6q6s.jl:33\n\
    \  Expression: candidate([-1, -2, -3]) == -6\n   Evaluated: 6 == -6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9t5i6q6s.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9t5i6q6s.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp9t5i6q6s.jl:34\n  Expression: candidate([-1, -2, -3, 2, -10])\
    \ == -14\n   Evaluated: 18 == -14\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9t5i6q6s.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9t5i6q6s.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp9t5i6q6s.jl:35\n  Expression: candidate([-9999999999999999])\
    \ == -9999999999999999\n   Evaluated: 9999999999999999 == -9999999999999999\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9t5i6q6s.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9t5i6q6s.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp9t5i6q6s.jl:36\n  Expression: candidate([0, 10, 20, 1000000])\
    \ == 0\n   Evaluated: 1000030 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1"
  timestamp: 1659805044
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    \n    for\
    \ n in nums\n        sum::Int64 = sum + n\n    end\n    \n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n\
    </cell>\n<text>\nProblem 3\nGiven an array of integers nums, find the maximum\
    \ sum of any non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\
    \nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: multiple type declarations for \"sum\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ujnytzu.jl:1\nin expression starting at /tmp/tmp0ujnytzu.jl:1\n"
  stdout: ''
  timestamp: 1659805043
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum = sum + n\n    end\n    \n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptz0plta7.jl:16\nin expression starting at\
    \ /tmp/tmptz0plta7.jl:16\n"
  stdout: ''
  timestamp: 1659805043
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for n in nums\n\
    \        sum += n\n    end\n    return sum\nend\n\"\"\"\n    Given an array of\
    \ integers nums, find the maximum sum of any non-empty sub-array\n    of nums.\n\
    \    Example\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpm_8jwbuc.jl:13\nin expression starting at /tmp/tmpm_8jwbuc.jl:13\n"
  stdout: ''
  timestamp: 1659805043
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6ysua936.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6ysua936.jl:1\n\
    in expression starting at /tmp/tmp6ysua936.jl:1\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for x in nums\n\
    \        sum += x\n    end\n    return sum\nend\n\"\"\"\n    Given an array of\
    \ integers nums, find the minimum sum of any non-empty sub-array\n    of nums.\n\
    \    Example\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmprqerfuio.jl:13\nin expression starting at /tmp/tmprqerfuio.jl:13\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    for x in\
    \ nums\n        sum += x\n    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,3,2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,3,2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\nusing Test\n\n\
    @testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjphn05dd.jl:15\nin expression starting at\
    \ /tmp/tmpjphn05dd.jl:15\n"
  stdout: ''
  timestamp: 1659805043
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    for n in\
    \ nums\n        sum += n\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbsa9af4t.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpbsa9af4t.jl:19\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpbsa9af4t.jl:19 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpbsa9af4t.jl:18\ntest set: Test Failed at /tmp/tmpbsa9af4t.jl:23\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbsa9af4t.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbsa9af4t.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpbsa9af4t.jl:24\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbsa9af4t.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbsa9af4t.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpbsa9af4t.jl:25\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpbsa9af4t.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpbsa9af4t.jl:18\ntest set: Test Failed at /tmp/tmpbsa9af4t.jl:26\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805041
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    for x in\
    \ nums\n        sum = sum + x\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpoj07cwi0.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpoj07cwi0.jl:19\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpoj07cwi0.jl:19 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpoj07cwi0.jl:18\ntest set: Test Failed at /tmp/tmpoj07cwi0.jl:23\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoj07cwi0.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoj07cwi0.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpoj07cwi0.jl:24\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoj07cwi0.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoj07cwi0.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpoj07cwi0.jl:25\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpoj07cwi0.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpoj07cwi0.jl:18\ntest set: Test Failed at /tmp/tmpoj07cwi0.jl:26\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805045
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum = sum + n\n    end\n    \n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpx8m0csa_.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpx8m0csa_.jl:21\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpx8m0csa_.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpx8m0csa_.jl:20\ntest set: Test Failed at /tmp/tmpx8m0csa_.jl:25\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx8m0csa_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx8m0csa_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpx8m0csa_.jl:26\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx8m0csa_.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx8m0csa_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpx8m0csa_.jl:27\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpx8m0csa_.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpx8m0csa_.jl:20\ntest set: Test Failed at /tmp/tmpx8m0csa_.jl:28\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805045
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for x in nums\n\
    \        sum += x\n    end\n    return sum\nend\n\"\"\"\n    Given an array of\
    \ integers nums, find the maximum sum of any non-empty sub-array\n    of nums.\n\
    \    Example\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpft4ky09v.jl:13\nin expression starting at /tmp/tmpft4ky09v.jl:13\n"
  stdout: ''
  timestamp: 1659805043
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum::Int64 = 0\n    \n\
    \    for num in nums\n        sum = sum + num\n    end\n    \n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsk8gi5o9.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpsk8gi5o9.jl:21\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpsk8gi5o9.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpsk8gi5o9.jl:20\ntest set: Test Failed at /tmp/tmpsk8gi5o9.jl:25\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsk8gi5o9.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsk8gi5o9.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpsk8gi5o9.jl:26\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsk8gi5o9.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsk8gi5o9.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpsk8gi5o9.jl:27\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpsk8gi5o9.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpsk8gi5o9.jl:20\ntest set: Test Failed at /tmp/tmpsk8gi5o9.jl:28\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805045
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for n in nums\n\
    \        sum += n\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp767lhg5j.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmp767lhg5j.jl:18\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp767lhg5j.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp767lhg5j.jl:17\ntest set: Test Failed at /tmp/tmp767lhg5j.jl:22\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp767lhg5j.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp767lhg5j.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp767lhg5j.jl:23\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp767lhg5j.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp767lhg5j.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp767lhg5j.jl:24\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp767lhg5j.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp767lhg5j.jl:17\ntest set: Test Failed at /tmp/tmp767lhg5j.jl:25\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805040
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,4,5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp235k3t1s.jl:16\nin expression starting at\
    \ /tmp/tmp235k3t1s.jl:16\n"
  stdout: ''
  timestamp: 1659805044
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    for num\
    \ in nums\n        sum = sum + num\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprmclylu3.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmprmclylu3.jl:19\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprmclylu3.jl:19 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprmclylu3.jl:18\ntest set: Test Failed at /tmp/tmprmclylu3.jl:23\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprmclylu3.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprmclylu3.jl:18\ntest set: Test\
    \ Failed at /tmp/tmprmclylu3.jl:24\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprmclylu3.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprmclylu3.jl:18\ntest set: Test\
    \ Failed at /tmp/tmprmclylu3.jl:25\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprmclylu3.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprmclylu3.jl:18\ntest set: Test Failed at /tmp/tmprmclylu3.jl:26\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805045
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,4,5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,4,5,6,7,8,9])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf9wc3bfj.jl:16\nin expression starting at\
    \ /tmp/tmpf9wc3bfj.jl:16\n"
  stdout: ''
  timestamp: 1659805044
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,4,5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22])\n\
    </cell>\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsx3zdylk.jl:16\nin expression starting at\
    \ /tmp/tmpsx3zdylk.jl:16\n"
  stdout: ''
  timestamp: 1659805044
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    for n in\
    \ nums\n        sum += n\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmqgeysr7.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpmqgeysr7.jl:18\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpmqgeysr7.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpmqgeysr7.jl:17\ntest set: Test Failed at /tmp/tmpmqgeysr7.jl:22\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmqgeysr7.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmqgeysr7.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpmqgeysr7.jl:23\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmqgeysr7.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmqgeysr7.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpmqgeysr7.jl:24\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpmqgeysr7.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpmqgeysr7.jl:17\ntest set: Test Failed at /tmp/tmpmqgeysr7.jl:25\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805046
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for x in nums\n\
    \        sum += x\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpw7smgkt9.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpw7smgkt9.jl:18\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test Failed at /tmp/tmpw7smgkt9.jl:22\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpw7smgkt9.jl:23\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpw7smgkt9.jl:24\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test Failed at /tmp/tmpw7smgkt9.jl:25\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805042
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for x in nums\n\
    \        sum += x\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpw7smgkt9.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpw7smgkt9.jl:18\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test Failed at /tmp/tmpw7smgkt9.jl:22\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpw7smgkt9.jl:23\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpw7smgkt9.jl:24\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test Failed at /tmp/tmpw7smgkt9.jl:25\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805042
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        \n        if sum < n\n            sum = n\n        end\n\
    \    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp74rz_o_6.jl:19\nin expression starting at\
    \ /tmp/tmp74rz_o_6.jl:19\n"
  stdout: ''
  timestamp: 1659805044
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])\n\
    </cell>\n<code language=julia-1.5>\nminSub\nusing Test\n\n@testset begin\n\ncandidate\
    \ = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqogujylk.jl:16\nin expression starting at\
    \ /tmp/tmpqogujylk.jl:16\n"
  stdout: ''
  timestamp: 1659805044
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        \n        if sum > n\n            \n            sum = n\n\
    \            \n        else\n            \n            sum = sum + n\n       \
    \     \n        end\n        \n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptkm9k7jn.jl:26\nin expression starting at\
    \ /tmp/tmptkm9k7jn.jl:26\n"
  stdout: ''
  timestamp: 1659805044
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpox3m3kqc.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpox3m3kqc.jl:21\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpox3m3kqc.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpox3m3kqc.jl:20\ntest set: Test Failed at /tmp/tmpox3m3kqc.jl:25\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpox3m3kqc.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpox3m3kqc.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpox3m3kqc.jl:26\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpox3m3kqc.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpox3m3kqc.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpox3m3kqc.jl:27\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpox3m3kqc.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpox3m3kqc.jl:20\ntest set: Test Failed at /tmp/tmpox3m3kqc.jl:28\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805039
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum::Int64 = 0\n    \n\
    \    for n in nums\n        sum += n\n    end\n    \n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp06wxyq17.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmp06wxyq17.jl:21\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp06wxyq17.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp06wxyq17.jl:20\ntest set: Test Failed at /tmp/tmp06wxyq17.jl:25\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp06wxyq17.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp06wxyq17.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp06wxyq17.jl:26\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp06wxyq17.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp06wxyq17.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp06wxyq17.jl:27\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp06wxyq17.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp06wxyq17.jl:20\ntest set: Test Failed at /tmp/tmp06wxyq17.jl:28\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805045
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    \n    for\
    \ i in nums\n        sum = sum + i\n    end\n    \n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpocjm0er5.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpocjm0er5.jl:20\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpocjm0er5.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpocjm0er5.jl:19\ntest set: Test Failed at /tmp/tmpocjm0er5.jl:24\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpocjm0er5.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpocjm0er5.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpocjm0er5.jl:25\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpocjm0er5.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpocjm0er5.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpocjm0er5.jl:26\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpocjm0er5.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpocjm0er5.jl:19\ntest set: Test Failed at /tmp/tmpocjm0er5.jl:27\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805046
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for x in nums\n\
    \        sum += x\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpw7smgkt9.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpw7smgkt9.jl:18\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test Failed at /tmp/tmpw7smgkt9.jl:22\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpw7smgkt9.jl:23\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpw7smgkt9.jl:24\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test Failed at /tmp/tmpw7smgkt9.jl:25\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805042
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<text>\n\
    Exercise 4\nWrite a function that takes an array of integers and returns the number\
    \ of positive integers in the array.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeknxgzwq.jl:15\nin expression starting at\
    \ /tmp/tmpeknxgzwq.jl:15\n"
  stdout: ''
  timestamp: 1659805045
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for x in nums\n\
    \        sum += x\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpw7smgkt9.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpw7smgkt9.jl:18\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test Failed at /tmp/tmpw7smgkt9.jl:22\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpw7smgkt9.jl:23\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpw7smgkt9.jl:24\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test Failed at /tmp/tmpw7smgkt9.jl:25\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805042
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for i in nums\n\
    \        sum += i\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqkq8w5pf.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpqkq8w5pf.jl:18\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpqkq8w5pf.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpqkq8w5pf.jl:17\ntest set: Test Failed at /tmp/tmpqkq8w5pf.jl:22\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqkq8w5pf.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqkq8w5pf.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpqkq8w5pf.jl:23\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqkq8w5pf.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqkq8w5pf.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpqkq8w5pf.jl:24\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpqkq8w5pf.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpqkq8w5pf.jl:17\ntest set: Test Failed at /tmp/tmpqkq8w5pf.jl:25\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805046
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    for i in\
    \ nums\n        sum = sum + i\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpncrius07.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpncrius07.jl:18\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpncrius07.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpncrius07.jl:17\ntest set: Test Failed at /tmp/tmpncrius07.jl:22\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpncrius07.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpncrius07.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpncrius07.jl:23\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpncrius07.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpncrius07.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpncrius07.jl:24\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpncrius07.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpncrius07.jl:17\ntest set: Test Failed at /tmp/tmpncrius07.jl:25\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805046
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    \n    for n in\
    \ nums\n        sum += n\n    end\n    \n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpdhhkj9q6.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpdhhkj9q6.jl:20\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpdhhkj9q6.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpdhhkj9q6.jl:19\ntest set: Test Failed at /tmp/tmpdhhkj9q6.jl:24\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdhhkj9q6.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdhhkj9q6.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpdhhkj9q6.jl:25\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdhhkj9q6.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdhhkj9q6.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpdhhkj9q6.jl:26\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpdhhkj9q6.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpdhhkj9q6.jl:19\ntest set: Test Failed at /tmp/tmpdhhkj9q6.jl:27\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805044
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum = sum + n\n    end\n    \n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpx8m0csa_.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpx8m0csa_.jl:21\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpx8m0csa_.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpx8m0csa_.jl:20\ntest set: Test Failed at /tmp/tmpx8m0csa_.jl:25\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx8m0csa_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx8m0csa_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpx8m0csa_.jl:26\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx8m0csa_.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx8m0csa_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpx8m0csa_.jl:27\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpx8m0csa_.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpx8m0csa_.jl:20\ntest set: Test Failed at /tmp/tmpx8m0csa_.jl:28\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805045
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for x in nums\n\
    \        sum += x\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpw7smgkt9.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpw7smgkt9.jl:18\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test Failed at /tmp/tmpw7smgkt9.jl:22\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpw7smgkt9.jl:23\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpw7smgkt9.jl:24\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test Failed at /tmp/tmpw7smgkt9.jl:25\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805042
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        \n        if sum < n\n            sum = n\n        end\n\
    \    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,4,5,6])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp99rdakhh.jl:19\nin expression starting at\
    \ /tmp/tmp99rdakhh.jl:19\n"
  stdout: ''
  timestamp: 1659805045
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2ghepkja.jl:15\nin expression starting at\
    \ /tmp/tmp2ghepkja.jl:15\n"
  stdout: ''
  timestamp: 1659805045
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = nums[1]\n    for\
    \ n in nums[2:end]\n        sum = sum + n\n    end\n    return sum\nend\n\"\"\"\
    \n    Given an array of integers nums, find the minimum sum of any non-empty sub-array\n\
    \    of nums.\n    Example\n            \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmp7umqmjpq.jl:13\nin expression starting at /tmp/tmp7umqmjpq.jl:13\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum::Int64 = 0\n    \n\
    \    for i in nums\n        sum += i\n    end\n    \n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 5])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of positive integers less\
    \ than or equal to n.\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpacpotps2.jl:16\nin expression starting at\
    \ /tmp/tmpacpotps2.jl:16\n"
  stdout: ''
  timestamp: 1659805045
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpeyk5g9_x.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpeyk5g9_x.jl:20\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpeyk5g9_x.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpeyk5g9_x.jl:19\ntest set: Test Failed at /tmp/tmpeyk5g9_x.jl:24\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeyk5g9_x.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeyk5g9_x.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpeyk5g9_x.jl:25\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeyk5g9_x.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeyk5g9_x.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpeyk5g9_x.jl:26\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpeyk5g9_x.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpeyk5g9_x.jl:19\ntest set: Test Failed at /tmp/tmpeyk5g9_x.jl:27\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805040
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for n in nums\n\
    \        sum += n\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp767lhg5j.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmp767lhg5j.jl:18\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp767lhg5j.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp767lhg5j.jl:17\ntest set: Test Failed at /tmp/tmp767lhg5j.jl:22\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp767lhg5j.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp767lhg5j.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp767lhg5j.jl:23\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp767lhg5j.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp767lhg5j.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp767lhg5j.jl:24\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp767lhg5j.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp767lhg5j.jl:17\ntest set: Test Failed at /tmp/tmp767lhg5j.jl:25\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805040
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ x in nums\n        sum = sum + x\n    end\n    \n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3,4,5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy9h3lj37.jl:16\nin expression starting at\
    \ /tmp/tmpy9h3lj37.jl:16\n"
  stdout: ''
  timestamp: 1659805045
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    for n in\
    \ nums\n        sum += n\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,4,5,6,7,8])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21])\n\
    \nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9a4f6t83.jl:14\nin expression starting at\
    \ /tmp/tmp9a4f6t83.jl:14\n"
  stdout: ''
  timestamp: 1659805045
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.4>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.4>\n\
    minSubArraySum([1,2,4,5])\n</cell>\n<code language=julia-1.4>\nminSubArraySum([1,2,4,5,6])\n\
    </cell>\n<code language=julia-1.4>\nminSubArraySum([1,2,4,5,6,7])\n</cell>\n<code\
    \ language=julia-1.4>\nminSubArraySum([1,2,4,5,6,7,8])\n</cell>\n<code language=julia-1.4>\n\
    minSubArraySum([1,2,4,5,6,7,8,9])\n</cell>\n<code language=julia-1.4>\nminSubArraySum([1,2,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.4>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11])\n\
    </cell>\n<code language=julia-1.4>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12])\n\
    </cell>\n<code language=julia-1.4>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13])\n\
    </cell>\n<code language=julia-1.4>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.4>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.4>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.4>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.4>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n<code language=julia-1.4>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19])\n\
    </cell>\n<code language=julia-1.4>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.4>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxdsk6qo3.jl:16\nin expression starting at\
    \ /tmp/tmpxdsk6qo3.jl:16\n"
  stdout: ''
  timestamp: 1659805045
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-2, 1, -3, 4, -1, 2, 1, -5, 4])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of integers in the\
    \ array that are less than the given value.\nusing Test\n\n@testset begin\n\n\
    candidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy42xud5x.jl:16\nin expression starting at\
    \ /tmp/tmpy42xud5x.jl:16\n"
  stdout: ''
  timestamp: 1659805046
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of integers and returns\
    \ the number of unique elements in that array. \nExample\nGiven [1,2,2,3,4,5,5,6,7,8,9,10,11,12,13,14,15],\
    \ your function should return 8.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmyoy648y.jl:15\nin expression starting at\
    \ /tmp/tmpmyoy648y.jl:15\n"
  stdout: ''
  timestamp: 1659805046
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxmyokpsb.jl:16\nin expression starting at\
    \ /tmp/tmpxmyokpsb.jl:16\n"
  stdout: ''
  timestamp: 1659805041
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    \n    for n in\
    \ nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,3,5,7,9])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the number of positive integers less than or equal to n.\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp00skeaj3.jl:15\nin expression starting at\
    \ /tmp/tmp00skeaj3.jl:15\n"
  stdout: ''
  timestamp: 1659805046
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6ysua936.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6ysua936.jl:1\n\
    in expression starting at /tmp/tmp6ysua936.jl:1\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4,\
    \ 5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-10, -5, -4, -3, -2,\
    \ -1, 0, 1, 2, 3, 4, 5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([-10,\
    \ -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0d9het4v.jl:15\nin expression starting at\
    \ /tmp/tmp0d9het4v.jl:15\n"
  stdout: ''
  timestamp: 1659805046
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum::Int64 = 0\n    \n\
    \    for n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of times the number\
    \ 1 appears in the given array.\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdh2zcvyc.jl:16\nin expression starting at\
    \ /tmp/tmpdh2zcvyc.jl:16\n"
  stdout: ''
  timestamp: 1659805046
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    \n    for n in\
    \ nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,23\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy6c5uszs.jl:15\nin expression starting at\
    \ /tmp/tmpy6c5uszs.jl:15\n"
  stdout: ''
  timestamp: 1659805046
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ x in nums\n        sum += x\n    end\n    \n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpk_g6p0aw.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpk_g6p0aw.jl:21\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpk_g6p0aw.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpk_g6p0aw.jl:20\ntest set: Test Failed at /tmp/tmpk_g6p0aw.jl:25\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk_g6p0aw.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk_g6p0aw.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpk_g6p0aw.jl:26\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk_g6p0aw.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk_g6p0aw.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpk_g6p0aw.jl:27\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpk_g6p0aw.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpk_g6p0aw.jl:20\ntest set: Test Failed at /tmp/tmpk_g6p0aw.jl:28\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805039
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,4,5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,4,5,6,7,8,9])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf9wc3bfj.jl:16\nin expression starting at\
    \ /tmp/tmpf9wc3bfj.jl:16\n"
  stdout: ''
  timestamp: 1659805044
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    for x in\
    \ nums\n        sum += x\n    end\n    return sum\nend\n\"\"\"\n    Given an array\
    \ of integers nums, find the minimum sum of any non-empty sub-array\n    of nums.\n\
    \    Example\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpf6f4v3fo.jl:14\nin expression starting at /tmp/tmpf6f4v3fo.jl:14\n"
  stdout: ''
  timestamp: 1659805043
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpeyk5g9_x.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpeyk5g9_x.jl:20\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpeyk5g9_x.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpeyk5g9_x.jl:19\ntest set: Test Failed at /tmp/tmpeyk5g9_x.jl:24\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeyk5g9_x.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeyk5g9_x.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpeyk5g9_x.jl:25\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeyk5g9_x.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeyk5g9_x.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpeyk5g9_x.jl:26\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpeyk5g9_x.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpeyk5g9_x.jl:19\ntest set: Test Failed at /tmp/tmpeyk5g9_x.jl:27\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805040
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    for x in\
    \ nums\n        sum += x\n    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3,4,5,6,7,8,9,10])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe7bk1ub1.jl:15\nin expression starting at\
    \ /tmp/tmpe7bk1ub1.jl:15\n"
  stdout: ''
  timestamp: 1659805046
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6ysua936.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6ysua936.jl:1\n\
    in expression starting at /tmp/tmp6ysua936.jl:1\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    \n    for\
    \ num in nums\n        sum = sum + num\n    end\n    \n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of times a given element\
    \ appears in an array.\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp80zxov8m.jl:15\nin expression starting at\
    \ /tmp/tmp80zxov8m.jl:15\n"
  stdout: ''
  timestamp: 1659805046
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for n in nums\n\
    \        sum += n\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp767lhg5j.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmp767lhg5j.jl:18\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp767lhg5j.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp767lhg5j.jl:17\ntest set: Test Failed at /tmp/tmp767lhg5j.jl:22\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp767lhg5j.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp767lhg5j.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp767lhg5j.jl:23\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp767lhg5j.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp767lhg5j.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp767lhg5j.jl:24\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp767lhg5j.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp767lhg5j.jl:17\ntest set: Test Failed at /tmp/tmp767lhg5j.jl:25\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805040
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for x in nums\n\
    \        sum += x\n    end\n    return sum\nend\n\"\"\"\n    Given an array of\
    \ integers nums, find the maximum sum of any non-empty sub-array\n    of nums.\n\
    \    Example\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpft4ky09v.jl:13\nin expression starting at /tmp/tmpft4ky09v.jl:13\n"
  stdout: ''
  timestamp: 1659805043
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for x in nums\n\
    \        sum += x\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpw7smgkt9.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpw7smgkt9.jl:18\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test Failed at /tmp/tmpw7smgkt9.jl:22\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpw7smgkt9.jl:23\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpw7smgkt9.jl:24\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test Failed at /tmp/tmpw7smgkt9.jl:25\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805042
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for x in nums\n\
    \        sum += x\n    end\n    return sum\nend\n\"\"\"\n    Given an array of\
    \ integers nums, find the maximum sum of any non-empty sub-array\n    of nums.\n\
    \    Example\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpft4ky09v.jl:13\nin expression starting at /tmp/tmpft4ky09v.jl:13\n"
  stdout: ''
  timestamp: 1659805043
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for i in nums\n\
    \        sum += i\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqkq8w5pf.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpqkq8w5pf.jl:18\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpqkq8w5pf.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpqkq8w5pf.jl:17\ntest set: Test Failed at /tmp/tmpqkq8w5pf.jl:22\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqkq8w5pf.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqkq8w5pf.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpqkq8w5pf.jl:23\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqkq8w5pf.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqkq8w5pf.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpqkq8w5pf.jl:24\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpqkq8w5pf.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpqkq8w5pf.jl:17\ntest set: Test Failed at /tmp/tmpqkq8w5pf.jl:25\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805046
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        \n        if sum > n\n            \n            sum = n\n\
    \            \n        else\n            \n            sum += n\n            \n\
    \        end\n        \n    end\n    \n    return sum\n    \nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,4,5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxuekkobg.jl:27\nin expression starting at\
    \ /tmp/tmpxuekkobg.jl:27\n"
  stdout: ''
  timestamp: 1659805047
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for x in nums\n\
    \        sum += x\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpw7smgkt9.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpw7smgkt9.jl:18\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test Failed at /tmp/tmpw7smgkt9.jl:22\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpw7smgkt9.jl:23\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpw7smgkt9.jl:24\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test Failed at /tmp/tmpw7smgkt9.jl:25\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805042
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for x in nums\n\
    \        sum += x\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpw7smgkt9.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpw7smgkt9.jl:18\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test Failed at /tmp/tmpw7smgkt9.jl:22\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpw7smgkt9.jl:23\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpw7smgkt9.jl:24\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test Failed at /tmp/tmpw7smgkt9.jl:25\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805042
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    for n in\
    \ nums\n        sum += n\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbsa9af4t.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpbsa9af4t.jl:19\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpbsa9af4t.jl:19 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpbsa9af4t.jl:18\ntest set: Test Failed at /tmp/tmpbsa9af4t.jl:23\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbsa9af4t.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbsa9af4t.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpbsa9af4t.jl:24\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbsa9af4t.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbsa9af4t.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpbsa9af4t.jl:25\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpbsa9af4t.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpbsa9af4t.jl:18\ntest set: Test Failed at /tmp/tmpbsa9af4t.jl:26\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805041
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        \n        sum = sum + n\n        \n    end\n    \n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2alsd9i3.jl:18\nin expression starting at\
    \ /tmp/tmp2alsd9i3.jl:18\n"
  stdout: ''
  timestamp: 1659805047
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum = sum + n\n    end\n    \n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpx8m0csa_.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpx8m0csa_.jl:21\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpx8m0csa_.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpx8m0csa_.jl:20\ntest set: Test Failed at /tmp/tmpx8m0csa_.jl:25\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx8m0csa_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx8m0csa_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpx8m0csa_.jl:26\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx8m0csa_.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx8m0csa_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpx8m0csa_.jl:27\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpx8m0csa_.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpx8m0csa_.jl:20\ntest set: Test Failed at /tmp/tmpx8m0csa_.jl:28\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805045
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-4, -2, 1, 3, 5])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the number of positive integers less than or\
    \ equal to n.\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t\
    @test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx7clnlql.jl:15\nin expression starting at\
    \ /tmp/tmpx7clnlql.jl:15\n"
  stdout: ''
  timestamp: 1659805047
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    for x in\
    \ nums\n        sum += x\n    end\n    return sum\nend\n\"\"\"\n    Given an array\
    \ of integers nums, find the minimum sum of any non-empty sub-array\n    of nums.\n\
    \    Example\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpmk1cbphd.jl:13\nin expression starting at /tmp/tmpmk1cbphd.jl:13\n"
  stdout: ''
  timestamp: 1659805047
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for x in nums\n\
    \        sum += x\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpw7smgkt9.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpw7smgkt9.jl:18\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test Failed at /tmp/tmpw7smgkt9.jl:22\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpw7smgkt9.jl:23\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpw7smgkt9.jl:24\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test Failed at /tmp/tmpw7smgkt9.jl:25\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805042
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpox3m3kqc.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpox3m3kqc.jl:21\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpox3m3kqc.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpox3m3kqc.jl:20\ntest set: Test Failed at /tmp/tmpox3m3kqc.jl:25\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpox3m3kqc.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpox3m3kqc.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpox3m3kqc.jl:26\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpox3m3kqc.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpox3m3kqc.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpox3m3kqc.jl:27\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpox3m3kqc.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpox3m3kqc.jl:20\ntest set: Test Failed at /tmp/tmpox3m3kqc.jl:28\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805039
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3,4,5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv43bw03f.jl:16\nin expression starting at\
    \ /tmp/tmpv43bw03f.jl:16\n"
  stdout: ''
  timestamp: 1659805041
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpox3m3kqc.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpox3m3kqc.jl:21\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpox3m3kqc.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpox3m3kqc.jl:20\ntest set: Test Failed at /tmp/tmpox3m3kqc.jl:25\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpox3m3kqc.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpox3m3kqc.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpox3m3kqc.jl:26\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpox3m3kqc.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpox3m3kqc.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpox3m3kqc.jl:27\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpox3m3kqc.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpox3m3kqc.jl:20\ntest set: Test Failed at /tmp/tmpox3m3kqc.jl:28\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805039
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ x in nums\n        sum += x\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3,4,5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpafyjay5c.jl:16\nin expression starting at\
    \ /tmp/tmpafyjay5c.jl:16\n"
  stdout: ''
  timestamp: 1659805047
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        \n        if sum < n\n            sum = n\n        end\n\
    \    end\n    \n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 11 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp19f47r_q.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp19f47r_q.jl:24\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 4 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp19f47r_q.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp19f47r_q.jl:23\ntest set: Test Failed at /tmp/tmp19f47r_q.jl:25\n\
    \  Expression: candidate([-1, -2, -3]) == -6\n   Evaluated: 0 == -6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp19f47r_q.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp19f47r_q.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp19f47r_q.jl:26\n  Expression: candidate([-1, -2, -3, 2, -10])\
    \ == -14\n   Evaluated: 2 == -14\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp19f47r_q.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp19f47r_q.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp19f47r_q.jl:27\n  Expression: candidate([-9999999999999999])\
    \ == -9999999999999999\n   Evaluated: 0 == -9999999999999999\nStacktrace:\n [1]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp19f47r_q.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp19f47r_q.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp19f47r_q.jl:28\n  Expression: candidate([0, 10, 20, 1000000])\
    \ == 0\n   Evaluated: 1000000 == 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test."
  timestamp: 1659805048
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpox3m3kqc.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpox3m3kqc.jl:21\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpox3m3kqc.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpox3m3kqc.jl:20\ntest set: Test Failed at /tmp/tmpox3m3kqc.jl:25\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpox3m3kqc.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpox3m3kqc.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpox3m3kqc.jl:26\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpox3m3kqc.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpox3m3kqc.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpox3m3kqc.jl:27\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpox3m3kqc.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpox3m3kqc.jl:20\ntest set: Test Failed at /tmp/tmpox3m3kqc.jl:28\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805039
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum = sum + n\n    end\n    \n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpx8m0csa_.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpx8m0csa_.jl:21\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpx8m0csa_.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpx8m0csa_.jl:20\ntest set: Test Failed at /tmp/tmpx8m0csa_.jl:25\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx8m0csa_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx8m0csa_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpx8m0csa_.jl:26\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx8m0csa_.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx8m0csa_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpx8m0csa_.jl:27\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpx8m0csa_.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpx8m0csa_.jl:20\ntest set: Test Failed at /tmp/tmpx8m0csa_.jl:28\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805045
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for x in nums\n\
    \        sum += x\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpw7smgkt9.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpw7smgkt9.jl:18\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test Failed at /tmp/tmpw7smgkt9.jl:22\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpw7smgkt9.jl:23\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpw7smgkt9.jl:24\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw7smgkt9.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw7smgkt9.jl:17\ntest set: Test Failed at /tmp/tmpw7smgkt9.jl:25\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805042
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum::Int64 = 0\n    \n\
    \    for n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3,4,5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxrwujith.jl:16\nin expression starting at\
    \ /tmp/tmpxrwujith.jl:16\n"
  stdout: ''
  timestamp: 1659805047
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for n in nums\n\
    \        sum += n\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc1l0ic14.jl:13\nin expression starting at\
    \ /tmp/tmpc1l0ic14.jl:13\n"
  stdout: ''
  timestamp: 1659805047
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for n in nums\n\
    \        sum += n\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp767lhg5j.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmp767lhg5j.jl:18\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp767lhg5j.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp767lhg5j.jl:17\ntest set: Test Failed at /tmp/tmp767lhg5j.jl:22\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp767lhg5j.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp767lhg5j.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp767lhg5j.jl:23\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp767lhg5j.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp767lhg5j.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp767lhg5j.jl:24\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp767lhg5j.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp767lhg5j.jl:17\ntest set: Test Failed at /tmp/tmp767lhg5j.jl:25\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805040
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,3,4,5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10])\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29])\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4kicjbqc.jl:15\nin expression starting at\
    \ /tmp/tmp4kicjbqc.jl:15\n"
  stdout: ''
  timestamp: 1659805047
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    \n    for\
    \ i in nums\n        sum += i\n    end\n    \n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpfo2x4840.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpfo2x4840.jl:20\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpfo2x4840.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpfo2x4840.jl:19\ntest set: Test Failed at /tmp/tmpfo2x4840.jl:24\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfo2x4840.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfo2x4840.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpfo2x4840.jl:25\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfo2x4840.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfo2x4840.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpfo2x4840.jl:26\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpfo2x4840.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpfo2x4840.jl:19\ntest set: Test Failed at /tmp/tmpfo2x4840.jl:27\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805042
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum::Int64 = 0\n    \n\
    \    for num in nums\n        sum += num\n    end\n    \n    return sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpx8za3zfx.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpx8za3zfx.jl:21\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpx8za3zfx.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpx8za3zfx.jl:20\ntest set: Test Failed at /tmp/tmpx8za3zfx.jl:25\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx8za3zfx.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx8za3zfx.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpx8za3zfx.jl:26\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx8za3zfx.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx8za3zfx.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpx8za3zfx.jl:27\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpx8za3zfx.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpx8za3zfx.jl:20\ntest set: Test Failed at /tmp/tmpx8za3zfx.jl:28\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805048
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        \n        if sum > n\n            sum = n\n        else\n\
    \            sum = sum + n\n        end\n    end\n    \n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([-3,-2,-1,0,1,2,3])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of times a given\
    \ value appears in a given array.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzol27sdb.jl:21\nin expression starting at\
    \ /tmp/tmpzol27sdb.jl:21\n"
  stdout: ''
  timestamp: 1659805047
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    for n in\
    \ nums\n        sum += n\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbsa9af4t.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpbsa9af4t.jl:19\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpbsa9af4t.jl:19 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpbsa9af4t.jl:18\ntest set: Test Failed at /tmp/tmpbsa9af4t.jl:23\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbsa9af4t.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbsa9af4t.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpbsa9af4t.jl:24\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbsa9af4t.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbsa9af4t.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpbsa9af4t.jl:25\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpbsa9af4t.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpbsa9af4t.jl:18\ntest set: Test Failed at /tmp/tmpbsa9af4t.jl:26\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805041
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    for num\
    \ in nums\n        sum += num\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7j852rkm.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmp7j852rkm.jl:18\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp7j852rkm.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp7j852rkm.jl:17\ntest set: Test Failed at /tmp/tmp7j852rkm.jl:22\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7j852rkm.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7j852rkm.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp7j852rkm.jl:23\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7j852rkm.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7j852rkm.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp7j852rkm.jl:24\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp7j852rkm.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp7j852rkm.jl:17\ntest set: Test Failed at /tmp/tmp7j852rkm.jl:25\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805048
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6ysua936.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6ysua936.jl:1\n\
    in expression starting at /tmp/tmp6ysua936.jl:1\n"
  stdout: ''
  timestamp: 1659805038
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for n in nums\n\
    \        sum = sum + n\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpetnmovk1.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpetnmovk1.jl:18\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpetnmovk1.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpetnmovk1.jl:17\ntest set: Test Failed at /tmp/tmpetnmovk1.jl:22\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpetnmovk1.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpetnmovk1.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpetnmovk1.jl:23\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpetnmovk1.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpetnmovk1.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpetnmovk1.jl:24\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpetnmovk1.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpetnmovk1.jl:17\ntest set: Test Failed at /tmp/tmpetnmovk1.jl:25\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805048
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    for n in\
    \ nums\n        sum = sum + n\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([2,4,6,8,10,12,14,16,18,20])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([2,4,6,8,10,12,14,16,18,20,21])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([2,4,6,8,10,12,14,16,18,20,21,22])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([2,4,6,8,10,12,14,16,18,20,21,22,23])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([2,4,6,8,10,12,14,16,18,20,21,22,23,24])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([2,4,6,8,10,12,14,16,18,20,21,22,23,24,25])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([2,4,6,8,10,12,14,16,18,20,21,22,23,24,25,26])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20,21,22,23,24,25,26,27])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20,21,22,23,24,25,26,27,28])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20,21,22,23,24,25,26,27,28,29])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20,21,22,23,24,25,26,27,28,29,30])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20,21,22,23,24,25,26,27,28,29,30,31])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20,21,22,23,24,25,26,27,28,29,30,31,32])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([2,4,6,8,\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpaisyxwm_.jl:14\nin expression starting at\
    \ /tmp/tmpaisyxwm_.jl:14\n"
  stdout: ''
  timestamp: 1659805048
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for i in nums\n\
    \        sum += i\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t\
    @test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10])\
    \ == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\t@test(candidate([0,\
    \ 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3, 10, -5]) == -6)\n\t\
    @test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10, 11,\
    \ 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\t\
    @test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqkq8w5pf.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpqkq8w5pf.jl:18\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpqkq8w5pf.jl:18 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpqkq8w5pf.jl:17\ntest set: Test Failed at /tmp/tmpqkq8w5pf.jl:22\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqkq8w5pf.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqkq8w5pf.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpqkq8w5pf.jl:23\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqkq8w5pf.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqkq8w5pf.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpqkq8w5pf.jl:24\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpqkq8w5pf.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpqkq8w5pf.jl:17\ntest set: Test Failed at /tmp/tmpqkq8w5pf.jl:25\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805046
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ x in nums\n        sum += x\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of positive\
    \ integers less than or equal to n.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb_2e5pug.jl:16\nin expression starting at\
    \ /tmp/tmpb_2e5pug.jl:16\n"
  stdout: ''
  timestamp: 1659805048
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ x in nums\n        sum += x\n    end\n    \n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1,\
    \ 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpk_g6p0aw.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpk_g6p0aw.jl:21\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpk_g6p0aw.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpk_g6p0aw.jl:20\ntest set: Test Failed at /tmp/tmpk_g6p0aw.jl:25\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk_g6p0aw.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk_g6p0aw.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpk_g6p0aw.jl:26\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk_g6p0aw.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk_g6p0aw.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpk_g6p0aw.jl:27\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpk_g6p0aw.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpk_g6p0aw.jl:20\ntest set: Test Failed at /tmp/tmpk_g6p0aw.jl:28\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805039
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for n in nums\n\
    \        sum += n\n    end\n    return sum\nend\n\"\"\"\n    Given an array of\
    \ integers nums, find the minimum sum of any non-empty sub-array\n    of nums.\n\
    \    Example\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmphr1up84m.jl:13\nin expression starting at /tmp/tmphr1up84m.jl:13\n"
  stdout: ''
  timestamp: 1659805043
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum = 0\n    for x in nums\n\
    \        sum += x\n    end\n    return sum\nend\n\"\"\"\n    Given an array of\
    \ integers nums, find the maximum sum of any non-empty sub-array\n    of nums.\n\
    \    Example\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpft4ky09v.jl:13\nin expression starting at /tmp/tmpft4ky09v.jl:13\n"
  stdout: ''
  timestamp: 1659805043
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,3])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,4,5])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,2,4,5,6,7,8,9])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,\n\
    using Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf9wc3bfj.jl:16\nin expression starting at\
    \ /tmp/tmpf9wc3bfj.jl:16\n"
  stdout: ''
  timestamp: 1659805044
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ x in nums\n        sum = sum + x\n    end\n    \n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([1,4,3,2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,4,3,2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,3,2])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,3,2])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,4,3,2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,4,3,2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,3,2])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,3,2])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,4,3,2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,4,3,2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,3,2])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,3,2])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,4,3,2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,4,3,2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,3,2])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,3,2])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,4,3,2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,4,3,2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,3,2])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,3,2])\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([1,4,3,2])\n</cell>\n<code language=julia-1.5>\n\
    minSubArraySum([1,4,3,2])\n</cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,3,2])\n\
    </cell>\n<code language=julia-1.5>\nminSubArraySum([1,4,3,2])\n</cell>\n\nusing\
    \ Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz5v9lcre.jl:16\nin expression starting at\
    \ /tmp/tmpz5v9lcre.jl:16\n"
  stdout: ''
  timestamp: 1659805047
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    sum::Int64 = 0\n    for i in\
    \ nums\n        sum += i\n    end\n    return sum\nend\n\"\"\"\n    Given an array\
    \ of integers nums, find the maximum sum of any non-empty sub-array\n    of nums.\n\
    \    Example\n            \"\"\"\nusing Test\n\n@testset begin\n\ncandidate =\
    \ minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1,\
    \ -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpoaf8if5q.jl:13\nin expression starting at /tmp/tmpoaf8if5q.jl:13\n"
  stdout: ''
  timestamp: 1659805048
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum += n\n    end\n    \n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nminSubArraySum([-10, -5, -4, -7, -9, -6, -4, -6, -4, -6,\
    \ -5, -7, -9, -9, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1,\
    \ -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdka82noi.jl:16\nin expression starting at\
    \ /tmp/tmpdka82noi.jl:16\n"
  stdout: ''
  timestamp: 1659805047
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    for x in\
    \ nums\n        sum += x\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = minSubArraySum;\n\t@test(candidate([2, 3, 4, 1, 2, 4])\
    \ == 1)\n\t@test(candidate([-1, -2, -3]) == -6)\n\t@test(candidate([-1, -2, -3,\
    \ 2, -10]) == -14)\n\t@test(candidate([-9999999999999999]) == -9999999999999999)\n\
    \t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1, -2, -3,\
    \ 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\t@test(candidate([10,\
    \ 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32, -1, 0, -2]) == -33)\n\
    \t@test(candidate([-10]) == -10)\n\t@test(candidate([7]) == 7)\n\t@test(candidate([1,\
    \ -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8x4j69__.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmp8x4j69__.jl:19\n  Expression: candidate([2,\
    \ 3, 4, 1, 2, 4]) == 1\n   Evaluated: 16 == 1\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8x4j69__.jl:19 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp8x4j69__.jl:18\ntest set: Test Failed at /tmp/tmp8x4j69__.jl:23\n\
    \  Expression: candidate([0, 10, 20, 1000000]) == 0\n   Evaluated: 1000030 ==\
    \ 0\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8x4j69__.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8x4j69__.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp8x4j69__.jl:24\n  Expression: candidate([-1, -2, -3, 10, -5])\
    \ == -6\n   Evaluated: -1 == -6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8x4j69__.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8x4j69__.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp8x4j69__.jl:25\n  Expression: candidate([100, -1, -2, -3,\
    \ 10, -5]) == -6\n   Evaluated: 99 == -6\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8x4j69__.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp8x4j69__.jl:18\ntest set: Test Failed at /tmp/tmp8x4j69__.jl:26\n\
    \  Expression: candidate([10, 11, 13, 8, 3, 4]) == 3\n   Evaluated: 49 == 3\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659805039
- exit_code: 1
  program: "\"\"\"\n    Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n    of nums.\n    Example\n            \"\"\"\nfunction\
    \ minSubArraySum(nums::Vector{Int64})::Int64 \n    \n    sum = 0\n    \n    for\
    \ n in nums\n        sum = sum + n\n    end\n    \n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nminSubArraySum([2,4,6,8,10,12,14,16,18,20])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of times each element\
    \ appears in the given array.\nusing Test\n\n@testset begin\n\ncandidate = minSubArraySum;\n\
    \t@test(candidate([2, 3, 4, 1, 2, 4]) == 1)\n\t@test(candidate([-1, -2, -3]) ==\
    \ -6)\n\t@test(candidate([-1, -2, -3, 2, -10]) == -14)\n\t@test(candidate([-9999999999999999])\
    \ == -9999999999999999)\n\t@test(candidate([0, 10, 20, 1000000]) == 0)\n\t@test(candidate([-1,\
    \ -2, -3, 10, -5]) == -6)\n\t@test(candidate([100, -1, -2, -3, 10, -5]) == -6)\n\
    \t@test(candidate([10, 11, 13, 8, 3, 4]) == 3)\n\t@test(candidate([100, -33, 32,\
    \ -1, 0, -2]) == -33)\n\t@test(candidate([-10]) == -10)\n\t@test(candidate([7])\
    \ == 7)\n\t@test(candidate([1, -1]) == -1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0yhmch2e.jl:16\nin expression starting at\
    \ /tmp/tmp0yhmch2e.jl:16\n"
  stdout: ''
  timestamp: 1659805048

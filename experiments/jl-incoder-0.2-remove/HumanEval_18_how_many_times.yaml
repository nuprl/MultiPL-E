name: HumanEval_18_how_many_times
language: jl
prompt: "\"\"\" Find how many times a given substring can be found in the original\
  \ string. Count overlaping cases.\n                \"\"\"\nfunction how_many_times(string::String,\
  \ substring::String)::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = how_many_times;\n\t@test(candidate(\"\
  \", \"x\") == 0)\n\t@test(candidate(\"xyxyxyx\", \"x\") == 4)\n\t@test(candidate(\"\
  cacacacac\", \"cac\") == 4)\n\t@test(candidate(\"john doe\", \"john\") == 1)\nend\n"
completions: ["    count = 0\n    for c in string\n        if substring == c\n   \
    \         count += 1\n        end\n    end\n    return count\nend", "    if string\
    \ == \"\" || substring == \"\"\n        return 0\n    else\n        count = 0\n\
    \        for c in string\n            if c == substring\n                count\
    \ += 1\n            else\n                count = 0\n        end\n        return\
    \ count\n    end\nend", "    count = 0\n    for c in string\n        if c == substring\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    count\
    \ = 0\n    for c in string:\n        if c == substring:\n            count +=\
    \ 1\n    return count\nend", "    \n    count = 0\n    \n    for char in string\n\
    \        if char == substring[1]\n            count += 1\n        end\n    end\n\
    \    \n    return count\nend", "    \n    count = 0\n    \n    for char in string\n\
    \        if char == substring\n            count += 1\n        end\n    end\n\
    \    \n    return count\nend\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    The quick brown fox jumps over the lazy dog\", \"fox\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"The quick brown fox jumps over the lazy dog\", \"foxe\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"The quick brown fox jumps over the\
    \ lazy dog\", \"foxe\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    The quick brown fox jumps over the lazy dog\", \"fox\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"The quick brown fox jumps over the lazy dog\", \"fox\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"The quick brown fox jumps over the\
    \ lazy dog\", \"fox\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    The quick brown fox jumps over the lazy dog\", \"fox\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"The quick brown fox jumps over the lazy dog\", \"fox\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"The quick brown fox jumps over the\
    \ lazy dog\", \"fox\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    The quick brown fox jumps over the lazy dog\", \"fox\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"The quick brown fox jumps over the lazy dog\", \"fox\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"The quick brown fox jumps over the\
    \ lazy dog\", \"fox\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    The quick brown fox jumps over the lazy dog\", \"fox\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"The quick brown fox jumps over the lazy dog\", \"fox\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"The quick brown fox jumps over the\
    \ lazy dog\", \"fox\")\n", "    \n    count = 0\n    \n    for c in string:\n\
    \        if c == substring[0]:\n            count += 1\n            if substring[1:]\
    \ == string[count+1:]:\n                count += 1\n                if substring[2:]\
    \ == string[count+2:]:\n                    count += 1\n                    if\
    \ substring[3:] == string[count+3:]:\n                        count += 1\n   \
    \                     if substring[4:] == string[count+4:]:\n                \
    \            count += 1\n                            if substring[5:] == string[count+5:]:\n\
    \                                count += 1\n                                if\
    \ substring[6:] == string[count+6:]:\n                                    count\
    \ += 1\n                                    if substring[7:] == string[count+7:]:\n\
    \                                        count += 1\n                        \
    \                if substring[8:] == string[count+8:]:\n                     \
    \                       count += 1\n                                         \
    \   if substring[9:] == string[count+9:]:\n                                  \
    \              count += 1\n                                                if\
    \ substring[10:] == string[count+10:]:\n                                     \
    \               count += 1\n                                                 \
    \   if substring[11:] == string[count+11:]:\n                                \
    \                        count += 1\n                                        \
    \                if substring[12:] == string[count+12:]:\n                   \
    \                                         count += 1\n                       \
    \                                     if substring[13:] == string[count+13:]:\n\
    \                                                                count += 1\n\
    \                                                                if substring[14:]\
    \ == string[count+14:]:\n                                                    \
    \                count += 1\n                                                \
    \                    if substring[15:] == string[count+15:]:\n               \
    \                                                         count += 1\n       \
    \                                                 if substring[16:] == string[count+16:]:\n\
    \                                                            count += 1\n    \
    \                                                        if substring[17:] ==\
    \ string[count+17:]:\n                                                       \
    \         count += 1\n                                                       \
    \         if substring[18:] == string[count+18:]:\n                          \
    \                                          count += 1\n                      \
    \                                              if substring[19:] == string[count+19:]:\n\
    \                                                                        count\
    \ += 1\n                                                        if substring[20:]\
    \ == string[count+20:]:\n                                                    \
    \        count += 1\n                                                        \
    \    if substring[21:] == string[count+21:]:\n                               \
    \                                 count += 1\n                               \
    \                                 if substring[22:] == string[count+22:]:\n  \
    \                                                                  count += 1\n\
    \                                                                    if substring[23:]\
    \ == string[count+23:]:\n                                                    \
    \                    count += 1\n                                            \
    \            if substring[24:] == string[count+24:]:\n                       \
    \                                     count += 1\n                           \
    \                                 if substring[25:] == string[count+25:]:\n  \
    \                                                              count += 1\n  \
    \                                                              if substring[26:]\
    \ == string[count+26:]:\n                                                    \
    \                count += 1\n                                                \
    \                    if substring[27:] == string[count+27:]:\n               \
    \                                                         count += 1\n       \
    \                                                 if substring[28:] == string[count+28:]:\n\
    \                                                            count += 1\n    \
    \                                                        if substring[29:] ==\
    \ string[count+29:]:\n                                                       \
    \         count += 1\n                                                       \
    \         if ", "    if string == \"\" || substring == \"\"\n        return 0\n\
    \    \n    count = 0\n    \n    for c in string\n        if c == substring\n \
    \           count += 1\n        end\n    end\n    \n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"c\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bcde\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bcdef\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefg\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefgh\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghi\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghij\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijk\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijkl\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijklm\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijklmn\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijklmno\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijklmnop\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijklmnopq\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijklmnopqr\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"ab", "    count = 0\n\
    \    for c in string\n        if c == substring\n            count += 1\n    \
    \    end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abba\", \"ab\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abba\", \"ba\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\",\
    \ \"bb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"bbb\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"bbba\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abba\", \"bbab\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abba\", \"bbaba\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abba\", \"bbabaa\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abba\", \"bbabaaa\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\"\
    , \"bbabaaab\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\",\
    \ \"bbabaaabb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\"\
    , \"bbabaaabbb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\"\
    , \"bbabaaabbbb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\"\
    , \"bbabaaabbbba\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\"\
    , \"bbabaaabbbbba\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\"\
    , \"bbabaaabbbbbaa\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\"\
    , \"bbabaaabbbbbaaa\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abba\", \"bbabaaabbbbbaaaa\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abba\", \"bbabaaabbbbbaaaaa\")\n</cell>\n<code language=julia-1.5>\nhow_", " \
    \   if string == \"\" || substring == \"\"\n        return 0\n    \n    string_length\
    \ = len(string)\n    substring_length = len(substring)\n    \n    i = 0\n    j\
    \ = 0\n    \n    while i < string_length && j < substring_length\n        if string[i]\
    \ == substring[j]\n            i += 1\n            j += 1\n        else\n    \
    \        if j == substring_length\n                return i\n            else\n\
    \                j += 1\n        end\n    end\n    \n    return -1\nend\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\n\
    ho", "    \n    count = 0\n    \n    for c in string:\n        if c == substring[0]:\n\
    \            count += 1\n            \n            if count > substring.length\n\
    \                return 0\n            \n            substring = substring[substring.length..]\n\
    \            \n        elif c == substring[substring.length]\n            count\
    \ += 1\n            \n            if count > substring.length\n              \
    \  return 0\n            \n            substring = substring[1..substring.length]\n\
    \            \n        else\n            count = 0\n        end\n    end\n   \
    \ \n    return count\nend\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bcc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bccc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bccca\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcca\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bccaa\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bccaab\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bccaabb\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bccaabbb\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bccaabbbb\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bccaabbbbc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bccaabbbbcc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bccaabbbbccc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bccaabbbbccca\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bccaabbbbcccaa\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc", "    count = 0\n\
    \    \n    for c in string\n        if c == substring\n            count += 1\n\
    \        end\n    end\n    \n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"abcde\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bcde\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcde\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdef\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefgh\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghij\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijk\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijkl\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijklm\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijklmn\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijklmno\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijklmnop\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijklmnopq\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijklmnopqr\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijklmnopqrs\"\
    )\n</", "    \n    count = 0\n    \n    for char in string\n        if char ==\
    \ substring\n            count += 1\n        end\n    end\n    \n    return count\n\
    end", "    if string == \"\" || substring == \"\"\n        return 0\n    end\n\
    \    \n    count = 0\n    \n    for char in string\n        if char == substring[1]\n\
    \            count += 1\n        end\n    end\n    \n    return count\nend", " \
    \   count = 0\n    for c in string:\n        if c == substring:\n            count\
    \ += 1\n    return count\nend", "    count = 0\n    \n    for c in string\n  \
    \      if c == substring\n            count += 1\n        end\n    end\n    \n\
    \    return count\nend", "    count = 0\n    for c in string:\n        if c ==\
    \ substring:\n            count += 1\n    return count\nend", "    count = 0\n\
    \    for c in string\n        if c == substring\n            count += 1\n    \
    \    end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"abc\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of times the string \"ab\" appears\
    \ in the string. \nWrite a function that takes a string and returns the number\
    \ of times the string \"ab\" appears in the string ignoring case. \nWrite a function\
    \ that takes a string and returns the number of times the string \"ab\" appears\
    \ in the string ignoring case.\nWrite a function that takes a string and returns\
    \ the number of times the string \"ab\" appears in the string ignoring case.\n\
    Write a function that takes a string and returns the number of times the string\
    \ \"ab\" appears in the string ignoring case.\nWrite a function that takes a string\
    \ and returns the number of times the string \"ab\" appears in the string ignoring\
    \ case.\nWrite a function that takes a string and returns the number of times\
    \ the string \"ab\" appears in the string ignoring case.\nWrite a function that\
    \ takes a string and returns the number of times the string \"ab\" appears in\
    \ the string ignoring case.\nWrite a function that takes a string and returns\
    \ the number of times the string \"ab\" appears in the string ignoring case.\n\
    Write a function that takes a string and returns the number of times the string\
    \ \"ab\" appears in the string ignoring case.\nWrite a function that takes a string\
    \ and returns the number of times the string \"ab\" appears in the string ignoring\
    \ case.\nWrite a function that takes a string and returns the number of times\
    \ the string \"ab\" appears in the string ignoring case.\nWrite a function that\
    \ takes a string and returns the number of times the string \"ab\" appears in\
    \ the string ignoring case.\nWrite a function that takes a string and returns\
    \ the number of times the string \"ab\" appears in the string ignoring case.\n\
    Write a function that takes a string and returns the number of times the string\
    \ \"ab\" appears in the string ignoring case.\nWrite a function that takes a string\
    \ and returns the number of times the string \"ab\" appears in the string ignoring\
    \ case.\nWrite a function that takes a string and returns the number of times\
    \ the string \"ab\" appears in the string ignoring case.\nWrite a function that\
    \ takes a string and returns the number of times the string \"ab\" appears in\
    \ the string ignoring case.\nWrite a function that takes a string and returns\
    \ the number of times the string \"ab\" appears in the string ignoring case.\n\
    Write a function that takes a string and returns the number of times the string\
    \ \"ab\" appears in the string ignoring case.\nWrite a function that takes a string\
    \ and returns the number of times the string \"ab\" appears in the string ignoring\
    \ case.\nWrite a function that takes a string and returns the number of times\
    \ the string \"ab\" appears in the string ", "    count = 0\n    for c in string:\n\
    \        if c == substring[0]:\n            count += 1\n            if substring[1:]\
    \ == string[count+1:]:\n                count += 1\n                if substring[2:]\
    \ == string[count+2:]:\n                    count += 1\n                    if\
    \ substring[3:] == string[count+3:]:\n                        count += 1\n   \
    \                     if substring[4:] == string[count+4:]:\n                \
    \            count += 1\n                            if substring[5:] == string[count+5:]:\n\
    \                                count += 1\n                                if\
    \ substring[6:] == string[count+6:]:\n                                    count\
    \ += 1\n                                    if substring[7:] == string[count+7:]:\n\
    \                                        count += 1\n                        \
    \                if substring[8:] == string[count+8:]:\n                     \
    \                       count += 1\n                                         \
    \   if substring[9:] == string[count+9:]:\n                                  \
    \              count += 1\n                                                if\
    \ substring[10:] == string[count+10:]:\n                                     \
    \               count += 1\n                                                 \
    \   if substring[11:] == string[count+11:]:\n                                \
    \                        count += 1\n                                        \
    \                if substring[12:] == string[count+12:]:\n                   \
    \                                         count += 1\n                       \
    \                                     if substring[13:] == string[count+13:]:\n\
    \                                                                count += 1\n\
    \                                                                if substring[14:]\
    \ == string[count+14:]:\n                                                    \
    \                count += 1\n                                                \
    \                    if substring[15:] == string[count+15:]:\n               \
    \                                                         count += 1\n       \
    \                                                 if substring[16:] == string[count+16:]:\n\
    \                                                            count += 1\n    \
    \                                                        if substring[17:] ==\
    \ string[count+17:]:\n                                                       \
    \         count += 1\n                                                       \
    \         if substring[18:] == string[count+18:]:\n                          \
    \                                          count += 1\n                      \
    \                                              if substring[19:] == string[count+19:]:\n\
    \                                                                        count\
    \ += 1\n                                                        if substring[20:]\
    \ == string[count+20:]:\n                                                    \
    \        count += 1\n                                                        \
    \    if substring[21:] == string[count+21:]:\n                               \
    \                                 count += 1\n                               \
    \                                 if substring[22:] == string[count+22:]:\n  \
    \                                                                  count += 1\n\
    \                                                                    if substring[23:]\
    \ == string[count+23:]:\n                                                    \
    \                    count += 1\n                                            \
    \            if substring[24:] == string[count+24:]:\n                       \
    \                                     count += 1\n                           \
    \                                 if substring[25:] == string[count+25:]:\n  \
    \                                                              count += 1\n  \
    \                                                              if substring[26:]\
    \ == string[count+26:]:\n                                                    \
    \                count += 1\n                                                \
    \                    if substring[27:] == string[count+27:]:\n               \
    \                                                         count += 1\n       \
    \                                                 if substring[28:] == string[count+28:]:\n\
    \                                                            count += 1\n    \
    \                                                        if substring[29:] ==\
    \ string[count+29:]:\n                                                       \
    \         count += 1\n                                                       \
    \         if substring[30] == ", "    if string == \"\" || substring == \"\" \n\
    \        0\n    else\n        string.count(substring)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"The quick brown fox jumps over the\
    \ lazy dog\", \"fox\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    The quick brown fox jumps over the lazy dog\", \"dog\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"The quick brown fox jumps over the lazy dog\", \"fox\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"The quick brown fox jumps over the\
    \ lazy dog\", \"dog\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    The quick brown fox jumps over the lazy dog\", \"fox\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"The quick brown fox jumps over the lazy dog\", \"dog\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"The quick brown fox jumps over the\
    \ lazy dog\", \"fox\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    The quick brown fox jumps over the lazy dog\", \"dog\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"The quick brown fox jumps over the lazy dog\", \"fox\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"The quick brown fox jumps over the\
    \ lazy dog\", \"dog\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    The quick brown fox jumps over the lazy dog\", \"fox\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"The quick brown fox jumps over the lazy dog\", \"dog\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"The quick brown fox jumps over the\
    \ lazy dog\", \"fox\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    The quick brown fox jumps over the lazy dog\", \"dog\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"The quick brown fox jumps over the lazy dog\", \"fox\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_", "    count = 0\n    \n    for c in string:\n\
    \        if c == substring[0]:\n            count += 1\n            if count >\
    \ substring.length\n                return substring.length\n            \n  \
    \      elif c == substring[1]:\n            count += 1\n            if count >\
    \ substring.length\n                return substring.length\n            \n  \
    \      elif c == substring[2]:\n            count += 1\n            if count >\
    \ substring.length\n                return substring.length\n            \n  \
    \      elif c == substring[3]:\n            count += 1\n            if count >\
    \ substring.length\n                return substring.length\n            \n  \
    \      elif c == substring[4]:\n            count += 1\n            if count >\
    \ substring.length\n                return substring.length\n            \n  \
    \      elif c == substring[5]:\n            count += 1\n            if count >\
    \ substring.length\n                return substring.length\n            \n  \
    \      elif c == substring[6]:\n            count += 1\n            if count >\
    \ substring.length\n                return substring.length\n            \n  \
    \      elif c == substring[7]:\n            count += 1\n            if count >\
    \ substring.length\n                return substring.length\n            \n  \
    \      elif c == substring[8]:\n            count += 1\n            if count >\
    \ substring.length\n                return substring.length\n            \n  \
    \      elif c == substring[9]:\n            count += 1\n            if count >\
    \ substring.length\n                return substring.length\n            \n  \
    \      elif c == substring[10]:\n            count += 1\n            if count\
    \ > substring.length\n                return substring.length\n            \n\
    \        elif c == substring[11]:\n            count += 1\n            if count\
    \ > substring.length\n                return substring.length\n            \n\
    \        elif c == substring[12]:\n            count += 1\n            if count\
    \ > substring.length\n                return substring.length\n            \n\
    \        elif c == substring[13]:\n            count += 1\n            if count\
    \ > substring.length\n                return substring.length\n            \n\
    \        elif c == substring[14]:\n            count += 1\n            if count\
    \ > substring.length\n                return substring.length\n            \n\
    \        elif c == substring[15]:\n            count += 1\n            if count\
    \ > substring.length\n                return substring.length\n            \n\
    \        elif c == substring[16]:\n            count += 1\n            if count\
    \ > substring.length\n                return substring.length\n            \n\
    \        elif c == substring[17]:\n            count += 1\n            if count\
    \ > substring.length\n                return substring.length\n            \n\
    \        elif c == substring[18]:\n            count += 1\n            if count\
    \ > substring.length\n                return substring.length\n            \n\
    \        elif c == substring[19]:\n            count += 1\n            if count\
    \ > substring.length\n                return substring.length\n            \n\
    \        elif c == substring[20]:\n            count += 1\n            if count\
    \ > substring.length\n                return substring.length\n            \n\
    \        elif c == substring[21]:\n            count += 1\n            if count\
    \ > substring.length\n                return substring.length\n            \n\
    \        elif c == substring[22]:\n            count += 1\n            if count\
    \ > substring.length\n                return substring.length\n            \n\
    \        elif c == substring[23]:\n            count += 1\n            if ", " \
    \   count = 0\n    for c in string:\n        if c == substring:\n            count\
    \ += 1\n    return count\nend\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabcbb\", \"abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"bcb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"\
    bb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"c\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bc\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabcbb\", \"bbc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabcbb\", \"bbc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"bbc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"\
    bbc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabcbb\", \"bbc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabcbb\", \"bbc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"bbc\")\n</cell>\n<code language=julia-1.5>\nhow_", "    if string == \"\"\
    \ || substring == \"\" \n        return 0 \n    else \n        string_length =\
    \ len(string)\n        substring_index = 0\n        substring_index += string.find(substring)\n\
    \        while substring_index < string_length \n            substring_index +=\
    \ string.find(substring, substring_index + 1)\n        end\n        return substring_index\
    \ - substring_index\n    end\nend", "    \n    count = 0\n    \n    for c in string:\n\
    \        if c == substring[0]:\n            count += 1\n            if count ==\
    \ substring.length\n                return count\n            \n        elif c\
    \ == substring[1]:\n            count += 1\n            if count == substring.length\n\
    \                return count\n            \n        elif c == substring[2]:\n\
    \            count += 1\n            if count == substring.length\n          \
    \      return count\n            \n        elif c == substring[3]:\n         \
    \   count += 1\n            if count == substring.length\n                return\
    \ count\n            \n        elif c == substring[4]:\n            count += 1\n\
    \            if count == substring.length\n                return count\n    \
    \        \n        elif c == substring[5]:\n            count += 1\n         \
    \   if count == substring.length\n                return count\n            \n\
    \        elif c == substring[6]:\n            count += 1\n            if count\
    \ == substring.length\n                return count\n            \n        elif\
    \ c == substring[7]:\n            count += 1\n            if count == substring.length\n\
    \                return count\n            \n        elif c == substring[8]:\n\
    \            count += 1\n            if count == substring.length\n          \
    \      return count\n            \n        elif c == substring[9]:\n         \
    \   count += 1\n            if count == substring.length\n                return\
    \ count\n            \n        elif c == substring[10]:\n            count +=\
    \ 1\n            if count == substring.length\n                return count\n\
    \            \n        elif c == substring[11]:\n            count += 1\n    \
    \        if count == substring.length\n                return count\n        \
    \    \n        elif c == substring[12]:\n            count += 1\n            if\
    \ count == substring.length\n                return count\n            \n    \
    \    elif c == substring[13]:\n            count += 1\n            if count ==\
    \ substring.length\n                return count\n            \n        elif c\
    \ == substring[14]:\n            count += 1\n            if count == substring.length\n\
    \                return count\n            \n        elif c == substring[15]:\n\
    \            count += 1\n            if count == substring.length\n          \
    \      return count\n            \n        elif c == substring[16]:\n        \
    \    count += 1\n            if count == substring.length\n                return\
    \ count\n            \n        elif c == substring[17]:\n            count +=\
    \ 1\n            if count == substring.length\n                return count\n\
    \            \n        elif c == substring[18]:\n            count += 1\n    \
    \        if count == substring.length\n                return count\n        \
    \    \n        elif c == substring[19]:\n            count += 1\n            if\
    \ count == substring.length\n                return count\n            \n    \
    \    elif c == substring[20]:\n            count += 1\n            if count ==\
    \ substring.length\n                return count\n            \n        elif c\
    \ == substring[21]:\n            count += 1\n            if count == substring.length\n\
    \                return count\n            \n        elif c == substring[22]:\n\
    \            count += 1\n            if count == substring.length\n          \
    \      return count\n            \n        elif c == substring[23]:\n        \
    \    count += 1\n            if count == substring.length\n                return\
    \ count\n            \n        elif c == substring[24]:\n            count +=\
    \ 1\n            if count == substring.length\n                return count\n\
    \            \n        elif c == substring[25]:\n            count += 1\n    \
    \        if count == substring.length\n", "    \n    count = 0\n    \n    for\
    \ char in string\n        if char == substring\n            count += 1\n     \
    \   end\n    end\n    \n    return count\nend", "    if string == \"\" || substring\
    \ == \"\" \n        then return 0\n    else \n        local count = 0\n      \
    \  local substring_index = 0\n        local string_index = 0\n        while substring_index\
    \ < substring.length \n            && string_index < string.length \n        \
    \    && substring[substring_index] == string[string_index]\n            do substring_index\
    \ += 1\n            string_index += 1\n            count = count + 1\n       \
    \ end\n        return count\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"c\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"ab\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"abc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"c\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"ab\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"c\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"ab\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abc\")\n</cell>\n\
    <code language=juli", "    if string == \"\" || substring == \"\"\n        return\
    \ 0\n    \n    count = 0\n    \n    for c in string\n        if c == substring[1]\n\
    \            count += 1\n        else\n            count = 0\n    end\n    \n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabcbb\", \"abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"bba\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"\
    bb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"a\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bc\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bb\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bb\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabcbb\", \"bb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabcbb\", \"bb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"bb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"\
    bb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bb\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bb\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bb\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bb\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bb\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabcbb\", \"bb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabcbb\", \"bb\")\n</cell>\n<code language=julia-1.5>\nho", "    if string ==\
    \ \"\" || substring == \"\"\n        return 0\n    else\n        count = 0\n \
    \       for c in string\n            if c == substring\n                count\
    \ += 1\n            else\n                if count > 0\n                    return\
    \ count\n                count = 0\n        end\n        return count\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abc\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bcc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bcc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bcc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bcc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcc\")\n</cell>\n", "    \n\
    \    count = 0\n    \n    for c in string:\n        if c == substring[0]:\n  \
    \          count += 1\n            if substring[1:] == string[count+1:]:\n   \
    \             count += 1\n                if substring[2:] == string[count+2:]:\n\
    \                    count += 1\n                    if substring[3:] == string[count+3:]:\n\
    \                        count += 1\n                        if substring[4:]\
    \ == string[count+4:]:\n                            count += 1\n             \
    \               if substring[5:] == string[count+5:]:\n                      \
    \          count += 1\n                                if substring[6:] == string[count+6:]:\n\
    \                                    count += 1\n                            \
    \        if substring[7:] == string[count+7:]:\n                             \
    \           count += 1\n                                        if substring[8:]\
    \ == string[count+8:]:\n                                            count += 1\n\
    \                                            if substring[9:] == string[count+9:]:\n\
    \                                                count += 1\n                \
    \                                if substring[10:] == string[count+10:]:\n   \
    \                                                 count += 1\n               \
    \                                     if substring[11:] == string[count+11:]:\n\
    \                                                        count += 1\n        \
    \                                                if substring[12:] == string[count+12:]:\n\
    \                                                            count += 1\n    \
    \                                                        if substring[13:] ==\
    \ string[count+13:]:\n                                                       \
    \         count += 1\n                                                       \
    \         if substring[14:] == string[count+14:]:\n                          \
    \                                          count += 1\n                      \
    \                                              if substring[15:] == string[count+15:]:\n\
    \                                                                        count\
    \ += 1\n                                                        if substring[16:]\
    \ == string[count+16:]:\n                                                    \
    \        count += 1\n                                                        \
    \    if substring[17:] == string[count+17:]:\n                               \
    \                                 count += 1\n                               \
    \                                 if substring[18:] == string[count+18:]:\n  \
    \                                                                  count += 1\n\
    \                                                                    if substring[19:]\
    \ == string[count+19:]:\n                                                    \
    \                    count += 1\n                                            \
    \            if substring[20:] == string[count+20:]:\n                       \
    \                                     count += 1\n                           \
    \                                 if substring[21:] == string[count+21:]:\n  \
    \                                                              count += 1\n  \
    \                                                              if substring[22:]\
    \ == string[count+22:]:\n                                                    \
    \                count += 1\n                                                \
    \                    if substring[23:] == string[count+23:]:\n               \
    \                                                         count += 1\n       \
    \                                                 if substring[24:] == string[count+24:]:\n\
    \                                                            count += 1\n    \
    \                                                        if substring[25:] ==\
    \ string[count+25:]:\n                                                       \
    \         count += 1\n                                                       \
    \         if substring[26:] == string[count+26:]:\n                          \
    \                                          count += 1\n                      \
    \                                              if substring[27:] == string[count+27:]:\n\
    \                                                                        count\
    \ += 1\n                                                        if substring[28:]\
    \ == string[count+28:]:\n                                                    \
    \        count += 1\n                                                        \
    \    if substring[29:] == string[count+29:]:\n                               \
    \                                 count += 1\n                               \
    \                                 if ", "    count = 0\n    \n    for c in string\n\
    \        if c == substring\n            count += 1\n        end\n    end\n   \
    \ \n    return count\nend\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abba\", \"ab\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\",\
    \ \"ba\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"bb\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"abba\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abba\", \"abbb\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abba\", \"abbbb\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abba\", \"abbbba\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abba\", \"abbbbba\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\"\
    , \"abbbbbac\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\",\
    \ \"abbbbbacab\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\"\
    , \"abbbbbacabc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\"\
    , \"abbbbbacabcc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\"\
    , \"abbbbbacabccc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\"\
    , \"abbbbbacabccca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\"\
    , \"abbbbbacabcccba\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abba\", \"abbbbbacabcccbb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abba\", \"abbbbbacabcccbbb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abba\", \"abbbbbacabcccbbba\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abba\", \"abbbbbacabcc", "    \n    count = 0\n    \n    for c in string:\n  \
    \      if c == substring[0]:\n            count += 1\n            if count > substring.length\n\
    \                return substring.length\n            \n        elif c == substring[substring.length]\n\
    \            count += 1\n            if count > substring.length\n           \
    \     return substring.length\n            \n        elif substring.length <=\
    \ count <= substring.length + 1 \n            return substring.length\n      \
    \      \n    return substring.length\nend", "    count = 0\n    for c in string:\n\
    \        if c == substring:\n            count += 1\n    return count\nend", " \
    \   \n    count = 0\n    \n    for char in string\n        if char == substring[1]\n\
    \            count += 1\n        end\n    end\n    \n    return count\nend", " \
    \   count = 0\n    \n    for char in string\n        if char == substring\n  \
    \          count += 1\n        end\n    end\n    \n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bcc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bcc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bcc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bcc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bcc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bcc\")\n</cell", "    if string == \"\" || substring == \"\" \n        then\
    \ 0\n        else string.count(substring) + how_many_times(string.substring(1,string.length-1),\
    \ substring)\n    end\nend\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabcbb\", \"abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"bb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"\
    c\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabcbb\", \"bbc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabcbb\", \"bbc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"bbc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"\
    bbc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabcbb\", \"bbc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabcbb\", \"bbc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc",
  "    if string == \"\" || substring == \"\"\n        return 0\n    end\n    \n \
    \   count = 0\n    \n    for char in string\n        if char == substring[1]\n\
    \            count += 1\n        elseif char == substring[2]\n            count\
    \ += 1\n        elseif char == substring[3]\n            count += 1\n        elseif\
    \ char == substring[4]\n            count += 1\n        elseif char == substring[5]\n\
    \            count += 1\n        elseif char == substring[6]\n            count\
    \ += 1\n        elseif char == substring[7]\n            count += 1\n        elseif\
    \ char == substring[8]\n            count += 1\n        elseif char == substring[9]\n\
    \            count += 1\n        elseif char == substring[10]\n            count\
    \ += 1\n        elseif char == substring[11]\n            count += 1\n       \
    \ elseif char == substring[12]\n            count += 1\n        elseif char ==\
    \ substring[13]\n            count += 1\n        elseif char == substring[14]\n\
    \            count += 1\n        elseif char == substring[15]\n            count\
    \ += 1\n        elseif char == substring[16]\n            count += 1\n       \
    \ elseif char == substring[17]\n            count += 1\n        elseif char ==\
    \ substring[18]\n            count += 1\n        elseif char == substring[19]\n\
    \            count += 1\n        elseif char == substring[20]\n            count\
    \ += 1\n        elseif char == substring[21]\n            count += 1\n       \
    \ elseif char == substring[22]\n            count += 1\n        elseif char ==\
    \ substring[23]\n            count += 1\n        elseif char == substring[24]\n\
    \            count += 1\n        elseif char == substring[25]\n            count\
    \ += 1\n        elseif char == substring[26]\n            count += 1\n       \
    \ elseif char == substring[27]\n            count += 1\n        elseif char ==\
    \ substring[28]\n            count += 1\n        elseif char == substring[29]\n\
    \            count += 1\n        elseif char == substring[30]\n            count\
    \ += 1\n        elseif char == substring[31]\n            count += 1\n       \
    \ elseif char == substring[32]\n            count += 1\n        elseif char ==\
    \ substring[33]\n            count += 1\n        elseif char == substring[34]\n\
    \            count += 1\n        elseif char == substring[35]\n            count\
    \ += 1\n        elseif char == substring[36]\n            count += 1\n       \
    \ elseif char == substring[37]\n            count += 1\n        elseif char ==\
    \ substring[38]\n            count += 1\n        elseif char == substring[39]\n\
    \            count += 1\n        elseif char == substring[40]\n            count\
    \ += 1\n        elseif char == substring[41]\n            count += 1\n       \
    \ elseif char == substring[42]\n            count += 1\n        elseif char ==\
    \ substring[", "    if string == \"\" then return 0 \n    if substring == \"\"\
    \ then return 1 \n    if string[0] == substring[0] then return how_many_times(string[1:],\
    \ substring[1:]) + 1 \n    else return how_many_times(string[1:], substring) \n\
    end", "    \n    count = 0\n    \n    for c in string:\n        if c == substring[0]:\n\
    \            count += 1\n            if substring[1:] == string[count+1:]:\n \
    \               count += 1\n        else:\n            count = 0\n    \n    return\
    \ count\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abcde\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"abcc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"abccc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"abccca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"abcccba\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"abcccbac\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"abcccbaca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"abcccbacab\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"abcccbacabc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"abcccbacabca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"abcccbacabcaa\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"abcccbacabcaab\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"abcccbacabcaabb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"abcccbacabcaabbb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"abcccbacabcaabbbb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"abcccbacabcaabbbbc\")\n</cell>\n<code language=", "    count = 0\n\
    \    for c in string:\n        if c == substring:\n            count += 1\n  \
    \  return count\nend", "    \n    count = 0\n    \n    for c in string\n     \
    \   if substring == c\n            count += 1\n        end\n    end\n    \n  \
    \  return count\nend\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"\
    bcc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bb\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbb\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bb\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bb\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabcbb\", \"bb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabcbb\", \"bb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"bb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"\
    bb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bb\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bb\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bb\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bb\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bb\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabcbb\", \"bb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabcbb\", \"bb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"bb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"\
    bb\")\n", "    count = 0\n    \n    for c in string:\n        if c == substring[0]:\n\
    \            count += 1\n            if count == len(substring):\n           \
    \     return count\n        elif c == substring[1]:\n            count += 1\n\
    \            if count == len(substring):\n                return count\n     \
    \   else:\n            count = 0\n    return 0\nend", "    count = 0\n    \n \
    \   for c in string:\n        if c == substring[0]:\n            count += 1\n\
    \            if substring[1:] == string[count+1:]:\n                count += 1\n\
    \        else:\n            count = 0\n    \n    return count\nend", "    count\
    \ = 0\n    \n    for c in string:\n        if c == substring[0]:\n           \
    \ count += 1\n            if count == len(substring):\n                return\
    \ count\n        elif c == substring[1]:\n            count += 1\n           \
    \ if count == len(substring):\n                return count\n        elif c ==\
    \ substring[2]:\n            count += 1\n            if count == len(substring):\n\
    \                return count\n        elif c == substring[3]:\n            count\
    \ += 1\n            if count == len(substring):\n                return count\n\
    \        elif c == substring[4]:\n            count += 1\n            if count\
    \ == len(substring):\n                return count\n        elif c == substring[5]:\n\
    \            count += 1\n            if count == len(substring):\n           \
    \     return count\n        elif c == substring[6]:\n            count += 1\n\
    \            if count == len(substring):\n                return count\n     \
    \   elif c == substring[7]:\n            count += 1\n            if count == len(substring):\n\
    \                return count\n        elif c == substring[8]:\n            count\
    \ += 1\n            if count == len(substring):\n                return count\n\
    \        elif c == substring[9]:\n            count += 1\n            if count\
    \ == len(substring):\n                return count\n        elif c == substring[10]:\n\
    \            count += 1\n            if count == len(substring):\n           \
    \     return count\n        elif c == substring[11]:\n            count += 1\n\
    \            if count == len(substring):\n                return count\n     \
    \   elif c == substring[12]:\n            count += 1\n            if count ==\
    \ len(substring):\n                return count\n        elif c == substring[13]:\n\
    \            count += 1\n            if count == len(substring):\n           \
    \     return count\n        elif c == substring[14]:\n            count += 1\n\
    \            if count == len(substring):\n                return count\n     \
    \   elif c == substring[15]:\n            count += 1\n            if count ==\
    \ len(substring):\n                return count\n        elif c == substring[16]:\n\
    \            count += 1\n            if count == len(substring):\n           \
    \     return count\n        elif c == substring[17]:\n            count += 1\n\
    \            if count == len(substring):\n                return count\n     \
    \   elif c == substring[18]:\n            count += 1\n            if count ==\
    \ len(substring):\n                return count\n        elif c == substring[19]:\n\
    \            count += 1\n            if count == len(substring):\n           \
    \     return count\n        elif c == substring[20]:\n            count += 1\n\
    \            if count == len(substring):\n                return count\n     \
    \   elif c == substring[21]:\n            count += 1\n            if count ==\
    \ len(substring):\n                return count\n        elif c == substring[22]:\n\
    \            count += 1\n            if count == len(substring):\n           \
    \     return count\n        elif c == substring[23]:\n            count += 1\n\
    \            if count == len(substring):\n                return count\n     \
    \   elif c == substring[24]:\n            count += 1\n            if count ==\
    \ len(substring):\n                return count\n        elif c == substring[25]:\n\
    \            count += 1\n            if count == len(substring):\n           \
    \     return count\n        elif c == substring[26]:\n            count += 1\n\
    \            if count == len(substring):\n                return count\n     \
    \   elif c == substring[", "    count = 0\n    for c in string\n        if c ==\
    \ substring\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"abcabc\", \"abc\")\n\
    </cell>\n<code language=julia-1.4>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n\
    <code language=julia-1.4>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.4>\nhow_many_times(\"abcabc\", \"c\")\n</cell>\n<code language=julia-1.4>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"\
    abcabc\", \"bc\")\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"abcabc\"\
    , \"bc\")\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n\
    <code language=julia-1.4>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.4>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.4>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"\
    abcabc\", \"bc\")\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"abcabc\"\
    , \"bc\")\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n\
    <code language=julia-1.4>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.4>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.4>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"\
    abcabc\", \"bc\")\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"abcabc\"\
    , \"bc\")\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=", "    count = 0\n    for c in string:\n        if\
    \ c == substring[0]:\n            count += 1\n            if count > substring.length\n\
    \                count = 0\n        elif c == substring[substring.length]\n  \
    \          count += 1\n            if count > substring.length\n             \
    \   count = 0\n        else\n            count = 0\n    end\n    return count\n\
    end", "    \n    count = 0\n    \n    for c in string:\n        if c == substring:\n\
    \            count += 1\n        \n    return count\nend", "    \n    count =\
    \ 0\n    \n    for c in string:\n        if c == substring:\n            count\
    \ += 1\n            \n    return count\n    \nend\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bcc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bcc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bcc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bcc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bcc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcc\"\
    )\n</cell", "    \n    count = 0\n    \n    for char in string\n        if char\
    \ == substring\n            count += 1\n        end\n    end\n    \n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"\
    bb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbb\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabcbb\", \"bbc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabcbb\", \"bbc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"bbc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"\
    bbc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabcbb\", \"bbc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabcbb\", \"bbc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"bbc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"\
    bbc\")\n</cell", "    if string == \"\" then return 0\n    if substring == \"\"\
    \ then return 0\n    if substring == string then return 1\n    \n    substring\
    \ = lowercase(substring)\n    string = lowercase(string)\n    \n    substring\
    \ = substring(substring)\n    \n    count = 0\n    \n    for c in string:\n  \
    \      if c == substring then\n            count = count + 1\n        end\n  \
    \  end\n    \n    return count\nend\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    abcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcde\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdc\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"a\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bcde\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bcdc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"a\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcde\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"a\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bcde\")\n</cell", "    \n    count = 0\n    \n    for c in string\n      \
    \  if c == substring\n            count += 1\n        end\n    end\n    \n   \
    \ return count\nend\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"ab\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"\
    bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bb\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"a\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bb\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabcbb\", \"a\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabcbb\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"bb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"\
    a\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bb\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"a\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bb\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabcbb\", \"a\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabcbb\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"bb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"\
    a\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>", "    \n    count = 0\n    \n    for c\
    \ in string:\n        if c == substring[0]:\n            count += 1\n        \
    \    if count == len(substring):\n                return count\n        elif c\
    \ == substring[1]:\n            count += 1\n            if count == len(substring):\n\
    \                return count\n        elif c == substring[2]:\n            count\
    \ += 1\n            if count == len(substring):\n                return count\n\
    \        elif c == substring[3]:\n            count += 1\n            if count\
    \ == len(substring):\n                return count\n        elif c == substring[4]:\n\
    \            count += 1\n            if count == len(substring):\n           \
    \     return count\n        elif c == substring[5]:\n            count += 1\n\
    \            if count == len(substring):\n                return count\n     \
    \   elif c == substring[6]:\n            count += 1\n            if count == len(substring):\n\
    \                return count\n        elif c == substring[7]:\n            count\
    \ += 1\n            if count == len(substring):\n                return count\n\
    \        elif c == substring[8]:\n            count += 1\n            if count\
    \ == len(substring):\n                return count\n        elif c == substring[9]:\n\
    \            count += 1\n            if count == len(substring):\n           \
    \     return count\n        elif c == substring[10]:\n            count += 1\n\
    \            if count == len(substring):\n                return count\n     \
    \   elif c == substring[11]:\n            count += 1\n            if count ==\
    \ len(substring):\n                return count\n        elif c == substring[12]:\n\
    \            count += 1\n            if count == len(substring):\n           \
    \     return count\n        elif c == substring[13]:\n            count += 1\n\
    \            if count == len(substring):\n                return count\n     \
    \   elif c == substring[14]:\n            count += 1\n            if count ==\
    \ len(substring):\n                return count\n        elif c == substring[15]:\n\
    \            count += 1\n            if count == len(substring):\n           \
    \     return count\n        elif c == substring[16]:\n            count += 1\n\
    \            if count == len(substring):\n                return count\n     \
    \   elif c == substring[17]:\n            count += 1\n            if count ==\
    \ len(substring):\n                return count\n        elif c == substring[18]:\n\
    \            count += 1\n            if count == len(substring):\n           \
    \     return count\n        elif c == substring[19]:\n            count += 1\n\
    \            if count == len(substring):\n                return count\n     \
    \   elif c == substring[20]:\n            count += 1\n            if count ==\
    \ len(substring):\n                return count\n        elif c == substring[21]:\n\
    \            count += 1\n            if count == len(substring):\n           \
    \     return count\n        elif c == substring[22]:\n            count += 1\n\
    \            if count == len(substring):\n                return count\n     \
    \   elif c == substring[23]:\n            count += 1\n            if count ==\
    \ len(substring):\n                return count\n        elif c == substring[24]:\n\
    \            count += 1\n            if count == len(substring):\n           \
    \     return count\n        elif c == substring[25]:\n            count += 1\n\
    \            if count == len(substring):\n                return count\n     \
    \   elif c == substring[26]:\n            count += 1\n            if count ==\
    \ len(substring):\n                return count\n        elif c == ", "    \n\
    \    count = 0\n    \n    for char in string\n        if char == substring[1]\n\
    \            count += 1\n        elseif char == substring[2]\n            count\
    \ += 1\n        elseif char == substring[3]\n            count += 1\n        elseif\
    \ char == substring[4]\n            count += 1\n        elseif char == substring[5]\n\
    \            count += 1\n        elseif char == substring[6]\n            count\
    \ += 1\n        elseif char == substring[7]\n            count += 1\n        elseif\
    \ char == substring[8]\n            count += 1\n        elseif char == substring[9]\n\
    \            count += 1\n        elseif char == substring[10]\n            count\
    \ += 1\n        elseif char == substring[11]\n            count += 1\n       \
    \ elseif char == substring[12]\n            count += 1\n        elseif char ==\
    \ substring[13]\n            count += 1\n        elseif char == substring[14]\n\
    \            count += 1\n        elseif char == substring[15]\n            count\
    \ += 1\n        elseif char == substring[16]\n            count += 1\n       \
    \ elseif char == substring[17]\n            count += 1\n        elseif char ==\
    \ substring[18]\n            count += 1\n        elseif char == substring[19]\n\
    \            count += 1\n        elseif char == substring[20]\n            count\
    \ += 1\n        elseif char == substring[21]\n            count += 1\n       \
    \ elseif char == substring[22]\n            count += 1\n        elseif char ==\
    \ substring[23]\n            count += 1\n        elseif char == substring[24]\n\
    \            count += 1\n        elseif char == substring[25]\n            count\
    \ += 1\n        elseif char == substring[26]\n            count += 1\n       \
    \ elseif char == substring[27]\n            count += 1\n        elseif char ==\
    \ substring[28]\n            count += 1\n        elseif char == substring[29]\n\
    \            count += 1\n        elseif char == substring[30]\n            count\
    \ += 1\n        elseif char == substring[31]\n            count += 1\n       \
    \ elseif char == substring[32]\n            count += 1\n        elseif char ==\
    \ substring[33]\n            count += 1\n        elseif char == substring[34]\n\
    \            count += 1\n        elseif char == substring[35]\n            count\
    \ += 1\n        elseif char == substring[36]\n            count += 1\n       \
    \ elseif char == substring[37]\n            count += 1\n        elseif char ==\
    \ substring[38]\n            count += 1\n        elseif char == substring[39]\n\
    \            count += 1\n        elseif char == substring[40]\n            count\
    \ += 1\n        elseif char == substring[41]\n            count += 1\n       \
    \ elseif char == substring[42]\n            count += 1\n        elseif char ==\
    \ substring[43]\n            count += 1\n        elseif char == substring[44]",
  "    \n    count = 0\n    \n    for char in string\n        if char == substring\n\
    \            count += 1\n        end\n    end\n    \n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"abcde\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bcde\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bcd\")\n", "    \n    count = 0\n    \n    for c in string:\n        if c\
    \ == substring:\n            count += 1\n        \n    return count\nend", " \
    \   count = 0\n    for c in string:\n        if c == substring:\n            count\
    \ += 1\n    return count\nend", "    if string == \"\" then return 0\n    if substring\
    \ == \"\" then return 0\n    \n    local count = 0\n    local pos = 0\n    \n\
    \    while pos < string.len()\n        do\n            if string.sub(string, pos,\
    \ pos) == substring then\n                count = count + 1\n            end\n\
    \            pos = pos + 1\n        end\n    end\n    \n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"c\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bc", "    \n    count = 0\n    \n    for c in string:\n        if c == substring[0]:\n\
    \            count += 1\n            if count == len(substring):\n           \
    \     return count\n        elif c == substring[1]:\n            count += 1\n\
    \            if count == len(substring):\n                return count\n     \
    \   elif c == substring[2]:\n            count += 1\n            if count == len(substring):\n\
    \                return count\n        elif c == substring[3]:\n            count\
    \ += 1\n            if count == len(substring):\n                return count\n\
    \        elif c == substring[4]:\n            count += 1\n            if count\
    \ == len(substring):\n                return count\n        elif c == substring[5]:\n\
    \            count += 1\n            if count == len(substring):\n           \
    \     return count\n        elif c == substring[6]:\n            count += 1\n\
    \            if count == len(substring):\n                return count\n     \
    \   elif c == substring[7]:\n            count += 1\n            if count == len(substring):\n\
    \                return count\n        elif c == substring[8]:\n            count\
    \ += 1\n            if count == len(substring):\n                return count\n\
    \        elif c == substring[9]:\n            count += 1\n            if count\
    \ == len(substring):\n                return count\n        elif c == substring[10]:\n\
    \            count += 1\n            if count == len(substring):\n           \
    \     return count\n        elif c == substring[11]:\n            count += 1\n\
    \            if count == len(substring):\n                return count\n     \
    \   elif c == substring[12]:\n            count += 1\n            if count ==\
    \ len(substring):\n                return count\n        elif c == substring[13]:\n\
    \            count += 1\n            if count == len(substring):\n           \
    \     return count\n        elif c == substring[14]:\n            count += 1\n\
    \            if count == len(substring):\n                return count\n     \
    \   elif c == substring[15]:\n            count += 1\n            if count ==\
    \ len(substring):\n                return count\n        elif c == substring[16]:\n\
    \            count += 1\n            if count == len(substring):\n           \
    \     return count\n        elif c == substring[17]:\n            count += 1\n\
    \            if count == len(substring):\n                return count\n     \
    \   elif c == substring[18]:\n            count += 1\n            if count ==\
    \ len(substring):\n                return count\n        elif c == substring[19]:\n\
    \            count += 1\n            if count == len(substring):\n           \
    \     return count\n        elif c == substring[20]:\n            count += 1\n\
    \            if count == len(substring):\n                return count\n     \
    \   elif c == substring[21]:\n            count += 1\n            if count ==\
    \ len(substring):\n                return count\n        elif c == substring[22]:\n\
    \            count += 1\n            if count == len(substring):\n           \
    \     return count\n        elif c == substring[23]:\n            count += 1\n\
    \            if count == len(substring):\n                return count\n     \
    \   elif c == substring[24]:\n            count += 1\n            if count ==\
    \ len(substring):\n                return count\n        elif c == substring[25]:\n\
    \            count += 1\n            if count == len(substring):\n           \
    \     return count\n        elif c == substring[26]:\n            count += 1\n\
    \            if count == len(substring):\n                return count\n     \
    \   elif c == ", "    count = 0\n    for c in string:\n        if c == substring:\n\
    \            count += 1\n    return count\nend", "    \n    count = 0\n    \n\
    \    for c in string:\n        if c == substring:\n            count += 1\n  \
    \      \n    return count\n    \nend\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abba\", \"ab\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\",\
    \ \"aba\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"abba\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"abbb\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abba\", \"abbbb\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abba\", \"abbbba\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abba\", \"abbbbac\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abba\", \"abbbbac\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\"\
    , \"abbbbac\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"\
    abbbbac\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"abbbbac\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"abbbbac\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"abbbbac\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abba\", \"abbbbac\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abba\", \"abbbbac\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abba\", \"abbbbac\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abba\", \"abbbbac\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\"\
    , \"abbbbac\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"\
    abbbbac\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"abbbbac\"\
    )\n</cell>\n<code language=julia-1.5>\nho", "    count = 0\n    for c in string\n\
    \        if c == substring\n            count += 1\n        end\n    end\n   \
    \ return count\nend\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\"\
    , \"ab\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"bb\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"bbb\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abba\", \"abba\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abba\", \"abbb\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abba\", \"abbbb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abba\", \"abbbba\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\"\
    , \"abbbbba\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"\
    abbbbbac\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"abbbbbaca\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"abbbbbacab\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"abbbbbacabc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"abbbbbacabcc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"abbbbbacabccc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"abbbbbacabccca\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"abbbbbacabcccab\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"abbbbbacabcccabc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"abbbbbacabcccabcc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"abbbbbacabcccabccc\"\
    )\n</cell>\n<code language=juli", "    if string == \"\" then return 0\n    if\
    \ substring == \"\" then return 1\n    if string[0] == substring[0] then return\
    \ how_many_times(string[1:], substring[1:])\n    else return how_many_times(string[1:],\
    \ substring) + how_many_times(string, substring[1:])\nend", "    count = 0\n \
    \   \n    for char in string\n        if char == substring\n            count\
    \ += 1\n        end\n    end\n    \n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"abc\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of times the substring \"ab\" appears\
    \ in the string. \nHint: Use a for loop and a counter variable.", "    count =\
    \ 0\n    \n    for c in string\n        if substring == c\n            count +=\
    \ 1\n        end\n    end\n    \n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"abcde\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bcde\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"cde\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"de\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"dea\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"deab\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"deabc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"deabca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"deabcde\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"deabcdea\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"deabcdeab\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"deabcdeabc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"deabcdeabcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"deabcdeabcde\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"deabcdeabcdea\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"deabcdeabcdeab\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"deabcdeabcdeabc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"deabcdeabcdeabcd\")", "    count = 0\n    for c in string:\n     \
    \   if c == substring[0]:\n            count += 1\n            if count == len(substring):\n\
    \                return count\n        elif c == substring[1]:\n            count\
    \ += 1\n            if count == len(substring):\n                return count\n\
    \        elif c == substring[2]:\n            count += 1\n            if count\
    \ == len(substring):\n                return count\n        elif c == substring[3]:\n\
    \            count += 1\n            if count == len(substring):\n           \
    \     return count\n        elif c == substring[4]:\n            count += 1\n\
    \            if count == len(substring):\n                return count\n     \
    \   elif c == substring[5]:\n            count += 1\n            if count == len(substring):\n\
    \                return count\n        elif c == substring[6]:\n            count\
    \ += 1\n            if count == len(substring):\n                return count\n\
    \        elif c == substring[7]:\n            count += 1\n            if count\
    \ == len(substring):\n                return count\n        elif c == substring[8]:\n\
    \            count += 1\n            if count == len(substring):\n           \
    \     return count\n        elif c == substring[9]:\n            count += 1\n\
    \            if count == len(substring):\n                return count\n     \
    \   elif c == substring[10]:\n            count += 1\n            if count ==\
    \ len(substring):\n                return count\n        elif c == substring[11]:\n\
    \            count += 1\n            if count == len(substring):\n           \
    \     return count\n        elif c == substring[12]:\n            count += 1\n\
    \            if count == len(substring):\n                return count\n     \
    \   elif c == substring[13]:\n            count += 1\n            if count ==\
    \ len(substring):\n                return count\n        elif c == substring[14]:\n\
    \            count += 1\n            if count == len(substring):\n           \
    \     return count\n        elif c == substring[15]:\n            count += 1\n\
    \            if count == len(substring):\n                return count\n     \
    \   elif c == substring[16]:\n            count += 1\n            if count ==\
    \ len(substring):\n                return count\n        elif c == substring[17]:\n\
    \            count += 1\n            if count == len(substring):\n           \
    \     return count\n        elif c == substring[18]:\n            count += 1\n\
    \            if count == len(substring):\n                return count\n     \
    \   elif c == substring[19]:\n            count += 1\n            if count ==\
    \ len(substring):\n                return count\n        elif c == substring[20]:\n\
    \            count += 1\n            if count == len(substring):\n           \
    \     return count\n        elif c == substring[21]:\n            count += 1\n\
    \            if count == len(substring):\n                return count\n     \
    \   elif c == substring[22]:\n            count += 1\n            if count ==\
    \ len(substring):\n                return count\n        elif c == substring[23]:\n\
    \            count += 1\n            if count == len(substring):\n           \
    \     return count\n        elif c == substring[24]:\n            count += 1\n\
    \            if count == len(substring):\n                return count\n     \
    \   elif c == substring[25]:\n            count += 1\n            if count ==\
    \ len(substring):\n                return count\n        elif c == substring[26]:\n\
    \            count += 1\n            if count == len(substring):\n           \
    \     return count\n        elif c == substring[27]:", "    \n    count = 0\n\
    \    \n    for char in string\n        if char == substring\n            count\
    \ += 1\n        end\n    end\n    \n    return count\nend", "    count = 0\n \
    \   for c in string:\n        if c == substring:\n            count += 1\n   \
    \ return count\nend\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abcde\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcde\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"cde\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"de\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n", "    count = 0\n    for c in string:\n\
    \        if c == substring:\n            count += 1\n    return count\nend", " \
    \   \n    count = 0\n    \n    for c in string:\n        if c == substring:\n\
    \            count += 1\n        \n    return count\n    \nend\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"abc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"ab\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abca\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abcabc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abcabcabc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abcabcabcabc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abcabcabcabcabc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abcabcabcabcabcabc\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abcabcabcabcabcabcabc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abcabcabcabcabcabcabcabc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abcabcabcabcabcabcabcabcabc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abcabcabcabcabcabcabcabcabcabc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abcabcabcabcabcabcabcabcabcabcabc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abcabcabcabcabcabcabcabcabcabcabc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abcabcabcabcabcabcabcabcabcabcabcabc\"\
    )\n</cell>\n<code language=julia-1.5>", "    count = 0\n    for c in string\n\
    \        if c == substring\n            count += 1\n        end\n    end\n   \
    \ return count\nend", "    \n    count = 0\n    \n    for char in string\n   \
    \     if char == substring[1]\n            count += 1\n        end\n    end\n\
    \    \n    return count\nend\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bcb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcb\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bcb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bcc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcb\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcb\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bcc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bcb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bcc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcb\")", " \
    \   count = 0\n    for c in string:\n        if c == substring:\n            count\
    \ += 1\n    return count\nend", "    if string == \"\" || substring == \"\"\n\
    \        return 0\n    \n    count = 0\n    \n    for c in string\n        if\
    \ c == substring\n            count += 1\n        end\n    end\n    \n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"c\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"ab\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    abca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abcabc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abcabcabc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abcabcabcabc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abcabcabcabcabc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abcabcabcabcabcabc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abcabcabcabcabcabcabc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abcabcabcabcabcabcabcabc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abcabcabcabcabcabcabcabcabc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abcabcabcabcabcabcabcabcabcabc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abcabcabcabcabcabcabcabcabcabcabc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"", "    \n\
    \    count = 0\n    \n    for c in string:\n        if c == substring[0]:\n  \
    \          count += 1\n            if count == substring.length\n            \
    \    return count\n            \n        elif c == substring[1]:\n           \
    \ count += 1\n            if count == substring.length\n                return\
    \ count\n            \n        elif c == substring[2]:\n            count += 1\n\
    \            if count == substring.length\n                return count\n    \
    \        \n        elif c == substring[3]:\n            count += 1\n         \
    \   if count == substring.length\n                return count\n            \n\
    \        elif c == substring[4]:\n            count += 1\n            if count\
    \ == substring.length\n                return count\n            \n        elif\
    \ c == substring[5]:\n            count += 1\n            if count == substring.length\n\
    \                return count\n            \n        elif c == substring[6]:\n\
    \            count += 1\n            if count == substring.length\n          \
    \      return count\n            \n        elif c == substring[7]:\n         \
    \   count += 1\n            if count == substring.length\n                return\
    \ count\n            \n        elif c == substring[8]:\n            count += 1\n\
    \            if count == substring.length\n                return count\n    \
    \        \n        elif c == substring[9]:\n            count += 1\n         \
    \   if count == substring.length\n                return count\n            \n\
    \        elif c == substring[10]:\n            count += 1\n            if count\
    \ == substring.length\n                return count\n            \n        elif\
    \ c == substring[11]:\n            count += 1\n            if count == substring.length\n\
    \                return count\n            \n        elif c == substring[12]:\n\
    \            count += 1\n            if count == substring.length\n          \
    \      return count\n            \n        elif c == substring[13]:\n        \
    \    count += 1\n            if count == substring.length\n                return\
    \ count\n            \n        elif c == substring[14]:\n            count +=\
    \ 1\n            if count == substring.length\n                return count\n\
    \            \n        elif c == substring[15]:\n            count += 1\n    \
    \        if count == substring.length\n                return count\n        \
    \    \n        elif c == substring[16]:\n            count += 1\n            if\
    \ count == substring.length\n                return count\n            \n    \
    \    elif c == substring[17]:\n            count += 1\n            if count ==\
    \ substring.length\n                return count\n            \n        elif c\
    \ == substring[18]:\n            count += 1\n            if count == substring.length\n\
    \                return count\n            \n        elif c == substring[19]:\n\
    \            count += 1\n            if count == substring.length\n          \
    \      return count\n            \n        elif c == substring[20]:\n        \
    \    count += 1\n            if count == substring.length\n                return\
    \ count\n            \n        elif c == substring[21]:\n            count +=\
    \ 1\n            if count == substring.length\n                return count\n\
    \            \n        elif c == substring[22]:\n            count += 1\n    \
    \        if count == substring.length\n                return count\n        \
    \    \n        elif c == substring[23]:\n            count += 1\n            if\
    \ count == substring.length\n                return count\n            \n    \
    \    elif c == substring[24]:\n            count += 1\n            if count ==\
    \ substring.length\n                return count\n            \n        elif c\
    \ == substring[25]:\n            count += 1\n            if count == substring.length\n",
  "    count = 0\n    for c in string:\n        if c == substring:\n            count\
    \ += 1\n    return count\nend", "    \n    count = 0\n    \n    for c in string:\n\
    \        if c == substring[0]:\n            count += 1\n            if count >\
    \ substring[1]:\n                break\n        else:\n            count = 0\n\
    \    \n    return count\nend", "    count = 0\n    \n    for c in string:\n  \
    \      if c == substring[0]:\n            count += 1\n            \n         \
    \   if substring[1:] == string[count+1:]:\n                return count\n    \
    \        \n            count += how_many_times(string[count+1:], substring[1:])\n\
    \            \n    return count\nend", "    if string == \"\" || substring ==\
    \ \"\"\n        return 0\n    \n    count = 0\n    \n    for c in string\n   \
    \     if c == substring[0]\n            count += 1\n        elseif c == substring[1]\n\
    \            count += 1\n        elseif c == substring[2]\n            count +=\
    \ 1\n        elseif c == substring[3]\n            count += 1\n        elseif\
    \ c == substring[4]\n            count += 1\n        elseif c == substring[5]\n\
    \            count += 1\n        elseif c == substring[6]\n            count +=\
    \ 1\n        elseif c == substring[7]\n            count += 1\n        elseif\
    \ c == substring[8]\n            count += 1\n        elseif c == substring[9]\n\
    \            count += 1\n        elseif c == substring[10]\n            count\
    \ += 1\n        elseif c == substring[11]\n            count += 1\n        elseif\
    \ c == substring[12]\n            count += 1\n        elseif c == substring[13]\n\
    \            count += 1\n        elseif c == substring[14]\n            count\
    \ += 1\n        elseif c == substring[15]\n            count += 1\n        elseif\
    \ c == substring[16]\n            count += 1\n        elseif c == substring[17]\n\
    \            count += 1\n        elseif c == substring[18]\n            count\
    \ += 1\n        elseif c == substring[19]\n            count += 1\n        elseif\
    \ c == substring[20]\n            count += 1\n        elseif c == substring[21]\n\
    \            count += 1\n        elseif c == substring[22]\n            count\
    \ += 1\n        elseif c == substring[23]\n            count += 1\n        elseif\
    \ c == substring[24]\n            count += 1\n        elseif c == substring[25]\n\
    \            count += 1\n        elseif c == substring[26]\n            count\
    \ += 1\n        elseif c == substring[27]\n            count += 1\n        elseif\
    \ c == substring[28]\n            count += 1\n        elseif c == substring[29]\n\
    \            count += 1\n        elseif c == substring[30]\n            count\
    \ += 1\n        elseif c == substring[31]\n            count += 1\n        elseif\
    \ c == substring[32]\n            count += 1\n        elseif c == substring[33]\n\
    \            count += 1\n        elseif c == substring[34]\n            count\
    \ += 1\n        elseif c == substring[35]\n            count += 1\n        elseif\
    \ c == substring[36]\n            count += 1\n        elseif c == substring[37]\n\
    \            count += 1\n        elseif c == substring[38]\n            count\
    \ += 1\n        elseif c == substring[39]\n            count += 1\n        elseif\
    \ c == substring[40]\n            count += 1\n        elseif c == substring[41]\n\
    \            count += 1\n        elseif c == substring[42]\n            count\
    \ += 1\n        elseif c == substring[43]\n            count += 1\n        elseif\
    \ c == substring[44]\n            count += 1\n        elseif c == substring[45]\n\
    \            count += 1\n        elseif c == substring[46]\n", "    \n    count\
    \ = 0\n    \n    for char in string\n        if char == substring\n          \
    \  count += 1\n        end\n    end\n    \n    return count\nend\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"abc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"abcde\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bcde\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    cde\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"de\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"e\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcde\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"cde\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"de\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"e\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcde\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"cde\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"de\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"e\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bcde\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"cde\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    de\")\n</cell>\n<code language=julia-1.5>\n", "    count = 0\n    for c in string:\n\
    \        if c == substring:\n            count += 1\n    return count\nend", " \
    \   \n    count = 0\n    \n    for char in string\n        if char == substring\n\
    \            count += 1\n        end\n    end\n    \n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"abc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bcc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabcbb\", \"bb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabcbb\", \"a\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"ab\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"\
    bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbb\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bb\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bb\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bb\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabcbb\", \"bb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabcbb\", \"bb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"bb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"\
    bb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bb\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bb\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bb\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bb\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bb\")\n</cell", "    count\
    \ = 0\n    for c in string\n        if c == substring\n            count += 1\n\
    \        end\n    end\n    return count\nend", "    count = 0\n    for c in string:\n\
    \        if c == substring:\n            count += 1\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=juli", "    \n    count = 0\n    \n    for char in string\n       \
    \ if char == substring[1]\n            count += 1\n        elseif char == substring[2]\n\
    \            count += 1\n        elseif char == substring[3]\n            count\
    \ += 1\n        elseif char == substring[4]\n            count += 1\n        elseif\
    \ char == substring[5]\n            count += 1\n        elseif char == substring[6]\n\
    \            count += 1\n        elseif char == substring[7]\n            count\
    \ += 1\n        elseif char == substring[8]\n            count += 1\n        elseif\
    \ char == substring[9]\n            count += 1\n        elseif char == substring[10]\n\
    \            count += 1\n        elseif char == substring[11]\n            count\
    \ += 1\n        elseif char == substring[12]\n            count += 1\n       \
    \ elseif char == substring[13]\n            count += 1\n        elseif char ==\
    \ substring[14]\n            count += 1\n        elseif char == substring[15]\n\
    \            count += 1\n        elseif char == substring[16]\n            count\
    \ += 1\n        elseif char == substring[17]\n            count += 1\n       \
    \ elseif char == substring[18]\n            count += 1\n        elseif char ==\
    \ substring[19]\n            count += 1\n        elseif char == substring[20]\n\
    \            count += 1\n        elseif char == substring[21]\n            count\
    \ += 1\n        elseif char == substring[22]\n            count += 1\n       \
    \ elseif char == substring[23]\n            count += 1\n        elseif char ==\
    \ substring[24]\n            count += 1\n        elseif char == substring[25]\n\
    \            count += 1\n        elseif char == substring[26]\n            count\
    \ += 1\n        elseif char == substring[27]\n            count += 1\n       \
    \ elseif char == substring[28]\n            count += 1\n        elseif char ==\
    \ substring[29]\n            count += 1\n        elseif char == substring[30]\n\
    \            count += 1\n        elseif char == substring[31]\n            count\
    \ += 1\n        elseif char == substring[32]\n            count += 1\n       \
    \ elseif char == substring[33]\n            count += 1\n        elseif char ==\
    \ substring[34]\n            count += 1\n        elseif char == substring[35]\n\
    \            count += 1\n        elseif char == substring[36]\n            count\
    \ += 1\n        elseif char == substring[37]\n            count += 1\n       \
    \ elseif char == substring[38]\n            count += 1\n        elseif char ==\
    \ substring[39]\n            count += 1\n        elseif char == substring[40]\n\
    \            count += 1\n        elseif char == substring[41]\n            count\
    \ += 1\n        elseif char == substring[42]\n            count += 1\n       \
    \ elseif char == substring[43]\n            count += 1\n        elseif char ==\
    \ substring[44]", "    count = 0\n    for c in string:\n        if substring ==\
    \ c:\n            count += 1\n    return count\nend", "    count = 0\n    for\
    \ c in string:\n        if c == substring:\n            count += 1\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.3>\nhow_many_times(\"hello\", \"\
    hell\")\n</cell>\n<code language=julia-1.3>\nhow_many_times(\"hello\", \"he\"\
    )\n</cell>\n<code language=julia-1.3>\nhow_many_times(\"hello\", \"hey\")\n</cell>\n\
    <code language=julia-1.3>\nhow_many_times(\"hello\", \"helllo\")\n</cell>\n<code\
    \ language=julia-1.3>\nhow_many_times(\"hello\", \"helllo\")\n</cell>\n<code language=julia-1.3>\n\
    how_many_times(\"hello\", \"helllo\")\n</cell>\n<code language=julia-1.3>\nhow_many_times(\"\
    hello\", \"helllo\")\n</cell>\n<code language=julia-1.3>\nhow_many_times(\"hello\"\
    , \"helllo\")\n</cell>\n<code language=julia-1.3>\nhow_many_times(\"hello\", \"\
    helllo\")\n</cell>\n<code language=julia-1.3>\nhow_many_times(\"hello\", \"helllo\"\
    )\n</cell>\n<code language=julia-1.3>\nhow_many_times(\"hello\", \"helllo\")\n\
    </cell>\n<code language=julia-1.3>\nhow_many_times(\"hello\", \"helllo\")\n</cell>\n\
    <code language=julia-1.3>\nhow_many_times(\"hello\", \"helllo\")\n</cell>\n<code\
    \ language=julia-1.3>\nhow_many_times(\"hello\", \"helllo\")\n</cell>\n<code language=julia-1.3>\n\
    how_many_times(\"hello\", \"helllo\")\n</cell>\n<code language=julia-1.3>\nhow_many_times(\"\
    hello\", \"helllo\")\n</cell>\n<code language=julia-1.3>\nhow_many_times(\"hello\"\
    , \"helllo\")\n</cell>\n<code language=julia-1.3>\nhow_many_times(\"hello\", \"\
    helllo\")\n</cell>\n<code language=julia-1.3>\nhow_many_times(\"hello\", \"helllo\"\
    )\n</cell>\n<code language=julia-1.3>\nhow_many_times(\"hello\", \"helllo\")\n\
    </cell>\n<code language=julia-1.3>\nhow_many_times(\"hello\", \"helllo\")\n</cell>\n\
    <code language=julia-1.3>\nhow_many_", "    count = 0\n    for c in string\n \
    \       if c == substring\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    if string == \"\" || substring == \"\"\n        return 0 \n\
    \    end\n    \n    count = 0\n    \n    for c in string\n        if c == substring[1]\n\
    \            count += 1\n        elseif c == substring[2]\n            count +=\
    \ 1\n        elseif c == substring[3]\n            count += 1\n        elseif\
    \ c == substring[4]\n            count += 1\n        elseif c == substring[5]\n\
    \            count += 1\n        elseif c == substring[6]\n            count +=\
    \ 1\n        elseif c == substring[7]\n            count += 1\n        elseif\
    \ c == substring[8]\n            count += 1\n        elseif c == substring[9]\n\
    \            count += 1\n        elseif c == substring[10]\n            count\
    \ += 1\n        elseif c == substring[11]\n            count += 1\n        elseif\
    \ c == substring[12]\n            count += 1\n        elseif c == substring[13]\n\
    \            count += 1\n        elseif c == substring[14]\n            count\
    \ += 1\n        elseif c == substring[15]\n            count += 1\n        elseif\
    \ c == substring[16]\n            count += 1\n        elseif c == substring[17]\n\
    \            count += 1\n        elseif c == substring[18]\n            count\
    \ += 1\n        elseif c == substring[19]\n            count += 1\n        elseif\
    \ c == substring[20]\n            count += 1\n        elseif c == substring[21]\n\
    \            count += 1\n        elseif c == substring[22]\n            count\
    \ += 1\n        elseif c == substring[23]\n            count += 1\n        elseif\
    \ c == substring[24]\n            count += 1\n        elseif c == substring[25]\n\
    \            count += 1\n        elseif c == substring[26]\n            count\
    \ += 1\n        elseif c == substring[27]\n            count += 1\n        elseif\
    \ c == substring[28]\n            count += 1\n        elseif c == substring[29]\n\
    \            count += 1\n        elseif c == substring[30]\n            count\
    \ += 1\n        elseif c == substring[31]\n            count += 1\n        elseif\
    \ c == substring[32]\n            count += 1\n        elseif c == substring[33]\n\
    \            count += 1\n        elseif c == substring[34]\n            count\
    \ += 1\n        elseif c == substring[35]\n            count += 1\n        elseif\
    \ c == substring[36]\n            count += 1\n        elseif c == substring[37]\n\
    \            count += 1\n        elseif c == substring[38]\n            count\
    \ += 1\n        elseif c == substring[39]\n            count += 1\n        elseif\
    \ c == substring[40]\n            count += 1\n        elseif c == substring[41]\n\
    \            count += 1\n        elseif c == substring[42]\n            count\
    \ += 1\n        elseif c == substring[43]\n            count += 1\n        elseif\
    \ c == substring[44]\n            count += 1\n        elseif c == substring[45]\n\
    \            count += 1\n        elseif c == substring[46]\n            count\
    \ += 1\n        elseif c == ", "    if string == \"\" || substring == \"\"\n \
    \       return 0\n    \n    substring = lowercase(substring)\n    string = lowercase(string)\n\
    \    \n    count = 0\n    \n    for char in string\n        if char == substring[1]\n\
    \            count += 1\n        end\n    end\n    \n    return count\nend", " \
    \   if string == \"\" || substring == \"\"\n        return 0\n    end\n    \n\
    \    count = 0\n    \n    for c in string\n        if c == substring[1]\n    \
    \        count += 1\n        elseif c == substring[2]\n            count += 1\n\
    \        elseif c == substring[3]\n            count += 1\n        elseif c ==\
    \ substring[4]\n            count += 1\n        elseif c == substring[5]\n   \
    \         count += 1\n        elseif c == substring[6]\n            count += 1\n\
    \        elseif c == substring[7]\n            count += 1\n        elseif c ==\
    \ substring[8]\n            count += 1\n        elseif c == substring[9]\n   \
    \         count += 1\n        elseif c == substring[10]\n            count +=\
    \ 1\n        elseif c == substring[11]\n            count += 1\n        elseif\
    \ c == substring[12]\n            count += 1\n        elseif c == substring[13]\n\
    \            count += 1\n        elseif c == substring[14]\n            count\
    \ += 1\n        elseif c == substring[15]\n            count += 1\n        elseif\
    \ c == substring[16]\n            count += 1\n        elseif c == substring[17]\n\
    \            count += 1\n        elseif c == substring[18]\n            count\
    \ += 1\n        elseif c == substring[19]\n            count += 1\n        elseif\
    \ c == substring[20]\n            count += 1\n        elseif c == substring[21]\n\
    \            count += 1\n        elseif c == substring[22]\n            count\
    \ += 1\n        elseif c == substring[23]\n            count += 1\n        elseif\
    \ c == substring[24]\n            count += 1\n        elseif c == substring[25]\n\
    \            count += 1\n        elseif c == substring[26]\n            count\
    \ += 1\n        elseif c == substring[27]\n            count += 1\n        elseif\
    \ c == substring[28]\n            count += 1\n        elseif c == substring[29]\n\
    \            count += 1\n        elseif c == substring[30]\n            count\
    \ += 1\n        elseif c == substring[31]\n            count += 1\n        elseif\
    \ c == substring[32]\n            count += 1\n        elseif c == substring[33]\n\
    \            count += 1\n        elseif c == substring[34]\n            count\
    \ += 1\n        elseif c == substring[35]\n            count += 1\n        elseif\
    \ c == substring[36]\n            count += 1\n        elseif c == substring[37]\n\
    \            count += 1\n        elseif c == substring[38]\n            count\
    \ += 1\n        elseif c == substring[39]\n            count += 1\n        elseif\
    \ c == substring[40]\n            count += 1\n        elseif c == substring[41]\n\
    \            count += 1\n        elseif c == substring[42]\n            count\
    \ += 1\n        elseif c == substring[43]\n            count += 1\n        elseif\
    \ c == substring[44]\n            count += 1\n        elseif c == substring[45]\n\
    \            count += 1\n        elseif c == substring[46]\n            count\
    \ += 1\n        elseif c == substring", "    if string == \"\" || substring ==\
    \ \"\"\n        return 0\n    end\n    \n    substring = lowercase(substring)\n\
    \    string = lowercase(string)\n    \n    count = 0\n    \n    for c in string\n\
    \        if c == substring[1]\n            count += 1\n        elseif c == substring[2]\n\
    \            count += 1\n        elseif c == substring[3]\n            count +=\
    \ 1\n        elseif c == substring[4]\n            count += 1\n        elseif\
    \ c == substring[5]\n            count += 1\n        elseif c == substring[6]\n\
    \            count += 1\n        elseif c == substring[7]\n            count +=\
    \ 1\n        elseif c == substring[8]\n            count += 1\n        elseif\
    \ c == substring[9]\n            count += 1\n        elseif c == substring[10]\n\
    \            count += 1\n        elseif c == substring[11]\n            count\
    \ += 1\n        elseif c == substring[12]\n            count += 1\n        elseif\
    \ c == substring[13]\n            count += 1\n        elseif c == substring[14]\n\
    \            count += 1\n        elseif c == substring[15]\n            count\
    \ += 1\n        elseif c == substring[16]\n            count += 1\n        elseif\
    \ c == substring[17]\n            count += 1\n        elseif c == substring[18]\n\
    \            count += 1\n        elseif c == substring[19]\n            count\
    \ += 1\n        elseif c == substring[20]\n            count += 1\n        elseif\
    \ c == substring[21]\n            count += 1\n        elseif c == substring[22]\n\
    \            count += 1\n        elseif c == substring[23]\n            count\
    \ += 1\n        elseif c == substring[24]\n            count += 1\n        elseif\
    \ c == substring[25]\n            count += 1\n        elseif c == substring[26]\n\
    \            count += 1\n        elseif c == substring[27]\n            count\
    \ += 1\n        elseif c == substring[28]\n            count += 1\n        elseif\
    \ c == substring[29]\n            count += 1\n        elseif c == substring[30]\n\
    \            count += 1\n        elseif c == substring[31]\n            count\
    \ += 1\n        elseif c == substring[32]\n            count += 1\n        elseif\
    \ c == substring[33]\n            count += 1\n        elseif c == substring[34]\n\
    \            count += 1\n        elseif c == substring[35]\n            count\
    \ += 1\n        elseif c == substring[36]\n            count += 1\n        elseif\
    \ c == substring[37]\n            count += 1\n        elseif c == substring[38]\n\
    \            count += 1\n        elseif c == substring[39]\n            count\
    \ += 1\n        elseif c == substring[40]\n            count += 1\n        elseif\
    \ c == substring[41]\n            count += 1\n        elseif c == substring[42]\n\
    \            count += 1\n        elseif c == substring[43]\n            count\
    \ += 1\n        elseif c == substring[44]\n            count += 1\n        elseif\
    \ c == substring[45]\n            count += 1", "    \n    count = 0\n    \n  \
    \  for c in string\n        if c == substring\n            count += 1\n      \
    \  end\n    end\n    \n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abba\", \"ab\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abba\", \"ba\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\",\
    \ \"bb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"a\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"bbb\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abba\", \"abba\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abba\", \"abbb\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abba\", \"abbbb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abba\", \"abbbba\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\"\
    , \"abbbbac\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"\
    abbbbac\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"abbbbac\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"abbbbac\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"abbbbac\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abba\", \"abbbbac\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abba\", \"abbbbac\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abba\", \"abbbbac\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abba\", \"abbbbac\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\"\
    , \"abbbbac\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"\
    abbbbac\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"ab", "    if\
    \ string == \"\" || substring == \"\"\n        return 0\n    \n    count = 0\n\
    \    \n    for c in string\n        if c == substring\n            count += 1\n\
    \        else\n            count = 0\n    end\n    \n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n",
  "    if string == \"\" || substring == \"\"\n        return 0\n    else \n     \
    \   string_length = string.length\n        substring_length = substring.length\n\
    \        count = 0\n        for i in 0..string_length\n            if string[i]\
    \ == substring[0]\n                count += 1\n                for j in 1..substring_length\n\
    \                    if string[i + j] != substring[j]\n                      \
    \  count += 1\n            else\n                break\n        end\n        return\
    \ count\n    end\nend\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcb\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcb\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bcc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bcb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bcc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcb\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bcb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bcc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bcb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcc",
  "    \n    count = 0\n    \n    for c in string:\n        if c == substring[0]:\n\
    \            count += 1\n            if count == len(substring):\n           \
    \     return count\n        elif c == substring[1]:\n            count += 1\n\
    \            if count == len(substring):\n                return count\n     \
    \   else:\n            count = 0\n    \n    return count\n</cell>\n<code language=julia-1.1>\n\
    how_many_times(\"abcabc\", \"abc\")\n</cell>\n<code language=julia-1.1>\nhow_many_times(\"\
    abcabc\", \"bca\")\n</cell>\n<code language=julia-1.1>\nhow_many_times(\"abcabc\"\
    , \"ab\")\n</cell>\n<code language=julia-1.1>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.1>\nhow_many_times(\"abcabc\", \"c\")\n</cell>\n\
    <code language=julia-1.1>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.1>\nhow_many_times(\"abcabc\", \"ab\")\n</cell>\n<code language=julia-1.1>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.1>\nhow_many_times(\"\
    abcabc\", \"ab\")\n</cell>\n<code language=julia-1.1>\nhow_many_times(\"abcabc\"\
    , \"bc\")\n</cell>\n<code language=julia-1.1>\nhow_many_times(\"abcabc\", \"ab\"\
    )\n</cell>\n<code language=julia-1.1>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n\
    <code language=julia-1.1>\nhow_many_times(\"abcabc\", \"ab\")\n</cell>\n<code\
    \ language=julia-1.1>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.1>\n\
    how_many_times(\"abcabc\", \"ab\")\n</cell>\n<code language=julia-1.1>\nhow_many_times(\"\
    abcabc\", \"bc\")\n</cell>\n<code language=julia-1.1>\nhow_many_times(\"abcabc\"\
    , \"ab\")\n</cell>\n<code language=julia-1.1>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.1>\nhow_many_times(\"abcabc\", \"ab\")\n</cell>\n\
    <code language=julia-1.1>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.1>\nhow_many_times(\"ab", "    \n    count = 0\n    \n    for\
    \ char in string\n        if char == substring\n            count += 1\n     \
    \   end\n    end\n    \n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"hello\", \"llo\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    hello\", \"he\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"hello\"\
    , \"hey\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"hello\", \"hey\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"hello\", \"hey\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"hello\", \"hey\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"hello\", \"hey\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"hello\", \"hey\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    hello\", \"hey\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"hello\"\
    , \"hey\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"hello\", \"hey\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"hello\", \"hey\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"hello\", \"hey\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"hello\", \"hey\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"hello\", \"hey\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    hello\", \"hey\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"hello\"\
    , \"hey\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"hello\", \"hey\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"hello\", \"hey\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"hello\", \"hey\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"hello\", \"hey\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"hello\", \"hey\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    hello\", \"he", "    count = 0\n    \n    for c in string:\n        if c == substring[0]:\n\
    \            count += 1\n            if count > substring.length\n           \
    \     return substring.length\n        \n        if c == substring[substring.length]\n\
    \            count += 1\n            if count > substring.length\n           \
    \     return substring.length\n            \n    return count\nend", "    if string\
    \ == \"\" || substring == \"\"\n        return 0\n    end\n    \n    i = 0\n \
    \   j = string.length - 1\n    \n    while i <= j\n        if string[i] == substring[0]\n\
    \            i += 1\n        elseif string[j] == substring[1]\n            j -=\
    \ 1\n        else\n            if string[i] == substring[1]\n                i\
    \ += 1\n            elseif string[j] == substring[0]\n                j -= 1\n\
    \            else\n                i += 1\n                j -= 1\n          \
    \  end\n        end\n    end\n    return j\nend\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abba\", \"ab\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abba\", \"ba\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\",\
    \ \"bb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"aba\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\", \"abba\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abba\", \"abbb\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abba\", \"abbbb\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abba\", \"abbbba\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abba\", \"abbbbba\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\"\
    , \"abbbbbac\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\",\
    \ \"abbbbbac\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\",\
    \ \"abbbbbacc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\"\
    , \"abbbbbaccc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\"\
    , \"abbbbbaccc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\"\
    , \"abbbbbaccc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\"\
    , \"abbbbbaccc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abba\"\
    , \"abbbbbaccc\")\n</cell>", "    if string == \"\" || substring == \"\"\n   \
    \     return 0\n    end\n    \n    count = 0\n    \n    for c in string\n    \
    \    if c == substring[1]\n            count += 1\n        elseif c == substring[2]\n\
    \            count += 1\n        elseif c == substring[3]\n            count +=\
    \ 1\n        elseif c == substring[4]\n            count += 1\n        elseif\
    \ c == substring[5]\n            count += 1\n        elseif c == substring[6]\n\
    \            count += 1\n        elseif c == substring[7]\n            count +=\
    \ 1\n        elseif c == substring[8]\n            count += 1\n        elseif\
    \ c == substring[9]\n            count += 1\n        elseif c == substring[10]\n\
    \            count += 1\n        elseif c == substring[11]\n            count\
    \ += 1\n        elseif c == substring[12]\n            count += 1\n        elseif\
    \ c == substring[13]\n            count += 1\n        elseif c == substring[14]\n\
    \            count += 1\n        elseif c == substring[15]\n            count\
    \ += 1\n        elseif c == substring[16]\n            count += 1\n        elseif\
    \ c == substring[17]\n            count += 1\n        elseif c == substring[18]\n\
    \            count += 1\n        elseif c == substring[19]\n            count\
    \ += 1\n        elseif c == substring[20]\n            count += 1\n        elseif\
    \ c == substring[21]\n            count += 1\n        elseif c == substring[22]\n\
    \            count += 1\n        elseif c == substring[23]\n            count\
    \ += 1\n        elseif c == substring[24]\n            count += 1\n        elseif\
    \ c == substring[25]\n            count += 1\n        elseif c == substring[26]\n\
    \            count += 1\n        elseif c == substring[27]\n            count\
    \ += 1\n        elseif c == substring[28]\n            count += 1\n        elseif\
    \ c == substring[29]\n            count += 1\n        elseif c == substring[30]\n\
    \            count += 1\n        elseif c == substring[31]\n            count\
    \ += 1\n        elseif c == substring[32]\n            count += 1\n        elseif\
    \ c == substring[33]\n            count += 1\n        elseif c == substring[34]\n\
    \            count += 1\n        elseif c == substring[35]\n            count\
    \ += 1\n        elseif c == substring[36]\n            count += 1\n        elseif\
    \ c == substring[37]\n            count += 1\n        elseif c == substring[38]\n\
    \            count += 1\n        elseif c == substring[39]\n            count\
    \ += 1\n        elseif c == substring[40]\n            count += 1\n        elseif\
    \ c == substring[41]\n            count += 1\n        elseif c == substring[42]\n\
    \            count += 1\n        elseif c == substring[43]\n            count\
    \ += 1\n        elseif c == substring[44]\n            count += 1\n        elseif\
    \ c == substring[45]\n            count += 1\n        elseif c == substring[46]\n\
    \            count += 1\n        elseif c == substring", "    count = 0\n    for\
    \ c in string\n        if c == substring\n            count += 1\n        end\n\
    \    end\n    return count\nend", "    if string == \"\" || substring == \"\"\n\
    \        return 0\n    \n    count = 0\n    \n    for c in string\n        if\
    \ c == substring\n            count += 1\n        end\n    end\n    \n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"c\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"d\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bcde\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bcdef\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bcdefg\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefgh\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghij\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijk\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijkl\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijklm\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijklmn\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijklmno\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijklmnop\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijklmnopq\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijklmnopqr\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdef", " \
    \   count = 0\n    for c in string\n        if substring == c\n            count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"c\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>", "    if string == \"\" || substring\
    \ == \"\"\n        return 0\n    end\n    \n    count = 0\n    \n    for char\
    \ in string\n        if char == substring[1]\n            count += 1\n       \
    \ end\n    end\n    \n    return count\nend", "    count = 0\n    for c in string\n\
    \        if c == substring\n            count += 1\n        end\n    end\n   \
    \ return count\nend", "    count = 0\n    for c in string:\n        if c == substring:\n\
    \            count += 1\n    return count\nend", "    count = 0\n    for c in\
    \ string\n        if c == substring\n            count += 1\n        end\n   \
    \ end\n    return count\nend", "    if string == \"\" then return 0\n    if substring\
    \ == \"\" then return 0\n    if substring in string then return 1\n    \n    count\
    \ = 0\n    \n    for c in string:\n        if c == substring[0] then\n       \
    \     count = count + 1\n            \n            if substring[1:] \u2209 string\
    \ then\n                count = count + 1\n            \n            if substring[1:]\
    \ == string then\n                count = count + 1\n            \n          \
    \  if substring[1:] == string[1:] then\n                count = count + 1\n  \
    \          \n            if substring[1:] == string[1:] then\n               \
    \ count = count + 1\n            \n            if substring[1:] == string[1:]\
    \ then\n                count = count + 1\n            \n            if substring[1:]\
    \ == string[1:] then\n                count = count + 1\n            \n      \
    \      if substring[1:] == string[1:] then\n                count = count + 1\n\
    \            \n            if substring[1:] == string[1:] then\n             \
    \   count = count + 1\n            \n            if substring[1:] == string[1:]\
    \ then\n                count = count + 1\n            \n            if substring[1:]\
    \ == string[1:] then\n                count = count + 1\n            \n      \
    \      if substring[1:] == string[1:] then\n                count = count + 1\n\
    \            \n            if substring[1:] == string[1:] then\n             \
    \   count = count + 1\n            \n            if substring[1:] == string[1:]\
    \ then\n                count = count + 1\n            \n            if substring[1:]\
    \ == string[1:] then\n                count = count + 1\n            \n      \
    \      if substring[1:] == string[1:] then\n                count = count + 1\n\
    \            \n            if substring[1:] == string[1:] then\n             \
    \   count = count + 1\n            \n            if substring[1:] == string[1:]\
    \ then\n                count = count + 1\n            \n            if substring[1:]\
    \ == string[1:] then\n                count = count + 1\n            \n      \
    \      if substring[1:] == string[1:] then\n                count = count + 1\n\
    \            \n            if substring[1:] == string[1:] then\n             \
    \   count = count + 1\n            \n            if substring[1:] == string[1:]\
    \ then\n                count = count + 1\n            \n            if substring[1:]\
    \ == string[1:] then\n                count = count + 1\n            \n      \
    \      if substring[1:] == string[1:] then\n                count = count + 1\n\
    \            \n            if substring[1:] == string[1:] then\n             \
    \   count = count + 1\n            \n            if substring[1:] == string[1:]\
    \ then\n                count = count + 1\n            \n            if substring[1:]\
    \ == string[1:] then\n                count = count + 1\n            \n      \
    \      if substring[1:] == string[1:] then\n                count = count + 1\n\
    \            \n            if substring[1:] == string[1:] then\n             \
    \   count = count + 1\n            \n            if substring[1:] == string[1:]\
    \ then\n                count = count + 1\n            ", "    count = 0\n   \
    \ \n    for char in string\n        if char == substring[1]\n            count\
    \ += 1\n        elseif char == substring[2]\n            count += 1\n        elseif\
    \ char == substring[3]\n            count += 1\n        elseif char == substring[4]\n\
    \            count += 1\n        elseif char == substring[5]\n            count\
    \ += 1\n        elseif char == substring[6]\n            count += 1\n        elseif\
    \ char == substring[7]\n            count += 1\n        elseif char == substring[8]\n\
    \            count += 1\n        elseif char == substring[9]\n            count\
    \ += 1\n        elseif char == substring[10]\n            count += 1\n       \
    \ elseif char == substring[11]\n            count += 1\n        elseif char ==\
    \ substring[12]\n            count += 1\n        elseif char == substring[13]\n\
    \            count += 1\n        elseif char == substring[14]\n            count\
    \ += 1\n        elseif char == substring[15]\n            count += 1\n       \
    \ elseif char == substring[16]\n            count += 1\n        elseif char ==\
    \ substring[17]\n            count += 1\n        elseif char == substring[18]\n\
    \            count += 1\n        elseif char == substring[19]\n            count\
    \ += 1\n        elseif char == substring[20]\n            count += 1\n       \
    \ elseif char == substring[21]\n            count += 1\n        elseif char ==\
    \ substring[22]\n            count += 1\n        elseif char == substring[23]\n\
    \            count += 1\n        elseif char == substring[24]\n            count\
    \ += 1\n        elseif char == substring[25]\n            count += 1\n       \
    \ elseif char == substring[26]\n            count += 1\n        elseif char ==\
    \ substring[27]\n            count += 1\n        elseif char == substring[28]\n\
    \            count += 1\n        elseif char == substring[29]\n            count\
    \ += 1\n        elseif char == substring[30]\n            count += 1\n       \
    \ elseif char == substring[31]\n            count += 1\n        elseif char ==\
    \ substring[32]\n            count += 1\n        elseif char == substring[33]\n\
    \            count += 1\n        elseif char == substring[34]\n            count\
    \ += 1\n        elseif char == substring[35]\n            count += 1\n       \
    \ elseif char == substring[36]\n            count += 1\n        elseif char ==\
    \ substring[37]\n            count += 1\n        elseif char == substring[38]\n\
    \            count += 1\n        elseif char == substring[39]\n            count\
    \ += 1\n        elseif char == substring[40]\n            count += 1\n       \
    \ elseif char == substring[41]\n            count += 1\n        elseif char ==\
    \ substring[42]\n            count += 1\n        elseif char == substring[43]\n\
    \            count += 1\n        elseif char == substring[44]\n            ",
  "    if string == \"\" || substring == \"\"\n        return 0\n    \n    count =\
    \ 0\n    \n    for c in string\n        if c == substring[0]\n            count\
    \ += 1\n            \n            if count > 1\n                return count\n\
    \            \n            count = 0\n        else\n            count = 0\n  \
    \  end\n    \n    return count\nend", "    count = 0\n    for c in string\n  \
    \      if c == substring\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    count = 0\n    for c in string:\n        if c == substring:\n\
    \            count += 1\n    return count\nend", "    \n    count = 0\n    \n\
    \    for char in string\n        if char == substring[1]\n            count +=\
    \ 1\n        elseif char == substring[2]\n            count += 1\n        elseif\
    \ char == substring[3]\n            count += 1\n        elseif char == substring[4]\n\
    \            count += 1\n        elseif char == substring[5]\n            count\
    \ += 1\n        elseif char == substring[6]\n            count += 1\n        elseif\
    \ char == substring[7]\n            count += 1\n        elseif char == substring[8]\n\
    \            count += 1\n        elseif char == substring[9]\n            count\
    \ += 1\n        elseif char == substring[10]\n            count += 1\n       \
    \ elseif char == substring[11]\n            count += 1\n        elseif char ==\
    \ substring[12]\n            count += 1\n        elseif char == substring[13]\n\
    \            count += 1\n        elseif char == substring[14]\n            count\
    \ += 1\n        elseif char == substring[15]\n            count += 1\n       \
    \ elseif char == substring[16]\n            count += 1\n        elseif char ==\
    \ substring[17]\n            count += 1\n        elseif char == substring[18]\n\
    \            count += 1\n        elseif char == substring[19]\n            count\
    \ += 1\n        elseif char == substring[20]\n            count += 1\n       \
    \ elseif char == substring[21]\n            count += 1\n        elseif char ==\
    \ substring[22]\n            count += 1\n        elseif char == substring[23]\n\
    \            count += 1\n        elseif char == substring[24]\n            count\
    \ += 1\n        elseif char == substring[25]\n            count += 1\n       \
    \ elseif char == substring[26]\n            count += 1\n        elseif char ==\
    \ substring[27]\n            count += 1\n        elseif char == substring[28]\n\
    \            count += 1\n        elseif char == substring[29]\n            count\
    \ += 1\n        elseif char == substring[30]\n            count += 1\n       \
    \ elseif char == substring[31]\n            count += 1\n        elseif char ==\
    \ substring[32]\n            count += 1\n        elseif char == substring[33]\n\
    \            count += 1\n        elseif char == substring[34]\n            count\
    \ += 1\n        elseif char == substring[35]\n            count += 1\n       \
    \ elseif char == substring[36]\n            count += 1\n        elseif char ==\
    \ substring[37]\n            count += 1\n        elseif char == substring[38]\n\
    \            count += 1\n        elseif char == substring[39]\n            count\
    \ += 1\n        elseif char == substring[40]\n            count += 1\n       \
    \ elseif char == substring[41]\n            count += 1\n        elseif char ==\
    \ substring[42]\n            count += 1\n        elseif char == substring[43]\n\
    \            count += 1\n        elseif char == substring[44]", "    count = 0\n\
    \    for c in string:\n        if c == substring:\n            count += 1\n  \
    \  return count\nend", "    count = 0\n    for c in string\n        if c == substring\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    \n\
    \    count = 0\n    \n    for c in string:\n        if c == substring[0]:\n  \
    \          count += 1\n            \n            if substring[1:] == \"\"\n  \
    \              count += 1\n            \n            if substring[1:] == c\n \
    \               count += 1\n            \n            if substring[1:] == substring[1:][substring[1:]\
    \ == substring[1:][substring[1:] != \"\"]]\n                count += 1\n     \
    \       \n            if substring[1:] == substring[1:][substring[1:] == substring[1:][substring[1:]\
    \ == substring[1:][substring[1:] != \"\"]]\n                count += 1\n     \
    \       \n            if substring[1:] == substring[1:][substring[1:] == substring[1:][substring[1:]\
    \ == substring[1:][substring[1:] != \"\"]]\n                count += 1\n     \
    \       \n            if substring[1:] == substring[1:][substring[1:] == substring[1:][substring[1:]\
    \ == substring[1:][substring[1:] != \"\"]]\n                count += 1\n     \
    \       \n            if substring[1:] == substring[1:][substring[1:] == substring[1:][substring[1:]\
    \ == substring[1:][substring[1:] != \"\"]]\n                count += 1\n     \
    \       \n            if substring[1:] == substring[1:][substring[1:] == substring[1:][substring[1:]\
    \ == substring[1:][substring[1:] != \"\"]]\n                count += 1\n     \
    \       \n            if substring[1:] == substring[1:][substring[1:] == substring[1:][substring[1:]\
    \ == substring[1:][substring[1:] != \"\"]]\n                count += 1\n     \
    \       \n            if substring[1:] == substring[1:][substring[1:] == substring[1:][substring[1:]\
    \ == substring[1:][substring[1:] != \"\"]]\n                count += 1\n     \
    \       \n            if substring[1:] == substring[1:][substring[1:] == substring[1:][substring[1:]\
    \ == substring[1:][substring[1:] != \"\"]]\n                count += 1\n     \
    \       \n            if substring[1:] == substring[1:][substring[1:] == substring[1:][substring[1:]\
    \ == substring[1:][substring[1:] != \"\"]]\n                count += 1\n     \
    \       \n            if substring[1:] == substring[1:][substring[1:] == substring[1:][substring[1:]\
    \ == substring[1:][substring[1:] != \"\"]]\n                count += 1\n     \
    \       \n            if substring[1:] == substring[1:][substring[1:] == substring[1:][substring[1:]\
    \ == substring[1:][substring[1:] != \"\"]]\n                count += 1\n     \
    \       \n            if substring[1:] == substring[1:][substring[1:] == substring[1:][substring[1:]\
    \ == substring[1:][substring[1:] != \"\"]]\n                count += 1\n     \
    \       \n            if substring[1:] == substring[1:][substring[1:] == substring[1:][substring[1:]\
    \ == substring[1:][substring[1:] != \"\"]]\n                count += 1\n     \
    \       \n            if substring[1:] == substring[1:][substring[1:] == substring[1:][substring[1:]\
    \ == substring[1:][substring[1:] != \"\"]]\n                count += 1\n     \
    \       \n            if substring[1:] == substring[1:][substring[1:] == substring[1:][substring[1:]\
    \ == substring[1:][substring[1:] != \"\"]]\n", "    if string == \"\" then return\
    \ 0\n    if substring == \"\" then return 0\n    \n    count = 0\n    \n    for\
    \ c in string:\n        if c == substring[0] then\n            count = count +\
    \ 1\n        elseif c == substring[1] then\n            count = count + 1\n  \
    \      elseif c == substring[2] then\n            count = count + 1\n        elseif\
    \ c == substring[3] then\n            count = count + 1\n        elseif c == substring[4]\
    \ then\n            count = count + 1\n        elseif c == substring[5] then\n\
    \            count = count + 1\n        elseif c == substring[6] then\n      \
    \      count = count + 1\n        elseif c == substring[7] then\n            count\
    \ = count + 1\n        elseif c == substring[8] then\n            count = count\
    \ + 1\n        elseif c == substring[9] then\n            count = count + 1\n\
    \        elseif c == substring[10] then\n            count = count + 1\n     \
    \   elseif c == substring[11] then\n            count = count + 1\n        elseif\
    \ c == substring[12] then\n            count = count + 1\n        elseif c ==\
    \ substring[13] then\n            count = count + 1\n        elseif c == substring[14]\
    \ then\n            count = count + 1\n        elseif c == substring[15] then\n\
    \            count = count + 1\n        elseif c == substring[16] then\n     \
    \       count = count + 1\n        elseif c == substring[17] then\n          \
    \  count = count + 1\n        elseif c == substring[18] then\n            count\
    \ = count + 1\n        elseif c == substring[19] then\n            count = count\
    \ + 1\n        elseif c == substring[20] then\n            count = count + 1\n\
    \        elseif c == substring[21] then\n            count = count + 1\n     \
    \   elseif c == substring[22] then\n            count = count + 1\n        elseif\
    \ c == substring[23] then\n            count = count + 1\n        elseif c ==\
    \ substring[24] then\n            count = count + 1\n        elseif c == substring[25]\
    \ then\n            count = count + 1\n        elseif c == substring[26] then\n\
    \            count = count + 1\n        elseif c == substring[27] then\n     \
    \       count = count + 1\n        elseif c == substring[28] then\n          \
    \  count = count + 1\n        elseif c == substring[29] then\n            count\
    \ = count + 1\n        elseif c == substring[30] then\n            count = count\
    \ + 1\n        elseif c == substring[31] then\n            count = count + 1\n\
    \        elseif c == substring[32] then\n            count = count + 1\n     \
    \   elseif c == substring[33] then\n            count = count + 1\n        elseif\
    \ c == substring[34] then\n            count = count + 1\n        elseif c ==\
    \ substring[35] then\n            count = count + 1", "    \n    count = 0\n \
    \   \n    for char in string\n        if char == substring[1]\n            count\
    \ += 1\n        end\n    end\n    \n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"ab\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"c\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"aba\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"abca\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"abcabc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"abcabcabc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"abcabcabcabc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"abcabcabcabcabc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"abcabcabcabcabcabc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"abcabcabcabcabcabcabc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"abcabcabcabcabcabcabcabc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"abcabcabcabcabcabcabcabcabc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"abcabcabcabcabcabcabcabcabcabc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"abcabcabcabcabcabcabcabcabcabcabc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abcabcabcabcabcabcabcabcabcabcabcabc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcab", "    if string\
    \ == \"\" || substring == \"\"\n        return 0\n    end\n    \n    substring\
    \ = lowercase(substring)\n    string = lowercase(string)\n    \n    count = 0\n\
    \    \n    for c in string\n        if c == substring[1]\n            count +=\
    \ 1\n        elseif c == substring[2]\n            count += 1\n        elseif\
    \ c == substring[3]\n            count += 1\n        elseif c == substring[4]\n\
    \            count += 1\n        elseif c == substring[5]\n            count +=\
    \ 1\n        elseif c == substring[6]\n            count += 1\n        elseif\
    \ c == substring[7]\n            count += 1\n        elseif c == substring[8]\n\
    \            count += 1\n        elseif c == substring[9]\n            count +=\
    \ 1\n        elseif c == substring[10]\n            count += 1\n        elseif\
    \ c == substring[11]\n            count += 1\n        elseif c == substring[12]\n\
    \            count += 1\n        elseif c == substring[13]\n            count\
    \ += 1\n        elseif c == substring[14]\n            count += 1\n        elseif\
    \ c == substring[15]\n            count += 1\n        elseif c == substring[16]\n\
    \            count += 1\n        elseif c == substring[17]\n            count\
    \ += 1\n        elseif c == substring[18]\n            count += 1\n        elseif\
    \ c == substring[19]\n            count += 1\n        elseif c == substring[20]\n\
    \            count += 1\n        elseif c == substring[21]\n            count\
    \ += 1\n        elseif c == substring[22]\n            count += 1\n        elseif\
    \ c == substring[23]\n            count += 1\n        elseif c == substring[24]\n\
    \            count += 1\n        elseif c == substring[25]\n            count\
    \ += 1\n        elseif c == substring[26]\n            count += 1\n        elseif\
    \ c == substring[27]\n            count += 1\n        elseif c == substring[28]\n\
    \            count += 1\n        elseif c == substring[29]\n            count\
    \ += 1\n        elseif c == substring[30]\n            count += 1\n        elseif\
    \ c == substring[31]\n            count += 1\n        elseif c == substring[32]\n\
    \            count += 1\n        elseif c == substring[33]\n            count\
    \ += 1\n        elseif c == substring[34]\n            count += 1\n        elseif\
    \ c == substring[35]\n            count += 1\n        elseif c == substring[36]\n\
    \            count += 1\n        elseif c == substring[37]\n            count\
    \ += 1\n        elseif c == substring[38]\n            count += 1\n        elseif\
    \ c == substring[39]\n            count += 1\n        elseif c == substring[40]\n\
    \            count += 1\n        elseif c == substring[41]\n            count\
    \ += 1\n        elseif c == substring[42]\n            count += 1\n        elseif\
    \ c == substring[43]\n            count += 1\n        elseif c == substring[44]\n\
    \            count += 1\n        elseif c == substring[45]\n            count\
    \ += 1", "    count = 0\n    for c in string:\n        if c == substring:\n  \
    \          count += 1\n    return count\nend", "    \n    count = 0\n    \n  \
    \  for char in string\n        if char == substring\n            count += 1\n\
    \        end\n    end\n    \n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bcb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bcc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcb\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bcb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bcc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bcb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcb\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bcb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bcc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcb\"\
    )\n", "    if string == \"\" then return 0 \n    if substring == \"\" then return\
    \ 0 \n    \n    string_length = string.length\n    substring_length = substring.length\n\
    \    \n    i = 0\n    j = 0\n    \n    while i < string_length and j < substring_length\
    \ do\n        if string[i] == substring[j] then\n            i += 1\n        \
    \    j += 1\n        else\n            if j == substring_length then\n       \
    \         return i + 1\n            else\n                j += 1\n           \
    \ end\n        end\n    end\n    \n    return 0\nend", "    count = 0\n    for\
    \ char in string\n        if char == substring\n            count += 1\n     \
    \   end\n    end\n    return count\nend", "    count = 0\n    \n    for char in\
    \ string\n        if char == substring\n            count += 1\n        end\n\
    \    end\n    \n    return count\nend\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    abcde\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcde\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\")\n</cell",
  "    count = 0\n    for c in string\n        if c == substring\n            count\
    \ += 1\n        end\n    end\n    return count\nend", "    \n    count = 0\n \
    \   \n    for c in string:\n        if c == substring[0]:\n            count +=\
    \ 1\n        elif c == substring[1]:\n            count -= 1\n            \n \
    \   return count", "    \n    count = 0\n    \n    for char in string\n      \
    \  if char == substring[1]\n            count += 1\n        elseif char == substring[2]\n\
    \            count += 1\n        elseif char == substring[3]\n            count\
    \ += 1\n        elseif char == substring[4]\n            count += 1\n        elseif\
    \ char == substring[5]\n            count += 1\n        elseif char == substring[6]\n\
    \            count += 1\n        elseif char == substring[7]\n            count\
    \ += 1\n        elseif char == substring[8]\n            count += 1\n        elseif\
    \ char == substring[9]\n            count += 1\n        elseif char == substring[10]\n\
    \            count += 1\n        elseif char == substring[11]\n            count\
    \ += 1\n        elseif char == substring[12]\n            count += 1\n       \
    \ elseif char == substring[13]\n            count += 1\n        elseif char ==\
    \ substring[14]\n            count += 1\n        elseif char == substring[15]\n\
    \            count += 1\n        elseif char == substring[16]\n            count\
    \ += 1\n        elseif char == substring[17]\n            count += 1\n       \
    \ elseif char == substring[18]\n            count += 1\n        elseif char ==\
    \ substring[19]\n            count += 1\n        elseif char == substring[20]\n\
    \            count += 1\n        elseif char == substring[21]\n            count\
    \ += 1\n        elseif char == substring[22]\n            count += 1\n       \
    \ elseif char == substring[23]\n            count += 1\n        elseif char ==\
    \ substring[24]\n            count += 1\n        elseif char == substring[25]\n\
    \            count += 1\n        elseif char == substring[26]\n            count\
    \ += 1\n        elseif char == substring[27]\n            count += 1\n       \
    \ elseif char == substring[28]\n            count += 1\n        elseif char ==\
    \ substring[29]\n            count += 1\n        elseif char == substring[30]\n\
    \            count += 1\n        elseif char == substring[31]\n            count\
    \ += 1\n        elseif char == substring[32]\n            count += 1\n       \
    \ elseif char == substring[33]\n            count += 1\n        elseif char ==\
    \ substring[34]\n            count += 1\n        elseif char == substring[35]\n\
    \            count += 1\n        elseif char == substring[36]\n            count\
    \ += 1\n        elseif char == substring[37]\n            count += 1\n       \
    \ elseif char == substring[38]\n            count += 1\n        elseif char ==\
    \ substring[39]\n            count += 1\n        elseif char == substring[40]\n\
    \            count += 1\n        elseif char == substring[41]\n            count\
    \ += 1\n        elseif char == substring[42]\n            count += 1\n       \
    \ elseif char == substring[43]\n            count += 1\n        elseif char ==\
    \ substring[44]", "    \n    count = 0\n    \n    for char in string\n       \
    \ if char == substring\n            count += 1\n        end\n    end\n    \n \
    \   return count\nend\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"The\
    \ quick brown fox jumps over the lazy dog\", \"fox\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"The quick brown fox jumps over the lazy dog\", \"fox\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"The quick brown fox jumps over the\
    \ lazy dog\", \"fox\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    The quick brown fox jumps over the lazy dog\", \"fox\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"The quick brown fox jumps over the lazy dog\", \"fox\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"The quick brown fox jumps over the\
    \ lazy dog\", \"fox\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    The quick brown fox jumps over the lazy dog\", \"fox\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"The quick brown fox jumps over the lazy dog\", \"fox\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"The quick brown fox jumps over the\
    \ lazy dog\", \"fox\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    The quick brown fox jumps over the lazy dog\", \"fox\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"The quick brown fox jumps over the lazy dog\", \"fox\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"The quick brown fox jumps over the\
    \ lazy dog\", \"fox\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    The quick brown fox jumps over the lazy dog\", \"fox\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"The quick brown fox jumps over the lazy dog\", \"fox\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"The quick brown fox jumps over the\
    \ lazy dog\", \"fox\")\n</cell", "    count = 0\n    for c in string:\n      \
    \  if c == substring:\n            count += 1\n    return count\nend", "    \n\
    \    count = 0\n    \n    for char in string:\n        if char == substring[0]:\n\
    \            count += 1\n            if char == substring[1]:\n              \
    \  count += 1\n                if char == substring[2]:\n                    count\
    \ += 1\n                    if char == substring[3]:\n                       \
    \ count += 1\n                        if char == substring[4]:\n             \
    \               count += 1\n                            if char == substring[5]:\n\
    \                                count += 1\n                                if\
    \ char == substring[6]:\n                                    count += 1\n    \
    \                                if char == substring[7]:\n                  \
    \                      count += 1\n                                        if\
    \ char == substring[8]:\n                                            count +=\
    \ 1\n                                            if char == substring[9]:\n  \
    \                                              count += 1\n                  \
    \                              if char == substring[10]:\n                   \
    \                                 count += 1\n                               \
    \                     if char == substring[11]:\n                            \
    \                            count += 1\n                                    \
    \                    if char == substring[12]:\n                             \
    \                               count += 1\n                                 \
    \                           if char == substring[13]:\n                      \
    \                                          count += 1\n                      \
    \                                          if char == substring[14]:\n       \
    \                                                             count += 1\n   \
    \                                                                 if char == substring[15]:\n\
    \                                                                        count\
    \ += 1\n                                                        if char == substring[16]:\n\
    \                                                            count += 1\n    \
    \                                                        if char == substring[17]:\n\
    \                                                                count += 1\n\
    \                                                                if char == substring[18]:\n\
    \                                                                    count +=\
    \ 1\n                                                                    if char\
    \ == substring[19]:\n                                                        \
    \                count += 1\n                                                \
    \        if char == substring[20]:\n                                         \
    \                   count += 1\n                                             \
    \               if char == substring[21]:\n                                  \
    \                              count += 1\n                                  \
    \                              if char == substring[22]:\n                   \
    \                                                 count += 1\n               \
    \                                                     if char == substring[23]:\n\
    \                                                                        count\
    \ += 1\n                                                        if char == substring[24]:\n\
    \                                                            count += 1\n    \
    \                                                        if char == substring[25]:\n\
    \                                                                count += 1\n\
    \                                                                if char == substring[26]:\n\
    \                                                                    count +=\
    \ 1\n                                                                    if char\
    \ == substring[27]:\n                                                        \
    \                count += 1\n                                                \
    \        if char == substring[28]:\n                                         \
    \                   count += 1\n                                             \
    \               if char == substring[29]:\n                                  \
    \                              count += 1\n                                  \
    \                              if char == substring[30]:\n                   \
    \                                                 count += 1\n               \
    \                                                     if char == substring[31]:\n\
    \                                                                        count\
    \ += 1\n                                                        if char == substring[32]:\n\
    \                                                            count += 1\n    \
    \                                                        if char == substring[33]:\n\
    \                                                                count += 1\n\
    \                                                                if char == substring[34]:\n\
    \                                                                    count +=\
    \ 1\n                                                                    if char\
    \ == substring[35]:\n                                                        \
    \                count += 1\n                                                \
    \        if char == substring[36]:\n                                         \
    \                   count += 1\n                                             \
    \               if char == substring[37]:\n                                  \
    \                              count += 1\n                                  \
    \                              if char == substring[38]:\n                   \
    \                                                 count += 1\n               \
    \                                                     if char == substring[39]:\n\
    \                                                                        count\
    \ += 1\n                                                        if char == substring[40]:\n\
    \                                                            count += 1\n    \
    \                                                        if char == substring[41]:\n",
  "    count = 0\n    \n    for c in string:\n        if c == substring:\n       \
    \     count += 1\n        \n    return count\nend", "    \n    count = 0\n   \
    \ \n    for c in string:\n        if c == substring[0]:\n            count +=\
    \ 1\n            \n            if count == len(substring):\n                return\
    \ count\n            \n            count = 0\n            \n        elif c ==\
    \ substring[1]:\n            count += 1\n            \n            if count ==\
    \ len(substring):\n                return count\n            \n            count\
    \ = 0\n            \n        elif c == substring[2]:\n            count += 1\n\
    \            \n            if count == len(substring):\n                return\
    \ count\n            \n            count = 0\n            \n        elif c ==\
    \ substring[3]:\n            count += 1\n            \n            if count ==\
    \ len(substring):\n                return count\n            \n            count\
    \ = 0\n            \n        elif c == substring[4]:\n            count += 1\n\
    \            \n            if count == len(substring):\n                return\
    \ count\n            \n            count = 0\n            \n        elif c ==\
    \ substring[5]:\n            count += 1\n            \n            if count ==\
    \ len(substring):\n                return count\n            \n            count\
    \ = 0\n            \n        elif c == substring[6]:\n            count += 1\n\
    \            \n            if count == len(substring):\n                return\
    \ count\n            \n            count = 0\n            \n        elif c ==\
    \ substring[7]:\n            count += 1\n            \n            if count ==\
    \ len(substring):\n                return count\n            \n            count\
    \ = 0\n            \n        elif c == substring[8]:\n            count += 1\n\
    \            \n            if count == len(substring):\n                return\
    \ count\n            \n            count = 0\n            \n        elif c ==\
    \ substring[9]:\n            count += 1\n            \n            if count ==\
    \ len(substring):\n                return count\n            \n            count\
    \ = 0\n            \n        elif c == substring[10]:\n            count += 1\n\
    \            \n            if count == len(substring):\n                return\
    \ count\n            \n            count = 0\n            \n        elif c ==\
    \ substring[11]:\n            count += 1\n            \n            if count ==\
    \ len(substring):\n                return count\n            \n            count\
    \ = 0\n            \n        elif c == substring[12]:\n            count += 1\n\
    \            \n            if count == len(substring):\n                return\
    \ count\n            \n            count = 0\n            \n        elif c ==\
    \ substring[13]:\n            count += 1\n            \n            if count ==\
    \ len(substring):\n                return count\n            \n            count\
    \ = 0\n            \n        elif c == substring[14]:\n            count += 1\n\
    \            \n            if count == len(substring):\n                return\
    \ count\n            \n            count = 0\n            \n        elif c ==\
    \ substring[15]:\n            count += 1\n            \n            if count ==\
    \ len(substring):\n                return count\n            \n            count\
    \ = 0\n            \n        elif c == substring[16]:\n            count += 1\n\
    \            \n            if count == len(substring):\n                return\
    \ count\n            \n            count = 0\n            \n        elif c ==\
    \ substring[17]:\n            count += 1\n            \n            if count ==\
    \ len(substring):\n                return count\n            \n            count\
    \ = 0\n            \n        elif c == substring[18]:\n            count += 1\n\
    \            ", "    \n    count = 0\n    \n    for char in string\n        if\
    \ char == substring\n            count += 1\n        end\n    end\n    \n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abcde\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcde\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"cde\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"de\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"c\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"a\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcab", "    count = 0\n    for c in string\n        if c == substring\n     \
    \       count += 1\n        end\n    end\n    return count\nend", "    count =\
    \ 0\n    for c in string\n        if c == substring\n            count += 1\n\
    \        end\n    end\n    return count\nend", "    count = 0\n    \n    for c\
    \ in string\n        if c == substring\n            count += 1\n        end\n\
    \    end\n    \n    return count\nend\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    abcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcde\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdea\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdef\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefg\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefgh\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghi\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghij\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijk\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijkl\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijklm\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijklmn\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijklmno\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijklmnop\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijklmnopq\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijklmnopqr\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdefghijklmnopqrs\"\
    )", "    \n    count = 0\n    \n    for char in string\n        if char == substring\n\
    \            count += 1\n        end\n    end\n    \n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"abcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bcde\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bcdc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bcdea\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdeab\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdeabc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdeabcd\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdeabcde\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdeabcdea\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdeabcdeab\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdeabcdeabc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdeabcdeabcd\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdeabcdeabcde\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdeabcdeabcdea\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdeabcdeabcdeab\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdeabcdeabcdeabc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdeabcdeabcdeabcd\"\
    )\n</cell>\n<code language=julia-1.5", "    count = 0\n    for c in string\n \
    \       if c == substring\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    if string == \"\" || substring == \"\"\n        return 0\n\
    \    end\n    \n    count = 0\n    \n    for c in string\n        if c == substring[1]\n\
    \            count += 1\n        elseif c == substring[2]\n            count +=\
    \ 1\n        elseif c == substring[3]\n            count += 1\n        elseif\
    \ c == substring[4]\n            count += 1\n        elseif c == substring[5]\n\
    \            count += 1\n        elseif c == substring[6]\n            count +=\
    \ 1\n        elseif c == substring[7]\n            count += 1\n        elseif\
    \ c == substring[8]\n            count += 1\n        elseif c == substring[9]\n\
    \            count += 1\n        elseif c == substring[10]\n            count\
    \ += 1\n        elseif c == substring[11]\n            count += 1\n        elseif\
    \ c == substring[12]\n            count += 1\n        elseif c == substring[13]\n\
    \            count += 1\n        elseif c == substring[14]\n            count\
    \ += 1\n        elseif c == substring[15]\n            count += 1\n        elseif\
    \ c == substring[16]\n            count += 1\n        elseif c == substring[17]\n\
    \            count += 1\n        elseif c == substring[18]\n            count\
    \ += 1\n        elseif c == substring[19]\n            count += 1\n        elseif\
    \ c == substring[20]\n            count += 1\n        elseif c == substring[21]\n\
    \            count += 1\n        elseif c == substring[22]\n            count\
    \ += 1\n        elseif c == substring[23]\n            count += 1\n        elseif\
    \ c == substring[24]\n            count += 1\n        elseif c == substring[25]\n\
    \            count += 1\n        elseif c == substring[26]\n            count\
    \ += 1\n        elseif c == substring[27]\n            count += 1\n        elseif\
    \ c == substring[28]\n            count += 1\n        elseif c == substring[29]\n\
    \            count += 1\n        elseif c == substring[30]\n            count\
    \ += 1\n        elseif c == substring[31]\n            count += 1\n        elseif\
    \ c == substring[32]\n            count += 1\n        elseif c == substring[33]\n\
    \            count += 1\n        elseif c == substring[34]\n            count\
    \ += 1\n        elseif c == substring[35]\n            count += 1\n        elseif\
    \ c == substring[36]\n            count += 1\n        elseif c == substring[37]\n\
    \            count += 1\n        elseif c == substring[38]\n            count\
    \ += 1\n        elseif c == substring[39]\n            count += 1\n        elseif\
    \ c == substring[40]\n            count += 1\n        elseif c == substring[41]\n\
    \            count += 1\n        elseif c == substring[42]\n            count\
    \ += 1\n        elseif c == substring[43]\n            count += 1\n        elseif\
    \ c == substring[44]\n            count += 1\n        elseif c == substring[45]\n\
    \            count += 1\n        elseif c == substring[46]\n            count\
    \ += 1\n        elseif c == substring", "    if string == \"\" || substring ==\
    \ \"\"\n        return 0\n    end\n    \n    count = 0\n    \n    for c in string\n\
    \        if c == substring[1]\n            count += 1\n        end\n    end\n\
    \    \n    return count\nend", "    count = 0\n    for c in string\n        if\
    \ c == substring\n            count += 1\n        end\n    end\n    return count\n\
    end", "    count = 0\n    for c in string:\n        if c == substring:\n     \
    \       count += 1\n    return count\nend", "    count = 0\n    for c in string:\n\
    \        if c == substring:\n            count += 1\n    return count\nend", " \
    \   count = 0\n    for c in string\n        if c == substring\n            count\
    \ += 1\n        end\n    end\n    return count\nend", "    count = 0\n    for\
    \ c in string\n        if c == substring\n            count += 1\n        end\n\
    \    end\n    return count\nend", "    \n    count = 0\n    \n    for char in\
    \ string\n        if char == substring\n            count += 1\n        end\n\
    \    end\n    \n    return count\nend\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"abc\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ string and a substring and returns the number of times the substring appears\
    \ in the string. \nWrite a function that takes a string and a substring and returns\
    \ the number of times the substring appears in the string ignoring case. \nWrite\
    \ a function that takes a string and a substring and returns the number of times\
    \ the substring appears in the string ignoring case.\nWrite a function that takes\
    \ a string and a substring and returns the number of times the substring appears\
    \ in the string ignoring case.\nWrite a function that takes a string and a substring\
    \ and returns the number of times the substring appears in the string ignoring\
    \ case.\nWrite a function that takes a string and a substring and returns the\
    \ number of times the substring appears in the string ignoring case.\nWrite a\
    \ function that takes a string and a substring and returns the number of times\
    \ the substring appears in the string ignoring case.\nWrite a function that takes\
    \ a string and a substring and returns the number of times the substring appears\
    \ in the string ignoring case.\nWrite a function that takes a string and a substring\
    \ and returns the number of times the substring appears in the string ignoring\
    \ case.\nWrite a function that takes a string and a substring and returns the\
    \ number of times the substring appears in the string ignoring case.\nWrite a\
    \ function that takes a string and a substring and returns the number of times\
    \ the substring appears in the string ignoring case.\nWrite a function that takes\
    \ a string and a substring and returns the number of times the substring appears\
    \ in the string ignoring case.\nWrite a function that takes a string and a substring\
    \ and returns the number of times the substring appears in the string ignoring\
    \ case.\nWrite a function that takes a string and a substring and returns the\
    \ number of times the substring appears in the string ignoring case.\nWrite a\
    \ function that takes a string and a substring and returns the number of times\
    \ the substring appears in the string ignoring case.\nWrite a function that takes\
    \ a string and a substring and returns the number of times the substring appears\
    \ in the string ignoring case.\nWrite a function that takes a string and a substring\
    \ and returns the number of times the substring appears in the string ignoring\
    \ case.\nWrite a function that takes a string and a substring and returns the\
    \ number of times the substring appears in the string ignoring case.\nWrite a\
    \ function that takes a string and a substring and returns the number of times\
    \ the substring appears in the string ignoring case.\nWrite a function that takes\
    \ a string and a substring and returns the number of times the substring appears\
    \ in the string ignoring case.\nWrite a function that takes a string and a substring\
    \ and returns the number of ", "    \n    count = 0\n    \n    for c in string\n\
    \        if c == substring\n            count += 1\n        end\n    end\n   \
    \ \n    return count\nend\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n\
    <code language=julia-1.5>\nho", "    count = 0\n    for c in string:\n       \
    \ if c == substring:\n            count += 1\n    return count\nend", "    count\
    \ = 0\n    \n    for char in string\n        if char == substring[1]\n       \
    \     count += 1\n        elseif char == substring[2]\n            count += 1\n\
    \        elseif char == substring[3]\n            count += 1\n        elseif char\
    \ == substring[4]\n            count += 1\n        elseif char == substring[5]\n\
    \            count += 1\n        elseif char == substring[6]\n            count\
    \ += 1\n        elseif char == substring[7]\n            count += 1\n        elseif\
    \ char == substring[8]\n            count += 1\n        elseif char == substring[9]\n\
    \            count += 1\n        elseif char == substring[10]\n            count\
    \ += 1\n        elseif char == substring[11]\n            count += 1\n       \
    \ elseif char == substring[12]\n            count += 1\n        elseif char ==\
    \ substring[13]\n            count += 1\n        elseif char == substring[14]\n\
    \            count += 1\n        elseif char == substring[15]\n            count\
    \ += 1\n        elseif char == substring[16]\n            count += 1\n       \
    \ elseif char == substring[17]\n            count += 1\n        elseif char ==\
    \ substring[18]\n            count += 1\n        elseif char == substring[19]\n\
    \            count += 1\n        elseif char == substring[20]\n            count\
    \ += 1\n        elseif char == substring[21]\n            count += 1\n       \
    \ elseif char == substring[22]\n            count += 1\n        elseif char ==\
    \ substring[23]\n            count += 1\n        elseif char == substring[24]\n\
    \            count += 1\n        elseif char == substring[25]\n            count\
    \ += 1\n        elseif char == substring[26]\n            count += 1\n       \
    \ elseif char == substring[27]\n            count += 1\n        elseif char ==\
    \ substring[28]\n            count += 1\n        elseif char == substring[29]\n\
    \            count += 1\n        elseif char == substring[30]\n            count\
    \ += 1\n        elseif char == substring[31]\n            count += 1\n       \
    \ elseif char == substring[32]\n            count += 1\n        elseif char ==\
    \ substring[33]\n            count += 1\n        elseif char == substring[34]\n\
    \            count += 1\n        elseif char == substring[35]\n            count\
    \ += 1\n        elseif char == substring[36]\n            count += 1\n       \
    \ elseif char == substring[37]\n            count += 1\n        elseif char ==\
    \ substring[38]\n            count += 1\n        elseif char == substring[39]\n\
    \            count += 1\n        elseif char == substring[40]\n            count\
    \ += 1\n        elseif char == substring[41]\n            count += 1\n       \
    \ elseif char == substring[42]\n            count += 1\n        elseif char ==\
    \ substring[43]\n            count += 1\n        elseif char == substring[44]\n\
    \            ", "    if string == \"\" || substring == \"\"\n        return 0\n\
    \    \n    substring = lowercase(substring)\n    string = lowercase(string)\n\
    \    \n    count = 0\n    \n    for c in string\n        if c == substring[1]\n\
    \            count += 1\n        elseif c == substring[2]\n            count +=\
    \ 1\n        elseif c == substring[3]\n            count += 1\n        elseif\
    \ c == substring[4]\n            count += 1\n        elseif c == substring[5]\n\
    \            count += 1\n        elseif c == substring[6]\n            count +=\
    \ 1\n        elseif c == substring[7]\n            count += 1\n        elseif\
    \ c == substring[8]\n            count += 1\n        elseif c == substring[9]\n\
    \            count += 1\n        elseif c == substring[10]\n            count\
    \ += 1\n        elseif c == substring[11]\n            count += 1\n        elseif\
    \ c == substring[12]\n            count += 1\n        elseif c == substring[13]\n\
    \            count += 1\n        elseif c == substring[14]\n            count\
    \ += 1\n        elseif c == substring[15]\n            count += 1\n        elseif\
    \ c == substring[16]\n            count += 1\n        elseif c == substring[17]\n\
    \            count += 1\n        elseif c == substring[18]\n            count\
    \ += 1\n        elseif c == substring[19]\n            count += 1\n        elseif\
    \ c == substring[20]\n            count += 1\n        elseif c == substring[21]\n\
    \            count += 1\n        elseif c == substring[22]\n            count\
    \ += 1\n        elseif c == substring[23]\n            count += 1\n        elseif\
    \ c == substring[24]\n            count += 1\n        elseif c == substring[25]\n\
    \            count += 1\n        elseif c == substring[26]\n            count\
    \ += 1\n        elseif c == substring[27]\n            count += 1\n        elseif\
    \ c == substring[28]\n            count += 1\n        elseif c == substring[29]\n\
    \            count += 1\n        elseif c == substring[30]\n            count\
    \ += 1\n        elseif c == substring[31]\n            count += 1\n        elseif\
    \ c == substring[32]\n            count += 1\n        elseif c == substring[33]\n\
    \            count += 1\n        elseif c == substring[34]\n            count\
    \ += 1\n        elseif c == substring[35]\n            count += 1\n        elseif\
    \ c == substring[36]\n            count += 1\n        elseif c == substring[37]\n\
    \            count += 1\n        elseif c == substring[38]\n            count\
    \ += 1\n        elseif c == substring[39]\n            count += 1\n        elseif\
    \ c == substring[40]\n            count += 1\n        elseif c == substring[41]\n\
    \            count += 1\n        elseif c == substring[42]\n            count\
    \ += 1\n        elseif c == substring[43]\n            count += 1\n        elseif\
    \ c == substring[44]\n            count += 1\n        elseif c == substring[45]\n\
    \            count += 1\n        else", "    count = 0\n    for c in string:\n\
    \        if c == substring:\n            count += 1\n    return count\nend", " \
    \   \n    count = 0\n    \n    for char in string\n        if char == substring\n\
    \            count += 1\n        end\n    end\n    \n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"hello\", \"llo\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"hello\", \"ll\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"hello\", \"lll\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    hello\", \"llll\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"hello\"\
    , \"lllll\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"hello\", \"\
    llllll\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"hello\", \"lllllll\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"hello\", \"llllllll\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"hello\", \"lllllllll\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"hello\", \"llllllllll\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"hello\", \"lllllllllll\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"hello\", \"llllllllllllll\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"hello\", \"lllllllllllllll\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"hello\", \"llllllllllllllll\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"hello\", \"lllllllllllllllll\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"hello\", \"llllllllllllllllllll\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"hello\", \"lllllllllllllllllllll\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"hello\", \"llllllllllllllllllll\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"hello\", \"llllllll",
  "    \n    count = 0\n    \n    for c in string:\n        if c == substring[0]:\n\
    \            count += 1\n            \n            if count == len(substring):\n\
    \                return count\n            \n            count = 0\n         \
    \   \n        elif c == substring[1]:\n            count += 1\n            \n\
    \            if count == len(substring):\n                return count\n     \
    \       \n            count = 0\n            \n        elif c == substring[2]:\n\
    \            count += 1\n            \n            if count == len(substring):\n\
    \                return count\n            \n            count = 0\n         \
    \   \n        elif c == substring[3]:\n            count += 1\n            \n\
    \            if count == len(substring):\n                return count\n     \
    \       \n            count = 0\n            \n        elif c == substring[4]:\n\
    \            count += 1\n            \n            if count == len(substring):\n\
    \                return count\n            \n            count = 0\n         \
    \   \n        elif c == substring[5]:\n            count += 1\n            \n\
    \            if count == len(substring):\n                return count\n     \
    \       \n            count = 0\n            \n        elif c == substring[6]:\n\
    \            count += 1\n            \n            if count == len(substring):\n\
    \                return count\n            \n            count = 0\n         \
    \   \n        elif c == substring[7]:\n            count += 1\n            \n\
    \            if count == len(substring):\n                return count\n     \
    \       \n            count = 0\n            \n        elif c == substring[8]:\n\
    \            count += 1\n            \n            if count == len(substring):\n\
    \                return count\n            \n            count = 0\n         \
    \   \n        elif c == substring[9]:\n            count += 1\n            \n\
    \            if count == len(substring):\n                return count\n     \
    \       \n            count = 0\n            \n        elif c == substring[10]:\n\
    \            count += 1\n            \n            if count == len(substring):\n\
    \                return count\n            \n            count = 0\n         \
    \   \n        elif c == substring[11]:\n            count += 1\n            \n\
    \            if count == len(substring):\n                return count\n     \
    \       \n            count = 0\n            \n        elif c == substring[12]:\n\
    \            count += 1\n            \n            if count == len(substring):\n\
    \                return count\n            \n            count = 0\n         \
    \   \n        elif c == substring[13]:\n            count += 1\n            \n\
    \            if count == len(substring):\n                return count\n     \
    \       \n            count = 0\n            \n        elif c == substring[14]:\n\
    \            count += 1\n            \n            if count == len(substring):\n\
    \                return count\n            \n            count = 0\n         \
    \   \n        elif c == substring[15]:\n            count += 1\n            \n\
    \            if count == len(substring):\n                return count\n     \
    \       \n            count = 0\n            \n        elif c == substring[16]:\n\
    \            count += 1\n            \n            if count == len(substring):\n\
    \                return count\n            \n            count = 0\n         \
    \   \n        elif c == substring[17]:\n            count += 1\n            \n\
    \            if count == len(substring):\n                return count\n     \
    \       \n            count = 0\n            \n        elif c == substring[18]:\n\
    \            count += 1\n            ", "    count = 0\n    for c in string:\n\
    \        if c == substring:\n            count += 1\n    return count\nend", " \
    \   \n    count = 0\n    \n    for char in string\n        if char == substring\n\
    \            count += 1\n        end\n    end\n    \n    return count\nend", " \
    \   if string == \"\" || substring == \"\"\n        return 0\n    end\n    \n\
    \    count = 0\n    \n    for c in string\n        if c == substring[1]\n    \
    \        count += 1\n        elseif c == substring[2]\n            count += 1\n\
    \        elseif c == substring[3]\n            count += 1\n        elseif c ==\
    \ substring[4]\n            count += 1\n        elseif c == substring[5]\n   \
    \         count += 1\n        elseif c == substring[6]\n            count += 1\n\
    \        elseif c == substring[7]\n            count += 1\n        elseif c ==\
    \ substring[8]\n            count += 1\n        elseif c == substring[9]\n   \
    \         count += 1\n        elseif c == substring[10]\n            count +=\
    \ 1\n        elseif c == substring[11]\n            count += 1\n        elseif\
    \ c == substring[12]\n            count += 1\n        elseif c == substring[13]\n\
    \            count += 1\n        elseif c == substring[14]\n            count\
    \ += 1\n        elseif c == substring[15]\n            count += 1\n        elseif\
    \ c == substring[16]\n            count += 1\n        elseif c == substring[17]\n\
    \            count += 1\n        elseif c == substring[18]\n            count\
    \ += 1\n        elseif c == substring[19]\n            count += 1\n        elseif\
    \ c == substring[20]\n            count += 1\n        elseif c == substring[21]\n\
    \            count += 1\n        elseif c == substring[22]\n            count\
    \ += 1\n        elseif c == substring[23]\n            count += 1\n        elseif\
    \ c == substring[24]\n            count += 1\n        elseif c == substring[25]\n\
    \            count += 1\n        elseif c == substring[26]\n            count\
    \ += 1\n        elseif c == substring[27]\n            count += 1\n        elseif\
    \ c == substring[28]\n            count += 1\n        elseif c == substring[29]\n\
    \            count += 1\n        elseif c == substring[30]\n            count\
    \ += 1\n        elseif c == substring[31]\n            count += 1\n        elseif\
    \ c == substring[32]\n            count += 1\n        elseif c == substring[33]\n\
    \            count += 1\n        elseif c == substring[34]\n            count\
    \ += 1\n        elseif c == substring[35]\n            count += 1\n        elseif\
    \ c == substring[36]\n            count += 1\n        elseif c == substring[37]\n\
    \            count += 1\n        elseif c == substring[38]\n            count\
    \ += 1\n        elseif c == substring[39]\n            count += 1\n        elseif\
    \ c == substring[40]\n            count += 1\n        elseif c == substring[41]\n\
    \            count += 1\n        elseif c == substring[42]\n            count\
    \ += 1\n        elseif c == substring[43]\n            count += 1\n        elseif\
    \ c == substring[44]\n            count += 1\n        elseif c == substring[45]\n\
    \            count += 1\n        elseif c == substring[46]\n            count\
    \ += 1\n        elseif c == substring", "    \n    count = 0\n    \n    for c\
    \ in string:\n        if c == substring[0]:\n            count += 1\n        \
    \    if count > substring.length\n                return 0\n            \n   \
    \     elif c == substring[1]:\n            count += 1\n            if count >\
    \ substring.length\n                return 0\n            \n        elif c ==\
    \ substring[2]:\n            count += 1\n            if count > substring.length\n\
    \                return 0\n            \n        elif c == substring[3]:\n   \
    \         count += 1\n            if count > substring.length\n              \
    \  return 0\n            \n        elif c == substring[4]:\n            count\
    \ += 1\n            if count > substring.length\n                return 0\n  \
    \          \n        elif c == substring[5]:\n            count += 1\n       \
    \     if count > substring.length\n                return 0\n            \n  \
    \      elif c == substring[6]:\n            count += 1\n            if count >\
    \ substring.length\n                return 0\n            \n        elif c ==\
    \ substring[7]:\n            count += 1\n            if count > substring.length\n\
    \                return 0\n            \n        elif c == substring[8]:\n   \
    \         count += 1\n            if count > substring.length\n              \
    \  return 0\n            \n        elif c == substring[9]:\n            count\
    \ += 1\n            if count > substring.length\n                return 0\n  \
    \          \n        elif c == substring[10]:\n            count += 1\n      \
    \      if count > substring.length\n                return 0\n            \n \
    \       elif c == substring[11]:\n            count += 1\n            if count\
    \ > substring.length\n                return 0\n            \n        elif c ==\
    \ substring[12]:\n            count += 1\n            if count > substring.length\n\
    \                return 0\n            \n        elif c == substring[13]:\n  \
    \          count += 1\n            if count > substring.length\n             \
    \   return 0\n            \n        elif c == substring[14]:\n            count\
    \ += 1\n            if count > substring.length\n                return 0\n  \
    \          \n        elif c == substring[15]:\n            count += 1\n      \
    \      if count > substring.length\n                return 0\n            \n \
    \       elif c == substring[16]:\n            count += 1\n            if count\
    \ > substring.length\n                return 0\n            \n        elif c ==\
    \ substring[17]:\n            count += 1\n            if count > substring.length\n\
    \                return 0\n            \n        elif c == substring[18]:\n  \
    \          count += 1\n            if count > substring.length\n             \
    \   return 0\n            \n        elif c == substring[19]:\n            count\
    \ += 1\n            if count > substring.length\n                return 0\n  \
    \          \n        elif c == substring[20]:\n            count += 1\n      \
    \      if count > substring.length\n                return 0\n            \n \
    \       elif c == substring[21]:\n            count += 1\n            if count\
    \ > substring.length\n                return 0\n            \n        elif c ==\
    \ substring[22]:\n            count += 1\n            if count > substring.length\n\
    \                return 0\n            \n        elif c == substring[23]:\n  \
    \          count += 1\n            if count > substring.length\n             \
    \   return 0\n            \n        elif c == substring[24]:\n            count\
    \ += 1\n            if ", "    count = 0\n    \n    for c in string:\n       \
    \ if c == substring[0]:\n            count += 1\n            if count > substring[1]:\n\
    \                break\n        elif c == substring[1]:\n            count +=\
    \ 1\n            if count > substring[2]:\n                break\n        else:\n\
    \            count = 0\n    return count\nend", "    count = 0\n    for c in string:\n\
    \        if c == substring[0]:\n            count += 1\n            if count ==\
    \ len(substring):\n                return count\n        else:\n            count\
    \ = 0\n    return count\nend\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    abcde\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abccba\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abccbc\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abccbca\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abccbcab\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abccbcabc\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abccbcabcde\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abccbcabcdef\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abccbcabcdefgh\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abccbcabcdefghij\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abccbcabcdefghijk\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abccbcabcdefghijklm\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abccbcabcdefghijklmn\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abccbcabcdefghijklmno\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abccbcabcdefghijklmnop\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"", "    \n\
    \    count = 0\n    \n    for char in string\n        if char == substring[1]\n\
    \            count += 1\n        end\n    end\n    \n    return count\nend", " \
    \   \n    count = 0\n    \n    for char in string\n        if char == substring\n\
    \            count += 1\n        end\n    end\n    \n    return count\nend", " \
    \   count = 0\n    for c in string:\n        if c == substring:\n            count\
    \ += 1\n    return count\nend", "    \n    count = 0\n    \n    for c in string:\n\
    \        if c == substring[0]:\n            count += 1\n            if substring[1:]\
    \ == \"\"\n                count += 1\n            \n        elif substring[1:]\
    \ == \"\"\n            count += 1\n            \n        elif substring[1:] ==\
    \ c\n            count += 1\n            \n        else:\n            count +=\
    \ 1\n            \n    return count\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.5", "    \n    count = 0\n    \n    for c in string\n     \
    \   if substring == c\n            count += 1\n        end\n    end\n    \n  \
    \  return count\nend\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"hello\"\
    , \"l\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"hello\", \"ll\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"hello\", \"lll\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"hello\", \"llll\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"hello\", \"lllll\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"hello\", \"llllll\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    hello\", \"lllllll\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"hello\"\
    , \"llllllll\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"hello\"\
    , \"lllllllll\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"hello\"\
    , \"llllllllll\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"hello\"\
    , \"lllllllllll\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"hello\"\
    , \"llllllllllllll\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"hello\"\
    , \"lllllllllllllll\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    hello\", \"llllllllllllllll\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    hello\", \"lllllllllllllllll\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    hello\", \"llllllllllllllllllll\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    hello\", \"lllllllllllllllllllll\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    hello\", \"llllllllllllllllllllll\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    hello\", \"llllll", "    count = 0\n    \n    for char in string\n        if char\
    \ == substring\n            count += 1\n        end\n    end\n    \n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bca\")\n</cell", "    \n \
    \   count = 0\n    \n    for c in string:\n        if c == substring[0]:\n   \
    \         count += 1\n            if count > substring.length\n              \
    \  return substring.length\n            \n        elif c == substring[1]:\n  \
    \          count += 1\n            if count > substring.length\n             \
    \   return substring.length\n            \n        elif c == substring[2]:\n \
    \           count += 1\n            if count > substring.length\n            \
    \    return substring.length\n            \n        elif c == substring[3]:\n\
    \            count += 1\n            if count > substring.length\n           \
    \     return substring.length\n            \n        elif c == substring[4]:\n\
    \            count += 1\n            if count > substring.length\n           \
    \     return substring.length\n            \n        elif c == substring[5]:\n\
    \            count += 1\n            if count > substring.length\n           \
    \     return substring.length\n            \n        elif c == substring[6]:\n\
    \            count += 1\n            if count > substring.length\n           \
    \     return substring.length\n            \n        elif c == substring[7]:\n\
    \            count += 1\n            if count > substring.length\n           \
    \     return substring.length\n            \n        elif c == substring[8]:\n\
    \            count += 1\n            if count > substring.length\n           \
    \     return substring.length\n            \n        elif c == substring[9]:\n\
    \            count += 1\n            if count > substring.length\n           \
    \     return substring.length\n            \n        elif c == substring[10]:\n\
    \            count += 1\n            if count > substring.length\n           \
    \     return substring.length\n            \n        elif c == substring[11]:\n\
    \            count += 1\n            if count > substring.length\n           \
    \     return substring.length\n            \n        elif c == substring[12]:\n\
    \            count += 1\n            if count > substring.length\n           \
    \     return substring.length\n            \n        elif c == substring[13]:\n\
    \            count += 1\n            if count > substring.length\n           \
    \     return substring.length\n            \n        elif c == substring[14]:\n\
    \            count += 1\n            if count > substring.length\n           \
    \     return substring.length\n            \n        elif c == substring[15]:\n\
    \            count += 1\n            if count > substring.length\n           \
    \     return substring.length\n            \n        elif c == substring[16]:\n\
    \            count += 1\n            if count > substring.length\n           \
    \     return substring.length\n            \n        elif c == substring[17]:\n\
    \            count += 1\n            if count > substring.length\n           \
    \     return substring.length\n            \n        elif c == substring[18]:\n\
    \            count += 1\n            if count > substring.length\n           \
    \     return substring.length\n            \n        elif c == substring[19]:\n\
    \            count += 1\n            if count > substring.length\n           \
    \     return substring.length\n            \n        elif c == substring[20]:\n\
    \            count += 1\n            if count > substring.length\n           \
    \     return substring.length\n            \n        elif c == substring[21]:\n\
    \            count += 1\n            if count > substring.length\n           \
    \     return substring.length\n            \n        elif c == substring[22]:\n\
    \            count += 1\n            if count > substring.length\n           \
    \     return substring.length\n            \n        elif c == substring[23]:\n\
    \            count += 1", "    \n    count = 0\n    \n    for char in string\n\
    \        if char == substring[1]\n            count += 1\n        elseif char\
    \ == substring[2]\n            count += 1\n        elseif char == substring[3]\n\
    \            count += 1\n        elseif char == substring[4]\n            count\
    \ += 1\n        elseif char == substring[5]\n            count += 1\n        elseif\
    \ char == substring[6]\n            count += 1\n        elseif char == substring[7]\n\
    \            count += 1\n        elseif char == substring[8]\n            count\
    \ += 1\n        elseif char == substring[9]\n            count += 1\n        elseif\
    \ char == substring[10]\n            count += 1\n        elseif char == substring[11]\n\
    \            count += 1\n        elseif char == substring[12]\n            count\
    \ += 1\n        elseif char == substring[13]\n            count += 1\n       \
    \ elseif char == substring[14]\n            count += 1\n        elseif char ==\
    \ substring[15]\n            count += 1\n        elseif char == substring[16]\n\
    \            count += 1\n        elseif char == substring[17]\n            count\
    \ += 1\n        elseif char == substring[18]\n            count += 1\n       \
    \ elseif char == substring[19]\n            count += 1\n        elseif char ==\
    \ substring[20]\n            count += 1\n        elseif char == substring[21]\n\
    \            count += 1\n        elseif char == substring[22]\n            count\
    \ += 1\n        elseif char == substring[23]\n            count += 1\n       \
    \ elseif char == substring[24]\n            count += 1\n        elseif char ==\
    \ substring[25]\n            count += 1\n        elseif char == substring[26]\n\
    \            count += 1\n        elseif char == substring[27]\n            count\
    \ += 1\n        elseif char == substring[28]\n            count += 1\n       \
    \ elseif char == substring[29]\n            count += 1\n        elseif char ==\
    \ substring[30]\n            count += 1\n        elseif char == substring[31]\n\
    \            count += 1\n        elseif char == substring[32]\n            count\
    \ += 1\n        elseif char == substring[33]\n            count += 1\n       \
    \ elseif char == substring[34]\n            count += 1\n        elseif char ==\
    \ substring[35]\n            count += 1\n        elseif char == substring[36]\n\
    \            count += 1\n        elseif char == substring[37]\n            count\
    \ += 1\n        elseif char == substring[38]\n            count += 1\n       \
    \ elseif char == substring[39]\n            count += 1\n        elseif char ==\
    \ substring[40]\n            count += 1\n        elseif char == substring[41]\n\
    \            count += 1\n        elseif char == substring[42]\n            count\
    \ += 1\n        elseif char == substring[43]\n            count += 1\n       \
    \ elseif char == substring[44]", "    count = 0\n    for c in string\n       \
    \ if substring == c\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abcd\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcde\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdea\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bcdca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bcdcb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bcdc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bcdc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdc\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bcdc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bcdc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bcdc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bcdc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcdc\")\n\
    </cell>\n", "    if string == \"\" then return 0 \n    if substring == \"\" then\
    \ return 1 \n    if substring[0] == string[0] then return how_many_times(string[1:],\
    \ substring[1:])\n    else return how_many_times(string[1:], substring) + how_many_times(string,\
    \ substring[1:])\nend", "    \n    count = 0\n    \n    for c in string\n    \
    \    if c == substring\n            count += 1\n        end\n    end\n    \n \
    \   return count\nend", "    count = 0\n    for c in string:\n        if c ==\
    \ substring[0]:\n            count += 1\n            if count > substring.length\n\
    \                return -1\n        elif c == substring[substring.length]\n  \
    \          count += 1\n            if count > substring.length\n             \
    \   return -1\n    return count\nend", "    if string == \"\" || substring ==\
    \ \"\" \n        return 0 \n    else \n        substring = lowercase(substring)\n\
    \        string = lowercase(string)\n        string_length = length(substring)\n\
    \        string_length = string_length - 1\n        string_length = string_length\
    \ + 1\n        string_length = string_length + 1\n        string_length = string_length\
    \ + 1\n        string_length = string_length + 1\n        string_length = string_length\
    \ + 1\n        string_length = string_length + 1\n        string_length = string_length\
    \ + 1\n        string_length = string_length + 1\n        string_length = string_length\
    \ + 1\n        string_length = string_length + 1\n        string_length = string_length\
    \ + 1\n        string_length = string_length + 1\n        string_length = string_length\
    \ + 1\n        string_length = string_length + 1\n        string_length = string_length\
    \ + 1\n        string_length = string_length + 1\n        string_length = string_length\
    \ + 1\n        string_length = string_length + 1\n        string_length = string_length\
    \ + 1\n        string_length = string_length + 1\n        string_length = string_length\
    \ + 1\n        string_length = string_length + 1\n        string_length = string_length\
    \ + 1\n        string_length = string_length + 1\n        string_length = string_length\
    \ + 1\n        string_length = string_length + 1\n        string_length = string_length\
    \ + 1\n        string_length = string_length + 1\n        string_length = string_length\
    \ + 1\n        string_length = string_length + 1\n        string_length = string_length\
    \ + 1\n        string_length = string_length + 1\n        string_length = string_length\
    \ + 1\n        string_length = string_length + 1\n        string_length = string_length\
    \ + 1\n        string_length = string_length + 1\n        string_length = string_length\
    \ + 1\n        string_length = string_length + 1\n        string_length = string_length\
    \ + 1\n        string_length = string_length + 1\n        string_length = string_length\
    \ + 1\n        string_length = string_length + 1\n        string_length = string_length\
    \ + 1\n        string_length = string_length + 1\n        string_length = string_length\
    \ + 1\n        string_length = string_length + 1\n        string_length = string_length\
    \ + 1\n        string_length = string_length + 1\n        string_length = string_length\
    \ + 1\n        string_length = string_length + 1\n        string_length = string_length\
    \ + 1\n        string_length = string_length + 1\n        string_length = string_length\
    \ + 1\n        string_length = string_length + 1\n        string_length = string_length\
    \ + 1\n        string_length = string_length + 1\n        string_length = string_length\
    \ + 1\n        string_length = string_length + 1\n        string_length = string_length\
    \ + 1\n        string_length = string_length + 1\n        string_length = string_length\
    \ + 1\n        string_length = string_length + 1\n        string_length = string_length\
    \ + 1\n        string_length = string_length + 1\n        string_length = string_length\
    \ + 1\n        string_length = string_length + 1\n        string_length = string_length\
    \ + 1", "    count = 0\n    for c in string:\n        if c == substring[0]:\n\
    \            count += 1\n            if substring[1:] == string[c:c+substring.length()]:\n\
    \                count += 1\n        elif substring[1:] == string[c:c+substring.length()]:\n\
    \            count += 1\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"c\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"ab\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcab", "    if string == \"\" || substring\
    \ == \"\"\n        return 0\n    end\n    \n    count = 0\n    \n    for char\
    \ in string\n        if char == substring[1]\n            count += 1\n       \
    \ elseif char == substring[2]\n            count += 1\n        elseif char ==\
    \ substring[3]\n            count += 1\n        elseif char == substring[4]\n\
    \            count += 1\n        elseif char == substring[5]\n            count\
    \ += 1\n        elseif char == substring[6]\n            count += 1\n        elseif\
    \ char == substring[7]\n            count += 1\n        elseif char == substring[8]\n\
    \            count += 1\n        elseif char == substring[9]\n            count\
    \ += 1\n        elseif char == substring[10]\n            count += 1\n       \
    \ elseif char == substring[11]\n            count += 1\n        elseif char ==\
    \ substring[12]\n            count += 1\n        elseif char == substring[13]\n\
    \            count += 1\n        elseif char == substring[14]\n            count\
    \ += 1\n        elseif char == substring[15]\n            count += 1\n       \
    \ elseif char == substring[16]\n            count += 1\n        elseif char ==\
    \ substring[17]\n            count += 1\n        elseif char == substring[18]\n\
    \            count += 1\n        elseif char == substring[19]\n            count\
    \ += 1\n        elseif char == substring[20]\n            count += 1\n       \
    \ elseif char == substring[21]\n            count += 1\n        elseif char ==\
    \ substring[22]\n            count += 1\n        elseif char == substring[23]\n\
    \            count += 1\n        elseif char == substring[24]\n            count\
    \ += 1\n        elseif char == substring[25]\n            count += 1\n       \
    \ elseif char == substring[26]\n            count += 1\n        elseif char ==\
    \ substring[27]\n            count += 1\n        elseif char == substring[28]\n\
    \            count += 1\n        elseif char == substring[29]\n            count\
    \ += 1\n        elseif char == substring[30]\n            count += 1\n       \
    \ elseif char == substring[31]\n            count += 1\n        elseif char ==\
    \ substring[32]\n            count += 1\n        elseif char == substring[33]\n\
    \            count += 1\n        elseif char == substring[34]\n            count\
    \ += 1\n        elseif char == substring[35]\n            count += 1\n       \
    \ elseif char == substring[36]\n            count += 1\n        elseif char ==\
    \ substring[37]\n            count += 1\n        elseif char == substring[38]\n\
    \            count += 1\n        elseif char == substring[39]\n            count\
    \ += 1\n        elseif char == substring[40]\n            count += 1\n       \
    \ elseif char == substring[41]\n            count += 1\n        elseif char ==\
    \ substring[42]\n            count += 1\n        elseif char == substring[", " \
    \   \n    count = 0\n    \n    for c in string:\n        if c == substring[0]:\n\
    \            count += 1\n            if count > substring[1]:\n              \
    \  break\n        elif c == substring[1]:\n            count += 1\n          \
    \  if count > substring[1]:\n                break\n            \n    return count\n\
    </cell>\n<code language=julia-1.4>\nhow_many_times(\"abcabc\", \"abc\")\n</cell>\n\
    <code language=julia-1.4>\nhow_many_times(\"abcabc\", \"bca\")\n</cell>\n<code\
    \ language=julia-1.4>\nhow_many_times(\"abcabc\", \"abcde\")\n</cell>\n<code language=julia-1.4>\n\
    how_many_times(\"abcabc\", \"abcde\")\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"\
    abcabc\", \"abcde\")\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"abcabc\"\
    , \"abcde\")\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"abcabc\", \"\
    abcde\")\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"abcabc\", \"abcde\"\
    )\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"abcabc\", \"abcde\")\n\
    </cell>\n<code language=julia-1.4>\nhow_many_times(\"abcabc\", \"abcde\")\n</cell>\n\
    <code language=julia-1.4>\nhow_many_times(\"abcabc\", \"abcde\")\n</cell>\n<code\
    \ language=julia-1.4>\nhow_many_times(\"abcabc\", \"abcde\")\n</cell>\n<code language=julia-1.4>\n\
    how_many_times(\"abcabc\", \"abcde\")\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"\
    abcabc\", \"abcde\")\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"abcabc\"\
    , \"abcde\")\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"abcabc\", \"\
    abcde\")\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"abcabc\", \"abcde\"\
    )\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"abcabc\", \"abcde\")\n\
    </cell>\n<code language=julia-1.4>\nhow_many_times(\"abcabc\", \"abcde\")\n</cell>\n\
    <code language=julia-1.4>\nhow_many_times(\"abcabc\", \"abcde\")\n</cell>\n<code\
    \ language=", "    \n    count = 0\n    \n    for char in string:\n        if\
    \ char == substring[0]:\n            count += 1\n            if char == substring[1]:\n\
    \                count += 1\n                if char == substring[2]:\n      \
    \              count += 1\n                    if char == substring[3]:\n    \
    \                    count += 1\n                        if char == substring[4]:\n\
    \                            count += 1\n                            if char ==\
    \ substring[5]:\n                                count += 1\n                \
    \                if char == substring[6]:\n                                  \
    \  count += 1\n                                    if char == substring[7]:\n\
    \                                        count += 1\n                        \
    \                if char == substring[8]:\n                                  \
    \          count += 1\n                                            if char ==\
    \ substring[9]:\n                                                count += 1\n\
    \                                                if char == substring[10]:\n \
    \                                                   count += 1\n             \
    \                                       if char == substring[11]:\n          \
    \                                              count += 1\n                  \
    \                                      if char == substring[12]:\n           \
    \                                                 count += 1\n               \
    \                                             if char == substring[13]:\n    \
    \                                                            count += 1\n    \
    \                                                            if char == substring[14]:\n\
    \                                                                    count +=\
    \ 1\n                                                                    if char\
    \ == substring[15]:\n                                                        \
    \                count += 1\n                                                \
    \        if char == substring[16]:\n                                         \
    \                   count += 1\n                                             \
    \               if char == substring[17]:\n                                  \
    \                              count += 1\n                                  \
    \                              if char == substring[18]:\n                   \
    \                                                 count += 1\n               \
    \                                                     if char == substring[19]:\n\
    \                                                                        count\
    \ += 1\n                                                        if char == substring[20]:\n\
    \                                                            count += 1\n    \
    \                                                        if char == substring[21]:\n\
    \                                                                count += 1\n\
    \                                                                if char == substring[22]:\n\
    \                                                                    count +=\
    \ 1\n                                                                    if char\
    \ == substring[23]:\n                                                        \
    \                count += 1\n                                                \
    \        if char == substring[24]:\n                                         \
    \                   count += 1\n                                             \
    \               if char == substring[25]:\n                                  \
    \                              count += 1\n                                  \
    \                              if char == substring[26]:\n                   \
    \                                                 count += 1\n               \
    \                                                     if char == substring[27]:\n\
    \                                                                        count\
    \ += 1\n                                                        if char == substring[28]:\n\
    \                                                            count += 1\n    \
    \                                                        if char == substring[29]:\n\
    \                                                                count += 1\n\
    \                                                                if char == substring[30]:\n\
    \                                                                    count +=\
    \ 1\n                                                                    if char\
    \ == substring[31]:\n                                                        \
    \                count += 1\n                                                \
    \        if char == substring[32]:\n                                         \
    \                   count += 1\n                                             \
    \               if char == substring[33]:\n                                  \
    \                              count += 1\n                                  \
    \                              if char == substring[34]:\n                   \
    \                                                 count += 1\n               \
    \                                                     if char == substring[35]:\n\
    \                                                                        count\
    \ += 1\n                                                        if char == substring[36]:\n\
    \                                                            count += 1\n    \
    \                                                        if char == substring[37]:\n\
    \                                                                count += 1\n\
    \                                                                if char == substring[38]:\n\
    \                                                                    count +=\
    \ 1\n                                                                    if char\
    \ == substring[39]:\n                                                        \
    \                count += 1\n                                                \
    \        if char == substring[40]:\n                                         \
    \                   count += 1\n                                             \
    \               if char == substring[41]:\n", "    if string == \"\" || substring\
    \ == \"\"\n        return 0\n    \n    string_array = string.split(\" \")\n  \
    \  substring_array = substring.split(\" \")\n    \n    count = 0\n    for s in\
    \ string_array\n        for ss in substring_array\n            if s == ss\n  \
    \              count += 1\n            end\n        end\n    end\n    \n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"The quick brown\
    \ fox jumps over the lazy dog\", \"fox\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"The quick brown fox jumps over the lazy dog\", \"fox\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"The quick brown fox jumps over the\
    \ lazy dog\", \"fox\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    The quick brown fox jumps over the lazy dog\", \"fox\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"The quick brown fox jumps over the lazy dog\", \"fox\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"The quick brown fox jumps over the\
    \ lazy dog\", \"fox\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    The quick brown fox jumps over the lazy dog\", \"fox\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"The quick brown fox jumps over the lazy dog\", \"fox\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"The quick brown fox jumps over the\
    \ lazy dog\", \"fox\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    The quick brown fox jumps over the lazy dog\", \"fox\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"The quick brown fox jumps over the lazy dog\", \"fox\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"The quick brown fox jumps over the\
    \ lazy dog\", \"fox\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    The quick brown fox jumps over the lazy dog\", \"fox\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"The quick brown fox jumps over the lazy dog\", \"fox\")", " \
    \   if string == \"\" \n        then return 0 \n        else if substring == \"\
    \" \n            then return 1 \n            else if substring(1,length(string))\
    \ == string \n                then return 1 \n                else return 0 \n\
    \        end\n    end\nend\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"\
    abcabcbb\", \"abc\")\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"abcabcbb\"\
    , \"bcc\")\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"abcabcbb\", \"\
    bb\")\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"abcabcbb\", \"a\"\
    )\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"abcabcbb\", \"bc\")\n\
    </cell>\n<code language=julia-1.4>\nhow_many_times(\"abcabcbb\", \"bbc\")\n</cell>\n\
    <code language=julia-1.4>\nhow_many_times(\"abcabcbb\", \"abbc\")\n</cell>\n<code\
    \ language=julia-1.4>\nhow_many_times(\"abcabcbb\", \"abbb\")\n</cell>\n<code\
    \ language=julia-1.4>\nhow_many_times(\"abcabcbb\", \"abbbc\")\n</cell>\n<code\
    \ language=julia-1.4>\nhow_many_times(\"abcabcbb\", \"abbbbc\")\n</cell>\n<code\
    \ language=julia-1.4>\nhow_many_times(\"abcabcbb\", \"abbbbcc\")\n</cell>\n<code\
    \ language=julia-1.4>\nhow_many_times(\"abcabcbb\", \"abbbbccc\")\n</cell>\n<code\
    \ language=julia-1.4>\nhow_many_times(\"abcabcbb\", \"abbbbcccbb\")\n</cell>\n\
    <code language=julia-1.4>\nhow_many_times(\"abcabcbb\", \"abbbbcccbbb\")\n</cell>\n\
    <code language=julia-1.4>\nhow_many_times(\"abcabcbb\", \"abbbbcccbbbc\")\n</cell>\n\
    <code language=julia-1.4>\nhow_many_times(\"abcabcbb\", \"abbbbcccbbbcc\")\n</cell>\n\
    <code language=julia-1.4>\nhow_many_times(\"abcabcbb\", \"abbbbcccbbbccc\")\n\
    </cell>\n<code language=julia-1.4>\nhow_many_times(\"", "    count = 0\n    for\
    \ c in string\n        if c == substring\n            count += 1\n        end\n\
    \    end\n    return count\nend", "    count = 0\n    for c in string:\n     \
    \   if c == substring[0]:\n            count += 1\n            if count > substring.length\n\
    \                return substring.length\n        elif c == substring[substring.length]\n\
    \            count += 1\n            if count > substring.length\n           \
    \     return substring.length\n        end\n    end\n    return count\nend", " \
    \   if string == \"\" \n        then return 0\n    else if substring == \"\" \n\
    \        then return 1\n    else if string[0..(length(substring)-1)] == substring\n\
    \        then return 1\n    else if string[0..(length(substring)-1)] != substring\n\
    \        then return 0\n    else if string[0..(length(substring)-1)] == substring[0..(length(substring)-1)]\n\
    \        then return how_many_times(string[1..end], substring)\n    else if string[0..(length(substring)-1)]\
    \ != substring[0..(length(substring)-1)]\n        then return how_many_times(string[1..end],\
    \ substring)\n    else return how_many_times(string[1..end], substring)\nend\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bb\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"ab\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"abc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabcbb\", \"acb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabcbb\", \"abbb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"abbbb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"abbbbc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"abbbbcc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"abbbbccc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"abbbbccca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"abbbbcccba\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"abbbbcccbb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"abbbbcccbbb\")\n</cell>\n<code language=julia-1.5>\n", "    if string == \"\
    \" \n        then return 0 \n    else if substring == \"\"\n        then return\
    \ 1\n    else if string==substring\n        then return 1\n    else if string.contains(substring)\n\
    \        then return 1 + how_many_times(string.substring(string.indexOf(substring)+1),substring)\n\
    \    else return how_many_times(string.substring(string.indexOf(substring)+1),substring)\n\
    end\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\",\"abc\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\",\"bcd\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\",\"x\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\",\"xab\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\",\"xabx\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    ,\"xabxab\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\",\"\
    xabxabx\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\",\"xabxabxab\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\",\"xabxabxabx\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\",\"xabxabxabxab\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\",\"xabxabxabxabx\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\",\"xabxabxabxabxab\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\",\"xabxabxabxabxabx\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\",\"xabxabxabxabxabxab\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\",\"xabxabxabxabxabxabx\"\
    )\n</cell>\n", "    if string == \"\" || substring == \"\"\n        return 0\n\
    \    \n    count = 1\n    \n    for c in string\n        if c == substring\n \
    \           count += 1\n        else\n            count = 0\n            break\n\
    \    end\n    \n    return count\nend", "    count = 0\n    for c in string\n\
    \        if c == substring\n            count += 1\n        end\n    end\n   \
    \ return count\nend", "    count = 0\n    for c in string:\n        if c == substring:\n\
    \            count += 1\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"abcde\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bcde\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\"\
    )\n</cell>\n<code language=julia-1.5>\n", "    count = 0\n    for c in string:\n\
    \        if c == substring:\n            count += 1\n    return count\nend", " \
    \   count = 0\n    \n    for c in string\n        if c == substring\n        \
    \    count += 1\n        end\n    end\n    \n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"c\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"ab\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"ab\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"ab\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"ab\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"ab\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"ab\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"ab\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"ab\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"ab\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</", "    \n  \
    \  count = 0\n    \n    for c in string:\n        if c == substring[0]:\n    \
    \        count += 1\n            if count > substring[1]:\n                break\n\
    \        else:\n            count = 0\n    \n    return count\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"abc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"abcde\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"abccba\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\",\
    \ \"abccbc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\",\
    \ \"abccbca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"abccbcaa\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"abccbcaaa\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"abccbcaaaa\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"abccbcaaaaa\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"abccbcaaaaaa\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"abccbcaaaaaaa\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"abccbcaaaaaaaa\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"abccbcaaaaaaaab\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"abccbcaaaaaaaabb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"abccbcaaaaaaaabbb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"abccbcaaaaaaaabbbc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"abccbcaaaaaaaabbbcc\")\n</cell>\n<code language=julia-", "    \n \
    \   count = 0\n    \n    for c in string\n        if substring == c\n        \
    \    count += 1\n        end\n    end\n    \n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"ab\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bb\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabcbb\", \"c\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabcbb\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"bbc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"\
    bbc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabcbb\", \"bbc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabcbb\", \"bbc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"bbc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"\
    bbc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bbc\")\n</cell", "    \n\
    \    count = 0\n    \n    for char in string\n        if char == substring\n \
    \           count += 1\n        end\n    end\n    \n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"abc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabcbb\", \"bcd\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabcbb\", \"ab\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabcbb\", \"a\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"abbb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\",\
    \ \"abbbb\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"abbbbc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"abbbbcc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"abbbbccc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"abbbbccca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"abbbbcccab\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"abbbbcccabc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"abbbbcccabcc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"abbbbcccabccc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"abbbbcccabccca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabcbb\"\
    , \"abbbbcccabcccab\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabcbb\", \"abbbbcccabcccabc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabcbb\", \"abbbb", "    count = 0\n    for c in string:\n        if substring\
    \ == c:\n            count += 1\n    return count\nend", "    if string == \"\"\
    \ || substring == \"\"\n        return 0\n    end\n    \n    count = 0\n    \n\
    \    for c in string\n        if c == substring[1]\n            count += 1\n \
    \       elseif c == substring[2]\n            count += 1\n        elseif c ==\
    \ substring[3]\n            count += 1\n        elseif c == substring[4]\n   \
    \         count += 1\n        elseif c == substring[5]\n            count += 1\n\
    \        elseif c == substring[6]\n            count += 1\n        elseif c ==\
    \ substring[7]\n            count += 1\n        elseif c == substring[8]\n   \
    \         count += 1\n        elseif c == substring[9]\n            count += 1\n\
    \        elseif c == substring[10]\n            count += 1\n        elseif c ==\
    \ substring[11]\n            count += 1\n        elseif c == substring[12]\n \
    \           count += 1\n        elseif c == substring[13]\n            count +=\
    \ 1\n        elseif c == substring[14]\n            count += 1\n        elseif\
    \ c == substring[15]\n            count += 1\n        elseif c == substring[16]\n\
    \            count += 1\n        elseif c == substring[17]\n            count\
    \ += 1\n        elseif c == substring[18]\n            count += 1\n        elseif\
    \ c == substring[19]\n            count += 1\n        elseif c == substring[20]\n\
    \            count += 1\n        elseif c == substring[21]\n            count\
    \ += 1\n        elseif c == substring[22]\n            count += 1\n        elseif\
    \ c == substring[23]\n            count += 1\n        elseif c == substring[24]\n\
    \            count += 1\n        elseif c == substring[25]\n            count\
    \ += 1\n        elseif c == substring[26]\n            count += 1\n        elseif\
    \ c == substring[27]\n            count += 1\n        elseif c == substring[28]\n\
    \            count += 1\n        elseif c == substring[29]\n            count\
    \ += 1\n        elseif c == substring[30]\n            count += 1\n        elseif\
    \ c == substring[31]\n            count += 1\n        elseif c == substring[32]\n\
    \            count += 1\n        elseif c == substring[33]\n            count\
    \ += 1\n        elseif c == substring[34]\n            count += 1\n        elseif\
    \ c == substring[35]\n            count += 1\n        elseif c == substring[36]\n\
    \            count += 1\n        elseif c == substring[37]\n            count\
    \ += 1\n        elseif c == substring[38]\n            count += 1\n        elseif\
    \ c == substring[39]\n            count += 1\n        elseif c == substring[40]\n\
    \            count += 1\n        elseif c == substring[41]\n            count\
    \ += 1\n        elseif c == substring[42]\n            count += 1\n        elseif\
    \ c == substring[43]\n            count += 1\n        elseif c == substring[44]\n\
    \            count += 1\n        elseif c == substring[45]\n            count\
    \ += 1\n        elseif c == substring[46]\n            count += 1\n        elseif\
    \ c == substring", "    count = 0\n    for c in string:\n        if c == substring:\n\
    \            count += 1\n    return count\nend", "    count = 0\n    for char\
    \ in string\n        if char == substring\n            count += 1\n        end\n\
    \    end\n    return count\nend", "    if string == \"\" || substring == \"\"\n\
    \        return 0\n    \n    i = 0\n    j = string.length - 1\n    \n    while\
    \ i <= j\n        if string[i] == substring[0]\n            i += 1\n         \
    \   if i == string.length\n                return 1\n        elseif string[j]\
    \ == substring[1]\n            j -= 1\n            if j == -1\n              \
    \  return 1\n        else\n            if string[i] < substring[0]\n         \
    \       i += 1\n            else\n                j -= 1\n        end\n    end\n\
    \    return 0\nend\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"abcde\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcde\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcda\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcd\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bcd\")\n</cell>\n<code language=julia-", "    if string == \"\" || substring\
    \ == \"\"\n        return 0\n    \n    string_length = len(string)\n    substring_length\
    \ = len(substring)\n    \n    i = 0\n    j = 0\n    \n    while i < string_length\
    \ && j < substring_length\n        if string[i] == substring[j]\n            i\
    \ += 1\n            j += 1\n        else\n            if j == substring_length\n\
    \                return i + 1\n            else\n                j += 1\n    \
    \    end\n    end\n    \n    return 0\nend", "    count = 0\n    for c in string\n\
    \        if c == substring\n            count += 1\n        end\n    end\n   \
    \ return count\nend\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"abcabc\"\
    , \"abc\")\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"abcabc\", \"\
    bca\")\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"abcabc\", \"bcc\"\
    )\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"abcabc\", \"bccc\")\n\
    </cell>\n<code language=julia-1.4>\nhow_many_times(\"abcabc\", \"bcca\")\n</cell>\n\
    <code language=julia-1.4>\nhow_many_times(\"abcabc\", \"bccca\")\n</cell>\n<code\
    \ language=julia-1.4>\nhow_many_times(\"abcabc\", \"bccaa\")\n</cell>\n<code language=julia-1.4>\n\
    how_many_times(\"abcabc\", \"bccaab\")\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"\
    abcabc\", \"bccaabb\")\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"\
    abcabc\", \"bccaabbb\")\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"\
    abcabc\", \"bccaabbbb\")\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"\
    abcabc\", \"bccaabbbbc\")\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"\
    abcabc\", \"bccaabbbbcc\")\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"\
    abcabc\", \"bccaabbbbccc\")\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"\
    abcabc\", \"bccaabbbbccca\")\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"\
    abcabc\", \"bccaabbbbcccab\")\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"\
    abcabc\", \"bccaabbbbcccabc\")\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"\
    abcabc\", \"bccaabbbbcccabca\")\n</cell>\n<code language=julia-1.4>\nhow_many_times(\"\
    abcabc\", \"bccaabbbbcccabcab\")\n</cell>\n<code language=julia-1.", "    count\
    \ = 0\n    for c in string\n        if c == substring\n            count += 1\n\
    \        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"c\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"ab\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=", "    count = 0\n\
    \    for c in string:\n        if c == substring:\n            count += 1\n  \
    \  return count\nend", "    \n    count = 0\n    \n    for c in string:\n    \
    \    if c == substring[0]:\n            count += 1\n        elif c == substring[1]:\n\
    \            count += 1\n            \n    return count\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bcd\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"c\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"ab\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcab", "    \n    count = 0\n    \n    for char in string\n\
    \        if char == substring\n            count += 1\n        end\n    end\n\
    \    \n    return count\nend\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"abc\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"bca\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"\
    abcde\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcde\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"cde\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"de\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bcde\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"cde\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"de\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcde\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"cde\")\n</cell>\n\
    <code language=julia-1.5>\nhow_many_times(\"abcabc\", \"de\")\n</cell>\n<code\
    \ language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\")\n</cell>\n<code language=julia-1.5>\n\
    how_many_times(\"abcabc\", \"bcde\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"\
    abcabc\", \"cde\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\"\
    , \"de\")\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bc\"\
    )\n</cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"bcde\")\n\
    </cell>\n<code language=julia-1.5>\nhow_many_times(\"abcabc\", \"cde\")\n</cell>\n\
    <code language=julia-1.5", "    if string == \"\" || substring == \"\" \n    \
    \    then return 0\n    else if string[0] == substring[0]\n        then return\
    \ 1\n    else if string[string.length-1] == substring[substring.length-1]\n  \
    \      then return 1\n    else if string[string.length-1] == substring[0]\n  \
    \      then return 1\n    else if string[0] == substring[substring.length-1]\n\
    \        then return 1\n    else if string[string.length-1] == substring[0]\n\
    \        then return 1\n    else if string[0] == substring[0]\n        then return\
    \ 1\n    else if string[string.length-1] == substring[substring.length-1]\n  \
    \      then return 1\n    else if string[string.length-1] == substring[0]\n  \
    \      then return 1\n    else if string[0] == substring[substring.length-1]\n\
    \        then return 1\n    else if string[0] == substring[0]\n        then return\
    \ 1\n    else if string[string.length-1] == substring[substring.length-1]\n  \
    \      then return 1\n    else if string[string.length-1] == substring[0]\n  \
    \      then return 1\n    else if string[0] == substring[substring.length-1]\n\
    \        then return 1\n    else if string[0] == substring[0]\n        then return\
    \ 1\n    else if string[string.length-1] == substring[substring.length-1]\n  \
    \      then return 1\n    else if string[string.length-1] == substring[0]\n  \
    \      then return 1\n    else if string[0] == substring[substring.length-1]\n\
    \        then return 1\n    else if string[0] == substring[0]\n        then return\
    \ 1\n    else if string[string.length-1] == substring[substring.length-1]\n  \
    \      then return 1\n    else if string[string.length-1] == substring[0]\n  \
    \      then return 1\n    else if string[0] == substring[substring.length-1]\n\
    \        then return 1\n    else if string[0] == substring[0]\n        then return\
    \ 1\n    else if string[string.length-1] == substring[substring.length-1]\n  \
    \      then return 1\n    else if string[string.length-1] == substring[0]\n  \
    \      then return 1\n    else if string[0] == substring[substring.length-1]\n\
    \        then return 1\n    else if string[0] == substring[0]\n        then return\
    \ 1\n    else if string[string.length-1] == substring[substring.length-1]\n  \
    \      then return 1\n    else if string[string.length-1] == substring[0]\n  \
    \      then return 1\n    else if string[0] == substring[substring.length-1]\n\
    \        then return 1\n    else if string[0] == substring[0]\n        then return\
    \ 1\n    else if string["]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

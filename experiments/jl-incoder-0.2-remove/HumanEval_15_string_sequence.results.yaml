language: jl
name: HumanEval_15_string_sequence
results:
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_sequence = String()\n    \n    for i = 1:n\n        string_sequence\
    \ = string_sequence + String(i)\n    end\n    \n    return string_sequence\nend\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a string as input and returns a string containing\
    \ all the characters in that string in alphabetical order.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprozqomqg.jl:13\nin expression starting at\
    \ /tmp/tmprozqomqg.jl:13\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = \"\"\n    for i in 0:n-1\n        string_seq = string_seq\
    \ + string(i)\n    end\n    return string_seq\nend\n</cell>\n<code language=julia-1.0>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.0>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpivls6joi.jl:10\nin expression starting at\
    \ /tmp/tmpivls6joi.jl:10\n"
  stdout: ''
  timestamp: 1659747208
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1:n\n        push!(string_seq,i)\n\
    \    end\n    return join(\" \",string_seq)\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmx4t0a3_.jl:10\nin expression starting at\
    \ /tmp/tmpmx4t0a3_.jl:10\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    for i = 1:n\n        string = string + string(i)\n\
    \    end\n    return string\nend\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2vz7qjo1.jl:11\nin expression starting at\
    \ /tmp/tmp2vz7qjo1.jl:11\n"
  stdout: ''
  timestamp: 1659747208
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_sequence = \"\"\n    for i = 1:n\n        string_sequence = string_sequence\
    \ + string(i)\n    end\n    return string_sequence\nend\n</cell>\n<code language=julia-1.4>\n\
    string_sequence(10)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of occurrences of the character 'a'\
    \ in the string.\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpko3dv00i.jl:10\nin expression starting at\
    \ /tmp/tmpko3dv00i.jl:10\n"
  stdout: ''
  timestamp: 1659747208
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1:n\n        push!(string_seq, string(i))\n\
    \    end\n    return join(\" \", string_seq)\nend\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the first n prime numbers. \nHint: Use a for loop and a prime number generator\
    \ function.\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\t\
    @test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplhrpt4kx.jl:10\nin expression starting at\
    \ /tmp/tmplhrpt4kx.jl:10\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    \n    for i = 1:n\n        string = string +\
    \ string(i)\n    end\n    \n    return string\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppze1t2aq.jl:13\nin expression starting at\
    \ /tmp/tmppze1t2aq.jl:13\n"
  stdout: ''
  timestamp: 1659747208
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    for i = 1:n\n        string = string + string(i)\n\
    \    end\n    return string\nend\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2vz7qjo1.jl:11\nin expression starting at\
    \ /tmp/tmp2vz7qjo1.jl:11\n"
  stdout: ''
  timestamp: 1659747208
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw2592ylg.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw2592ylg.jl:1\n\
    in expression starting at /tmp/tmpw2592ylg.jl:1\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_seq = String[]\n    \n    for i in 0:n-1\n        string_seq[i]\
    \ = i\n    end\n    \n    return join(\" \", string_seq)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nstring_sequence(10)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a string and returns the number of characters in the string.\n\
    using Test\n\n@testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0)\
    \ == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"\
    0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbqi1287h.jl:13\nin expression starting at\
    \ /tmp/tmpbqi1287h.jl:13\n"
  stdout: ''
  timestamp: 1659747208
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1 to n do\n        push!(string_seq,\
    \ i)\n    end\n    return join(\" \", string_seq)\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the first n prime numbers. \nHint: Use a for loop and a prime number test.\n\
    using Test\n\n@testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0)\
    \ == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"\
    0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"for\" at /tmp/tmpxfdumt97.jl:5 expected \"\
    end\", got \"n\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxfdumt97.jl:5\n\
    in expression starting at /tmp/tmpxfdumt97.jl:5\n"
  stdout: ''
  timestamp: 1659747208
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw2592ylg.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw2592ylg.jl:1\n\
    in expression starting at /tmp/tmpw2592ylg.jl:1\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = \"\"\n    for i in 0:n-1\n        string_seq = string_seq\
    \ + string(i)\n    end\n    return string_seq\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpbkw1ijv_.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpbkw1ijv_.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbkw1ijv_.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbkw1ijv_.jl:14\ntest set: Error\
    \ During Test at /tmp/tmpbkw1ijv_.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::String)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpbkw1ijv_.jl:6\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbkw1ijv_.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbkw1ijv_.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpbkw1ijv_.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpbkw1ijv_.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbkw1ijv_.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbkw1ijv_.jl:14\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    1      2      3\n"
  timestamp: 1659747210
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    for i = 1:n\n        string = string + string(i)\n\
    \    end\n    return string\nend\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2vz7qjo1.jl:11\nin expression starting at\
    \ /tmp/tmp2vz7qjo1.jl:11\n"
  stdout: ''
  timestamp: 1659747208
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1:n\n        string_seq[i] = string(i)\n\
    \    end\n    return string_seq\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp9q4cj4na.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp9q4cj4na.jl:15\n  Test threw exception\n\
    \  Expression: candidate(0) == \"0\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{String} to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmp9q4cj4na.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9q4cj4na.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9q4cj4na.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp9q4cj4na.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  BoundsError: attempt to access 0-element Vector{String}\
    \ at index [1]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n\
    \   [2] string_sequence(n::Int64)\n     @ Main /tmp/tmp9q4cj4na.jl:6\n   [3] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp9q4cj4na.jl:16 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp9q4cj4na.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp9q4cj4na.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  BoundsError: attempt to access\
    \ 0-element Vector{String} at index [1]\n  Stacktrace:\n   [1] setindex!\n   \
    \  @ ./array.jl:903 [inlined]\n   [2] string_sequence(n::Int64)\n     @ Main /tmp/tmp9q4cj4na.jl:6\n\
    \   [3] m"
  timestamp: 1659747210
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1 to n do\n        string_seq[i - 1]\
    \ = i\n    return string_seq\nend\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a string as input and\
    \ returns a string with all the characters in lower case. \nFor example string_lower(\"\
    Hello World\") should return \"hello world\".\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"for\" at /tmp/tmpqsge2z2o.jl:5 expected \"\
    end\", got \"n\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqsge2z2o.jl:5\n\
    in expression starting at /tmp/tmpqsge2z2o.jl:5\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_sequence = \"\"\n    \n    for i = 1:n\n        string_sequence\
    \ = string_sequence + \" \" + to_string(i)\n    end\n    \n    return string_sequence\n\
    end\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(100)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a vector of integers and returns a vector of strings where each string is a\
    \ space-delimited string of numbers from 0 up to the length of the vector.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0)\
    \ == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"\
    0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmo0trlj9.jl:13\nin expression starting at\
    \ /tmp/tmpmo0trlj9.jl:13\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    \n    for i = 1:n\n        string = string +\
    \ i\n    end\n    \n    return string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp95i9ewen.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmp95i9ewen.jl:18\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp95i9ewen.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp95i9ewen.jl:17\ntest set: Error\
    \ During Test at /tmp/tmp95i9ewen.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::Int64)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n \
    \   +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmp95i9ewen.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp95i9ewen.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp95i9ewen.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp95i9ewen.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::Int64)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n\
    \    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/cent"
  timestamp: 1659747210
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_sequence = String[]()\n    for i = 1:n\n        push!(string_sequence,\
    \ i)\n    end\n    \n    return join(\" \", string_sequence)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpkokec1py.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkokec1py.jl:17\n  Test threw exception\n\
    \  Expression: candidate(0) == \"0\"\n  MethodError: objects of type Vector{String}\
    \ are not callable\n  Use square brackets [] for indexing an Array.\n  Stacktrace:\n\
    \   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpkokec1py.jl:5\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkokec1py.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkokec1py.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkokec1py.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: objects of type Vector{String} are\
    \ not callable\n  Use square brackets [] for indexing an Array.\n  Stacktrace:\n\
    \   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpkokec1py.jl:5\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkokec1py.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkokec1py.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkokec1py.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: objects of type\
    \ Vector{String} are not callable\n  Use square brackets [] for indexing an Array.\n\
    \  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpkokec1py.jl:5\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkokec1py.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkokec1py.jl:16\nTest Summary:\
    \ | Error  Total\ntest set      |     3      3\n"
  timestamp: 1659747209
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1:n\n        string_seq[i] = i\n  \
    \  end\n    return string_seq\nend\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a vector of numbers and\
    \ returns the sum of the numbers. \nWrite a function that takes a vector of numbers\
    \ and returns the product of the numbers. \nWrite a function that takes a vector\
    \ of numbers and returns the mean of the numbers. \nWrite a function that takes\
    \ a vector of numbers and returns the median of the numbers. \nWrite a function\
    \ that takes a vector of numbers and returns the mode of the numbers. \nWrite\
    \ a function that takes a vector of numbers and returns the variance of the numbers.\
    \ \nWrite a function that takes a vector of numbers and returns the standard deviation\
    \ of the numbers. \nWrite a function that takes a vector of numbers and returns\
    \ the sum of the squares of the numbers. \nWrite a function that takes a vector\
    \ of numbers and returns the product of the squares of the numbers. \nWrite a\
    \ function that takes a vector of numbers and returns the mean of the squares\
    \ of the numbers. \nWrite a function that takes a vector of numbers and returns\
    \ the median of the squares of the numbers. \nWrite a function that takes a vector\
    \ of numbers and returns the mode of the squares of the numbers. \nWrite a function\
    \ that takes a vector of numbers and returns the variance of the squares of the\
    \ numbers. \nWrite a function that takes a vector of numbers and returns the standard\
    \ deviation of the squares of the numbers. \nWrite a function that takes a vector\
    \ of numbers and returns the sum of the absolute values of the numbers. \nWrite\
    \ a function that takes a vector of numbers and returns the product of the absolute\
    \ values of the numbers. \nWrite a function that takes a vector of numbers and\
    \ returns the mean of the absolute values of the numbers. \nWrite a function that\
    \ takes a vector of numbers and returns the median of the absolute values of the\
    \ numbers. \nWrite a function that takes a vector of numbers and returns the mode\
    \ of the absolute values of the numbers. \nWrite a function that takes a vector\
    \ of numbers and returns the variance of the absolute values of the numbers. \n\
    Write a function that takes a vector of numbers and returns the standard deviation\
    \ of the absolute values of the numbers. \nWrite a function that takes a vector\
    \ of numbers and returns the sum of the squares of the absolute values of the\
    \ numbers. \nWrite a function that takes a vector of numbers and returns the product\
    \ of the squares of the absolute values of the numbers. \nWrite a function that\
    \ takes a vector of numbers and returns the mean of the squares of the absolute\
    \ values of the numbers. \nWrite a function that takes a vector of numbers and\
    \ returns the median of the squares of the absolute values of the numbers. \n\
    Write a function that takes a vector of numbers and returns the mode of the squares\
    \ of the absolute values of the numbers. \nWrite a function that takes a vector\
    \ of numbers and returns the variance of the squares of the absolute values of\
    \ the numbers. \nWrite a function that takes a vector of numbers and returns the\
    \ standard deviation of the squares of the absolute values of the numbers. \n\
    Write a function that takes a vector of numbers and returns the sum of the absolute\
    \ values of the squares of the numbers. \nWrite a function that takes a vector\
    \ of numbers and returns the product of the absolute values of the squares of\
    \ the numbers. \nWrite a function that takes a vector of numbers and returns the\
    \ mean \nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0)\
    \ == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"\
    0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoa4g339_.jl:10\nin expression starting at\
    \ /tmp/tmpoa4g339_.jl:10\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw2592ylg.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw2592ylg.jl:1\n\
    in expression starting at /tmp/tmpw2592ylg.jl:1\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    \n    for i = 1:n\n        string = string +\
    \ string(i)\n    end\n    \n    return string\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(100)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes as input a vector of\
    \ integers and returns the sum of the squares of the integers in the vector. For\
    \ example, if the input vector is [4, 9, 16, 25], the function should return 50.\n\
    using Test\n\n@testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0)\
    \ == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"\
    0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5n0vnkhq.jl:13\nin expression starting at\
    \ /tmp/tmp5n0vnkhq.jl:13\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw2592ylg.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw2592ylg.jl:1\n\
    in expression starting at /tmp/tmpw2592ylg.jl:1\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_seq = \"\"\n    \n    for i = 1:n\n        string_seq = string_seq\
    \ + i\n    end\n    \n    return string_seq\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps4gjnv93.jl:13\nin expression starting at\
    \ /tmp/tmps4gjnv93.jl:13\n"
  stdout: ''
  timestamp: 1659747208
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    seq = String.empty\n    for i in 0:n-1\n        seq = seq + string(i)\n\
    \    end\n    return seq\nend\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(100)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(1000)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10000)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(100000)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(1000000)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10000000)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(100000000)\n</cell>\n<code\
    \ language=julia-1.3>\nstring_sequence(1000000000)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10000000000)\n</cell>\n<code language=julia-1.3>\nstring_sequence(100000000000)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(1000000000000)\n</cell>\n\
    <code language=julia-1.3>\nstring_sequence(10000000000000)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10000000000001)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10000000000002)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10000000000003)\n</cell>\n\
    <code language=julia-1.3>\nstring_sequence(10000000000004)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10000000000005)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10000000000006)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10000000000007)\n</cell>\n\
    <code language=julia-1.3>\nstring_sequence(10000000000008)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10000000000009)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10000000000010)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10000000000011)\n</cell>\n\
    <code language=julia-1.3>\nstring_sequence(10000000000012)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10000000000013)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10000000000014)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10000000000015)\n</cell>\n\
    <code language=julia-1.3>\nstring_sequence(10000000000016)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(100000000000\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8oszo9fi.jl:11\nin expression starting at\
    \ /tmp/tmp8oszo9fi.jl:11\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw2592ylg.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw2592ylg.jl:1\n\
    in expression starting at /tmp/tmpw2592ylg.jl:1\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1:n\n        push!(string_seq,i)\n\
    \    end\n    return join(\" \",string_seq)\nend\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a vector of integers and returns the sum of the integers squared. For example,\n\
    using Test\n\n@testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0)\
    \ == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"\
    0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpog9dm29p.jl:10\nin expression starting at\
    \ /tmp/tmpog9dm29p.jl:10\n"
  stdout: ''
  timestamp: 1659747208
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw2592ylg.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw2592ylg.jl:1\n\
    in expression starting at /tmp/tmpw2592ylg.jl:1\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1:n\n        push!(string_seq, string(i))\n\
    \    end\n    return join(string_seq)\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string and returns the string with all the characters in lower case. \nHint:\
    \ use the function lowercase()\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx2hm5w_v.jl:10\nin expression starting at\
    \ /tmp/tmpx2hm5w_v.jl:10\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw2592ylg.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw2592ylg.jl:1\n\
    in expression starting at /tmp/tmpw2592ylg.jl:1\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw2592ylg.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw2592ylg.jl:1\n\
    in expression starting at /tmp/tmpw2592ylg.jl:1\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1:n\n        push!(string_seq,i)\n\
    \    end\n    return join(\" \",string_seq)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp19lxm854.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp19lxm854.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \" \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp19lxm854.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp19lxm854.jl:14\ntest set: Error\
    \ During Test at /tmp/tmp19lxm854.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] push!(a::Vector{String}, item::Int64)\n     @\
    \ Base ./array.jl:994\n   [2] string_sequence(n::Int64)\n     @ Main /tmp/tmp19lxm854.jl:6\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp19lxm854.jl:16 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp19lxm854.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp19lxm854.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: Cannot `convert`\
    \ an object of type Int64 to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    "
  timestamp: 1659747210
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw2592ylg.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw2592ylg.jl:1\n\
    in expression starting at /tmp/tmpw2592ylg.jl:1\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_seq = String[]\n    for i in 0:n\n        push!(string_seq,String(i))\n\
    \    end\n    return join(\" \",string_seq)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpsr6nulqd.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpsr6nulqd.jl:16\n  Test threw exception\n\
    \  Expression: candidate(0) == \"0\"\n  MethodError: no method matching String(::Int64)\n\
    \  Closest candidates are:\n    String(!Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:363\n\
    \    String(!Matched::Vector{UInt8}) at /shared/centos7/julia/1.7.3/share/julia/base/strings/string.jl:53\n\
    \    String(!Matched::Symbol) at /shared/centos7/julia/1.7.3/share/julia/base/strings/string.jl:83\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpsr6nulqd.jl:7\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsr6nulqd.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsr6nulqd.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpsr6nulqd.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching String(::Int64)\n\
    \  Closest candidates are:\n    String(!Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:363\n\
    \    String(!Matched::Vector{UInt8}) at /shared/centos7/julia/1.7.3/share/julia/base/strings/string.jl:53\n\
    \    String(!Matched::Symbol) at /shared/centos7/julia/1.7.3/share/julia/base/strings/string.jl:83\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpsr6nulqd.jl:7\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsr6nulqd.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsr6nulqd.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpsr6nulqd.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ String(::Int64)\n  Closest candidates are:\n    String("
  timestamp: 1659747210
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_seq = \"\"\n    for i = 1:n\n        string_seq = string_seq\
    \ + i\n    end\n    \n    return string_seq\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpfgn4h7gs.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpfgn4h7gs.jl:17\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfgn4h7gs.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfgn4h7gs.jl:16\ntest set: Error\
    \ During Test at /tmp/tmpfgn4h7gs.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::Int64)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n \
    \   +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpfgn4h7gs.jl:7\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfgn4h7gs.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfgn4h7gs.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpfgn4h7gs.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::Int64)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n\
    \    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/cent"
  timestamp: 1659747211
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_seq = \"\"\n    \n    for i = 1:n\n        string_seq = string_seq\
    \ + i\n    end\n    \n    return string_seq\nend\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsr4a06gq.jl:13\nin expression starting at\
    \ /tmp/tmpsr4a06gq.jl:13\n"
  stdout: ''
  timestamp: 1659747209
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1:n\n        push!(string_seq,string(i))\n\
    \    end\n    return join(\" \",string_seq)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprqm_uew3.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmprqm_uew3.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \" \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprqm_uew3.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprqm_uew3.jl:14\ntest set: Test\
    \ Failed at /tmp/tmprqm_uew3.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \" \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprqm_uew3.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprqm_uew3.jl:14\ntest set: Test\
    \ Failed at /tmp/tmprqm_uew3.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \" \" == \"0 1 2 3 4 5 6 7 8 9 10\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprqm_uew3.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprqm_uew3.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747209
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw2592ylg.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw2592ylg.jl:1\n\
    in expression starting at /tmp/tmpw2592ylg.jl:1\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1:n\n        push!(string_seq, string(i))\n\
    \    end\n    return join(\" \", string_seq)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpi8ife6je.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpi8ife6je.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \" \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi8ife6je.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi8ife6je.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpi8ife6je.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \" \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi8ife6je.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi8ife6je.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpi8ife6je.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \" \" == \"0 1 2 3 4 5 6 7 8 9 10\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi8ife6je.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi8ife6je.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747209
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw2592ylg.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw2592ylg.jl:1\n\
    in expression starting at /tmp/tmpw2592ylg.jl:1\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = \"\"\n    for i = 1:n\n        string_seq = string_seq +\
    \ i\n    end\n    return string_seq\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpymwf18x4.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpymwf18x4.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpymwf18x4.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpymwf18x4.jl:14\ntest set: Error\
    \ During Test at /tmp/tmpymwf18x4.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::Int64)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n \
    \   +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpymwf18x4.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpymwf18x4.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpymwf18x4.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpymwf18x4.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::Int64)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n\
    \    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/cent"
  timestamp: 1659747211
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i::Int64 in 0:n-1\n        string_seq.append(i)\n\
    \    return string_seq\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't answer\
    \ the question, which is about how to generate a string of numbers from 0 to n-1.\n\
    <|/ c |>\n<| c |>\nThe question was how to generate a string of numbers from 0\
    \ to n-1. My answer does exactly that. Did you downvote my answer?\n<|/ c |>\n\
    <| c |>\nI didn't downvote, but your answer doesn't actually answer the question.\
    \ Your answer doesn't explain how to generate a string of numbers from 0 to n-1.\
    \ Your answer doesn't explain how to generate a string of numbers from 0 to n-1.\
    \ Your answer doesn't explain how to generate a string of numbers from 0 to n-1.\
    \ Your answer doesn't explain how to generate a string of numbers from 0 to n-1.\
    \ Your answer doesn't explain how to generate a string of numbers from 0 to n-1.\
    \ Your answer doesn't explain how to generate a string of numbers from 0 to n-1.\
    \ Your answer doesn't explain how to generate a string of numbers from 0 to n-1.\
    \ Your answer doesn't explain how to generate a string of numbers from 0 to n-1.\
    \ Your answer doesn't explain how to generate a string of numbers from 0 to n-1.\
    \ Your answer doesn't explain how to generate a string of numbers from 0 to n-1.\
    \ Your answer doesn't explain how to generate a string of numbers from 0 to n-1.\
    \ Your answer doesn't explain how to generate a string of numbers from 0 to n-1.\
    \ Your answer doesn't explain how to generate a string of numbers from 0 to n-1.\
    \ Your answer doesn't explain how to generate a string of numbers from 0 to n-1.\
    \ Your answer doesn't explain how to generate a string of numbers from 0 to n-1.\
    \ Your answer doesn't explain how to generate a string of numbers from 0 to n-1.\
    \ Your answer doesn't explain how to generate a string of numbers from 0 to n-1.\
    \ Your answer doesn't explain how to generate a string of numbers from 0 to n-1.\
    \ Your answer doesn't explain how to generate a string of numbers from 0 to n-1.\
    \ Your answer doesn't explain how to generate a string of numbers from 0 to n-1.\
    \ Your answer doesn't explain how to generate a string of numbers from 0 to n-1.\
    \ Your answer doesn't explain how to generate a string of numbers from 0 to n-1.\
    \ Your answer doesn't explain how to generate a string of numbers from 0 to n-1.\
    \ Your answer doesn't explain how to generate a string of numbers from 0 to n-1.\
    \ Your answer doesn't explain how to generate a string of numbers from 0 to n-1.\
    \ Your answer doesn't explain how to generate a string of numbers from 0 to n-1.\
    \ Your answer \nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9dlujg_d.jl:8\nin expression starting at /tmp/tmp9dlujg_d.jl:8\n"
  stdout: ''
  timestamp: 1659747209
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    for i = 1:n\n        string = string + string(i)\n\
    \    end\n    return string\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"\
    0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpral20w52.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpral20w52.jl:16\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpral20w52.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpral20w52.jl:15\ntest set: Error\
    \ During Test at /tmp/tmpral20w52.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: objects of type String are not callable\n\
    \  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpral20w52.jl:7\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpral20w52.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpral20w52.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpral20w52.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: objects of type\
    \ String are not callable\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n \
    \    @ Main /tmp/tmpral20w52.jl:7\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpral20w52.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpral20w52.jl:15\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    1      2      3\n"
  timestamp: 1659747211
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1 to n do\n        push!(string_seq,\
    \ i)\n    end\n    return join(string_seq, \" \")\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of words in the string.\nusing Test\n\
    \n@testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"for\" at /tmp/tmp4kxxgouu.jl:5 expected \"\
    end\", got \"n\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp4kxxgouu.jl:5\n\
    in expression starting at /tmp/tmp4kxxgouu.jl:5\n"
  stdout: ''
  timestamp: 1659747209
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1:n\n        push!(string_seq,string(i))\n\
    \    end\n    return string_seq\nend\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    string_sequences(n::Int64)\nusing\
    \ Test\n\n@testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0)\
    \ == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"\
    0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkzkmmu1b.jl:10\nin expression starting at\
    \ /tmp/tmpkzkmmu1b.jl:10\n"
  stdout: ''
  timestamp: 1659747209
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    \n    for i in 0:n-1\n        string = string\
    \ + string(i)\n    \n    return string\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the first n numbers of a Fibonacci sequence. \nThe Fibonacci sequence is defined\
    \ as:\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0)\
    \ == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"\
    0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp66navvg7.jl:12\nin expression starting at\
    \ /tmp/tmp66navvg7.jl:12\n"
  stdout: ''
  timestamp: 1659747209
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    \n    for i = 1:n\n        string = string +\
    \ i\n    end\n    \n    return string\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of times the string \"abc\" appears\
    \ in the string.\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjef7ege7.jl:13\nin expression starting at\
    \ /tmp/tmpjef7ege7.jl:13\n"
  stdout: ''
  timestamp: 1659747209
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = \"\"\n    for i = 1:n\n        string_seq = string_seq +\
    \ i\n    end\n    return string_seq\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpymwf18x4.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpymwf18x4.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpymwf18x4.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpymwf18x4.jl:14\ntest set: Error\
    \ During Test at /tmp/tmpymwf18x4.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::Int64)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n \
    \   +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpymwf18x4.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpymwf18x4.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpymwf18x4.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpymwf18x4.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::Int64)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n\
    \    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/cent"
  timestamp: 1659747211
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw2592ylg.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw2592ylg.jl:1\n\
    in expression starting at /tmp/tmpw2592ylg.jl:1\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = \"\"\n    for i = 1:n\n        string_seq = string_seq +\
    \ i\n    end\n    return string_seq\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(100)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(1000)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10000)\n</cell>\n<code language=julia-1.5>\nstring_sequence(100000)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(1000000)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10000000)\n</cell>\n<code language=julia-1.5>\nstring_sequence(100000000)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(1000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nstring_sequence(10000000000)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(100000000000)\n</cell>\n<code language=julia-1.5>\nstring_sequence(1000000000000)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10000000000000)\n</cell>\n\
    <code language=julia-1.5>\nstring_sequence(10000000000001)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10000000000002)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10000000000003)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10000000000004)\n</cell>\n\
    <code language=julia-1.5>\nstring_sequence(10000000000005)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10000000000006)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10000000000007)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10000000000008)\n</cell>\n\
    <code language=julia-1.5>\nstring_sequence(10000000000009)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10000000000010)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10000000000011)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10000000000012)\n</cell>\n\
    <code language=julia-1.5>\nstring_sequence(10000000000013)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10000000000014)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10000000000015)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10000000000016)\n</cell>\n\
    <code language=julia-1.5>\nstring_sequence(100000000000\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw3xuk368.jl:10\nin expression starting at\
    \ /tmp/tmpw3xuk368.jl:10\n"
  stdout: ''
  timestamp: 1659747209
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw2592ylg.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw2592ylg.jl:1\n\
    in expression starting at /tmp/tmpw2592ylg.jl:1\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = \"\"\n    for i = 1:n\n        string_seq = string_seq +\
    \ string(i)\n    end\n    return string_seq\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpcndvl_mv.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpcndvl_mv.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcndvl_mv.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcndvl_mv.jl:14\ntest set: Error\
    \ During Test at /tmp/tmpcndvl_mv.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::String)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpcndvl_mv.jl:6\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcndvl_mv.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcndvl_mv.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpcndvl_mv.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpcndvl_mv.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcndvl_mv.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcndvl_mv.jl:14\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    1      2      3\n"
  timestamp: 1659747211
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw2592ylg.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw2592ylg.jl:1\n\
    in expression starting at /tmp/tmpw2592ylg.jl:1\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_sequence = \"\"\n    \n    for i = 1:n\n        string_sequence\
    \ = string_sequence + i\n    end\n    \n    return string_sequence\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0)\
    \ == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"\
    0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp42jdtrvr.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmp42jdtrvr.jl:18\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp42jdtrvr.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp42jdtrvr.jl:17\ntest set: Error\
    \ During Test at /tmp/tmp42jdtrvr.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::Int64)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n \
    \   +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmp42jdtrvr.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp42jdtrvr.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp42jdtrvr.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp42jdtrvr.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::Int64)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n\
    \    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/cent"
  timestamp: 1659747211
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = \"\"\n    for i = 1:n\n        string_seq = string_seq +\
    \ i\n    end\n    return string_seq\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpymwf18x4.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpymwf18x4.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpymwf18x4.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpymwf18x4.jl:14\ntest set: Error\
    \ During Test at /tmp/tmpymwf18x4.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::Int64)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n \
    \   +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpymwf18x4.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpymwf18x4.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpymwf18x4.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpymwf18x4.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::Int64)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n\
    \    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/cent"
  timestamp: 1659747211
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_sequence = String[]()\n    for i = 1:n\n        push!(string_sequence,string(i))\n\
    \    end\n    \n    return string_sequence\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5xmzgw6h.jl:12\nin expression starting at\
    \ /tmp/tmp5xmzgw6h.jl:12\n"
  stdout: ''
  timestamp: 1659747209
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    \n    for i = 1:n\n        string = string +\
    \ string(i)\n    end\n    \n    return string\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppze1t2aq.jl:13\nin expression starting at\
    \ /tmp/tmppze1t2aq.jl:13\n"
  stdout: ''
  timestamp: 1659747208
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i in 0:n-1\n        string_seq[i] = i\n\
    \    return string_seq.join(\" \")\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string and returns the number of times each character appears in the string.\n\
    using Test\n\n@testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0)\
    \ == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"\
    0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1ab4qdql.jl:9\nin expression starting at /tmp/tmp1ab4qdql.jl:9\n"
  stdout: ''
  timestamp: 1659747209
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    for i = 1:n\n        string = string + i\n  \
    \  end\n    return string\nend\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmppyagqbev.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmppyagqbev.jl:16\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppyagqbev.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppyagqbev.jl:15\ntest set: Error\
    \ During Test at /tmp/tmppyagqbev.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::Int64)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n \
    \   +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmppyagqbev.jl:7\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppyagqbev.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppyagqbev.jl:15\ntest set:\
    \ Error During Test at /tmp/tmppyagqbev.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::Int64)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n\
    \    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/cent"
  timestamp: 1659747211
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_sequence = \"\"\n    \n    for i = 1:n\n        string_sequence\
    \ = string_sequence + i\n    end\n    \n    return string_sequence\nend\n</cell>\n\
    <code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(100)\n</cell>\n<code language=julia-1.5>\nstring_sequence(1000)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10000)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(100000)\n</cell>\n<code language=julia-1.5>\nstring_sequence(1000000)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10000000)\n</cell>\n<code\
    \ language=julia-1.5>\nstring_sequence(100000000)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(1000000000)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10000000000)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(100000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nstring_sequence(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10000000000000)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10000000000001)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10000000000002)\n</cell>\n\
    <code language=julia-1.5>\nstring_sequence(10000000000003)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10000000000004)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10000000000005)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10000000000006)\n</cell>\n\
    <code language=julia-1.5>\nstring_sequence(10000000000007)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10000000000008)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10000000000009)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10000000000010)\n</cell>\n\
    <code language=julia-1.5>\nstring_sequence(10000000000011)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10000000000012)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10000000000013)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10000000000014)\n</cell>\n\
    <code language=julia-1.5>\nstring_sequence(10000000000015)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10000000000016)\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3wpwcdi4.jl:13\nin expression starting at\
    \ /tmp/tmp3wpwcdi4.jl:13\n"
  stdout: ''
  timestamp: 1659747210
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string = \"\"\n    for i = 1:n\n        string = string + string(i)\n\
    \    end\n    return string\nend\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_lzbqfdm.jl:10\nin expression starting at\
    \ /tmp/tmp_lzbqfdm.jl:10\n"
  stdout: ''
  timestamp: 1659747210
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = \"\"\n    for i = 1:n\n        string_seq = string_seq +\
    \ i\n    end\n    return string_seq\nend\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_b58n7jc.jl:10\nin expression starting at\
    \ /tmp/tmp_b58n7jc.jl:10\n"
  stdout: ''
  timestamp: 1659747210
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1:n\n        push!(string_seq,i)\n\
    \    end\n    return join(\" \",string_seq)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp19lxm854.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp19lxm854.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \" \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp19lxm854.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp19lxm854.jl:14\ntest set: Error\
    \ During Test at /tmp/tmp19lxm854.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] push!(a::Vector{String}, item::Int64)\n     @\
    \ Base ./array.jl:994\n   [2] string_sequence(n::Int64)\n     @ Main /tmp/tmp19lxm854.jl:6\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp19lxm854.jl:16 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp19lxm854.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp19lxm854.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: Cannot `convert`\
    \ an object of type Int64 to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    "
  timestamp: 1659747210
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i::Int64 in 0 .. n-1 do\n        push!(string_seq,string(i))\n\
    \    end\n    return join(\" \",string_seq)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqqvwdp7a.jl:5\nin expression starting at /tmp/tmpqqvwdp7a.jl:5\n"
  stdout: ''
  timestamp: 1659747210
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_sequence = String[]()\n    for i in 0:n-1\n        push!(string_sequence,\
    \ string(i))\n    end\n    \n    return string_sequence\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmprarlqjh2.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmprarlqjh2.jl:17\n  Test threw exception\n\
    \  Expression: candidate(0) == \"0\"\n  MethodError: objects of type Vector{String}\
    \ are not callable\n  Use square brackets [] for indexing an Array.\n  Stacktrace:\n\
    \   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmprarlqjh2.jl:5\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprarlqjh2.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprarlqjh2.jl:16\ntest set:\
    \ Error During Test at /tmp/tmprarlqjh2.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: objects of type Vector{String} are\
    \ not callable\n  Use square brackets [] for indexing an Array.\n  Stacktrace:\n\
    \   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmprarlqjh2.jl:5\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprarlqjh2.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprarlqjh2.jl:16\ntest set:\
    \ Error During Test at /tmp/tmprarlqjh2.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: objects of type\
    \ Vector{String} are not callable\n  Use square brackets [] for indexing an Array.\n\
    \  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmprarlqjh2.jl:5\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprarlqjh2.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprarlqjh2.jl:16\nTest Summary:\
    \ | Error  Total\ntest set      |     3      3\n"
  timestamp: 1659747212
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    seq = String[]\n    for i = 1:n\n        push!(seq,string(i))\n\
    \    end\n    return join(seq,\" \")\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns a string with all the characters in lower case.\
    \ \nExample: \nstring_lower(\"hello\") should return \"hello\"\nstring_lower(\"\
    HELLO\") should return \"hello\"\nstring_lower(\"HellO\") should return \"hello\"\
    \nstring_lower(\"Hello\") should return \"hello\"\nstring_lower(\"\") should return\
    \ \"\"\nstring_lower(\" \") should return \"\"\nstring_lower(\" a\") should return\
    \ \"a\"\nstring_lower(\"a \") should return \"a\"\nstring_lower(\"a b\") should\
    \ return \"ab\"\nstring_lower(\"a b c\") should return \"abc\"\nstring_lower(\"\
    a b c \") should return \"abc\"\nstring_lower(\"a b c d\") should return \"abcd\"\
    \nstring_lower(\"a b c d \") should return \"abcd\"\nstring_lower(\"a b c d e\"\
    ) should return \"abcd\"\nstring_lower(\"a b c d e \") should return \"abcd\"\n\
    string_lower(\"a b c d e f\") should return \"abcd\"\nstring_lower(\"a b c d e\
    \ f \") should return \"abcd\"\nstring_lower(\"a b c d e f g\") should return\
    \ \"abcd\"\nstring_lower(\"a b c d e f g \") should return \"abcd\"\nstring_lower(\"\
    a b c d e f g h\") should return \"abcd\"\nstring_lower(\"a b c d e f g h \")\
    \ should return \"abcd\"\nstring_lower(\"a b c d e f g h i\") should return \"\
    abcd\"\nstring_lower(\"a b c d e f g h i \") should return \"abcd\"\nstring_lower(\"\
    a b c d e f g h i j\") should return \"abcd\"\nstring_lower(\"a b c d e f g h\
    \ i j \") should return \"abcd\"\nstring_lower(\"a b c d e f g h i j k\") should\
    \ return \"abcd\"\nstring_lower(\"a b c d e f g h i j k \") should return \"abcd\"\
    \nstring_lower(\"a b c d e f g h i j k l\") should return \"abcd\"\nstring_lower(\"\
    a b c d e f g h i j k \nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4x1t3cac.jl:11\nin expression starting at\
    \ /tmp/tmp4x1t3cac.jl:11\n"
  stdout: ''
  timestamp: 1659747210
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1 to n do\n        push!(string_seq,string(i))\n\
    \    end\n    return string_seq\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"for\" at /tmp/tmpl4g5t8dd.jl:5 expected \"\
    end\", got \"n\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpl4g5t8dd.jl:5\n\
    in expression starting at /tmp/tmpl4g5t8dd.jl:5\n"
  stdout: ''
  timestamp: 1659747210
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    seq = Array{Int64}(undef,n)\n    seq[1] = 1\n    seq[2] = 2\n  \
    \  seq[3] = 3\n    seq[4] = 4\n    seq[5] = 5\n    seq[6] = 6\n    seq[7] = 7\n\
    \    seq[8] = 8\n    seq[9] = 9\n    seq[10] = 10\n    seq[11] = 11\n    seq[12]\
    \ = 12\n    seq[13] = 13\n    seq[14] = 14\n    seq[15] = 15\n    seq[16] = 16\n\
    \    seq[17] = 17\n    seq[18] = 18\n    seq[19] = 19\n    seq[20] = 20\n    seq[21]\
    \ = 21\n    seq[22] = 22\n    seq[23] = 23\n    seq[24] = 24\n    seq[25] = 25\n\
    \    seq[26] = 26\n    seq[27] = 27\n    seq[28] = 28\n    seq[29] = 29\n    seq[30]\
    \ = 30\n    seq[31] = 31\n    seq[32] = 32\n    seq[33] = 33\n    seq[34] = 34\n\
    \    seq[35] = 35\n    seq[36] = 36\n    seq[37] = 37\n    seq[38] = 38\n    seq[39]\
    \ = 39\n    seq[40] = 40\n    seq[41] = 41\n    seq[42] = 42\n    seq[43] = 43\n\
    \    seq[44] = 44\n    seq[45] = 45\n    seq[46] = 46\n    seq[47] = 47\n    seq[48]\
    \ = 48\n    seq[49] = 49\n    seq[50] = 50\n    seq[51] = 51\n    seq[52] = 52\n\
    \    seq[53] = 53\n    seq[54] = 54\n    seq[55] = 55\n    seq[56] = 56\n    seq[57]\
    \ = 57\n    seq[58] = 58\n    seq[59] = 59\n    seq[60] = 60\n    seq[61] = 61\n\
    \    seq[62] = 62\n    seq[63] = 63\n    seq[64] = 64\n    seq[65] = 65\n    seq[66]\
    \ = 66\n    seq[67] = 67\n    seq[68] = 68\n    seq[69] = 69\n    seq[70] = 70\n\
    \    seq[71] = 71\n    seq[72] = 72\n    seq[73] = 73\n    seq[74] = 74\n    \n\
    using Test\n\n@testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0)\
    \ == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"\
    0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps9q9hdxc.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps9q9hdxc.jl:1\n\
    in expression starting at /tmp/tmps9q9hdxc.jl:1\n"
  stdout: ''
  timestamp: 1659747210
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string = \"\"\n    for i = 1:n\n        string = string + string(i)\n\
    \    end\n    return string\nend\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppp6asn_3.jl:10\nin expression starting at\
    \ /tmp/tmppp6asn_3.jl:10\n"
  stdout: ''
  timestamp: 1659747210
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1:n\n        push!(string_seq,i)\n\
    \    end\n    return join(\" \",string_seq)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp19lxm854.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp19lxm854.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \" \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp19lxm854.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp19lxm854.jl:14\ntest set: Error\
    \ During Test at /tmp/tmp19lxm854.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] push!(a::Vector{String}, item::Int64)\n     @\
    \ Base ./array.jl:994\n   [2] string_sequence(n::Int64)\n     @ Main /tmp/tmp19lxm854.jl:6\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp19lxm854.jl:16 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp19lxm854.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp19lxm854.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: Cannot `convert`\
    \ an object of type Int64 to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    "
  timestamp: 1659747210
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    for i = 1:n\n        string = string + string(i)\n\
    \    end\n    return string\nend\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a string as input and\
    \ returns a string where all characters are capitalized. \nFor example, string_sequence(\"\
    hello\") should return \"Hello\".\nusing Test\n\n@testset begin\n\ncandidate =\
    \ string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"\
    0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7oan8wde.jl:11\nin expression starting at\
    \ /tmp/tmp7oan8wde.jl:11\n"
  stdout: ''
  timestamp: 1659747210
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    \n    for i in 0:n-1\n        string = string\
    \ + string(i)\n    \n    return string\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpka9153o_.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpka9153o_.jl:1\n\
    in expression starting at /tmp/tmpka9153o_.jl:1\n"
  stdout: ''
  timestamp: 1659747211
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_sequence = \"\"\n    for i = 1:n\n        string_sequence = string_sequence\
    \ + i\n    end\n    return string_sequence\nend\n</cell>\n<code language=julia-1.0>\n\
    string_sequence(10)\n</cell>\n<text>\nExercise 5\nWrite a function that takes\
    \ a vector of strings as input and returns a vector containing the number of characters\
    \ in each string.\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp970dqcnp.jl:10\nin expression starting at\
    \ /tmp/tmp970dqcnp.jl:10\n"
  stdout: ''
  timestamp: 1659747211
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_sequence = \"\"\n    \n    for i = 1:n\n        string_sequence\
    \ = string_sequence + string(i)\n    end\n    \n    return string_sequence\nend\n\
    using Test\n\n@testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0)\
    \ == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"\
    0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmphpeu12eu.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmphpeu12eu.jl:18\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphpeu12eu.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphpeu12eu.jl:17\ntest set: Error\
    \ During Test at /tmp/tmphpeu12eu.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::String)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmphpeu12eu.jl:8\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphpeu12eu.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphpeu12eu.jl:17\ntest set:\
    \ Error During Test at /tmp/tmphpeu12eu.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmphpeu12eu.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphpeu12eu.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphpeu12eu.jl:17\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    1      2      3\n"
  timestamp: 1659747213
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_seq = \"\"\n    \n    for i = 1:n\n        string_seq = string_seq\
    \ + i\n    end\n    \n    return string_seq\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(100)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(1000)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a vector of strings as an argument and returns\
    \ a vector of the same length with each string replaced by its length.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0)\
    \ == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"\
    0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5e6bhn52.jl:13\nin expression starting at\
    \ /tmp/tmp5e6bhn52.jl:13\n"
  stdout: ''
  timestamp: 1659747211
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1 to n do\n        push!(string_seq,string(i))\n\
    \    end\n    return string_seq\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"for\" at /tmp/tmpl4g5t8dd.jl:5 expected \"\
    end\", got \"n\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpl4g5t8dd.jl:5\n\
    in expression starting at /tmp/tmpl4g5t8dd.jl:5\n"
  stdout: ''
  timestamp: 1659747210
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    seq = String[]\n    for i in 0:n-1\n        push!(seq,string(i))\n\
    \    end\n    return join(\" \",seq)\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsq_fvg0e.jl:11\nin expression starting at\
    \ /tmp/tmpsq_fvg0e.jl:11\n"
  stdout: ''
  timestamp: 1659747211
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_seq = \"\"\n    for i = 1:n\n        string_seq = string_seq\
    \ + i\n    end\n    \n    return string_seq\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpfgn4h7gs.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpfgn4h7gs.jl:17\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfgn4h7gs.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfgn4h7gs.jl:16\ntest set: Error\
    \ During Test at /tmp/tmpfgn4h7gs.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::Int64)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n \
    \   +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpfgn4h7gs.jl:7\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfgn4h7gs.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfgn4h7gs.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpfgn4h7gs.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::Int64)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n\
    \    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/cent"
  timestamp: 1659747211
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_sequence = \"\"\n    for i = 1 to n do\n        string_sequence\
    \ = string_sequence + string(i)\n    end\n    return string_sequence\nend\n</cell>\n\
    <code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(100)\n</cell>\n<code language=julia-1.5>\nstring_sequence(1000)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10000)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(100000)\n</cell>\n<code language=julia-1.5>\nstring_sequence(1000000)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10000000)\n</cell>\n<code\
    \ language=julia-1.5>\nstring_sequence(100000000)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(1000000000)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10000000000)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(100000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nstring_sequence(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10000000000000)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10000000000001)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10000000000002)\n</cell>\n\
    <code language=julia-1.5>\nstring_sequence(10000000000003)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10000000000004)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10000000000005)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10000000000006)\n</cell>\n\
    <code language=julia-1.5>\nstring_sequence(10000000000007)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10000000000008)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10000000000009)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10000000000010)\n</cell>\n\
    <code language=julia-1.5>\nstring_sequence(10000000000011)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10000000000012)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10000000000013)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10000000000014)\n</cell>\n\
    <code language=julia-1.5>\nstring_sequence(10000000000015)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10000000000016)\n</cell>\n<code language=julia-1.5>\nstring_sequence(100\n\
    using Test\n\n@testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0)\
    \ == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"\
    0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"for\" at /tmp/tmpky6e9h6f.jl:5 expected \"\
    end\", got \"n\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpky6e9h6f.jl:5\n\
    in expression starting at /tmp/tmpky6e9h6f.jl:5\n"
  stdout: ''
  timestamp: 1659747211
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1 to n\n        string_seq[i - 1] =\
    \ toString(i)\n    return string_seq\nend\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns a string with all the characters in lower case.\
    \ \nThe function should ignore any non-alphabetic characters and return an empty\
    \ string if any non-alphabetic characters are found.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"for\" at /tmp/tmpjwjgi5m_.jl:5 expected \"\
    end\", got \"n\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjwjgi5m_.jl:5\n\
    in expression starting at /tmp/tmpjwjgi5m_.jl:5\n"
  stdout: ''
  timestamp: 1659747211
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    for i = 1:n\n        string = string + string(i)\n\
    \    end\n    return string\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"\
    0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpral20w52.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpral20w52.jl:16\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpral20w52.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpral20w52.jl:15\ntest set: Error\
    \ During Test at /tmp/tmpral20w52.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: objects of type String are not callable\n\
    \  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpral20w52.jl:7\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpral20w52.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpral20w52.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpral20w52.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: objects of type\
    \ String are not callable\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n \
    \    @ Main /tmp/tmpral20w52.jl:7\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpral20w52.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpral20w52.jl:15\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    1      2      3\n"
  timestamp: 1659747211
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw2592ylg.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw2592ylg.jl:1\n\
    in expression starting at /tmp/tmpw2592ylg.jl:1\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_sequence = \"\"\n    for i = 1:n\n        string_sequence = string_sequence\
    \ + i\n    end\n    return string_sequence\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp5iindzhw.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp5iindzhw.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5iindzhw.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5iindzhw.jl:14\ntest set: Error\
    \ During Test at /tmp/tmp5iindzhw.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::Int64)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n \
    \   +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmp5iindzhw.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5iindzhw.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5iindzhw.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp5iindzhw.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::Int64)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n\
    \    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/cent"
  timestamp: 1659747213
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = \"\"\n    for i = 1:n\n        string_seq = string_seq +\
    \ i\n    end\n    return string_seq\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpymwf18x4.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpymwf18x4.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpymwf18x4.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpymwf18x4.jl:14\ntest set: Error\
    \ During Test at /tmp/tmpymwf18x4.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::Int64)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n \
    \   +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpymwf18x4.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpymwf18x4.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpymwf18x4.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpymwf18x4.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::Int64)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n\
    \    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/cent"
  timestamp: 1659747211
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1 to n do\n        push!(string_seq,\
    \ i)\n    end\n    return join(\" \", string_seq)\nend\n</cell>\n<code language=julia-1.0>\n\
    string_sequence(10)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string and returns the number of words in the string.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"for\" at /tmp/tmp65nolac8.jl:5 expected \"\
    end\", got \"n\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp65nolac8.jl:5\n\
    in expression starting at /tmp/tmp65nolac8.jl:5\n"
  stdout: ''
  timestamp: 1659747211
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_seq = String[]\n    for i in 0:n-1\n        push!(string_seq,String(i))\n\
    \    end\n    return join(\" \",string_seq)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp5hhqvtux.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmp5hhqvtux.jl:16\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \" \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5hhqvtux.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5hhqvtux.jl:15\ntest set: Error\
    \ During Test at /tmp/tmp5hhqvtux.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching String(::Int64)\n\
    \  Closest candidates are:\n    String(!Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:363\n\
    \    String(!Matched::Vector{UInt8}) at /shared/centos7/julia/1.7.3/share/julia/base/strings/string.jl:53\n\
    \    String(!Matched::Symbol) at /shared/centos7/julia/1.7.3/share/julia/base/strings/string.jl:83\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmp5hhqvtux.jl:7\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5hhqvtux.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5hhqvtux.jl:15\ntest set:\
    \ Error During Test at /tmp/tmp5hhqvtux.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ String(::Int64)\n  Closest candidates are:\n    String(!Matched::String) at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:363\n    String(!Matched::Vector{UInt8})\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/string.jl:53\n    String(!Matched::Symbol)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/string.jl:83\n    ...\n\
    \  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmp5hhqvtux.jl:7\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test"
  timestamp: 1659747213
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1:n\n        push!(string_seq,string(i))\n\
    \    end\n    return join(\" \",string_seq)\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0is37g9m.jl:10\nin expression starting at\
    \ /tmp/tmp0is37g9m.jl:10\n"
  stdout: ''
  timestamp: 1659747211
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_seq = String[]\n    \n    for i in 0:n-1\n        string_seq[i]\
    \ = i\n    end\n    \n    return string_seq\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<text>\nExercise 1\nWrite a function that takes\
    \ an array of numbers and returns the sum of the numbers. \nWrite a function that\
    \ takes an array of numbers and returns the product of the numbers. \nWrite a\
    \ function that takes an array of numbers and returns the maximum of the numbers.\
    \ \nWrite a function that takes an array of numbers and returns the minimum of\
    \ the numbers. \nWrite a function that takes an array of numbers and returns the\
    \ number of elements in the array. \nWrite a function that takes an array of numbers\
    \ and returns the sum of the squares of the numbers. \nWrite a function that takes\
    \ an array of numbers and returns the product of the squares of the numbers. \n\
    Write a function that takes an array of numbers and returns the maximum of the\
    \ squares of the numbers. \nWrite a function that takes an array of numbers and\
    \ returns the minimum of the squares of the numbers. \nWrite a function that takes\
    \ an array of numbers and returns the number of elements in the array.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0)\
    \ == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"\
    0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2692kqa1.jl:13\nin expression starting at\
    \ /tmp/tmp2692kqa1.jl:13\n"
  stdout: ''
  timestamp: 1659747211
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    for i = 1:n\n        string = string + string(i)\n\
    \    end\n    \n    return string\nend\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an integer $n$ and returns\
    \ the string $n!$. Hint: use the function string_sequence to generate the string\
    \ $n!$.\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0)\
    \ == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"\
    0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7ss9a3rh.jl:12\nin expression starting at\
    \ /tmp/tmp7ss9a3rh.jl:12\n"
  stdout: ''
  timestamp: 1659747211
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_seq = \"\"\n    \n    for i = 1:n\n        string_seq = string_seq\
    \ + i\n    end\n    \n    return string_seq\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps4gjnv93.jl:13\nin expression starting at\
    \ /tmp/tmps4gjnv93.jl:13\n"
  stdout: ''
  timestamp: 1659747208
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1 to n do\n        push!(string_seq,\
    \ i)\n    end\n    return join(\" \", string_seq)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"for\" at /tmp/tmpxj0ahc94.jl:5 expected \"\
    end\", got \"n\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxj0ahc94.jl:5\n\
    in expression starting at /tmp/tmpxj0ahc94.jl:5\n"
  stdout: ''
  timestamp: 1659747212
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = \"\"\n    for i = 1:n\n        string_seq = string_seq +\
    \ string(i)\n    end\n    return string_seq\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpcndvl_mv.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpcndvl_mv.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcndvl_mv.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcndvl_mv.jl:14\ntest set: Error\
    \ During Test at /tmp/tmpcndvl_mv.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::String)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpcndvl_mv.jl:6\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcndvl_mv.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcndvl_mv.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpcndvl_mv.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpcndvl_mv.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcndvl_mv.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcndvl_mv.jl:14\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    1      2      3\n"
  timestamp: 1659747211
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_sequence = \"\"\n    \n    for i in 0:n-1\n        string_sequence\
    \ = string_sequence + string(i)\n    end\n    \n    return string_sequence\nend\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a string and returns the number of characters\
    \ in the string.\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5uczi_1s.jl:13\nin expression starting at\
    \ /tmp/tmp5uczi_1s.jl:13\n"
  stdout: ''
  timestamp: 1659747211
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_sequence = String[]()\n    \n    for i in 0:n-1\n       \
    \ string_sequence += String(i)\n    end\n    \n    return string_sequence\nend\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\nusing Test\n\
    \n@testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9i9od408.jl:13\nin expression starting at\
    \ /tmp/tmp9i9od408.jl:13\n"
  stdout: ''
  timestamp: 1659747212
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    for i = 1:n\n        string = string + i\n  \
    \  end\n    return string\nend\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns a string containing\
    \ the first n characters of an input string. \nFor example, string_sequence(\"\
    hello\", 3) should return \"hell\".\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnr1gomwo.jl:11\nin expression starting at\
    \ /tmp/tmpnr1gomwo.jl:11\n"
  stdout: ''
  timestamp: 1659747212
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_seq = \"\"\n    \n    for i = 1:n\n        string_seq = string_seq\
    \ + i\n    end\n    \n    return string_seq\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpn8ml2auh.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpn8ml2auh.jl:18\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn8ml2auh.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn8ml2auh.jl:17\ntest set: Error\
    \ During Test at /tmp/tmpn8ml2auh.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::Int64)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n \
    \   +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpn8ml2auh.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn8ml2auh.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn8ml2auh.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpn8ml2auh.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::Int64)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n\
    \    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/cent"
  timestamp: 1659747214
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = \"\"\n    for i in 0:n-1\n        string_seq = string_seq\
    \ + string(i)\n    end\n    return string_seq\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpbkw1ijv_.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpbkw1ijv_.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbkw1ijv_.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbkw1ijv_.jl:14\ntest set: Error\
    \ During Test at /tmp/tmpbkw1ijv_.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::String)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpbkw1ijv_.jl:6\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbkw1ijv_.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbkw1ijv_.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpbkw1ijv_.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpbkw1ijv_.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbkw1ijv_.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbkw1ijv_.jl:14\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    1      2      3\n"
  timestamp: 1659747210
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1 to n do\n        push!(string_seq,\
    \ i)\n    end\n    return join(\" \", string_seq)\nend\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<text>\nExercise 4\nWrite a function that takes\
    \ a vector of numbers and returns the sum of the numbers. \nWrite a function that\
    \ takes a vector of numbers and returns the mean of the numbers. \nWrite a function\
    \ that takes a vector of numbers and returns the median of the numbers. \nWrite\
    \ a function that takes a vector of numbers and returns the mode of the numbers.\
    \ \nWrite a function that takes a vector of numbers and returns the variance of\
    \ the numbers. \nWrite a function that takes a vector of numbers and returns the\
    \ standard deviation of the numbers. \nWrite a function that takes a vector of\
    \ numbers and returns the minimum of the numbers. \nWrite a function that takes\
    \ a vector of numbers and returns the maximum of the numbers. \nWrite a function\
    \ that takes a vector of numbers and returns the number of positive numbers in\
    \ the vector. \nWrite a function that takes a vector of numbers and returns the\
    \ number of negative numbers in the vector. \nWrite a function that takes a vector\
    \ of numbers and returns the number of zeros in the vector. \nWrite a function\
    \ that takes a vector of numbers and returns the number of ones in the vector.\
    \ \nWrite a function that takes a vector of numbers and returns the number of\
    \ NaNs in the vector. \nWrite a function that takes a vector of numbers and returns\
    \ the number of Infs in the vector. \nWrite a function that takes a vector of\
    \ numbers and returns the number of positive and negative numbers in the vector.\
    \ \nWrite a function that takes a vector of numbers and returns the number of\
    \ zeros and ones in the vector. \nWrite a function that takes a vector of numbers\
    \ and returns the number of NaNs and Infs in the vector. \nWrite a function that\
    \ takes a vector of numbers and returns the number of positive and negative numbers\
    \ and zeros and ones in the vector. \nWrite a function that takes a vector of\
    \ numbers and returns the number of NaNs, Infs, zeros and ones in the vector.\
    \ \nWrite a function that takes a vector of numbers and returns the number of\
    \ positive and negative numbers, zeros and ones in the vector. \nWrite a function\
    \ that takes a vector of numbers and returns the number of NaNs, Infs, zeros and\
    \ ones in the vector. \nWrite a function that takes a vector of numbers and returns\
    \ the number of positive and negative numbers, zeros and ones in the vector. \n\
    Write a function that takes a vector of numbers and returns the number of NaNs,\
    \ Infs, zeros and ones in the vector. \nWrite a function that takes a vector of\
    \ numbers and returns the number of positive and negative numbers, zeros and ones\
    \ in the vector. \nWrite a function that takes a vector of numbers and returns\
    \ the number of NaNs, Infs, zeros and ones in the vector. \nWrite a function that\
    \ takes a vector of numbers and returns the number of positive and negative numbers,\
    \ zeros and ones in the vector. \nWrite a function that takes a vector of numbers\
    \ and returns the number of NaNs, Infs, zeros and ones in the vector. \nWrite\
    \ a function that takes a vector of numbers and returns the number of positive\
    \ and negative numbers, \nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"for\" at /tmp/tmpajxmt2m0.jl:5 expected \"\
    end\", got \"n\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpajxmt2m0.jl:5\n\
    in expression starting at /tmp/tmpajxmt2m0.jl:5\n"
  stdout: ''
  timestamp: 1659747212
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1:n\n        push!(string_seq, toString(i))\n\
    \    end\n    return join(string_seq, \" \")\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a vector of strings as input and returns a vector of integers containing the\
    \ number of times each string appears in the input vector.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn_vc1lmf.jl:10\nin expression starting at\
    \ /tmp/tmpn_vc1lmf.jl:10\n"
  stdout: ''
  timestamp: 1659747212
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    \n    for i = 1:n\n        string = string +\
    \ i\n    end\n    \n    return string\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a vector of strings and returns a vector of integers containing the number of\
    \ times each string appears in the vector.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcdqofung.jl:13\nin expression starting at\
    \ /tmp/tmpcdqofung.jl:13\n"
  stdout: ''
  timestamp: 1659747212
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1:n\n        push!(string_seq, string(i))\n\
    \    end\n    return join(\" \", string_seq)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpi8ife6je.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpi8ife6je.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \" \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi8ife6je.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi8ife6je.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpi8ife6je.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \" \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi8ife6je.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi8ife6je.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpi8ife6je.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \" \" == \"0 1 2 3 4 5 6 7 8 9 10\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi8ife6je.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi8ife6je.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747209
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    \n    for i = 1:n\n        string = string +\
    \ string(i)\n    end\n    \n    return string\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpystjgdii.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpystjgdii.jl:18\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpystjgdii.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpystjgdii.jl:17\ntest set: Error\
    \ During Test at /tmp/tmpystjgdii.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: objects of type String are not callable\n\
    \  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpystjgdii.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpystjgdii.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpystjgdii.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpystjgdii.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: objects of type\
    \ String are not callable\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n \
    \    @ Main /tmp/tmpystjgdii.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpystjgdii.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpystjgdii.jl:17\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    1      2      3\n"
  timestamp: 1659747214
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    seq = String.empty\n    for i = 1:n\n        seq = seq + i\n   \
    \ end\n    \n    return seq\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"\
    0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpgeoc2zwd.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpgeoc2zwd.jl:17\n  Test threw exception\n\
    \  Expression: candidate(0) == \"0\"\n  type DataType has no field empty\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:37 [inlined]\n   [2] string_sequence(n::Int64)\n\
    \     @ Main /tmp/tmpgeoc2zwd.jl:5\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpgeoc2zwd.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpgeoc2zwd.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpgeoc2zwd.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  type DataType has no field empty\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:37 [inlined]\n   [2] string_sequence(n::Int64)\n\
    \     @ Main /tmp/tmpgeoc2zwd.jl:5\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpgeoc2zwd.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpgeoc2zwd.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpgeoc2zwd.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  type DataType has no field empty\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:37 [inlined]\n   [2] string_sequence(n::Int64)\n\
    \     @ Main /tmp/tmpgeoc2zwd.jl:5\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpgeoc2zwd.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpgeoc2zwd.jl:16\nTest Summary:\
    \ | Error  Total\ntest set      |     3      3\n"
  timestamp: 1659747213
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_sequence = \"\"\n    for i = 1:n\n        string_sequence\
    \ = string_sequence + i\n    end\n    \n    return string_sequence\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0)\
    \ == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"\
    0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpompi0qg0.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpompi0qg0.jl:17\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpompi0qg0.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpompi0qg0.jl:16\ntest set: Error\
    \ During Test at /tmp/tmpompi0qg0.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::Int64)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n \
    \   +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpompi0qg0.jl:7\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpompi0qg0.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpompi0qg0.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpompi0qg0.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::Int64)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n\
    \    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/cent"
  timestamp: 1659747215
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_seq = String[]\n    for i = 1:n\n        push!(string_seq,String(i))\n\
    \    end\n    return join(\" \",string_seq)\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a string and returns the number of words in the string.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptn8jduzv.jl:11\nin expression starting at\
    \ /tmp/tmptn8jduzv.jl:11\n"
  stdout: ''
  timestamp: 1659747212
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_sequence = \"\"\n    for i = 1:n\n        string_sequence = string_sequence\
    \ + i\n    end\n    return string_sequence\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkti_docl.jl:10\nin expression starting at\
    \ /tmp/tmpkti_docl.jl:10\n"
  stdout: ''
  timestamp: 1659747212
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = \"\"\n    for i = 1:n\n        string_seq = string_seq +\
    \ i\n    end\n    return string_seq\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpymwf18x4.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpymwf18x4.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpymwf18x4.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpymwf18x4.jl:14\ntest set: Error\
    \ During Test at /tmp/tmpymwf18x4.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::Int64)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n \
    \   +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpymwf18x4.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpymwf18x4.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpymwf18x4.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpymwf18x4.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::Int64)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n\
    \    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/cent"
  timestamp: 1659747211
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_sequence = \"\"\n    for i = 1:n\n        string_sequence = string_sequence\
    \ + i\n    end\n    return string_sequence\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp5iindzhw.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp5iindzhw.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5iindzhw.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5iindzhw.jl:14\ntest set: Error\
    \ During Test at /tmp/tmp5iindzhw.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::Int64)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n \
    \   +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmp5iindzhw.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5iindzhw.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5iindzhw.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp5iindzhw.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::Int64)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n\
    \    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/cent"
  timestamp: 1659747213
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_sequence = \"\"\n    for i = 1:n\n        string_sequence = string_sequence\
    \ + i\n    end\n    return string_sequence\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0kxnousy.jl:10\nin expression starting at\
    \ /tmp/tmp0kxnousy.jl:10\n"
  stdout: ''
  timestamp: 1659747212
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    \n    for i = 1:n\n        string = string +\
    \ i\n    end\n    \n    return string\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3s3isag6.jl:13\nin expression starting at\
    \ /tmp/tmp3s3isag6.jl:13\n"
  stdout: ''
  timestamp: 1659747212
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = \"\"\n    for i in 0:n-1\n        string_seq = string_seq\
    \ + string(i)\n    end\n    return string_seq\nend\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(100)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(1000)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10000)\n</cell>\n<code language=julia-1.3>\nstring_sequence(100000)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(1000000)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10000000)\n</cell>\n<code language=julia-1.3>\nstring_sequence(100000000)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(1000000000)\n</cell>\n<code\
    \ language=julia-1.3>\nstring_sequence(10000000000)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(100000000000)\n</cell>\n<code language=julia-1.3>\nstring_sequence(1000000000000)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10000000000000)\n</cell>\n\
    <code language=julia-1.3>\nstring_sequence(10000000000001)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10000000000002)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10000000000003)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10000000000004)\n</cell>\n\
    <code language=julia-1.3>\nstring_sequence(10000000000005)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10000000000006)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10000000000007)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10000000000008)\n</cell>\n\
    <code language=julia-1.3>\nstring_sequence(10000000000009)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10000000000010)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10000000000011)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10000000000012)\n</cell>\n\
    <code language=julia-1.3>\nstring_sequence(10000000000013)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10000000000014)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10000000000015)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10000000000016)\n</cell>\n\
    <code language=julia-1.3>\nstring_sequence(10000000000\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuphdi_me.jl:10\nin expression starting at\
    \ /tmp/tmpuphdi_me.jl:10\n"
  stdout: ''
  timestamp: 1659747212
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    \n    for i = 1:n\n        string = string +\
    \ string(i)\n    end\n    \n    return string\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppze1t2aq.jl:13\nin expression starting at\
    \ /tmp/tmppze1t2aq.jl:13\n"
  stdout: ''
  timestamp: 1659747208
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_sequence = \"\"\n    for i = 1:n\n        string_sequence = string_sequence\
    \ + string(i)\n    end\n    return string_sequence\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp9262y0lg.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp9262y0lg.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9262y0lg.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9262y0lg.jl:14\ntest set: Error\
    \ During Test at /tmp/tmp9262y0lg.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::String)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmp9262y0lg.jl:6\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9262y0lg.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9262y0lg.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp9262y0lg.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmp9262y0lg.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9262y0lg.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9262y0lg.jl:14\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    1      2      3\n"
  timestamp: 1659747215
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1:n\n        push!(string_seq,string(i))\n\
    \    end\n    return join(\" \",string_seq)\nend\n</cell>\n<code language=julia-1.0>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.0>\nstring_sequence(100)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an integer $n$ and returns\
    \ $n!$ as a string.\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2sn8qq7f.jl:10\nin expression starting at\
    \ /tmp/tmp2sn8qq7f.jl:10\n"
  stdout: ''
  timestamp: 1659747212
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    for i = 1:n\n        string = string + i\n  \
    \  end\n    return string\nend\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmppyagqbev.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmppyagqbev.jl:16\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppyagqbev.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppyagqbev.jl:15\ntest set: Error\
    \ During Test at /tmp/tmppyagqbev.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::Int64)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n \
    \   +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmppyagqbev.jl:7\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppyagqbev.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppyagqbev.jl:15\ntest set:\
    \ Error During Test at /tmp/tmppyagqbev.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::Int64)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n\
    \    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/cent"
  timestamp: 1659747211
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = \"\"\n    for i in 0:n\n        string_seq = string_seq +\
    \ string(i)\n    end\n    return string_seq\nend\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of times each character appears in\
    \ the string.\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\t\
    @test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5lp84z69.jl:10\nin expression starting at\
    \ /tmp/tmp5lp84z69.jl:10\n"
  stdout: ''
  timestamp: 1659747212
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_sequence = \"\"\n    for i = 1:n\n        string_sequence = string_sequence\
    \ + i\n    end\n    return string_sequence\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp5iindzhw.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp5iindzhw.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5iindzhw.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5iindzhw.jl:14\ntest set: Error\
    \ During Test at /tmp/tmp5iindzhw.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::Int64)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n \
    \   +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmp5iindzhw.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5iindzhw.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5iindzhw.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp5iindzhw.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::Int64)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n\
    \    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/cent"
  timestamp: 1659747213
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw2592ylg.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw2592ylg.jl:1\n\
    in expression starting at /tmp/tmpw2592ylg.jl:1\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw2592ylg.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw2592ylg.jl:1\n\
    in expression starting at /tmp/tmpw2592ylg.jl:1\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_sequence = \"\"\n    for i = 1:n\n        string_sequence = string_sequence\
    \ + i\n    end\n    return string_sequence\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<text>\nExercise 5\nWrite a function that takes\
    \ a vector of integers and returns the sum of the squares of the integers in the\
    \ vector.\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0)\
    \ == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"\
    0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdts9gg9v.jl:10\nin expression starting at\
    \ /tmp/tmpdts9gg9v.jl:10\n"
  stdout: ''
  timestamp: 1659747213
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i in 0:n\n        push!(string_seq,string(i))\n\
    \    return string_seq\nend\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7is7obdk.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7is7obdk.jl:1\n\
    in expression starting at /tmp/tmp7is7obdk.jl:1\n"
  stdout: ''
  timestamp: 1659747213
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1:n\n        push!(string_seq,string(i))\n\
    \    end\n    return string_seq\nend\n</cell>\n<code language=julia-1.0>\nstring_sequence(10)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the number of characters in the string.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpey1n1aus.jl:10\nin expression starting at\
    \ /tmp/tmpey1n1aus.jl:10\n"
  stdout: ''
  timestamp: 1659747213
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_seq = String[]\n    for i = 1:n\n        push!(string_seq,\
    \ string(i))\n    end\n    \n    return join(\" \", string_seq)\nend\n</cell>\n\
    <code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0)\
    \ == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"\
    0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr57p_0ze.jl:12\nin expression starting at\
    \ /tmp/tmpr57p_0ze.jl:12\n"
  stdout: ''
  timestamp: 1659747213
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    \n    for i = 1:n\n        string = string +\
    \ i\n    end\n    \n    return string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp95i9ewen.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmp95i9ewen.jl:18\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp95i9ewen.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp95i9ewen.jl:17\ntest set: Error\
    \ During Test at /tmp/tmp95i9ewen.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::Int64)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n \
    \   +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmp95i9ewen.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp95i9ewen.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp95i9ewen.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp95i9ewen.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::Int64)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n\
    \    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/cent"
  timestamp: 1659747210
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_seq = \"\"\n    for i = 1:n\n        string_seq = string_seq\
    \ + string(i)\n    end\n    return string_seq\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp779xakms.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmp779xakms.jl:16\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp779xakms.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp779xakms.jl:15\ntest set: Error\
    \ During Test at /tmp/tmp779xakms.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::String)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmp779xakms.jl:7\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp779xakms.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp779xakms.jl:15\ntest set:\
    \ Error During Test at /tmp/tmp779xakms.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmp779xakms.jl:7\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp779xakms.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp779xakms.jl:15\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    1      2      3\n"
  timestamp: 1659747215
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string = \"\"\n    for i = 1:n\n        string = string + string(i)\n\
    \    end\n    return string\nend\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a string as input and\
    \ returns a string with all the characters in lower case. \nHint: use the function\
    \ lower() from the String package.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6eof4q4l.jl:10\nin expression starting at\
    \ /tmp/tmp6eof4q4l.jl:10\n"
  stdout: ''
  timestamp: 1659747213
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw2592ylg.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw2592ylg.jl:1\n\
    in expression starting at /tmp/tmpw2592ylg.jl:1\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i in 0:n-1\n        push!(string_seq,i)\n\
    \    end\n    return join(\" \",string_seq)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp72ktd77x.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp72ktd77x.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \" \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp72ktd77x.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp72ktd77x.jl:14\ntest set: Error\
    \ During Test at /tmp/tmp72ktd77x.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] push!(a::Vector{String}, item::Int64)\n     @\
    \ Base ./array.jl:994\n   [2] string_sequence(n::Int64)\n     @ Main /tmp/tmp72ktd77x.jl:6\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp72ktd77x.jl:16 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp72ktd77x.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp72ktd77x.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: Cannot `convert`\
    \ an object of type Int64 to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    "
  timestamp: 1659747216
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_seq = String[]\n    for i = 1:n\n        push!(string_seq,string(i))\n\
    \    end\n    \n    return join(\" \",string_seq)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp07wq7iot.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp07wq7iot.jl:17\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \" \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp07wq7iot.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp07wq7iot.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp07wq7iot.jl:18\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \" \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp07wq7iot.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp07wq7iot.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp07wq7iot.jl:19\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \" \" == \"0 1 2 3 4 5 6 7 8 9 10\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp07wq7iot.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp07wq7iot.jl:16\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747214
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw2592ylg.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw2592ylg.jl:1\n\
    in expression starting at /tmp/tmpw2592ylg.jl:1\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw2592ylg.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw2592ylg.jl:1\n\
    in expression starting at /tmp/tmpw2592ylg.jl:1\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_sequence = \"\"\n    \n    for i = 1:n\n        string_sequence\
    \ = string_sequence + i\n    end\n    \n    return string_sequence\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0)\
    \ == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"\
    0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp42jdtrvr.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmp42jdtrvr.jl:18\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp42jdtrvr.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp42jdtrvr.jl:17\ntest set: Error\
    \ During Test at /tmp/tmp42jdtrvr.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::Int64)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n \
    \   +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmp42jdtrvr.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp42jdtrvr.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp42jdtrvr.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp42jdtrvr.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::Int64)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n\
    \    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/cent"
  timestamp: 1659747211
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = \"\"\n    for i = 1:n\n        string_seq = string_seq +\
    \ i\n    end\n    return string_seq\nend\n</cell>\n<code language=julia-1.4>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.4>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.4>\nstring_sequence(10)\n</cell>\n<code language=julia-1.4>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.4>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.4>\nstring_sequence(10)\n</cell>\n<code language=julia-1.4>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.4>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.4>\nstring_sequence(10)\n</cell>\n<code language=julia-1.4>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.4>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.4>\nstring_sequence(10)\n</cell>\n<code language=julia-1.4>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.4>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.4>\nstring_sequence(10)\n</cell>\n<code language=julia-1.4>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.4>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.4>\nstring_sequence(10)\n</cell>\n<code language=julia-1.4>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.4>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.4>\nstring_sequence(10)\n</cell>\n<code language=julia-1.4>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.4>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.4>\nstring_sequence(10)\n</cell>\n<code language=julia-1.4>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.4>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.4>\nstring_sequence(10)\n</cell>\n<code language=julia-1.4>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.4>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.4>\nstring_sequence(10)\n</cell>\n<code language=julia-1.4>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.4>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.4>\nstring_sequence(10)\n</cell>\n<code language=julia-1.4>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.4>\n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcngohn35.jl:10\nin expression starting at\
    \ /tmp/tmpcngohn35.jl:10\n"
  stdout: ''
  timestamp: 1659747213
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string = \"\"\n    for i = 1:n\n        string = string + string(i)\n\
    \    end\n    return string\nend\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the number of characters in the string.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptwtbjlt0.jl:10\nin expression starting at\
    \ /tmp/tmptwtbjlt0.jl:10\n"
  stdout: ''
  timestamp: 1659747213
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = \"\"\n    for i = 1:n\n        string_seq = string_seq +\
    \ string(i)\n    end\n    return string_seq\nend\n</cell>\n<code language=julia-1.4>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.4>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppr9957qp.jl:10\nin expression starting at\
    \ /tmp/tmppr9957qp.jl:10\n"
  stdout: ''
  timestamp: 1659747214
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_sequence = \"\"\n    for i = 1:n\n        string_sequence = string_sequence\
    \ + i\n    end\n    return string_sequence\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp5iindzhw.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp5iindzhw.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5iindzhw.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5iindzhw.jl:14\ntest set: Error\
    \ During Test at /tmp/tmp5iindzhw.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::Int64)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n \
    \   +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmp5iindzhw.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5iindzhw.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5iindzhw.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp5iindzhw.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::Int64)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n\
    \    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/cent"
  timestamp: 1659747213
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i in 0:n-1\n        string_seq[i] = i\n\
    \    return string_seq\nend\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpo4tfyg1r.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpo4tfyg1r.jl:1\n\
    in expression starting at /tmp/tmpo4tfyg1r.jl:1\n"
  stdout: ''
  timestamp: 1659747214
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = \"\"\n    for i = 1:n\n        string_seq = string_seq +\
    \ string(i)\n    end\n    return string_seq\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(100)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(1000)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10000)\n</cell>\n<code language=julia-1.5>\nstring_sequence(100000)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(1000000)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10000000)\n</cell>\n<code language=julia-1.5>\nstring_sequence(100000000)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(1000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nstring_sequence(10000000000)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(100000000000)\n</cell>\n<code language=julia-1.5>\nstring_sequence(1000000000000)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(1000000000001)\n</cell>\n\
    <code language=julia-1.5>\nstring_sequence(1000000000002)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(1000000000003)\n</cell>\n<code language=julia-1.5>\nstring_sequence(1000000000004)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(1000000000005)\n</cell>\n\
    <code language=julia-1.5>\nstring_sequence(1000000000006)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(1000000000007)\n</cell>\n<code language=julia-1.5>\nstring_sequence(1000000000008)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(1000000000009)\n</cell>\n\
    <code language=julia-1.5>\nstring_sequence(1000000000010)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(1000000000011)\n</cell>\n<code language=julia-1.5>\nstring_sequence(1000000000012)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(1000000000013)\n</cell>\n\
    <code language=julia-1.5>\nstring_sequence(1000000000014)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(1000000000015)\n</cell>\n<code language=julia-1.5>\nstring_sequence(1000000000016)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(1000000000017)\n</cell>\n\
    <code language=julia-1.5>\nstring_sequence(1000000000018)\n</cell>\n<code language=juli\n\
    using Test\n\n@testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0)\
    \ == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"\
    0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe9_zfn79.jl:10\nin expression starting at\
    \ /tmp/tmpe9_zfn79.jl:10\n"
  stdout: ''
  timestamp: 1659747214
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i in 0:n\n        push!(string_seq,String(i))\n\
    \    return string_seq\nend\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp791v3vyh.jl:9\nin expression starting at /tmp/tmp791v3vyh.jl:9\n"
  stdout: ''
  timestamp: 1659747214
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw2592ylg.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw2592ylg.jl:1\n\
    in expression starting at /tmp/tmpw2592ylg.jl:1\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_sequence = \"\"\n    \n    for i = 1:n\n        string_sequence\
    \ = string_sequence + i\n    end\n    \n    return string_sequence\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0)\
    \ == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"\
    0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp42jdtrvr.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmp42jdtrvr.jl:18\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp42jdtrvr.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp42jdtrvr.jl:17\ntest set: Error\
    \ During Test at /tmp/tmp42jdtrvr.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::Int64)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n \
    \   +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmp42jdtrvr.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp42jdtrvr.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp42jdtrvr.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp42jdtrvr.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::Int64)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n\
    \    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/cent"
  timestamp: 1659747211
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw2592ylg.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw2592ylg.jl:1\n\
    in expression starting at /tmp/tmpw2592ylg.jl:1\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1:n\n        push!(string_seq,string(i))\n\
    \    end\n    return string_seq\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpptz5hkrx.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpptz5hkrx.jl:15\n  Test threw exception\n\
    \  Expression: candidate(0) == \"0\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{String} to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpptz5hkrx.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpptz5hkrx.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpptz5hkrx.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpptz5hkrx.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: Cannot `convert` an object of type\
    \ Vector{String} to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpptz5hkrx.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpptz5hkrx.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747216
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1:n\n        push!(string_seq, string(i))\n\
    \    end\n    return string_seq\nend\n</cell>\n<code language=julia-1.0>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.0>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3pwul2ie.jl:10\nin expression starting at\
    \ /tmp/tmp3pwul2ie.jl:10\n"
  stdout: ''
  timestamp: 1659747214
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_seq = String[]\n    for i = 1:n\n        push!(string_seq,\
    \ string(i))\n    end\n    \n    return string_seq\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp2p9joefq.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmp2p9joefq.jl:17\n  Test threw exception\n\
    \  Expression: candidate(0) == \"0\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{String} to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmp2p9joefq.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2p9joefq.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2p9joefq.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp2p9joefq.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: Cannot `convert` an object of type\
    \ Vector{String} to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmp2p9joefq.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2p9joefq.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   "
  timestamp: 1659747216
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    \n    for i = 1:n\n        string = string +\
    \ string(i)\n    end\n    \n    return string\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the first n positive integers starting from 0.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnpaz8r81.jl:13\nin expression starting at\
    \ /tmp/tmpnpaz8r81.jl:13\n"
  stdout: ''
  timestamp: 1659747214
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_seq = String[]\n    for i in 0:n\n        push!(string_seq,String(i))\n\
    \    end\n    return string_seq\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpnfzma8dh.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpnfzma8dh.jl:16\n  Test threw exception\n\
    \  Expression: candidate(0) == \"0\"\n  MethodError: no method matching String(::Int64)\n\
    \  Closest candidates are:\n    String(!Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:363\n\
    \    String(!Matched::Vector{UInt8}) at /shared/centos7/julia/1.7.3/share/julia/base/strings/string.jl:53\n\
    \    String(!Matched::Symbol) at /shared/centos7/julia/1.7.3/share/julia/base/strings/string.jl:83\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpnfzma8dh.jl:7\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnfzma8dh.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnfzma8dh.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpnfzma8dh.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching String(::Int64)\n\
    \  Closest candidates are:\n    String(!Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/boot.jl:363\n\
    \    String(!Matched::Vector{UInt8}) at /shared/centos7/julia/1.7.3/share/julia/base/strings/string.jl:53\n\
    \    String(!Matched::Symbol) at /shared/centos7/julia/1.7.3/share/julia/base/strings/string.jl:83\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpnfzma8dh.jl:7\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnfzma8dh.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnfzma8dh.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpnfzma8dh.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ String(::Int64)\n  Closest candidates are:\n    String("
  timestamp: 1659747216
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw2592ylg.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw2592ylg.jl:1\n\
    in expression starting at /tmp/tmpw2592ylg.jl:1\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_sequence = \"\"\n    for i = 1:n\n        string_sequence = string_sequence\
    \ + string(i)\n    end\n    return string_sequence\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp9262y0lg.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp9262y0lg.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9262y0lg.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9262y0lg.jl:14\ntest set: Error\
    \ During Test at /tmp/tmp9262y0lg.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::String)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmp9262y0lg.jl:6\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9262y0lg.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9262y0lg.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp9262y0lg.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmp9262y0lg.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9262y0lg.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9262y0lg.jl:14\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    1      2      3\n"
  timestamp: 1659747215
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    for i = 1:n\n        string = string + i\n  \
    \  end\n    \n    return string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpi32xnwel.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpi32xnwel.jl:17\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi32xnwel.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi32xnwel.jl:16\ntest set: Error\
    \ During Test at /tmp/tmpi32xnwel.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::Int64)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n \
    \   +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpi32xnwel.jl:7\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi32xnwel.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi32xnwel.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpi32xnwel.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::Int64)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n\
    \    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/cent"
  timestamp: 1659747217
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = \"\"\n    for i = 1:n\n        string_seq = string_seq +\
    \ i\n    end\n    return string_seq\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph2bce1p0.jl:10\nin expression starting at\
    \ /tmp/tmph2bce1p0.jl:10\n"
  stdout: ''
  timestamp: 1659747214
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    \n    for i = 1:n\n        string = string +\
    \ string(i)\n    end\n    \n    return string\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppze1t2aq.jl:13\nin expression starting at\
    \ /tmp/tmppze1t2aq.jl:13\n"
  stdout: ''
  timestamp: 1659747208
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw2592ylg.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw2592ylg.jl:1\n\
    in expression starting at /tmp/tmpw2592ylg.jl:1\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    for i = 1:n\n        string = string + string(i)\n\
    \    end\n    return string\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"\
    0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpral20w52.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpral20w52.jl:16\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpral20w52.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpral20w52.jl:15\ntest set: Error\
    \ During Test at /tmp/tmpral20w52.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: objects of type String are not callable\n\
    \  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpral20w52.jl:7\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpral20w52.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpral20w52.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpral20w52.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: objects of type\
    \ String are not callable\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n \
    \    @ Main /tmp/tmpral20w52.jl:7\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpral20w52.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpral20w52.jl:15\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    1      2      3\n"
  timestamp: 1659747211
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_seq = String[]\n    for i = 1:n\n        push!(string_seq,\
    \ string(i))\n    end\n    \n    return join(string_seq, \" \")\nend\n</cell>\n\
    <code language=julia-1.4>\nstring_sequence(10)\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a string as input and returns a string with all the\
    \ characters in lower case.\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0b7ue8r5.jl:12\nin expression starting at\
    \ /tmp/tmp0b7ue8r5.jl:12\n"
  stdout: ''
  timestamp: 1659747215
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw2592ylg.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw2592ylg.jl:1\n\
    in expression starting at /tmp/tmpw2592ylg.jl:1\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1:n\n        push!(string_seq,string(i))\n\
    \    end\n    return string_seq\nend\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.3>\nstring_sequence(10)\n</cell>\n<code language=julia-1.3>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.3>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpodp1mod8.jl:10\nin expression starting at\
    \ /tmp/tmpodp1mod8.jl:10\n"
  stdout: ''
  timestamp: 1659747215
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i in 0:n-1\n        string_seq[i] = string(i)\n\
    \    return string_seq\nend\n</cell>\n<code language=julia-1.4>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.4>\nstring_sequence(100)\n</cell>\n<code language=julia-1.4>\n\
    string_sequence(1000)\n</cell>\n<code language=julia-1.4>\nstring_sequence(10000)\n\
    </cell>\n<code language=julia-1.4>\nstring_sequence(100000)\n</cell>\n<code language=julia-1.4>\n\
    string_sequence(1000000)\n</cell>\n<code language=julia-1.4>\nstring_sequence(10000000)\n\
    </cell>\n<code language=julia-1.4>\nstring_sequence(100000000)\n</cell>\n<code\
    \ language=julia-1.4>\nstring_sequence(1000000000)\n</cell>\n<code language=julia-1.4>\n\
    string_sequence(10000000000)\n</cell>\n<code language=julia-1.4>\nstring_sequence(100000000000)\n\
    </cell>\n<code language=julia-1.4>\nstring_sequence(1000000000000)\n</cell>\n\
    <code language=julia-1.4>\nstring_sequence(10000000000000)\n</cell>\n<code language=julia-1.4>\n\
    string_sequence(10000000000001)\n</cell>\n<code language=julia-1.4>\nstring_sequence(10000000000002)\n\
    </cell>\n<code language=julia-1.4>\nstring_sequence(10000000000003)\n</cell>\n\
    <code language=julia-1.4>\nstring_sequence(10000000000004)\n</cell>\n<code language=julia-1.4>\n\
    string_sequence(10000000000005)\n</cell>\n<code language=julia-1.4>\nstring_sequence(10000000000006)\n\
    </cell>\n<code language=julia-1.4>\nstring_sequence(10000000000007)\n</cell>\n\
    <code language=julia-1.4>\nstring_sequence(10000000000008)\n</cell>\n<code language=julia-1.4>\n\
    string_sequence(10000000000009)\n</cell>\n<code language=julia-1.4>\nstring_sequence(10000000000010)\n\
    </cell>\n<code language=julia-1.4>\nstring_sequence(10000000000011)\n</cell>\n\
    <code language=julia-1.4>\nstring_sequence(10000000000012)\n</cell>\n<code language=julia-1.4>\n\
    string_sequence(10000000000013)\n</cell>\n<code language=julia-1.4>\nstring_sequence(10000000000014)\n\
    </cell>\n<code language=julia-1.4>\nstring_sequence(10000000000015)\n</cell>\n\
    <code language=julia-1.4>\nstring_sequence(10000000000016)\n</cell>\n<code language=julia-1.4>\n\
    string_sequence(10000000000017)\n\nusing Test\n\n@testset begin\n\ncandidate =\
    \ string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"\
    0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_o2g37m5.jl:9\nin expression starting at /tmp/tmp_o2g37m5.jl:9\n"
  stdout: ''
  timestamp: 1659747215
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw2592ylg.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw2592ylg.jl:1\n\
    in expression starting at /tmp/tmpw2592ylg.jl:1\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_sequence = \"\"\n    \n    for i = 1:n\n        string_sequence\
    \ = string_sequence + \" \" + i\n    end\n    \n    return string_sequence\nend\n\
    using Test\n\n@testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0)\
    \ == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"\
    0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpdpk0fiws.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpdpk0fiws.jl:18\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdpk0fiws.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdpk0fiws.jl:17\ntest set: Error\
    \ During Test at /tmp/tmpdpk0fiws.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::String)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] +(::String, ::String, ::Int64)\n     @ Base ./operators.jl:655\n   [2]\
    \ string_sequence(n::Int64)\n     @ Main /tmp/tmpdpk0fiws.jl:8\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpdpk0fiws.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdpk0fiws.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpdpk0fiws.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \  Stacktrace:\n   [1] +(::String, ::String, ::Int64)\n     @ Base ./operators.jl:655\n\
    \   [2] string_sequence(n::Int64)\n     @ Main /tmp/tmpdpk0fiws.jl:8\n   [3] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpdpk0fiws.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level sco"
  timestamp: 1659747217
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    \n    for i in 0:n-1\n        string = string\
    \ + string(i)\n    \n    return string\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpka9153o_.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpka9153o_.jl:1\n\
    in expression starting at /tmp/tmpka9153o_.jl:1\n"
  stdout: ''
  timestamp: 1659747211
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_sequence = \"\"\n    for i = 1:n\n        string_sequence\
    \ = string_sequence + i\n    end\n    return string_sequence\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpasgwmzlw.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpasgwmzlw.jl:16\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpasgwmzlw.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpasgwmzlw.jl:15\ntest set: Error\
    \ During Test at /tmp/tmpasgwmzlw.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::Int64)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n \
    \   +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpasgwmzlw.jl:7\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpasgwmzlw.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpasgwmzlw.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpasgwmzlw.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::Int64)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n\
    \    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/cent"
  timestamp: 1659747217
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    seq = Array{String}(undef, n)\n    for i in 1:n\n        seq[i]\
    \ = string(i) \n    end\n    return join(seq,\" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7a4nqlx8.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmp7a4nqlx8.jl:16\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7a4nqlx8.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7a4nqlx8.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp7a4nqlx8.jl:17\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"1 2 3\" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7a4nqlx8.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7a4nqlx8.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp7a4nqlx8.jl:18\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"1 2 3 4 5 6 7 8 9 10\" == \"0 1 2 3 4 5 6 7\
    \ 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7a4nqlx8.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7a4nqlx8.jl:15\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747215
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    for i = 1:n\n        string = string + string(i)\n\
    \    end\n    return string\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"\
    0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpral20w52.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpral20w52.jl:16\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpral20w52.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpral20w52.jl:15\ntest set: Error\
    \ During Test at /tmp/tmpral20w52.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: objects of type String are not callable\n\
    \  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpral20w52.jl:7\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpral20w52.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpral20w52.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpral20w52.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: objects of type\
    \ String are not callable\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n \
    \    @ Main /tmp/tmpral20w52.jl:7\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpral20w52.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpral20w52.jl:15\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    1      2      3\n"
  timestamp: 1659747211
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    for i = 1:n\n        string = string + i\n  \
    \  end\n    \n    return string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpi32xnwel.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpi32xnwel.jl:17\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi32xnwel.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi32xnwel.jl:16\ntest set: Error\
    \ During Test at /tmp/tmpi32xnwel.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::Int64)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n \
    \   +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpi32xnwel.jl:7\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi32xnwel.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi32xnwel.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpi32xnwel.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::Int64)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n\
    \    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/cent"
  timestamp: 1659747217
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i in 0:n\n        push!(string_seq,string(i))\n\
    \    return string_seq\nend\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7is7obdk.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7is7obdk.jl:1\n\
    in expression starting at /tmp/tmp7is7obdk.jl:1\n"
  stdout: ''
  timestamp: 1659747213
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_sequence = String[]\n    \n    for i = 1:n\n        push!(string_sequence,\
    \ i)\n    end\n    \n    return join(\" \", string_sequence)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpolbkr0ex.jl:13\nin expression starting at\
    \ /tmp/tmpolbkr0ex.jl:13\n"
  stdout: ''
  timestamp: 1659747215
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_seq = \"\"\n    for i = 1:n\n        string_seq = string_seq\
    \ + i\n    end\n    \n    return string_seq\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpfgn4h7gs.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpfgn4h7gs.jl:17\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfgn4h7gs.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfgn4h7gs.jl:16\ntest set: Error\
    \ During Test at /tmp/tmpfgn4h7gs.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::Int64)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n \
    \   +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpfgn4h7gs.jl:7\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfgn4h7gs.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfgn4h7gs.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpfgn4h7gs.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::Int64)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n\
    \    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/cent"
  timestamp: 1659747211
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw2592ylg.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw2592ylg.jl:1\n\
    in expression starting at /tmp/tmpw2592ylg.jl:1\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_sequence = \"\"\n    for i in 0:n-1\n        string_sequence =\
    \ string_sequence + string(i)\n    end\n    return string_sequence\nend\n</cell>\n\
    <code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(100)\n</cell>\n<code language=julia-1.5>\nstring_sequence(1000)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10000)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(100000)\n</cell>\n<code language=julia-1.5>\nstring_sequence(1000000)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10000000)\n</cell>\n<code\
    \ language=julia-1.5>\nstring_sequence(100000000)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(1000000000)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10000000000)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(100000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nstring_sequence(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10000000000000)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10000000000001)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10000000000002)\n</cell>\n\
    <code language=julia-1.5>\nstring_sequence(10000000000003)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10000000000004)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10000000000005)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10000000000006)\n</cell>\n\
    <code language=julia-1.5>\nstring_sequence(10000000000007)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10000000000008)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10000000000009)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10000000000010)\n</cell>\n\
    <code language=julia-1.5>\nstring_sequence(10000000000011)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10000000000012)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10000000000013)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10000000000014)\n</cell>\n\
    <code language=julia-1.5>\nstring_sequence(10000000000015)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10000000000016)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10000000000\n\
    using Test\n\n@testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0)\
    \ == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"\
    0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbtxec9sb.jl:10\nin expression starting at\
    \ /tmp/tmpbtxec9sb.jl:10\n"
  stdout: ''
  timestamp: 1659747215
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_sequence = \"\"\n    \n    for i = 1:n\n        string_sequence\
    \ = string_sequence + string(i)\n    end\n    \n    return string_sequence\nend\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\nusing Test\n\
    \n@testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpswplsh6c.jl:13\nin expression starting at\
    \ /tmp/tmpswplsh6c.jl:13\n"
  stdout: ''
  timestamp: 1659747215
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_seq = \"\"\n    for i = 1:n\n        string_seq = string_seq\
    \ + i\n    end\n    return string_seq\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpzjni0ljj.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpzjni0ljj.jl:16\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzjni0ljj.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzjni0ljj.jl:15\ntest set: Error\
    \ During Test at /tmp/tmpzjni0ljj.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::Int64)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n \
    \   +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpzjni0ljj.jl:7\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzjni0ljj.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzjni0ljj.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpzjni0ljj.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::Int64)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n\
    \    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/cent"
  timestamp: 1659747217
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_sequence = String[]()\n    for i = 1 to n do\n        push!(string_sequence,string(i))\n\
    \    end\n    \n    return string_sequence\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"for\" at /tmp/tmpc1gt5_jk.jl:6 expected \"\
    end\", got \"n\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpc1gt5_jk.jl:6\n\
    in expression starting at /tmp/tmpc1gt5_jk.jl:6\n"
  stdout: ''
  timestamp: 1659747215
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_sequence = \"\"\n    for i = 1:n\n        string_sequence = string_sequence\
    \ + string(i)\n    end\n    return string_sequence\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp9262y0lg.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp9262y0lg.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9262y0lg.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9262y0lg.jl:14\ntest set: Error\
    \ During Test at /tmp/tmp9262y0lg.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::String)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmp9262y0lg.jl:6\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9262y0lg.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9262y0lg.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp9262y0lg.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmp9262y0lg.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9262y0lg.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9262y0lg.jl:14\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    1      2      3\n"
  timestamp: 1659747215
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    \n    for i in 0:n-1\n        string = string\
    \ + i\n    end\n    \n    return string\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpctry7kn2.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpctry7kn2.jl:18\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpctry7kn2.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpctry7kn2.jl:17\ntest set: Error\
    \ During Test at /tmp/tmpctry7kn2.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::Int64)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n \
    \   +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpctry7kn2.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpctry7kn2.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpctry7kn2.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpctry7kn2.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::Int64)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n\
    \    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/cent"
  timestamp: 1659747218
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_sequence = \"\"\n    \n    for i = 1:n\n        string_sequence\
    \ = string_sequence + i\n    end\n    \n    return string_sequence\nend\n</cell>\n\
    <code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a string as input and returns a string with all the\
    \ characters in lower case.\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsn98odtq.jl:13\nin expression starting at\
    \ /tmp/tmpsn98odtq.jl:13\n"
  stdout: ''
  timestamp: 1659747215
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    for i = 1:n\n        string = string + string(i)\n\
    \    end\n    \n    return string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmprhx65z82.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmprhx65z82.jl:17\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprhx65z82.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprhx65z82.jl:16\ntest set: Error\
    \ During Test at /tmp/tmprhx65z82.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: objects of type String are not callable\n\
    \  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmprhx65z82.jl:7\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprhx65z82.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprhx65z82.jl:16\ntest set:\
    \ Error During Test at /tmp/tmprhx65z82.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: objects of type\
    \ String are not callable\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n \
    \    @ Main /tmp/tmprhx65z82.jl:7\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprhx65z82.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprhx65z82.jl:16\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    1      2      3\n"
  timestamp: 1659747217
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_seq = String[]\n    \n    for i = 1:n\n        push!(string_seq,\
    \ string(i))\n    end\n    \n    return join(string_seq)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0)\
    \ == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"\
    0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkd1grqey.jl:13\nin expression starting at\
    \ /tmp/tmpkd1grqey.jl:13\n"
  stdout: ''
  timestamp: 1659747216
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1:n\n        push!(string_seq,string(i))\n\
    \    end\n    return string_seq\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpptz5hkrx.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpptz5hkrx.jl:15\n  Test threw exception\n\
    \  Expression: candidate(0) == \"0\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{String} to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpptz5hkrx.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpptz5hkrx.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpptz5hkrx.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpptz5hkrx.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: Cannot `convert` an object of type\
    \ Vector{String} to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpptz5hkrx.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpptz5hkrx.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747216
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    \n    for i = 1:n\n        string = string +\
    \ string(i)\n    end\n    \n    return string\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppze1t2aq.jl:13\nin expression starting at\
    \ /tmp/tmppze1t2aq.jl:13\n"
  stdout: ''
  timestamp: 1659747208
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw2592ylg.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw2592ylg.jl:1\n\
    in expression starting at /tmp/tmpw2592ylg.jl:1\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    \n    for i = 1:n\n        string = string +\
    \ i\n    end\n    \n    return string\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1rwkp7c7.jl:13\nin expression starting at\
    \ /tmp/tmp1rwkp7c7.jl:13\n"
  stdout: ''
  timestamp: 1659747216
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1:n\n        push!(string_seq,string(i))\n\
    \    end\n    return join(string_seq,\" \")\nend\n</cell>\n<code language=julia-1.4>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.4>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp17d1xnpo.jl:10\nin expression starting at\
    \ /tmp/tmp17d1xnpo.jl:10\n"
  stdout: ''
  timestamp: 1659747216
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_seq = \"\"\n    \n    for i = 1:n\n        string_seq = string_seq\
    \ + i\n    end\n    \n    return string_seq\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpn8ml2auh.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpn8ml2auh.jl:18\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn8ml2auh.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn8ml2auh.jl:17\ntest set: Error\
    \ During Test at /tmp/tmpn8ml2auh.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::Int64)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n \
    \   +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpn8ml2auh.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn8ml2auh.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn8ml2auh.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpn8ml2auh.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::Int64)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n\
    \    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/cent"
  timestamp: 1659747214
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw2592ylg.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw2592ylg.jl:1\n\
    in expression starting at /tmp/tmpw2592ylg.jl:1\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    \n    for i = 1:n\n        string = string +\
    \ string(i)\n    end\n    \n    return string\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpystjgdii.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpystjgdii.jl:18\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpystjgdii.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpystjgdii.jl:17\ntest set: Error\
    \ During Test at /tmp/tmpystjgdii.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: objects of type String are not callable\n\
    \  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpystjgdii.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpystjgdii.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpystjgdii.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpystjgdii.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: objects of type\
    \ String are not callable\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n \
    \    @ Main /tmp/tmpystjgdii.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpystjgdii.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpystjgdii.jl:17\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    1      2      3\n"
  timestamp: 1659747214
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1:n\n        string_seq[i] = string(i)\n\
    \    end\n    return join(\" \", string_seq)\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<text>\nExercise 4\nWrite a function that takes\
    \ a string and returns the number of words in the string.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkghb_yz2.jl:10\nin expression starting at\
    \ /tmp/tmpkghb_yz2.jl:10\n"
  stdout: ''
  timestamp: 1659747216
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1:n\n        push!(string_seq,string(i))\n\
    \    end\n    return string_seq\nend\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp331sx1gi.jl:10\nin expression starting at\
    \ /tmp/tmp331sx1gi.jl:10\n"
  stdout: ''
  timestamp: 1659747216
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = \"\"\n    for i = 1:n\n        string_seq = string_seq +\
    \ i\n    end\n    return string_seq\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpymwf18x4.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpymwf18x4.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpymwf18x4.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpymwf18x4.jl:14\ntest set: Error\
    \ During Test at /tmp/tmpymwf18x4.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::Int64)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n \
    \   +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpymwf18x4.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpymwf18x4.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpymwf18x4.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpymwf18x4.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::Int64)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n\
    \    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/cent"
  timestamp: 1659747211
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_sequence = \"\"\n    for i = 1:n\n        string_sequence = string_sequence\
    \ + i\n    end\n    return string_sequence\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp5iindzhw.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp5iindzhw.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5iindzhw.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5iindzhw.jl:14\ntest set: Error\
    \ During Test at /tmp/tmp5iindzhw.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::Int64)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::T,\
    \ ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,\
    \ UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n \
    \   +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmp5iindzhw.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp5iindzhw.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5iindzhw.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp5iindzhw.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::Int64)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n\
    \    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/cent"
  timestamp: 1659747213
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1:n\n        push!(string_seq, string(i))\n\
    \    end\n    return join(\" \", string_seq)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpi8ife6je.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpi8ife6je.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \" \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi8ife6je.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi8ife6je.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpi8ife6je.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \" \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi8ife6je.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi8ife6je.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpi8ife6je.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \" \" == \"0 1 2 3 4 5 6 7 8 9 10\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi8ife6je.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi8ife6je.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747209
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    for i = 1:n\n        string = string + string(i)\n\
    \    end\n    return string\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"\
    0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpral20w52.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpral20w52.jl:16\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpral20w52.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpral20w52.jl:15\ntest set: Error\
    \ During Test at /tmp/tmpral20w52.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: objects of type String are not callable\n\
    \  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpral20w52.jl:7\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpral20w52.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpral20w52.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpral20w52.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: objects of type\
    \ String are not callable\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n \
    \    @ Main /tmp/tmpral20w52.jl:7\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpral20w52.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpral20w52.jl:15\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    1      2      3\n"
  timestamp: 1659747211
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string = \"\"\n    for i = 1:n\n        string = string + string(i)\n\
    \    end\n    return string\nend\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10)\n\
    </cell>\n<code language=julia-1.5>\nstring_\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2vz7qjo1.jl:11\nin expression starting at\
    \ /tmp/tmp2vz7qjo1.jl:11\n"
  stdout: ''
  timestamp: 1659747208
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_seq = String[]\n    for i = 1:n\n        push!(string_seq,string(i))\n\
    \    end\n    \n    return join(\" \",string_seq)\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns a string with all the characters in lower case.\
    \ \nExample: \"Hello World\" -> \"hello world\"\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxa4784sa.jl:12\nin expression starting at\
    \ /tmp/tmpxa4784sa.jl:12\n"
  stdout: ''
  timestamp: 1659747216
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i = 1:n\n        push!(string_seq,string(i))\n\
    \    end\n    return string_seq\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpptz5hkrx.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpptz5hkrx.jl:15\n  Test threw exception\n\
    \  Expression: candidate(0) == \"0\"\n  MethodError: Cannot `convert` an object\
    \ of type Vector{String} to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpptz5hkrx.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpptz5hkrx.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpptz5hkrx.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpptz5hkrx.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: Cannot `convert` an object of type\
    \ Vector{String} to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpptz5hkrx.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpptz5hkrx.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747216
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = String[]\n    for i in 0:n\n        push!(string_seq,String(i))\n\
    \    return string_seq\nend\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsakzzjrx.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsakzzjrx.jl:1\n\
    in expression starting at /tmp/tmpsakzzjrx.jl:1\n"
  stdout: ''
  timestamp: 1659747216
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\"\
    )\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpw2592ylg.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw2592ylg.jl:1\n\
    in expression starting at /tmp/tmpw2592ylg.jl:1\n"
  stdout: ''
  timestamp: 1659747207
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = \"\"\n    for i = 1:n\n        string_seq = string_seq +\
    \ i\n    end\n    return string_seq\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph2bce1p0.jl:10\nin expression starting at\
    \ /tmp/tmph2bce1p0.jl:10\n"
  stdout: ''
  timestamp: 1659747214
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \n    string_seq = String[]\n    \n    for i in 0:n-1\n        string_seq[i]\
    \ = i\n    end\n    \n    return string_seq\nend\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10)\n</cell>\n<code language=julia-1.5>\nstring_sequence(100)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(1000)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10000)\n</cell>\n<code language=julia-1.5>\nstring_sequence(100000)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(1000000)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(10000000)\n</cell>\n<code language=julia-1.5>\nstring_sequence(100000000)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(1000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nstring_sequence(10000000000)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(100000000000)\n</cell>\n<code language=julia-1.5>\nstring_sequence(1000000000000)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10000000000000)\n</cell>\n\
    <code language=julia-1.5>\nstring_sequence(100000000000000)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(1000000000000000)\n</cell>\n<code language=julia-1.5>\nstring_sequence(10000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(100000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nstring_sequence(1000000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nstring_sequence(10000000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    string_sequence(100000000000000000000)\n</cell>\n<code language=julia-1.5>\nstring_sequence(1000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(100000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(1000000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10000000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(100000000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(1000000000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(10000000000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(100000000000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nstring_sequence(1000000000000000000\nusing\
    \ Test\n\n@testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0)\
    \ == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"\
    0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvtft2pes.jl:13\nin expression starting at\
    \ /tmp/tmpvtft2pes.jl:13\n"
  stdout: ''
  timestamp: 1659747216
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    string_seq = \"\"\n    for i = 1:n\n        string_seq = string_seq +\
    \ string(i)\n    end\n    return string_seq\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpcndvl_mv.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpcndvl_mv.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"\" == \"0\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcndvl_mv.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcndvl_mv.jl:14\ntest set: Error\
    \ During Test at /tmp/tmpcndvl_mv.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(3) == \"0 1 2 3\"\n  MethodError: no method matching +(::String, ::String)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpcndvl_mv.jl:6\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcndvl_mv.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcndvl_mv.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpcndvl_mv.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\"\n  MethodError: no method matching\
    \ +(::String, ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \  Stacktrace:\n   [1] string_sequence(n::Int64)\n     @ Main /tmp/tmpcndvl_mv.jl:6\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcndvl_mv.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcndvl_mv.jl:14\nTest Summary:\
    \ | Fail  Error  Total\ntest set      |    1      2      3\n"
  timestamp: 1659747211

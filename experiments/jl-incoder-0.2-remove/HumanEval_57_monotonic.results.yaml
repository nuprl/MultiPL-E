language: jl
name: HumanEval_57_monotonic
results:
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n   \
    \ l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9rxcdf9p.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9rxcdf9p.jl:1\n\
    in expression starting at /tmp/tmp9rxcdf9p.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n   \
    \ l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9rxcdf9p.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9rxcdf9p.jl:1\n\
    in expression starting at /tmp/tmp9rxcdf9p.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    \n    if l[1] < l[2] \n        true\n    elseif l[1] > l[2] \n\
    \        false\n    elseif l[1] == l[2] \n        true\n    elseif l[1] < l[2]\
    \ \n        true\n    elseif l[1] > l[2] \n        false\n    elseif l[1] < l[2]\
    \ \n        true\n    elseif l[1] > l[2] \n        false\n    elseif l[1] < l[2]\
    \ \n        true\n    elseif l[1] > l[2] \n        false\n    elseif l[1] < l[2]\
    \ \n        true\n    elseif l[1] > l[2] \n        false\n    elseif l[1] < l[2]\
    \ \n        true\n    elseif l[1] > l[2] \n        false\n    elseif l[1] < l[2]\
    \ \n        true\n    elseif l[1] > l[2] \n        false\n    elseif l[1] < l[2]\
    \ \n        true\n    elseif l[1] > l[2] \n        false\n    elseif l[1] < l[2]\
    \ \n        true\n    elseif l[1] > l[2] \n        false\n    elseif l[1] < l[2]\
    \ \n        true\n    elseif l[1] > l[2] \n        false\n    elseif l[1] < l[2]\
    \ \n        true\n    elseif l[1] > l[2] \n        false\n    elseif l[1] < l[2]\
    \ \n        true\n    elseif l[1] > l[2] \n        false\n    elseif l[1] < l[2]\
    \ \n        true\n    elseif l[1] > l[2] \n        false\n    elseif l[1] < l[2]\
    \ \n        true\n    elseif l[1] > l[2] \n        false\n    elseif l[1] < l[2]\
    \ \n        true\n    elseif l[1] > l[2] \n        false\n    elseif l[1] < l[2]\
    \ \n        true\n    elseif l[1] > l[2] \n        false\n    elseif l[1] < l[2]\
    \ \n        true\n    elseif l[1] > l[2] \n        false\n    elseif l[1] < l[2]\
    \ \n        true\n    elseif l[1] > l[2] \n        false\n    elseif l[1] < l[2]\
    \ \n        true\n    elseif l[1] > l[2] \n        false\n    elseif l[1] < l[2]\
    \ \n        true\n    elseif l[1] > l[2] \n        false\n    elseif l[1] < l[2]\
    \ \n        true\n    elseif l[1] > l[2] \n        false\n    elseif l[1] < l[2]\
    \ \n        true\n    elseif l[1] > l[2] \n        false\n    elseif l[1] < l[2]\
    \ \n        true\n\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t\
    @test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\
    \t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10])\
    \ == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t\
    @test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuigecc69.jl:1\nin expression starting at /tmp/tmpuigecc69.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    return\
    \ l == l\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpdakncni9.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpdakncni9.jl:15\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 10]) == true\n  UndefVarError: .. not defined\n\
    \  Stacktrace:\n   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpdakncni9.jl:5\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdakncni9.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdakncni9.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpdakncni9.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 20]) == true\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpdakncni9.jl:5\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdakncni9.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdakncni9.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpdakncni9.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([1, 20, 4, 10]) == false\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpdakncni9.jl:5\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdakncni9.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdakncni9.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpdakncni9.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([4, 1, 0, -10]) == true\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpdakncni9.jl:5\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  timestamp: 1659749009
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    i = 2\n    while i < length(l)\n        if l[i] > l[i-1]\n    \
    \        return false\n        elseif l[i] < l[i-1]\n            return true\n\
    \        else\n            i += 1\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpeb7tgtmg.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpeb7tgtmg.jl:22\n  Expression: candidate([1,\
    \ 2, 4, 10]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeb7tgtmg.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeb7tgtmg.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpeb7tgtmg.jl:23\n  Expression: candidate([1, 2, 4, 20]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeb7tgtmg.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeb7tgtmg.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpeb7tgtmg.jl:25\n  Expression: candidate([4, 1, 0, -10]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeb7tgtmg.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeb7tgtmg.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpeb7tgtmg.jl:26\n  Expression: candidate([4, 1, 1, 0]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeb7tgtmg.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeb7tgtmg.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpeb7tgtmg.jl:28\n  Expression: candidate([1, 2, 3, 4, 5, 60])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share"
  timestamp: 1659749008
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 0 \n        return true\n    end\n    \n    if l[1] < l[2] \n        return\
    \ true\n    end\n    \n    if l[1] > l[2] \n        return false\n    end\n  \
    \  \n    if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2]\
    \ \n        return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqlq9nabx.jl:1\nin expression starting at /tmp/tmpqlq9nabx.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    i = length(l) - 1\n    while i >= 1 \n        if l[i] > l[i-1]\
    \ \n            return false\n        i -= 1\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"while\" at /tmp/tmp_w0aapmv.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_w0aapmv.jl:1\n\
    in expression starting at /tmp/tmp_w0aapmv.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    i = findfirst(x -> x < l[1], l)\n    j = findfirst(x -> x > l[1],\
    \ l)\n    return i == j\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpui2xn2n6.jl:11

    '
  stdout: "test set: Test Failed at /tmp/tmpui2xn2n6.jl:14\n  Expression: candidate([1,\
    \ 2, 4, 10]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpui2xn2n6.jl:14 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpui2xn2n6.jl:13\ntest set: Test\
    \ Failed at /tmp/tmpui2xn2n6.jl:15\n  Expression: candidate([1, 2, 4, 20]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpui2xn2n6.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpui2xn2n6.jl:13\ntest set: Test\
    \ Failed at /tmp/tmpui2xn2n6.jl:17\n  Expression: candidate([4, 1, 0, -10]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpui2xn2n6.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpui2xn2n6.jl:13\ntest set: Test\
    \ Failed at /tmp/tmpui2xn2n6.jl:18\n  Expression: candidate([4, 1, 1, 0]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpui2xn2n6.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpui2xn2n6.jl:13\ntest set: Test\
    \ Failed at /tmp/tmpui2xn2n6.jl:20\n  Expression: candidate([1, 2, 3, 4, 5, 60])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share"
  timestamp: 1659749008
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n   \
    \ l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5k5uj3k1.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5k5uj3k1.jl:1\n\
    in expression starting at /tmp/tmp5k5uj3k1.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpdr1n5nsb.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdr1n5nsb.jl:1\n\
    in expression starting at /tmp/tmpdr1n5nsb.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpdr1n5nsb.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdr1n5nsb.jl:1\n\
    in expression starting at /tmp/tmpdr1n5nsb.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpdr1n5nsb.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdr1n5nsb.jl:1\n\
    in expression starting at /tmp/tmpdr1n5nsb.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l =\
    \ l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n   \
    \ l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwm6wqijk.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwm6wqijk.jl:1\n\
    in expression starting at /tmp/tmpwm6wqijk.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n   \
    \ l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9rxcdf9p.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9rxcdf9p.jl:1\n\
    in expression starting at /tmp/tmp9rxcdf9p.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l =\
    \ l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n   \
    \ l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwm6wqijk.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwm6wqijk.jl:1\n\
    in expression starting at /tmp/tmpwm6wqijk.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    diffs = diff(l)\n    diffs[1,1] == 0 && return true\n    diffs[2,1]\
    \ == 0 && return true\n    diffs[1,2] == 0 && return true\n    diffs[2,2] == 0\
    \ && return true\n    diffs[1,1] == 0 && return true\n    diffs[2,1] == 0 && return\
    \ true\n    diffs[1,2] == 0 && return true\n    diffs[2,2] == 0 && return true\n\
    \    diffs[1,1] == 0 && return true\n    diffs[2,1] == 0 && return true\n    diffs[1,2]\
    \ == 0 && return true\n    diffs[2,2] == 0 && return true\n    diffs[1,1] == 0\
    \ && return true\n    diffs[2,1] == 0 && return true\n    diffs[1,2] == 0 && return\
    \ true\n    diffs[2,2] == 0 && return true\n    diffs[1,1] == 0 && return true\n\
    \    diffs[2,1] == 0 && return true\n    diffs[1,2] == 0 && return true\n    diffs[2,2]\
    \ == 0 && return true\n    diffs[1,1] == 0 && return true\n    diffs[2,1] == 0\
    \ && return true\n    diffs[1,2] == 0 && return true\n    diffs[2,2] == 0 && return\
    \ true\n    diffs[1,1] == 0 && return true\n    diffs[2,1] == 0 && return true\n\
    \    diffs[1,2] == 0 && return true\n    diffs[2,2] == 0 && return true\n    diffs[1,1]\
    \ == 0 && return true\n    diffs[2,1] == 0 && return true\n    diffs[1,2] == 0\
    \ && return true\n    diffs[2,2] == 0 && return true\n    diffs[1,1] == 0 && return\
    \ true\n    diffs[2,1] == 0 && return true\n    diffs[1,2] == 0 && return true\n\
    \    diffs[2,2] == 0 && return true\n    diffs[1,1] == 0 && return true\n    diffs[2,1]\
    \ == 0 && return true\n    diffs[1,2] == 0 && return true\n    diffs[2,2] == 0\
    \ && return true\n    diffs[1,1] == 0 && return true\n    diffs[2,1] == 0 && return\
    \ true\n    diffs[1,2] == 0 && return true\n    diffs[2,2] == 0 && return true\n\
    \    diffs[1,1] == 0 && return true\n    diffs[2,1] == 0 && return true\n    diffs[1,2]\
    \ == 0 && return true\n    diffs[2,2] == 0 && return true\n    diffs[1,1] == 0\
    \ && return true\n    diffs[2,1] == 0 && return true\n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6b7lcqpt.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6b7lcqpt.jl:1\n\
    in expression starting at /tmp/tmp6b7lcqpt.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 0 \n        return true\n    \n    if l[1] > l[end(l)]\n        return false\n\
    \    \n    if l[1] < l[end(l)]\n        return true\n    \n    for i in 2:(length(l)\
    \ - 1)\n        if l[i] > l[i - 1]\n            return false\n        \n     \
    \   if l[i] < l[i - 1]\n            return true\n    end\n    \n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpp28saqiw.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpp28saqiw.jl:1\n\
    in expression starting at /tmp/tmpp28saqiw.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    i = 2\n    while i < length(l)\n        if l[i-1] > l[i]\n    \
    \        return false\n        end\n        i += 1\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpoyy2ikcf.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpoyy2ikcf.jl:21\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoyy2ikcf.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoyy2ikcf.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpoyy2ikcf.jl:24\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoyy2ikcf.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoyy2ikcf.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1659749008
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    \n    if l[1] < l[2]\n        true\n    else\n        false\n \
    \   end\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpc4ofi43j.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpc4ofi43j.jl:19\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc4ofi43j.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc4ofi43j.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpc4ofi43j.jl:22\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc4ofi43j.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc4ofi43j.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpc4ofi43j.jl:24\n  Expression: candidate([9, 9, 9, 9]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc4ofi43j.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc4ofi43j.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  timestamp: 1659749008
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n   \
    \ l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5k5uj3k1.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5k5uj3k1.jl:1\n\
    in expression starting at /tmp/tmp5k5uj3k1.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    i = findfirst(i -> l[i] > l[i+1], 1:length(l)-1)\n    j = findfirst(j\
    \ -> l[j] < l[j+1], 1:length(l)-1)\n    return i == j\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpw870jxqn.jl:11

    '
  stdout: "test set: Test Failed at /tmp/tmpw870jxqn.jl:14\n  Expression: candidate([1,\
    \ 2, 4, 10]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw870jxqn.jl:14 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw870jxqn.jl:13\ntest set: Test\
    \ Failed at /tmp/tmpw870jxqn.jl:15\n  Expression: candidate([1, 2, 4, 20]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw870jxqn.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw870jxqn.jl:13\ntest set: Test\
    \ Failed at /tmp/tmpw870jxqn.jl:17\n  Expression: candidate([4, 1, 0, -10]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw870jxqn.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw870jxqn.jl:13\ntest set: Test\
    \ Failed at /tmp/tmpw870jxqn.jl:18\n  Expression: candidate([4, 1, 1, 0]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw870jxqn.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw870jxqn.jl:13\ntest set: Test\
    \ Failed at /tmp/tmpw870jxqn.jl:20\n  Expression: candidate([1, 2, 3, 4, 5, 60])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share"
  timestamp: 1659749008
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd4j35lx9.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd4j35lx9.jl:1\n\
    in expression starting at /tmp/tmpd4j35lx9.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n\
    \    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l\
    \ = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n\
    \    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l\
    \ = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n\
    \    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l\
    \ = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n\
    \    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l\
    \ = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n\
    \    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l\
    \ = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n\
    \    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l\
    \ = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n\
    \    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l\
    \ = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsx8pssjo.jl:1\nin expression starting at /tmp/tmpsx8pssjo.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    \n    if l[1] < l[2] \n        return true\n    else \n       \
    \ return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9jmd_rx8.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmp9jmd_rx8.jl:19\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9jmd_rx8.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9jmd_rx8.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp9jmd_rx8.jl:22\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9jmd_rx8.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9jmd_rx8.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp9jmd_rx8.jl:24\n  Expression: candidate([9, 9, 9, 9]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9jmd_rx8.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9jmd_rx8.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  timestamp: 1659749008
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end-l.start+1:end]\n    l = sort(l)\n    l = l[end-l.start+1:end]\n\
    \    l = sort(l)\n    l = l[end-l.start+1:end]\n    l = sort(l)\n    l = l[end-l.start+1:end]\n\
    \    l = sort(l)\n    l = l[end-l.start+1:end]\n    l = sort(l)\n    l = l[end-l.start+1:end]\n\
    \    l = sort(l)\n    l = l[end-l.start+1:end]\n    l = sort(l)\n    l = l[end-l.start+1:end]\n\
    \    l = sort(l)\n    l = l[end-l.start+1:end]\n    l = sort(l)\n    l = l[end-l.start+1:end]\n\
    \    l = sort(l)\n    l = l[end-l.start+1:end]\n    l = sort(l)\n    l = l[end-l.start+1:end]\n\
    \    l = sort(l)\n    l = l[end-l.start+1:end]\n    l = sort(l)\n    l = l[end-l.start+1:end]\n\
    \    l = sort(l)\n    l = l[end-l.start+1:end]\n    l = sort(l)\n    l = l[end-l.start+1:end]\n\
    \    l = sort(l)\n    l = l[end-l.start+1:end]\n    l = sort(l)\n    l = l[end-l.start+1:end]\n\
    \    l = sort(l)\n    l = l[end-l.start+1:end]\n    l = sort(l)\n    l = l[end-l.start+1:end]\n\
    \    l = sort(l)\n    l = l[end-l.start+1:end]\n    l = sort(l)\n    l = l[end-l.start+1:end]\n\
    \    l = sort(l)\n    l = l[end-l.start+1:end]\n    l = sort(l)\n    l = l[end-l.start+1:end]\n\
    \    l = sort(l)\n    l = l[end-l.start+1:end]\n    l = sort(l)\n    l = l[end-l.start+1:end]\n\
    \    l = sort(l)\n    l = l[end-l.start+1:end]\n    l = sort(l)\n    l = l[end-l.start+1:end]\n\
    \    l = sort(l)\n    l = l[end-l.start+1:end]\n    l = sort(l)\n    l = l[end-l.start+1:end]\n\
    \    l = \nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpr5ldl4tr.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpr5ldl4tr.jl:1\n\
    in expression starting at /tmp/tmpr5ldl4tr.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 0 \n        return true\n    end\n    \n    if l[1] < l[2] \n        return\
    \ true\n    end\n    \n    if l[2] < l[3] \n        return true\n    end\n   \
    \ \n    if l[3] < l[4] \n        return true\n    end\n    \n    if l[4] < l[5]\
    \ \n        return true\n    end\n    \n    if l[5] < l[6] \n        return true\n\
    \    end\n    \n    if l[6] < l[7] \n        return true\n    end\n    \n    if\
    \ l[7] < l[8] \n        return true\n    end\n    \n    if l[8] < l[9] \n    \
    \    return true\n    end\n    \n    if l[9] < l[10] \n        return true\n \
    \   end\n    \n    if l[10] < l[11] \n        return true\n    end\n    \n   \
    \ if l[11] < l[12] \n        return true\n    end\n    \n    if l[12] < l[13]\
    \ \n        return true\n    end\n    \n    if l[13] < l[14] \n        return\
    \ true\n    end\n    \n    if l[14] < l[15] \n        return true\n    end\n \
    \   \n    if l[15] < l[16] \n        return true\n    end\n    \n    if l[16]\
    \ < l[17] \n        return true\n    end\n    \n    if l[17] < l[18] \n      \
    \  return true\n    end\n    \n    if l[18] < l[19] \n        return true\n  \
    \  end\n    \n    if l[19] < l[20] \n        return true\n    end\n    \n    if\
    \ l[20] < l[21] \n        return true\n    end\n    \n    if l[21] < l[22] \n\
    \        return true\n    end\n    \n    if l[22] < l[23] \n        return true\n\
    \    end\n    \n    if l[23] < l[24] \n        return true\n    end\n    \n  \
    \  if l[24] < l[25] \n        return true\n    end\n    \n    if l[25] < l[26]\
    \ \n        return true\n    end\n    \n    if l[26] < l[27] \n        return\
    \ true\n    end\n    \n    if l[27] < l[28] \n        return true\n    end\n \
    \   \n    if l[28] < l[29] \n        return true\n    end\n    \n    if l[29]\
    \ < l[30] \n        return true\n    end\n    \n    if l[30] < l[31] \n      \
    \  return true\n    end\n    \n    if l[31] < l[32] \n        return true\n  \
    \  end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgntwxszl.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgntwxszl.jl:1\n\
    in expression starting at /tmp/tmpgntwxszl.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n   \
    \ l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9rxcdf9p.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9rxcdf9p.jl:1\n\
    in expression starting at /tmp/tmp9rxcdf9p.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n   \
    \ l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5k5uj3k1.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5k5uj3k1.jl:1\n\
    in expression starting at /tmp/tmp5k5uj3k1.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 0 \n        return true\n    else \n        if l[1] < l[0] \n           \
    \ return false\n        else \n            if l[1] > l[end(l)]\n             \
    \   return true\n            else \n                if l[end(l)] == l[1]\n   \
    \                 return true\n                else \n                    return\
    \ false\n            end\n        end\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6qec2s4c.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6qec2s4c.jl:1\n\
    in expression starting at /tmp/tmp6qec2s4c.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd4j35lx9.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd4j35lx9.jl:1\n\
    in expression starting at /tmp/tmpd4j35lx9.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpdr1n5nsb.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdr1n5nsb.jl:1\n\
    in expression starting at /tmp/tmpdr1n5nsb.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n   \
    \ l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5k5uj3k1.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5k5uj3k1.jl:1\n\
    in expression starting at /tmp/tmp5k5uj3k1.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n   \
    \ l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5k5uj3k1.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5k5uj3k1.jl:1\n\
    in expression starting at /tmp/tmp5k5uj3k1.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd4j35lx9.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd4j35lx9.jl:1\n\
    in expression starting at /tmp/tmpd4j35lx9.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n   \
    \ l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5k5uj3k1.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5k5uj3k1.jl:1\n\
    in expression starting at /tmp/tmp5k5uj3k1.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l ==\
    \ l[end] ? true : false \nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp3ssmgc94.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp3ssmgc94.jl:15\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 10]) == true\n  UndefVarError: .. not defined\n\
    \  Stacktrace:\n   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmp3ssmgc94.jl:5\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3ssmgc94.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3ssmgc94.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp3ssmgc94.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 20]) == true\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmp3ssmgc94.jl:5\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3ssmgc94.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3ssmgc94.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp3ssmgc94.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([1, 20, 4, 10]) == false\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmp3ssmgc94.jl:5\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3ssmgc94.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3ssmgc94.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp3ssmgc94.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([4, 1, 0, -10]) == true\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmp3ssmgc94.jl:5\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  timestamp: 1659749009
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n   \
    \ l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9rxcdf9p.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9rxcdf9p.jl:1\n\
    in expression starting at /tmp/tmp9rxcdf9p.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> \nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1my2rv3s.jl:1\nin expression starting at /tmp/tmp1my2rv3s.jl:1\n"
  stdout: ''
  timestamp: 1659749009
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l =\
    \ l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n   \
    \ l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwm6wqijk.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwm6wqijk.jl:1\n\
    in expression starting at /tmp/tmpwm6wqijk.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 0 \n        return true\n    end\n    \n    l = sort(l)\n    \n    if l[1]\
    \ < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n        return\
    \ false\n    end\n    \n    if l[1] == l[2] \n        return true\n    end\n \
    \   \n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp9i3t7luh.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmp9i3t7luh.jl:31\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9i3t7luh.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9i3t7luh.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp9i3t7luh.jl:34\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9i3t7luh.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9i3t7luh.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1659749010
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    return all(l[1:end-1] < l[2:end])\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4,\
    \ 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpmsjupynd.jl:10

    '
  stdout: "test set: Error During Test at /tmp/tmpmsjupynd.jl:13\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 10]) == true\n  UndefVarError: .. not defined\n\
    \  Stacktrace:\n   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpmsjupynd.jl:5\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmsjupynd.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmsjupynd.jl:12\ntest set:\
    \ Error During Test at /tmp/tmpmsjupynd.jl:14\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 20]) == true\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpmsjupynd.jl:5\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmsjupynd.jl:14 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmsjupynd.jl:12\ntest set:\
    \ Error During Test at /tmp/tmpmsjupynd.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([1, 20, 4, 10]) == false\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpmsjupynd.jl:5\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmsjupynd.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmsjupynd.jl:12\ntest set:\
    \ Error During Test at /tmp/tmpmsjupynd.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([4, 1, 0, -10]) == true\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpmsjupynd.jl:5\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  timestamp: 1659749011
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ < 2 \n        return true\n    end\n    \n    l = sort(l)\n    \n    if l[1]\
    \ < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n        return\
    \ false\n    end\n    \n    if l[1] < l[2] \n        return true\n    end\n  \
    \  \n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp66lqiluu.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmp66lqiluu.jl:31\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp66lqiluu.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp66lqiluu.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp66lqiluu.jl:34\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp66lqiluu.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp66lqiluu.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp66lqiluu.jl:36\n  Expression: candidate([9, 9, 9, 9]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp66lqiluu.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp66lqiluu.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  timestamp: 1659749010
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: -1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    i = findfirst(isequal(l), l)\n    j = findfirst(isequal(l+1), l)\n\
    \    return (i<j) || (i>j)\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpcngyuc3s.jl:14\n  Test threw
    exception\n  Expression: candidate([1, 2, 4, 10]) == true\n  MethodError: no method
    matching +(::Vector{Int64}, ::Int64)\n  For element-wise addition, use broadcasting
    with dot syntax: array .+ scalar\n  Closest candidates are:\n    +(::Any, ::Any,
    !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::T,
    ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,
    UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n    +(!Matched::T,
    ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n    ...\n  Stacktrace:\n   [1]
    monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpcngyuc3s.jl:6\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpcngyuc3s.jl:14 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpcngyuc3s.jl:13\ntest set: Error During Test at
    /tmp/tmpcngyuc3s.jl:15\n  Test threw exception\n  Expression: candidate([1, 2,
    4, 20]) == true\n  MethodError: no method matching +(::Vector{Int64}, ::Int64)\n  For
    element-wise addition, use broadcasting with dot syntax: array .+ scalar\n  Closest
    candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::T,
    ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,
    UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n    +(!Matched::T,
    ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n    ...\n  Stacktrace:\n   [1]
    monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpcngyuc3s.jl:6\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:4'
  timestamp: 1659749012
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    return l[1] < l[2]\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp4xre5aa0.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmp4xre5aa0.jl:14\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 10]) == true\n  UndefVarError: .. not defined\n\
    \  Stacktrace:\n   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmp4xre5aa0.jl:5\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4xre5aa0.jl:14 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4xre5aa0.jl:13\ntest set:\
    \ Error During Test at /tmp/tmp4xre5aa0.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 20]) == true\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmp4xre5aa0.jl:5\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4xre5aa0.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4xre5aa0.jl:13\ntest set:\
    \ Error During Test at /tmp/tmp4xre5aa0.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([1, 20, 4, 10]) == false\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmp4xre5aa0.jl:5\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4xre5aa0.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4xre5aa0.jl:13\ntest set:\
    \ Error During Test at /tmp/tmp4xre5aa0.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([4, 1, 0, -10]) == true\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmp4xre5aa0.jl:5\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  timestamp: 1659749011
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 0 \n        return true\n    end\n    \n    if l[1] < l[2] \n        return\
    \ true\n    end\n    \n    if l[1] > l[2] \n        return false\n    end\n  \
    \  \n    if l[1] > l[2] \n        return true\n    end\n    \n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmszplsde.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpmszplsde.jl:29\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmszplsde.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmszplsde.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpmszplsde.jl:30\n  Expression: candidate([4, 1, 0, -10]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmszplsde.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmszplsde.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpmszplsde.jl:31\n  Expression: candidate([4, 1, 1, 0]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmszplsde.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmszplsde.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpmszplsde.jl:32\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmszplsde.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmszplsde.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpmszplsde.jl:34\n  Expression: candidate([9, 9, 9, 9]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/sha"
  timestamp: 1659749010
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    return\
    \ l == l\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpdakncni9.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpdakncni9.jl:15\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 10]) == true\n  UndefVarError: .. not defined\n\
    \  Stacktrace:\n   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpdakncni9.jl:5\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdakncni9.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdakncni9.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpdakncni9.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 20]) == true\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpdakncni9.jl:5\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdakncni9.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdakncni9.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpdakncni9.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([1, 20, 4, 10]) == false\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpdakncni9.jl:5\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdakncni9.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdakncni9.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpdakncni9.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([4, 1, 0, -10]) == true\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpdakncni9.jl:5\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  timestamp: 1659749009
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n   \
    \ l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9rxcdf9p.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9rxcdf9p.jl:1\n\
    in expression starting at /tmp/tmp9rxcdf9p.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 0 \n        return true\n    end\n    \n    l = sort(l)\n    \n    if l[1]\
    \ < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n        return\
    \ false\n    end\n    \n    return monotonic(l[2:end])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 2 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmphwfx5wc3.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmphwfx5wc3.jl:27\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphwfx5wc3.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphwfx5wc3.jl:24\ntest set: Test\
    \ Failed at /tmp/tmphwfx5wc3.jl:30\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphwfx5wc3.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphwfx5wc3.jl:24\ntest set: Error\
    \ During Test at /tmp/tmphwfx5wc3.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([9, 9, 9, 9]) == true\n  BoundsError: attempt to access 1-element\
    \ Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmphwfx5wc3.jl:10\n\
    \   [3] monotonic(l::Vector{Int64}) (repeats 3 times)\n     @ Main /tmp/tmphwfx5wc3.jl:18\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmphwfx5wc3.jl:32 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmphwfx5wc3.jl:24\nTest Summary:\
    \ | Pass  Fail  Error  Total\ntest set      |    5     2      1      8\n"
  timestamp: 1659749011
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    i = length(l) - 1\n    while i > 0 && l[i] > l[i-1]\n        i\
    \ = i - 1\n    end\n    return i == 0\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp28mn7mia.jl:11\nin expression starting at\
    \ /tmp/tmp28mn7mia.jl:11\n"
  stdout: ''
  timestamp: 1659749009
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    i = findfirst(l .< last(l))\n    j = findfirst(l .> first(l))\n\
    \    \n    if i == j\n        return true\n    elseif i == -1\n        return\
    \ false\n    elseif j == -1\n        return true\n    elseif j == length(l) -\
    \ 1\n        return false\n    else\n        return l[i] < l[j]\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6ri01s70.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmp6ri01s70.jl:27\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6ri01s70.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6ri01s70.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp6ri01s70.jl:30\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6ri01s70.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6ri01s70.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1659749010
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    i = length(l) - 1\n    while i >= 1 \n        if l[i] > l[i-1]\
    \ \n            return false \n        i -= 1\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"while\" at /tmp/tmp0ywy5jus.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp0ywy5jus.jl:1\n\
    in expression starting at /tmp/tmp0ywy5jus.jl:1\n"
  stdout: ''
  timestamp: 1659749009
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = sort(l)\n    return l == l[1:end-1]\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzq7an9ne.jl:11

    '
  stdout: "test set: Test Failed at /tmp/tmpzq7an9ne.jl:14\n  Expression: candidate([1,\
    \ 2, 4, 10]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzq7an9ne.jl:14 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzq7an9ne.jl:13\ntest set: Test\
    \ Failed at /tmp/tmpzq7an9ne.jl:15\n  Expression: candidate([1, 2, 4, 20]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzq7an9ne.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzq7an9ne.jl:13\ntest set: Test\
    \ Failed at /tmp/tmpzq7an9ne.jl:17\n  Expression: candidate([4, 1, 0, -10]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzq7an9ne.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzq7an9ne.jl:13\ntest set: Test\
    \ Failed at /tmp/tmpzq7an9ne.jl:18\n  Expression: candidate([4, 1, 1, 0]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzq7an9ne.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzq7an9ne.jl:13\ntest set: Test\
    \ Failed at /tmp/tmpzq7an9ne.jl:20\n  Expression: candidate([1, 2, 3, 4, 5, 60])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share"
  timestamp: 1659749010
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 0 \n        return true\n    \n    if l[1] < l[0] \n        return false\n\
    \    \n    if l[1] > l[end(l)]\n        return false\n    \n    if l[1] < l[end(l)]\n\
    \        return true\n    \n    if l[1] > l[end(l)]\n        return true\n   \
    \ \n    if l[1] < l[end(l)]\n        return true\n    \n    if l[1] > l[end(l)]\n\
    \        return true\n    \n    if l[1] < l[end(l)]\n        return true\n   \
    \ \n    if l[1] > l[end(l)]\n        return true\n    \n    if l[1] < l[end(l)]\n\
    \        return true\n    \n    if l[1] > l[end(l)]\n        return true\n   \
    \ \n    if l[1] < l[end(l)]\n        return true\n    \n    if l[1] > l[end(l)]\n\
    \        return true\n    \n    if l[1] < l[end(l)]\n        return true\n   \
    \ \n    if l[1] > l[end(l)]\n        return true\n    \n    if l[1] < l[end(l)]\n\
    \        return true\n    \n    if l[1] > l[end(l)]\n        return true\n   \
    \ \n    if l[1] < l[end(l)]\n        return true\n    \n    if l[1] > l[end(l)]\n\
    \        return true\n    \n    if l[1] < l[end(l)]\n        return true\n   \
    \ \n    if l[1] > l[end(l)]\n        return true\n    \n    if l[1] < l[end(l)]\n\
    \        return true\n    \n    if l[1] > l[end(l)]\n        return true\n   \
    \ \n    if l[1] < l[end(l)]\n        return true\n    \n    if l[1] > l[end(l)]\n\
    \        return true\n    \n    if l[1] < l[end(l)]\n        return true\n   \
    \ \n    if l[1] > l[end(l)]\n        return true\n    \n    if l[1] < l[end(l)]\n\
    \        return true\n    \n    if l[1] > l[end(l)]\n        return true\n   \
    \ \n    if l[1] < l[end(l)]\n        return true\n    \n    if l[1] > l[end(l)]\n\
    \        return true\n    \n    if l[1] < l[end(l)]\n        return true\n   \
    \ \n    if l[1] > l[end(l)]\n        return true\n    \n    if l[1] < l[end(l)]\n\
    \        return true\n    \n    if l[1] > l[end(l)]\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6bsobavr.jl:1\nin expression starting at /tmp/tmp6bsobavr.jl:1\n"
  stdout: ''
  timestamp: 1659749009
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    i = l[1]\n    j = l[end]\n    while i <= j\n        if l[i] > l[j]\n\
    \            return false\n        end\n        i += 1\n        j += 1\n    end\n\
    \    return true\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcggb5d95.jl:16\nin expression starting at\
    \ /tmp/tmpcggb5d95.jl:16\n"
  stdout: ''
  timestamp: 1659749009
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd4j35lx9.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd4j35lx9.jl:1\n\
    in expression starting at /tmp/tmpd4j35lx9.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l =\
    \ l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n   \
    \ l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwm6wqijk.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwm6wqijk.jl:1\n\
    in expression starting at /tmp/tmpwm6wqijk.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n   \
    \ l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5k5uj3k1.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5k5uj3k1.jl:1\n\
    in expression starting at /tmp/tmp5k5uj3k1.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n   \
    \ l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9rxcdf9p.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9rxcdf9p.jl:1\n\
    in expression starting at /tmp/tmp9rxcdf9p.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpdr1n5nsb.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdr1n5nsb.jl:1\n\
    in expression starting at /tmp/tmpdr1n5nsb.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l =\
    \ l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n   \
    \ l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwm6wqijk.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwm6wqijk.jl:1\n\
    in expression starting at /tmp/tmpwm6wqijk.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n   \
    \ l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9rxcdf9p.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9rxcdf9p.jl:1\n\
    in expression starting at /tmp/tmp9rxcdf9p.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    i = findfirst(x -> x < l[1], l[2:end])\n    j = findfirst(x ->\
    \ x > l[1], l[2:end])\n    return i == j\nend\nusing Test\n\n@testset begin\n\n\
    candidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpg3kkhqyh.jl:11

    '
  stdout: "test set: Test Failed at /tmp/tmpg3kkhqyh.jl:14\n  Expression: candidate([1,\
    \ 2, 4, 10]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg3kkhqyh.jl:14 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg3kkhqyh.jl:13\ntest set: Test\
    \ Failed at /tmp/tmpg3kkhqyh.jl:15\n  Expression: candidate([1, 2, 4, 20]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg3kkhqyh.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg3kkhqyh.jl:13\ntest set: Test\
    \ Failed at /tmp/tmpg3kkhqyh.jl:17\n  Expression: candidate([4, 1, 0, -10]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg3kkhqyh.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg3kkhqyh.jl:13\ntest set: Test\
    \ Failed at /tmp/tmpg3kkhqyh.jl:18\n  Expression: candidate([4, 1, 1, 0]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg3kkhqyh.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg3kkhqyh.jl:13\ntest set: Test\
    \ Failed at /tmp/tmpg3kkhqyh.jl:20\n  Expression: candidate([1, 2, 3, 4, 5, 60])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share"
  timestamp: 1659749010
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd4j35lx9.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd4j35lx9.jl:1\n\
    in expression starting at /tmp/tmpd4j35lx9.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: expected \"]\" or separator in arguments to \"\
    [ ]\"; got \"1::-1\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsn_kkihu.jl:5\n\
    in expression starting at /tmp/tmpsn_kkihu.jl:5\n"
  stdout: ''
  timestamp: 1659749010
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n   \
    \ l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9rxcdf9p.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9rxcdf9p.jl:1\n\
    in expression starting at /tmp/tmp9rxcdf9p.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    i = 2\n    while i < length(l)\n        if l[i-1] > l[i]\n    \
    \        return false\n        end\n        i += 1\n    end\n    return true\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpobozrx7m.jl:14\nin expression starting at\
    \ /tmp/tmpobozrx7m.jl:14\n"
  stdout: ''
  timestamp: 1659749010
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    diffs = diff(l)\n    diffs[1,1] == 0 && (return true)\n    diffs[2,1]\
    \ == 0 && (return false)\n    diffs[1,2] == 0 && (return false)\n    diffs[2,2]\
    \ == 0 && (return true)\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpus2rj13j.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpus2rj13j.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 10]) == true\n  BoundsError: attempt to access\
    \ 3-element Vector{Int64} at index [1, 2]\n  Stacktrace:\n   [1] getindex\n  \
    \   @ ./array.jl:862 [inlined]\n   [2] monotonic(l::Vector{Int64})\n     @ Main\
    \ /tmp/tmpus2rj13j.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpus2rj13j.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpus2rj13j.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpus2rj13j.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 20]) == true\n  BoundsError: attempt to access 3-element\
    \ Vector{Int64} at index [1, 2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:862\
    \ [inlined]\n   [2] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpus2rj13j.jl:8\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpus2rj13j.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpus2rj13j.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpus2rj13j.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([1, 20, 4, 10]) == false\n  BoundsError: attempt to access 3-element\
    \ Vector{Int64} at index [1, 2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:862\
    \ [inlined]\n   [2] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpus2rj13j.jl:8\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpus2rj13j.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpus2rj13j.jl:16\ntest set:\
    \ Error During Test at /t"
  timestamp: 1659749013
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n   \
    \ l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9rxcdf9p.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9rxcdf9p.jl:1\n\
    in expression starting at /tmp/tmp9rxcdf9p.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end-l.start+1:end]\n    l = l[end-l.start+1:end]\n    l =\
    \ l[end-l.start+1:end]\n    l = l[end-l.start+1:end]\n    l = l[end-l.start+1:end]\n\
    \    l = l[end-l.start+1:end]\n    l = l[end-l.start+1:end]\n    l = l[end-l.start+1:end]\n\
    \    l = l[end-l.start+1:end]\n    l = l[end-l.start+1:end]\n    l = l[end-l.start+1:end]\n\
    \    l = l[end-l.start+1:end]\n    l = l[end-l.start+1:end]\n    l = l[end-l.start+1:end]\n\
    \    l = l[end-l.start+1:end]\n    l = l[end-l.start+1:end]\n    l = l[end-l.start+1:end]\n\
    \    l = l[end-l.start+1:end]\n    l = l[end-l.start+1:end]\n    l = l[end-l.start+1:end]\n\
    \    l = l[end-l.start+1:end]\n    l = l[end-l.start+1:end]\n    l = l[end-l.start+1:end]\n\
    \    l = l[end-l.start+1:end]\n    l = l[end-l.start+1:end]\n    l = l[end-l.start+1:end]\n\
    \    l = l[end-l.start+1:end]\n    l = l[end-l.start+1:end]\n    l = l[end-l.start+1:end]\n\
    \    l = l[end-l.start+1:end]\n    l = l[end-l.start+1:end]\n    l = l[end-l.start+1:end]\n\
    \    l = l[end-l.start+1:end]\n    l = l[end-l.start+1:end]\n    l = l[end-l.start+1:end]\n\
    \    l = l[end-l.start+1:end]\n    l = l[end-l.start+1:end]\n    l = l[end-l.start+1:end]\n\
    \    l = l[end-l.start+1:end]\n    l = l[end-l.start+1:end]\n    l = l[end-l.start+1:end]\n\
    \    l = l[end-l.start+1:end]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppy8_yzxu.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppy8_yzxu.jl:1\n\
    in expression starting at /tmp/tmppy8_yzxu.jl:1\n"
  stdout: ''
  timestamp: 1659749010
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n   \
    \ l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5k5uj3k1.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5k5uj3k1.jl:1\n\
    in expression starting at /tmp/tmp5k5uj3k1.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: -1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    diffs = diff(l)\n    diffs[1:end-1] .< diffs[2:end] .> diffs[2:end-1]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpo9ibadjm.jl:13\n  Test threw
    exception\n  Expression: candidate([1, 2, 4, 10]) == true\n  MethodError: Cannot
    `convert` an object of type BitVector to an object of type Bool\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n    convert(::Type{T},
    !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n    convert(::Type{T},
    !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n    ...\n  Stacktrace:\n   [1]
    monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpo9ibadjm.jl:6\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpo9ibadjm.jl:13 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpo9ibadjm.jl:12\ntest set: Error During Test at
    /tmp/tmpo9ibadjm.jl:14\n  Test threw exception\n  Expression: candidate([1, 2,
    4, 20]) == true\n  MethodError: Cannot `convert` an object of type BitVector to
    an object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)
    where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n    convert(::Type{T},
    !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n    convert(::Type{T},
    !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n    ...\n  Stacktrace:\n   [1]
    monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpo9ibadjm.jl:6\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpo9ibadjm.jl:14 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl'
  timestamp: 1659749013
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n\
    \    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l = l[1::-1]\n    l\
    \ = l[1::-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: expected \"]\" or separator in arguments to \"\
    [ ]\"; got \"1::-1\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsn_kkihu.jl:5\n\
    in expression starting at /tmp/tmpsn_kkihu.jl:5\n"
  stdout: ''
  timestamp: 1659749010
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 0 \n        return true\n    end\n    \n    l = sort(l)\n    \n    if l[1]\
    \ < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n        return\
    \ false\n    end\n    \n    if l[1] > l[2] \n        return true\n    end\n  \
    \  \n    return false\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph7ug0r70.jl:24\nin expression starting at\
    \ /tmp/tmph7ug0r70.jl:24\n"
  stdout: ''
  timestamp: 1659749010
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l =\
    \ l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n   \
    \ l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwm6wqijk.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwm6wqijk.jl:1\n\
    in expression starting at /tmp/tmpwm6wqijk.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n   \
    \ l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5k5uj3k1.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5k5uj3k1.jl:1\n\
    in expression starting at /tmp/tmp5k5uj3k1.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd4j35lx9.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd4j35lx9.jl:1\n\
    in expression starting at /tmp/tmpd4j35lx9.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ < 2 \n        return false \n    \n    switch l[1] \n        case l[2] \n  \
    \          return true \n        case l[1] \n            return false \n     \
    \   case l[2] \n            return false \n        case l[1] \n            return\
    \ false \n        case l[2] \n            return false \n        case l[1] \n\
    \            return false \n        case l[2] \n            return false \n  \
    \      case l[1] \n            return false \n        case l[2] \n           \
    \ return false \n        case l[1] \n            return false \n        case l[2]\
    \ \n            return false \n        case l[1] \n            return false \n\
    \        case l[2] \n            return false \n        case l[1] \n         \
    \   return false \n        case l[2] \n            return false \n        case\
    \ l[1] \n            return false \n        case l[2] \n            return false\
    \ \n        case l[1] \n            return false \n        case l[2] \n      \
    \      return false \n        case l[1] \n            return false \n        case\
    \ l[2] \n            return false \n        case l[1] \n            return false\
    \ \n        case l[2] \n            return false \n        case l[1] \n      \
    \      return false \n        case l[2] \n            return false \n        case\
    \ l[1] \n            return false \n        case l[2] \n            return false\
    \ \n        case l[1] \n            return false \n        case l[2] \n      \
    \      return false \n        case l[1] \n            return false \n        case\
    \ l[2] \n            return false \n        case l[1] \n            return false\
    \ \n        case l[2] \n            return false \n        case l[1] \n      \
    \      return false \n        case l[2] \n            return false \n        case\
    \ l[1] \n            return false \n        case l[2] \n            return false\
    \ \n        case l[1] \n            return false \n        case l[2] \n      \
    \      return false \n        case l[1] \n            return false \n        case\
    \ l[2] \n            return false \n        case l[1] \n            return false\
    \ \n        case l[2] \n            return false \n        case l[1] \n      \
    \      return false \n        case l[2] \n            return false \n        case\
    \ l[1] \n            return false \n        case l[2] \n            return false\
    \ \n        case l[1] \n            return false \n        case l[2] \n      \
    \      return false \n        case l[1] \n            return false \n        case\
    \ l[2] \n            return false \n        case l[1] \n            return false\
    \ \n        case l[2] \n            return false \n        case l[1] \n      \
    \      return false \n        case l[2] \n            return false \n        case\
    \ l[1] \n            return false \n        case l[2] \n            return false\
    \ \n        case l[1] \n            return false \n        case l[2] \n      \
    \      return false \n        case l[1] \n            return false \n        case\
    \ l[2] \n            return false \n        case l[1] \n            return false\
    \ \n        case l[2] \n            return false \n        case l[1] \n      \
    \      return false \n        case l[2] \n            return false \n        case\
    \ l[1] \n            return false \n        case l[2] \n            return false\
    \ \n        case l[1] \n            return false \n        case l[2] \n      \
    \      return false \n        case l[1] \n            return false \n        case\
    \ l[2] \n            return false \nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"l\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpc0w0pc4q.jl:7\nin expression starting at /tmp/tmpc0w0pc4q.jl:7\n"
  stdout: ''
  timestamp: 1659749010
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n\
    \    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l\
    \ = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n\
    \    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l\
    \ = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n\
    \    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l\
    \ = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n\
    \    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l\
    \ = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n\
    \    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l\
    \ = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n\
    \    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l\
    \ = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n\
    \    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l\
    \ = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsx8pssjo.jl:1\nin expression starting at /tmp/tmpsx8pssjo.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpdr1n5nsb.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdr1n5nsb.jl:1\n\
    in expression starting at /tmp/tmpdr1n5nsb.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n   \
    \ l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5k5uj3k1.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5k5uj3k1.jl:1\n\
    in expression starting at /tmp/tmp5k5uj3k1.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    i = 2\n    while i < length(l)\n        if l[i-1] < l[i]\n    \
    \        return false\n        end\n        i += 1\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp25dp84yt.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmp25dp84yt.jl:19\n  Expression: candidate([1,\
    \ 2, 4, 10]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp25dp84yt.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp25dp84yt.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp25dp84yt.jl:20\n  Expression: candidate([1, 2, 4, 20]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp25dp84yt.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp25dp84yt.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp25dp84yt.jl:22\n  Expression: candidate([4, 1, 0, -10]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp25dp84yt.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp25dp84yt.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp25dp84yt.jl:23\n  Expression: candidate([4, 1, 1, 0]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp25dp84yt.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp25dp84yt.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp25dp84yt.jl:25\n  Expression: candidate([1, 2, 3, 4, 5, 60])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share"
  timestamp: 1659749011
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpdr1n5nsb.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdr1n5nsb.jl:1\n\
    in expression starting at /tmp/tmpdr1n5nsb.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpdr1n5nsb.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdr1n5nsb.jl:1\n\
    in expression starting at /tmp/tmpdr1n5nsb.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n   \
    \ l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5k5uj3k1.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5k5uj3k1.jl:1\n\
    in expression starting at /tmp/tmp5k5uj3k1.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n   \
    \ l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5k5uj3k1.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5k5uj3k1.jl:1\n\
    in expression starting at /tmp/tmp5k5uj3k1.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = l[1..end-1]\n    return l[1] < l[2]\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp659zhx5o.jl:9\nin expression starting at /tmp/tmp659zhx5o.jl:9\n"
  stdout: ''
  timestamp: 1659749010
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ < 2 \n        return false \n    else \n        switch l[1] \n            case\
    \ l[2] \n                return true \n            case l[1] \n              \
    \  return false \n            case l[2] \n                return false \n    \
    \        case l[1] \n                return false \n            case l[2] \n \
    \               return false \n            case l[1] \n                return\
    \ false \n            case l[2] \n                return false \n            case\
    \ l[1] \n                return false \n            case l[2] \n             \
    \   return false \n            case l[1] \n                return false \n   \
    \         case l[2] \n                return false \n            case l[1] \n\
    \                return false \n            case l[2] \n                return\
    \ false \n            case l[1] \n                return false \n            case\
    \ l[2] \n                return false \n            case l[1] \n             \
    \   return false \n            case l[2] \n                return false \n   \
    \         case l[1] \n                return false \n            case l[2] \n\
    \                return false \n            case l[1] \n                return\
    \ false \n            case l[2] \n                return false \n            case\
    \ l[1] \n                return false \n            case l[2] \n             \
    \   return false \n            case l[1] \n                return false \n   \
    \         case l[2] \n                return false \n            case l[1] \n\
    \                return false \n            case l[2] \n                return\
    \ false \n            case l[1] \n                return false \n            case\
    \ l[2] \n                return false \n            case l[1] \n             \
    \   return false \n            case l[2] \n                return false \n   \
    \         case l[1] \n                return false \n            case l[2] \n\
    \                return false \n            case l[1] \n                return\
    \ false \n            case l[2] \n                return false \n            case\
    \ l[1] \n                return false \n            case l[2] \n             \
    \   return false \n            case l[1] \n                return false \n   \
    \         case l[2] \n                return false \n            case l[1] \n\
    \                return false \n            case l[2] \n                return\
    \ false \n            case l[1] \n                return false \n            case\
    \ l[2] \n                return false \n            case l[1] \n             \
    \   return false \n            case l[2] \n                return false \n   \
    \         case l[1] \n                return false \n            case l[2] \n\
    \                return false \n            case l[1] \n                return\
    \ false \n            case l[2] \n                return false \n            case\
    \ l[1] \n                return false \n            case l[2] \n             \
    \   return false \n            case l[1] \n                return false \n   \
    \         case l[2] \n                return false \n            case l[1] \n\
    \                return false \n            case l[2] \n                return\
    \ false \n            case l[1] \n                return false \n            case\
    \ l[2] \n                return false \n            case l[1] \n             \
    \   return false \n            case l[2] \n                return false \n   \
    \         case l[1] \n                return false \n            case l[2] \n\
    \                return false \n            case l[1] \n                return\
    \ false \n            case l[2] \n                return false \n            case\
    \ l[1] \n                return false \n            case l[2] \n             \
    \   return false \n            case l[1] \n                return false \n   \
    \         case l[2] \n                return false \n            case l[1] \n\
    \                return false \n            case l[2] \n                return\
    \ false \n            case l[1] \n                return false \n            case\
    \ l[2] \n                return \nusing Test\n\n@testset begin\n\ncandidate =\
    \ monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"if\" at /tmp/tmpf1qbm85l.jl:4 expected \"end\"\
    , got \"l\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf1qbm85l.jl:7\nin\
    \ expression starting at /tmp/tmpf1qbm85l.jl:7\n"
  stdout: ''
  timestamp: 1659749011
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n   \
    \ l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5k5uj3k1.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5k5uj3k1.jl:1\n\
    in expression starting at /tmp/tmp5k5uj3k1.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    diffs = diff(l)\n    diffs[1,1] == 0 && return true\n    diffs[2,1]\
    \ == 0 && return false\n    diffs[1,2] > 0 && return true\n    diffs[2,2] > 0\
    \ && return false\n    diffs[1,1] > 0 && return false\n    diffs[2,1] > 0 && return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpffsqrxf1.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpffsqrxf1.jl:18\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 10]) == true\n  BoundsError: attempt to access\
    \ 3-element Vector{Int64} at index [1, 2]\n  Stacktrace:\n   [1] getindex\n  \
    \   @ ./array.jl:862 [inlined]\n   [2] monotonic(l::Vector{Int64})\n     @ Main\
    \ /tmp/tmpffsqrxf1.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpffsqrxf1.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpffsqrxf1.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpffsqrxf1.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 20]) == true\n  BoundsError: attempt to access 3-element\
    \ Vector{Int64} at index [1, 2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:862\
    \ [inlined]\n   [2] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpffsqrxf1.jl:8\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpffsqrxf1.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpffsqrxf1.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpffsqrxf1.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([1, 20, 4, 10]) == false\n  BoundsError: attempt to access 3-element\
    \ Vector{Int64} at index [1, 2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:862\
    \ [inlined]\n   [2] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpffsqrxf1.jl:8\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpffsqrxf1.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpffsqrxf1.jl:17\ntest set:\
    \ Error During Test at /t"
  timestamp: 1659749014
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd4j35lx9.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd4j35lx9.jl:1\n\
    in expression starting at /tmp/tmpd4j35lx9.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n   \
    \ l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9rxcdf9p.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9rxcdf9p.jl:1\n\
    in expression starting at /tmp/tmp9rxcdf9p.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l =\
    \ l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n   \
    \ l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwm6wqijk.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwm6wqijk.jl:1\n\
    in expression starting at /tmp/tmpwm6wqijk.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    return\
    \ l == l\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmptx00651y.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmptx00651y.jl:17\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptx00651y.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptx00651y.jl:14\ntest set: Test\
    \ Failed at /tmp/tmptx00651y.jl:20\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptx00651y.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptx00651y.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1659749011
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    \n    if l[1] < l[2]\n        return true\n    else\n        return\
    \ false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmbw5lb6g.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpmbw5lb6g.jl:19\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmbw5lb6g.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmbw5lb6g.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpmbw5lb6g.jl:22\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmbw5lb6g.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmbw5lb6g.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpmbw5lb6g.jl:24\n  Expression: candidate([9, 9, 9, 9]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmbw5lb6g.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmbw5lb6g.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  timestamp: 1659749012
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    i = findfirst(x -> x > l[1], l[2:end])\n    j = findfirst(x ->\
    \ x < l[1], l[2:end])\n    return i == j\nend\nusing Test\n\n@testset begin\n\n\
    candidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2b0ld0cl.jl:11

    '
  stdout: "test set: Test Failed at /tmp/tmp2b0ld0cl.jl:14\n  Expression: candidate([1,\
    \ 2, 4, 10]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2b0ld0cl.jl:14 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2b0ld0cl.jl:13\ntest set: Test\
    \ Failed at /tmp/tmp2b0ld0cl.jl:15\n  Expression: candidate([1, 2, 4, 20]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2b0ld0cl.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2b0ld0cl.jl:13\ntest set: Test\
    \ Failed at /tmp/tmp2b0ld0cl.jl:17\n  Expression: candidate([4, 1, 0, -10]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2b0ld0cl.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2b0ld0cl.jl:13\ntest set: Test\
    \ Failed at /tmp/tmp2b0ld0cl.jl:18\n  Expression: candidate([4, 1, 1, 0]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2b0ld0cl.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2b0ld0cl.jl:13\ntest set: Test\
    \ Failed at /tmp/tmp2b0ld0cl.jl:20\n  Expression: candidate([1, 2, 3, 4, 5, 60])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share"
  timestamp: 1659749012
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ < 2 \n        return false \n    \n    i = l[1]\n    j = l[2]\n    \n    if\
    \ i == j \n        return false \n    \n    if i > j \n        return true \n\
    \    \n    return false \nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprvh1d5oo.jl:18\nin expression starting at\
    \ /tmp/tmprvh1d5oo.jl:18\n"
  stdout: ''
  timestamp: 1659749011
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n   \
    \ l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9rxcdf9p.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9rxcdf9p.jl:1\n\
    in expression starting at /tmp/tmp9rxcdf9p.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpdr1n5nsb.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdr1n5nsb.jl:1\n\
    in expression starting at /tmp/tmpdr1n5nsb.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    \n    if l[1] < l[2]\n        return true\n    else\n        return\
    \ false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmbw5lb6g.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpmbw5lb6g.jl:19\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmbw5lb6g.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmbw5lb6g.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpmbw5lb6g.jl:22\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmbw5lb6g.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmbw5lb6g.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpmbw5lb6g.jl:24\n  Expression: candidate([9, 9, 9, 9]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmbw5lb6g.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmbw5lb6g.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  timestamp: 1659749012
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l =\
    \ l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n   \
    \ l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwm6wqijk.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwm6wqijk.jl:1\n\
    in expression starting at /tmp/tmpwm6wqijk.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l =\
    \ l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n   \
    \ l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwm6wqijk.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwm6wqijk.jl:1\n\
    in expression starting at /tmp/tmpwm6wqijk.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    return\
    \ l[1] < l[2]\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t\
    @test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\
    \t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10])\
    \ == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t\
    @test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpheguzesk.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpheguzesk.jl:15\n  Expression: candidate([1,\
    \ 2, 4, 10]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpheguzesk.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpheguzesk.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpheguzesk.jl:16\n  Expression: candidate([1, 2, 4, 20]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpheguzesk.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpheguzesk.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpheguzesk.jl:18\n  Expression: candidate([4, 1, 0, -10]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpheguzesk.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpheguzesk.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpheguzesk.jl:19\n  Expression: candidate([4, 1, 1, 0]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpheguzesk.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpheguzesk.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpheguzesk.jl:21\n  Expression: candidate([1, 2, 3, 4, 5, 60])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share"
  timestamp: 1659749012
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    i = l[1]\n    j = l[end]\n    \n    if i == j\n        return true\n\
    \    elseif i > j\n        return false\n    else\n        return true\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3cfa9avy.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmp3cfa9avy.jl:23\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3cfa9avy.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3cfa9avy.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp3cfa9avy.jl:26\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3cfa9avy.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3cfa9avy.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1659749012
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    \n    if l[1] < l[2]\n        return true\n    else\n        return\
    \ false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmbw5lb6g.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpmbw5lb6g.jl:19\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmbw5lb6g.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmbw5lb6g.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpmbw5lb6g.jl:22\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmbw5lb6g.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmbw5lb6g.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpmbw5lb6g.jl:24\n  Expression: candidate([9, 9, 9, 9]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmbw5lb6g.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmbw5lb6g.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  timestamp: 1659749012
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    i = length(l) - 1\n    while i > 0 && l[i] > l[i-1]\n        i\
    \ -= 1\n    end\n    return i == 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpnvmpm27c.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpnvmpm27c.jl:16\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 10]) == true\n  BoundsError: attempt to access\
    \ 4-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpnvmpm27c.jl:6\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpnvmpm27c.jl:16 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpnvmpm27c.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpnvmpm27c.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 20]) == true\n  BoundsError: attempt to access 4-element\
    \ Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpnvmpm27c.jl:6\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpnvmpm27c.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpnvmpm27c.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpnvmpm27c.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1, 20, 4, 10]) == false\n  BoundsError: attempt to access 4-element\
    \ Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpnvmpm27c.jl:6\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpnvmpm27c.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpnvmpm27c.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpnvm"
  timestamp: 1659749014
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    return\
    \ l == l\nend\n\"\"\"Return True is list elements are monotonically increasing\
    \ or decreasing.\n                \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpcgugo7mf.jl:10\nin expression starting at /tmp/tmpcgugo7mf.jl:10\n"
  stdout: ''
  timestamp: 1659749011
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    i = findfirst(l .> l[end])\n    j = findfirst(l .< l[end])\n  \
    \  \n    if i == j\n        true\n    else\n        i == j || l[i] > l[j]\n  \
    \  end\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpl4kh7o06.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmpl4kh7o06.jl:19\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 10]) == true\n  ArgumentError: invalid index:\
    \ nothing of type Nothing\n  Stacktrace:\n    [1] to_index(i::Nothing)\n     \
    \ @ Base ./indices.jl:300\n    [2] to_index(A::Vector{Int64}, i::Nothing)\n  \
    \    @ Base ./indices.jl:277\n    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n\
    \    [4] to_indices\n      @ ./indices.jl:325 [inlined]\n    [5] getindex\n  \
    \    @ ./abstractarray.jl:1218 [inlined]\n    [6] monotonic(l::Vector{Int64})\n\
    \      @ Main /tmp/tmpl4kh7o06.jl:11\n    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpl4kh7o06.jl:19 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpl4kh7o06.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpl4kh7o06.jl:20\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 20]) == true\n  ArgumentError: invalid index: nothing of\
    \ type Nothing\n  Stacktrace:\n    [1] to_index(i::Nothing)\n      @ Base ./indices.jl:300\n\
    \    [2] to_index(A::Vector{Int64}, i::Nothing)\n      @ Base ./indices.jl:277\n\
    \    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n\
    \      @ ./indices.jl:325 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1218\
    \ [inlined]\n    [6] monotonic(l::Vector{Int64})\n      @ Main /tmp/tmpl4kh7o06.jl:11\n\
    \    [7] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpl4kh7o06.jl:20 [inlined]\n\
    \    [9] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpl4kh7o06.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpl4kh7o06.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([1, 20, 4, 10]) == false\n  ArgumentError: invalid index: nothing\
    \ of type Nothing\n  Stacktrace:\n    [1] to_i"
  timestamp: 1659749013
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n   \
    \ l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9rxcdf9p.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9rxcdf9p.jl:1\n\
    in expression starting at /tmp/tmp9rxcdf9p.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    i = length(l) - 1\n    while i > 0 && l[i] > l[i-1]\n        i\
    \ = i - 1\n    end\n    i == 0\nend\n\"\"\"Return True is list elements are monotonically\
    \ increasing or decreasing.\n                \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmp2s7vuihk.jl:11\nin expression starting at /tmp/tmp2s7vuihk.jl:11\n"
  stdout: ''
  timestamp: 1659749012
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> \nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1my2rv3s.jl:1\nin expression starting at /tmp/tmp1my2rv3s.jl:1\n"
  stdout: ''
  timestamp: 1659749009
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    i = l[1]\n    j = l[end]\n    \n    if i == j\n        return true\n\
    \    else\n        return (i>j) != (i==j)\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpf6x9l098.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpf6x9l098.jl:19\n  Expression: candidate([1,\
    \ 2, 4, 10]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf6x9l098.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf6x9l098.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpf6x9l098.jl:20\n  Expression: candidate([1, 2, 4, 20]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf6x9l098.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf6x9l098.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpf6x9l098.jl:22\n  Expression: candidate([4, 1, 0, -10]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf6x9l098.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf6x9l098.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpf6x9l098.jl:23\n  Expression: candidate([4, 1, 1, 0]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf6x9l098.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf6x9l098.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpf6x9l098.jl:25\n  Expression: candidate([1, 2, 3, 4, 5, 60])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share"
  timestamp: 1659749012
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd4j35lx9.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd4j35lx9.jl:1\n\
    in expression starting at /tmp/tmpd4j35lx9.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n   \
    \ l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9rxcdf9p.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9rxcdf9p.jl:1\n\
    in expression starting at /tmp/tmp9rxcdf9p.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 0 \n        return true\n    \n    if l[1] < l[0] \n        return false\n\
    \    \n    i = 2\n    while i < length(l) \n        if l[i] < l[i-1] \n      \
    \      return false\n        i += 1\n    end\n    \n    return true\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd8t_sk9p.jl:19\nin expression starting at\
    \ /tmp/tmpd8t_sk9p.jl:19\n"
  stdout: ''
  timestamp: 1659749011
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[findall(l[1:end-1] .> l[2:end])]\n  \
    \  l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1] .== l[2:end])]\n\
    \    l = l[findall(l[1:end-1] .!= l[2:end])]\n    l = l[findall(l[1:end-1] .>\
    \ l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .== l[2:end])]\n    l = l[findall(l[1:end-1] .!= l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .> l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .== l[2:end])]\n    l = l[findall(l[1:end-1] .!= l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .> l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .== l[2:end])]\n    l = l[findall(l[1:end-1] .!= l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .> l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .== l[2:end])]\n    l = l[findall(l[1:end-1] .!= l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .> l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .== l[2:end])]\n    l = l[findall(l[1:end-1] .!= l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .> l[2:end])]\n    l = l[findall(l[1:end-1] .< l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .== l[2:end])]\n    l = l[findall(l[1:end-1] .!= l[2:end])]\n    l = l[findall(l[1:end-1]\
    \ .> l[2:end])]\n    l = l[findall(l[1:\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp31c35bse.jl:36\nin expression starting at\
    \ /tmp/tmp31c35bse.jl:36\n"
  stdout: ''
  timestamp: 1659749012
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l =\
    \ l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n   \
    \ l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwm6wqijk.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwm6wqijk.jl:1\n\
    in expression starting at /tmp/tmpwm6wqijk.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l\
    \ .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n\
    \    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l\
    \ .> l[1]]\n    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n\
    \    l = l[l .< l[end]]\n    l = l[1:end-1]\n    l = l[l .> \nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1my2rv3s.jl:1\nin expression starting at /tmp/tmp1my2rv3s.jl:1\n"
  stdout: ''
  timestamp: 1659749009
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    i = 2\n    while i < length(l)\n        if l[i] > l[i-1]\n    \
    \        return false\n        end\n        i += 1\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpfqqkc0gr.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpfqqkc0gr.jl:19\n  Expression: candidate([1,\
    \ 2, 4, 10]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfqqkc0gr.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfqqkc0gr.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpfqqkc0gr.jl:20\n  Expression: candidate([1, 2, 4, 20]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfqqkc0gr.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfqqkc0gr.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpfqqkc0gr.jl:22\n  Expression: candidate([4, 1, 0, -10]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfqqkc0gr.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfqqkc0gr.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpfqqkc0gr.jl:23\n  Expression: candidate([4, 1, 1, 0]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfqqkc0gr.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfqqkc0gr.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpfqqkc0gr.jl:25\n  Expression: candidate([1, 2, 3, 4, 5, 60])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share"
  timestamp: 1659749013
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n   \
    \ l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5k5uj3k1.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5k5uj3k1.jl:1\n\
    in expression starting at /tmp/tmp5k5uj3k1.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 0 \n        return true\n    end\n    \n    if l[1] < l[2] \n        return\
    \ true\n    end\n    \n    if l[1] > l[2] \n        return false\n    end\n  \
    \  \n    if l[1] < l[3] \n        return true\n    end\n    \n    if l[1] > l[3]\
    \ \n        return false\n    end\n    \n    if l[2] < l[3] \n        return true\n\
    \    end\n    \n    if l[2] > l[3] \n        return false\n    end\n    \n   \
    \ if l[3] < l[4] \n        return true\n    end\n    \n    if l[3] > l[4] \n \
    \       return false\n    end\n    \n    if l[4] < l[5] \n        return true\n\
    \    end\n    \n    if l[4] > l[5] \n        return false\n    end\n    \n   \
    \ if l[5] < l[6] \n        return true\n    end\n    \n    if l[5] > l[6] \n \
    \       return false\n    end\n    \n    if l[6] < l[7] \n        return true\n\
    \    end\n    \n    if l[6] > l[7] \n        return false\n    end\n    \n   \
    \ if l[7] < l[8] \n        return true\n    end\n    \n    if l[7] > l[8] \n \
    \       return false\n    end\n    \n    if l[8] < l[9] \n        return true\n\
    \    end\n    \n    if l[8] > l[9] \n        return false\n    end\n    \n   \
    \ if l[9] < l[10] \n        return true\n    end\n    \n    if l[9] > l[10] \n\
    \        return false\n    end\n    \n    if l[10] < l[11] \n        return true\n\
    \    end\n    \n    if l[10] > l[11] \n        return false\n    end\n    \n \
    \   if l[11] < l[12] \n        return true\n    end\n    \n    if l[11] > l[12]\
    \ \n        return false\n    end\n    \n    if l[12] < l[13] \n        return\
    \ true\n    end\n    \n    if l[12] > l[13] \n        return false\n    end\n\
    \    \n    if l[13] < l[14] \n        return true\n    end\n    \n    if l[13]\
    \ > l[14] \n        return false\n    end\n    \n    if l[14] < l[15] \n     \
    \   return true\n    end\n    \n    if l[14] > l[15] \n        return false\n\
    \    end\n    \n    if l[15] < l[16] \n        return true\n    end\n    \n  \
    \  if l[15] > l[16] \n        return false\n    end\n    \n    if l[16] < l[\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb7x19jha.jl:1\nin expression starting at /tmp/tmpb7x19jha.jl:1\n"
  stdout: ''
  timestamp: 1659749012
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    i = 2\n    while i < length(l)\n        if l[i-1] > l[i]\n    \
    \        return false\n        end\n        i += 1\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpoyy2ikcf.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpoyy2ikcf.jl:21\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoyy2ikcf.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoyy2ikcf.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpoyy2ikcf.jl:24\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoyy2ikcf.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoyy2ikcf.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1659749008
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1::-1]\n    l = l[1::-1]\n    return all(l[1:end-1] == l[2:end])\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"Return True is list elements are\
    \ monotonically increasing or decreasing.\n                \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: expected \"]\" or separator in arguments to \"\
    [ ]\"; got \"1::-1\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7zteruyk.jl:5\n\
    in expression starting at /tmp/tmp7zteruyk.jl:5\n"
  stdout: ''
  timestamp: 1659749012
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1::-1]\n    l = l[1::-1]\n    return all(l[1:end-1] == l[2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: expected \"]\" or separator in arguments to \"\
    [ ]\"; got \"1::-1\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpk8rbho0g.jl:5\n\
    in expression starting at /tmp/tmpk8rbho0g.jl:5\n"
  stdout: ''
  timestamp: 1659749012
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l =\
    \ l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n   \
    \ l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwm6wqijk.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwm6wqijk.jl:1\n\
    in expression starting at /tmp/tmpwm6wqijk.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n   \
    \ l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5k5uj3k1.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5k5uj3k1.jl:1\n\
    in expression starting at /tmp/tmp5k5uj3k1.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    return\
    \ l == l\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmptx00651y.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmptx00651y.jl:17\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptx00651y.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptx00651y.jl:14\ntest set: Test\
    \ Failed at /tmp/tmptx00651y.jl:20\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptx00651y.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptx00651y.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1659749011
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n   \
    \ l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5k5uj3k1.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5k5uj3k1.jl:1\n\
    in expression starting at /tmp/tmp5k5uj3k1.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ < 2 \n        return false \n    \n    l = sort(l)\n    if l[1] < l[2] \n  \
    \      return false \n    \n    l = sort(l)\n    if l[1] > l[2] \n        return\
    \ false \n    \n    l = sort(l)\n    if l[1] < l[2] \n        return false \n\
    \    \n    l = sort(l)\n    if l[1] > l[2] \n        return false \n    \n   \
    \ l = sort(l)\n    if l[1] < l[2] \n        return false \n    \n    l = sort(l)\n\
    \    if l[1] > l[2] \n        return false \n    \n    l = sort(l)\n    if l[1]\
    \ < l[2] \n        return false \n    \n    l = sort(l)\n    if l[1] > l[2] \n\
    \        return false \n    \n    l = sort(l)\n    if l[1] < l[2] \n        return\
    \ false \n    \n    l = sort(l)\n    if l[1] > l[2] \n        return false \n\
    \    \n    l = sort(l)\n    if l[1] < l[2] \n        return false \n    \n   \
    \ l = sort(l)\n    if l[1] > l[2] \n        return false \n    \n    l = sort(l)\n\
    \    if l[1] < l[2] \n        return false \n    \n    l = sort(l)\n    if l[1]\
    \ > l[2] \n        return false \n    \n    l = sort(l)\n    if l[1] < l[2] \n\
    \        return false \n    \n    l = sort(l)\n    if l[1] > l[2] \n        return\
    \ false \n    \n    l = sort(l)\n    if l[1] < l[2] \n        return false \n\
    \    \n    l = sort(l)\n    if l[1] > l[2] \n        return false \n    \n   \
    \ l = sort(l)\n    if l[1] < l[2] \n        return false \n    \n    l = sort(l)\n\
    \    if l[1] > l[2] \n        return false \n    \n    l = sort(l)\n    if l[1]\
    \ < l[2] \n        return false \n    \n    l = sort(l)\n    if l[1] > l[2] \n\
    \        return false \n    \n    l = sort(l)\n    if l[1] < l[2] \n        return\
    \ false \n    \n    l = sort(l)\n    if l[1] > l[2] \n        return false \n\
    \    \n    l = sort(l)\n    if l[1] < l[2] \n        return false \n    \n   \
    \ l = sort(l)\n    if l[1] > l[2] \n        return false \n    \n    l = sort(l)\n\
    \    if l[1] < l[2] \n        return false \n    \n    l = sort(l)\n    if l[1]\
    \ > l[2] \n        return false \n    \n    l = sort(l)\n    if l[1] < l[2] \n\
    \        return false \n    \n    l = sort(l)\n    if l[1]\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_b1ekjb5.jl:1\nin expression starting at /tmp/tmp_b1ekjb5.jl:1\n"
  stdout: ''
  timestamp: 1659749013
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l =\
    \ l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n   \
    \ l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwm6wqijk.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwm6wqijk.jl:1\n\
    in expression starting at /tmp/tmpwm6wqijk.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end]\n    l = sort(l)\n    l = l[1..end]\n    l = sort(l)\n\
    \    l = l[1..end]\n    l = sort(l)\n    l = l[1..end]\n    l = sort(l)\n    l\
    \ = l[1..end]\n    l = sort(l)\n    l = l[1..end]\n    l = sort(l)\n    l = l[1..end]\n\
    \    l = sort(l)\n    l = l[1..end]\n    l = sort(l)\n    l = l[1..end]\n    l\
    \ = sort(l)\n    l = l[1..end]\n    l = sort(l)\n    l = l[1..end]\n    l = sort(l)\n\
    \    l = l[1..end]\n    l = sort(l)\n    l = l[1..end]\n    l = sort(l)\n    l\
    \ = l[1..end]\n    l = sort(l)\n    l = l[1..end]\n    l = sort(l)\n    l = l[1..end]\n\
    \    l = sort(l)\n    l = l[1..end]\n    l = sort(l)\n    l = l[1..end]\n    l\
    \ = sort(l)\n    l = l[1..end]\n    l = sort(l)\n    l = l[1..end]\n    l = sort(l)\n\
    \    l = l[1..end]\n    l = sort(l)\n    l = l[1..end]\n    l = sort(l)\n    l\
    \ = l[1..end]\n    l = sort(l)\n    l = l[1..end]\n    l = sort(l)\n    l = l[1..end]\n\
    \    l = sort(l)\n    l = l[1..end]\n    l = sort(l)\n    l = l[1..end]\n    l\
    \ = sort(l)\n    l = l[1..end]\n    l = sort(l)\n    l = l[1..end]\n    l = sort(l)\n\
    \    l = l[1..end]\n    l = sort(l)\n    l = l[1..end]\n    l = sort(l)\n    l\
    \ = l[1..end]\n    l = sort(l)\n    l = l[1..end]\n    l = sort(l)\n    l = l[1..end]\n\
    \    l = sort(l)\n    l = l[1..end]\n    l = sort(l)\n    l = l[1..end]\n    l\
    \ = sort(l)\n    l = l[1..end]\n    l = sort(l)\n    l = l[1..end]\n    l = sort(l)\n\
    \    l = l[1..end]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_9pxwt9q.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_9pxwt9q.jl:1\n\
    in expression starting at /tmp/tmp_9pxwt9q.jl:1\n"
  stdout: ''
  timestamp: 1659749013
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 0 \n        return true\n    end\n    \n    l = sort(l)\n    \n    if l[1]\
    \ < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n        return\
    \ false\n    end\n    \n    if l[1] > l[2] \n        return true\n    end\n  \
    \  \n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8ylf5dtt.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmp8ylf5dtt.jl:31\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8ylf5dtt.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8ylf5dtt.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp8ylf5dtt.jl:34\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8ylf5dtt.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8ylf5dtt.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp8ylf5dtt.jl:36\n  Expression: candidate([9, 9, 9, 9]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8ylf5dtt.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8ylf5dtt.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  timestamp: 1659749014
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    i = 2\n    while i < length(l)\n        if l[i-1] > l[i]\n    \
    \        return false\n        end\n        i += 1\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpoyy2ikcf.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpoyy2ikcf.jl:21\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoyy2ikcf.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoyy2ikcf.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpoyy2ikcf.jl:24\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoyy2ikcf.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoyy2ikcf.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1659749008
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ < 2 \n        return false \n    \n    i = 1 \n    j = 1 \n    \n    while i\
    \ <= length(l) \n        if l[i] > l[j] \n            j += 1\n        else \n\
    \            i += 1\n        end \n    \n    return j == i \nend \nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcm90q67q.jl:1\nin expression starting at /tmp/tmpcm90q67q.jl:1\n"
  stdout: ''
  timestamp: 1659749013
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    return\
    \ l == l\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmptx00651y.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmptx00651y.jl:17\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptx00651y.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptx00651y.jl:14\ntest set: Test\
    \ Failed at /tmp/tmptx00651y.jl:20\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptx00651y.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptx00651y.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1659749011
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    i = 2\n    while i < length(l)\n        if l[i-1] > l[i]\n    \
    \        return false\n        end\n        i += 1\n    end\n    return true\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpobozrx7m.jl:14\nin expression starting at\
    \ /tmp/tmpobozrx7m.jl:14\n"
  stdout: ''
  timestamp: 1659749010
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n\
    \    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l\
    \ = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n\
    \    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l\
    \ = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n\
    \    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l\
    \ = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n\
    \    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l\
    \ = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n\
    \    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l\
    \ = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n\
    \    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l\
    \ = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n\
    \    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l\
    \ = l[end-l+1:end]\n    l = l[end-l+1:end]\n    l = l[end-l+\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsx8pssjo.jl:1\nin expression starting at /tmp/tmpsx8pssjo.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 0 \n        return true\n    end\n    \n    if l[1] < l[2] \n        return\
    \ true\n    end\n    \n    if l[2] < l[1] \n        return false\n    end\n  \
    \  \n    if l[1] > l[2] \n        return false\n    end\n    \n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_h6xbst9.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp_h6xbst9.jl:29\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_h6xbst9.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_h6xbst9.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp_h6xbst9.jl:30\n  Expression: candidate([4, 1, 0, -10]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_h6xbst9.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_h6xbst9.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp_h6xbst9.jl:31\n  Expression: candidate([4, 1, 1, 0]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_h6xbst9.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_h6xbst9.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp_h6xbst9.jl:32\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_h6xbst9.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_h6xbst9.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     4      8\n"
  timestamp: 1659749014
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    i = length(l) - 1\n    while i > 0 \n        if l[i] > l[i-1] \n\
    \            return false\n        i -= 1\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4,\
    \ 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpz51x8fc7.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpz51x8fc7.jl:1\n\
    in expression starting at /tmp/tmpz51x8fc7.jl:1\n"
  stdout: ''
  timestamp: 1659749013
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpdr1n5nsb.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdr1n5nsb.jl:1\n\
    in expression starting at /tmp/tmpdr1n5nsb.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l =\
    \ sort(l)\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd4j35lx9.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd4j35lx9.jl:1\n\
    in expression starting at /tmp/tmpd4j35lx9.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 0 \n        return true\n    end\n    \n    if l[1] < l[2] \n        return\
    \ true\n    end\n    \n    if l[1] > l[2] \n        return false\n    end\n  \
    \  \n    if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2]\
    \ \n        return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\n    end\n    \n    if l[1] < l[2] \n        return true\n\
    \    end\n    \n    if l[1] > l[2] \n        return false\n    end\n    \n   \
    \ if l[1] < l[2] \n        return true\n    end\n    \n    if l[1] > l[2] \n \
    \       return false\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqlq9nabx.jl:1\nin expression starting at /tmp/tmpqlq9nabx.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n   \
    \ l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9rxcdf9p.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9rxcdf9p.jl:1\n\
    in expression starting at /tmp/tmp9rxcdf9p.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ < 2\n        return true\n    end\n    \n    l = sort(l)\n    \n    if l[1]\
    \ < l[2]\n        return true\n    end\n    \n    if l[1] > l[2]\n        return\
    \ false\n    end\n    \n    if l[1] > l[2]\n        return true\n    end\n   \
    \ \n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpw76zv4_l.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpw76zv4_l.jl:31\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw76zv4_l.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw76zv4_l.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpw76zv4_l.jl:34\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw76zv4_l.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw76zv4_l.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpw76zv4_l.jl:36\n  Expression: candidate([9, 9, 9, 9]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw76zv4_l.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw76zv4_l.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  timestamp: 1659749014
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    \n    if l[1] < l[2] \n        true\n    elseif l[1] > l[2] \n\
    \        false\n    else\n        true\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp45rmapxa.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmp45rmapxa.jl:21\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp45rmapxa.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp45rmapxa.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp45rmapxa.jl:24\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp45rmapxa.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp45rmapxa.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1659749014
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n   \
    \ l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5k5uj3k1.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5k5uj3k1.jl:1\n\
    in expression starting at /tmp/tmp5k5uj3k1.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end-1:end]\n    l = l[end-1:end]\n    l = l[end-1:end]\n\
    \    l = l[end-1:end]\n    l = l[end-1:end]\n    l = l[end-1:end]\n    l = l[end-1:end]\n\
    \    l = l[end-1:end]\n    l = l[end-1:end]\n    l = l[end-1:end]\n    l = l[end-1:end]\n\
    \    l = l[end-1:end]\n    l = l[end-1:end]\n    l = l[end-1:end]\n    l = l[end-1:end]\n\
    \    l = l[end-1:end]\n    l = l[end-1:end]\n    l = l[end-1:end]\n    l = l[end-1:end]\n\
    \    l = l[end-1:end]\n    l = l[end-1:end]\n    l = l[end-1:end]\n    l = l[end-1:end]\n\
    \    l = l[end-1:end]\n    l = l[end-1:end]\n    l = l[end-1:end]\n    l = l[end-1:end]\n\
    \    l = l[end-1:end]\n    l = l[end-1:end]\n    l = l[end-1:end]\n    l = l[end-1:end]\n\
    \    l = l[end-1:end]\n    l = l[end-1:end]\n    l = l[end-1:end]\n    l = l[end-1:end]\n\
    \    l = l[end-1:end]\n    l = l[end-1:end]\n    l = l[end-1:end]\n    l = l[end-1:end]\n\
    \    l = l[end-1:end]\n    l = l[end-1:end]\n    l = l[end-1:end]\n    l = l[end-1:end]\n\
    \    l = l[end-1:end]\n    l = l[end-1:end]\n    l = l[end-1:end]\n    l = l[end-1:end]\n\
    \    l = l[end-1:end]\n    l = l[end-1:end]\n    l = l[end-1:end]\n    l = l[end-1:end]\n\
    \    l = l[end-1:end]\n    l = l[end-1:end]\n    l = l[end-1:end]\n    l = l[end-1:end]\n\
    \    l = l[end-1:end]\n    l = l[end-1:end]\n    l = l[end-1:end]\n    l = l[end-1:end]\n\
    \    l = l[end-1:end]\n    l = l[end-1:end]\n    l = l[end-1:end]\n    l = l[end-1:end]\n\
    \    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpywlq2d4i.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpywlq2d4i.jl:1\n\
    in expression starting at /tmp/tmpywlq2d4i.jl:1\n"
  stdout: ''
  timestamp: 1659749013
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    return\
    \ l == l\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmptx00651y.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmptx00651y.jl:17\n  Expression: candidate([1,\
    \ 20, 4, 10]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptx00651y.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptx00651y.jl:14\ntest set: Test\
    \ Failed at /tmp/tmptx00651y.jl:20\n  Expression: candidate([1, 2, 3, 2, 5, 60])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptx00651y.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptx00651y.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1659749011
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    i = findfirst(l .> l[end])\n    j = findfirst(l .< l[end])\n  \
    \  \n    if i == j\n        return true\n    else\n        return false\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpnrg1mm81.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpnrg1mm81.jl:19\n  Expression: candidate([1,\
    \ 2, 4, 10]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrg1mm81.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrg1mm81.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpnrg1mm81.jl:20\n  Expression: candidate([1, 2, 4, 20]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrg1mm81.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrg1mm81.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpnrg1mm81.jl:22\n  Expression: candidate([4, 1, 0, -10]) ==\
    \ true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrg1mm81.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrg1mm81.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpnrg1mm81.jl:23\n  Expression: candidate([4, 1, 1, 0]) == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrg1mm81.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrg1mm81.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpnrg1mm81.jl:25\n  Expression: candidate([1, 2, 3, 4, 5, 60])\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share"
  timestamp: 1659749014
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l =\
    \ l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n   \
    \ l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwm6wqijk.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwm6wqijk.jl:1\n\
    in expression starting at /tmp/tmpwm6wqijk.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n   \
    \ l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n    l = l[end:-1:1]\n\
    \    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5k5uj3k1.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5k5uj3k1.jl:1\n\
    in expression starting at /tmp/tmp5k5uj3k1.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l =\
    \ l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n   \
    \ l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwm6wqijk.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwm6wqijk.jl:1\n\
    in expression starting at /tmp/tmpwm6wqijk.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    l ==\
    \ l[end] \nend\n\"\"\"Return True is list elements are monotonically increasing\
    \ or decreasing.\n                \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmppjb8fr9n.jl:10\nin expression starting at /tmp/tmppjb8fr9n.jl:10\n"
  stdout: ''
  timestamp: 1659749014
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = sort(l)\n    l = l[1..end-1]\n    return\
    \ l[1] < l[2]\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t\
    @test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\
    \t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10])\
    \ == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1, 2,\
    \ 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\t\
    @test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpnb4il1o5.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpnb4il1o5.jl:15\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 10]) == true\n  UndefVarError: .. not defined\n\
    \  Stacktrace:\n   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpnb4il1o5.jl:5\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnb4il1o5.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnb4il1o5.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpnb4il1o5.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 20]) == true\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpnb4il1o5.jl:5\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnb4il1o5.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnb4il1o5.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpnb4il1o5.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([1, 20, 4, 10]) == false\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpnb4il1o5.jl:5\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnb4il1o5.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnb4il1o5.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpnb4il1o5.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([4, 1, 0, -10]) == true\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpnb4il1o5.jl:5\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  timestamp: 1659749015
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n    l = l[1:end-1]\n    l = l[2:end]\n\
    \    l = l[1:end-1]\n    l = l[2:end]\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpdr1n5nsb.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdr1n5nsb.jl:1\n\
    in expression starting at /tmp/tmpdr1n5nsb.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[l .> l[1]]\n    l = l[l .< l[end]]\n\
    \    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n  \
    \  l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l =\
    \ l[l .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l =\
    \ l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l\
    \ .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .<\
    \ l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l\
    \ = l[l .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l\
    \ = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[end]]\n    l = l[l\
    \ .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n    l = l[l .<\
    \ l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l = l[l .> l[end-1]]\n\
    \    l = l[l .< l[end]]\n    l = l[l .> l[end-1]]\n    l = l[l .< l[1]]\n    l\
    \ = l[l .> l[end-1]]\n    l = l[l .< l[end\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd9nabqz7.jl:1\nin expression starting at /tmp/tmpd9nabqz7.jl:1\n"
  stdout: ''
  timestamp: 1659749014
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n   \
    \ l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9rxcdf9p.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9rxcdf9p.jl:1\n\
    in expression starting at /tmp/tmp9rxcdf9p.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l =\
    \ l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n   \
    \ l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwm6wqijk.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwm6wqijk.jl:1\n\
    in expression starting at /tmp/tmpwm6wqijk.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l =\
    \ l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n   \
    \ l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwm6wqijk.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwm6wqijk.jl:1\n\
    in expression starting at /tmp/tmpwm6wqijk.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l =\
    \ l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n   \
    \ l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n    l = l[1:end-1]\n\
    \    l = l[1:end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwm6wqijk.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwm6wqijk.jl:1\n\
    in expression starting at /tmp/tmpwm6wqijk.jl:1\n"
  stdout: ''
  timestamp: 1659749007
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end-l.min():end]\n    l = l[end-l.min():end]\n    l = l[end-l.min():end]\n\
    \    l = l[end-l.min():end]\n    l = l[end-l.min():end]\n    l = l[end-l.min():end]\n\
    \    l = l[end-l.min():end]\n    l = l[end-l.min():end]\n    l = l[end-l.min():end]\n\
    \    l = l[end-l.min():end]\n    l = l[end-l.min():end]\n    l = l[end-l.min():end]\n\
    \    l = l[end-l.min():end]\n    l = l[end-l.min():end]\n    l = l[end-l.min():end]\n\
    \    l = l[end-l.min():end]\n    l = l[end-l.min():end]\n    l = l[end-l.min():end]\n\
    \    l = l[end-l.min():end]\n    l = l[end-l.min():end]\n    l = l[end-l.min():end]\n\
    \    l = l[end-l.min():end]\n    l = l[end-l.min():end]\n    l = l[end-l.min():end]\n\
    \    l = l[end-l.min():end]\n    l = l[end-l.min():end]\n    l = l[end-l.min():end]\n\
    \    l = l[end-l.min():end]\n    l = l[end-l.min():end]\n    l = l[end-l.min():end]\n\
    \    l = l[end-l.min():end]\n    l = l[end-l.min():end]\n    l = l[end-l.min():end]\n\
    \    l = l[end-l.min():end]\n    l = l[end-l.min():end]\n    l = l[end-l.min():end]\n\
    \    l = l[end-l.min():end]\n    l = l[end-l.min():end]\n    l = l[end-l.min():end]\n\
    \    l = l[end-l.min():end]\n    l = l[end-l.min():end]\n    l = l[end-l.min():end]\n\
    \    l = l[end-l.min():end]\n    l = l[end-l.min():end]\n    l = l[end-l.min():end]\n\
    \    l = l[end-l.min():end]\n    \nusing Test\n\n@testset begin\n\ncandidate =\
    \ monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps3meomuy.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps3meomuy.jl:1\n\
    in expression starting at /tmp/tmps3meomuy.jl:1\n"
  stdout: ''
  timestamp: 1659749014
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n    l = l[end:-1:1]\n    l =\
    \ sort(l)\n    l = l[end:-1:1]\n    l = sort(l)\n\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsr7vwnce.jl:3\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsr7vwnce.jl:1\n\
    in expression starting at /tmp/tmpsr7vwnce.jl:1\n"
  stdout: ''
  timestamp: 1659749007

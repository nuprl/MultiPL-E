name: HumanEval_2_truncate_number
language: jl
prompt: "\"\"\" Given a positive floating point number, it can be decomposed into\n\
  \    and integer part (largest integer smaller than given number) and decimals\n\
  \    (leftover part always smaller than 1).\n\n    Return the decimal part of the\
  \ number.\n        \"\"\"\nfunction truncate_number(number::Float64)::Float64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = truncate_number;\n\t@test(candidate(3.5)\
  \ == 0.5)\n\t@test(candidate(1.25) == 0.25)\n\t@test(candidate(123.0) == 0.0)\n\
  end\n"
completions: ["    truncate_number = trunc(number)\nend", "    truncate_number = trunc(number)\n\
    end", "    truncate_number = trunc(number)\nend", "    \n    number = round(number)\n\
    \    \n    if number < 1.0\n        number = 1.0\n    end\n    \n    return number\n\
    end", "    truncate_number = number % 1\n    return truncate_number\nend", " \
    \   number = round(number)\n    \n    if number == 0.0 \n        number = 1.0\n\
    \    end\n    \n    return number\nend", "    number = round(number)\n    number\
    \ = floor(number)\n    number = number - number\n    return number\nend", "  \
    \  truncate_number = round(number)\nend", "    truncate_number = trunc(number)\n\
    end\n</cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n</cell>\n<code\
    \ language=julia-1.0>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.0>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.0>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.0>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.0>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.0>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.0>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.0>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.0>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.0>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.0>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.0>\ntruncate_number(1.5)\n\
    </cell>\n<code language=juli", "    \n    truncate_number = number\n    \n   \
    \ if number < 1.0\n        truncate_number = truncate_number - 1.0\n    end\n\
    \    \n    return truncate_number\nend\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.6)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.8)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.0)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.1)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.2)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.4)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.6)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.7)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.8)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.9)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.0)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.1)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.2)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.4)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.6)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.7)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.8)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.9)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.0)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.1)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.", "    truncate_number = round(number)\nend", "    \n    if\
    \ number < 0.0 \n        error(\"The given number cannot be negative\")\n    end\n\
    \    \n    digits = floor(log10(number))\n    \n    if digits < 0 \n        error(\"\
    The given number cannot be negative\")\n    end\n    \n    digits = digits + 1\n\
    \    \n    number = round(number * 10^digits)\n    \n    return number\nend",
  "    \n    truncate_number = trunc(number)\n    \n    return truncate_number\nend",
  "    truncate_number = number % 1\nend\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.6)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.8)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.2)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.6)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.8)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.0)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.2)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.4)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.6)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.8)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.0)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.2)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.6)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.8)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(4.0)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(4.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(4.4)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(4.6)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(4.8)\n</cell>\n<code language=julia-1.5>\ntruncate_number(5.0)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(5.2)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(5.4)\n</cell>\n<code language=julia-1.5>\ntruncate_number(5.6)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(5.8)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(6.0)\n</cell>\n<code language=julia-1.5>\ntruncate_number(6.2)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(6.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(6.6)\n</cell>\n<code language=julia-1.5>\ntruncate_number(6.8)\n\
    </cell>\n<code language=julia-", "    \n    number = round(number)\n    \n   \
    \ if number < 1.0\n        number = 1.0\n    end\n    \n    return number\nend",
  "    truncate_number = trunc(number)\nend", "    truncate_number = trunc(number)\n\
    end\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n</cell>\n<code\
    \ language=julia-1.5>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n\
    </cell>\n<code language=juli", "    truncate_number = trunc(number)\nend", " \
    \   truncate_number = round(number)\nend", "    truncate_number = floor(number)\n\
    \    truncate_number = truncate_number - truncate_number % 1\n    return truncate_number\n\
    end", "    truncate_number = trunc(number)\n    return truncate_number\nend",
  "    truncate_number = trunc(number)\nend", "    \n    truncate_number = trunc(number)\n\
    \    \n    return truncate_number\nend", "    \n    truncate_number = trunc(number)\n\
    \    \n    return truncate_number\nend", "    \n    truncate_number = round(number)\n\
    \    \n    return truncate_number\nend", "    \n    truncate_number = floor(number)\n\
    \    \n    if truncate_number == number\n        truncate_number = truncate_number\
    \ - 1\n    end\n    \n    return truncate_number\nend", "    truncate_number =\
    \ floor(number)\n    return truncate_number\nend", "    truncate_number = trunc(number)\n\
    end", "    truncate_number = number % 1\n    return truncate_number\nend", " \
    \   \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end", "    truncate_number = trunc(number)\n    return truncate_number\nend",
  "    number = round(number)\n    number = floor(number)\n    number = number - number%1\n\
    \    return number\nend\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.3>", "    number = round(number)\n\
    \    number = floor(number)\n    number = number - number%1\n    return number\n\
    end\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code\
    \ language=julia-1.5>\ntruncate_number(0.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.6)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.7)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.8)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.9)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.0)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.1)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.6)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.7)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.8)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.9)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.0)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.1)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.2)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.4)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.6)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.7)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.8)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.9)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.0)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.1)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.2)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.3)\n</cell>\n<code language=julia-1.5>\ntrun", "    truncate_number\
    \ = round(number)\n    return truncate_number\nend", "    number = round(number)\n\
    \    \n    if number < 1\n        number = 1\n    end\n    \n    return number\n\
    end", "    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end", "    number = floor(number)\n    number = number - number % 1\n    return\
    \ number\nend", "    truncate_number = trunc(number)\n    return truncate_number\n\
    end", "    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end", "    number = round(number)\n    \n    if number < 1.0\n        number =\
    \ 1.0\n    end\n    \n    return number\nend", "    truncate_number = trunc(number)\n\
    end", "    truncate_number = trunc(number)\n    return truncate_number\nend",
  "    truncate_number = trunc(number)\nend", "    truncate_number = number % 1\n\
    end", "    truncate_number = trunc(number)\n    return truncate_number\nend",
  "    truncate_number = trunc(number)\nend", "    truncate_number = round(number::Float64)\
    \ / 1.0\nend", "    \n    truncate_number = round(number)\n    \n    return truncate_number\n\
    end", "    truncate_number = floor(number)\n    truncate_number = truncate_number\
    \ - truncate_number % 1\n    return truncate_number\nend\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.6)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.7)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.8)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.9)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.0)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.1)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.6)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.7)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.8)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.9)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.0)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.1)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.2)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.4)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.6)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.7)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.8)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.9)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.0)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.1)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.2)\n</cell>\n<code language=juli",
  "    \n    truncate_number = floor(number)\n    \n    if truncate_number == number\n\
    \        truncate_number = truncate_number + 1\n    end\n    \n    return truncate_number\n\
    end", "    truncate_number = trunc(number)\n    return truncate_number\nend",
  "    truncate_number = floor(number)\n    return truncate_number\nend", "    \n\
    \    truncate_number = trunc(number)\n    \n    return truncate_number\nend",
  "    \n    truncate_number = trunc(number)\n    \n    return truncate_number\nend",
  "    truncate_number = round(number)\nend", "    \n    truncate_number = trunc(number)\n\
    \    \n    return truncate_number\nend", "    \n    truncate_number = number %\
    \ 1\n    \n    return truncate_number\nend", "    truncate_number = number % 1\n\
    \    return truncate_number\nend", "    \n    truncate_number = trunc(number)\n\
    \    if truncate_number == number\n        return number\n    else\n        return\
    \ truncate_number\n    end\nend\n</cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.4>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.4>\n\
    truncate_number(", "    \n    truncate_number = number % 1\n    \n    return truncate_number\n\
    end", "    truncate_number = trunc(number)\nend", "    \n    if number < 1\n \
    \       error(\"The number must be positive\")\n    end\n    \n    digits = floor(log10(number))\n\
    \    decimals = digits - floor(digits)\n    \n    truncate_number = round(number\
    \ * 10^decimals)\n    \n    return truncate_number\nend\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.1)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.9)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.1)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.9)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.1)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.9)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(4.1)\n</cell>\n<code language=julia-1.5>\ntruncate_number(4.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(4.9)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(5.1)\n</cell>\n<code language=julia-1.5>\ntruncate_number(5.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(5.9)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(6.1)\n</cell>\n<code language=julia-1.5>\ntruncate_number(6.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(6.9)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(7.1)\n</cell>\n<code language=julia-1.5>\ntruncate_number(7.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(7.9)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(8.1)\n</cell>\n<code language=julia-1.5>\ntruncate_number(8.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(8.9)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(9.1)\n</cell>\n<code language=julia-1.5>\ntruncate_number(9.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(9.9)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(10.1)\n</cell>\n", "    \n    truncate_number = trunc(number)\n\
    \    \n    return truncate_number\nend", "    truncate_number = round(number)\n\
    end", "    \n    if number < 1.0\n        return number\n    \n    digits = floor(log10(number))\n\
    \    decimals = digits - floor(digits)\n    \n    return number - decimals * pow(10,\
    \ -digits)\nend", "    truncate_number = floor(number)\n    truncate_number =\
    \ truncate_number - truncate_number % 1\n    return truncate_number\nend\n</cell>\n\
    <code language=julia-1.5>\ntruncate_number(0.2)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.4)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.6)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.7)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.8)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.9)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.0)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.1)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.2)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.4)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.6)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.7)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.8)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.9)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.0)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.1)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.6)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.7)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.8)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.9)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.0)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.1)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.2)\n\
    </cell>\n<code language=juli", "    truncate_number = floor(number)\n    truncate_number\
    \ = truncate_number - truncate_number % 1\n    return truncate_number\nend\n</cell>\n\
    <code language=julia-1.5>\ntruncate_number(0.123456789)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.123456789123456789)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789123456789123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789123456789123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789123456789123456789123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789)\n\
    </cell>", "    truncate_number = trunc(number)\nend", "    number = floor(number)\n\
    \    decimal = number - floor(number)\n    return decimal\nend", "    \n    truncate_number\
    \ = number\n    \n    if number < 1\n        truncate_number = truncate_number\
    \ - truncate_number % 1\n    end\n    \n    return truncate_number\nend\n</cell>\n\
    <code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5", "    truncate_number\
    \ = floor(number)\n    truncate_number = truncate_number - truncate_number % 1\n\
    \    return truncate_number\nend", "    \n    number = round(number, digits=digits)\n\
    \    \n    if number < 0\n        number = -number\n    end\n    \n    return\
    \ number\nend", "    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end", "    truncate_number = round(number::Float64)::Float64\nend", "    truncate_number\
    \ = trunc(number)\nend", "    truncate_number = floor(number)\n    return truncate_number\n\
    end", "    truncate_number = round(number)\n    return truncate_number\nend",
  "    truncate_number = round(number::Float64)\nend\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.", "    truncate_number = round(number)\nend", "    truncate_number\
    \ = trunc(number)\n    return truncate_number\nend", "    \n    truncate_number\
    \ = trunc(number)\n    \n    return truncate_number\nend", "    truncate_number\
    \ = trunc(number)\n    return truncate_number\nend", "    truncate_number = trunc(number)\n\
    end\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.2)\n</cell>\n<code\
    \ language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.4)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.6)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.7)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.8)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.9)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.0)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.1)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.2)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.4)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.6)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.7)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.8)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.9)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.0)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.1)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.2)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.4)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.6)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.7)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.8)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.9)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.0)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.1)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.3)\n\
    </cell>\n<code language=julia-1.5", "    truncate_number = number % 1\n    return\
    \ truncate_number\nend", "    truncate_number = trunc(number)\nend", "    number\
    \ = round(number)\n    number = round(number)\n    number = round(number)\n  \
    \  number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = round(number)\n    number = round(number)\n    number = round(number)\n\
    \    number = ", "    truncate_number = trunc(number)\nend", "    number = round(number)\n\
    \    number = floor(number)\n    number = number - number%1\n    return number\n\
    end", "    truncate_number = number % 1\nend", "    \n    truncate_number = trunc(number)\n\
    \    if truncate_number < number\n        truncate_number += 1\n    end\n    return\
    \ truncate_number\nend", "    number = round(number)\n    number = number - floor(number)\n\
    \    return number\nend\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.6)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.7)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.8)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.9)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.0)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.1)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.6)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.7)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.8)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.9)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.0)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.1)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.2)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.4)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.6)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.7)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.8)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.9)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.0)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.1)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.2)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.4)\n\
    </", "    truncate_number = trunc(number)\n    return truncate_number\nend", " \
    \   number = round(number)\n    number = floor(number)\n    number = number -\
    \ number%1\n    return number\nend", "    truncate_number = trunc(number)\n  \
    \  return truncate_number\nend", "    \n    number = round(number)\n    \n   \
    \ if number < 1.0\n        number = 1.0\n    end", "    truncate_number = round(number)\n\
    end", "    truncate_number = trunc(number)\nend", "    truncate_number = trunc(number)\n\
    \    return truncate_number\nend", "    truncate_number = trunc(number)\nend",
  "    \n    truncate_number = trunc(number)\n    \n    return truncate_number\nend",
  "    truncate_number = trunc(number)\n    return truncate_number\nend", "    number\
    \ = round(number)\n    \n    if number == 0.0 \n        error(\"Cannot truncate\
    \ a number with zero decimals\")\n    end\n    \n    number = round(number)\n\
    \    \n    if number == 0.0 \n        error(\"Cannot truncate a number with zero\
    \ decimals\")\n    end\n    \n    number = round(number)\n    \n    if number\
    \ == 0.0 \n        error(\"Cannot truncate a number with zero decimals\")\n  \
    \  end\n    \n    number = round(number)\n    \n    if number == 0.0 \n      \
    \  error(\"Cannot truncate a number with zero decimals\")\n    end\n    \n   \
    \ number = round(number)\n    \n    if number == 0.0 \n        error(\"Cannot\
    \ truncate a number with zero decimals\")\n    end\n    \n    number = round(number)\n\
    \    \n    if number == 0.0 \n        error(\"Cannot truncate a number with zero\
    \ decimals\")\n    end\n    \n    number = round(number)\n    \n    if number\
    \ == 0.0 \n        error(\"Cannot truncate a number with zero decimals\")\n  \
    \  end\n    \n    number = round(number)\n    \n    if number == 0.0 \n      \
    \  error(\"Cannot truncate a number with zero decimals\")\n    end\n    \n   \
    \ number = round(number)\n    \n    if number == 0.0 \n        error(\"Cannot\
    \ truncate a number with zero decimals\")\n    end\n    \n    number = round(number)\n\
    \    \n    if number == 0.0 \n        error(\"Cannot truncate a number with zero\
    \ decimals\")\n    end\n    \n    number = round(number)\n    \n    if number\
    \ == 0.0 \n        error(\"Cannot truncate a number with zero decimals\")\n  \
    \  end\n    \n    number = round(number)\n    \n    if number == 0.0 \n      \
    \  error(\"Cannot truncate a number with zero decimals\")\n    end\n    \n   \
    \ number = round(number)\n    \n    if number == 0.0 \n        error(\"Cannot\
    \ truncate a number with zero decimals\")\n    end\n    \n    number = round(number)\n\
    \    \n    if number == 0.0 \n        error(\"Cannot truncate a number with zero\
    \ decimals\")\n    end\n    \n    number = round(number)\n    \n    if number\
    \ == 0.0 \n        error(\"Cannot truncate a number with zero decimals\")\n  \
    \  end\n    \n    number = round(number)\n    \n    if number == 0.0 \n      \
    \  error(\"Cannot truncate a number with zero decimals\")\n    end\n    \n   \
    \ number = round(number)\n    \n    if number == 0.0 \n        error(\"Cannot\
    \ truncate a number with zero decimals\")\n    end\n    \n    number = round(number)\n\
    \    \n    if number == 0.0 \n        error(\"Cannot truncate a number with zero\
    \ decimals\")\n    end\n    \n    number = round(number)\n    \n    if ", "  \
    \  truncate_number = trunc(number)\n    return truncate_number\nend", "    truncate_number\
    \ = trunc(number)\nend", "    \n    truncate_number = trunc(number)\n    \n  \
    \  return truncate_number\nend", "    \n    truncate_number = trunc(number)\n\
    \    \n    return truncate_number\nend", "    truncate_number = trunc(number)\n\
    end", "    \n    truncate_number = number\n    \n    if number < 1.0\n       \
    \ truncate_number = truncate_number - 1.0\n    end\n    \n    return truncate_number\n\
    end", "    \n    truncate_number = floor(number)\n    \n    if truncate_number\
    \ < 1.0\n        truncate_number = truncate_number + 1\n    end\n    \n    return\
    \ truncate_number\nend", "    truncate_number = trunc(number)\n    return truncate_number\n\
    end", "    truncate_number = trunc(number)\nend", "    number = floor(number)\n\
    \    number = round(number, digits(number))\n    return number\nend", "    truncate_number\
    \ = trunc(number)\nend", "    truncate_number = floor(number)\n    truncate_number\
    \ = truncate_number - truncate_number % 1\n    return truncate_number\nend", " \
    \   \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end", "    number = round(number)\n    number = number - truncate_number(number)\n\
    \    return number\nend\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.6)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.7)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.8)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.9)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.0)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.1)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.6)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.7)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.8)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.9)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.0)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.1)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.2)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.4)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.6)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.7)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.8)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.9)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.0)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.1)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.2)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.4)",
  "    number = round(number)\n    number = floor(number)\n    number = number - number%1\n\
    \    return number\nend", "    truncate_number = round(number)\nend", "    \n\
    \    truncate_number = trunc(number)\n    \n    return truncate_number\nend",
  "    truncate_number = floor(number)\n    truncate_number = truncate_number - truncate_number%1\n\
    \    return truncate_number\nend", "    truncate_number = round(number::Float64)\n\
    end", "    truncate_number = trunc(number)\nend", "    number = round(number)\n\
    \    \n    if number < 1.0\n        number = 1.0\n    end\n    \n    return number\n\
    end\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code\
    \ language=julia-1.5>\ntruncate_number(0.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.6)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.7)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.8)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.9)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.0)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.1)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.6)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.7)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.8)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.9)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.0)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.1)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.2)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.4)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.6)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.7)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.8)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.9)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.0)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.1)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.2)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.3)\n</cell>\n<code language=julia-1.5>", "    truncate_number\
    \ = trunc(number)\n    return truncate_number\nend", "    \n    truncate_number\
    \ = floor(number)\n    \n    if truncate_number == number\n        truncate_number\
    \ == 0\n    else\n        truncate_number == truncate_number - 1\n    end\nend",
  "    truncate_number = trunc(number)\nend", "    truncate_number = trunc(number)\n\
    end", "    truncate_number = trunc(number)\nend", "    \n    truncate_number =\
    \ number % 1\n    \n    if truncate_number < 0.5\n        truncate_number = truncate_number\
    \ + 1.0\n    end\n    \n    return truncate_number\nend\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<text>\nNow let's try it out on our first number:",
  "    truncate_number = trunc(number)\nend", "    truncate_number = round(number)\n\
    end", "    truncate_number = trunc(number)\n    return truncate_number\nend",
  "    number = round(number)\n    \n    digits = floor(log10(number))\n    decimals\
    \ = digits-floor(digits)\n    \n    if number < 1\n        decimals = 0\n    end\n\
    \    \n    return round(number, decimals)\nend\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.6)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.7)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.8)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.9)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.0)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.1)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.6)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.7)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.8)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.9)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.0)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.1)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.2)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.4)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.6)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.7)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.8)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.9)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.0)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.1)\n\
    </cell", "    truncate_number = floor(number)\n    truncate_number = truncate_number\
    \ - truncate_number % 1\n    return truncate_number\nend", "    truncate_number\
    \ = trunc(number)\nend", "    truncate_number = trunc(number)\nend\n</cell>\n\
    <code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159", "    truncate_number\
    \ = trunc(number)\nend\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.123456789)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.123456789)\n</cell>\n<code\
    \ language=julia-1.3>\ntruncate_number(0.123456789)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.123456789)\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.123456789)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.123456789)\n</cell>\n<code\
    \ language=julia-1.3>\ntruncate_number(0.123456789)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.123456789)\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.123456789)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.123456789)\n</cell>\n<code\
    \ language=julia-1.3>\ntruncate_number(0.123456789)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.123456789)\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.123456789)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.123456789)\n</cell>\n<code\
    \ language=julia-1.3>\ntruncate_number(0.123456789)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.123456789)\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.123456789)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.123456789)\n</cell>\n<code\
    \ language=julia-1.3>\ntruncate_number(0.123456789)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.123456789)\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.123456789)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.123456789)\n</cell>\n<code\
    \ language=julia-1.3>\ntruncate_number(0.123456789)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.123456789)\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.123456789)\n\
    </cell>\n<code language=julia-1.3>\ntruncate_number(0.123456789)\n</cell>\n<code\
    \ language=julia-1.3>\ntruncate_number(0.123456789)\n</cell>\n<code language=julia-1.3>\n\
    truncate_number(0.123456789)\n</cell>\n<code language=julia-1.3>\ntruncate_number(0.123456789)\n\
    </cell>\n<code language=julia-1.3>", "    \n    truncate_number = trunc(number)\n\
    \    \n    return truncate_number\nend", "    truncate_number = trunc(number)\n\
    end", "    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end", "    truncate_number = trunc(number)\n    return truncate_number\nend",
  "    truncate_number = trunc(number)\n    return truncate_number\nend", "    truncate_number\
    \ = round(number)\nend", "    truncate_number = trunc(number)\n    return truncate_number\n\
    end", "    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end", "    \n    truncate_number = number % 1\n    \n    if truncate_number <\
    \ 0.5\n        truncate_number = truncate_number + 1.0\n    end\n    \n    return\
    \ truncate_number\nend\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5",
  "    truncate_number = number % 1\nend", "    truncate_number = floor(number)\n\
    \    truncate_number = truncate_number - truncate_number % 1\n    return truncate_number\n\
    end", "    truncate_number = floor(number)\n    truncate_number = truncate_number\
    \ - truncate_number % 1\n    return truncate_number\nend", "    \n    truncate_number\
    \ = round(number, digits)\nend\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>", "    truncate_number = round(number::Float64)\nend", "    truncate_number\
    \ = round(number)\nend", "    \n    truncate_number = trunc(number)\n    \n  \
    \  return truncate_number\nend", "    truncate_number = trunc(number)\n    return\
    \ truncate_number\nend", "    number = round(number)\n    digits = floor(log10(number))\n\
    \    decimals = digits-floor(digits)\n    number = round(number/10^decimals)\n\
    \    return number\nend", "    \n    number = round(number)\n    \n    if number\
    \ == 0\n        number = 0\n    end\n    \n    return number\nend", "    truncate_number\
    \ = round(number::Float64)\nend", "    \n    truncate_number = trunc(number)\n\
    \    \n    return truncate_number\nend", "    \n    number = round(number)\n \
    \   \n    if number < 1\n        number = 1\n    end", "    truncate_number =\
    \ number % 1\nend", "    number = round(number)\n    \n    if number == 0.0 \n\
    \        number = 1.0\n    \n    number = floor(number)\n    \n    if number ==\
    \ 0.0\n        number = 1.0\n    \n    return number\nend", "    truncate_number\
    \ = trunc(number)\nend", "    \n    number = floor(number)\n    \n    if number\
    \ == 0\n        number = 0\n    end\n    \n    return number\nend", "    truncate_number\
    \ = trunc(number)\nend", "    truncate_number = trunc(number)\n    return truncate_number\n\
    end", "    truncate_number = trunc(number)\nend", "    truncate_number = floor(number)\n\
    \    if truncate_number == number\n        truncate_number = truncate_number +\
    \ 1\n    end\n    return truncate_number\nend", "    \n    truncate_number = trunc(number)\n\
    \    \n    return truncate_number\nend", "    truncate_number = trunc(number)\n\
    \    return truncate_number\nend", "    truncate_number = trunc(number)\nend",
  "    \n    truncate_number = trunc(number)\n    \n    return truncate_number\nend\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(4.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(4.6)\n</cell>\n<code language=julia-1.5>\ntruncate_number(4.7)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(4.8)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(4.9)\n</cell>\n<code language=julia-1.5>\ntruncate_number(5.0)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(5.1)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(5.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(5.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(5.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(5.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(5.6)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(5.7)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(5.8)\n</cell>\n<code language=julia-1.5>\ntruncate_number(5.9)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(6.0)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(6.1)\n</cell>\n<code language=julia-1.5>\ntruncate_number(6.2)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(6.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(6.4)\n</cell>\n<code language=julia-1.5>\ntruncate_number(6.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(6.6)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(6.7)\n</cell>\n<code language=julia-1.5>\ntruncate_number(6.8)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(6.9)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(7.0)\n</cell>\n<code language=julia-1.5>\ntruncate_number(7.1)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(7.2)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(7.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(7.4)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(", "    \n    number = round(number)\n\
    \    \n    if number < 1.0\n        number = 1.0\n    end\n    \n    return number\n\
    end\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.2)\n</cell>\n<code\
    \ language=julia-1.5>\ntruncate_number(0.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.4)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.6)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.7)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.8)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.9)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.0)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.1)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.2)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.4)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.6)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.7)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.8)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.9)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.0)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.1)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.2)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.4)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.6)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.7)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.8)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.9)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.0)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.1)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.2)\n</cell>\n<code language=julia-", "    \n    number = round(number)\n\
    \    \n    digits = floor(log10(number))\n    \n    digits = digits - digits_left(number)\n\
    \    \n    number = round(number * 10^digits)\n    \n    return number\nend",
  "    truncate_number = trunc(number)\nend", "    truncate_number = floor(number)\n\
    \    truncate_number = truncate_number - truncate_number % 1\n    return truncate_number\n\
    end", "    truncate_number = floor(number)\n    truncate_number = truncate_number\
    \ - truncate_number % 1\n    return truncate_number\nend", "    truncate_number\
    \ = trunc(number)\nend", "    \n    truncate_number = trunc(number)\n    \n  \
    \  if truncate_number == 0.0\n        truncate_number = 1.0\n    end\n    \n \
    \   return truncate_number\nend", "    \n    truncate_number = trunc(number)\n\
    \    \n    return truncate_number\nend", "    \n    truncate_number = trunc(number)\n\
    \    \n    return truncate_number\nend", "    truncate_number = round(number::Float64)\n\
    end", "    truncate_number = trunc(number)\n    return truncate_number\nend",
  "    truncate_number = trunc(number)\nend", "    truncate_number = trunc(number)\n\
    end", "    truncate_number = trunc(number)\nend", "    \n    truncate_number =\
    \ floor(number)\n    \n    if truncate_number == number\n        truncate_number\
    \ = truncate_number - 1\n    end\n    \n    return truncate_number\nend", "  \
    \  truncate_number = number % 1\n    return truncate_number\nend", "    truncate_number\
    \ = trunc(number)\nend", "    \n    truncate_number = trunc(number)\n    if truncate_number\
    \ < number\n        truncate_number = truncate_number + 1\n    end\n    return\
    \ truncate_number\nend", "    \n    number = round(number)\n    \n    if number\
    \ == 0.0 \n        \n        return 0.0\n    \n    number = floor(number)\n  \
    \  \n    number = number - number\n    \n    number = number / 10\n    \n    return\
    \ number\nend", "    truncate_number = trunc(number)\nend", "    \n    truncate_number\
    \ = round(number)\n    \n    return truncate_number\nend\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.2)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.3)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.4)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.5)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.6)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(0.7)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(0.8)\n</cell>\n<code language=julia-1.5>\ntruncate_number(0.9)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.0)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.1)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.2)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.3)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.4)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.5)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.6)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(1.7)\n</cell>\n<code language=julia-1.5>\ntruncate_number(1.8)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(1.9)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.0)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.1)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.2)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.3)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.4)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.5)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.6)\n</cell>\n<code language=julia-1.5>\ntruncate_number(2.7)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(2.8)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(2.9)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.0)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.1)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.2)\n</", "    truncate_number = floor(number)\n    truncate_number\
    \ = truncate_number - truncate_number % 1\n    return truncate_number\nend", " \
    \   truncate_number = trunc(number)\n    return truncate_number\nend", "    truncate_number\
    \ = trunc(number)\nend", "    truncate_number = trunc(number)\nend\n</cell>\n\
    <code language=julia-1.5>\ntruncate_number(3.14159)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.141592)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.141593)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.1415926)\n</cell>\n<code\
    \ language=julia-1.5>\ntruncate_number(3.1415927)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159265)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.141592652)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.141592653)\n</cell>\n<code\
    \ language=julia-1.5>\ntruncate_number(3.141592654)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.141592655)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.1415926552)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.1415926553)\n</cell>\n<code\
    \ language=julia-1.5>\ntruncate_number(3.1415926554)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159265542)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159265543)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159265544)\n</cell>\n\
    <code language=julia-1.5>\ntruncate_number(3.14159265545)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159265546)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159265547)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159265548)\n</cell>\n\
    <code language=julia-1.5>\ntruncate_number(3.14159265548)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(3.14159265548)\n</cell>\n<code language=julia-1.5>\ntruncate_number(3.14159265548)\n\
    </cell>\n<code language=julia-1.5>\ntruncate_number(3.14159265548)\n</cell>\n\
    <code language=julia-1.5>\ntruncate_number(3.14159265548)\n</cell>\n<code language=julia-1.5>\n\
    truncate_number(", "    truncate_number = trunc(number)\n    return truncate_number\n\
    end", "    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end", "    \n    truncate_number = trunc(number)\n    \n    return truncate_number\n\
    end", "    truncate_number = trunc(number)\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

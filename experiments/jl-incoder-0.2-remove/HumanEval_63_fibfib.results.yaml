language: jl
name: HumanEval_63_fibfib
results:
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<text>\nExercise 4\nWrite a function\
    \ that computes the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa5udvucj.jl:14\nin expression starting at\
    \ /tmp/tmpa5udvucj.jl:14\n"
  stdout: ''
  timestamp: 1659749190
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that computes the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\
    \t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphryd53w6.jl:14\nin expression starting at\
    \ /tmp/tmphryd53w6.jl:14\n"
  stdout: ''
  timestamp: 1659749190
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2\
    \ \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.5>\nfibfib(2)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that computes the factorial of a given number. \nThe factorial of\
    \ a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ... \\\
    times 1 \\times 0$$\nFor example, $5! = 5 \\times 4 \\times 3 \\times 2 \\times\
    \ 1 = 120$\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
    \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfs_iew_i.jl:11\nin expression starting at\
    \ /tmp/tmpfs_iew_i.jl:11\n"
  stdout: ''
  timestamp: 1659749190
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        then 0\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t\
    @test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpi5g2d_3x.jl:10\nin expression starting at /tmp/tmpi5g2d_3x.jl:10\n"
  stdout: ''
  timestamp: 1659749190
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.5>\nfibfib(2)\n\
    </cell>\n<text>\nExercise: Write a function that computes the n-th element of\
    \ the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpccqtb8ly.jl:14\nin expression starting at\
    \ /tmp/tmpccqtb8ly.jl:14\n"
  stdout: ''
  timestamp: 1659749190
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 \n        0\n    else if n == 1 \n        0\n    else \n      \
    \  fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\n\
    Exercise 4\nWrite a function that computes the factorial of a number. For example,\
    \ factorial(5) = 5 x 4 x 3 x 2 x 1 = 120.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi8k1cqx_.jl:11\nin expression starting at\
    \ /tmp/tmpi8k1cqx_.jl:11\n"
  stdout: ''
  timestamp: 1659749190
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.3>\nfibfib(2)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the n-th Fibonacci\
    \ number using the recursive definition of fibfib(n). Test your function by computing\
    \ the first 20 Fibonacci numbers. \nHint: You can use the function fibfib(n) to\
    \ compute the n-th Fibonacci number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpod9r6ixw.jl:14\nin expression starting at\
    \ /tmp/tmpod9r6ixw.jl:14\n"
  stdout: ''
  timestamp: 1659749190
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return n\n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(2)\n</\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp119r5eg5.jl:14\nin expression starting at\
    \ /tmp/tmp119r5eg5.jl:14\n"
  stdout: ''
  timestamp: 1659749190
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\nExercise 4\nWrite\
    \ a function that computes the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\
    \t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps140cwhq.jl:15\nin expression starting at\
    \ /tmp/tmps140cwhq.jl:15\n"
  stdout: ''
  timestamp: 1659749190
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0\n        0\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend\n</cell>\n<code language=julia-1.4>\n@time fibfib(2)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that computes the n-th element of the Fibonacci\
    \ sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\
    \t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) ==\
    \ 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf6h7eg5a.jl:15\nin expression starting at\
    \ /tmp/tmpf6h7eg5a.jl:15\n"
  stdout: ''
  timestamp: 1659749190
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\nfibfib(2)\n</cell>\n<text>\nExercise 2\n\
    Write a function that computes the factorial of a number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfv327b8p.jl:15\nin expression starting at\
    \ /tmp/tmpfv327b8p.jl:15\n"
  stdout: ''
  timestamp: 1659749190
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1\n        return n\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    fibfib(2)\n</cell>\n<code language=julia-1.3>\nfibfib(3)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(4)\n</cell>\n<code language=julia-1.3>\nfibfib(5)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(6)\n</cell>\n<code language=julia-1.3>\nfibfib(7)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(8)\n</cell>\n<code language=julia-1.3>\nfibfib(9)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(10)\n</cell>\n<code language=julia-1.3>\nfibfib(11)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(12)\n</cell>\n<code language=julia-1.3>\nfibfib(13)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(14)\n</cell>\n<code language=julia-1.3>\nfibfib(15)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(16)\n</cell>\n<code language=julia-1.3>\nfibfib(17)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(18)\n</cell>\n<code language=julia-1.3>\nfibfib(19)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(20)\n</cell>\n<code language=julia-1.3>\nfibfib(21)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(22)\n</cell>\n<code language=julia-1.3>\nfibfib(23)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(24)\n</cell>\n<code language=julia-1.3>\nfibfib(25)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(26)\n</cell>\n<code language=julia-1.3>\nfibfib(27)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(28)\n</cell>\n<code language=julia-1.3>\nfibfib(29)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(30)\n</cell>\n<code language=julia-1.3>\nfibfib(31)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(32)\n</cell>\n<code language=julia-1.3>\nfibfib(\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp363cpx_9.jl:15\nin expression starting at\
    \ /tmp/tmp363cpx_9.jl:15\n"
  stdout: ''
  timestamp: 1659749190
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n\
    </cell>\n<text>\nExercise 2\nWrite a function to compute the factorial of a given\
    \ number. \nHint: Use a recursive function.\nusing Test\n\n@testset begin\n\n\
    candidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t\
    @test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) ==\
    \ 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoki7knlf.jl:14\nin expression starting at\
    \ /tmp/tmpoki7knlf.jl:14\n"
  stdout: ''
  timestamp: 1659749190
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return n\n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.3>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.3>\nfibfib(3)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(4)\n</cell>\n<code language=julia-1.3>\nfibfib(5)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(6)\n</cell>\n<code language=julia-1.3>\nfibfib(7)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(8)\n</cell>\n<code language=julia-1.3>\nfibfib(9)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(10)\n</cell>\n<code language=julia-1.3>\nfibfib(11)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(12)\n</cell>\n<code language=julia-1.3>\nfibfib(13)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(14)\n</cell>\n<code language=julia-1.3>\nfibfib(15)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(16)\n</cell>\n<code language=julia-1.3>\nfibfib(17)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(18)\n</cell>\n<code language=julia-1.3>\nfibfib(19)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(20)\n</cell>\n<code language=julia-1.3>\nfibfib(21)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(22)\n</cell>\n<code language=julia-1.3>\nfibfib(23)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(24)\n</cell>\n<code language=julia-1.3>\nfibfib(25)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(26)\n</cell>\n<code language=julia-1.3>\nfibfib(27)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(28)\n</cell>\n<code language=julia-1.3>\nfibfib(29)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(30)\n</cell>\n<code language=julia-1.3>\nfibfib(31)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(32)\n</cell>\n<code language=julia-1.3>\nfibfib(33\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8ae7f59n.jl:14\nin expression starting at\
    \ /tmp/tmp8ae7f59n.jl:14\n"
  stdout: ''
  timestamp: 1659749190
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that computes the n-th element of\
    \ the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphtmmynkj.jl:14\nin expression starting at\
    \ /tmp/tmphtmmynkj.jl:14\n"
  stdout: ''
  timestamp: 1659749190
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        then 0\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\nExercise 7\nWrite a function\
    \ that computes the factorial of a given number. \nThe factorial of a number $n$\
    \ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1$$\nWrite a function that computes\
    \ the factorial of a given number using recursion.\nusing Test\n\n@testset begin\n\
    \ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\
    \t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpq62h54ct.jl:10\nin expression starting at /tmp/tmpq62h54ct.jl:10\n"
  stdout: ''
  timestamp: 1659749190
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1\n        return n\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp0qo31l50.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp0qo31l50.jl:1\n\
    in expression starting at /tmp/tmp0qo31l50.jl:1\n"
  stdout: ''
  timestamp: 1659749190
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        then 0\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that computes the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\
    \t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgxwc5jji.jl:10\nin expression starting at /tmp/tmpgxwc5jji.jl:10\n"
  stdout: ''
  timestamp: 1659749190
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\n@time\
    \ fibfib(2)\n</cell>\n<text>\nExercise 2\nWrite a function to compute the factorial\
    \ of a given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n\
    \ \\times n-1 \\times n-2 \\times ...$$\nFor example, 6! = 6 \\times 5  \\times\
    \ 4 \\times 3 \\times 2 \\times 1 = 720.\nWrite a function to compute the factorial\
    \ of a given number using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf0kn1qro.jl:14\nin expression starting at\
    \ /tmp/tmpf0kn1qro.jl:14\n"
  stdout: ''
  timestamp: 1659749190
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.5>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(3)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(4)\n</cell>\n<code language=julia-1.5>\nfibfib(5)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(6)\n</cell>\n<code language=julia-1.5>\nfibfib(7)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(8)\n</cell>\n<code language=julia-1.5>\nfibfib(9)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(10)\n</cell>\n<code language=julia-1.5>\nfibfib(11)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(12)\n</cell>\n<code language=julia-1.5>\nfibfib(13)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(14)\n</cell>\n<code language=julia-1.5>\nfibfib(15)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(16)\n</cell>\n<code language=julia-1.5>\nfibfib(17)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(18)\n</cell>\n<code language=julia-1.5>\nfibfib(19)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(20)\n</cell>\n<code language=julia-1.5>\nfibfib(21)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(22)\n</cell>\n<code language=julia-1.5>\nfibfib(23)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(24)\n</cell>\n<code language=julia-1.5>\nfibfib(25)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(26)\n</cell>\n<code language=julia-1.5>\nfibfib(27)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(28)\n</cell>\n<code language=julia-1.5>\nfibfib(29)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(31)\n</cell>\n<code language=julia-1.5>\nfibfib(0)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.5>\nfibfib(2)\n</cell\nusing Test\n\
    \n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp05nmewda.jl:14\nin expression starting at\
    \ /tmp/tmp05nmewda.jl:14\n"
  stdout: ''
  timestamp: 1659749190
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        then 0\n    else fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    using Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\
    \t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxj3sdqhp.jl:10\nin expression starting at /tmp/tmpxj3sdqhp.jl:10\n"
  stdout: ''
  timestamp: 1659749190
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(2)\n</cell>\n<text>\nExercise 2\nWrite a function to compute the n-th\
    \ element of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\
    \ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\
    \t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpthzb48d5.jl:14\nin expression starting at\
    \ /tmp/tmpthzb48d5.jl:14\n"
  stdout: ''
  timestamp: 1659749190
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2\
    \ \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fibfib(0)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fibfib(1)\n</cell>\n<code language=julia-1.0>\n@code_warntype fibfib(2)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fibfib(3)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fibfib(4)\n</cell>\n<code language=julia-1.0>\n@code_warntype fibfib(5)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fibfib(6)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fibfib(7)\n</cell>\n<code language=julia-1.0>\n@code_warntype fibfib(8)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fibfib(9)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fibfib(10)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ fibfib(11)\n</cell>\n<code language=julia-1.0>\n@code_warntype fibfib(12)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fibfib(13)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype fibfib(14)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fibfib(15)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ fibfib(16)\n</cell>\n<code language=julia-1.0>\n@code_warntype fibfib(17)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fibfib(18)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_warntype fibfib(19)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fibfib(20)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ fibfib(21)\n</cell>\n<code language=julia-1.0>\n@code_warntype fibfib(22)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fibfib(23)\n</cell>\n<code\
    \ language=julia-1.0>\n@code_\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\
    \t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) ==\
    \ 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo3taxaw1.jl:11\nin expression starting at\
    \ /tmp/tmpo3taxaw1.jl:11\n"
  stdout: ''
  timestamp: 1659749190
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n\
    \        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<text>\nExercise: Write a\
    \ function to compute the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\
    \t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt9g547qr.jl:11\nin expression starting at\
    \ /tmp/tmpt9g547qr.jl:11\n"
  stdout: ''
  timestamp: 1659749192
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.5>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(3)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(4)\n</cell>\n<code language=julia-1.5>\nfibfib(5)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(6)\n</cell>\n<code language=julia-1.5>\nfibfib(7)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(8)\n</cell>\n<code language=julia-1.5>\nfibfib(9)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(10)\n</cell>\n<code language=julia-1.5>\nfibfib(11)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(12)\n</cell>\n<code language=julia-1.5>\nfibfib(13)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(14)\n</cell>\n<code language=julia-1.5>\nfibfib(15)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(16)\n</cell>\n<code language=julia-1.5>\nfibfib(17)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(18)\n</cell>\n<code language=julia-1.5>\nfibfib(19)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(20)\n</cell>\n<code language=julia-1.5>\nfibfib(21)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(22)\n</cell>\n<code language=julia-1.5>\nfibfib(23)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(24)\n</cell>\n<code language=julia-1.5>\nfibfib(25)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(26)\n</cell>\n<code language=julia-1.5>\nfibfib(27)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(28)\n</cell>\n<code language=julia-1.5>\nfibfib(29)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(31)\n</cell>\n<code language=julia-1.5>\nfibfib(40)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(41)\n</cell>\n<code language=julia-1.5>\nfibfib(42)\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj82w8rvm.jl:14\nin expression starting at\
    \ /tmp/tmpj82w8rvm.jl:14\n"
  stdout: ''
  timestamp: 1659749192
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        0\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that computes the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times\
    \ n-2 \\times .... \\times 2 \\times 1$$\nWrite a function to compute the factorial\
    \ of a given number using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbc23pk0h.jl:14\nin expression starting at\
    \ /tmp/tmpbc23pk0h.jl:14\n"
  stdout: ''
  timestamp: 1659749192
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\nfibfib(2)\n</cell>\n<text>\nExercise 2\n\
    Write a function to compute the factorial of a number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6w616gkh.jl:15\nin expression starting at\
    \ /tmp/tmp6w616gkh.jl:15\n"
  stdout: ''
  timestamp: 1659749192
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9y20c5m.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9y20c5m.jl:1\n\
    in expression starting at /tmp/tmpu9y20c5m.jl:1\n"
  stdout: ''
  timestamp: 1659749192
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        then 0\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.4>\nfibfib(0)\n</cell>\n\
    <code language=julia-1.4>\nfibfib(1)\n</cell>\n<code language=julia-1.4>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.4>\nfibfib(3)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(4)\n</cell>\n<code language=julia-1.4>\nfibfib(5)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(6)\n</cell>\n<code language=julia-1.4>\nfibfib(7)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(8)\n</cell>\n<code language=julia-1.4>\nfibfib(9)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(10)\n</cell>\n<code language=julia-1.4>\nfibfib(11)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(12)\n</cell>\n<code language=julia-1.4>\nfibfib(13)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(14)\n</cell>\n<code language=julia-1.4>\nfibfib(15)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(16)\n</cell>\n<code language=julia-1.4>\nfibfib(17)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(18)\n</cell>\n<code language=julia-1.4>\nfibfib(19)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(20)\n</cell>\n<code language=julia-1.4>\nfibfib(21)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(22)\n</cell>\n<code language=julia-1.4>\nfibfib(23)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(24)\n</cell>\n<code language=julia-1.4>\nfibfib(25)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(26)\n</cell>\n<code language=julia-1.4>\nfibfib(27)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(28)\n</cell>\n<code language=julia-1.4>\nfibfib(29)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(30)\n</cell>\n<code language=julia-1.4>\nfibfib(31)\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj2ehe61x.jl:10\nin expression starting at /tmp/tmpj2ehe61x.jl:10\n"
  stdout: ''
  timestamp: 1659749192
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.3>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.3>\nfibfib(3)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(4)\n</cell>\n<code language=julia-1.3>\nfibfib(5)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=\n\
    using Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\
    \t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps55xmqxt.jl:14\nin expression starting at\
    \ /tmp/tmps55xmqxt.jl:14\n"
  stdout: ''
  timestamp: 1659749192
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2\
    \ \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.0>\nfibfib(2)\n</cell>\n<text>\nProblem 3\nWrite\
    \ a function to compute the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\
    \t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphvrbh3lb.jl:11\nin expression starting at\
    \ /tmp/tmphvrbh3lb.jl:11\n"
  stdout: ''
  timestamp: 1659749192
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n</cell>\n<code language=julia-1.0>\n@time fibfib(n);\n</cell>\n\
    <text>\nExercise 3\nWrite a function to compute the n-th element of the Fibonacci\
    \ sequence using memoization.\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\
    \t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) ==\
    \ 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_6fefwe2.jl:15\nin expression starting at\
    \ /tmp/tmp_6fefwe2.jl:15\n"
  stdout: ''
  timestamp: 1659749192
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\nfibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    </cell>\n<code language=julia-1.5>\n@time fibfib(n);\n</cell>\n<text>\nExercise\n\
    Write a function to compute the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\
    \t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp06j9oj78.jl:15\nin expression starting at\
    \ /tmp/tmp06j9oj78.jl:15\n"
  stdout: ''
  timestamp: 1659749192
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.5>\nfibfib(2)\n\
    </cell>\n<text>\nExercise 2\nWrite a function to compute the n-th element of the\
    \ Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpta_08dg4.jl:14\nin expression starting at\
    \ /tmp/tmpta_08dg4.jl:14\n"
  stdout: ''
  timestamp: 1659749192
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(2)\n</cell>\n<text>\nExercise 2\nWrite a function to compute the n-th\
    \ element of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\
    \ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\
    \t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpthzb48d5.jl:14\nin expression starting at\
    \ /tmp/tmpthzb48d5.jl:14\n"
  stdout: ''
  timestamp: 1659749190
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0\n        0\n    else if n == 1\n        1\n    else if n == 2\n\
    \        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.0>\nfibfib(0)\n</cell>\n<code language=julia-1.0>\nfibfib(1)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(3)\n</cell>\n<code language=julia-1.0>\nfibfib(4)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.0>\nfibfib(6)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(7)\n</cell>\n<code language=julia-1.0>\nfibfib(8)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(9)\n</cell>\n<code language=julia-1.0>\nfibfib(10)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(11)\n</cell>\n<code language=julia-1.0>\nfibfib(12)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(13)\n</cell>\n<code language=julia-1.0>\nfibfib(14)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(15)\n</cell>\n<code language=julia-1.0>\nfibfib(16)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(17)\n</cell>\n<code language=julia-1.0>\nfibfib(18)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(19)\n</cell>\n<code language=julia-1.0>\nfibfib(20)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(21)\n</cell>\n<code language=julia-1.0>\nfibfib(22)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(23)\n</cell>\n<code language=julia-1.0>\nfibfib(24)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(25)\n</cell>\n<code language=julia-1.0>\nfibfib(26)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(27)\n</cell>\n<code language=julia-1.0>\nfibfib(28)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(29)\n</cell>\n<code language=julia-1.0>\nfibfib(30)\n</\nusing Test\n\n\
    @testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6ffsga26.jl:11\nin expression starting at\
    \ /tmp/tmp6ffsga26.jl:11\n"
  stdout: ''
  timestamp: 1659749192
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the n-th element of\
    \ the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjggbazez.jl:14\nin expression starting at\
    \ /tmp/tmpjggbazez.jl:14\n"
  stdout: ''
  timestamp: 1659749192
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        then 0\n    else fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    using Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\
    \t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxj3sdqhp.jl:10\nin expression starting at /tmp/tmpxj3sdqhp.jl:10\n"
  stdout: ''
  timestamp: 1659749190
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\n@time\
    \ fibfib(2)\n</cell>\n<text>\nExercise 3\nWrite a function to compute the n-th\
    \ element of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\
    \ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\
    \t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz968fdt5.jl:14\nin expression starting at\
    \ /tmp/tmpz968fdt5.jl:14\n"
  stdout: ''
  timestamp: 1659749192
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(1)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(2)\n</cell>\n<code language=julia-1.3>\nfibfib(3)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(4)\n</cell>\n<code language=julia-1.3>\nfibfib(5)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n::Int64)::Int64\n    if n == 0 || n == 1 \n        return 0 \n    else\
    \ \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\nfibfib(n::Int64)::Int64\n    if n == 0 || n == 1 \n\
    \        return 0 \n    else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>\nfibfib(n::Int64)::Int64\n \
    \   if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n::Int64)::Int64\n    if n == 0 || n == 1 \n        return 0 \n    else\
    \ \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\nfibfib(n::Int64)::Int64\n    if n == 0 || n == 1 \n\
    \        return 0 \n    else \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>\nfibfib(n::Int64)::Int64\n \
    \   if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    fibfib(n::Int64)::Int64\n    if n == 0 || n == 1 \n        return 0 \n    else\
    \ \n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\nfibfib(n::Int64)::Int64\n    if n == 0 || n == 1 \n\
    \        return 0 \n    else \n        return fibfib(n-1) + fibfib(n-2\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t\
    @test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbu285qvz.jl:15\nin expression starting at\
    \ /tmp/tmpbu285qvz.jl:15\n"
  stdout: ''
  timestamp: 1659749192
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\nfibfib(0)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(1)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(2)\n</cell>\n<code language=julia-1.0>\nfibfib(3)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(4)\n</cell>\n<code language=julia-1.0>\nfibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(6)\n</cell>\n<code language=julia-1.0>\nfibfib(7)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(8)\n</cell>\n<code language=julia-1.0>\nfibfib(9)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(n) for n in 0:9\n</cell>\n<code language=julia-1.0>\nfibfib(n) for n in\
    \ 0:9\n</cell>\n<code language=julia-1.0>\nfibfib(n) for n in 0:9\n</cell>\n<code\
    \ language=julia-1.0>\nfibfib(n) for n in 0:9\n</cell>\n<code language=julia-1.0>\n\
    fibfib(n) for n in 0:9\n</cell>\n<code language=julia-1.0>\nfibfib(n) for n in\
    \ 0:9\n</cell>\n<code language=julia-1.0>\nfibfib(n) for n in 0:9\n</cell>\n<code\
    \ language=julia-1.0>\nfibfib(n) for n in 0:9\n</cell>\n<code language=julia-1.0>\n\
    fibfib(n) for n in 0:9\n</cell>\n<code language=julia-1.0>\nfibfib(n) for n in\
    \ 0:9\n</cell>\n<code language=julia-1.0>\nfibfib(n) for n in 0:9\n</cell>\n<code\
    \ language=julia-1.0>\nfibfib(n) for n in 0:9\n</cell>\n<code language=julia-1.0>\n\
    fibfib(n) for n in 0:9\n</cell>\n<code language=julia-1.0>\nfibfib(n) for n in\
    \ 0:9\n</cell>\n<code language=julia-1.0>\nfibfib(n) for n in 0:9\n</cell>\n<code\
    \ language=julia-1.0>\nfibfib(n) for n in 0:9\n</cell>\n<code language=julia-1.0>\n\
    fibfib(n) for n in 0:9\n</cell>\n<code language=julia-1.0>\nfibfib(n) for n in\
    \ 0:9\n</cell>\n<code language=julia-1.0>\nfib\nusing Test\n\n@testset begin\n\
    \ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\
    \t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpggo2yflw.jl:14\nin expression starting at\
    \ /tmp/tmpggo2yflw.jl:14\n"
  stdout: ''
  timestamp: 1659749192
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.5>\nfibfib(2)\n\
    </cell>\n<text>\nExercise 2\nWrite a function to compute the n-th element of the\
    \ Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpta_08dg4.jl:14\nin expression starting at\
    \ /tmp/tmpta_08dg4.jl:14\n"
  stdout: ''
  timestamp: 1659749192
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 \n        0\n    else if n == 1 \n        0\n    else \n      \
    \  fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\nExercise 2\n\
    Write a function to compute the factorial of a given number. \nThe factorial of\
    \ a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times .... 1\
    \ \\times 0$$\nWrite a function to compute the factorial of a given number using\
    \ recursion.\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
    \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1_4uwcia.jl:11\nin expression starting at\
    \ /tmp/tmp1_4uwcia.jl:11\n"
  stdout: ''
  timestamp: 1659749192
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n</cell>\n<code language=julia-1.0>\n@time fibfib(n);\n</cell>\n\
    <text>\nExercise 2\nWrite a function to compute the n-th element of the Fibonacci\
    \ sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\
    \t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) ==\
    \ 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzu8dv9i4.jl:15\nin expression starting at\
    \ /tmp/tmpzu8dv9i4.jl:15\n"
  stdout: ''
  timestamp: 1659749192
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 then 0 else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <text>\nExercise 4\nWrite a function that computes the n-th element of the Fibonacci\
    \ sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\
    \t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) ==\
    \ 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpztpg_5vi.jl:9\nin expression starting at /tmp/tmpztpg_5vi.jl:9\n"
  stdout: ''
  timestamp: 1659749192
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.5>\nfibfib(2)\n\
    </cell>\n<text>\nExercise\nWrite a function to compute the n-th element of the\
    \ Fibonacci number sequence using recursion.\nusing Test\n\n@testset begin\n\n\
    candidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t\
    @test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) ==\
    \ 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphs_7571k.jl:14\nin expression starting at\
    \ /tmp/tmphs_7571k.jl:14\n"
  stdout: ''
  timestamp: 1659749192
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\nfibfib(2)\n</cell>\n<text>\nExercise: Write\
    \ a function that computes the n-th Fibonacci number using recursion.\nusing Test\n\
    \n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy9i23yjv.jl:15\nin expression starting at\
    \ /tmp/tmpy9i23yjv.jl:15\n"
  stdout: ''
  timestamp: 1659749192
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0\nusing Test\n\
    \n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_pule1mu.jl:14\nin expression starting at\
    \ /tmp/tmp_pule1mu.jl:14\n"
  stdout: ''
  timestamp: 1659749192
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(2)\n</cell>\n<text>\nExercise: Write a function to compute the n-th element\
    \ of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\n\
    candidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t\
    @test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) ==\
    \ 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_sxqygj4.jl:14\nin expression starting at\
    \ /tmp/tmp_sxqygj4.jl:14\n"
  stdout: ''
  timestamp: 1659749192
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        then 0\n    else fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <text>\nExercise\nWrite a function that computes the n-th element of the Fibonacci\
    \ sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\
    \t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) ==\
    \ 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6wzvch6n.jl:10\nin expression starting at /tmp/tmp6wzvch6n.jl:10\n"
  stdout: ''
  timestamp: 1659749193
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2\
    \ \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.0>\nfibfib(2)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that computes the n-th Fibonacci number using recursion.\nusing Test\n\
    \n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx6fk21l0.jl:11\nin expression starting at\
    \ /tmp/tmpx6fk21l0.jl:11\n"
  stdout: ''
  timestamp: 1659749193
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        then 0\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t\
    @test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpi5g2d_3x.jl:10\nin expression starting at /tmp/tmpi5g2d_3x.jl:10\n"
  stdout: ''
  timestamp: 1659749190
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n\
    </cell>\n<text>\nExercise 2\nWrite a function to compute the n-th element of the\
    \ Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa6bai10t.jl:14\nin expression starting at\
    \ /tmp/tmpa6bai10t.jl:14\n"
  stdout: ''
  timestamp: 1659749193
- exit_code: -1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0\n        0\n    elseif n == 1\n        1\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t\
    @test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) ==\
    \ 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659749198
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\nfibfib(2)\n</cell>\n<text>\nExercise\nWrite\
    \ a function that computes the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\
    \t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_pihtoxm.jl:15\nin expression starting at\
    \ /tmp/tmp_pihtoxm.jl:15\n"
  stdout: ''
  timestamp: 1659749193
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        then 0\n    else fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.4>\nfibfib(2)\n</cell>\n\
    <text>\nExercise 2\nWrite a function to compute the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times\
    \ n-2 \\times ...$$\nFor example, $5! = 5 \\times 4 \\times 3 \\times 2 \\times\
    \ 1 = 120$\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
    \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpozohglar.jl:10\nin expression starting at /tmp/tmpozohglar.jl:10\n"
  stdout: ''
  timestamp: 1659749194
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.3>\nfibfib(2)\n\
    </cell>\n<text>\nExercise 2\nWrite a function to compute the n-th element of the\
    \ Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkthl6_t4.jl:14\nin expression starting at\
    \ /tmp/tmpkthl6_t4.jl:14\n"
  stdout: ''
  timestamp: 1659749193
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0\n        0\n    elseif n == 1\n        0\n    elseif n == 2\n \
    \       1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that computes the factorial\
    \ of a given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n\
    \ \\times n-1 \\times n-2 \\times .... \\times 2 \\times 1$$\nWrite a function\
    \ that computes the factorial of a given number using recursion.\nusing Test\n\
    \n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa0lx_t86.jl:19\nin expression starting at\
    \ /tmp/tmpa0lx_t86.jl:19\n"
  stdout: ''
  timestamp: 1659749193
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2\
    \ \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    fibfib(1)\n</cell>\n<text>\nExercise 2\nWrite a function that computes the factorial\
    \ of a number.\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
    \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8vfjhgmp.jl:11\nin expression starting at\
    \ /tmp/tmp8vfjhgmp.jl:11\n"
  stdout: ''
  timestamp: 1659749194
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.3>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.3>\n@time fibfib(2)\n</cell>\n<code language=julia-1.3>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.3>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.3>\n@time fibfib(2)\n</cell>\n<code language=julia-1.3>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.3>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.3>\n@time fibfib(2)\n</cell>\n<code language=julia-1.3>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.3>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.3>\n@time fibfib(2)\n</cell>\n<code language=julia-1.3>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.3>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.3>\n@time fibfib(2)\n</cell>\n<code language=julia-1.3>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.3>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.3>\n@time fibfib(2)\n</cell>\n<code language=julia-1.3>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.3>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.3>\n@time fibfib(2)\n</cell>\n<code language=julia-1.3>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.3>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.3>\n@time fibfib(2)\n</cell>\n<code language=julia-1.3>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.3>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.3>\n@time fibfib(2)\n</cell>\n<code language=julia-1.3>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.3>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.3>\n@time fibfib(2)\n</cell>\n<code language=julia-1.3>\n\
    @time fibfib(2)\n</cell>\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\
    \t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) ==\
    \ 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpksmc3hw4.jl:14\nin expression starting at\
    \ /tmp/tmpksmc3hw4.jl:14\n"
  stdout: ''
  timestamp: 1659749194
- exit_code: -1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0\n        0\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend\nfibfib(2)\n</cell>\n<text>\nExercise 3\nWrite a function that computes\
    \ the n-th Fibonacci number using the recursive definition of Fibonacci numbers.\
    \ \nThe function should take one parameter, the number of the Fibonacci number\
    \ to be computed.\nThe function should return the computed Fibonacci number.\n\
    using Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\
    \t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659749198
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9y20c5m.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9y20c5m.jl:1\n\
    in expression starting at /tmp/tmpu9y20c5m.jl:1\n"
  stdout: ''
  timestamp: 1659749192
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1\n        return 0\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ to compute the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbgdqo5j2.jl:14\nin expression starting at\
    \ /tmp/tmpbgdqo5j2.jl:14\n"
  stdout: ''
  timestamp: 1659749194
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1\n        return n\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n\nusing Test\n\n@testset begin\n\n\
    candidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t\
    @test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) ==\
    \ 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw4pwi0vb.jl:15\nin expression starting at\
    \ /tmp/tmpw4pwi0vb.jl:15\n"
  stdout: ''
  timestamp: 1659749194
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        then 0\n    else fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    using Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\
    \t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxj3sdqhp.jl:10\nin expression starting at /tmp/tmpxj3sdqhp.jl:10\n"
  stdout: ''
  timestamp: 1659749190
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.3>\nfibfib(2)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that computes the factorial of a\
    \ given number. \nFor example, factorial(3) == 3 * 2 * 1\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp13yy80gw.jl:14\nin expression starting at\
    \ /tmp/tmp13yy80gw.jl:14\n"
  stdout: ''
  timestamp: 1659749194
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 \n        0\n    else if n == 1 \n        1\n    else \n      \
    \  fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n\
    fibfib(2)\n</cell>\n<text>\nExercise 3\nWrite a function to compute the n-th element\
    \ of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\n\
    candidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t\
    @test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) ==\
    \ 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp63m_n0ht.jl:11\nin expression starting at\
    \ /tmp/tmp63m_n0ht.jl:11\n"
  stdout: ''
  timestamp: 1659749194
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2\
    \ \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.5>\nfibfib(2)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that computes the factorial of a given number. \nFor example, factorial(4)\
    \ == 24. \nHint: use the factorial function from the Base package.\nusing Test\n\
    \n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz4v0muh3.jl:11\nin expression starting at\
    \ /tmp/tmpz4v0muh3.jl:11\n"
  stdout: ''
  timestamp: 1659749194
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2\
    \ \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.3>\nfibfib(0)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.3>\nfibfib(2)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(3)\n</cell>\n<code language=julia-1.3>\nfibfib(4)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.3>\nfibfib(6)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(7)\n</cell>\n<code language=julia-1.3>\nfibfib(8)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(9)\n</cell>\n<code language=julia-1.3>\nfibfib(10)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(11)\n</cell>\n<code language=julia-1.3>\nfibfib(12)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(13)\n</cell>\n<code language=julia-1.3>\nfibfib(14)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(15)\n</cell>\n<code language=julia-1.3>\nfibfib(16)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(17)\n</cell>\n<code language=julia-1.3>\nfibfib(18)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(19)\n</cell>\n<code language=julia-1.3>\nfibfib(20)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(21)\n</cell>\n<code language=julia-1.3>\nfibfib(22)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(23)\n</cell>\n<code language=julia-1.3>\nfibfib(24)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(25)\n</cell>\n<code language=julia-1.3>\nfibfib(26)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(27)\n</cell>\n<code language=julia-1.3>\nfibfib(28)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(29)\n</cell>\n<code language=julia-1.3>\nfibfib(30)\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsbl6s_by.jl:11\nin expression starting at\
    \ /tmp/tmpsbl6s_by.jl:11\n"
  stdout: ''
  timestamp: 1659749194
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the factorial of a\
    \ given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n \\times\
    \ n-1 \\times n-2 \\times ...$$\nFor example, $5! = 5 \\times 4 \\times 3 \\times\
    \ 2 \\times 1 = 120$\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t\
    @test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) ==\
    \ 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpap4b9_ot.jl:14\nin expression starting at\
    \ /tmp/tmpap4b9_ot.jl:14\n"
  stdout: ''
  timestamp: 1659749194
- exit_code: -1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0\n        0\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
    \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659749198
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0\n        0\n    elseif n == 1\n        1\n    elseif n == 2\n \
    \       1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that computes the n-th element\
    \ of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\n\
    candidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t\
    @test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) ==\
    \ 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7uo4g1ha.jl:19\nin expression starting at\
    \ /tmp/tmp7uo4g1ha.jl:19\n"
  stdout: ''
  timestamp: 1659749194
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        then 0\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that computes the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\
    \t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxpldjfa4.jl:10\nin expression starting at /tmp/tmpxpldjfa4.jl:10\n"
  stdout: ''
  timestamp: 1659749194
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n</cell>\n<code language=julia-1.5>\n@time fibfib(n);\n</cell>\n\
    <text>\nExercise 2\nWrite a function to compute the n-th element of the Fibonacci\
    \ sequence using memoization.\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\
    \t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) ==\
    \ 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpaiwbwt8h.jl:15\nin expression starting at\
    \ /tmp/tmpaiwbwt8h.jl:15\n"
  stdout: ''
  timestamp: 1659749194
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 then 0 else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(2)\n\
    </cell>\n<text>\nExercise 4\nWrite a function that computes the n-th element of\
    \ the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpsi2rhjyr.jl:9\nin expression starting at /tmp/tmpsi2rhjyr.jl:9\n"
  stdout: ''
  timestamp: 1659749194
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2\
    \ \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.5>\n@time fibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(3)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(10)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function to compute the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\
    \t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplfa3dvbv.jl:11\nin expression starting at\
    \ /tmp/tmplfa3dvbv.jl:11\n"
  stdout: ''
  timestamp: 1659749195
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(2)\n</cell>\n<text>\nExercise\nWrite a function to compute the n-th element\
    \ of the Fibonacci sequence using memoization.\nusing Test\n\n@testset begin\n\
    \ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\
    \t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpctv85dt3.jl:14\nin expression starting at\
    \ /tmp/tmpctv85dt3.jl:14\n"
  stdout: ''
  timestamp: 1659749195
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ to compute the factorial of a given number. \nFor example, factorial(5) = fib(5)\
    \ = 5.\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
    \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu3rrae1p.jl:14\nin expression starting at\
    \ /tmp/tmpu3rrae1p.jl:14\n"
  stdout: ''
  timestamp: 1659749195
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1\n        return 0\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(0)\n</cell>\n<code language=julia-1.5>\n@time fibfib(1)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(3)\n</cell>\n<code language=julia-1.5>\n@time fibfib(4)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(5)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(6)\n</cell>\n<code language=julia-1.5>\n@time fibfib(7)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(8)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(9)\n</cell>\n<code language=julia-1.5>\n@time fibfib(10)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(11)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(12)\n</cell>\n<code language=julia-1.5>\n@time fibfib(13)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(14)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(15)\n</cell>\n<code language=julia-1.5>\n@time fibfib(16)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(17)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(18)\n</cell>\n<code language=julia-1.5>\n@time fibfib(19)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(20)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(21)\n</cell>\n<code language=julia-1.5>\n@time fibfib(22)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(23)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(24)\n</cell>\n<code language=julia-1.5>\n@time fibfib(25)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(26)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(27)\n</cell>\n<code language=juli\nusing Test\n\n@testset begin\n\
    \ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\
    \t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplzlgz9ce.jl:14\nin expression starting at\
    \ /tmp/tmplzlgz9ce.jl:14\n"
  stdout: ''
  timestamp: 1659749195
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.0\nusing Test\n\
    \n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_pule1mu.jl:14\nin expression starting at\
    \ /tmp/tmp_pule1mu.jl:14\n"
  stdout: ''
  timestamp: 1659749192
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(2)\n</cell>\n<text>\nExercise 3\nWrite a function to compute the n-th\
    \ element of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\
    \ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\
    \t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5k0tkie4.jl:14\nin expression starting at\
    \ /tmp/tmp5k0tkie4.jl:14\n"
  stdout: ''
  timestamp: 1659749195
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        then 0\n    else fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n@time fibfib(0)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(1)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(3)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(4)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.0>\n@time fibfib(6)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(7)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(8)\n</cell>\n<code language=julia-1.0>\n@time fibfib(9)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(10)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(11)\n</cell>\n<code language=julia-1.0>\n@time fibfib(12)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(13)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(14)\n</cell>\n<code language=julia-1.0>\n@time fibfib(15)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(16)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(17)\n</cell>\n<code language=julia-1.0>\n@time fibfib(18)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(19)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(20)\n</cell>\n<code language=julia-1.0>\n@time fibfib(21)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(22)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(23)\n</cell>\n<code language=julia-1.0>\n@time fibfib(24)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(25)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(26)\n</cell>\n<code language=julia-1.0>\n@time fibfib(27)\n</cell>\n\
    <code language=\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
    \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpg6u_pkn1.jl:10\nin expression starting at /tmp/tmpg6u_pkn1.jl:10\n"
  stdout: ''
  timestamp: 1659749195
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n</cell>\n<code language=julia-1.5>\n@time fibfib(n);\n</cell>\n\
    <text>\nExercise\nWrite a function to compute the n-th element of the Fibonacci\
    \ sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\
    \t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) ==\
    \ 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyyesbe6e.jl:15\nin expression starting at\
    \ /tmp/tmpyyesbe6e.jl:15\n"
  stdout: ''
  timestamp: 1659749195
- exit_code: -1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0\n        0\n    elseif n == 1\n        1\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend\nfibfib(2)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function to compute the factorial of a number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659749199
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n\
    </cell>\n<text>\nExercise: Write a function that computes the n-th element of\
    \ the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcf0f_f_s.jl:14\nin expression starting at\
    \ /tmp/tmpcf0f_f_s.jl:14\n"
  stdout: ''
  timestamp: 1659749195
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        then 0\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that computes the factorial of a number. \nThe factorial of a number is defined\
    \ as the product of all positive integers less than or equal to the number. \n\
    For example, 5! = 5 x 4 x 3 x 2 x 1 = 120. \nWrite a recursive function factorial\
    \ that computes the factorial of a number. \nFor example, factorial(5) = 5 x 4\
    \ x 3 x 2 x 1 = 120.\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t\
    @test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) ==\
    \ 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpr_3taq5v.jl:10\nin expression starting at /tmp/tmpr_3taq5v.jl:10\n"
  stdout: ''
  timestamp: 1659749195
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\nfibfib(2)\n</cell>\n<text>\nExercise: Write\
    \ a function that computes the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\
    \t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdscnrcxw.jl:15\nin expression starting at\
    \ /tmp/tmpdscnrcxw.jl:15\n"
  stdout: ''
  timestamp: 1659749195
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
    \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphipvwcy1.jl:37\nin expression starting at\
    \ /tmp/tmphipvwcy1.jl:37\n"
  stdout: ''
  timestamp: 1659749195
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that computes the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\
    \t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplp6zz9i6.jl:14\nin expression starting at\
    \ /tmp/tmplp6zz9i6.jl:14\n"
  stdout: ''
  timestamp: 1659749195
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ to compute the factorial of a number. For example, factorial(5) = 5 x 4 x 3\
    \ x 2 x 1 = 120\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
    \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnu0jqo03.jl:14\nin expression starting at\
    \ /tmp/tmpnu0jqo03.jl:14\n"
  stdout: ''
  timestamp: 1659749195
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2\
    \ \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.5>\n@time fibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(3)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(4)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.5>\n@time fibfib(6)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(7)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(8)\n</cell>\n<code language=julia-1.5>\n@time fibfib(9)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(10)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(11)\n</cell>\n<code language=julia-1.5>\n@time fibfib(12)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(13)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(14)\n</cell>\n<code language=julia-1.5>\n@time fibfib(15)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(16)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(17)\n</cell>\n<code language=julia-1.5>\n@time fibfib(18)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(19)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(20)\n</cell>\n<code language=julia-1.5>\n@time fibfib(21)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(22)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(23)\n</cell>\n<code language=julia-1.5>\n@time fibfib(24)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(25)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(26)\n</cell>\n<code language=julia-1.5>\n@time fibfib(27)\n</cell>\n\
    \nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) ==\
    \ 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_l6ecyx5.jl:11\nin expression starting at\
    \ /tmp/tmp_l6ecyx5.jl:11\n"
  stdout: ''
  timestamp: 1659749195
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        then 0\n    else fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n@time fibfib(0)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(3)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(4)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.5>\n@time fibfib(6)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(7)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(8)\n</cell>\n<code language=julia-1.5>\n@time fibfib(9)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(10)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(11)\n</cell>\n<code language=julia-1.5>\n@time fibfib(12)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(13)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(14)\n</cell>\n<code language=julia-1.5>\n@time fibfib(15)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(16)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(17)\n</cell>\n<code language=julia-1.5>\n@time fibfib(18)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(19)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(20)\n</cell>\n<code language=julia-1.5>\n@time fibfib(21)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(22)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(23)\n</cell>\n<code language=julia-1.5>\n@time fibfib(24)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(25)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(26)\n</cell>\n<code language=julia-1.5>\n@time fibfib(27)\n</cell>\n\
    <code language=\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
    \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_qdwf317.jl:10\nin expression starting at /tmp/tmp_qdwf317.jl:10\n"
  stdout: ''
  timestamp: 1659749195
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 \n        0\n    else if n == 1 \n        0\n    else \n      \
    \  fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n\
    fibfib(2)\n</cell>\n<text>\nExercise 2\nWrite a function that computes the factorial\
    \ of a given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n\
    \ \\times n-1 \\times n-2 \\times ...$$\nFor example, $5! = 5 \\times 4 \\times\
    \ 3 \\times 2 \\times 1 = 120$\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\
    \t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) ==\
    \ 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_w1823d_.jl:11\nin expression starting at\
    \ /tmp/tmp_w1823d_.jl:11\n"
  stdout: ''
  timestamp: 1659749195
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\nfibfib(0)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(1)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(2)\n</cell>\n<code language=julia-1.0>\nfibfib(3)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(4)\n</cell>\n<code language=julia-1.0>\nfibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(6)\n</cell>\n<code language=julia-1.0>\nfibfib(7)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(8)\n</cell>\n<code language=julia-1.0>\nfibfib(9)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(10)\n</cell>\n<code language=julia-1.0>\nfibfib(11)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(12)\n</cell>\n<code language=julia-1.0>\nfibfib(13)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(14)\n</cell>\n<code language=julia-1.0>\nfibfib(15)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(16)\n</cell>\n<code language=julia-1.0>\nfibfib(17)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(18)\n</cell>\n<code language=julia-1.0>\nfibfib(19)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(20)\n</cell>\n<code language=julia-1.0>\nfibfib(21)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(22)\n</cell>\n<code language=julia-1.0>\nfibfib(23)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(24)\n</cell>\n<code language=julia-1.0>\nfibfib(25)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(26)\n</cell>\n<code language=julia-1.0>\nfibfib(27)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(28)\n</cell>\n<code language=julia-1.0>\nfibfib(29)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(30)\n</cell>\n<code language=julia-1.0>\nfibfib(31)\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzth_z9b7.jl:14\nin expression starting at\
    \ /tmp/tmpzth_z9b7.jl:14\n"
  stdout: ''
  timestamp: 1659749195
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n\
    </cell>\n<text>\nExercise 2\nWrite a function to compute the factorial of a given\
    \ number. \nFor example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1\nusing Test\n\
    \n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxx_cfq3x.jl:14\nin expression starting at\
    \ /tmp/tmpxx_cfq3x.jl:14\n"
  stdout: ''
  timestamp: 1659749195
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\nfibfib(2)\n</cell>\n<text>\nExercise 4\n\
    Write a function that computes the n-th element of the Fibonacci sequence using\
    \ recursion.\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
    \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw598yaul.jl:15\nin expression starting at\
    \ /tmp/tmpw598yaul.jl:15\n"
  stdout: ''
  timestamp: 1659749195
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0\n        0\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(3)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(4)\n</cell>\n<code language=julia-1.0>\n@time fibfib(5)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(6)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(7)\n</cell>\n<code language=julia-1.0>\n@time fibfib(8)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(9)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(10)\n</cell>\n<code language=julia-1.0>\n@time fibfib(11)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(12)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(13)\n</cell>\n<code language=julia-1.0>\n@time fibfib(14)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(15)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(16)\n</cell>\n<code language=julia-1.0>\n@time fibfib(17)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(18)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(19)\n</cell>\n<code language=julia-1.0>\n@time fibfib(20)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(21)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(22)\n</cell>\n<code language=julia-1.0>\n@time fibfib(23)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(24)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(25)\n</cell>\n<code language=julia-1.0>\n@time fibfib(26)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(27)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(28)\n</cell>\n<code language=julia-1.0>\n@time fibfib(29)\n</cell>\n\
    using Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\
    \t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg9m8wxac.jl:15\nin expression starting at\
    \ /tmp/tmpg9m8wxac.jl:15\n"
  stdout: ''
  timestamp: 1659749197
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        0\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n</cell>\n\
    <code language=julia-1.0>\nfibfib(3)\n</cell>\n<code language=julia-1.0>\nfibfib(4)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(n) for n in 0:5\n</cell>\n<code language=julia-1.0>\nfibfib(n) for n in\
    \ 0:10\n</cell>\n<code language=julia-1.0>\nfibfib(n) for n in 0:100\n</cell>\n\
    <code language=julia-1.0>\nfibfib(n) for n in 0:1000\n</cell>\n<code language=julia-1.0>\n\
    fibfib(n) for n in 0:10000\n</cell>\n<code language=julia-1.0>\nfibfib(n) for\
    \ n in 0:100000\n</cell>\n<code language=julia-1.0>\nfibfib(n) for n in 0:1000000\n\
    </cell>\n<code language=julia-1.0>\nfibfib(n) for n in 0:10000000\n</cell>\n<code\
    \ language=julia-1.0>\nfibfib(n) for n in 0:100000000\n</cell>\n<code language=julia-1.0>\n\
    fibfib(n) for n in 0:1000000000\n</cell>\n<code language=julia-1.0>\nfibfib(n)\
    \ for n in 0:10000000000\n</cell>\n<code language=julia-1.0>\nfibfib(n) for n\
    \ in 0:100000000000\n</cell>\n<code language=julia-1.0>\nfibfib(n) for n in 0:1000000000000\n\
    </cell>\n<code language=julia-1.0>\nfibfib(n) for n in 0:10000000000000\n</cell>\n\
    <code language=julia-1.0>\nfibfib(n) for n in 0:100000000000000\n</cell>\n<code\
    \ language=julia-1.0>\nfibfib(n) for n in 0:1000000000000000\n</cell>\n<code language=julia-1.0>\n\
    fibfib(n) for n in 0:10000000000000000\n</cell>\n<code language=julia-1.0>\nfibfib(n)\
    \ for n in 0:100000000000000000\n</cell>\n<code language=julia-1.0>\nfibfib(n)\
    \ for n in 0:1000000000000000000\n</cell>\n<code language=julia-1.0>\nfibfib(n)\
    \ for n in 0:10000000000000000000\n</cell>\n<code language=julia-1.0>\nfibfib(n)\
    \ for n in 0:100000000000000000000\n</cell>\n<code language=julia-1.0>\nfibfib(n)\
    \ for n in 0:1000000000000000000000\n</cell>\n\nusing Test\n\n@testset begin\n\
    \ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\
    \t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo6m_g8ym.jl:14\nin expression starting at\
    \ /tmp/tmpo6m_g8ym.jl:14\n"
  stdout: ''
  timestamp: 1659749197
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2\
    \ \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\
    \t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsy81yxy9.jl:11\nin expression starting at\
    \ /tmp/tmpsy81yxy9.jl:11\n"
  stdout: ''
  timestamp: 1659749197
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        then 0\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\nExercise\nWrite a function that\
    \ computes the n-th element of the Fibonacci sequence using recursion.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t\
    @test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9si9kgm1.jl:10\nin expression starting at /tmp/tmp9si9kgm1.jl:10\n"
  stdout: ''
  timestamp: 1659749197
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 then 0 else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(2)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the factorial of a\
    \ given number. For example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120\nusing Test\n\
    \n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpde_zqg85.jl:9\nin expression starting at /tmp/tmpde_zqg85.jl:9\n"
  stdout: ''
  timestamp: 1659749197
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0\n        0\n    else\n        if n == 1\n            0\n      \
    \  else\n            if n == 2\n                1\n            else\n        \
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        end\n    end\nend\n\
    fibfib(n::Int64)\n</cell>\n<code language=julia-1.5>\n@time fibfib(n);\n</cell>\n\
    <text>\nExercise: Write a function to compute the n-th element of the Fibonacci\
    \ sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\
    \t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) ==\
    \ 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzfgjonz9.jl:23\nin expression starting at\
    \ /tmp/tmpzfgjonz9.jl:23\n"
  stdout: ''
  timestamp: 1659749197
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        then 0\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that computes the factorial of a given number. \nThe factorial of a number $n$\
    \ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times .... \\times 2 \\times\
    \ 1$$\nWrite a function that computes the factorial of a given number using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\
    \t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpasetprq9.jl:10\nin expression starting at /tmp/tmpasetprq9.jl:10\n"
  stdout: ''
  timestamp: 1659749197
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2\
    \ \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.5>\nfibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(3)\n</cell>\n<code language=julia-1.5>\nfibfib(4)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.5>\nfibfib(10)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(100)\n</cell>\n<code language=julia-1.5>\nfibfib(1000)\n</cell>\n<code\
    \ language=julia-1.5>\nfibfib(10000)\n</cell>\n<code language=julia-1.5>\nfibfib(100000)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(1000000)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(10000000)\n</cell>\n<code language=julia-1.5>\nfibfib(100000000)\n</cell>\n\
    <code language=julia-1.5>\nfibfib(1000000000)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(10000000000)\n</cell>\n<code language=julia-1.5>\nfibfib(100000000000)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(10000000000000)\n</cell>\n<code language=julia-1.5>\nfibfib(100000000000000)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(1000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(10000000000000000)\n</cell>\n<code language=julia-1.5>\nfibfib(100000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(1000000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nfibfib(10000000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(100000000000000000000)\n</cell>\n<code language=julia-1.5>\nfibfib(1000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(10000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\nfibfib(100000000000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(1000000000000000000000000)\n</cell>\n\nusing Test\n\n@testset begin\n\n\
    candidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t\
    @test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) ==\
    \ 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0tbtn6rq.jl:11\nin expression starting at\
    \ /tmp/tmp0tbtn6rq.jl:11\n"
  stdout: ''
  timestamp: 1659749197
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2\
    \ \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<text>\nExercise 4\nWrite a function that computes the factorial of a\
    \ given number. For example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120.\nusing Test\n\
    \n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp87c922an.jl:11\nin expression starting at\
    \ /tmp/tmp87c922an.jl:11\n"
  stdout: ''
  timestamp: 1659749197
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1\n        return n\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that computes the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\
    \t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpemg4anag.jl:14\nin expression starting at\
    \ /tmp/tmpemg4anag.jl:14\n"
  stdout: ''
  timestamp: 1659749197
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2\
    \ \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.0>\nfibfib(1)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(2)\n</cell>\n<code language=julia-1.0>\nfibfib(3)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(4)\n</cell>\n<code language=julia-1.0>\nfibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(6)\n</cell>\n<code language=julia-1.0>\nfibfib(7)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(8)\n</cell>\n<code language=julia-1.0>\nfibfib(9)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(10)\n</cell>\n<code language=julia-1.0>\nfibfib(11)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(12)\n</cell>\n<code language=julia-1.0>\nfibfib(13)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(14)\n</cell>\n<code language=julia-1.0>\nfibfib(15)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(16)\n</cell>\n<code language=julia-1.0>\nfibfib(17)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(18)\n</cell>\n<code language=julia-1.0>\nfibfib(19)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(20)\n</cell>\n<code language=julia-1.0>\nfibfib(21)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(22)\n</cell>\n<code language=julia-1.0>\nfibfib(23)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(24)\n</cell>\n<code language=julia-1.0>\nfibfib(25)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(26)\n</cell>\n<code language=julia-1.0>\nfibfib(27)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(28)\n</cell>\n<code language=julia-1.0>\nfibfib(29)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(30)\n</cell>\n<code language=julia-1.0>\nfibfib(3\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi0ux5ydr.jl:11\nin expression starting at\
    \ /tmp/tmpi0ux5ydr.jl:11\n"
  stdout: ''
  timestamp: 1659749197
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that computes the factorial of a\
    \ given number. \nFor instance, the factorial of $5$ is $5 * 4 * 3 * 2 * 1$. \n\
    The factorial of $0$ is $1$. \nThe factorial of negative numbers is $NaN$.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t\
    @test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcxkqkm9d.jl:14\nin expression starting at\
    \ /tmp/tmpcxkqkm9d.jl:14\n"
  stdout: ''
  timestamp: 1659749197
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\nExercise 4\nWrite\
    \ a function that computes the factorial of a given number. \nThe factorial of\
    \ a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times .... 1\
    \ \\times 0 $$\nWrite a function that computes the factorial of a given number\
    \ using recursion.\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
    \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7w9ken20.jl:15\nin expression starting at\
    \ /tmp/tmp7w9ken20.jl:15\n"
  stdout: ''
  timestamp: 1659749197
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\nfibfib(2)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the n-th element of\
    \ the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr5k499_f.jl:14\nin expression starting at\
    \ /tmp/tmpr5k499_f.jl:14\n"
  stdout: ''
  timestamp: 1659749197
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1\n        return 0\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0q_2n72r.jl:14\nin expression starting at\
    \ /tmp/tmp0q_2n72r.jl:14\n"
  stdout: ''
  timestamp: 1659749197
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        then 0 \n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\nExercise\nWrite a function that\
    \ computes the n-th element of the Fibonacci sequence using recursion.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t\
    @test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprtjr7js0.jl:10\nin expression starting at /tmp/tmprtjr7js0.jl:10\n"
  stdout: ''
  timestamp: 1659749197
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0\n        0\n    elseif n == 1\n        1\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that computes the factorial of a given number. Hint: use the factorial\
    \ function defined above.\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\
    \t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) ==\
    \ 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2kqoplaw.jl:17\nin expression starting at\
    \ /tmp/tmp2kqoplaw.jl:17\n"
  stdout: ''
  timestamp: 1659749197
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 \n        0\n    else if n == 1 \n        1\n    else if n == 2\
    \ \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.0>\nfibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(3)\n</cell>\n<code language=julia-1.0>\nfibfib(4)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.0>\nfibfib(10)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(100)\n</cell>\n<code language=julia-1.0>\nfibfib(1000)\n</cell>\n<code\
    \ language=julia-1.0>\nfibfib(10000)\n</cell>\n<code language=julia-1.0>\nfibfib(100000)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(1000000)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(10000000)\n</cell>\n<code language=julia-1.0>\nfibfib(100000000)\n</cell>\n\
    <code language=julia-1.0>\nfibfib(1000000000)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(10000000000)\n</cell>\n<code language=julia-1.0>\nfibfib(100000000000)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(1000000000000)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(10000000000000)\n</cell>\n<code language=julia-1.0>\nfibfib(100000000000000)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(1000000000000000)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(10000000000000000)\n</cell>\n<code language=julia-1.0>\nfibfib(100000000000000000)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(1000000000000000000)\n</cell>\n<code\
    \ language=julia-1.0>\nfibfib(10000000000000000000)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(100000000000000000000)\n</cell>\n<code language=julia-1.0>\nfibfib(1000000000000000000000)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(10000000000000000000000)\n</cell>\n\
    <code language=julia-1.0>\nfibfib(100000000000000000000000)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(1000000000000000000000000)\n</cell>\n\nusing Test\n\n@testset begin\n\n\
    candidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t\
    @test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) ==\
    \ 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgz_jidtx.jl:11\nin expression starting at\
    \ /tmp/tmpgz_jidtx.jl:11\n"
  stdout: ''
  timestamp: 1659749197
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\n@time\
    \ fibfib(2)\n</cell>\n<text>\nExercise 3\nWrite a function to compute the n-th\
    \ Fibonacci number in the Fibonacci sequence (defined above).\nusing Test\n\n\
    @testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxpzbq227.jl:14\nin expression starting at\
    \ /tmp/tmpxpzbq227.jl:14\n"
  stdout: ''
  timestamp: 1659749197
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2\
    \ \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<text>\nExercise 7\nWrite a function that computes the factorial of a\
    \ given number. \nThe factorial of a number $n$ is defined as the product of all\
    \ the numbers from 1 to $n$. \nFor example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7\
    \ 2 \xD7 1 = 120. \nWrite a function that computes the factorial of a given number\
    \ using recursion. \nThe factorial of a number $n$ is defined as the product of\
    \ all the numbers from 1 to $n$. \nFor example, factorial(5) = 5 \xD7 4 \xD7 3\
    \ \xD7 2 \xD7 1 = 120. \nWrite a function that computes the factorial of a given\
    \ number using iteration. \nThe factorial of a number $n$ is defined as the product\
    \ of all the numbers from 1 to $n$. \nFor example, factorial(5) = 5 \xD7 4 \xD7\
    \ 3 \xD7 2 \xD7 1 = 120. \nWrite a function that computes the factorial of a given\
    \ number using an iterative loop. \nThe factorial of a number $n$ is defined as\
    \ the product of all the numbers from 1 to $n$. \nFor example, factorial(5) =\
    \ 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1 = 120. \nWrite a function that computes the factorial\
    \ of a given number using an iterative loop. \nThe factorial of a number $n$ is\
    \ defined as the product of all the numbers from 1 to $n$. \nFor example, factorial(5)\
    \ = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1 = 120. \nWrite a function that computes the\
    \ factorial of a given number using recursion. \nThe factorial of a number $n$\
    \ is defined as the product of all the numbers from 1 to $n$. \nFor example, factorial(5)\
    \ = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1 = 120. \nWrite a function that computes the\
    \ factorial of a given number using recursion. \nThe factorial of a number $n$\
    \ is defined as the product of all the numbers from 1 to $n$. \nFor example, factorial(5)\
    \ = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1 = 120. \nWrite a function that computes the\
    \ factorial of a given number using recursion. \nThe factorial of a number $n$\
    \ is defined \nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
    \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_gyi1wvb.jl:11\nin expression starting at\
    \ /tmp/tmp_gyi1wvb.jl:11\n"
  stdout: ''
  timestamp: 1659749198
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2\
    \ \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that computes the factorial of a\
    \ given number. \nThe factorial of a number $n$ is defined as the product of all\
    \ positive integers less than or equal to $n$. \nFor example, the factorial of\
    \ $3$ is $6$, the factorial of $5$ is $120$, the factorial of $6$ is $720$, and\
    \ so on. \nWrite a recursive function factorial(n) that computes the factorial\
    \ of a given number.\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t\
    @test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) ==\
    \ 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpav6xkvke.jl:11\nin expression starting at\
    \ /tmp/tmpav6xkvke.jl:11\n"
  stdout: ''
  timestamp: 1659749198
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.5>\nfibfib(2)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the factorial of a\
    \ given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)\
    \  (n-2)  ...  2  1  $$\nWrite a function that computes the factorial of a given\
    \ number. \nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)\
    \  ...  2  1  $$\nWrite a function that computes the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...\
    \  2  1  $$\nWrite a function that computes the factorial of a given number. \n\
    The factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2 \
    \ 1  $$\nWrite a function that computes the factorial of a given number. \nThe\
    \ factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1\
    \  $$\nWrite a function that computes the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite\
    \ a function that computes the factorial of a given number. \nThe factorial of\
    \ a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a\
    \ function that computes the factorial of a given number. \nThe factorial of a\
    \ number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function\
    \ that computes the factorial of a given number. \nThe factorial of a number $n$\
    \ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function that\
    \ computes the factorial of a given number. \nThe factorial of a number $n$ is\
    \ defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function that computes\
    \ the factorial of a given number. \nThe factorial of a number $n$ is defined\
    \ as:\n$$n! = n  (n-1)  (n-2)  ...\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcoq5_azq.jl:14\nin expression starting at\
    \ /tmp/tmpcoq5_azq.jl:14\n"
  stdout: ''
  timestamp: 1659749198
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 then 0 else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<text>\nExercise: Write a\
    \ function that computes the n-th Fibonacci number using the recursive formula.\n\
    using Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\
    \t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpoaakfv7_.jl:9\nin expression starting at /tmp/tmpoaakfv7_.jl:9\n"
  stdout: ''
  timestamp: 1659749198
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu9y20c5m.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu9y20c5m.jl:1\n\
    in expression starting at /tmp/tmpu9y20c5m.jl:1\n"
  stdout: ''
  timestamp: 1659749192
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.5>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(3)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(4)\n</cell>\n<code language=julia-1.5>\nfibfib(5)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(6)\n</cell>\n<code language=julia-1.5>\nfibfib(7)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(8)\n</cell>\n<code language=julia-1.5>\nfibfib(9)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(10)\n</cell>\n<code language=julia-1.5>\nfibfib(11)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(12)\n</cell>\n<code language=julia-1.5>\nfibfib(13)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(14)\n</cell>\n<code language=julia-1.5>\nfibfib(15)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(16)\n</cell>\n<code language=julia-1.5>\nfibfib(17)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(18)\n</cell>\n<code language=julia-1.5>\nfibfib(19)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(20)\n</cell>\n<code language=julia-1.5>\nfibfib(21)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(22)\n</cell>\n<code language=julia-1.5>\nfibfib(23)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(24)\n</cell>\n<code language=julia-1.5>\nfibfib(25)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(26)\n</cell>\n<code language=julia-1.5>\nfibfib(27)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(28)\n</cell>\n<code language=julia-1.5>\nfibfib(29)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(31)\n</cell>\n<code language=julia-1.5>\nfibfib(40)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(41)\n</cell>\n<code language=julia-1.5>\nfibfib(42)\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj82w8rvm.jl:14\nin expression starting at\
    \ /tmp/tmpj82w8rvm.jl:14\n"
  stdout: ''
  timestamp: 1659749192
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.5>\nfibfib(2)\n\
    </cell>\n<text>\nExercise 2\nWrite a function to compute the nth Fibonacci number\
    \ in the Fibbonacci sequence using recursion.\nusing Test\n\n@testset begin\n\n\
    candidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t\
    @test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) ==\
    \ 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd_5dk8lh.jl:14\nin expression starting at\
    \ /tmp/tmpd_5dk8lh.jl:14\n"
  stdout: ''
  timestamp: 1659749199
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        then 0\n    else fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that computes the n-th Fibonacci number using the recursive definition of fibfib(n).\
    \ \nThe function should take in input a positive integer n and return the n-th\
    \ Fibonacci number.\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
    \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpiigvr0ka.jl:10\nin expression starting at /tmp/tmpiigvr0ka.jl:10\n"
  stdout: ''
  timestamp: 1659749199
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2\
    \ \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function to compute the n-th element of the Fibonacci sequence using\
    \ recursion.\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
    \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv90i9hkg.jl:11\nin expression starting at\
    \ /tmp/tmpv90i9hkg.jl:11\n"
  stdout: ''
  timestamp: 1659749198
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1\n        return n\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    fibfib(2)\n</cell>\n<text>\nExercise 2\nWrite a function that computes the n-th\
    \ element of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\
    \ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\
    \t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6f1c4vt4.jl:15\nin expression starting at\
    \ /tmp/tmp6f1c4vt4.jl:15\n"
  stdout: ''
  timestamp: 1659749199
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.4>\nfibfib(2)\n\
    </cell>\n<text>\nExercise 2\nWrite a function to compute the factorial of a given\
    \ number. For example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120.\nusing Test\n\n\
    @testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6dsh19kg.jl:14\nin expression starting at\
    \ /tmp/tmp6dsh19kg.jl:14\n"
  stdout: ''
  timestamp: 1659749199
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        then 0 \n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\nfibfib(2)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that computes the n-th element of the Fibonacci\
    \ sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\
    \t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) ==\
    \ 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpktc6353k.jl:10\nin expression starting at /tmp/tmpktc6353k.jl:10\n"
  stdout: ''
  timestamp: 1659749199
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n\
    \        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(n::Int64)\n\
    </cell>\n<text>\nExercise\nWrite a function that computes the n-th element of\
    \ the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyvib4af4.jl:11\nin expression starting at\
    \ /tmp/tmpyvib4af4.jl:11\n"
  stdout: ''
  timestamp: 1659749199
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that computes the factorial of a number. For example, factorial(5) = 5 * 4 *\
    \ 3 * 2 * 1 = 120\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
    \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp61phaeb4.jl:14\nin expression starting at\
    \ /tmp/tmp61phaeb4.jl:14\n"
  stdout: ''
  timestamp: 1659749199
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.4>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype fibfib(2)\n</cell>\n<text>\n\
    Exercise: Write a function that computes the n-th element of the Fibonacci sequence\
    \ using recursion.\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
    \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw9aahi8_.jl:14\nin expression starting at\
    \ /tmp/tmpw9aahi8_.jl:14\n"
  stdout: ''
  timestamp: 1659749199
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\n@time\
    \ fibfib(0)\n</cell>\n<code language=julia-1.0>\n@time fibfib(1)\n</cell>\n<code\
    \ language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time\
    \ fibfib(10)\n</cell>\n<text>\nExercise: Write a function to compute the n-th\
    \ element of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\
    \ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\
    \t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyes0up5g.jl:14\nin expression starting at\
    \ /tmp/tmpyes0up5g.jl:14\n"
  stdout: ''
  timestamp: 1659749199
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(2)\n</\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8oryashw.jl:14\nin expression starting at\
    \ /tmp/tmp8oryashw.jl:14\n"
  stdout: ''
  timestamp: 1659749199
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(3)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(4)\n</cell>\n<code language=julia-1.0>\nfibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(6)\n</cell>\n<code language=julia-1.0>\nfibfib(7)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(8)\n</cell>\n<code language=julia-1.0>\nfibfib(9)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(10)\n</cell>\n<code language=julia-1.0>\nfibfib(11)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(12)\n</cell>\n<code language=julia-1.0>\nfibfib(13)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(14)\n</cell>\n<code language=julia-1.0>\nfibfib(15)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(16)\n</cell>\n<code language=julia-1.0>\nfibfib(17)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(18)\n</cell>\n<code language=julia-1.0>\nfibfib(19)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(20)\n</cell>\n<code language=julia-1.0>\nfibfib(21)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(22)\n</cell>\n<code language=julia-1.0>\nfibfib(23)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(24)\n</cell>\n<code language=julia-1.0>\nfibfib(25)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(26)\n</cell>\n<code language=julia-1.0>\nfibfib(27)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(28)\n</cell>\n<code language=julia-1.0>\nfibfib(29)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(30)\n</cell>\n<code language=julia-1.0>\nfibfib(31)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(32)\n</cell>\n<code language=julia-1.0>\nfibfib(33\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp11t7xudo.jl:14\nin expression starting at\
    \ /tmp/tmp11t7xudo.jl:14\n"
  stdout: ''
  timestamp: 1659749199
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2\
    \ \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(3)\n</cell>\n<code language=julia-1.5>\n@time fibfib(4)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(5)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(6)\n</cell>\n<code language=julia-1.5>\n@time fibfib(7)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(8)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(9)\n</cell>\n<code language=julia-1.5>\n@time fibfib(10)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(11)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(12)\n</cell>\n<code language=julia-1.5>\n@time fibfib(13)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(14)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(15)\n</cell>\n<code language=julia-1.5>\n@time fibfib(16)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(17)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(18)\n</cell>\n<code language=julia-1.5>\n@time fibfib(19)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(20)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(21)\n</cell>\n<code language=julia-1.5>\n@time fibfib(22)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(23)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(24)\n</cell>\n<code language=julia-1.5>\n@time fibfib(25)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(26)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(27)\n</cell>\n<code language=julia-1.5>\n@time fibfib(28)\n</cell>\n\
    \nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) ==\
    \ 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcsw863d_.jl:11\nin expression starting at\
    \ /tmp/tmpcsw863d_.jl:11\n"
  stdout: ''
  timestamp: 1659749199
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        then 0\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that computes the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\
    \t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxpldjfa4.jl:10\nin expression starting at /tmp/tmpxpldjfa4.jl:10\n"
  stdout: ''
  timestamp: 1659749194
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(2)\n</cell>\n<text>\nExercise 3\nWrite a function that computes the n-th\
    \ Fibonacci number in the Fibonacci sequence. \nThe Fibonacci sequence is defined\
    \ as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n    fibfib(2) == 1\n  \
    \  fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n    Please write a function\
    \ to efficiently compute the n-th element of the fibfib number sequence.\nHint:\
    \ Use recursion.\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
    \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcv10ky13.jl:14\nin expression starting at\
    \ /tmp/tmpcv10ky13.jl:14\n"
  stdout: ''
  timestamp: 1659749199
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n</cell>\n<code language=julia-1.5>\n@time fibfib(n);\n</cell>\n\
    <text>\nExercise 2\nWrite a function to compute the factorial of a given number.\
    \ \nHint: Use a recursive function.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3ncc18mk.jl:15\nin expression starting at\
    \ /tmp/tmp3ncc18mk.jl:15\n"
  stdout: ''
  timestamp: 1659749199
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        then 0\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t\
    @test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpi5g2d_3x.jl:10\nin expression starting at /tmp/tmpi5g2d_3x.jl:10\n"
  stdout: ''
  timestamp: 1659749190
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n</cell>\n<code language=julia-1.5>\n@time fibfib(n);\n</cell>\n\
    <text>\nExercise 2\nWrite a function to compute the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times\
    \ n-2 \\times ...$$\nFor example, $5! = 5 \\times 4 \\times 3 \\times 2 \\times\
    \ 1 = 120$\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
    \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqm8a1cs6.jl:15\nin expression starting at\
    \ /tmp/tmpqm8a1cs6.jl:15\n"
  stdout: ''
  timestamp: 1659749199
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2\
    \ \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(3)\n</cell>\n<code language=julia-1.5>\n@time fibfib(4)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(5)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(6)\n</cell>\n<code language=julia-1.5>\n@time fibfib(7)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(8)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(9)\n</cell>\n<code language=julia-1.5>\n@time fibfib(10)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(11)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(12)\n</cell>\n<code language=julia-1.5>\n@time fibfib(13)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(14)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(15)\n</cell>\n<code language=julia-1.5>\n@time fibfib(16)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(17)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(18)\n</cell>\n<code language=julia-1.5>\n@time fibfib(19)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(20)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(21)\n</cell>\n<code language=julia-1.5>\n@time fibfib(22)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(23)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(24)\n</cell>\n<code language=julia-1.5>\n@time fibfib(25)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(26)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(27)\n</cell>\n<code language=julia-1.5>\n@time fibfib(28)\n</cell>\n\
    using Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\
    \t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsd4bc688.jl:11\nin expression starting at\
    \ /tmp/tmpsd4bc688.jl:11\n"
  stdout: ''
  timestamp: 1659749199
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        then 0 \n        else fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n    end\nend\n</cell>\n<code language=julia-1.0>\n@time fibfib(1)\n\
    </cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(3)\n</cell>\n<code language=julia-1.0>\n@time fibfib(4)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(6)\n</cell>\n<code language=julia-1.0>\n@time fibfib(7)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(8)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(9)\n</cell>\n<code language=julia-1.0>\n@time fibfib(10)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(11)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(12)\n</cell>\n<code language=julia-1.0>\n@time fibfib(13)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(14)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(15)\n</cell>\n<code language=julia-1.0>\n@time fibfib(16)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(17)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(18)\n</cell>\n<code language=julia-1.0>\n@time fibfib(19)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(20)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(21)\n</cell>\n<code language=julia-1.0>\n@time fibfib(22)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(23)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(24)\n</cell>\n<code language=julia-1.0>\n@time fibfib(25)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(26)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(27)\n</cell>\n<code language=julia-1.0>\n@time fibfib(28)\n</cell>\n\
    \nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) ==\
    \ 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp45t4vt0x.jl:10\nin expression starting at /tmp/tmp45t4vt0x.jl:10\n"
  stdout: ''
  timestamp: 1659749199
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        then 0\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    </cell>\n<code language=julia-1.0>\n@time fibfib(n);\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function to compute the n-th Fibonacci number using the recursive\
    \ formula.\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
    \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpb_z7i4sq.jl:10\nin expression starting at /tmp/tmpb_z7i4sq.jl:10\n"
  stdout: ''
  timestamp: 1659749200
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\nfibfib(2)\n</cell>\n<text>\nProblem 7\nWrite\
    \ a function that computes the factorial of a number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjhgvzu9f.jl:15\nin expression starting at\
    \ /tmp/tmpjhgvzu9f.jl:15\n"
  stdout: ''
  timestamp: 1659749200
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0\n        0\n    elseif n == 1\n        1\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<text>\nExercise\nWrite a function that computes the\
    \ n-th element of the Fibonacci sequence using recursion.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz7xn4ngs.jl:17\nin expression starting at\
    \ /tmp/tmpz7xn4ngs.jl:17\n"
  stdout: ''
  timestamp: 1659749200
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(0)\n</cell>\n<code language=julia-1.5>\n@time fibfib(1)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(3)\n</cell>\n<code language=julia-1.5>\n@time fibfib(4)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(5)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(6)\n</cell>\n<code language=julia-1.5>\n@time fibfib(7)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(8)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(9)\n</cell>\n<code language=julia-1.5>\n@time fibfib(10)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(11)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(12)\n</cell>\n<code language=julia-1.5>\n@time fibfib(13)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(14)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(15)\n</cell>\n<code language=julia-1.5>\n@time fibfib(16)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(17)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(18)\n</cell>\n<code language=julia-1.5>\n@time fibfib(19)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(20)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(21)\n</cell>\n<code language=julia-1.5>\n@time fibfib(22)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(23)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(24)\n</cell>\n<code language=julia-1.5>\n@time fibfib(25)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(26)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(27)\n</cell>\n\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\
    \t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) ==\
    \ 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpokztgsvf.jl:14\nin expression starting at\
    \ /tmp/tmpokztgsvf.jl:14\n"
  stdout: ''
  timestamp: 1659749200
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that computes the factorial of a given number. \nThe factorial of\
    \ a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a\
    \ function that computes the factorial of a given number. \nThe factorial of a\
    \ number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function\
    \ that computes the factorial of a given number. \nThe factorial of a number $n$\
    \ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function that\
    \ computes the factorial of a given number. \nThe factorial of a number $n$ is\
    \ defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function that computes\
    \ the factorial of a given number. \nThe factorial of a number $n$ is defined\
    \ as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function that computes the\
    \ factorial of a given number. \nThe factorial of a number $n$ is defined as:\n\
    $$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function that computes the factorial\
    \ of a given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n\
    \  (n-1)  (n-2)  ...  2  1  $$\nWrite a function that computes the factorial of\
    \ a given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)\
    \  (n-2)  ...  2  1  $$\nWrite a function that computes the factorial of a given\
    \ number. \nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)\
    \  ...  2  1  $$\nWrite a function that computes the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...\
    \  2  1  $$\nWrite a function that computes the factorial of a given number. \n\
    The factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2 \
    \ 1  $$\nWrite a function that computes the \nusing Test\n\n@testset begin\n\n\
    candidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t\
    @test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) ==\
    \ 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk30gzuum.jl:15\nin expression starting at\
    \ /tmp/tmpk30gzuum.jl:15\n"
  stdout: ''
  timestamp: 1659749200
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 \n        0\n    else if n == 1 \n        1\n    else if n == 2\
    \ \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\
    \t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn9tb91f6.jl:11\nin expression starting at\
    \ /tmp/tmpn9tb91f6.jl:11\n"
  stdout: ''
  timestamp: 1659749200
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.4>\nfibfib(2)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the n-th element of\
    \ the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpaxmj_ayn.jl:14\nin expression starting at\
    \ /tmp/tmpaxmj_ayn.jl:14\n"
  stdout: ''
  timestamp: 1659749200
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2\
    \ \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function to compute the n-th element of the Fibonacci sequence using\
    \ recursion.\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
    \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp14gnaf24.jl:11\nin expression starting at\
    \ /tmp/tmp14gnaf24.jl:11\n"
  stdout: ''
  timestamp: 1659749200
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n\
    </cell>\n<text>\nExercise 2\nWrite a function to compute the factorial of a given\
    \ number. \nHint: use recursion.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9tu_1zik.jl:14\nin expression starting at\
    \ /tmp/tmp9tu_1zik.jl:14\n"
  stdout: ''
  timestamp: 1659749200
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.5>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<text>\nExercise: Write a function that computes\
    \ the n-th element of the Fibonacci sequence using recursion.\nusing Test\n\n\
    @testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzzln7d6_.jl:14\nin expression starting at\
    \ /tmp/tmpzzln7d6_.jl:14\n"
  stdout: ''
  timestamp: 1659749200
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype fibfib(2)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function to compute the n-th element of the Fibonacci sequence\
    \ using recursion.\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
    \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpob4dww33.jl:14\nin expression starting at\
    \ /tmp/tmpob4dww33.jl:14\n"
  stdout: ''
  timestamp: 1659749200
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(3)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(4)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(5)\n</cell>\n<code language=julia-1.5>\n@time fibfib(6)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(7)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(8)\n</cell>\n<code language=julia-1.5>\n@time fibfib(9)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(10)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(11)\n</cell>\n<code language=julia-1.5>\n@time fibfib(12)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(13)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(14)\n</cell>\n<code language=julia-1.5>\n@time fibfib(15)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(16)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(17)\n</cell>\n<code language=julia-1.5>\n@time fibfib(18)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(19)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(20)\n</cell>\n<code language=julia-1.5>\n@time fibfib(21)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(22)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(23)\n</cell>\n<code language=julia-1.5>\n@time fibfib(24)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(25)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(26)\n</cell>\n<code language=julia-1.5>\n@time fibfib(27)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(28)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(29)\n</cell\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\
    \t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) ==\
    \ 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3dykqe84.jl:14\nin expression starting at\
    \ /tmp/tmp3dykqe84.jl:14\n"
  stdout: ''
  timestamp: 1659749200
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.4>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype fibfib(2)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n</cell>\n\
    <code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n</cell>\n\
    <code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n</cell>\n\
    <code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n</cell>\n\
    <code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.\nusing Test\n\
    \n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0lytkgv_.jl:14\nin expression starting at\
    \ /tmp/tmp0lytkgv_.jl:14\n"
  stdout: ''
  timestamp: 1659749200
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        then 0\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\nExercise 4\nWrite a function\
    \ that computes the factorial of a given number. \nHint: use recursion.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t\
    @test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpa0rom_55.jl:10\nin expression starting at /tmp/tmpa0rom_55.jl:10\n"
  stdout: ''
  timestamp: 1659749200
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(n::Int64) = (n==0 || n==1) ? 0 : (fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3))\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(n::Int64) = (n==0 || n==1) ? 0 : (fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3))\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(n::Int64) = (n==0 || n==1) ? 0 : (fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3))\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(n::Int64) = (n==0 || n==1) ? 0 : (fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3))\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(n::Int64) = (n==0 || n==1) ? 0 : (fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3))\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(n::Int64) = (n==0 || n==1) ? 0 : (fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3))\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(n::Int64) = (n==0 || n==1) ? 0 : (fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3))\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(n::Int64) = (n==0 || n==1) ? 0 : (fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3))\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(n::Int64) = (n==\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw9em_c48.jl:14\nin expression starting at\
    \ /tmp/tmpw9em_c48.jl:14\n"
  stdout: ''
  timestamp: 1659749200
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        then 0\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that computes the factorial of a given number. \nFor example, factorial(5) =\
    \ 5 x 4 x 3 x 2 x 1 = 120\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\
    \t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) ==\
    \ 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprxj3z7e6.jl:10\nin expression starting at /tmp/tmprxj3z7e6.jl:10\n"
  stdout: ''
  timestamp: 1659749200
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        then 0\n    else fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(2)\n</cell\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\
    \t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) ==\
    \ 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfty8lkjn.jl:10\nin expression starting at /tmp/tmpfty8lkjn.jl:10\n"
  stdout: ''
  timestamp: 1659749200
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        then 0\n    else fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that computes the factorial of a number. \nThe factorial of a number $n$ is\
    \ defined as:\n$$n! = n \\times n-1 \\times n-2 \\times .... 1 \\times 0 $$\n\
    Write a function that computes the factorial of a number using recursion.\nThe\
    \ factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\\
    times .... 1 \\times 0 $$\nWrite a function that computes the factorial of a number\
    \ using recursion.\nThe factorial of a number $n$ is defined as:\n$$n! = n \\\
    times n-1 \\times n-2 \\times .... 1 \\times 0 $$\nWrite a function that computes\
    \ the factorial of a number using recursion.\nThe factorial of a number $n$ is\
    \ defined as:\n$$n! = n \\times n-1 \\times n-2 \\times .... 1 \\times 0 $$\n\
    Write a function that computes the factorial of a number using recursion.\nThe\
    \ factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\\
    times .... 1 \\times 0 $$\nWrite a function that computes the factorial of a number\
    \ using recursion.\nThe factorial of a number $n$ is defined as:\n$$n! = n \\\
    times n-1 \\times n-2 \\times .... 1 \\times 0 $$\nWrite a function that computes\
    \ the factorial of a number using recursion.\nThe factorial of a number $n$ is\
    \ defined as:\n$$n! = n \\times n-1 \\times n-2 \\times .... 1 \\times 0 $$\n\
    Write a function that computes the factorial of a number using recursion.\nThe\
    \ factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\\
    times .... 1 \\times 0 $$\nWrite a function that computes the factorial of a number\
    \ using recursion.\nThe factorial of a number $n$ is defined as:\n$$n! = n \\\
    times n-1 \\times n-2 \\times .... 1 \\times 0 $$\nWrite a function that computes\
    \ the factorial of a number using recursion.\nThe factorial of a number $n$ is\
    \ defined as:\n$$n! = n \\times n-1 \\times n-2 \nusing Test\n\n@testset begin\n\
    \ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\
    \t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8jt4vlrr.jl:10\nin expression starting at /tmp/tmp8jt4vlrr.jl:10\n"
  stdout: ''
  timestamp: 1659749200
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        then 0\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\nfibfib(2)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that computes the n-th element of the Fibonacci\
    \ sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\
    \t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) ==\
    \ 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpl4hpt6vv.jl:10\nin expression starting at /tmp/tmpl4hpt6vv.jl:10\n"
  stdout: ''
  timestamp: 1659749201
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2\
    \ \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.0>\n@time fibfib(2)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(1)\n</cell>\n<code language=julia-1.0>\n@time fibfib(0)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(-1)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(-2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(-3)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(-4)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(-5)\n</cell>\n<code language=julia-1.0>\n@time fibfib(-6)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(-7)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(-8)\n</cell>\n<code language=julia-1.0>\n@time fibfib(-9)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(-10)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(-11)\n</cell>\n<code language=julia-1.0>\n@time fibfib(-12)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(-13)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(-14)\n</cell>\n<code language=julia-1.0>\n@time fibfib(-15)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(-16)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(-17)\n</cell>\n<code language=julia-1.0>\n@time fibfib(-18)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(-19)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(-20)\n</cell>\n<code language=julia-1.0>\n@time fibfib(-21)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(-22)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(-23)\n</cell>\n<code language=julia-1.0>\n@time fibfib(-24)\n</cell>\n\
    <code language=julia-1.0\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\
    \t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) ==\
    \ 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzw2_vthn.jl:11\nin expression starting at\
    \ /tmp/tmpzw2_vthn.jl:11\n"
  stdout: ''
  timestamp: 1659749201
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        then 0\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that computes the factorial of a number. \nThe factorial of a number $n$ is\
    \ defined as:\n$$n! = n \\times n-1 \\times n-2 \\times .... 1 \\times 0 $$\n\
    For example, $5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120$\nusing Test\n\
    \n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpikeiax81.jl:10\nin expression starting at /tmp/tmpikeiax81.jl:10\n"
  stdout: ''
  timestamp: 1659749201
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        then 0\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\nExercise\nWrite a function that\
    \ computes the n-th Fibonacci number using the recursive definition of fibfib().\n\
    using Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\
    \t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplmsd566r.jl:10\nin expression starting at /tmp/tmplmsd566r.jl:10\n"
  stdout: ''
  timestamp: 1659749201
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return n\n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(1)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(0)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(-1)\n</cell>\n<code language=julia-1.5>\n@time fibfib(-2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(-3)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(-4)\n</cell>\n<code language=julia-1.5>\n@time fibfib(-5)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(-6)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(-7)\n</cell>\n<code language=julia-1.5>\n@time fibfib(-8)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(-9)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(-10)\n</cell>\n<code language=julia-1.5>\n@time fibfib(-11)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(-12)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(-13)\n</cell>\n<code language=julia-1.5>\n@time fibfib(-14)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(-15)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(-16)\n</cell>\n<code language=julia-1.5>\n@time fibfib(-17)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(-18)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(-19)\n</cell>\n<code language=julia-1.5>\n@time fibfib(-20)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(-21)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(-22)\n</cell>\n<code language=julia-1.5>\n@time fibfib(-23)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(-24)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(-25)\n</cell>\n<code language=julia-\nusing Test\n\n@testset begin\n\
    \ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\
    \t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsrxzghq8.jl:14\nin expression starting at\
    \ /tmp/tmpsrxzghq8.jl:14\n"
  stdout: ''
  timestamp: 1659749201
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        0\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ to compute the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqwaydpww.jl:15\nin expression starting at\
    \ /tmp/tmpqwaydpww.jl:15\n"
  stdout: ''
  timestamp: 1659749202
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2\
    \ \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.5>\nfibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(3)\n</cell>\n<code language=julia-1.5>\nfibfib(4)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.5>\nfibfib(6)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(7)\n</cell>\n<code language=julia-1.5>\nfibfib(8)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(9)\n</cell>\n<code language=julia-1.5>\nfibfib(10)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(11)\n</cell>\n<code language=julia-1.5>\nfibfib(12)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(13)\n</cell>\n<code language=julia-1.5>\nfibfib(14)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(15)\n</cell>\n<code language=julia-1.5>\nfibfib(16)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(17)\n</cell>\n<code language=julia-1.5>\nfibfib(18)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(19)\n</cell>\n<code language=julia-1.5>\nfibfib(20)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(21)\n</cell>\n<code language=julia-1.5>\nfibfib(22)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(23)\n</cell>\n<code language=julia-1.5>\nfibfib(24)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(25)\n</cell>\n<code language=julia-1.5>\nfibfib(26)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(27)\n</cell>\n<code language=julia-1.5>\nfibfib(28)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(29)\n</cell>\n<code language=julia-1.5>\nfibfib(30)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(31)\n</cell>\n<code language=julia-1.5>\nfibfib(\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7lcqfpe2.jl:11\nin expression starting at\
    \ /tmp/tmp7lcqfpe2.jl:11\n"
  stdout: ''
  timestamp: 1659749202
- exit_code: -1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0\n        0\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
    \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659749198
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(3)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(4)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(5)\n</cell>\n<code language=julia-1.5>\n@time fibfib(6)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(7)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(8)\n</cell>\n<code language=julia-1.5>\n@time fibfib(9)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(10)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(11)\n</cell>\n<code language=julia-1.5>\n@time fibfib(12)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(13)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(14)\n</cell>\n<code language=julia-1.5>\n@time fibfib(15)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(16)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(17)\n</cell>\n<code language=julia-1.5>\n@time fibfib(18)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(19)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(20)\n</cell>\n<code language=julia-1.5>\n@time fibfib(21)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(22)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(23)\n</cell>\n<code language=julia-1.5>\n@time fibfib(24)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(25)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(26)\n</cell>\n<code language=julia-1.5>\n@time fibfib(27)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(28)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(29)\n</cell\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\
    \t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) ==\
    \ 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0u0jojbl.jl:14\nin expression starting at\
    \ /tmp/tmp0u0jojbl.jl:14\n"
  stdout: ''
  timestamp: 1659749202
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\n@time\
    \ fibfib(2)\n</cell>\n<text>\nExercise 3\nWrite a function to compute the n-th\
    \ element of the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\
    \ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\
    \t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz968fdt5.jl:14\nin expression starting at\
    \ /tmp/tmpz968fdt5.jl:14\n"
  stdout: ''
  timestamp: 1659749192
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n</cell>\n<code language=julia-1.5>\n@time fibfib(n);\n</cell>\n\
    <text>\nExercise 2\nWrite a function that computes the n-th element of the Fibonacci\
    \ sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\
    \t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) ==\
    \ 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj_n77vyu.jl:15\nin expression starting at\
    \ /tmp/tmpj_n77vyu.jl:15\n"
  stdout: ''
  timestamp: 1659749202
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype fibfib(2)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that computes the n-th element of the Fibonacci sequence\
    \ using recursion.\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
    \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb3ml8cdb.jl:14\nin expression starting at\
    \ /tmp/tmpb3ml8cdb.jl:14\n"
  stdout: ''
  timestamp: 1659749202
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.5>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\
    \t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) ==\
    \ 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdpyl21p8.jl:14\nin expression starting at\
    \ /tmp/tmpdpyl21p8.jl:14\n"
  stdout: ''
  timestamp: 1659749202
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1\n        return n\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    fibfib(2)\n</cell>\n<text>\nExercise 2\nWrite a function to compute the factorial\
    \ of a given number. For example, factorial(4) == 24. Make sure your function\
    \ works with negative numbers as well.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsrrrusrk.jl:15\nin expression starting at\
    \ /tmp/tmpsrrrusrk.jl:15\n"
  stdout: ''
  timestamp: 1659749202
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 then 0 else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t\
    @test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmph8ub3pg_.jl:9\nin expression starting at /tmp/tmph8ub3pg_.jl:9\n"
  stdout: ''
  timestamp: 1659749202
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1\n        return 0\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\nfibfib(2)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the n-th element of\
    \ the Fibonacci sequence using recursion.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvc9c5rjl.jl:14\nin expression starting at\
    \ /tmp/tmpvc9c5rjl.jl:14\n"
  stdout: ''
  timestamp: 1659749202
- exit_code: -1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1\n        return n\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t\
    @test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) ==\
    \ 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659749206
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.0>\n@time fibfib(1)\n</cell>\n<code\
    \ language=julia-1.0>\n@time fibfib(0)\n</cell>\n<code language=julia-1.0>\n@time\
    \ fibfib(-1)\n</cell>\n<code language=julia-1.0>\n@time fibfib(-2)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(-3)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(-4)\n</cell>\n<code language=julia-1.0>\n@time fibfib(-5)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(-6)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(-7)\n</cell>\n<code language=julia-1.0>\n@time fibfib(-8)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(-9)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(-10)\n</cell>\n<code language=julia-1.0>\n@time fibfib(-11)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(-12)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(-13)\n</cell>\n<code language=julia-1.0>\n@time fibfib(-14)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(-15)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(-16)\n</cell>\n<code language=julia-1.0>\n@time fibfib(-17)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(-18)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(-19)\n</cell>\n<code language=julia-1.0>\n@time fibfib(-20)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(-21)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(-22)\n</cell>\n<code language=julia-1.0>\n@time fibfib(-23)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(-24)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(-25)\n</cell>\n<code language=julia-\nusing Test\n\n@testset begin\n\
    \ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\
    \t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbwv1hiy_.jl:14\nin expression starting at\
    \ /tmp/tmpbwv1hiy_.jl:14\n"
  stdout: ''
  timestamp: 1659749202
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\nfibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    </cell>\n<code language=julia-1.4>\n@time fibfib(n);\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function to compute the n-th element of the Fibonacci sequence using\
    \ recursion.\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
    \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9gh4kfs5.jl:15\nin expression starting at\
    \ /tmp/tmp9gh4kfs5.jl:15\n"
  stdout: ''
  timestamp: 1659749202
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        0\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n</cell>\n\
    <code language=julia-1.0>\nfibfib(3)\n</cell>\n<code language=julia-1.0>\nfibfib(4)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(6)\n</cell>\n<code language=julia-1.0>\nfibfib(7)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(8)\n</cell>\n<code language=julia-1.0>\nfibfib(9)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(10)\n</cell>\n<code language=julia-1.0>\nfibfib(11)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(12)\n</cell>\n<code language=julia-1.0>\nfibfib(13)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(14)\n</cell>\n<code language=julia-1.0>\nfibfib(15)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(16)\n</cell>\n<code language=julia-1.0>\nfibfib(17)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(18)\n</cell>\n<code language=julia-1.0>\nfibfib(19)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(20)\n</cell>\n<code language=julia-1.0>\nfibfib(21)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(22)\n</cell>\n<code language=julia-1.0>\nfibfib(23)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(24)\n</cell>\n<code language=julia-1.0>\nfibfib(25)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(26)\n</cell>\n<code language=julia-1.0>\nfibfib(27)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(28)\n</cell>\n<code language=julia-1.0>\nfibfib(29)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(31)\n</cell>\n<code language=julia-1.0>\nfibfib(40)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(41)\n</cell>\n<code language=julia-1.0>\nfibfib(42)\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp08zumy2u.jl:14\nin expression starting at\
    \ /tmp/tmp08zumy2u.jl:14\n"
  stdout: ''
  timestamp: 1659749202
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0\n        0\n    elseif n == 1\n        0\n    elseif n == 2\n \
    \       1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\n\
    end\n</cell>\n<code language=julia-1.0>\nfibfib(1)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(2)\n</cell>\n<code language=julia-1.0>\nfibfib(3)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(4)\n</cell>\n<code language=julia-1.0>\nfibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(6)\n</cell>\n<code language=julia-1.0>\nfibfib(7)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(8)\n</cell>\n<code language=julia-1.0>\nfibfib(9)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(10)\n</cell>\n<code language=julia-1.0>\nfibfib(11)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(12)\n</cell>\n<code language=julia-1.0>\nfibfib(13)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(14)\n</cell>\n<code language=julia-1.0>\nfibfib(15)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(16)\n</cell>\n<code language=julia-1.0>\nfibfib(17)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(18)\n</cell>\n<code language=julia-1.0>\nfibfib(19)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(20)\n</cell>\n<code language=julia-1.0>\nfibfib(21)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(22)\n</cell>\n<code language=julia-1.0>\nfibfib(23)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(24)\n</cell>\n<code language=julia-1.0>\nfibfib(25)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(26)\n</cell>\n<code language=julia-1.0>\nfibfib(27)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(28)\n</cell>\n<code language=julia-1.0>\nfibfib(29)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(30)\n</cell>\n<code language=julia-1.0>\nfibfib(31)\n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq55fmdzj.jl:19\nin expression starting at\
    \ /tmp/tmpq55fmdzj.jl:19\n"
  stdout: ''
  timestamp: 1659749202
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 \n        0\n    else if n == 1 \n        1\n    else \n      \
    \  fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\
    \t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3qsi2cuc.jl:11\nin expression starting at\
    \ /tmp/tmp3qsi2cuc.jl:11\n"
  stdout: ''
  timestamp: 1659749202
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        0\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t\
    @test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) ==\
    \ 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpkfyaoz0j.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpkfyaoz0j.jl:1\n\
    in expression starting at /tmp/tmpkfyaoz0j.jl:1\n"
  stdout: ''
  timestamp: 1659749202
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1\n        return n\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\
    \t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) ==\
    \ 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqcwe3qji.jl:14\nin expression starting at\
    \ /tmp/tmpqcwe3qji.jl:14\n"
  stdout: ''
  timestamp: 1659749202
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that computes the n-th element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\
    \t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw0ssxac1.jl:15\nin expression starting at\
    \ /tmp/tmpw0ssxac1.jl:15\n"
  stdout: ''
  timestamp: 1659749202
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        then 0\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that computes the factorial of a given number. \nThe factorial of a number $n$\
    \ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times .... \\times 2 \\times\
    \ 1$$\nWrite a function that computes the factorial of a given number using recursion.\n\
    The factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2\
    \ \\times .... \\times 2 \\times 1$$\nWrite a function that computes the factorial\
    \ of a given number using recursion and a while loop.\nThe factorial of a number\
    \ $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times .... \\times 2\
    \ \\times 1$$\nWrite a function that computes the factorial of a given number\
    \ using recursion and a while loop and a for loop.\nThe factorial of a number\
    \ $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times .... \\times 2\
    \ \\times 1$$\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
    \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4ulfm474.jl:10\nin expression starting at /tmp/tmp4ulfm474.jl:10\n"
  stdout: ''
  timestamp: 1659749202
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the factorial of a\
    \ given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)\
    \  (n-2)  ...  2  1  $$\nWrite a function that computes the factorial of a given\
    \ number. \nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)\
    \  ...  2  1  $$\nWrite a function that computes the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...\
    \  2  1  $$\nWrite a function that computes the factorial of a given number. \n\
    The factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2 \
    \ 1  $$\nWrite a function that computes the factorial of a given number. \nThe\
    \ factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1\
    \  $$\nWrite a function that computes the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite\
    \ a function that computes the factorial of a given number. \nThe factorial of\
    \ a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a\
    \ function that computes the factorial of a given number. \nThe factorial of a\
    \ number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function\
    \ that computes the factorial of a given number. \nThe factorial of a number $n$\
    \ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function that\
    \ computes the factorial of a given number. \nThe factorial of a number $n$ is\
    \ defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function that computes\
    \ the factorial of a given number. \nThe factorial of a number $n$ is defined\
    \ as:\n$$n! = n  (n-1)  (n-2)  ...\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe0gtrdgs.jl:14\nin expression starting at\
    \ /tmp/tmpe0gtrdgs.jl:14\n"
  stdout: ''
  timestamp: 1659749203
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2\
    \ \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.5>\n@time fibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(3)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(4)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.5>\n@time fibfib(6)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(7)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(8)\n</cell>\n<code language=julia-1.5>\n@time fibfib(9)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(10)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(11)\n</cell>\n<code language=julia-1.5>\n@time fibfib(12)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(13)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(14)\n</cell>\n<code language=julia-1.5>\n@time fibfib(15)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(16)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(17)\n</cell>\n<code language=julia-1.5>\n@time fibfib(18)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(19)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(20)\n</cell>\n<code language=julia-1.5>\n@time fibfib(21)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(22)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(23)\n</cell>\n<code language=julia-1.5>\n@time fibfib(24)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(25)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(26)\n</cell>\n<code language=julia-1.5>\n@time fibfib(27)\n</cell>\n\
    <code language=\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
    \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0_k_764y.jl:11\nin expression starting at\
    \ /tmp/tmp0_k_764y.jl:11\n"
  stdout: ''
  timestamp: 1659749203
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.5>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(2)\n</cell>\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\
    \t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) ==\
    \ 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdpyl21p8.jl:14\nin expression starting at\
    \ /tmp/tmpdpyl21p8.jl:14\n"
  stdout: ''
  timestamp: 1659749202
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\nfibfib(2)\n</cell>\n<text>\nExercise 3\n\
    Write a function to compute the nth element of the Fibonacci sequence using recursion.\n\
    using Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\
    \t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp_7rjh0q.jl:15\nin expression starting at\
    \ /tmp/tmpp_7rjh0q.jl:15\n"
  stdout: ''
  timestamp: 1659749203
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2\
    \ \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(3)\n</cell>\n<code language=julia-1.5>\n@time fibfib(10)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that computes the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times\
    \ n-2 \\times .... 1 $$\nFor example, $5! = 5 \\times 4 \\times 3 \\times 2 \\\
    times 1 = 120$\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
    \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7c1krcy0.jl:11\nin expression starting at\
    \ /tmp/tmp7c1krcy0.jl:11\n"
  stdout: ''
  timestamp: 1659749203
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.4>\nfibfib(2)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype fibfib(2)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n</cell>\n\
    <code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n</cell>\n\
    <code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n</cell>\n\
    <code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n@code_warntype\
    \ fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n</cell>\n\
    <code language=julia-1.4>\n@code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype fibfib(n::Int64)\n</cell>\n<code language=julia-1.\nusing Test\n\
    \n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0lytkgv_.jl:14\nin expression starting at\
    \ /tmp/tmp0lytkgv_.jl:14\n"
  stdout: ''
  timestamp: 1659749200
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 \n        0\n    else if n == 1 \n        1\n    else if n == 2\
    \ \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.0>\nfibfib(2)\n</cell>\n<text>\nProblem 3\nWrite\
    \ a function to compute the factorial of a given number. For example, factorial(5)\
    \ = 5 * 4 * 3 * 2 * 1 = 120.\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\
    \t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) ==\
    \ 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpex9b1as5.jl:11\nin expression starting at\
    \ /tmp/tmpex9b1as5.jl:11\n"
  stdout: ''
  timestamp: 1659749203
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return n\n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(0)\n</cell>\n<code language=julia-1.5>\n@time fibfib(1)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(3)\n</cell>\n<code language=julia-1.5>\n@time fibfib(4)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(5)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(6)\n</cell>\n<code language=julia-1.5>\n@time fibfib(7)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(8)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(9)\n</cell>\n<code language=julia-1.5>\n@time fibfib(10)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(11)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(12)\n</cell>\n<code language=julia-1.5>\n@time fibfib(13)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(14)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(15)\n</cell>\n<code language=julia-1.5>\n@time fibfib(16)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(17)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(18)\n</cell>\n<code language=julia-1.5>\n@time fibfib(19)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(20)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(21)\n</cell>\n<code language=julia-1.5>\n@time fibfib(22)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(23)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(24)\n</cell>\n<code language=julia-1.5>\n@time fibfib(25)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(26)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(27)\n</cell>\n<code language=\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5)\
    \ == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_w2v640c.jl:14\nin expression starting at\
    \ /tmp/tmp_w2v640c.jl:14\n"
  stdout: ''
  timestamp: 1659749203
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0\n        0\n    elseif n == 1\n        0\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that computes the factorial of a number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpogib8pqh.jl:17\nin expression starting at\
    \ /tmp/tmpogib8pqh.jl:17\n"
  stdout: ''
  timestamp: 1659749204
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        0\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\nExercise: Write a function that\
    \ computes the n-th element of the Fibonacci sequence using recursion.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t\
    @test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) ==\
    \ 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe6f_za84.jl:15\nin expression starting at\
    \ /tmp/tmpe6f_za84.jl:15\n"
  stdout: ''
  timestamp: 1659749203
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(2)\n</cell>\n<code language=julia-1.5>\n@time fibfib(1)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(0)\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(-1)\n</cell>\n<code language=julia-1.5>\n@time fibfib(-2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(-3)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(-4)\n</cell>\n<code language=julia-1.5>\n@time fibfib(-5)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(-6)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(-7)\n</cell>\n<code language=julia-1.5>\n@time fibfib(-8)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(-9)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(-10)\n</cell>\n<code language=julia-1.5>\n@time fibfib(-11)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(-12)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(-13)\n</cell>\n<code language=julia-1.5>\n@time fibfib(-14)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(-15)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(-16)\n</cell>\n<code language=julia-1.5>\n@time fibfib(-17)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(-18)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(-19)\n</cell>\n<code language=julia-1.5>\n@time fibfib(-20)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(-21)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(-22)\n</cell>\n<code language=julia-1.5>\n@time fibfib(-23)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(-24)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(-25)\n</cell>\n<code language=julia-\nusing Test\n\n@testset begin\n\
    \ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\
    \t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphmnv_9dh.jl:14\nin expression starting at\
    \ /tmp/tmphmnv_9dh.jl:14\n"
  stdout: ''
  timestamp: 1659749204
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the factorial of a\
    \ given number. \nThe factorial of a number is defined as the product of all positive\
    \ integers less than or equal to the number.\nFor example, 5! = 5 x 4 x 3 x 2\
    \ x 1 = 120.\nWrite a function that computes the factorial of a given number using\
    \ recursion.\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
    \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdpbxz2eg.jl:14\nin expression starting at\
    \ /tmp/tmpdpbxz2eg.jl:14\n"
  stdout: ''
  timestamp: 1659749203
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) \nend\n</cell>\n<code language=julia-1.0>\nfibfib(2)\n\
    </cell>\n<text>\nProblem 3\nWrite a function to compute the factorial of a given\
    \ number. \nFor example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120\nusing Test\n\n\
    @testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2) == 1)\n\t@test(candidate(1)\
    \ == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10)\
    \ == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp834kmr0w.jl:14\nin expression starting at\
    \ /tmp/tmp834kmr0w.jl:14\n"
  stdout: ''
  timestamp: 1659749204
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0 || n == 1\n        return n\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(2)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that computes the factorial of a given number. For example, factorial(5)\
    \ = 5 x 4 x 3 x 2 x 1 = 120\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\
    \t@test(candidate(2) == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) ==\
    \ 4)\n\t@test(candidate(8) == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12)\
    \ == 274)\n\t@test(candidate(14) == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprveh3qa8.jl:15\nin expression starting at\
    \ /tmp/tmprveh3qa8.jl:15\n"
  stdout: ''
  timestamp: 1659749203
- exit_code: 1
  program: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
    \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    \    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n                \"\"\"\nfunction fibfib(n::Int64)::Int64 \n\
    \    if n == 0\n        0\n    elseif n == 1\n        1\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(1)\n</cell>\n<code language=julia-1.5>\n@time fibfib(2)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(3)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(4)\n</cell>\n<code language=julia-1.5>\n@time fibfib(5)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(6)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(7)\n</cell>\n<code language=julia-1.5>\n@time fibfib(8)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(9)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(10)\n</cell>\n<code language=julia-1.5>\n@time fibfib(11)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(12)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(13)\n</cell>\n<code language=julia-1.5>\n@time fibfib(14)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(15)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(16)\n</cell>\n<code language=julia-1.5>\n@time fibfib(17)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(18)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(19)\n</cell>\n<code language=julia-1.5>\n@time fibfib(20)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(21)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(22)\n</cell>\n<code language=julia-1.5>\n@time fibfib(23)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(24)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(25)\n</cell>\n<code language=julia-1.5>\n@time fibfib(26)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(27)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfi\nusing Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
    \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
    \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
    \ == 927)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp728eurz2.jl:17\nin expression starting at\
    \ /tmp/tmp728eurz2.jl:17\n"
  stdout: ''
  timestamp: 1659749204
